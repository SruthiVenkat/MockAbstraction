/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction
:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/asm-3.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/c3p0-0.9.5.3.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/derby-10.8.2.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/derbyclient-10.8.2.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/derbynet-10.8.2.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/hamcrest-core-1.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/hamcrest-library-1.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/HikariCP-java7-2.4.13.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/javaee-api-5.0-2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/junit-dep-4.8.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/log4j-1.2.16.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/mchange-commons-java-0.2.15.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/mockito-all-1.9.5.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/slf4j-api-1.7.7.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/slf4j-log4j12-1.7.7.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/typesafe-config-2.10.1.jar
it is a maven project
[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1mReactor Build Order:[m
[[1;34mINFO[m] 
[[1;34mINFO[m] quartz-parent                                                      [pom]
[[1;34mINFO[m] quartz-checkstyle                                                  [jar]
[[1;34mINFO[m] quartz-core                                                        [jar]
[[1;34mINFO[m] quartz-commonj                                                     [jar]
[[1;34mINFO[m] quartz-jboss                                                       [jar]
[[1;34mINFO[m] quartz-stubs                                                       [jar]
[[1;34mINFO[m] quartz-oracle                                                      [jar]
[[1;34mINFO[m] quartz-weblogic                                                    [jar]
[[1;34mINFO[m] quartz-jobs                                                        [jar]
[[1;34mINFO[m] quartz-plugins                                                     [jar]
[[1;34mINFO[m] quartz-terracotta-root                                             [pom]
[[1;34mINFO[m] quartz-terracotta-bootstrap                                        [jar]
[[1;34mINFO[m] quartz                                                             [jar]
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-----------------< [0;36morg.quartz-scheduler:quartz-parent[0;1m >-----------------[m
[[1;34mINFO[m] [1mBuilding quartz-parent 2.3.1                                      [1/13][m
[[1;34mINFO[m] [1m--------------------------------[ pom ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-parent[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-parent[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-parent[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m----------< [0;36morg.quartz-scheduler.internal:quartz-checkstyle[0;1m >-----------[m
[[1;34mINFO[m] [1mBuilding quartz-checkstyle 2.3.1                                  [2/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/checkstyle/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/checkstyle/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 3 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/checkstyle/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-checkstyle[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-------------< [0;36morg.quartz-scheduler.internal:quartz-core[0;1m >--------------[m
[[1;34mINFO[m] [1mBuilding quartz-core 2.3.1                                        [3/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 28 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Compiling 204 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mrmic-maven-plugin:1.1:rmic[m [1m(rmic-process-classes)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Compiling 1 remote classes
Warning: generation and use of skeletons and static stubs for JRMP
is deprecated. Skeletons are unnecessary, and static stubs have
been superseded by dynamically generated stubs. Users are
encouraged to migrate away from using rmic to generate skeletons and static
stubs. See the documentation for java.rmi.server.UnicastRemoteObject.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 23 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Compiling 71 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.10:test[m [1m(default-test)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.quartz.CronScheduleBuilderTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.121 sec
Running org.quartz.MonthlyCalendarTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.051 sec
Running org.quartz.PriorityTest
2021-04-14 17:09:23,379 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:09:23,412 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:09:23,412 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:09:23,414 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:09:23,415 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:09:23,415 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'QuartzScheduler' initialized from an externally provided properties instance.
2021-04-14 17:09:23,415 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:09:23,426 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2021-04-14 17:09:24,429 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:09:24,429 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:09:24,429 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:09:24,432 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:09:24,433 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:09:24,434 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:09:24,434 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:09:24,434 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:09:24,435 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'QuartzScheduler' initialized from an externally provided properties instance.
2021-04-14 17:09:24,435 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:09:24,436 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2021-04-14 17:09:25,438 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:09:25,439 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:09:25,439 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.262 sec
Running org.quartz.utils.DirtyFlagMapTest
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.087 sec
Running org.quartz.utils.PropertiesParserTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.076 sec
Running org.quartz.utils.ClassUtilsTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.054 sec
Running org.quartz.utils.HikariCpPoolingConnectionProviderTest
2021-04-14 17:09:38,192 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Wed Apr 14 17:09:38 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-14 17:09:39,172 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-14 17:09:39,172 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-14 17:09:39,178 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-14 17:10:27,188 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-14 17:10:27,305 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.HikariCpPoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:10:27,326 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:10:27,362 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:10:27,362 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:10:27,364 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:10:27,364 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:10:27,365 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:10:27,365 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:10:27,365 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:10:27,366 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:10:27,368 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Starting...
2021-04-14 17:10:27,379 WARN [com.zaxxer.hikari.util.DriverDataSource] - Registered driver with driverClassName=org.apache.derby.jdbc.ClientDriver was not found, trying direct instantiation.
2021-04-14 17:10:27,400 INFO [com.zaxxer.hikari.pool.PoolBase] - HikariPool-1 - Driver does not support get/set network timeout for connections. (Feature not implemented: getNetworkTimeout.)
2021-04-14 17:10:27,510 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Start completed.
2021-04-14 17:10:27,608 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:10:27,667 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:10:27,667 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:10:27,677 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:10:27,692 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:10:27,703 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:10:27,703 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:10:27,708 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:10:27,708 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:10:27,708 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:10:27,838 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Shutdown initiated...
2021-04-14 17:10:27,838 INFO [com.zaxxer.hikari.pool.HikariPool] - HikariPool-1 - Close initiated...
2021-04-14 17:10:27,842 INFO [com.zaxxer.hikari.pool.HikariPool] - HikariPool-1 - Closed.
2021-04-14 17:10:27,843 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-1 - Shutdown completed.
2021-04-14 17:10:27,843 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:10:27,843 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:10:27,846 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.HikariCpPoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:10:27,846 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:10:27,848 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:10:27,848 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:10:27,848 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:10:27,849 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:10:27,849 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:10:27,849 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:10:27,849 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:10:27,849 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:10:27,849 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-2 - Starting...
2021-04-14 17:10:27,850 WARN [com.zaxxer.hikari.util.DriverDataSource] - Registered driver with driverClassName=org.apache.derby.jdbc.ClientDriver was not found, trying direct instantiation.
2021-04-14 17:10:27,854 INFO [com.zaxxer.hikari.pool.PoolBase] - HikariPool-2 - Driver does not support get/set network timeout for connections. (Feature not implemented: getNetworkTimeout.)
2021-04-14 17:10:27,857 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-2 - Start completed.
2021-04-14 17:10:27,860 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:10:27,865 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:10:27,865 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:10:27,867 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:10:27,868 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:10:27,868 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:10:27,868 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:10:27,868 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:10:27,869 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:10:27,869 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:10:28,349 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-2 - Shutdown initiated...
2021-04-14 17:10:28,349 INFO [com.zaxxer.hikari.pool.HikariPool] - HikariPool-2 - Close initiated...
2021-04-14 17:10:28,352 INFO [com.zaxxer.hikari.pool.HikariPool] - HikariPool-2 - Closed.
2021-04-14 17:10:28,352 INFO [com.zaxxer.hikari.HikariDataSource] - HikariPool-2 - Shutdown completed.
2021-04-14 17:10:28,352 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:10:28,353 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:10:28,353 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-14 17:10:32,243 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Wed Apr 14 17:10:32 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-14 17:10:32,345 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 54.299 sec
Running org.quartz.utils.C3p0PoolingConnectionProviderTest
2021-04-14 17:10:32,884 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Wed Apr 14 17:10:33 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-14 17:10:33,874 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-14 17:10:33,874 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-14 17:10:33,878 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-14 17:10:57,719 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-14 17:10:57,834 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:10:57,867 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-14 17:10:57,905 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-14 17:10:57,948 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:10:57,982 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:10:57,982 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:10:57,983 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:10:57,985 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:10:57,986 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:10:57,986 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:10:57,986 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:10:57,986 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:10:58,018 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 5, acquireRetryAttempts -> 3, acquireRetryDelay -> 3000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mbuvl11i4flim|4df13dd0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mbuvl11i4flim|4df13dd0, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 60, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 5, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:10:58,048 WARN [com.mchange.v2.resourcepool.BasicResourcePool] - Bad pool size config, start 3 < min 5. Using 5 as start.
2021-04-14 17:10:58,247 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:10:58,347 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:10:58,348 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:10:58,359 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:10:58,372 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:10:58,374 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:10:58,375 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:10:58,379 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:10:58,379 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:10:58,379 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:10:58,461 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:10:58,462 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:10:58,464 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:10:58,481 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:10:58,482 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:10:58,482 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:10:58,482 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:10:58,482 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:10:58,482 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:10:58,482 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:10:58,483 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:10:58,483 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:10:58,490 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 5, acquireRetryAttempts -> 3, acquireRetryDelay -> 3000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mbuvl11i4flim|44a1ae4e, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mbuvl11i4flim|44a1ae4e, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 60, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 5, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:10:58,491 WARN [com.mchange.v2.resourcepool.BasicResourcePool] - Bad pool size config, start 3 < min 5. Using 5 as start.
2021-04-14 17:10:58,506 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:10:58,514 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:10:58,514 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:10:58,516 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:10:58,518 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:10:58,518 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:10:58,519 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:10:58,519 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:10:58,519 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:10:58,519 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:10:58,987 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:10:58,987 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:10:58,988 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-14 17:11:02,067 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Wed Apr 14 17:11:02 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-14 17:11:02,170 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 29.442 sec
Running org.quartz.JdbcSchedulerTest
2021-04-14 17:11:04,005 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:04,006 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:04,017 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:04,017 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:04,019 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:04,019 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler
2021-04-14 17:11:04,019 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:04,146 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:04,191 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:04,191 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:04,198 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:04,207 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:04,208 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO started.
2021-04-14 17:11:04,427 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutting down.
2021-04-14 17:11:04,427 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO paused.
2021-04-14 17:11:04,486 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:04,688 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:04,688 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:04,688 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:04,688 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:04,688 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:04,689 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler
2021-04-14 17:11:04,689 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:04,740 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:04,752 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:04,752 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:04,756 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:04,760 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:04,761 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO started.
2021-04-14 17:11:04,825 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutting down.
2021-04-14 17:11:04,825 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO paused.
2021-04-14 17:11:05,188 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:05,430 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:05,430 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:05,430 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:05,430 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:05,431 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:05,431 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler
2021-04-14 17:11:05,431 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:05,494 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutting down.
2021-04-14 17:11:05,495 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO paused.
2021-04-14 17:11:05,928 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:06,038 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:06,038 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:06,038 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:06,038 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:06,038 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:06,038 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler
2021-04-14 17:11:06,038 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:06,045 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:06,054 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:06,054 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:06,058 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:06,061 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:06,061 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO started.
2021-04-14 17:11:06,139 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutting down.
2021-04-14 17:11:06,139 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO paused.
2021-04-14 17:11:06,140 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:06,141 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-14 17:11:06,287 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:06,287 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:06,287 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:06,288 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:06,288 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:06,288 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler
2021-04-14 17:11:06,288 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:06,296 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:06,305 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:06,306 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:06,310 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:06,315 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:06,315 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO started.
2021-04-14 17:11:06,403 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutting down.
2021-04-14 17:11:06,404 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO paused.
2021-04-14 17:11:07,435 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:07,544 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:07,544 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:07,544 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:07,544 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:07,544 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:07,544 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler
2021-04-14 17:11:07,544 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:07,755 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-14 17:11:07,755 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO paused.
2021-04-14 17:11:08,044 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:08,135 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:08,135 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:08,135 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:08,135 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:08,135 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:08,135 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler
2021-04-14 17:11:08,135 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:08,145 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-14 17:11:08,146 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO paused.
2021-04-14 17:11:08,635 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:08,716 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:08,716 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:08,716 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:08,716 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:08,716 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:08,716 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler
2021-04-14 17:11:08,716 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:08,722 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:08,729 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:08,729 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:08,732 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:08,734 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:08,734 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO started.
2021-04-14 17:11:08,807 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutting down.
2021-04-14 17:11:08,808 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO paused.
2021-04-14 17:11:09,217 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:09,318 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:09,319 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:09,319 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:09,319 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:09,319 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:09,320 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler
2021-04-14 17:11:09,320 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:09,821 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutting down.
2021-04-14 17:11:09,821 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO paused.
2021-04-14 17:11:10,319 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutdown complete.
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.992 sec
Running org.quartz.Qtz205SchedulerListenerTest
2021-04-14 17:11:11,187 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:11:11,225 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:11,225 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:11,227 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:11:11,229 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:11:11,229 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'QuartzScheduler' initialized from an externally provided properties instance.
2021-04-14 17:11:11,229 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:11,230 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2021-04-14 17:11:11,231 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:11:11,245 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2021-04-14 17:11:11,253 INFO [org.quartz.Qtz205SchedulerListenerTest] - Trigger fired. count 1
2021-04-14 17:11:11,254 INFO [org.quartz.Qtz205SchedulerListenerTest] - Job executed. jobExecutionCount=1
2021-04-14 17:11:11,488 INFO [org.quartz.Qtz205SchedulerListenerTest] - Trigger fired. count 2
2021-04-14 17:11:11,488 INFO [org.quartz.Qtz205SchedulerListenerTest] - Job executed. jobExecutionCount=2
2021-04-14 17:11:11,737 INFO [org.quartz.Qtz205SchedulerListenerTest] - Trigger fired. count 3
2021-04-14 17:11:11,737 INFO [org.quartz.Qtz205SchedulerListenerTest] - Job execution vetoed.
2021-04-14 17:11:11,738 INFO [org.quartz.Qtz205SchedulerListenerTest] - triggerFinalized Trigger 'DEFAULT.test':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null
2021-04-14 17:11:16,245 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:11:16,246 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:11:16,740 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.778 sec
Running org.quartz.SimpleTriggerTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.164 sec
Running org.quartz.FlakyJdbcSchedulerTest
2021-04-14 17:11:19,101 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:19,101 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:19,105 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:19,106 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:19,108 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testTriggerFiringScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:19,108 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testTriggerFiringScheduler
2021-04-14 17:11:19,108 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:19,742 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:19,772 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:19,772 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:19,777 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:19,785 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:19,786 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO started.
2021-04-14 17:11:24,056 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutting down.
2021-04-14 17:11:24,056 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO paused.
2021-04-14 17:11:24,841 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:24,962 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:24,962 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:24,962 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:24,962 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:24,962 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:24,962 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler
2021-04-14 17:11:24,962 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:25,201 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-14 17:11:25,201 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO paused.
2021-04-14 17:11:25,972 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:26,069 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:26,069 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:26,069 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:26,069 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:26,069 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:26,069 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler
2021-04-14 17:11:26,069 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:26,078 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-14 17:11:26,078 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO paused.
2021-04-14 17:11:27,076 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:27,157 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:27,157 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:27,157 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:27,157 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:27,157 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:27,157 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler
2021-04-14 17:11:27,157 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:27,658 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutting down.
2021-04-14 17:11:27,658 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO paused.
2021-04-14 17:11:28,666 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:28,946 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:28,946 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:28,946 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:28,946 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:28,946 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:28,946 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler
2021-04-14 17:11:28,946 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:28,952 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:28,960 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:28,960 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:28,963 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:28,966 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:28,966 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO started.
2021-04-14 17:11:29,034 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutting down.
2021-04-14 17:11:29,035 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO paused.
2021-04-14 17:11:29,956 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:30,034 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:30,034 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:30,034 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:30,034 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:30,035 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:30,035 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler
2021-04-14 17:11:30,035 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:30,040 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:30,051 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:30,051 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:30,055 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:30,059 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:30,060 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO started.
2021-04-14 17:11:30,152 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutting down.
2021-04-14 17:11:30,152 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO paused.
2021-04-14 17:11:31,042 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:31,130 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:31,130 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:31,130 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:31,131 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:31,131 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:31,131 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler
2021-04-14 17:11:31,131 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:31,153 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:31,161 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:31,161 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:31,164 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:31,166 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:31,166 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO started.
2021-04-14 17:11:31,218 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutting down.
2021-04-14 17:11:31,218 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO paused.
2021-04-14 17:11:32,139 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:32,209 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:32,209 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:32,209 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:32,209 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:32,210 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:32,210 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler
2021-04-14 17:11:32,210 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:32,240 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutting down.
2021-04-14 17:11:32,240 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO paused.
2021-04-14 17:11:33,218 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:33,285 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:33,285 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:33,285 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:33,285 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:33,285 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:33,285 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler
2021-04-14 17:11:33,285 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:33,290 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:33,297 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:33,297 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:33,300 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:33,302 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:33,303 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO started.
2021-04-14 17:11:33,382 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutting down.
2021-04-14 17:11:33,382 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO paused.
2021-04-14 17:11:33,891 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:33,892 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-14 17:11:33,967 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:33,967 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:33,968 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:33,968 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:33,968 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:33,968 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler
2021-04-14 17:11:33,968 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:33,973 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:33,980 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:33,980 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:33,982 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:33,985 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:33,985 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO started.
2021-04-14 17:11:34,054 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutting down.
2021-04-14 17:11:34,054 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO paused.
2021-04-14 17:11:35,591 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:35,666 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:35,666 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:35,666 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:35,666 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:35,666 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testTriggerFiringScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:35,666 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testTriggerFiringScheduler
2021-04-14 17:11:35,667 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:35,781 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:35,788 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:35,788 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:35,791 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:35,793 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:35,793 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO started.
2021-04-14 17:11:35,938 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:35,977 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName9':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:35,984 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:35,992 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,003 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,175 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName20':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,276 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,390 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName32':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,395 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,466 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,533 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName44':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,539 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,541 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,593 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,596 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,603 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,606 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,609 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,614 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,617 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,620 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,621 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,628 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,631 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,643 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName50':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,651 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,660 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,723 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,800 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName69':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,811 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,819 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName75':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,856 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,867 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,869 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName79':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,885 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName84':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,896 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName87':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:36,958 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName89':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,010 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,065 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,118 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName90':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,136 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,138 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,143 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,152 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,209 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName2':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,213 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,215 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName4':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,334 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,383 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,403 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName17':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,404 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,406 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName17':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,474 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName22':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,542 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,552 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,553 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,607 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName29':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,609 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName29':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,610 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,611 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName29':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,620 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,667 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName34':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,728 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName39':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,737 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,789 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName41':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,799 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,802 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,819 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName51':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,825 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,828 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,840 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,842 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,844 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,851 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,984 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:37,995 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,000 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName73':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,009 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,014 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName75':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,067 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName75':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,074 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName77':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,084 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,097 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName85':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,097 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,155 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,162 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,163 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName90':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,226 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,332 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,336 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,344 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName97':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,347 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName97':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,356 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,367 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,373 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,427 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,429 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName11':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,595 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,602 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName18':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,609 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName19':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,632 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,641 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,663 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,665 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,766 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,777 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,793 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName37':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,800 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,914 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,916 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName44':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,919 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,921 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:38,995 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,000 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName51':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,040 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,212 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName59':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,289 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,330 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,332 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName69':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,346 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,350 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName72':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,475 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName76':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,478 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,487 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@2f133245
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:11:39,543 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,591 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName84':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,600 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName87':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,656 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,667 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName91':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,734 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName98':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,746 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,754 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,817 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName7':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,820 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,828 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName10':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,880 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,898 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName17':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,900 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,903 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName19':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,906 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName21':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,908 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,912 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName22':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,975 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:39,976 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,027 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,092 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,093 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,148 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,152 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,206 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName36':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,214 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,218 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName39':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,270 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName42':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,272 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,280 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName46':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,281 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,375 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@2687ad32
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:11:40,452 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,457 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,467 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,468 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,570 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,573 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,580 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,581 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName60':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,581 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,638 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,644 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName64':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,699 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,755 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,765 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,768 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,820 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,826 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,831 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName80':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,834 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,881 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,935 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,944 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:40,996 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName87':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,000 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName86':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,003 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,007 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName89':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,014 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,070 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,074 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName95':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,076 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName95':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,134 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName98':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,160 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName99':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,200 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,204 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName7':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,205 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,374 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName21':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,374 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,430 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,438 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,543 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,595 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName28':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,609 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,657 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,659 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,728 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:41,786 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:42,030 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:42,115 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName53':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:42,119 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName53':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:42,120 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:42,141 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutting down.
2021-04-14 17:11:42,141 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO paused.
2021-04-14 17:11:43,234 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:43,304 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:43,304 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:43,304 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:43,304 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:43,304 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:43,304 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler
2021-04-14 17:11:43,304 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:43,422 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-14 17:11:43,422 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO paused.
2021-04-14 17:11:44,312 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:44,373 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:44,373 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:44,373 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:44,373 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:44,373 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:44,373 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler
2021-04-14 17:11:44,373 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:44,379 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-14 17:11:44,379 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO paused.
2021-04-14 17:11:45,381 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:45,440 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:45,440 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:45,440 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:45,440 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:45,440 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:45,440 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler
2021-04-14 17:11:45,440 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:45,941 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutting down.
2021-04-14 17:11:45,941 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO paused.
2021-04-14 17:11:46,948 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:47,208 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:47,208 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:47,208 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:47,208 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:47,208 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:47,208 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler
2021-04-14 17:11:47,208 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:47,212 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:47,219 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:47,219 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:47,222 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:47,226 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:47,226 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO started.
2021-04-14 17:11:47,279 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutting down.
2021-04-14 17:11:47,279 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO paused.
2021-04-14 17:11:48,217 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:48,274 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:48,274 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:48,275 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:48,275 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:48,275 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:48,275 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler
2021-04-14 17:11:48,275 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:48,282 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:48,290 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:48,290 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:48,292 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:48,294 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:48,294 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO started.
2021-04-14 17:11:48,335 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:48,336 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutting down.
2021-04-14 17:11:48,336 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO paused.
2021-04-14 17:11:49,295 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:49,362 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:49,362 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:49,363 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:49,363 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:49,363 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:49,363 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler
2021-04-14 17:11:49,363 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:49,378 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:49,384 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:49,384 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:49,386 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:49,388 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:49,388 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO started.
2021-04-14 17:11:49,388 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedAfter': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:49,428 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutting down.
2021-04-14 17:11:49,428 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO paused.
2021-04-14 17:11:49,578 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@51c24471
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedAfter': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:11:50,371 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:50,425 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:50,425 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:50,425 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:50,425 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:50,426 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:50,426 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler
2021-04-14 17:11:50,426 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:50,448 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutting down.
2021-04-14 17:11:50,448 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO paused.
2021-04-14 17:11:51,433 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:51,508 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:51,508 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:51,508 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:51,509 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:51,509 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:51,509 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler
2021-04-14 17:11:51,509 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:51,514 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:51,520 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:51,520 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:51,523 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:51,527 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:51,527 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO started.
2021-04-14 17:11:51,599 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutting down.
2021-04-14 17:11:51,599 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO paused.
2021-04-14 17:11:52,107 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:52,107 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-14 17:11:52,163 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:52,163 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:52,163 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:52,163 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:52,163 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:52,163 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler
2021-04-14 17:11:52,163 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:52,167 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:52,176 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:52,176 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:52,180 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:52,182 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:52,182 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO started.
2021-04-14 17:11:52,183 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Failed to obtain DB connection from data source 'testShutdownWithWaitIsClean': java.sql.SQLException: FlakyConnection failed on you on creation.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testShutdownWithWaitIsClean': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3246)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:11:52,250 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutting down.
2021-04-14 17:11:52,251 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO paused.
2021-04-14 17:11:53,830 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutdown complete.
2021-04-14 17:11:53,887 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:11:53,887 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:11:53,887 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:11:53,887 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:11:53,887 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testTriggerFiringScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:11:53,887 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testTriggerFiringScheduler
2021-04-14 17:11:53,887 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:11:53,974 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:11:53,981 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:11:53,981 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:11:53,985 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:11:53,988 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:11:53,988 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO started.
2021-04-14 17:11:54,001 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:54,051 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName0':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:54,074 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:54,080 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:54,555 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:54,641 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName11':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:54,698 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:54,706 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName13':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:54,819 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName16':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:54,881 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName17':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:54,937 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName17':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:54,992 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,006 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,117 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,184 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,187 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,191 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,211 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,216 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,277 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,383 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,395 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,514 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,571 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName46':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,626 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,634 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:55,740 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName49':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,019 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName54':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,032 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,034 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,079 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,144 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName59':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,155 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,269 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName63':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,279 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,284 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,349 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName72':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,351 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,356 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,359 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,420 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,425 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,431 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,436 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName84':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,440 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,452 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,455 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,517 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName93':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,572 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,645 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName99':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,654 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName98':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:54 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,759 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,832 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName3':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,887 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:56,951 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,026 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,251 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,271 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName19':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,326 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,386 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,393 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,488 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,554 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName25':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,559 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,573 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,578 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,648 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,710 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,773 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName39':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,775 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,783 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,893 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName44':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,898 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName44':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:57,902 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,018 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,072 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,092 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,095 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,097 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,108 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,216 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName65':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,219 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,293 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,468 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,473 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName76':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,475 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName76':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,566 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName75':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,722 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,782 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,791 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName79':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,844 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName79':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,851 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,916 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,921 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,931 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName89':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:58,991 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:59,153 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:59,362 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@36e8daee
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:11:59,414 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName95':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:55 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:59,637 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName2':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:59,743 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName4':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:59,859 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName7':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:11:59,976 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,029 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName10':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,091 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName11':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,093 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,097 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,106 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName19':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,107 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,164 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName20':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,167 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,177 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,182 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName25':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,244 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,246 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,302 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName28':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,304 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,410 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName28':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,416 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,418 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,470 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,473 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,577 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,794 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,908 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,972 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:00,992 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,047 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,056 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,110 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName49':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,165 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,170 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName49':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,223 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,284 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,402 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,404 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,468 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,680 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName64':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,683 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,793 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,795 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,956 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,969 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:01,978 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,082 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName75':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,201 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,332 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName80':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,384 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,389 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName84':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,393 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,395 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName86':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,398 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,506 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName88':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,520 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName91':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,523 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,527 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,532 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,587 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,692 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,696 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,700 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,807 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,817 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName98':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,819 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName98':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,874 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName98':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:56 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:02,927 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,035 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,043 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,097 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName4':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,154 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,264 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,328 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName9':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,444 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,491 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,495 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,500 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName19':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,504 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName18':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,511 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName21':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,515 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName23':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,571 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName24':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,625 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,631 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,635 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,738 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,741 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,744 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,746 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,747 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,753 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,857 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,912 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,918 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,979 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName39':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:03,984 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName41':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,044 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,096 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,209 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,213 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,216 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,233 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,236 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,256 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName61':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,259 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,264 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName63':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,368 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName63':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,377 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,382 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName66':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,429 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,436 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName70':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,538 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,708 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,762 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,815 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,818 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName80':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,872 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,878 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName82':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,937 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:04,993 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName85':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,005 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,009 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,011 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName90':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,073 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,076 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName96':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,081 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName95':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:11:57 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,188 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,198 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,216 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName2':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,224 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName4':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,344 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,358 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,368 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName19':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,416 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,426 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,431 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName20':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,485 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,492 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,545 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,547 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName26':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,551 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName28':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,555 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,607 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,660 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,715 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName30':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,769 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,874 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName32':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,931 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:05,984 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:06,037 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:06,042 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:06,096 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName37':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:06,160 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName42':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:06,162 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:06,268 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutting down.
2021-04-14 17:12:06,268 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO paused.
2021-04-14 17:12:06,272 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:07,279 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:07,338 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:07,338 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:07,338 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:07,338 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:07,338 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:07,338 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler
2021-04-14 17:12:07,338 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:07,417 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-14 17:12:07,417 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO paused.
2021-04-14 17:12:08,345 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:08,400 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:08,400 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:08,400 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:08,400 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:08,400 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:08,400 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler
2021-04-14 17:12:08,401 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:08,406 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-14 17:12:08,406 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO paused.
2021-04-14 17:12:09,407 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:09,471 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:09,471 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:09,471 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:09,471 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:09,471 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:09,471 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler
2021-04-14 17:12:09,471 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:09,972 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutting down.
2021-04-14 17:12:09,972 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO paused.
2021-04-14 17:12:10,977 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:11,239 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:11,239 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:11,239 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:11,239 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:11,239 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:11,239 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler
2021-04-14 17:12:11,239 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:11,243 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:12:11,248 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:12:11,249 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:12:11,251 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:12:11,253 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:12:11,253 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO started.
2021-04-14 17:12:11,259 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:11,299 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutting down.
2021-04-14 17:12:11,299 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO paused.
2021-04-14 17:12:12,269 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:12,337 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:12,337 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:12,337 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:12,337 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:12,337 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:12,337 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler
2021-04-14 17:12:12,337 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:12,341 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:12:12,347 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:12:12,347 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:12:12,349 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:12:12,350 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:12:12,351 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO started.
2021-04-14 17:12:12,363 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:12,397 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutting down.
2021-04-14 17:12:12,397 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO paused.
2021-04-14 17:12:13,343 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:13,395 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:13,395 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:13,395 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:13,395 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:13,395 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:13,395 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler
2021-04-14 17:12:13,395 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:13,409 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:12:13,414 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:12:13,414 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:12:13,416 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:12:13,418 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:12:13,418 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO started.
2021-04-14 17:12:13,450 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutting down.
2021-04-14 17:12:13,450 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO paused.
2021-04-14 17:12:13,452 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:14,401 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:14,455 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:14,455 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:14,455 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:14,455 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:14,455 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:14,455 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler
2021-04-14 17:12:14,455 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:14,474 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutting down.
2021-04-14 17:12:14,474 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO paused.
2021-04-14 17:12:15,462 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:15,515 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:15,515 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:15,515 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:15,515 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:15,515 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:15,515 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler
2021-04-14 17:12:15,515 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:15,519 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:12:15,526 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:12:15,526 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:12:15,529 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:12:15,531 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:12:15,531 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO started.
2021-04-14 17:12:15,596 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutting down.
2021-04-14 17:12:15,596 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO paused.
2021-04-14 17:12:16,102 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:16,102 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-14 17:12:16,154 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:16,154 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:16,154 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:16,154 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:16,154 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:16,154 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler
2021-04-14 17:12:16,155 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:16,158 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:12:16,163 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:12:16,163 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:12:16,165 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:12:16,167 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:12:16,167 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO started.
2021-04-14 17:12:16,314 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:16,329 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:16,343 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutting down.
2021-04-14 17:12:16,343 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO paused.
2021-04-14 17:12:17,865 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:17,918 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:17,918 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:17,918 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:17,918 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:17,918 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testTriggerFiringScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:17,918 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testTriggerFiringScheduler
2021-04-14 17:12:17,918 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:17,991 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:12:17,996 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:12:17,996 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:12:17,997 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:12:17,999 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:12:17,999 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO started.
2021-04-14 17:12:18,006 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:19,207 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@15ec5d79
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:22,153 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@4bface7b
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:12:24,142 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutting down.
2021-04-14 17:12:24,143 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO paused.
2021-04-14 17:12:24,269 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@6d3bdfb3
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:12:25,173 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:25,220 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:25,220 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:25,221 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:25,221 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:25,221 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:25,221 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler
2021-04-14 17:12:25,221 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:25,304 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-14 17:12:25,304 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO paused.
2021-04-14 17:12:26,225 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:26,276 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:26,276 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:26,276 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:26,276 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:26,276 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:26,276 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler
2021-04-14 17:12:26,276 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:26,282 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-14 17:12:26,282 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO paused.
2021-04-14 17:12:27,283 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:27,344 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:27,344 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:27,344 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:27,344 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:27,344 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:27,344 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler
2021-04-14 17:12:27,344 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:27,845 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutting down.
2021-04-14 17:12:27,845 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO paused.
2021-04-14 17:12:28,849 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:29,100 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:29,100 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:29,100 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:29,101 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:29,101 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:29,101 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler
2021-04-14 17:12:29,101 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:29,104 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:12:29,109 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:12:29,109 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:12:29,110 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:12:29,112 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:12:29,112 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO started.
2021-04-14 17:12:29,120 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:29,157 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutting down.
2021-04-14 17:12:29,157 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO paused.
2021-04-14 17:12:29,158 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:30,108 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:30,158 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:30,158 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:30,158 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:30,158 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:30,158 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:30,158 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler
2021-04-14 17:12:30,158 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:30,162 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:12:30,167 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:12:30,167 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:12:30,168 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:12:30,170 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:12:30,170 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO started.
2021-04-14 17:12:30,211 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutting down.
2021-04-14 17:12:30,211 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO paused.
2021-04-14 17:12:31,166 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:31,215 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:31,215 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:31,215 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:31,215 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:31,215 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:31,215 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler
2021-04-14 17:12:31,215 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:31,228 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:12:31,232 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:12:31,233 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:12:31,234 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:12:31,236 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:12:31,236 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO started.
2021-04-14 17:12:31,270 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutting down.
2021-04-14 17:12:31,270 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO paused.
2021-04-14 17:12:32,223 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:32,274 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:32,274 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:32,275 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:32,275 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:32,275 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:32,275 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler
2021-04-14 17:12:32,275 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:32,292 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutting down.
2021-04-14 17:12:32,292 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO paused.
2021-04-14 17:12:33,282 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:33,331 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:33,331 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:33,331 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:33,331 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:33,331 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:33,331 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler
2021-04-14 17:12:33,331 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:33,334 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:12:33,339 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:12:33,339 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:12:33,341 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:12:33,343 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:12:33,343 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO started.
2021-04-14 17:12:33,410 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutting down.
2021-04-14 17:12:33,410 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO paused.
2021-04-14 17:12:33,435 WARN [org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler] - Failed restore connection's original auto commit setting.
java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy9.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3896)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:200)
	... 6 more
Caused by: java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.setAutoCommit(Unknown Source)
	... 10 more
Caused by: java.sql.SQLException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 16 more
2021-04-14 17:12:33,436 ERROR [org.quartz.core.QuartzSchedulerThread] - quartzSchedulerThreadLoop: RuntimeException null
java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy9.rollback(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3889)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:200)
	... 10 more
Caused by: java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.setupContextStack(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.rollback(Unknown Source)
	... 14 more
Caused by: java.sql.SQLException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 21 more
2021-04-14 17:12:33,916 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:33,916 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-14 17:12:33,960 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:33,961 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:33,961 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:33,961 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:33,961 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:33,961 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler
2021-04-14 17:12:33,961 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:33,967 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:12:33,976 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:12:33,976 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:12:33,977 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:12:33,979 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:12:33,979 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO started.
2021-04-14 17:12:33,986 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:34,045 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutting down.
2021-04-14 17:12:34,046 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO paused.
2021-04-14 17:12:35,570 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutdown complete.
2021-04-14 17:12:35,622 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:12:35,622 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:12:35,622 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:12:35,622 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:12:35,623 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testTriggerFiringScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:12:35,623 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testTriggerFiringScheduler
2021-04-14 17:12:35,623 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:12:35,692 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:12:35,696 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:12:35,696 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:12:35,698 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:12:35,699 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:12:35,700 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO started.
2021-04-14 17:12:35,706 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:35,732 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName2':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:35,890 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:35,943 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName2':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:36,154 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@28fd8df3
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:36,313 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:36,414 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:36,576 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName8':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:36,630 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName8':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:36,633 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:36,636 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName7':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:36,639 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName7':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:36,639 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:36,693 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:36,845 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@152cf335
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:12:36,946 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:36,949 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName14':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:36,955 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName14':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:37,008 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName14':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:37,061 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName14':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:37,119 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:37,282 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:37,433 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName20':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:37,487 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:37,545 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:37,704 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName22':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:37,757 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:37,760 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName21':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:37,916 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:38,283 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName28':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:38,338 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@20fed34b
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:12:38,344 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:38,716 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:38,763 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@1ef97505
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:12:38,869 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@20f9db36
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-14 17:12:38,921 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:38,921 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:39,123 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:39,125 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName37':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:39,182 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:39,299 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName44':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:39,451 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@1ced230d
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-14 17:12:39,655 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@1ced230d
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-14 17:12:39,708 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName44':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:39,715 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:39,717 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:39,925 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:40,028 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:40,084 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:40,086 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:40,240 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:40,397 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@4f6af5c9
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:40,448 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:40,607 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:40,661 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:40,713 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:40,716 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:40,770 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:41,083 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:41,237 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:41,393 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:41,402 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName49':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:41,407 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:41,775 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@3af6e58c
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:41,826 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName55':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:41,829 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName55':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:41,830 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:41,937 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:41,939 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName54':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:42,095 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@49e4186d
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:42,198 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName54':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:42,253 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName54':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:42,406 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@26a295c9
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-14 17:12:42,512 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName54':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:42,616 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:42,729 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName60':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:42,782 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:42,785 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName60':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:42,937 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@581dfb81
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 5 more
2021-04-14 17:12:43,144 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:43,147 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName59':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:43,148 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:43,251 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName59':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:43,266 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName65':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:43,296 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@7fa3d774
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:12:43,581 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:43,587 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:43,593 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:43,759 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName73':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:43,815 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName72':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:43,917 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:43,921 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName75':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:43,924 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:43,925 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName75':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:43,978 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName75':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:44,184 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:44,239 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:44,398 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:44,553 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName78':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:44,660 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:44,766 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:45,275 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:45,486 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@23508e51
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:12:45,487 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@4d8b6b0
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:45,589 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName82':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:45,747 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:45,904 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@7f5202e7
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-14 17:12:46,107 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@7f5202e7
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:46,208 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:46,210 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName84':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:46,365 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:46,418 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName84':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:46,469 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:46,628 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:46,835 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@4364829a
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:46,936 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:47,155 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName90':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:47,156 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:47,213 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName89':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:47,214 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:47,246 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@63ce59ce
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:12:47,267 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName89':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:47,370 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:47,430 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName91':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:47,430 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:47,688 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName91':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:47,693 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:47,897 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:48,052 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:48,156 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:48,208 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName94':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:48,366 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@3daffa2a
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:48,417 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName93':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:48,421 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:48,523 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName96':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:48,524 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:48,526 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName96':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:35 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:48,529 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName96':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:48,587 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName98':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:48,684 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@47c394d2
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:12:48,790 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName2':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:48,793 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:48,897 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:49,004 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName3':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:49,007 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:49,017 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:49,057 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:49,164 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName7':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:49,171 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:49,380 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:49,391 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:49,543 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@5ddb464c
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-14 17:12:49,647 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName13':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:49,853 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@38c4ad0a
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:50,005 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName13':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:50,057 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:50,113 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:50,120 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:50,171 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName18':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:50,223 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:50,264 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@1c80a0ec
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:12:50,380 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@6b89a5c2
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-14 17:12:50,435 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName20':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:50,538 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:50,695 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@317c072b
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:12:50,748 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName21':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:50,751 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:50,955 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@5dfae4ad
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:12:51,016 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:51,217 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@7b1daa71
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:51,423 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName30':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:51,480 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:51,532 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName29':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:51,637 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:51,639 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName29':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:51,797 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName32':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:51,952 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:52,159 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:52,272 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:52,318 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@641ed26a
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:12:52,330 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:52,332 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:52,334 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:52,437 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:52,448 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName40':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:52,449 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:52,594 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@2570090c
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:12:52,612 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:52,723 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:52,981 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName44':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:52,989 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:52,992 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:52,996 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:53,049 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:53,100 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:53,262 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName46':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:53,416 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@5081fda4
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-14 17:12:53,571 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName46':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:53,675 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:53,677 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName46':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:53,733 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName46':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:53,735 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:53,946 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@40ba794
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:54,155 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:54,307 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@541786a
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 5 more
2021-04-14 17:12:54,513 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:54,516 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:54,519 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:54,625 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName50':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:54,730 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:54,778 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@1305eace
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:12:54,881 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:55,140 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:55,144 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:55,202 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:55,460 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@6f2d892d
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:12:55,515 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:55,677 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@2934c84c
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:12:55,778 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName60':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:55,836 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName59':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:56,096 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@48091950
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:12:56,099 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@7e0dfe6
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:12:56,406 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@2c63b806
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-14 17:12:56,609 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName62':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:56,615 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName65':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:56,721 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName64':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:56,829 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:56,982 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@3c93cdb8
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-14 17:12:57,134 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:57,341 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@21699095
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:12:57,496 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:57,498 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName66':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:57,504 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:57,596 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:57,660 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@a6e16d2
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:12:57,803 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@75e75069
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:12:57,821 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName70':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:57,976 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName70':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:58,007 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@75e75069
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:12:58,061 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:58,115 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName73':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:58,123 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:58,176 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:58,241 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName76':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:58,244 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:58,399 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName76':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:58,402 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName76':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:58,511 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName80':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:58,724 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName82':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:58,874 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@67c559fc
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:12:59,029 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:59,289 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:59,291 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:59,505 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName86':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:36 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:59,672 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:12:59,726 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:12:59,783 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName91':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:00,099 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@21680c4f
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:00,207 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:00,213 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:00,221 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName99':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:00,225 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:00,329 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName0':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:00,384 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:00,541 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:00,850 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:00,949 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@a47369a
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:01,003 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:01,066 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@7f5cfd00
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:01,111 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:01,374 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@150ce087
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:13:01,378 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@374400ea
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:13:01,488 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName9':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:01,590 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:01,848 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:02,003 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName12':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:02,159 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:02,162 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:02,418 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName11':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:02,421 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName11':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:02,422 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:02,427 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:02,631 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName14':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:02,632 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:02,944 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:02,997 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:02,997 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:02,998 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:02,999 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:03,151 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@14e0d61b
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-14 17:13:03,362 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:03,621 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@1ccfad8b
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:03,672 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:03,726 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName20':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:03,878 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@52914666
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-14 17:13:04,035 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName19':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:04,037 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName19':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:04,352 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@4adb54b5
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:04,356 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:04,512 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:04,568 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:04,679 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName28':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:04,686 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:04,890 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName30':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:05,049 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName32':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:05,204 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@27e0d867
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-14 17:13:05,258 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:05,364 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName34':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:05,471 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:05,477 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName36':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:05,683 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:05,838 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@5e03fd33
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-14 17:13:05,889 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName36':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:05,892 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName36':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:06,045 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@66ac5bec
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-14 17:13:06,148 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:06,155 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:06,208 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:06,209 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:06,212 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:06,214 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:06,520 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName38':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:06,826 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@4ab429c2
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-14 17:13:06,877 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:06,883 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName37':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:06,883 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:07,092 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@62e70092
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:07,151 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:07,294 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@62e70092
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:13:07,414 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@56fd309c
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:13:07,452 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:07,763 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:07,777 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName49':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:07,778 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:08,017 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName51':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:08,024 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName54':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:08,129 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:08,233 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:08,387 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@71ec837d
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:08,490 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:08,642 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@4785b613
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 5 more
2021-04-14 17:13:08,695 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName56':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:08,695 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:08,699 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:08,814 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName61':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:08,915 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:08,926 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName65':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:08,927 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:08,980 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName64':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:09,032 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName64':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:09,186 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@79f16a90
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:09,287 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:09,394 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:09,395 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:09,399 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName67':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:09,506 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:09,562 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:09,819 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName68':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:09,820 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:09,874 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName68':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:10,029 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName68':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:10,031 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName68':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:10,086 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName71':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:10,088 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName71':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:10,295 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:10,352 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName75':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:10,352 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:10,354 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName75':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:10,558 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@5770dfa3
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:10,714 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:10,716 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:10,718 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:10,931 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName76':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:11,087 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@140cbd37
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:13:11,135 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:11,137 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName80':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:11,293 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@48d77221
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:11,344 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:11,402 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName82':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:11,455 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:11,509 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName82':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:11,563 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:11,622 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:11,730 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:11,834 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName85':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:11,991 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:12,145 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@5fb959a0
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:13:12,250 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:12,304 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:12,307 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:12,309 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName91':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:12,366 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName93':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:12,468 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:12,473 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:12,579 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:12,635 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName97':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:12,792 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName99':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:37 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:12,898 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:12,902 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName2':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:13,006 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName2':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:13,013 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:13,070 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:13,224 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@5f1a15d1
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:13,428 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName5':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:13,432 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName5':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:13,538 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:13,593 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:14,004 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@7de2b399
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:14,206 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName7':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:14,209 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:14,216 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName9':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:14,370 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@25023169
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-14 17:13:14,578 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:14,732 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName14':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:14,735 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:14,739 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:14,944 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:14,948 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:15,003 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:15,005 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName18':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:15,103 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@3057b2ac
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:15,306 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@3057b2ac
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:13:15,315 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@4eb8e029
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:13:15,469 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:15,523 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:15,525 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName22':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:15,730 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:15,939 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:15,942 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName21':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:15,943 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:16,045 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName21':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:16,198 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@2a11af0a
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 5 more
2021-04-14 17:13:16,406 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName24':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:16,557 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@1e2b156
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:16,668 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:16,876 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName28':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:16,929 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:16,932 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:17,037 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:17,190 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:17,193 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:17,246 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:17,350 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:17,452 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:17,557 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:17,558 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:17,610 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName27':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:17,618 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName29':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:17,771 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:17,879 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName32':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:17,880 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:17,935 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:17,936 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:18,029 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@5759b9c
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:13:18,088 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@330cbdec
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-14 17:13:18,298 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:18,399 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:18,400 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:18,401 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:18,552 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@6a905357
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 5 more
2021-04-14 17:13:18,604 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:18,658 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:18,763 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:18,764 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:18,870 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName35':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:18,978 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:18,981 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:19,078 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:19,080 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName39':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:19,240 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:19,293 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:19,349 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:19,502 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName43':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:19,508 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:19,562 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName46':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:19,667 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:19,877 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:19,877 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:20,046 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:20,261 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:20,369 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:20,529 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:20,532 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:20,636 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:20,690 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:20,693 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:20,744 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:20,797 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:21,059 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName60':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:21,215 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@164f154b
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-14 17:13:21,268 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:21,274 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:21,324 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:21,381 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:21,438 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:21,485 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:21,539 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:21,648 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName70':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:21,650 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:21,806 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@3203625b
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:22,012 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:22,067 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName72':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:22,067 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:22,222 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName72':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:22,381 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:22,383 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName74':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:22,486 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:22,740 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@20b70a1c
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-14 17:13:22,946 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName78':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:23,001 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName78':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:23,004 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName78':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:23,155 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@4118cdd3
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 5 more
2021-04-14 17:13:23,259 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName78':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:23,260 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:23,263 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName78':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:23,320 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:23,325 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:23,472 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@3f05cd24
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:23,591 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@1934fcca
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 6 more
2021-04-14 17:13:23,642 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:23,646 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName81':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:23,817 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName87':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:23,869 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:24,025 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:24,234 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:24,236 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName92':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:24,392 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName92':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:24,399 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName91':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:24,560 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName93':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:24,561 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:24,562 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName93':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:24,617 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:24,620 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName96':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:24,930 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:25,085 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@4ad550ca
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:25,136 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName98':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:25,190 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName98':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:38 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:25,342 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@1b2898cd
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 5 more
2021-04-14 17:13:25,544 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@1b2898cd
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 5 more
2021-04-14 17:13:25,851 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@4e833213
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 7 more
2021-04-14 17:13:25,857 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@713c7573
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:25,976 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:26,031 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:26,032 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:26,034 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:26,090 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:26,192 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName3':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:26,193 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:26,194 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@33598c91
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:26,348 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@264aa103
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:26,454 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:26,460 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:26,781 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName9':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:26,883 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:27,196 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@451a26aa
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:27,248 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:27,511 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName15':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:27,515 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName16':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:27,671 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName16':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:27,828 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:28,139 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@26b234d8
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:28,257 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName21':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:28,410 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@14aea647
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:28,460 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:28,673 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName24':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:28,677 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName24':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:28,730 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:28,990 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName23':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:28,993 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName23':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:28,993 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:28,996 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName23':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:29,099 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:29,101 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName23':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:29,154 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName23':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:29,156 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName23':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:29,259 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:29,372 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:29,484 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName31':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:29,688 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:29,691 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:29,900 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:29,902 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName33':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:30,008 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:30,274 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@7af82110
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:30,438 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName40':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:30,492 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:30,803 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName42':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:30,957 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$43@19d0c91b
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.releaseAcquiredTrigger(JobStoreSupport.java:2940)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:363)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 4 more
2021-04-14 17:13:31,059 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName42':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:31,214 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName42':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:31,370 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:31,633 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:31,786 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@100b186a
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:31,840 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName45':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:31,891 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:31,894 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:32,005 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:32,055 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@74b186be
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:32,159 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName48':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:32,210 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:32,315 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName47':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:32,473 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:32,476 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName49':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:32,479 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:32,585 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:32,694 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:32,743 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:32,905 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:33,238 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$47@2d6c725d
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 5 more
2021-04-14 17:13:33,396 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:33,398 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName58':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:33,453 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:33,457 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:33,518 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName59':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:12:39 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:33,518 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:33,615 ERROR [org.quartz.core.ErrorLogger] - An error occurred while org.quartz.impl.jdbcjobstore.JobStoreSupport$46@35125086
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 6 more
2021-04-14 17:13:33,667 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:33,721 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName63':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:33,722 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testTriggerFiring': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:33,835 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutting down.
2021-04-14 17:13:33,835 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO paused.
2021-04-14 17:13:33,925 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'triggerGroup.triggerName63':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:34,687 INFO [org.quartz.core.QuartzScheduler] - Scheduler testTriggerFiringScheduler_$_AUTO shutdown complete.
2021-04-14 17:13:34,736 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:13:34,736 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:13:34,736 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:13:34,736 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:13:34,736 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:13:34,736 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler
2021-04-14 17:13:34,736 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:13:34,817 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-14 17:13:34,817 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO paused.
2021-04-14 17:13:35,741 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-14 17:13:35,799 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:13:35,799 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:13:35,799 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:13:35,799 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:13:35,799 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:13:35,799 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler
2021-04-14 17:13:35,799 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:13:35,804 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutting down.
2021-04-14 17:13:35,804 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO paused.
2021-04-14 17:13:36,806 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_AUTO shutdown complete.
2021-04-14 17:13:36,852 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:13:36,852 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:13:36,852 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:13:36,852 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:13:36,852 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:13:36,852 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler
2021-04-14 17:13:36,852 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:13:37,353 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutting down.
2021-04-14 17:13:37,353 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO paused.
2021-04-14 17:13:38,358 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_AUTO shutdown complete.
2021-04-14 17:13:38,605 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:13:38,605 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:13:38,605 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:13:38,605 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:13:38,605 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:13:38,605 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler
2021-04-14 17:13:38,605 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:13:38,608 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:13:38,612 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:13:38,612 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:13:38,614 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:13:38,615 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:13:38,615 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO started.
2021-04-14 17:13:38,623 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:38,648 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedBefore': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:38,648 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutting down.
2021-04-14 17:13:38,649 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO paused.
2021-04-14 17:13:39,611 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_AUTO shutdown complete.
2021-04-14 17:13:39,659 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:13:39,659 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:13:39,659 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:13:39,659 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:13:39,659 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:13:39,659 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler
2021-04-14 17:13:39,659 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:13:39,662 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:13:39,667 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:13:39,667 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:13:39,668 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:13:39,670 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:13:39,670 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO started.
2021-04-14 17:13:39,670 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:39,679 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:39,706 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'DEFAULT.MT_4uuuuv0m1j98d':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: null]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:39,763 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:39,763 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutting down.
2021-04-14 17:13:39,763 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO paused.
2021-04-14 17:13:40,665 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_AUTO shutdown complete.
2021-04-14 17:13:40,711 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:13:40,711 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:13:40,711 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:13:40,711 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:13:40,711 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:13:40,711 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler
2021-04-14 17:13:40,711 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:13:40,723 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:13:40,727 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:13:40,727 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:13:40,728 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:13:40,730 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:13:40,730 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO started.
2021-04-14 17:13:40,738 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3267)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:40,754 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:40,764 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutting down.
2021-04-14 17:13:40,764 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO paused.
2021-04-14 17:13:41,717 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_AUTO shutdown complete.
2021-04-14 17:13:41,765 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:13:41,765 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:13:41,765 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:13:41,765 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:13:41,765 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:13:41,765 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler
2021-04-14 17:13:41,765 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:13:41,780 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutting down.
2021-04-14 17:13:41,780 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO paused.
2021-04-14 17:13:42,771 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_AUTO shutdown complete.
2021-04-14 17:13:42,828 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:13:42,828 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:13:42,828 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:13:42,828 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:13:42,828 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:13:42,828 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler
2021-04-14 17:13:42,828 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:13:42,831 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:13:42,836 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:13:42,836 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:13:42,838 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:13:42,839 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:13:42,840 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO started.
2021-04-14 17:13:42,840 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Failed to obtain DB connection from data source 'testShutdownWithoutWaitIsUnclean': java.sql.SQLException: FlakyConnection failed on you on creation.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testShutdownWithoutWaitIsUnclean': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3246)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:42,846 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testShutdownWithoutWaitIsUnclean': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:42,914 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'DEFAULT.6da64b5bd2ee-7f360d18-22e3-4312-929f-4a5ce5f1cd4e':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:13:42 EDT 2021]'
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testShutdownWithoutWaitIsUnclean': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:43,019 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you pre-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you pre-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you pre-commit.
	at org.quartz.FlakyJdbcSchedulerTest.preCommitFailure(FlakyJdbcSchedulerTest.java:139)
	at org.quartz.FlakyJdbcSchedulerTest.access$200(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:195)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:43,104 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutting down.
2021-04-14 17:13:43,105 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO paused.
2021-04-14 17:13:43,612 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_AUTO shutdown complete.
2021-04-14 17:13:43,612 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-14 17:13:43,662 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:13:43,662 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:13:43,662 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:13:43,662 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:13:43,662 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:13:43,662 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler
2021-04-14 17:13:43,662 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:13:43,665 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:13:43,670 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:13:43,670 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:13:43,672 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:13:43,673 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:13:43,673 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO started.
2021-04-14 17:13:43,683 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. FlakyConnection failed on you post-commit. [See nested exception: java.sql.SQLException: FlakyConnection failed on you post-commit.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you post-commit.
	at org.quartz.FlakyJdbcSchedulerTest.postCommitFailure(FlakyJdbcSchedulerTest.java:145)
	at org.quartz.FlakyJdbcSchedulerTest.access$300(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler.invoke(FlakyJdbcSchedulerTest.java:197)
	at com.sun.proxy.$Proxy9.commit(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
2021-04-14 17:13:43,691 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testShutdownWithWaitIsClean': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:43,763 ERROR [org.quartz.core.ErrorLogger] - An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'testShutdownWithWaitIsClean': java.sql.SQLException: FlakyConnection failed on you on creation. [See nested exception: java.sql.SQLException: FlakyConnection failed on you on creation.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:785)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: FlakyConnection failed on you on creation.
	at org.quartz.FlakyJdbcSchedulerTest.createFailure(FlakyJdbcSchedulerTest.java:133)
	at org.quartz.FlakyJdbcSchedulerTest.access$100(FlakyJdbcSchedulerTest.java:41)
	at org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider.getConnection(FlakyJdbcSchedulerTest.java:165)
	at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
	... 4 more
2021-04-14 17:13:43,791 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutting down.
2021-04-14 17:13:43,791 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO paused.
2021-04-14 17:13:45,314 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_AUTO shutdown complete.
Tests run: 50, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 147.676 sec
Running org.quartz.JobDetailTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.063 sec
Running org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test
2021-04-14 17:13:46,205 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Starting Database ---------------------
Wed Apr 14 17:13:46 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-14 17:13:47,138 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Database started ---------------------
2021-04-14 17:13:47,138 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Creating Database tables ---------------------
2021-04-14 17:13:47,143 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-14 17:13:58,408 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Database tables created ---------------------
2021-04-14 17:13:58,554 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:13:58,591 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-14 17:13:58,636 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-14 17:13:58,702 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:13:58,741 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:13:58,741 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:13:58,742 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:13:58,743 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:13:58,743 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:13:58,744 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:13:58,744 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:13:58,744 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Initializing ----------------------
2021-04-14 17:13:58,744 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Initialization Complete -----------
2021-04-14 17:13:58,744 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Scheduling Job  -------------------
2021-04-14 17:13:58,779 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mbyr1bjvv17e|48da64f2, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mbyr1bjvv17e|48da64f2, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:13:59,222 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:13:59,269 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:13:59,269 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:13:59,279 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:13:59,291 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:13:59,292 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:13:59,292 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Scheduler Started -----------------
2021-04-14 17:13:59,603 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:13:59 EDT 2021
2021-04-14 17:13:59,672 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:13:59 EDT 2021
2021-04-14 17:13:59,730 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:13:59 EDT 2021
2021-04-14 17:13:59,771 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:13:59 EDT 2021
2021-04-14 17:14:01,772 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:01 EDT 2021
2021-04-14 17:14:01,805 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:01 EDT 2021
2021-04-14 17:14:01,839 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:01 EDT 2021
2021-04-14 17:14:01,889 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:01 EDT 2021
2021-04-14 17:14:04,773 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:04 EDT 2021
2021-04-14 17:14:04,806 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:04 EDT 2021
2021-04-14 17:14:04,856 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:04 EDT 2021
2021-04-14 17:14:04,898 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:04 EDT 2021
2021-04-14 17:14:07,765 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:07 EDT 2021
2021-04-14 17:14:07,798 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:07 EDT 2021
2021-04-14 17:14:07,832 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:07 EDT 2021
2021-04-14 17:14:07,866 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:07 EDT 2021
2021-04-14 17:14:08,307 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Shutting down database ! -----------------
Wed Apr 14 17:14:08 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-14 17:14:09,307 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-14 17:14:09,309 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3273)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 12 more
2021-04-14 17:14:09,312 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Couldn't rollback jdbc connection. No current connection.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3273)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 12 more
2021-04-14 17:14:09,312 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-14 17:14:09,313 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.setAutoCommit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1656)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3283)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 7 more
2021-04-14 17:14:09,313 WARN [org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler] - Failed restore connection's original auto commit setting.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.setAutoCommit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1656)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3283)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 7 more
2021-04-14 17:14:09,314 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Database error recovering from misfires.
org.quartz.JobPersistenceException: Database error recovering from misfires. [See nested exception: java.sql.SQLException: A problem occurred while trying to acquire a cached PreparedStatement in a background thread.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3274)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: A problem occurred while trying to acquire a cached PreparedStatement in a background thread.
	at com.mchange.v2.c3p0.stmt.GooGooStatementCache.acquireStatement(GooGooStatementCache.java:571)
	at com.mchange.v2.c3p0.stmt.GooGooStatementCache.checkoutStatement(GooGooStatementCache.java:204)
	at com.mchange.v2.c3p0.impl.NewPooledConnection.checkoutStatement(NewPooledConnection.java:321)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.prepareStatement(NewProxyConnection.java:1086)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.prepareStatement(Unknown Source)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.countMisfiredTriggersInState(StdJDBCDelegate.java:390)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3254)
	... 2 more
Caused by: java.sql.SQLNonTransientConnectionException: Insufficient data while reading from the network - expected a minimum of 6 bytes and received only 0 bytes.  The connection has been terminated.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.prepareStatement(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.mchange.v2.c3p0.stmt.GooGooStatementCache$1StmtAcquireTask.run(GooGooStatementCache.java:547)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:696)
Caused by: org.apache.derby.client.am.DisconnectException: Insufficient data while reading from the network - expected a minimum of 6 bytes and received only 0 bytes.  The connection has been terminated.
	at org.apache.derby.client.net.Reply.fill(Unknown Source)
	at org.apache.derby.client.net.Reply.ensureALayerDataInBuffer(Unknown Source)
	at org.apache.derby.client.net.Reply.readDssHeader(Unknown Source)
	at org.apache.derby.client.net.Reply.startSameIdChainParse(Unknown Source)
	at org.apache.derby.client.net.NetStatementReply.readPrepareDescribeOutput(Unknown Source)
	at org.apache.derby.client.net.StatementReply.readPrepareDescribeOutput(Unknown Source)
	at org.apache.derby.client.net.NetStatement.readPrepareDescribeOutput_(Unknown Source)
	at org.apache.derby.client.am.Statement.readPrepareDescribeOutput(Unknown Source)
	at org.apache.derby.client.am.PreparedStatement.readPrepareDescribeInputOutput(Unknown Source)
	at org.apache.derby.client.am.PreparedStatement.flowPrepareDescribeInputOutput(Unknown Source)
	at org.apache.derby.client.am.PreparedStatement.prepare(Unknown Source)
	at org.apache.derby.client.am.Connection.prepareStatementX(Unknown Source)
	... 6 more
2021-04-14 17:14:10,749 INFO [com.mchange.v2.c3p0.stmt.GooGooStatementCache] - Problem with checked-in Statement, discarding.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.PreparedStatement.clearParameters(Unknown Source)
	at com.mchange.v2.c3p0.stmt.GooGooStatementCache.refreshStatement(GooGooStatementCache.java:622)
	at com.mchange.v2.c3p0.stmt.GooGooStatementCache.checkinStatement(GooGooStatementCache.java:272)
	at com.mchange.v2.c3p0.impl.NewPooledConnection.checkinStatement(NewPooledConnection.java:326)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.close(NewProxyPreparedStatement.java:1705)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.closeStatement(StdJDBCDelegate.java:3287)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggerState(StdJDBCDelegate.java:1960)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggerFired(JobStoreSupport.java:3030)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$44.execute(JobStoreSupport.java:2985)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$44.execute(JobStoreSupport.java:2978)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3864)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Statement.checkForClosedStatement(Unknown Source)
	... 13 more
2021-04-14 17:14:10,752 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-14 17:14:10,752 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.commit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.commit(NewProxyConnection.java:1578)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 11 more
2021-04-14 17:14:10,754 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-14 17:14:10,754 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3868)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 12 more
2021-04-14 17:14:10,755 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Couldn't rollback jdbc connection. No current connection.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3868)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 12 more
2021-04-14 17:14:10,758 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-14 17:14:10,758 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3886)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 14 more
2021-04-14 17:14:10,759 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Couldn't rollback jdbc connection. No current connection.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3886)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 14 more
2021-04-14 17:14:10,759 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-14 17:14:10,759 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.setAutoCommit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1656)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3896)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 9 more
2021-04-14 17:14:10,760 WARN [org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler] - Failed restore connection's original auto commit setting.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.setAutoCommit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1656)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3896)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3819)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3869)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 9 more
2021-04-14 17:14:18,467 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Database back online ! -----------------
2021-04-14 17:14:24,325 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Handling 3 trigger(s) that missed their scheduled fire-time.
2021-04-14 17:14:25,777 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-14 17:14:25,778 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3886)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 12 more
2021-04-14 17:14:25,779 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Couldn't rollback jdbc connection. No current connection.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.rollback(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.rollback(NewProxyConnection.java:1630)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3886)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 12 more
2021-04-14 17:14:25,780 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2021-04-14 17:14:25,780 WARN [com.mchange.v2.c3p0.impl.NewPooledConnection] - [c3p0] Another error has occurred [ java.sql.SQLNonTransientConnectionException: No current connection. ] which will not be reported to listeners!
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.setAutoCommit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1656)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3896)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 7 more
2021-04-14 17:14:25,780 WARN [org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler] - Failed restore connection's original auto commit setting.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.setAutoCommit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.setAutoCommit(NewProxyConnection.java:1656)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3896)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 7 more
2021-04-14 17:14:25,782 ERROR [org.quartz.core.ErrorLogger] - An error occurred while firing triggers '[Trigger 'group1.job1':  triggerClass: 'org.quartz.impl.triggers.SimpleTriggerImpl calendar: 'null' misfireInstruction: 0 nextFireTime: Wed Apr 14 17:14:10 EDT 2021]'
org.quartz.JobPersistenceException: Couldn't commit jdbc connection. No current connection. [See nested exception: java.sql.SQLNonTransientConnectionException: No current connection.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3750)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3866)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggersFired(JobStoreSupport.java:2977)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:353)
Caused by: java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.client.am.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.client.am.SqlException.getSQLException(Unknown Source)
	at org.apache.derby.client.am.Connection.commit(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.commit(NewProxyConnection.java:1578)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy6.commit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.commitConnection(JobStoreSupport.java:3747)
	... 3 more
Caused by: org.apache.derby.client.am.SqlException: No current connection.
	at org.apache.derby.client.am.Connection.checkForClosedConnection(Unknown Source)
	... 11 more
2021-04-14 17:14:25,860 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:25 EDT 2021
2021-04-14 17:14:25,893 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:25 EDT 2021
2021-04-14 17:14:25,935 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:14:25 EDT 2021
2021-04-14 17:14:28,479 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Shutting Down Scheduler---------------------
2021-04-14 17:14:28,479 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:14:28,479 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:14:28,971 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:14:28,971 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Shutdown Complete -----------------
2021-04-14 17:14:28,971 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Destroying Database ---------------------
2021-04-14 17:14:31,032 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Database destroyed ---------------------
2021-04-14 17:14:31,134 INFO [org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test] - ------- Database shutdown ---------------------
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 45.07 sec
Running org.quartz.integrations.tests.JobDataMapStorageTest
2021-04-14 17:14:31,635 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Wed Apr 14 17:14:32 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-14 17:14:32,719 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-14 17:14:32,719 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-14 17:14:32,724 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-14 17:14:43,751 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-14 17:14:43,849 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:14:43,876 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-14 17:14:43,912 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-14 17:14:43,951 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:14:43,974 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:14:43,974 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:14:43,975 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:14:43,976 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:14:43,976 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:14:43,977 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:14:43,977 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:14:43,977 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:14:43,997 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mbzpz1op2tje|5a8b42a3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mbzpz1op2tje|5a8b42a3, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:14:44,199 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:14:44,277 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:14:44,277 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:14:44,287 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:14:44,302 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:14:44,304 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:14:44,304 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:14:44,578 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:14:44,578 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:14:44,578 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:14:44,964 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:14:44,964 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:14:44,967 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-14 17:14:46,677 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Wed Apr 14 17:14:46 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-14 17:14:46,779 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 15.299 sec
Running org.quartz.integrations.tests.QuartzDatabaseCronTriggerTest
2021-04-14 17:14:47,285 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Wed Apr 14 17:14:47 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-14 17:14:48,305 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-14 17:14:48,305 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-14 17:14:48,311 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-14 17:14:59,396 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-14 17:14:59,503 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:14:59,547 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-14 17:14:59,593 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-14 17:14:59,631 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:14:59,655 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:14:59,655 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:14:59,656 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:14:59,657 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:14:59,657 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:14:59,658 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:14:59,658 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:14:59,658 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:14:59,678 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mc022j1spury|5a8b42a3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mc022j1spury|5a8b42a3, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:14:59,879 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:14:59,968 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:14:59,968 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:14:59,979 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:14:59,990 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:14:59,993 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:14:59,993 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:15:01,116 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:15:01,116 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:15:01,116 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:15:01,532 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:15:01,532 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:15:01,535 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-14 17:15:03,854 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Wed Apr 14 17:15:03 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-14 17:15:03,956 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.822 sec
Running org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test
2021-04-14 17:15:04,399 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Starting Database ---------------------
Wed Apr 14 17:15:04 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-14 17:15:05,379 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Database started ---------------------
2021-04-14 17:15:05,379 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Creating Database tables ---------------------
2021-04-14 17:15:05,384 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-14 17:15:18,211 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Database tables created ---------------------
2021-04-14 17:15:18,312 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:15:18,338 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-14 17:15:18,381 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-14 17:15:18,423 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:15:18,449 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:15:18,449 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:15:18,450 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:15:18,451 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:15:18,451 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:15:18,452 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:15:18,452 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:15:18,452 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Initializing ----------------------
2021-04-14 17:15:18,452 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Initialization Complete -----------
2021-04-14 17:15:18,452 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Scheduling Job  -------------------
2021-04-14 17:15:18,480 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mc0gkk7rg26g|30665461, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mc0gkk7rg26g|30665461, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:15:18,844 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:15:18,890 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:15:18,890 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:15:18,899 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:15:18,910 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:15:18,912 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:15:18,912 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Scheduler Started -----------------
2021-04-14 17:15:19,175 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:15:19 EDT 2021
2021-04-14 17:15:19,256 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:15:19 EDT 2021
2021-04-14 17:15:19,297 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:15:19 EDT 2021
2021-04-14 17:15:19,330 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:15:19 EDT 2021
2021-04-14 17:15:20,023 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:15:20 EDT 2021
2021-04-14 17:15:25,024 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:15:25 EDT 2021
2021-04-14 17:15:28,938 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Shutting Down Scheduler---------------------
2021-04-14 17:15:28,939 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:15:28,939 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:15:29,442 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:15:29,442 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Shutdown Complete -----------------
2021-04-14 17:15:29,442 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Destroying Database ---------------------
2021-04-14 17:15:31,379 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Database destroyed ---------------------
Wed Apr 14 17:15:31 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-14 17:15:31,481 INFO [org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test] - ------- Database shutdown ---------------------
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 27.211 sec
Running org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest
2021-04-14 17:15:32,013 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:15:32,055 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:15:32,055 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:15:32,057 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:15:32,059 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:15:32,060 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:15:32,060 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:15:32,060 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:15:32,061 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:15:32,061 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:15:32,100 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:15:32,101 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:15:32,101 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:15:32,102 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:15:32 EDT 2021
2021-04-14 17:15:32,524 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:15:32,524 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:15:32,528 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:15:32,530 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:15:32,530 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:15:32,530 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:15:32,531 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:15:32,531 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:15:32,531 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:15:32,531 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:15:32,531 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:15:32,531 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:15:32,535 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:15:32,535 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:15:32,535 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:15:32,539 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:15:32 EDT 2021
2021-04-14 17:15:33,030 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:15:33,030 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:15:33,032 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:15:33,033 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:15:33,034 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:15:33,034 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:15:33,034 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:15:33,034 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:15:33,034 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:15:33,040 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:15:33,040 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:15:33,040 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:15:33,042 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:15:33,043 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:15:33,043 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:15:33,043 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:15:33 EDT 2021
2021-04-14 17:15:33,534 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:15:33,534 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:15:33,535 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:15:33,537 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:15:33,537 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:15:33,537 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:15:33,537 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:15:33,538 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:15:33,538 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:15:33,538 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:15:33,538 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:15:33,538 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:15:33,542 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:15:33,542 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:15:33,542 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:15:33,543 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:15:33 EDT 2021
2021-04-14 17:15:34,037 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:15:34,037 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.242 sec
Running org.quartz.integrations.tests.QuartzMemoryCronTriggerTest
2021-04-14 17:15:34,546 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:15:34,592 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:15:34,592 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:15:34,594 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:15:34,595 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:15:34,596 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:15:34,596 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:15:34,596 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:15:34,596 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:15:34,596 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:15:36,133 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:15:36,133 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:15:36,133 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:15:36,560 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:15:36,560 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.224 sec
Running org.quartz.integrations.tests.StdRowLockSemaphoreTest
2021-04-14 17:15:37,133 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Wed Apr 14 17:15:37 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-14 17:15:38,072 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-14 17:15:38,072 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-14 17:15:38,078 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-14 17:15:57,195 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-14 17:15:57,315 INFO [org.quartz.impl.StdSchedulerFactory] - Using custom data access locking (synchronization): org.quartz.integrations.tests.StdRowLockSemaphoreTest$MyLock
2021-04-14 17:15:57,315 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:15:57,346 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-14 17:15:57,388 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-14 17:15:57,432 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:15:57,459 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:15:57,459 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:15:57,460 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:15:57,460 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:15:57,460 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:15:57,461 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:15:57,461 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:15:57,483 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mc1ao29a57yk|2d2f09a4, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mc1ao29a57yk|2d2f09a4, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:15:57,768 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:15:57,809 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:15:57,810 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:15:57,819 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:15:57,831 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:15:57,950 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:15:57,951 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:15:58,080 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:15:58,080 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:15:58,080 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:15:58,447 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:15:58,448 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:15:58,451 INFO [org.quartz.impl.StdSchedulerFactory] - Using custom data access locking (synchronization): org.quartz.integrations.tests.StdRowLockSemaphoreTest$MyLock
2021-04-14 17:15:58,451 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:15:58,462 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:15:58,464 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:15:58,464 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:15:58,464 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:15:58,464 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:15:58,464 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:15:58,464 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:15:58,464 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:15:58,475 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mc1ao29a57yk|3705a85c, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mc1ao29a57yk|3705a85c, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:15:58,488 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 1 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:15:58,493 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:15:58,493 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:15:58,496 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:15:58,499 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 1 stale fired job entries.
2021-04-14 17:15:58,515 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:15:58,516 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:15:58,556 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:15:58,556 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:15:58,556 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:15:58,969 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:15:58,969 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:15:58,969 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-14 17:16:00,903 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Wed Apr 14 17:16:00 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-14 17:16:01,005 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 24.028 sec
Running org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest
2021-04-14 17:16:01,448 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Wed Apr 14 17:16:01 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-14 17:16:02,394 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-14 17:16:02,394 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-14 17:16:02,399 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-14 17:16:20,924 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-14 17:16:21,043 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:16:21,079 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-14 17:16:21,119 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-14 17:16:21,158 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:16:21,181 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:16:21,181 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:16:21,182 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:16:21,182 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:16:21,183 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:16:21,183 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:16:21,183 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:16:21,183 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:16:21,204 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mc1sz8e548xx|39ead1b7, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mc1sz8e548xx|39ead1b7, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:16:21,417 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:16:21,515 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:16:21,515 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:16:21,525 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:16:21,539 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:16:21,542 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:16:21,543 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:16:21,817 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Error retrieving job, setting trigger state to ERROR.
org.quartz.JobPersistenceException: Couldn't retrieve job because a required class was not found: null [See nested exception: java.lang.ClassNotFoundException]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retrieveJob(JobStoreSupport.java:1395)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTrigger(JobStoreSupport.java:2864)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$41.execute(JobStoreSupport.java:2805)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$41.execute(JobStoreSupport.java:2803)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3864)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.lang.ClassNotFoundException
	at org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest$SpecialClassLoadHelper.loadClass(JobClassNotFoundExceptionErrorsTriggersTest.java:81)
	at org.quartz.simpl.CascadingClassLoadHelper.loadClass(CascadingClassLoadHelper.java:138)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectJobDetail(StdJDBCDelegate.java:852)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retrieveJob(JobStoreSupport.java:1390)
	... 6 more
2021-04-14 17:16:21,952 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:16:21,952 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:16:21,952 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:16:22,171 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:16:22,172 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:16:22,174 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-14 17:16:24,024 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Wed Apr 14 17:16:24 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-14 17:16:24,126 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.809 sec
Running org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest
2021-04-14 17:16:24,679 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:16:24,684 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:16:24,708 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:16:24,709 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:16:24,710 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$SlowRAMJobStore] - RAMJobStore initialized.
2021-04-14 17:16:24,711 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$SlowRAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:16:24,711 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from an externally provided properties instance.
2021-04-14 17:16:24,711 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:16:24,711 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest] - ------- Initialization Complete -----------
2021-04-14 17:16:24,712 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest] - ------- Scheduling Job  -------------------
2021-04-14 17:16:24,722 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2021-04-14 17:16:24,722 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest] - ------- Scheduler Started -----------------
2021-04-14 17:16:25,731 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:25 EDT 2021
2021-04-14 17:16:26,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:26 EDT 2021
2021-04-14 17:16:27,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:27 EDT 2021
2021-04-14 17:16:28,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:28 EDT 2021
2021-04-14 17:16:29,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:29 EDT 2021
2021-04-14 17:16:30,723 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:30 EDT 2021
2021-04-14 17:16:31,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:31 EDT 2021
2021-04-14 17:16:32,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:32 EDT 2021
2021-04-14 17:16:33,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:33 EDT 2021
2021-04-14 17:16:34,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:34 EDT 2021
2021-04-14 17:16:35,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:35 EDT 2021
2021-04-14 17:16:36,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:36 EDT 2021
2021-04-14 17:16:37,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:37 EDT 2021
2021-04-14 17:16:38,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:38 EDT 2021
2021-04-14 17:16:39,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:39 EDT 2021
2021-04-14 17:16:40,720 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:40 EDT 2021
2021-04-14 17:16:41,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:41 EDT 2021
2021-04-14 17:16:42,718 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:42 EDT 2021
2021-04-14 17:16:43,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:43 EDT 2021
2021-04-14 17:16:44,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:44 EDT 2021
2021-04-14 17:16:45,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:45 EDT 2021
2021-04-14 17:16:46,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:46 EDT 2021
2021-04-14 17:16:47,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:47 EDT 2021
2021-04-14 17:16:48,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:48 EDT 2021
2021-04-14 17:16:49,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:49 EDT 2021
2021-04-14 17:16:50,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:50 EDT 2021
2021-04-14 17:16:51,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:51 EDT 2021
2021-04-14 17:16:52,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:52 EDT 2021
2021-04-14 17:16:53,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:53 EDT 2021
2021-04-14 17:16:54,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:54 EDT 2021
2021-04-14 17:16:55,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:55 EDT 2021
2021-04-14 17:16:56,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:56 EDT 2021
2021-04-14 17:16:57,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:57 EDT 2021
2021-04-14 17:16:58,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:58 EDT 2021
2021-04-14 17:16:59,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:16:59 EDT 2021
2021-04-14 17:17:00,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:00 EDT 2021
2021-04-14 17:17:01,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:01 EDT 2021
2021-04-14 17:17:02,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:02 EDT 2021
2021-04-14 17:17:03,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:03 EDT 2021
2021-04-14 17:17:04,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:04 EDT 2021
2021-04-14 17:17:05,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:05 EDT 2021
2021-04-14 17:17:06,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:06 EDT 2021
2021-04-14 17:17:07,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:07 EDT 2021
2021-04-14 17:17:08,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:08 EDT 2021
2021-04-14 17:17:09,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:09 EDT 2021
2021-04-14 17:17:10,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:10 EDT 2021
2021-04-14 17:17:11,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:11 EDT 2021
2021-04-14 17:17:12,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:12 EDT 2021
2021-04-14 17:17:13,717 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:13 EDT 2021
2021-04-14 17:17:14,716 INFO [org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob] - Fire time: Wed Apr 14 17:17:14 EDT 2021
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 50.27 sec
Running org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest
2021-04-14 17:17:15,163 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Starting DERBY database.
Wed Apr 14 17:17:15 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) started and ready to accept connections on port 1527
2021-04-14 17:17:16,116 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database started.
2021-04-14 17:17:16,116 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Creating Database tables for Quartz.
2021-04-14 17:17:16,121 INFO [org.quartz.integrations.tests.JdbcQuartzDerbyUtilities] - running the tests with maven, the db will be stored in /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb
2021-04-14 17:17:26,186 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database tables created.
2021-04-14 17:17:26,296 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:17:26,332 INFO [com.mchange.v2.log.MLog] - MLog clients using slf4j logging.
2021-04-14 17:17:26,372 INFO [com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.5.3 [built 27-January-2019 00:11:37 -0800; debug? true; trace: 10]
2021-04-14 17:17:26,418 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:26,444 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:26,444 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:26,445 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:17:26,446 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:26,447 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:17:26,447 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:26,447 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:26,447 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:17:26,470 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mc37br17x1vco|3a69014e, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mc37br17x1vco|3a69014e, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:17:26,684 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:26,770 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:26,771 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:26,781 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:26,800 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:26,803 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:17:26,804 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:17:27,191 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:17:27,191 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:27,191 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:27,435 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:27,435 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:17:27,439 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:17:27,450 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:27,453 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:27,453 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:27,453 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:17:27,453 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:27,454 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:17:27,454 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:27,454 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:27,454 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:17:27,465 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mc37br17x1vco|6821d4e1, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mc37br17x1vco|6821d4e1, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:17:27,473 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 1 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:27,480 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:27,480 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:27,482 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:27,484 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 1 stale fired job entries.
2021-04-14 17:17:27,489 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:17:27,489 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:17:27,583 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:17:27,583 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:27,583 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:27,958 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:27,958 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:17:27,960 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:17:27,978 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:27,984 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:27,985 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:27,985 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:17:27,985 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:27,985 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:17:27,985 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:27,985 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:27,986 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:17:27,995 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mc37br17x1vco|5643052d, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mc37br17x1vco|5643052d, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:17:28,003 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 1 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:28,007 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:28,007 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:28,009 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:28,011 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 1 stale fired job entries.
2021-04-14 17:17:28,015 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:17:28,015 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:17:28,132 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:17:28 EDT 2021
2021-04-14 17:17:28,166 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:17:28,166 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:28,166 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:28,182 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:17:28 EDT 2021
2021-04-14 17:17:28,491 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:28,491 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:17:28,493 INFO [org.quartz.impl.StdSchedulerFactory] - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'myDS'
2021-04-14 17:17:28,502 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:28,508 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:28,508 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:28,508 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:17:28,508 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:28,508 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 12 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:17:28,508 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:28,508 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:28,508 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler starting.
2021-04-14 17:17:28,517 INFO [com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> z8kfsxag1mc37br17x1vco|3b0d9da, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.apache.derby.jdbc.ClientDriver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> z8kfsxag1mc37br17x1vco|3b0d9da, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:derby://localhost:1527//home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/quartzTestDb;create=true, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 120, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2021-04-14 17:17:28,523 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:28,527 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:28,528 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:28,529 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:28,530 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:28,531 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:17:28,531 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler started.
2021-04-14 17:17:28,599 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:17:28 EDT 2021
2021-04-14 17:17:28,648 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:17:28 EDT 2021
2021-04-14 17:17:28,717 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutting down.
2021-04-14 17:17:28,717 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:28,717 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:29,187 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:29,187 INFO [org.quartz.integrations.tests.QuartzMemoryTestSupport] - Scheduler shutdown complete.
2021-04-14 17:17:29,187 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Destroying Database.
2021-04-14 17:17:30,894 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database destroyed.
Wed Apr 14 17:17:30 EDT 2021 : Apache Derby Network Server - 10.8.2.2 - (1181258) shutdown
2021-04-14 17:17:30,996 INFO [org.quartz.integrations.tests.QuartzDatabaseTestSupport] - Database shutdown.
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 15.991 sec
Running org.quartz.Quartz601Test
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.074 sec
Running org.quartz.JobDataMapTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.098 sec
Running org.quartz.JobBuilderTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.066 sec
Running org.quartz.DisallowConcurrentExecutionJobTest
2021-04-14 17:17:32,647 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:32,672 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:32,672 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:32,674 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:32,675 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:32,675 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'QuartzScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:32,675 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:32,678 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2021-04-14 17:17:33,290 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:33,291 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:33,791 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:33,804 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:33,805 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:33,805 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:33,805 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:33,805 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:33,805 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'QuartzScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:33,805 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:33,806 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2021-04-14 17:17:34,507 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:34,507 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:35,007 INFO [org.quartz.core.QuartzScheduler] - Scheduler QuartzScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.596 sec
Running org.quartz.impl.DirectSchedulerFactoryTest
2021-04-14 17:17:35,546 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:35,546 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:35,552 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:35,556 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'SimpleQuartzScheduler' with instanceId 'SIMPLE_NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:35,556 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'SimpleQuartzScheduler
2021-04-14 17:17:35,556 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:35,561 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:35,561 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:35,561 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:35,561 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'MyScheduler' with instanceId 'Instance1'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:35,561 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'MyScheduler
2021-04-14 17:17:35,562 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:35,562 INFO [org.quartz.core.QuartzScheduler] - Scheduler MyScheduler_$_Instance1 started.
2021-04-14 17:17:35,562 INFO [org.quartz.core.QuartzScheduler] - Scheduler MyScheduler_$_Instance1 shutting down.
2021-04-14 17:17:35,562 INFO [org.quartz.core.QuartzScheduler] - Scheduler MyScheduler_$_Instance1 paused.
2021-04-14 17:17:35,562 INFO [org.quartz.core.QuartzScheduler] - Scheduler MyScheduler_$_Instance1 shutdown complete.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.205 sec
Running org.quartz.impl.JobDetailImplTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.077 sec
Running org.quartz.impl.SchedulerDetailsSetterTest
2021-04-14 17:17:36,374 WARN [org.quartz.impl.SchedulerDetailsSetter] - java.lang.Object does not contain public method setInstanceName(String)
2021-04-14 17:17:36,375 WARN [org.quartz.impl.SchedulerDetailsSetter] - java.lang.Object does not contain public method setInstanceId(String)
2021-04-14 17:17:36,386 WARN [org.quartz.impl.SchedulerDetailsSetter] - IncompleteThreadPool does not implement setInstanceName(String)
2021-04-14 17:17:36,386 WARN [org.quartz.impl.SchedulerDetailsSetter] - IncompleteThreadPool does not implement setInstanceId(String)
2021-04-14 17:17:36,465 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:36,492 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:36,492 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:36,494 INFO [org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore] - RAMJobStore initialized.
2021-04-14 17:17:36,495 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.impl.SchedulerDetailsSetterTest$MyThreadPool' - with 10 threads.
  Using job-store 'org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:36,495 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:36,495 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:36,498 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:36,498 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:36,498 INFO [org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore] - RAMJobStore initialized.
2021-04-14 17:17:36,498 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'SimpleQuartzScheduler' with instanceId 'SIMPLE_NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.impl.SchedulerDetailsSetterTest$MyThreadPool' - with -1 threads.
  Using job-store 'org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:36,498 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'SimpleQuartzScheduler
2021-04-14 17:17:36,498 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.238 sec
Running org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
2021-04-14 17:17:38,410 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:38,410 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:38,416 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:17:38,417 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:38,419 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DeleteNonExistsJobTestScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:17:38,419 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'DeleteNonExistsJobTestScheduler
2021-04-14 17:17:38,419 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:38,579 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutting down.
2021-04-14 17:17:38,579 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO paused.
2021-04-14 17:17:38,883 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutdown complete.
2021-04-14 17:17:38,890 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:38,890 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:38,890 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:17:38,890 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:38,890 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DeleteNonExistsJobTestScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:17:38,890 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'DeleteNonExistsJobTestScheduler
2021-04-14 17:17:38,890 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:38,986 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutting down.
2021-04-14 17:17:38,986 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO paused.
2021-04-14 17:17:39,390 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutdown complete.
2021-04-14 17:17:39,400 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:39,400 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:39,400 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:17:39,400 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:39,401 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DeleteNonExistsJobTestScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:17:39,401 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'DeleteNonExistsJobTestScheduler
2021-04-14 17:17:39,401 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:39,415 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutting down.
2021-04-14 17:17:39,415 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO paused.
2021-04-14 17:17:39,900 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutdown complete.
2021-04-14 17:17:39,910 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:39,911 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:39,911 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:17:39,911 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:39,911 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DeleteNonExistsJobTestScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:17:39,911 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'DeleteNonExistsJobTestScheduler
2021-04-14 17:17:39,911 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:39,939 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutting down.
2021-04-14 17:17:39,939 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO paused.
2021-04-14 17:17:40,411 INFO [org.quartz.core.QuartzScheduler] - Scheduler DeleteNonExistsJobTestScheduler_$_AUTO shutdown complete.
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.567 sec
Running org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.453 sec
Running org.quartz.impl.jdbcjobstore.JdbcJobStoreTest
2021-04-14 17:17:42,841 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:42,844 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:43,005 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:43,038 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:43,038 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:43,044 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:43,053 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:43,097 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Couldn't rollback jdbc connection. No current connection.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.setupContextStack(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.rollback(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy2.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3273)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 17 more
2021-04-14 17:17:43,099 WARN [org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler] - Failed restore connection's original auto commit setting.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3283)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 11 more
2021-04-14 17:17:43,100 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Database error recovering from misfires.
org.quartz.JobPersistenceException: Database error recovering from misfires. [See nested exception: java.sql.SQLNonTransientConnectionException: Connection closed by unknown interrupt.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3274)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLNonTransientConnectionException: Connection closed by unknown interrupt.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.countMisfiredTriggersInState(StdJDBCDelegate.java:395)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3254)
	... 2 more
Caused by: java.sql.SQLException: Connection closed by unknown interrupt.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 13 more
Caused by: ERROR 08000: Connection closed by unknown interrupt.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.util.InterruptStatus.setInterrupted(Unknown Source)
	at org.apache.derby.iapi.util.InterruptStatus.throwIf(Unknown Source)
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.checkCancellationFlag(Unknown Source)
	at org.apache.derby.impl.sql.execute.BulkTableScanResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.ScalarAggregateResultSet.getRowFromResultSet(Unknown Source)
	at org.apache.derby.impl.sql.execute.ScalarAggregateResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)
	... 6 more
2021-04-14 17:17:43,825 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:43,825 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:43,845 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:43,859 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:43,859 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:43,864 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:43,869 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:44,636 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:44,636 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:44,652 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:44,664 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:44,664 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:44,668 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:44,672 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:45,476 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:45,476 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:45,490 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:45,500 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:45,500 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:45,504 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:45,507 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:45,609 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:45,609 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:46,352 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:46,353 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:46,365 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:46,375 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:46,375 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:46,378 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:46,381 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:46,479 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:46,480 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:47,126 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:47,126 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:47,140 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:47,151 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:47,152 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:47,155 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:47,158 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:47,227 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Trigger triggerGroup1.trigger1 set to ERROR state.
2021-04-14 17:17:47,236 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Trigger triggerGroup1.trigger1 reset from ERROR state to: WAITING
2021-04-14 17:17:47,811 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:47,811 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:47,822 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:47,829 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:47,829 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:47,832 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:47,836 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:48,474 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:48,474 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:48,485 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:48,497 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:48,497 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:48,500 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:48,504 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:49,123 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:49,124 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:49,133 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:49,140 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:49,140 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:49,143 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:49,145 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:49,728 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:49,729 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:49,740 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:49,747 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:49,747 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:49,751 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:49,754 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:49,832 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:49,833 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:50,473 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:50,473 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:50,483 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:50,493 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:50,493 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:50,496 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:50,499 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:50,569 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:50,570 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:51,202 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:51,202 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:51,211 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:17:51,217 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:17:51,217 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:17:51,219 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:17:51,221 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:17:51,289 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:17:51,290 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.308 sec
Running org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.347 sec
Running org.quartz.impl.matchers.GroupMatcherTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec
Running org.quartz.impl.RemoteMBeanSchedulerTest
2021-04-14 17:17:56,346 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:56,375 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:56,376 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:56,377 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:56,506 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:56,506 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:56,506 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:56,534 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:56,534 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:56,534 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-14 17:17:56,534 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:56,537 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:56,537 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:56,543 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:56,544 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:56,545 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:56,546 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:56,546 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:56,552 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:56,552 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:56,553 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-14 17:17:56,553 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:56,554 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:56,554 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:56,555 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:56,555 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:56,555 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:56,555 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:56,555 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:56,558 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:56,558 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:56,558 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-14 17:17:56,558 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:56,559 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:56,559 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:56,559 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:56,559 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:56,560 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:56,560 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:56,560 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:56,560 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED started.
2021-04-14 17:17:56,561 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:56,561 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:56,561 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:56,561 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-14 17:17:56,561 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:56,562 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:56,562 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:56,562 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:56,563 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:56,563 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:56,564 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:56,564 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:56,565 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:56,565 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:56,566 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-14 17:17:56,566 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:56,567 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:56,568 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:56,568 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:56,568 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:56,569 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:56,569 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:56,569 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:56,570 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:56,570 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:56,571 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-14 17:17:56,571 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:56,573 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:56,574 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:56,574 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:56,574 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:56,575 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:56,575 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:56,575 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:56,576 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:56,576 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:56,576 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-14 17:17:56,577 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:56,578 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:56,579 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:56,579 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:56,579 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:56,579 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:56,580 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:56,580 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:56,581 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:56,581 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:56,581 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-14 17:17:56,581 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:17:56,582 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:56,583 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:56,583 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:56,583 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:56,584 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'TestScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:17:56,584 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'TestScheduler' initialized from an externally provided properties instance.
2021-04-14 17:17:56,584 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:17:56,585 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:17:56,586 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:17:56,586 INFO [org.quartz.core.QuartzScheduler] - Scheduler unregistered from name 'quartz:type=QuartzScheduler,name=TestScheduler,instance=NON_CLUSTERED' in the local MBeanServer.
2021-04-14 17:17:56,586 INFO [org.quartz.core.QuartzScheduler] - Scheduler TestScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.457 sec
Running org.quartz.impl.StdSchedulerFactoryCustomConnectionProviderTest
2021-04-14 17:17:57,118 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:17:57,146 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:17:57,147 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:17:57,148 INFO [org.quartz.core.QuartzScheduler] - JobFactory set to: org.quartz.simpl.SimpleJobFactory@1bc425e7
2021-04-14 17:17:57,148 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:17:57,149 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:17:57,150 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DatabaseScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:17:57,150 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DatabaseScheduler' initialized from the specified file : 'org/quartz/properties/quartzCustomConnectionProvider.properties' from the class resource path.
2021-04-14 17:17:57,150 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.305 sec
Running org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Tests run: 28, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.145 sec
Running org.quartz.impl.calendar.DailyCalendarTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.104 sec
Running org.quartz.impl.calendar.BaseCalendarTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 sec
Running org.quartz.simpl.RAMJobStoreTest
2021-04-14 17:17:58,875 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,897 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,899 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,901 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,901 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,919 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,920 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,925 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,925 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,928 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,928 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,929 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,929 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,931 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,931 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,933 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:17:58,935 INFO [org.quartz.simpl.RAMJobStore] - Trigger triggerGroup1.trigger1 set to ERROR state.
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.219 sec
Running org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
2021-04-14 17:18:00,558 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:00,593 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:00,593 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:00,594 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using db table-based data access locking (synchronization).
2021-04-14 17:18:00,597 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:18:00,598 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'MeScheduler' with instanceId '1goo2'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is clustered.

2021-04-14 17:18:00,598 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'MeScheduler' initialized from an externally provided properties instance.
2021-04-14 17:18:00,598 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.346 sec
Running org.quartz.simpl.PropertySettingJobFactoryTest
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.125 sec
Running org.quartz.TriggerBuilderTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.12 sec
Running org.quartz.core.QTZ212_SchedulerListener_Test
2021-04-14 17:18:01,969 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:01,974 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:18:02,002 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:02,002 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:02,004 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:02,005 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:02,005 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2021-04-14 17:18:02,005 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
schedulerStarting was called
2021-04-14 17:18:02,008 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
schedulerStarted was called
2021-04-14 17:18:02,009 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:02,009 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:02,010 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:02,012 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:02,012 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:18:02,018 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:02,018 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:02,019 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:02,019 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:02,019 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2021-04-14 17:18:02,019 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
schedulerStarting was called
2021-04-14 17:18:02,019 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
schedulerStarted was called
2021-04-14 17:18:02,019 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:02,019 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:02,019 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.247 sec
Running org.quartz.core.RecoverJobsTest
2021-04-14 17:18:03,664 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:03,665 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:03,670 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:18:03,681 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:18:03,683 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'SimpleQuartzScheduler' with instanceId 'SIMPLE_NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:18:03,683 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'SimpleQuartzScheduler
2021-04-14 17:18:03,683 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:03,905 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:18:03,966 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:18:03,966 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:18:03,974 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:18:03,982 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:18:03,984 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED started.
2021-04-14 17:18:04,083 INFO [org.quartz.core.RecoverJobsTest$RecoverJobsTestJob] - Started - 1618435084082
2021-04-14 17:18:05,083 INFO [org.quartz.core.RecoverJobsTest$RecoverJobsTestJob] - Tic 1- 1618435084082
2021-04-14 17:18:05,984 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutting down.
2021-04-14 17:18:05,984 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED paused.
2021-04-14 17:18:06,003 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - Couldn't rollback jdbc connection. No current connection.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.setupContextStack(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.rollback(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy3.rollback(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.rollbackConnection(JobStoreSupport.java:3727)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3273)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 17 more
2021-04-14 17:18:06,006 WARN [org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler] - Failed restore connection's original auto commit setting.
java.sql.SQLNonTransientConnectionException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3677)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3283)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: No current connection.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 11 more
2021-04-14 17:18:06,006 ERROR [org.quartz.impl.jdbcjobstore.JobStoreTX] - MisfireHandler: Error handling misfires: Database error recovering from misfires.
org.quartz.JobPersistenceException: Database error recovering from misfires. [See nested exception: java.sql.SQLNonTransientConnectionException: Connection closed by unknown interrupt.]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3274)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLNonTransientConnectionException: Connection closed by unknown interrupt.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedResultSet.closeOnTransactionError(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(Unknown Source)
	at org.apache.derby.impl.jdbc.EmbedResultSet.next(Unknown Source)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.countMisfiredTriggersInState(StdJDBCDelegate.java:395)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3254)
	... 2 more
Caused by: java.sql.SQLException: Connection closed by unknown interrupt.
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)
	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)
	... 13 more
Caused by: ERROR 08000: Connection closed by unknown interrupt.
	at org.apache.derby.iapi.error.StandardException.newException(Unknown Source)
	at org.apache.derby.iapi.util.InterruptStatus.setInterrupted(Unknown Source)
	at org.apache.derby.iapi.util.InterruptStatus.throwIf(Unknown Source)
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.checkCancellationFlag(Unknown Source)
	at org.apache.derby.impl.sql.execute.BulkTableScanResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.ScalarAggregateResultSet.getRowFromResultSet(Unknown Source)
	at org.apache.derby.impl.sql.execute.ScalarAggregateResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.getNextRowCore(Unknown Source)
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.getNextRow(Unknown Source)
	... 6 more
2021-04-14 17:18:06,008 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:06,084 INFO [org.quartz.core.RecoverJobsTest$RecoverJobsTestJob] - Tic 2- 1618435084082
2021-04-14 17:18:06,084 INFO [org.quartz.core.RecoverJobsTest$RecoverJobsTestJob] - Stopped - 1618435084082
2021-04-14 17:18:06,085 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-14 17:18:10,022 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:10,022 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:10,022 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:18:10,022 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'SimpleQuartzScheduler' with instanceId 'SIMPLE_NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:18:10,023 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'SimpleQuartzScheduler
2021-04-14 17:18:10,023 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:10,028 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 1 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:18:10,030 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Handling 1 trigger(s) that missed their scheduled fire-time.
2021-04-14 17:18:10,038 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:18:10,039 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:18:10,039 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:18:10,041 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 1 stale fired job entries.
2021-04-14 17:18:10,041 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED started.
2021-04-14 17:18:10,701 INFO [org.quartz.core.RecoverJobsTest$RecoverJobsTestJob] - Started - 1618435090701
2021-04-14 17:18:10,702 INFO [org.quartz.core.RecoverJobsTest$RecoverJobsTestJob] - Stopped - 1618435090701
2021-04-14 17:18:10,702 ERROR [org.quartz.simpl.SimpleThreadPool] - Error while executing the Runnable: 
java.lang.IllegalStateException: JobStore is shutdown - aborting retry
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.retryExecuteInNonManagedTXLock(JobStoreSupport.java:3833)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.triggeredJobComplete(JobStoreSupport.java:3116)
	at org.quartz.core.QuartzScheduler.notifyJobStoreJobComplete(QuartzScheduler.java:1786)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:269)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
2021-04-14 17:18:12,042 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutting down.
2021-04-14 17:18:12,042 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED paused.
2021-04-14 17:18:12,203 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutdown complete.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.395 sec
Running org.quartz.core.ListenerManagerTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.15 sec
Running org.quartz.core.QTZ385Test
2021-04-14 17:18:14,853 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:14,854 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:14,866 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:18:14,867 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:18:14,869 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'SimpleQuartzScheduler' with instanceId 'SIMPLE_NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'com.sun.proxy.$Proxy3' - which supports persistence. and is not clustered.

2021-04-14 17:18:14,869 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'SimpleQuartzScheduler
2021-04-14 17:18:14,869 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:15,075 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:18:15,104 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:18:15,104 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:18:15,151 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:18:15,161 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:18:15,162 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED started.
2021-04-14 17:18:15,261 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutting down.
2021-04-14 17:18:15,261 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED paused.
2021-04-14 17:18:16,267 INFO [org.quartz.integrations.tests.HelloJob] - Hello World! - Wed Apr 14 17:18:16 EDT 2021
2021-04-14 17:18:16,324 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:16,326 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:16,326 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:16,327 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:18:16,327 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'SimpleQuartzScheduler' with instanceId 'SIMPLE_NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:18:16,327 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'SimpleQuartzScheduler
2021-04-14 17:18:16,327 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:16,330 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Freed 0 triggers from 'acquired' / 'blocked' state.
2021-04-14 17:18:16,332 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovering 0 jobs that were in-progress at the time of the last shut-down.
2021-04-14 17:18:16,332 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Recovery complete.
2021-04-14 17:18:16,332 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 'complete' triggers.
2021-04-14 17:18:16,333 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Removed 0 stale fired job entries.
2021-04-14 17:18:16,334 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED started.
2021-04-14 17:18:17,334 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutting down.
2021-04-14 17:18:17,334 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED paused.
2021-04-14 17:18:17,827 INFO [org.quartz.core.QuartzScheduler] - Scheduler SimpleQuartzScheduler_$_SIMPLE_NON_CLUSTERED shutdown complete.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.846 sec
Running org.quartz.TriggerComparatorTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.082 sec
Running org.quartz.RAMSchedulerTest
2021-04-14 17:18:19,270 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:19,303 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:19,303 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:19,305 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:19,306 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithWaitIsCleanScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:19,306 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testShutdownWithWaitIsCleanScheduler' initialized from an externally provided properties instance.
2021-04-14 17:18:19,306 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:19,306 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_NON_CLUSTERED started.
2021-04-14 17:18:19,376 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:19,376 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:20,378 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithWaitIsCleanScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:20,381 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:20,382 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:20,382 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:20,382 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:20,382 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testBasicStorageFunctionsScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:20,382 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testBasicStorageFunctionsScheduler' initialized from an externally provided properties instance.
2021-04-14 17:18:20,383 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:20,390 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:20,390 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:20,882 INFO [org.quartz.core.QuartzScheduler] - Scheduler testBasicStorageFunctionsScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:20,884 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:20,884 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:20,884 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:20,884 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:20,885 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testDurableStorageFunctionsScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:20,885 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testDurableStorageFunctionsScheduler' initialized from an externally provided properties instance.
2021-04-14 17:18:20,885 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:20,886 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:20,886 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:21,385 INFO [org.quartz.core.QuartzScheduler] - Scheduler testDurableStorageFunctionsScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:21,386 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:21,387 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:21,387 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:21,387 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:21,388 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:21,388 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedAfterScheduler' initialized from an externally provided properties instance.
2021-04-14 17:18:21,388 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:21,389 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_NON_CLUSTERED started.
2021-04-14 17:18:21,391 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:21,392 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:21,892 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedAfterScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:21,894 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:21,895 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:21,895 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:21,895 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:21,895 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testScheduleMultipleTriggersForAJobScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:21,895 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testScheduleMultipleTriggersForAJobScheduler' initialized from an externally provided properties instance.
2021-04-14 17:18:21,896 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:21,896 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:21,896 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:22,395 INFO [org.quartz.core.QuartzScheduler] - Scheduler testScheduleMultipleTriggersForAJobScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:22,396 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:22,399 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:22,399 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:22,399 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:22,400 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithoutWaitIsUncleanScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 8 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:22,400 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testShutdownWithoutWaitIsUncleanScheduler' initialized from an externally provided properties instance.
2021-04-14 17:18:22,400 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:22,400 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_NON_CLUSTERED started.
2021-04-14 17:18:22,452 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:22,452 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:22,453 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithoutWaitIsUncleanScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:22,455 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:22,456 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:22,456 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:22,456 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:22,456 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:22,457 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeScheduler' initialized from an externally provided properties instance.
2021-04-14 17:18:22,457 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:22,457 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_NON_CLUSTERED started.
2021-04-14 17:18:22,459 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:22,459 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:22,959 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:22,961 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:22,962 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:22,962 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:22,962 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:22,962 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:22,963 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler' initialized from an externally provided properties instance.
2021-04-14 17:18:22,963 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:22,963 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_NON_CLUSTERED started.
2021-04-14 17:18:22,966 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:22,966 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:23,466 INFO [org.quartz.core.QuartzScheduler] - Scheduler testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJobScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:23,468 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:23,469 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:23,469 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:23,469 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:23,469 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 5 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:23,469 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler' initialized from an externally provided properties instance.
2021-04-14 17:18:23,470 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:23,970 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:23,971 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:24,469 INFO [org.quartz.core.QuartzScheduler] - Scheduler testShutdownWithSleepReturnsAfterAllThreadsAreStoppedScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.616 sec
Running org.quartz.CronTriggerTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.152 sec
Running org.quartz.CalendarIntervalTriggerTest
Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.186 sec
Running org.quartz.xml.XMLSchedulingDataProcessorTest
2021-04-14 17:18:26,101 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:26,106 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:18:26,132 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:26,132 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:26,133 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:26,135 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:26,135 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from the specified file : 'org/quartz/xml/quartz-test.properties' from the class resource path.
2021-04-14 17:18:26,135 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:26,170 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/simple-job-trigger-no-repeat.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/simple-job-trigger-no-repeat.xml
2021-04-14 17:18:26,276 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 1 jobs, 1 triggers.
2021-04-14 17:18:26,276 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding job: DEFAULT.job1
2021-04-14 17:18:26,280 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:26,281 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:26,281 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:26,283 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:26,283 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:18:26,285 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:26,285 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:26,285 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:26,285 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:26,285 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from the specified file : 'org/quartz/xml/quartz-test.properties' from the class resource path.
2021-04-14 17:18:26,285 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:26,288 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/simple-job-trigger-with-timezones.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/simple-job-trigger-with-timezones.xml
2021-04-14 17:18:26,321 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 1 jobs, 2 triggers.
2021-04-14 17:18:26,321 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding job: DEFAULT.job1
2021-04-14 17:18:26,321 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:26,321 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:26,322 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:27,489 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:27,489 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:27,489 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:18:27,490 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:18:27,490 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'XmlDeleteNonExistsJobTestScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:18:27,491 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'XmlDeleteNonExistsJobTestScheduler
2021-04-14 17:18:27,491 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:27,750 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/delete-no-jobclass.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/delete-no-jobclass.xml
2021-04-14 17:18:27,771 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Deleting job: DEFAULT.testjob1
2021-04-14 17:18:27,859 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 1 jobs, 1 triggers.
2021-04-14 17:18:27,860 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding job: DEFAULT.job1
2021-04-14 17:18:27,889 INFO [org.quartz.core.QuartzScheduler] - Scheduler XmlDeleteNonExistsJobTestScheduler_$_AUTO shutting down.
2021-04-14 17:18:27,889 INFO [org.quartz.core.QuartzScheduler] - Scheduler XmlDeleteNonExistsJobTestScheduler_$_AUTO paused.
2021-04-14 17:18:27,889 INFO [org.quartz.core.QuartzScheduler] - Scheduler XmlDeleteNonExistsJobTestScheduler_$_AUTO shutdown complete.
2021-04-14 17:18:28,591 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:28,591 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:28,591 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - Using thread monitor-based data access locking (synchronization).
2021-04-14 17:18:28,592 INFO [org.quartz.impl.jdbcjobstore.JobStoreTX] - JobStoreTX initialized.
2021-04-14 17:18:28,592 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'XmlDeleteNonExistsJobTestScheduler' with instanceId 'AUTO'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 4 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is not clustered.

2021-04-14 17:18:28,592 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler 'XmlDeleteNonExistsJobTestScheduler
2021-04-14 17:18:28,592 INFO [org.quartz.impl.DirectSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:28,650 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/overwrite-no-jobclass.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/overwrite-no-jobclass.xml
2021-04-14 17:18:28,666 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 1 jobs, 1 triggers.
2021-04-14 17:18:28,668 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Removing job: DEFAULT.job1
2021-04-14 17:18:28,717 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding job: DEFAULT.job1
2021-04-14 17:18:28,733 INFO [org.quartz.core.QuartzScheduler] - Scheduler XmlDeleteNonExistsJobTestScheduler_$_AUTO shutting down.
2021-04-14 17:18:28,733 INFO [org.quartz.core.QuartzScheduler] - Scheduler XmlDeleteNonExistsJobTestScheduler_$_AUTO paused.
2021-04-14 17:18:28,733 INFO [org.quartz.core.QuartzScheduler] - Scheduler XmlDeleteNonExistsJobTestScheduler_$_AUTO shutdown complete.
2021-04-14 17:18:29,240 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:29,241 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:18:29,242 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:29,242 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:29,242 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:29,243 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:29,243 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from the specified file : 'org/quartz/xml/quartz-test.properties' from the class resource path.
2021-04-14 17:18:29,243 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:29,246 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/directives_overwrite_no-ignoredups.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/directives_overwrite_no-ignoredups.xml
2021-04-14 17:18:29,283 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 2 jobs, 2 triggers.
2021-04-14 17:18:29,283 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Replacing job: DEFAULT.job1
2021-04-14 17:18:29,283 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Replacing job: DEFAULT.job2
2021-04-14 17:18:29,284 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:29,284 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:29,284 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:29,285 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:29,285 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:18:29,286 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:29,286 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:29,286 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:29,286 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:29,286 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from the specified file : 'org/quartz/xml/quartz-test.properties' from the class resource path.
2021-04-14 17:18:29,286 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:29,289 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/job-scheduling-data-2.0_trigger-samples.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/job-scheduling-data-2.0_trigger-samples.xml
2021-04-14 17:18:29,433 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 1 jobs, 35 triggers.
2021-04-14 17:18:29,433 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding job: DEFAULT.job1
2021-04-14 17:18:29,446 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:29,446 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:29,446 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:29,447 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:29,447 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:18:29,450 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:29,450 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:29,450 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:29,450 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:29,450 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from the specified file : 'org/quartz/xml/quartz-test.properties' from the class resource path.
2021-04-14 17:18:29,450 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:29,452 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: org/quartz/xml/directives_no-overwrite_ignoredups.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes/org/quartz/xml/directives_no-overwrite_ignoredups.xml
2021-04-14 17:18:29,463 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 2 jobs, 2 triggers.
2021-04-14 17:18:29,463 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Not overwriting existing job: DEFAULT.job1
2021-04-14 17:18:29,463 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Not overwriting existing job: DEFAULT.job2
2021-04-14 17:18:29,463 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Not overwriting existing trigger: DEFAULT.job1
2021-04-14 17:18:29,463 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Not overwriting existing trigger: DEFAULT.job2
2021-04-14 17:18:29,463 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:29,463 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:29,463 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:29,465 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:29,465 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:18:29,468 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:29,468 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:29,468 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:29,468 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:29,468 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from the specified file : 'org/quartz/xml/quartz-test.properties' from the class resource path.
2021-04-14 17:18:29,469 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:29,472 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Parsing XML file: quartz_data.xml with systemId: file:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/quartz_data.xml
2021-04-14 17:18:29,484 INFO [org.quartz.xml.XMLSchedulingDataProcessor] - Adding 1 jobs, 1 triggers.
2021-04-14 17:18:29,485 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:29,485 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:29,485 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.575 sec
Running org.quartz.DefaultSchedulerTest
2021-04-14 17:18:29,996 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:30,000 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:18:30,032 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:30,032 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:30,034 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:30,035 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:30,035 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2021-04-14 17:18:30,035 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.242 sec
Running org.quartz.DailyTimeIntervalScheduleBuilderTest
2021-04-14 17:18:30,637 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:30,642 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:18:30,669 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:30,669 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:30,671 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:30,672 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:30,672 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2021-04-14 17:18:30,672 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:30,687 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:30,688 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:30,688 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:30,695 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:30,695 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:18:30,702 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:30,702 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:30,702 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:30,702 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:30,703 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2021-04-14 17:18:30,703 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
testScheduleInMiddleOfDailyInterval: currTime = Wed Apr 14 17:18:30 EDT 2021
testScheduleInMiddleOfDailyInterval: computed first fire time = Wed Apr 14 17:20:00 EDT 2021
testScheduleInMiddleOfDailyInterval: startTime = Wed Apr 14 02:15:00 EDT 2021
testScheduleInMiddleOfDailyInterval: computed first fire time = Wed Apr 14 02:15:00 EDT 2021
2021-04-14 17:18:30,708 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:30,708 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:30,709 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.332 sec
Running org.quartz.VersionTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.073 sec
Running org.quartz.CronExpressionTest
fireTime: Mon May 31 00:00:00 EDT 2021, previousFireTime: Fri Apr 30 00:00:00 EDT 2021
fireTime: Wed Jun 30 00:00:00 EDT 2021, previousFireTime: Mon May 31 00:00:00 EDT 2021
fireTime: Fri Jul 30 00:00:00 EDT 2021, previousFireTime: Wed Jun 30 00:00:00 EDT 2021
fireTime: Tue Aug 31 00:00:00 EDT 2021, previousFireTime: Fri Jul 30 00:00:00 EDT 2021
fireTime: Thu Sep 30 00:00:00 EDT 2021, previousFireTime: Tue Aug 31 00:00:00 EDT 2021
fireTime: Fri Oct 29 00:00:00 EDT 2021, previousFireTime: Thu Sep 30 00:00:00 EDT 2021
fireTime: Tue Nov 30 00:00:00 EST 2021, previousFireTime: Fri Oct 29 00:00:00 EDT 2021
fireTime: Fri Dec 31 00:00:00 EST 2021, previousFireTime: Tue Nov 30 00:00:00 EST 2021
fireTime: Mon Jan 31 00:00:00 EST 2022, previousFireTime: Fri Dec 31 00:00:00 EST 2021
fireTime: Mon Feb 28 00:00:00 EST 2022, previousFireTime: Mon Jan 31 00:00:00 EST 2022
fireTime: Thu Mar 31 00:00:00 EDT 2022, previousFireTime: Mon Feb 28 00:00:00 EST 2022
fireTime: Fri Apr 29 00:00:00 EDT 2022, previousFireTime: Thu Mar 31 00:00:00 EDT 2022
fireTime: Tue May 31 00:00:00 EDT 2022, previousFireTime: Fri Apr 29 00:00:00 EDT 2022
fireTime: Thu Jun 30 00:00:00 EDT 2022, previousFireTime: Tue May 31 00:00:00 EDT 2022
fireTime: Fri Jul 29 00:00:00 EDT 2022, previousFireTime: Thu Jun 30 00:00:00 EDT 2022
fireTime: Wed Aug 31 00:00:00 EDT 2022, previousFireTime: Fri Jul 29 00:00:00 EDT 2022
fireTime: Fri Sep 30 00:00:00 EDT 2022, previousFireTime: Wed Aug 31 00:00:00 EDT 2022
fireTime: Mon Oct 31 00:00:00 EDT 2022, previousFireTime: Fri Sep 30 00:00:00 EDT 2022
fireTime: Wed Nov 30 00:00:00 EST 2022, previousFireTime: Mon Oct 31 00:00:00 EDT 2022
fireTime: Fri Dec 30 00:00:00 EST 2022, previousFireTime: Wed Nov 30 00:00:00 EST 2022
fireTime: Tue Jan 31 00:00:00 EST 2023, previousFireTime: Fri Dec 30 00:00:00 EST 2022
fireTime: Tue Feb 28 00:00:00 EST 2023, previousFireTime: Tue Jan 31 00:00:00 EST 2023
fireTime: Fri Mar 31 00:00:00 EDT 2023, previousFireTime: Tue Feb 28 00:00:00 EST 2023
fireTime: Fri Apr 28 00:00:00 EDT 2023, previousFireTime: Fri Mar 31 00:00:00 EDT 2023
fireTime: Wed May 31 00:00:00 EDT 2023, previousFireTime: Fri Apr 28 00:00:00 EDT 2023
fireTime: Sat May 29 00:00:00 EDT 2021, previousFireTime: Wed Apr 28 00:00:00 EDT 2021
fireTime: Mon Jun 28 00:00:00 EDT 2021, previousFireTime: Sat May 29 00:00:00 EDT 2021
fireTime: Thu Jul 29 00:00:00 EDT 2021, previousFireTime: Mon Jun 28 00:00:00 EDT 2021
fireTime: Sun Aug 29 00:00:00 EDT 2021, previousFireTime: Thu Jul 29 00:00:00 EDT 2021
fireTime: Tue Sep 28 00:00:00 EDT 2021, previousFireTime: Sun Aug 29 00:00:00 EDT 2021
fireTime: Fri Oct 29 00:00:00 EDT 2021, previousFireTime: Tue Sep 28 00:00:00 EDT 2021
fireTime: Sun Nov 28 00:00:00 EST 2021, previousFireTime: Fri Oct 29 00:00:00 EDT 2021
fireTime: Wed Dec 29 00:00:00 EST 2021, previousFireTime: Sun Nov 28 00:00:00 EST 2021
fireTime: Sat Jan 29 00:00:00 EST 2022, previousFireTime: Wed Dec 29 00:00:00 EST 2021
fireTime: Sat Feb 26 00:00:00 EST 2022, previousFireTime: Sat Jan 29 00:00:00 EST 2022
fireTime: Tue Mar 29 00:00:00 EDT 2022, previousFireTime: Sat Feb 26 00:00:00 EST 2022
fireTime: Thu Apr 28 00:00:00 EDT 2022, previousFireTime: Tue Mar 29 00:00:00 EDT 2022
fireTime: Sun May 29 00:00:00 EDT 2022, previousFireTime: Thu Apr 28 00:00:00 EDT 2022
fireTime: Tue Jun 28 00:00:00 EDT 2022, previousFireTime: Sun May 29 00:00:00 EDT 2022
fireTime: Fri Jul 29 00:00:00 EDT 2022, previousFireTime: Tue Jun 28 00:00:00 EDT 2022
fireTime: Mon Aug 29 00:00:00 EDT 2022, previousFireTime: Fri Jul 29 00:00:00 EDT 2022
fireTime: Wed Sep 28 00:00:00 EDT 2022, previousFireTime: Mon Aug 29 00:00:00 EDT 2022
fireTime: Sat Oct 29 00:00:00 EDT 2022, previousFireTime: Wed Sep 28 00:00:00 EDT 2022
fireTime: Mon Nov 28 00:00:00 EST 2022, previousFireTime: Sat Oct 29 00:00:00 EDT 2022
fireTime: Thu Dec 29 00:00:00 EST 2022, previousFireTime: Mon Nov 28 00:00:00 EST 2022
fireTime: Sun Jan 29 00:00:00 EST 2023, previousFireTime: Thu Dec 29 00:00:00 EST 2022
fireTime: Sun Feb 26 00:00:00 EST 2023, previousFireTime: Sun Jan 29 00:00:00 EST 2023
fireTime: Wed Mar 29 00:00:00 EDT 2023, previousFireTime: Sun Feb 26 00:00:00 EST 2023
fireTime: Fri Apr 28 00:00:00 EDT 2023, previousFireTime: Wed Mar 29 00:00:00 EDT 2023
fireTime: Mon May 29 00:00:00 EDT 2023, previousFireTime: Fri Apr 28 00:00:00 EDT 2023
Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.191 sec
Running org.quartz.DateBuilderTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.059 sec
Running org.quartz.InterruptableJobTest
2021-04-14 17:18:32,404 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:32,440 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:32,440 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:32,441 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:32,442 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'InterruptableJobTest_Scheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 2 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:32,442 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'InterruptableJobTest_Scheduler' initialized from an externally provided properties instance.
2021-04-14 17:18:32,442 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:32,443 INFO [org.quartz.core.QuartzScheduler] - Scheduler InterruptableJobTest_Scheduler_$_NON_CLUSTERED started.
TestInterruptableJob is executing.
TestInterruptableJob.interrupt() called.
TestInterruptableJob main loop detected interrupt signal.
TestInterruptableJob exiting with interrupted = true
2021-04-14 17:18:32,517 INFO [org.quartz.core.QuartzScheduler] - Scheduler InterruptableJobTest_Scheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:32,517 INFO [org.quartz.core.QuartzScheduler] - Scheduler InterruptableJobTest_Scheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:32,517 INFO [org.quartz.core.QuartzScheduler] - Scheduler InterruptableJobTest_Scheduler_$_NON_CLUSTERED shutdown complete.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.3 sec
Running org.quartz.AnnualCalendarTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.113 sec

Results :

Tests run: 305, Failures: 0, Errors: 0, Skipped: 0

[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-core[0;1m ---[m
[[1;34mINFO[m] Loading execution data file /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] Analyzed bundle 'quartz-core' with 238 classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m------------< [0;36morg.quartz-scheduler.internal:quartz-commonj[0;1m >------------[m
[[1;34mINFO[m] [1mBuilding quartz-commonj 2.3.1                                     [4/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-commonj/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-commonj/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-commonj/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] Compiling 1 source file to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-commonj/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-commonj/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-commonj[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-------------< [0;36morg.quartz-scheduler.internal:quartz-jboss[0;1m >-------------[m
[[1;34mINFO[m] [1mBuilding quartz-jboss 2.3.1                                       [5/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jboss/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jboss/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jboss/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] Compiling 3 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jboss/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jboss/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-jboss[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-------------< [0;36morg.quartz-scheduler.internal:quartz-stubs[0;1m >-------------[m
[[1;34mINFO[m] [1mBuilding quartz-stubs 2.3.1                                       [6/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-stubs/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-stubs/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-stubs/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] Compiling 3 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-stubs/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-stubs/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-stubs[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m------------< [0;36morg.quartz-scheduler.internal:quartz-oracle[0;1m >-------------[m
[[1;34mINFO[m] [1mBuilding quartz-oracle 2.3.1                                      [7/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-oracle/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-oracle/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-oracle/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] Compiling 1 source file to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-oracle/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-oracle/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-oracle[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-----------< [0;36morg.quartz-scheduler.internal:quartz-weblogic[0;1m >------------[m
[[1;34mINFO[m] [1mBuilding quartz-weblogic 2.3.1                                    [8/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-weblogic/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-weblogic/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-weblogic/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] Compiling 3 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-weblogic/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-weblogic/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-weblogic[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m------------------< [0;36morg.quartz-scheduler:quartz-jobs[0;1m >------------------[m
[[1;34mINFO[m] [1mBuilding quartz-jobs 2.3.1                                        [9/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jobs/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jobs/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jobs/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Compiling 16 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jobs/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Compiling 6 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jobs/target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.14.1:test[m [1m(default-test)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-jobs/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.quartz.jobs.SendMailJobTest
2021-04-14 17:18:37,878 INFO [org.subethamail.smtp.server.SMTPServer] - SMTP server *:2500 starting
2021-04-14 17:18:37,883 INFO [org.subethamail.smtp.server.ServerThread] - SMTP server *:2500 started
2021-04-14 17:18:37,902 INFO [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2021-04-14 17:18:37,903 INFO [org.quartz.simpl.SimpleThreadPool] - Job execution threads will use class loader of thread: main
2021-04-14 17:18:37,912 INFO [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-04-14 17:18:37,912 INFO [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.1 created.
2021-04-14 17:18:37,912 INFO [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2021-04-14 17:18:37,913 INFO [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-04-14 17:18:37,913 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2021-04-14 17:18:37,913 INFO [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.1
2021-04-14 17:18:37,917 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2021-04-14 17:18:37,925 INFO [org.quartz.jobs.ee.mail.SendMailJob] - Sending message 'test subject' to: receiver@host.com
2021-04-14 17:18:37,925 DEBUG [org.quartz.jobs.ee.mail.SendMailJob] - Sending mail with properties: {mail.smtp.port=2500, mail.smtp.host=localhost}
Received: from daveroar-MS-7A32 (localhost [127.0.0.1])
        by daveroar-MS-7A32
        with SMTP (SubEthaSMTP 3.1.7) id KNHYHDBA
        for receiver@host.com;
        Wed, 14 Apr 2021 17:18:37 -0400 (EDT)
Date: Wed, 14 Apr 2021 17:18:37 -0400 (EDT)
From: sender@host.com
To: receiver@host.com
Message-ID: <394879431.0.1618435117972.JavaMail.daveroar@daveroar-MS-7A32>
Subject: test subject
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

do not reply

test subject
2021-04-14 17:18:38,008 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutting down.
2021-04-14 17:18:38,008 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED paused.
2021-04-14 17:18:38,009 INFO [org.quartz.core.QuartzScheduler] - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED shutdown complete.
2021-04-14 17:18:38,009 INFO [org.subethamail.smtp.server.SMTPServer] - SMTP server *:2500 stopping
2021-04-14 17:18:38,009 INFO [org.subethamail.smtp.server.ServerThread] - SMTP server *:2500 stopped
Tests run: 2, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.246 sec

Results :

Tests run: 2, Failures: 0, Errors: 0, Skipped: 1

[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-jobs[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m------------< [0;36morg.quartz-scheduler.internal:quartz-plugins[0;1m >------------[m
[[1;34mINFO[m] [1mBuilding quartz-plugins 2.3.1                                    [10/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-plugins/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-plugins/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-plugins/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] Compiling 6 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-plugins/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 3 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] Compiling 4 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-plugins/target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-plugins[0;1m ---[m

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.quartz.integrations.tests.QTZ225_SchedulerClassLoadHelperForPlugins_Test
log4j:WARN No appenders could be found for logger (org.quartz.impl.StdSchedulerFactory).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.36 sec - in org.quartz.integrations.tests.QTZ225_SchedulerClassLoadHelperForPlugins_Test
Running org.quartz.integrations.tests.AutoInterruptableJobTest
TestInterruptableJob is executing.
TestInterruptableJob.interrupt() called.
TestInterruptableJob main loop detected interrupt signal.
TestInterruptableJob exiting with interrupted = true
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.026 sec - in org.quartz.integrations.tests.AutoInterruptableJobTest

Results :

Tests run: 2, Failures: 0, Errors: 0, Skipped: 0

[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-plugins[0;1m ---[m
[[1;34mINFO[m] Loading execution data file /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-plugins/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] Analyzed bundle 'quartz-plugins' with 9 classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--------< [0;36morg.quartz-scheduler.internal:quartz-terracotta-root[0;1m >--------[m
[[1;34mINFO[m] [1mBuilding quartz-terracotta-root 2.3.1                            [11/13][m
[[1;34mINFO[m] [1m--------------------------------[ pom ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-terracotta-root[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-terracotta-root[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/terracotta/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-terracotta-root[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m-----< [0;36morg.quartz-scheduler.internal:quartz-terracotta-bootstrap[0;1m >------[m
[[1;34mINFO[m] [1mBuilding quartz-terracotta-bootstrap 2.3.1                       [12/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/terracotta/bootstrap/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/terracotta/bootstrap/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/terracotta/bootstrap/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] Compiling 20 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/terracotta/bootstrap/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/terracotta/bootstrap/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz-terracotta-bootstrap[0;1m ---[m
[[1;34mINFO[m] Skipping JaCoCo execution due to missing execution data file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--------------------< [0;36morg.quartz-scheduler:quartz[0;1m >---------------------[m
[[1;34mINFO[m] [1mBuilding quartz 2.3.1                                            [13/13][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:prepare-agent[m [1m(pre-unit-test)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] surefireArgLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:compile[m [1m(default-compile)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 75 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.3.2:testCompile[m [1m(default-testCompile)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] Compiling 23 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz/target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.19.1:test[m [1m(default-test)[m @ [36mquartz[0;1m ---[m

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.terracotta.quartz.upgradability.serialization.CronCalendarSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.167 sec - in org.terracotta.quartz.upgradability.serialization.CronCalendarSerializationTest
Running org.terracotta.quartz.upgradability.serialization.JobKeySerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec - in org.terracotta.quartz.upgradability.serialization.JobKeySerializationTest
Running org.terracotta.quartz.upgradability.serialization.FiredTriggerSerializationTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in org.terracotta.quartz.upgradability.serialization.FiredTriggerSerializationTest
Running org.terracotta.quartz.upgradability.serialization.TimeOfDaySerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in org.terracotta.quartz.upgradability.serialization.TimeOfDaySerializationTest
Running org.terracotta.quartz.upgradability.serialization.SimpleTriggerImplSerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 sec - in org.terracotta.quartz.upgradability.serialization.SimpleTriggerImplSerializationTest
Running org.terracotta.quartz.upgradability.serialization.HolidayCalendarSerializationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec - in org.terracotta.quartz.upgradability.serialization.HolidayCalendarSerializationTest
Running org.terracotta.quartz.upgradability.serialization.DailyCalendarSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec - in org.terracotta.quartz.upgradability.serialization.DailyCalendarSerializationTest
Running org.terracotta.quartz.upgradability.serialization.CronExpressionSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec - in org.terracotta.quartz.upgradability.serialization.CronExpressionSerializationTest
Running org.terracotta.quartz.upgradability.serialization.TimeTriggerSerializationTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec - in org.terracotta.quartz.upgradability.serialization.TimeTriggerSerializationTest
Running org.terracotta.quartz.upgradability.serialization.CalendarIntervalTriggerImplSerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec - in org.terracotta.quartz.upgradability.serialization.CalendarIntervalTriggerImplSerializationTest
Running org.terracotta.quartz.upgradability.serialization.CronTriggerImplSerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec - in org.terracotta.quartz.upgradability.serialization.CronTriggerImplSerializationTest
Running org.terracotta.quartz.upgradability.serialization.JobDetailImplSerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec - in org.terracotta.quartz.upgradability.serialization.JobDetailImplSerializationTest
Running org.terracotta.quartz.upgradability.serialization.AnnualCalendarSerializationTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec - in org.terracotta.quartz.upgradability.serialization.AnnualCalendarSerializationTest
Running org.terracotta.quartz.upgradability.serialization.JobDataMapSerializationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec - in org.terracotta.quartz.upgradability.serialization.JobDataMapSerializationTest
Running org.terracotta.quartz.upgradability.serialization.TriggerKeySerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in org.terracotta.quartz.upgradability.serialization.TriggerKeySerializationTest
Running org.terracotta.quartz.upgradability.serialization.DailyTimeIntervalTriggerImplSerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec - in org.terracotta.quartz.upgradability.serialization.DailyTimeIntervalTriggerImplSerializationTest
Running org.terracotta.quartz.upgradability.serialization.TriggerWrapperSerializationTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.159 sec - in org.terracotta.quartz.upgradability.serialization.TriggerWrapperSerializationTest
Running org.terracotta.quartz.upgradability.serialization.JobWrapperSerializationTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec - in org.terracotta.quartz.upgradability.serialization.JobWrapperSerializationTest
Running org.terracotta.quartz.upgradability.serialization.WeeklyCalendarSerializationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec - in org.terracotta.quartz.upgradability.serialization.WeeklyCalendarSerializationTest
Running org.terracotta.quartz.upgradability.serialization.MonthlyCalendarSerializationTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec - in org.terracotta.quartz.upgradability.serialization.MonthlyCalendarSerializationTest
Running org.terracotta.quartz.upgradability.BasicUpgradabilityTest
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.248 sec - in org.terracotta.quartz.upgradability.BasicUpgradabilityTest

Results :

Tests run: 51, Failures: 0, Errors: 0, Skipped: 0

[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.5:report[m [1m(post-unit-test)[m @ [36mquartz[0;1m ---[m
[[1;34mINFO[m] Loading execution data file /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz/target/coverage-reports/jacoco-ut.exec
[[1;34mINFO[m] Analyzed bundle 'quartz' with 0 classes
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1mReactor Summary for quartz-parent 2.3.1:[m
[[1;34mINFO[m] 
[[1;34mINFO[m] quartz-parent ...................................... [1;32mSUCCESS[m [  0.538 s]
[[1;34mINFO[m] quartz-checkstyle .................................. [1;32mSUCCESS[m [  0.300 s]
[[1;34mINFO[m] quartz-core ........................................ [1;32mSUCCESS[m [09:21 min]
[[1;34mINFO[m] quartz-commonj ..................................... [1;32mSUCCESS[m [  0.459 s]
[[1;34mINFO[m] quartz-jboss ....................................... [1;32mSUCCESS[m [  0.543 s]
[[1;34mINFO[m] quartz-stubs ....................................... [1;32mSUCCESS[m [  0.412 s]
[[1;34mINFO[m] quartz-oracle ...................................... [1;32mSUCCESS[m [  0.597 s]
[[1;34mINFO[m] quartz-weblogic .................................... [1;32mSUCCESS[m [  0.516 s]
[[1;34mINFO[m] quartz-jobs ........................................ [1;32mSUCCESS[m [  1.799 s]
[[1;34mINFO[m] quartz-plugins ..................................... [1;32mSUCCESS[m [  3.312 s]
[[1;34mINFO[m] quartz-terracotta-root ............................. [1;32mSUCCESS[m [  0.002 s]
[[1;34mINFO[m] quartz-terracotta-bootstrap ........................ [1;32mSUCCESS[m [  0.902 s]
[[1;34mINFO[m] quartz ............................................. [1;32mSUCCESS[m [  2.251 s]
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  09:33 min
[[1;34mINFO[m] Finished at: 2021-04-14T17:18:44-04:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
args[0]: org.quartz.Driver
args[1]: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/classes
args[2]: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/target/test-classes
args[3]: quartz-core/target/classes:quartz-core/target/test-classes::/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/asm-3.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/c3p0-0.9.5.3.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/derby-10.8.2.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/derbyclient-10.8.2.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/derbynet-10.8.2.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/hamcrest-core-1.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/hamcrest-library-1.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/HikariCP-java7-2.4.13.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/javaee-api-5.0-2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/junit-dep-4.8.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/log4j-1.2.16.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/mchange-commons-java-0.2.15.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/mockito-all-1.9.5.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/slf4j-api-1.7.7.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/slf4j-log4j12-1.7.7.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/quartz-quartz-2.3.1-patched/quartz-core/mvn_dependencies/typesafe-config-2.10.1.jar
args[4]: quartz_quartz_core_2.3.1
args[5]: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/analysis_output/MockAnalysis
Soot started on Wed Apr 14 17:18:44 EDT 2021
Number of methods to be analyzed: 3986
 ====================================== 
** CLASS org.quartz.core.ListenerManagerTest$TestSchedulerListener
	method <init> : 
 ====================================== 
** CLASS org.quartz.ExecuteInJTATransaction
	method timeout : 
 ====================================== 
** CLASS org.quartz.impl.calendar.CronCalendar
	method <init> : 
	method <init> : 
	method <init> : 
	method clone : 
	method getTimeZone : 
	method setTimeZone : 
	method isTimeIncluded : 
	method getNextIncludedTime : 
	method toString : 
	method getCronExpression : 
	method setCronExpression : 
	method setCronExpression : 
 ====================================== 
** CLASS org.quartz.simpl.SimpleThreadPool$WorkerThread
	method <init> : 
	method <init> : 
	method shutdown : 
	method run : 
	method run : 
 ====================================== 
** CLASS org.quartz.CronExpression
	method <init> : 
	method <init> : 
	method isSatisfiedBy : 
	method getNextValidTimeAfter : 
	method getNextInvalidTimeAfter : 
	method getTimeZone : 
	method setTimeZone : 
	method toString : 
	method isValidExpression : 
	method validateExpression : 
	method buildExpression : 
	method storeExpressionVals : 
	method checkIncrementRange : 
	method checkNext : 
	method getCronExpression : 
	method getExpressionSummary : 
	method getExpressionSetSummary : 
	method getExpressionSetSummary : 
	method skipWhiteSpace : 
	method findNextWhiteSpace : 
	method addToSet : 
	method getSet : 
	method getValue : 
	method getNumericValue : 
	method getMonthNumber : 
	method getDayOfWeekNumber : 
	method getTimeAfter : 
	method setCalendarHour : 
	method getTimeBefore : 
	method getFinalFireTime : 
	method isLeapYear : 
	method getLastDayOfMonth : 
	method readObject : 
	method clone : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest$SpecialClassLoadHelper
	method <init> : 
	method loadClass : 
 ====================================== 
** CLASS org.quartz.DailyTimeIntervalScheduleBuilder
	method <init> : 
	method dailyTimeIntervalSchedule : 
	method build : 
	method withInterval : 
	method withIntervalInSeconds : 
	method withIntervalInMinutes : 
	method withIntervalInHours : 
	method onDaysOfTheWeek : 
	method onDaysOfTheWeek : 
	method onMondayThroughFriday : 
	method onSaturdayAndSunday : 
	method onEveryDay : 
	method startingDailyAt : 
	method endingDailyAt : 
	method endingDailyAfterCount : 
	method withMisfireHandlingInstructionIgnoreMisfires : 
	method withMisfireHandlingInstructionDoNothing : 
	method withMisfireHandlingInstructionFireAndProceed : 
	method withRepeatCount : 
	method validateInterval : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.core.JobRunShell$VetoedException
	method <init> : 
 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest$TestJobWithSync
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.DailyTimeIntervalScheduleBuilderTest
	method <init> : 
	method testScheduleActualTrigger : 
Unit: $r10 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r9 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r8)
Unit: $r8 = virtualinvoke $r7.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInSeconds(int)>(3)
Unit: interfaceinvoke r1.<org.quartz.Scheduler: void shutdown()>()
Unit: r1 = staticinvoke <org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getDefaultScheduler()>()
Unit: $r4 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/DailyTimeIntervalScheduleBuilderTest$MyJob;")
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: interfaceinvoke r1.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r2, r3)
Unit: $r7 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: r2 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: return
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: r3 = (org.quartz.DailyTimeIntervalTrigger) $r10
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
	method testScheduleInMiddleOfDailyInterval : 
Unit: r3 = staticinvoke <org.quartz.DateBuilder: java.util.Date todayAt(int,int,int)>(2, 15, 0)
Unit: $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testScheduleInMiddleOfDailyInterval: startTime = ")
Unit: $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Unit: $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49)
Unit: specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r22 = new java.lang.StringBuilder
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $z0 = virtualinvoke $r28.<java.util.Date: boolean after(java.util.Date)>($r29)
Unit: staticinvoke <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>("First fire time is not after now!", $z1)
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r53, r54)
Unit: r57 = virtualinvoke $r38.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r42 = <java.lang.System: java.io.PrintStream out>
Unit: $r31 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: if i0 >= 3 goto r2 = staticinvoke <org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getDefaultScheduler()>()
Unit: $r12 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
Unit: $r10 = virtualinvoke $r9.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(5)
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r27)
Unit: $r16 = new java.lang.StringBuilder
Unit: $r13 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r12)
Unit: $r49 = interfaceinvoke r58.<org.quartz.Trigger: java.util.Date getNextFireTime()>()
Unit: $r8 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(2, 15)
Unit: $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19)
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void shutdown()>()
Unit: $r9 = virtualinvoke $r7.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r8)
Unit: staticinvoke <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>("First fire time is not after now!", $z0)
Unit: virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r45)
Unit: $r7 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r41 = new java.lang.StringBuilder
Unit: $r52 = interfaceinvoke r58.<org.quartz.Trigger: java.util.Date getNextFireTime()>()
Unit: $r29 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r2 = staticinvoke <org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getDefaultScheduler()>()
Unit: specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
Unit: $r46 = new java.lang.StringBuilder
Unit: $r11 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r10)
Unit: r54 = virtualinvoke $r13.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r25 = interfaceinvoke r55.<org.quartz.Trigger: java.util.Date getNextFireTime()>()
Unit: $r33 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: r56 = virtualinvoke $r30.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()
Unit: r58 = interfaceinvoke r2.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r40)
Unit: $r17 = <java.lang.System: java.io.PrintStream out>
Unit: $r32 = virtualinvoke $r31.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test2")
Unit: $z1 = virtualinvoke $r52.<java.util.Date: boolean equals(java.lang.Object)>(r3)
Unit: $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r28 = interfaceinvoke r55.<org.quartz.Trigger: java.util.Date getNextFireTime()>()
Unit: return
Unit: $r38 = virtualinvoke $r37.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r3)
Unit: virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r21)
Unit: $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r30 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/DailyTimeIntervalScheduleBuilderTest$MyJob;")
Unit: $r15 = interfaceinvoke r54.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r51)
Unit: $r19 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r53 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r23 = <java.lang.System: java.io.PrintStream out>
Unit: $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25)
Unit: $r37 = virtualinvoke $r32.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r36)
Unit: $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testScheduleInMiddleOfDailyInterval: currTime = ")
Unit: $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r36 = virtualinvoke $r35.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(5)
Unit: $r35 = virtualinvoke $r33.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r34)
Unit: $r34 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(2, 15)
Unit: $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testScheduleInMiddleOfDailyInterval: computed first fire time = ")
Unit: $r4 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/DailyTimeIntervalScheduleBuilderTest$MyJob;")
Unit: $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testScheduleInMiddleOfDailyInterval: computed first fire time = ")
Unit: $r47 = <java.lang.System: java.io.PrintStream out>
Unit: $r40 = interfaceinvoke r57.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r56, r57)
Unit: i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(10)
Unit: return
Unit: r55 = interfaceinvoke r2.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r15)
	method testHourlyTrigger : 
Unit: $i0 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: int getRepeatInterval()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i1)
Unit: return
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: $r8 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r12 = virtualinvoke $r11.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: $r15 = (org.quartz.spi.OperableTrigger) r1
Unit: $r13 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: $r4 = virtualinvoke $r3.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i0)
Unit: $r5 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r3 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r7 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r6)
Unit: $r9 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r10)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("DEFAULT", $r12)
Unit: $r14 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: $r11 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: r2 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>($r15, null, 48)
Unit: $i1 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: r1 = (org.quartz.DailyTimeIntervalTrigger) $r8
Unit: $r6 = virtualinvoke $r5.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInHours(int)>(1)
Unit: $r10 = virtualinvoke $r9.<org.quartz.TriggerKey: java.lang.String getName()>()
	method testMinutelyTriggerWithTimeOfDay : 
Unit: goto [?= staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z3)]
Unit: $z3 = 1
Unit: $r27 = (org.quartz.spi.OperableTrigger) r1
Unit: $r5 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r24 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TimeOfDay getStartTimeOfDay()>()
Unit: $r6 = virtualinvoke $r5.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(72)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r15)
Unit: $r15 = virtualinvoke $r14.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z2)
Unit: $r23 = new org.quartz.TimeOfDay
Unit: $r14 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r12 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r11)
Unit: $i4 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: $r10 = virtualinvoke $r8.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAt(org.quartz.TimeOfDay)>($r9)
Unit: return
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22)
Unit: goto [?= staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z2)]
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i4)
Unit: $b2 = $l0 cmp $l1
Unit: $l1 = virtualinvoke $r19.<java.util.Date: long getTime()>()
Unit: specialinvoke $r18.<java.util.Date: void <init>()>()
Unit: $l0 = virtualinvoke $r18.<java.util.Date: long getTime()>()
Unit: $r21 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $z2 = 0
Unit: $r8 = virtualinvoke $r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r7)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r25, $r26)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(72, $i3)
Unit: if $b2 < 0 goto $z2 = 0
Unit: $r16 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $z3 = 0
Unit: $r19 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: java.util.Date getStartTime()>()
Unit: $r3 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r1 = (org.quartz.DailyTimeIntervalTrigger) $r13
Unit: specialinvoke $r23.<org.quartz.TimeOfDay: void <init>(int,int)>(8, 0)
Unit: $r9 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(17, 0)
Unit: $r20 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: java.util.Date getEndTime()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("group", $r17)
Unit: $r11 = virtualinvoke $r10.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder onMondayThroughFriday()>()
Unit: $r18 = new java.util.Date
Unit: $r22 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: if null != $r20 goto $z3 = 0
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z3)
Unit: r2 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>($r27, null, 48)
Unit: $r26 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TimeOfDay getEndTimeOfDay()>()
Unit: $i3 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: int getRepeatInterval()>()
Unit: $r7 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(8, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r24)
Unit: specialinvoke $r25.<org.quartz.TimeOfDay: void <init>(int,int)>(17, 0)
Unit: $r4 = virtualinvoke $r3.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test", "group")
Unit: $z2 = 1
Unit: $r25 = new org.quartz.TimeOfDay
	method testSecondlyTriggerWithStartAndEndTime : 
Unit: $r7 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r10 = virtualinvoke $r8.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r9)
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>($r30, null, 48)
Unit: return
Unit: $l1 = virtualinvoke $r22.<java.util.Date: long getTime()>()
Unit: $z2 = 0
Unit: $r8 = virtualinvoke $r7.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInSeconds(int)>(121)
Unit: $r28 = new org.quartz.TimeOfDay
Unit: $r19 = virtualinvoke $r18.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: $r15 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r1)
Unit: $l3 = virtualinvoke r2.<java.util.Date: long getTime()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z3)
Unit: $r12 = virtualinvoke $r10.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAt(org.quartz.TimeOfDay)>($r11)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r19)
Unit: if $b2 != 0 goto $z2 = 0
Unit: staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z2)
Unit: $i6 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: int getRepeatInterval()>()
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r13 = virtualinvoke $r12.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder onSaturdayAndSunday()>()
Unit: $l0 = virtualinvoke r1.<java.util.Date: long getTime()>()
Unit: $z3 = 0
Unit: specialinvoke $r28.<org.quartz.TimeOfDay: void <init>(int,int,int)>(23, 59, 59)
Unit: $l4 = virtualinvoke $r23.<java.util.Date: long getTime()>()
Unit: $r24 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>
Unit: $b2 = $l0 cmp $l1
Unit: $r29 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TimeOfDay getEndTimeOfDay()>()
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test", "test")
Unit: $z3 = 1
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r21)
Unit: $r20 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: $r23 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: java.util.Date getEndTime()>()
Unit: $r16 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder endAt(java.util.Date)>(r2)
Unit: $r14 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r13)
Unit: $z2 = 1
Unit: $r27 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TimeOfDay getStartTimeOfDay()>()
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 2, 1, 2011)
Unit: $b5 = $l3 cmp $l4
Unit: specialinvoke $r26.<org.quartz.TimeOfDay: void <init>(int,int,int)>(10, 0, 0)
Unit: if $b5 != 0 goto $z3 = 0
Unit: $r9 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourMinuteAndSecondOfDay(int,int,int)>(10, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i7)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(121, $i6)
Unit: $r30 = (org.quartz.spi.OperableTrigger) r3
Unit: $r25 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: $r26 = new org.quartz.TimeOfDay
Unit: $r11 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourMinuteAndSecondOfDay(int,int,int)>(23, 59, 59)
Unit: $r21 = virtualinvoke $r20.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25)
Unit: goto [?= staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z3)]
Unit: $r18 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27)
Unit: r3 = (org.quartz.DailyTimeIntervalTrigger) $r17
Unit: $r22 = interfaceinvoke r3.<org.quartz.DailyTimeIntervalTrigger: java.util.Date getStartTime()>()
Unit: goto [?= staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z2)]
Unit: $i7 = interfaceinvoke r4.<java.util.List: int size()>()
	method testRepeatCountTrigger : 
Unit: $r6 = virtualinvoke $r5.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInHours(int)>(1)
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $i0 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: int getRepeatInterval()>()
Unit: $r11 = virtualinvoke $r10.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: $r14 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: r2 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>($r16, null, 48)
Unit: r1 = (org.quartz.DailyTimeIntervalTrigger) $r9
Unit: $r7 = virtualinvoke $r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withRepeatCount(int)>(9)
Unit: $r3 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(10, $i1)
Unit: $r16 = (org.quartz.spi.OperableTrigger) r1
Unit: $r5 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r12 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: $r10 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r8 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: return
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("DEFAULT", $r13)
Unit: $i1 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r11)
Unit: $r4 = virtualinvoke $r3.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i0)
Unit: $r15 = interfaceinvoke r1.<org.quartz.DailyTimeIntervalTrigger: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
	method testEndingAtAfterCount : 
Unit: $r18 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r19)
Unit: $r15 = virtualinvoke $r14.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: $r16 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r19 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("DEFAULT", $r17)
Unit: $r23 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(10, 45, 0, 4, 1, 2011)
Unit: specialinvoke $r25.<org.quartz.TimeOfDay: void <init>(int,int)>(10, 45)
Unit: $r6 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r7 = virtualinvoke $r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(15)
Unit: $r20 = (org.quartz.spi.OperableTrigger) r2
Unit: $r8 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(8, 0)
Unit: $r14 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r25 = new org.quartz.TimeOfDay
Unit: $r22 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: $r12 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r1)
Unit: r3 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>($r20, null, 48)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r10 = virtualinvoke $r9.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAfterCount(int)>(12)
Unit: return
Unit: $r24 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r26 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TimeOfDay getEndTimeOfDay()>()
Unit: $r11 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r10)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r24)
Unit: $r9 = virtualinvoke $r7.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r8)
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r15)
Unit: $i0 = interfaceinvoke r3.<java.util.List: int size()>()
Unit: r2 = (org.quartz.DailyTimeIntervalTrigger) $r13
Unit: $r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r25, $r26)
	method testEndingAtAfterCountOf1 : 
Unit: return
Unit: specialinvoke r0.<org.quartz.DailyTimeIntervalScheduleBuilderTest: void validateTrigger(org.quartz.DailyTimeIntervalTrigger)>(r2)
Unit: $r20 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: $r14 = virtualinvoke $r13.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r3 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>($r21, null, 48)
Unit: specialinvoke $r26.<org.quartz.TimeOfDay: void <init>(int,int)>(8, 0)
Unit: $r18 = virtualinvoke $r17.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("DEFAULT", $r18)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27)
Unit: $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r6 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r11 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r10)
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: $r17 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r12 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r1)
Unit: $r23 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r26 = new org.quartz.TimeOfDay
Unit: $r10 = virtualinvoke $r9.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAfterCount(int)>(1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("test", $r16)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(java.lang.String,java.lang.String)>("testJob", "testJobGroup")
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r20)
Unit: $r25 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(47)
Unit: r2 = (org.quartz.DailyTimeIntervalTrigger) $r14
Unit: $r7 = virtualinvoke $r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(15)
Unit: $r19 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $r15 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TriggerKey getKey()>()
Unit: $r22 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r27 = interfaceinvoke r2.<org.quartz.DailyTimeIntervalTrigger: org.quartz.TimeOfDay getEndTimeOfDay()>()
Unit: $r21 = (org.quartz.spi.OperableTrigger) r2
Unit: $r8 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(8, 0)
Unit: $i0 = interfaceinvoke r3.<java.util.List: int size()>()
Unit: $r24 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 17, 2, 2011)
Unit: $r16 = virtualinvoke $r15.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r9 = virtualinvoke $r7.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r8)
	method validateTrigger : 
	method testEndingAtAfterCountOf0 : 
Unit: virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r2 = virtualinvoke $r1.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: goto [?= r23 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)]
Unit: $r8 = virtualinvoke $r2.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: $r16 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r15)
Unit: $r12 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r23)
Unit: r22 = $r20
Unit: r0 := @this: org.quartz.DailyTimeIntervalScheduleBuilderTest
Unit: $r6 = virtualinvoke $r4.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder startingDailyAt(org.quartz.TimeOfDay)>($r5)
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r21)
Unit: return
Unit: staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilderTest: void fail(java.lang.String)>("We should not accept endingDailyAfterCount(x) without first setting startingDailyAt.")
Unit: r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r13 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r5 = staticinvoke <org.quartz.TimeOfDay: org.quartz.TimeOfDay hourAndMinuteOfDay(int,int)>(8, 0)
Unit: $r19 := @caughtexception
Unit: $r11 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r3 = staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder dailyTimeIntervalSchedule()>()
Unit: $r15 = virtualinvoke $r14.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAfterCount(int)>(1)
Unit: $r1 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r23 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r14 = virtualinvoke $r13.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(15)
Unit: $r4 = virtualinvoke $r3.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder withIntervalInMinutes(int)>(15)
Unit: goto [?= return]
Unit: $r7 = virtualinvoke $r6.<org.quartz.DailyTimeIntervalScheduleBuilder: org.quartz.DailyTimeIntervalScheduleBuilder endingDailyAfterCount(int)>(0)
Unit: $r20 := @caughtexception
Unit: staticinvoke <org.quartz.DailyTimeIntervalScheduleBuilderTest: void fail(java.lang.String)>("We should not accept endingDailyAfterCount(0)")
Unit: r24 = $r19
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DBSemaphore
	method <init> : 
	method getLog : 
	method getThreadLocks : 
	method executeSQL : 
	method obtainLock : 
	method releaseLock : 
	method isLockOwner : 
	method requiresConnection : 
	method getSQL : 
	method setSQL : 
	method setInsertSQL : 
	method setExpandedSQL : 
	method getSchedulerNameLiteral : 
	method getSchedName : 
	method setSchedName : 
	method getTablePrefix : 
	method setTablePrefix : 
 ====================================== 
** CLASS org.quartz.simpl.SimpleThreadPool
	method <init> : 
	method <init> : 
	method getLog : 
	method getPoolSize : 
	method setThreadCount : 
	method getThreadCount : 
	method setThreadPriority : 
	method getThreadPriority : 
	method setThreadNamePrefix : 
	method getThreadNamePrefix : 
	method isThreadsInheritContextClassLoaderOfInitializingThread : 
	method setThreadsInheritContextClassLoaderOfInitializingThread : 
	method isThreadsInheritGroupOfInitializingThread : 
	method setThreadsInheritGroupOfInitializingThread : 
	method isMakeThreadsDaemons : 
	method setMakeThreadsDaemons : 
	method setInstanceId : 
	method setInstanceName : 
	method initialize : 
	method createWorkerThreads : 
	method shutdown : 
	method shutdown : 
	method runInThread : 
	method blockForAvailableThreads : 
	method makeAvailable : 
	method clearFromBusyWorkersList : 
 ====================================== 
** CLASS org.quartz.listeners.JobListenerSupport
	method <init> : 
	method getLog : 
	method jobToBeExecuted : 
	method jobExecutionVetoed : 
	method jobWasExecuted : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdJDBCDelegate$1
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.integrations.tests.QuartzMemoryCronTriggerTest
	method <init> : 
	method testCronRepeatCount : 
Unit: $r12 = <org.quartz.integrations.tests.TrackingJob: java.lang.String SCHEDULED_TIMES_KEY>
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r2, $r20)
Unit: goto [?= (branch)]
Unit: $l5 = l0 + $l4
Unit: $r8 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r9 = new java.util.LinkedList
Unit: r2 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r9)
Unit: $r26 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r25)
Unit: $r23 = r31[0]
Unit: $i1 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r28, $r30)
Unit: $r6 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: if i8 >= $i9 goto return
Unit: r3 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r28 = r31[i8]
Unit: goto [?= $i9 = lengthof r31]
Unit: interfaceinvoke $r16.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r3, r1)
Unit: $l4 = virtualinvoke $r27.<java.util.concurrent.TimeUnit: long toMillis(long)>($l3)
Unit: r31 = (java.lang.Long[]) $r22
Unit: $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: if $i6 >= 3 goto $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(500L)
Unit: i8 = i8 + 1
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r24, $r26)
Unit: $r20 = staticinvoke <org.hamcrest.collection.IsCollectionWithSize: org.hamcrest.Matcher hasSize(org.hamcrest.Matcher)>($r19)
Unit: $r7 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r6)
Unit: virtualinvoke $r11.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>($r12, r2)
Unit: $r15 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: $r14 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/TrackingJob;")
Unit: r0 := @this: org.quartz.integrations.tests.QuartzMemoryCronTriggerTest
Unit: specialinvoke $r9.<java.util.LinkedList: void <init>()>()
Unit: $l2 = l0 % 1000L
Unit: $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r21)
Unit: l0 = virtualinvoke $r23.<java.lang.Long: long longValue()>()
Unit: $l3 = (long) i8
Unit: i8 = 1
Unit: $r21 = newarray (java.lang.Long)[$i1]
Unit: $i6 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: r1 = (org.quartz.CronTrigger) $r8
Unit: $r27 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
Unit: $r16 = r0.<org.quartz.integrations.tests.QuartzMemoryCronTriggerTest: org.quartz.Scheduler scheduler>
Unit: return
Unit: $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
Unit: $r30 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r29)
Unit: $r10 = r0.<org.quartz.integrations.tests.QuartzMemoryCronTriggerTest: org.quartz.Scheduler scheduler>
Unit: i7 = 0
Unit: $r11 = interfaceinvoke $r10.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: i7 = i7 + 1
Unit: $r19 = staticinvoke <org.hamcrest.number.OrderingComparison: org.hamcrest.Matcher greaterThanOrEqualTo(java.lang.Comparable)>($r18)
Unit: if i7 >= 20 goto $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)
Unit: $i9 = lengthof r31
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
	method <init> : 
	method beforeClass : 
	method beforeTest : 
	method resetDatabaseData : 
	method afterTest : 
	method deleteJobDetailOnly : 
Unit: $r2 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/DeleteNonExistsJobTest$TestJob;")
Unit: $r5 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: r1 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r3 = virtualinvoke $r2.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("testjob")
Unit: interfaceinvoke $r6.<org.quartz.Scheduler: boolean deleteJob(org.quartz.JobKey)>($r7)
Unit: specialinvoke r0.<org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: void modifyStoredJobClassName()>()
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: interfaceinvoke $r5.<org.quartz.Scheduler: void addJob(org.quartz.JobDetail,boolean)>(r1, 1)
Unit: return
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
Unit: $r6 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: $r7 = interfaceinvoke r1.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
	method deleteJobDetailWithTrigger : 
Unit: r1 = virtualinvoke $r5.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r6 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
Unit: return
Unit: interfaceinvoke $r12.<org.quartz.Scheduler: boolean deleteJob(org.quartz.JobKey)>($r13)
Unit: specialinvoke r0.<org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: void modifyStoredJobClassName()>()
Unit: $r10 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r8 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("testjob2")
Unit: $r7 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("testjob2")
Unit: $r13 = interfaceinvoke r1.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r9 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r8)
Unit: r2 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r3 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/DeleteNonExistsJobTest$TestJob;")
Unit: $r5 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: $r12 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
	method deleteTrigger : 
Unit: $r3 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/DeleteNonExistsJobTest$TestJob;")
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("testjob3")
Unit: $r9 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r8)
Unit: $r8 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r10 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: return
Unit: $r7 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("testjob3")
Unit: specialinvoke r0.<org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: void modifyStoredJobClassName()>()
Unit: $r12 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: $r5 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: r1 = virtualinvoke $r5.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r13 = interfaceinvoke r2.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: r2 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
Unit: $r6 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: interfaceinvoke $r12.<org.quartz.Scheduler: boolean unscheduleJob(org.quartz.TriggerKey)>($r13)
	method replaceJobDetail : 
Unit: $r8 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: return
Unit: $r2 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/DeleteNonExistsJobTest$TestJob;")
Unit: $r14 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: $r3 = virtualinvoke $r2.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("testjob3")
Unit: $r9 = <org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: org.quartz.Scheduler scheduler>
Unit: $r12 = virtualinvoke $r11.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("testjob3")
Unit: interfaceinvoke $r9.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r15, r1)
Unit: $r11 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/DeleteNonExistsJobTest$TestJob;")
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("testjob3")
Unit: r16 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: r15 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r13 = virtualinvoke $r12.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: interfaceinvoke $r14.<org.quartz.Scheduler: void addJob(org.quartz.JobDetail,boolean)>(r16, 1)
Unit: specialinvoke r0.<org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest: void modifyStoredJobClassName()>()
Unit: $r7 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: r1 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
	method modifyStoredJobClassName : 
	method access$000 : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.core.RecoverJobsTest$RecoverJobsTestJob
	method <init> : 
	method execute : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.CronScheduleBuilderTest
	method <init> : 
	method testAtHourAndMinuteOnGivenDaysOfWeek : 
Unit: $r18 = interfaceinvoke r20.<org.quartz.CronTrigger: java.lang.String getCronExpression()>()
Unit: $r13 = newarray (java.lang.Integer)[1]
Unit: $r1 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r2 = virtualinvoke $r1.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $r3[2] = $r6
Unit: $r13[0] = $r14
Unit: r19 = (org.quartz.CronTrigger) $r9
Unit: $r12 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: r0 := @this: org.quartz.CronScheduleBuilderTest
Unit: return
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("0 0 10 ? * 4", $r18)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r15 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder atHourAndMinuteOnGivenDaysOfWeek(int,int,java.lang.Integer[])>(10, 0, $r13)
Unit: $r7 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder atHourAndMinuteOnGivenDaysOfWeek(int,int,java.lang.Integer[])>(10, 0, $r3)
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r11 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r3[0] = $r4
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("0 0 10 ? * 2,5,6", $r10)
Unit: $r16 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r15)
Unit: r20 = (org.quartz.CronTrigger) $r17
Unit: $r10 = interfaceinvoke r19.<org.quartz.CronTrigger: java.lang.String getCronExpression()>()
Unit: $r8 = virtualinvoke $r2.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r3[1] = $r5
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r3 = newarray (java.lang.Integer)[3]
 ====================================== 
** CLASS org.quartz.Driver
	method <init> : 
	method main : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JTANonClusteredSemaphore
	method <init> : 
	method getLog : 
	method setTransactionManagerJNDIName : 
	method getThreadLocks : 
	method obtainLock : 
	method getTransaction : 
	method releaseLock : 
	method releaseLock : 
	method isLockOwner : 
	method requiresConnection : 
 ====================================== 
** CLASS org.quartz.simpl.PropertySettingJobFactory
	method <init> : 
	method newJob : 
	method setBeanProps : 
	method handleError : 
	method handleError : 
	method getSetMethod : 
	method isThrowIfPropertyNotFound : 
	method setThrowIfPropertyNotFound : 
	method isWarnIfPropertyNotFound : 
	method setWarnIfPropertyNotFound : 
 ====================================== 
** CLASS org.quartz.ObjectAlreadyExistsException
	method <init> : 
	method <init> : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.Semaphore
	method obtainLock : 
	method releaseLock : 
	method requiresConnection : 
 ====================================== 
** CLASS org.quartz.AbstractJobStoreTest$MyJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.core.QuartzScheduler$1
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.quartz.impl.matchers.EverythingMatcher
	method <init> : 
	method allJobs : 
	method allTriggers : 
	method isMatch : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.quartz.UnableToInterruptJobException
	method <init> : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.JobDetailTest$SomePersistentJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.calendar.CalendarComparator
	method <init> : 
	method compare : 
	method compare : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities$DerbyEmbeddedConnectionProvider
	method <init> : 
	method getConnection : 
	method shutdown : 
	method initialize : 
 ====================================== 
** CLASS org.quartz.xml.XMLSchedulingDataProcessor$1
	method <init> : 
	method getNamespaceURI : 
	method getPrefixes : 
	method getPrefix : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.CronTriggerPersistenceDelegate
	method <init> : 
	method initialize : 
	method getHandledTriggerTypeDiscriminator : 
	method canHandleTriggerType : 
	method deleteExtendedTriggerProperties : 
	method insertExtendedTriggerProperties : 
	method loadExtendedTriggerProperties : 
	method updateExtendedTriggerProperties : 
 ====================================== 
** CLASS org.quartz.JobPersistenceException
	method <init> : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$VoidTransactionCallback
	method <init> : 
	method execute : 
	method executeVoid : 
	method execute : 
 ====================================== 
** CLASS org.quartz.TriggerUtils
	method <init> : 
	method computeFireTimes : 
	method computeEndTimeToAllowParticularNumberOfFirings : 
	method computeFireTimesBetween : 
 ====================================== 
** CLASS org.quartz.spi.TriggerFiredResult
	method <init> : 
	method <init> : 
	method getTriggerFiredBundle : 
	method getException : 
 ====================================== 
** CLASS org.quartz.TriggerBuilder
	method <init> : 
	method newTrigger : 
	method build : 
	method withIdentity : 
	method withIdentity : 
	method withIdentity : 
	method withDescription : 
	method withPriority : 
	method modifiedByCalendar : 
	method startAt : 
	method startNow : 
	method endAt : 
	method withSchedule : 
	method forJob : 
	method forJob : 
	method forJob : 
	method forJob : 
	method usingJobData : 
	method usingJobData : 
	method usingJobData : 
	method usingJobData : 
	method usingJobData : 
	method usingJobData : 
	method usingJobData : 
 ====================================== 
** CLASS org.quartz.impl.JobDetailImpl
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method getName : 
	method setName : 
	method getGroup : 
	method setGroup : 
	method getFullName : 
	method getKey : 
	method setKey : 
	method getDescription : 
	method setDescription : 
	method getJobClass : 
	method setJobClass : 
	method getJobDataMap : 
	method setJobDataMap : 
	method setDurability : 
	method setRequestsRecovery : 
	method isDurable : 
	method isPersistJobDataAfterExecution : 
	method isConcurrentExectionDisallowed : 
	method requestsRecovery : 
	method toString : 
	method equals : 
	method hashCode : 
	method clone : 
	method getJobBuilder : 
 ====================================== 
** CLASS org.quartz.integrations.tests.QuartzDatabaseCronTriggerTest
	method <init> : 
	method testCronRepeatCount : 
Unit: $r14 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/TrackingJob;")
Unit: $r15 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: i8 = 1
Unit: i7 = 0
Unit: $i1 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: $r7 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r6)
Unit: i7 = i7 + 1
Unit: r1 = (org.quartz.CronTrigger) $r8
Unit: r31 = (java.lang.Long[]) $r22
Unit: $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(500L)
Unit: $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
Unit: $r26 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r25)
Unit: if i8 >= $i9 goto return
Unit: if $i6 >= 3 goto $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r6 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: l0 = virtualinvoke $r23.<java.lang.Long: long longValue()>()
Unit: $l3 = (long) i8
Unit: r2 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r9)
Unit: return
Unit: $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)
Unit: r3 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: specialinvoke $r9.<java.util.LinkedList: void <init>()>()
Unit: $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
Unit: $i9 = lengthof r31
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: interfaceinvoke $r16.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r3, r1)
Unit: $l4 = virtualinvoke $r27.<java.util.concurrent.TimeUnit: long toMillis(long)>($l3)
Unit: $l5 = l0 + $l4
Unit: i8 = i8 + 1
Unit: $r8 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $l2 = l0 % 1000L
Unit: $r30 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r29)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r2, $r20)
Unit: $r27 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
Unit: $i6 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: goto [?= (branch)]
Unit: $r23 = r31[0]
Unit: $r11 = interfaceinvoke $r10.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: $r12 = <org.quartz.integrations.tests.TrackingJob: java.lang.String SCHEDULED_TIMES_KEY>
Unit: $r19 = staticinvoke <org.hamcrest.number.OrderingComparison: org.hamcrest.Matcher greaterThanOrEqualTo(java.lang.Comparable)>($r18)
Unit: r0 := @this: org.quartz.integrations.tests.QuartzDatabaseCronTriggerTest
Unit: $r20 = staticinvoke <org.hamcrest.collection.IsCollectionWithSize: org.hamcrest.Matcher hasSize(org.hamcrest.Matcher)>($r19)
Unit: goto [?= $i9 = lengthof r31]
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r24, $r26)
Unit: $r16 = r0.<org.quartz.integrations.tests.QuartzDatabaseCronTriggerTest: org.quartz.Scheduler scheduler>
Unit: virtualinvoke $r11.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>($r12, r2)
Unit: $r10 = r0.<org.quartz.integrations.tests.QuartzDatabaseCronTriggerTest: org.quartz.Scheduler scheduler>
Unit: $r9 = new java.util.LinkedList
Unit: $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r21)
Unit: $r28 = r31[i8]
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r28, $r30)
Unit: if i7 >= 20 goto $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $r21 = newarray (java.lang.Long)[$i1]
 ====================================== 
** CLASS org.quartz.listeners.BroadcastTriggerListener
	method <init> : 
	method <init> : 
	method getName : 
	method addListener : 
	method removeListener : 
	method removeListener : 
	method getListeners : 
	method triggerFired : 
	method vetoJobExecution : 
	method triggerMisfired : 
	method triggerComplete : 
 ====================================== 
** CLASS org.quartz.core.ListenerManagerTest
	method <init> : 
	method setUp : 
	method testManagementOfJobListeners : 
Unit: specialinvoke $r7.<org.quartz.core.ListenerManagerTest$TestJobListener: void <init>(java.lang.String)>("tl2")
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener\'s matcher list", 2, $i4)
Unit: if i5 >= 15 goto r24 = virtualinvoke r23.<org.quartz.core.ListenerManagerImpl: java.util.List getJobListeners()>()
Unit: goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
Unit: $r7 = new org.quartz.core.ListenerManagerTest$TestJobListener
Unit: i6 = 0
Unit: i5 = 0
Unit: specialinvoke $r6.<org.quartz.core.ListenerManagerTest$TestJobListener: void <init>(java.lang.String)>("tl1")
Unit: virtualinvoke r23.<org.quartz.core.ListenerManagerImpl: void addJobListener(org.quartz.JobListener)>($r21)
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("Unexpected order of listeners", $r17, r5)
Unit: r1 = $r6
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: boolean addJobListenerMatcher(java.lang.String,org.quartz.Matcher)>("tl2", $r13)
Unit: r5 = (org.quartz.JobListener) $r16
Unit: i6 = i6 + 1
Unit: r4 = interfaceinvoke r24.<java.util.List: java.util.Iterator iterator()>()
Unit: r23 = $r15
Unit: specialinvoke $r18.<org.quartz.core.ListenerManagerTest$TestJobListener: void <init>(java.lang.String)>($r20)
Unit: $r6 = new org.quartz.core.ListenerManagerTest$TestJobListener
Unit: $r10 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("foo")
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 2, $i2)
Unit: $i2 = interfaceinvoke $r11.<java.util.List: int size()>()
Unit: $r11 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getJobListeners()>()
Unit: r2 = $r7
Unit: return
Unit: r3 = newarray (org.quartz.JobListener)[15]
Unit: r0 := @this: org.quartz.core.ListenerManagerTest
Unit: $r12 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getJobListeners()>()
Unit: r22 = $r8
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 1, $i1)
Unit: specialinvoke $r15.<org.quartz.core.ListenerManagerImpl: void <init>()>()
Unit: $r18 = new org.quartz.core.ListenerManagerTest$TestJobListener
Unit: $r15 = new org.quartz.core.ListenerManagerImpl
Unit: $i1 = interfaceinvoke $r9.<java.util.List: int size()>()
Unit: $r17 = r3[i6]
Unit: $r14 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getJobListenerMatchers(java.lang.String)>("tl2")
Unit: i5 = i5 + 1
Unit: specialinvoke $r8.<org.quartz.core.ListenerManagerImpl: void <init>()>()
Unit: $r21 = r3[i5]
Unit: goto [?= (branch)]
Unit: b0 = 15
Unit: r24 = virtualinvoke r23.<org.quartz.core.ListenerManagerImpl: java.util.List getJobListeners()>()
Unit: $i4 = interfaceinvoke $r14.<java.util.List: int size()>()
Unit: $r19 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
Unit: $r8 = new org.quartz.core.ListenerManagerImpl
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 1, $i3)
Unit: $r13 = staticinvoke <org.quartz.impl.matchers.NameMatcher: org.quartz.impl.matchers.NameMatcher jobNameContains(java.lang.String)>("foo")
Unit: r3[i5] = $r18
Unit: $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: void addJobListener(org.quartz.JobListener,org.quartz.Matcher)>(r2, $r10)
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: boolean removeJobListener(java.lang.String)>("tl1")
Unit: $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
Unit: $r9 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getJobListeners()>()
Unit: $i3 = interfaceinvoke $r12.<java.util.List: int size()>()
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: void addJobListener(org.quartz.JobListener)>(r1)
Unit: if $z2 == 0 goto return
Unit: $r20 = virtualinvoke $r19.<java.util.UUID: java.lang.String toString()>()
	method testManagementOfTriggerListeners : 
Unit: $r19 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
Unit: i6 = 0
Unit: r4 = interfaceinvoke r24.<java.util.List: java.util.Iterator iterator()>()
Unit: specialinvoke $r18.<org.quartz.core.ListenerManagerTest$TestTriggerListener: void <init>(java.lang.String)>($r20)
Unit: $r9 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getTriggerListeners()>()
Unit: $r13 = staticinvoke <org.quartz.impl.matchers.NameMatcher: org.quartz.impl.matchers.NameMatcher nameContains(java.lang.String)>("foo")
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: boolean removeTriggerListener(java.lang.String)>("tl1")
Unit: r0 := @this: org.quartz.core.ListenerManagerTest
Unit: specialinvoke $r7.<org.quartz.core.ListenerManagerTest$TestTriggerListener: void <init>(java.lang.String)>("tl2")
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener\'s matcher list", 2, $i4)
Unit: return
Unit: $r14 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getTriggerListenerMatchers(java.lang.String)>("tl2")
Unit: $i1 = interfaceinvoke $r9.<java.util.List: int size()>()
Unit: if $z2 == 0 goto return
Unit: $r15 = new org.quartz.core.ListenerManagerImpl
Unit: i5 = 0
Unit: specialinvoke $r15.<org.quartz.core.ListenerManagerImpl: void <init>()>()
Unit: $r20 = virtualinvoke $r19.<java.util.UUID: java.lang.String toString()>()
Unit: $r6 = new org.quartz.core.ListenerManagerTest$TestTriggerListener
Unit: $r10 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("foo")
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: void addTriggerListener(org.quartz.TriggerListener,org.quartz.Matcher)>(r2, $r10)
Unit: r23 = $r15
Unit: $r11 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getTriggerListeners()>()
Unit: goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
Unit: specialinvoke $r8.<org.quartz.core.ListenerManagerImpl: void <init>()>()
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 2, $i2)
Unit: r3 = newarray (org.quartz.TriggerListener)[15]
Unit: r5 = (org.quartz.TriggerListener) $r16
Unit: r24 = virtualinvoke r23.<org.quartz.core.ListenerManagerImpl: java.util.List getTriggerListeners()>()
Unit: $r17 = r3[i6]
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: void addTriggerListener(org.quartz.TriggerListener)>(r1)
Unit: goto [?= (branch)]
Unit: r3[i5] = $r18
Unit: $i3 = interfaceinvoke $r12.<java.util.List: int size()>()
Unit: r2 = $r7
Unit: specialinvoke $r6.<org.quartz.core.ListenerManagerTest$TestTriggerListener: void <init>(java.lang.String)>("tl1")
Unit: $r21 = r3[i5]
Unit: $r18 = new org.quartz.core.ListenerManagerTest$TestTriggerListener
Unit: i6 = i6 + 1
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 1, $i3)
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 1, $i1)
Unit: $r12 = virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: java.util.List getTriggerListeners()>()
Unit: b0 = 15
Unit: $r7 = new org.quartz.core.ListenerManagerTest$TestTriggerListener
Unit: $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Unit: $i2 = interfaceinvoke $r11.<java.util.List: int size()>()
Unit: $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
Unit: $r8 = new org.quartz.core.ListenerManagerImpl
Unit: $i4 = interfaceinvoke $r14.<java.util.List: int size()>()
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("Unexpected order of listeners", $r17, r5)
Unit: virtualinvoke r22.<org.quartz.core.ListenerManagerImpl: boolean addTriggerListenerMatcher(java.lang.String,org.quartz.Matcher)>("tl2", $r13)
Unit: i5 = i5 + 1
Unit: r22 = $r8
Unit: if i5 >= 15 goto r24 = virtualinvoke r23.<org.quartz.core.ListenerManagerImpl: java.util.List getTriggerListeners()>()
Unit: virtualinvoke r23.<org.quartz.core.ListenerManagerImpl: void addTriggerListener(org.quartz.TriggerListener)>($r21)
Unit: r1 = $r6
	method testManagementOfSchedulerListeners : 
Unit: r2 = $r7
Unit: i4 = i4 + 1
Unit: virtualinvoke r17.<org.quartz.core.ListenerManagerImpl: void addSchedulerListener(org.quartz.SchedulerListener)>(r1)
Unit: if $z1 == 0 goto return
Unit: r3[i4] = $r15
Unit: $r9 = virtualinvoke r17.<org.quartz.core.ListenerManagerImpl: java.util.List getSchedulerListeners()>()
Unit: $i3 = interfaceinvoke $r11.<java.util.List: int size()>()
Unit: r0 := @this: org.quartz.core.ListenerManagerTest
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 1, $i1)
Unit: specialinvoke $r6.<org.quartz.core.ListenerManagerTest$TestSchedulerListener: void <init>()>()
Unit: specialinvoke $r7.<org.quartz.core.ListenerManagerTest$TestSchedulerListener: void <init>()>()
Unit: $r6 = new org.quartz.core.ListenerManagerTest$TestSchedulerListener
Unit: i4 = 0
Unit: i5 = 0
Unit: r3 = newarray (org.quartz.SchedulerListener)[15]
Unit: $r7 = new org.quartz.core.ListenerManagerTest$TestSchedulerListener
Unit: $r15 = new org.quartz.core.ListenerManagerTest$TestSchedulerListener
Unit: $r8 = new org.quartz.core.ListenerManagerImpl
Unit: return
Unit: if i4 >= 15 goto r19 = virtualinvoke r18.<org.quartz.core.ListenerManagerImpl: java.util.List getSchedulerListeners()>()
Unit: virtualinvoke r18.<org.quartz.core.ListenerManagerImpl: void addSchedulerListener(org.quartz.SchedulerListener)>($r16)
Unit: goto [?= (branch)]
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 1, $i3)
Unit: virtualinvoke r17.<org.quartz.core.ListenerManagerImpl: boolean removeSchedulerListener(org.quartz.SchedulerListener)>(r1)
Unit: $r16 = r3[i4]
Unit: specialinvoke $r8.<org.quartz.core.ListenerManagerImpl: void <init>()>()
Unit: r17 = $r8
Unit: $r10 = virtualinvoke r17.<org.quartz.core.ListenerManagerImpl: java.util.List getSchedulerListeners()>()
Unit: $i2 = interfaceinvoke $r10.<java.util.List: int size()>()
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertEquals(java.lang.String,int,int)>("Unexpected size of listener list", 2, $i2)
Unit: $r11 = virtualinvoke r17.<org.quartz.core.ListenerManagerImpl: java.util.List getSchedulerListeners()>()
Unit: $i1 = interfaceinvoke $r9.<java.util.List: int size()>()
Unit: r4 = interfaceinvoke r19.<java.util.List: java.util.Iterator iterator()>()
Unit: specialinvoke $r12.<org.quartz.core.ListenerManagerImpl: void <init>()>()
Unit: r5 = (org.quartz.SchedulerListener) $r13
Unit: r1 = $r6
Unit: staticinvoke <org.quartz.core.ListenerManagerTest: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("Unexpected order of listeners", $r14, r5)
Unit: specialinvoke $r15.<org.quartz.core.ListenerManagerTest$TestSchedulerListener: void <init>()>()
Unit: r19 = virtualinvoke r18.<org.quartz.core.ListenerManagerImpl: java.util.List getSchedulerListeners()>()
Unit: goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
Unit: b0 = 15
Unit: r18 = $r12
Unit: i5 = i5 + 1
Unit: virtualinvoke r17.<org.quartz.core.ListenerManagerImpl: void addSchedulerListener(org.quartz.SchedulerListener)>(r2)
Unit: $r14 = r3[i5]
Unit: $r12 = new org.quartz.core.ListenerManagerImpl
Unit: $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Unit: $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport
	method <init> : 
	method setDataSource : 
	method getDataSource : 
	method setTablePrefix : 
	method getTablePrefix : 
	method setUseProperties : 
	method canUseProperties : 
	method setInstanceId : 
	method getInstanceId : 
	method setInstanceName : 
	method setThreadPoolSize : 
	method setThreadExecutor : 
	method getThreadExecutor : 
	method getInstanceName : 
	method getEstimatedTimeToReleaseAndAcquireTrigger : 
	method setIsClustered : 
	method isClustered : 
	method getClusterCheckinInterval : 
	method setClusterCheckinInterval : 
	method getMaxMisfiresToHandleAtATime : 
	method setMaxMisfiresToHandleAtATime : 
	method getDbRetryInterval : 
	method setDbRetryInterval : 
	method setUseDBLocks : 
	method getUseDBLocks : 
	method isLockOnInsert : 
	method setLockOnInsert : 
	method getMisfireThreshold : 
	method setMisfireThreshold : 
	method isDontSetAutoCommitFalse : 
	method setDontSetAutoCommitFalse : 
	method isTxIsolationLevelSerializable : 
	method setTxIsolationLevelSerializable : 
	method isAcquireTriggersWithinLock : 
	method setAcquireTriggersWithinLock : 
	method setDriverDelegateClass : 
	method getDriverDelegateClass : 
	method setDriverDelegateInitString : 
	method getDriverDelegateInitString : 
	method getSelectWithLockSQL : 
	method setSelectWithLockSQL : 
	method getClassLoadHelper : 
	method getMakeThreadsDaemons : 
	method setMakeThreadsDaemons : 
	method isThreadsInheritInitializersClassLoadContext : 
	method setThreadsInheritInitializersClassLoadContext : 
	method getDoubleCheckLockMisfireHandler : 
	method setDoubleCheckLockMisfireHandler : 
	method getAcquireRetryDelay : 
	method getLog : 
	method initialize : 
	method schedulerStarted : 
	method schedulerPaused : 
	method schedulerResumed : 
	method shutdown : 
	method supportsPersistence : 
	method getNonManagedTXConnection : 
	method getAttributeRestoringConnection : 
	method getConnection : 
	method releaseLock : 
	method recoverJobs : 
	method recoverJobs : 
	method getMisfireTime : 
	method recoverMisfiredJobs : 
	method updateMisfiredTrigger : 
	method doUpdateOfMisfiredTrigger : 
	method storeJobAndTrigger : 
	method storeJob : 
	method storeJob : 
	method jobExists : 
	method storeTrigger : 
	method storeTrigger : 
	method triggerExists : 
	method removeJob : 
	method removeJob : 
	method removeJobs : 
	method removeTriggers : 
	method storeJobsAndTriggers : 
	method deleteJobAndChildren : 
	method deleteTriggerAndChildren : 
	method retrieveJob : 
	method retrieveJob : 
	method removeTrigger : 
	method removeTrigger : 
	method replaceTrigger : 
	method replaceTrigger : 
	method retrieveTrigger : 
	method retrieveTrigger : 
	method getTriggerState : 
	method getTriggerState : 
	method resetTriggerFromErrorState : 
	method resetTriggerFromErrorState : 
	method storeCalendar : 
	method storeCalendar : 
	method calendarExists : 
	method removeCalendar : 
	method removeCalendar : 
	method retrieveCalendar : 
	method retrieveCalendar : 
	method getNumberOfJobs : 
	method getNumberOfJobs : 
	method getNumberOfTriggers : 
	method getNumberOfTriggers : 
	method getNumberOfCalendars : 
	method getNumberOfCalendars : 
	method getJobKeys : 
	method getJobNames : 
	method checkExists : 
	method checkExists : 
	method checkExists : 
	method checkExists : 
	method clearAllSchedulingData : 
	method clearAllSchedulingData : 
	method getTriggerKeys : 
	method getTriggerNames : 
	method getJobGroupNames : 
	method getJobGroupNames : 
	method getTriggerGroupNames : 
	method getTriggerGroupNames : 
	method getCalendarNames : 
	method getCalendarNames : 
	method getTriggersForJob : 
	method getTriggersForJob : 
	method pauseTrigger : 
	method pauseTrigger : 
	method pauseJob : 
	method pauseJobs : 
	method checkBlockedState : 
	method resumeTrigger : 
	method resumeTrigger : 
	method resumeJob : 
	method resumeJobs : 
	method pauseTriggers : 
	method pauseTriggerGroup : 
	method getPausedTriggerGroups : 
	method getPausedTriggerGroups : 
	method resumeTriggers : 
	method resumeTriggerGroup : 
	method pauseAll : 
	method pauseAll : 
	method resumeAll : 
	method resumeAll : 
	method getFiredTriggerRecordId : 
	method acquireNextTriggers : 
	method acquireNextTrigger : 
	method releaseAcquiredTrigger : 
	method releaseAcquiredTrigger : 
	method triggersFired : 
	method triggerFired : 
	method triggeredJobComplete : 
	method triggeredJobComplete : 
	method getDelegate : 
	method getLockHandler : 
	method setLockHandler : 
	method doRecoverMisfires : 
	method signalSchedulingChangeOnTxCompletion : 
	method clearAndGetSignalSchedulingChangeOnTxCompletion : 
	method signalSchedulingChangeImmediately : 
	method doCheckin : 
	method findFailedInstances : 
	method findOrphanedFailedInstances : 
	method calcFailedIfAfter : 
	method clusterCheckIn : 
	method clusterRecover : 
	method logWarnIfNonZero : 
	method cleanupConnection : 
	method closeConnection : 
	method rollbackConnection : 
	method commitConnection : 
	method executeWithoutLock : 
	method executeInLock : 
	method retryExecuteInNonManagedTXLock : 
	method executeInNonManagedTXLock : 
	method resumeJobs : 
	method resumeTriggers : 
	method pauseJobs : 
	method pauseTriggers : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.JobBuilderTest$TestAnnotatedJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionProvider
	method <init> : 
	method getConnection : 
	method shutdown : 
	method initialize : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
	method <init> : 
	method getObjectFromBlob : 
	method getJobDataFromBlob : 
 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap$DirtyFlagSet
	method <init> : 
	method getWrappedSet : 
 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap$DirtyFlagCollection
	method <init> : 
	method getWrappedCollection : 
	method iterator : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method clear : 
	method size : 
	method isEmpty : 
	method contains : 
	method add : 
	method addAll : 
	method containsAll : 
	method toArray : 
	method toArray : 
 ====================================== 
** CLASS org.quartz.AbstractJobStoreTest$SampleSignaler
	method <init> : 
	method notifyTriggerListenersMisfired : 
	method signalSchedulingChange : 
	method notifySchedulerListenersFinalized : 
	method notifySchedulerListenersJobDeleted : 
	method notifySchedulerListenersError : 
 ====================================== 
** CLASS org.quartz.TriggerBuilderTest
	method <init> : 
	method setUp : 
	method testTriggerBuilder : 
Unit: $r14 = new java.lang.StringBuilder
Unit: r95 = virtualinvoke $r49.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74)
Unit: specialinvoke $r88.<java.lang.StringBuilder: void <init>()>()
Unit: $z12 = 1
Unit: specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r18, $z6)
Unit: $r66 = new java.lang.StringBuilder
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32)
Unit: return
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r40, $z10)
Unit: $r20 = new java.lang.StringBuilder
Unit: $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r68)
Unit: $z5 = 1
Unit: $r74 = interfaceinvoke r95.<org.quartz.Trigger: java.lang.String getDescription()>()
Unit: $r78 = new java.lang.StringBuilder
Unit: $r87 = interfaceinvoke r95.<org.quartz.Trigger: java.util.Date getStartTime()>()
Unit: $z8 = 0
Unit: specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
Unit: $z10 = 0
Unit: $r16 = interfaceinvoke r94.<org.quartz.Trigger: org.quartz.JobKey getJobKey()>()
Unit: $i1 = interfaceinvoke r94.<org.quartz.Trigger: int getPriority()>()
Unit: $r53 = virtualinvoke $r52.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: $r64 = interfaceinvoke r95.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job key: ")
Unit: specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
Unit: $z7 = 0
Unit: $r38 = interfaceinvoke r94.<org.quartz.Trigger: java.util.Date getEndTime()>()
Unit: $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61)
Unit: $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r34, $z9)]
Unit: $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected trigger priortiy: ")
Unit: $r84 = interfaceinvoke r95.<org.quartz.Trigger: java.util.Date getStartTime()>()
Unit: specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
Unit: $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53)
Unit: if $r71 != null goto $z11 = 0
Unit: if $r25 != null goto $z7 = 0
Unit: specialinvoke $r82.<java.lang.StringBuilder: void <init>()>()
Unit: $z3 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>("my description")
Unit: $z13 = 1
Unit: $z10 = 1
Unit: $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected trigger priortiy: ")
Unit: $z6 = 1
Unit: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r29, $z8)
Unit: $r35 = interfaceinvoke r94.<org.quartz.Trigger: java.util.Date getStartTime()>()
Unit: specialinvoke $r66.<java.lang.StringBuilder: void <init>()>()
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r86, $z4)
Unit: $z5 = 0
Unit: $i2 = interfaceinvoke r95.<org.quartz.Trigger: int getPriority()>()
Unit: $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
Unit: if $r41 != null goto $z10 = 0
Unit: $z4 = virtualinvoke $r87.<java.util.Date: boolean equals(java.lang.Object)>(r1)
Unit: $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $z12 = 0
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected non-null trigger name ", $z5)
Unit: $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r95)
Unit: $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r45 = virtualinvoke $r44.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withPriority(int)>(2)
Unit: $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r70, $z11)]
Unit: $r22 = interfaceinvoke r94.<org.quartz.Trigger: java.lang.String getDescription()>()
Unit: $r41 = interfaceinvoke r94.<org.quartz.Trigger: java.util.Date getEndTime()>()
Unit: $r30 = new java.lang.StringBuilder
Unit: specialinvoke $r78.<java.lang.StringBuilder: void <init>()>()
Unit: $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end-time: ")
Unit: $z7 = 1
Unit: $r32 = interfaceinvoke r94.<org.quartz.Trigger: java.util.Date getStartTime()>()
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r76, $z3)
Unit: $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected trigger group: ")
Unit: $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r88 = new java.lang.StringBuilder
Unit: $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38)
Unit: $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r65 = virtualinvoke $r64.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job description: ")
Unit: $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job key: ")
Unit: $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r42 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $z1 = virtualinvoke $r57.<java.lang.String: boolean equals(java.lang.Object)>("t1")
Unit: $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r93 = interfaceinvoke r95.<org.quartz.Trigger: java.util.Date getEndTime()>()
Unit: $z8 = 1
Unit: $z11 = 0
Unit: $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $z9 = 0
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r11, $z0)
Unit: $r72 = new java.lang.StringBuilder
Unit: $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r90)
Unit: $r43 = virtualinvoke $r42.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("t1")
Unit: $r26 = new java.lang.StringBuilder
Unit: specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()
Unit: specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()
Unit: $r52 = interfaceinvoke r95.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r6 = new java.lang.StringBuilder
Unit: $r49 = virtualinvoke $r48.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r1)
Unit: $r77 = interfaceinvoke r95.<org.quartz.Trigger: java.lang.String getDescription()>()
Unit: $r8 = interfaceinvoke r94.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r81, $z12)]
Unit: $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end-time: ")
Unit: r0 := @this: org.quartz.TriggerBuilderTest
Unit: $r4 = interfaceinvoke r94.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r48 = virtualinvoke $r45.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder endAt(java.util.Date)>($r47)
Unit: if $i2 != 2 goto $z12 = 0
Unit: $r82 = new java.lang.StringBuilder
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r92, $z13)]
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r29, $z8)]
Unit: $z13 = 0
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r24, $z7)
Unit: $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r81, $z12)
Unit: specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()
Unit: $z2 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>("DEFAULT")
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: $r61 = virtualinvoke $r60.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: specialinvoke $r72.<java.lang.StringBuilder: void <init>()>()
Unit: $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("DEFAULT")
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r18, $z6)]
Unit: if $r19 != null goto $z6 = 0
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r40, $z10)]
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r92, $z13)
Unit: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected trigger group: ")
Unit: $r57 = virtualinvoke $r56.<org.quartz.TriggerKey: java.lang.String getName()>()
Unit: $r12 = interfaceinvoke r94.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r34, $z9)
Unit: $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected trigger name ")
Unit: $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start-time: ")
Unit: $r71 = interfaceinvoke r95.<org.quartz.Trigger: org.quartz.JobKey getJobKey()>()
Unit: $i0 = interfaceinvoke r94.<org.quartz.Trigger: int getPriority()>()
Unit: $r25 = interfaceinvoke r94.<org.quartz.Trigger: java.lang.String getDescription()>()
Unit: $r44 = virtualinvoke $r43.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withDescription(java.lang.String)>("my description")
Unit: $r19 = interfaceinvoke r94.<org.quartz.Trigger: org.quartz.JobKey getJobKey()>()
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r70, $z11)
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r63, $z2)
Unit: $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start-time: ")
Unit: $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $z11 = 1
Unit: $r68 = interfaceinvoke r95.<org.quartz.Trigger: org.quartz.JobKey getJobKey()>()
Unit: specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
Unit: staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r55, $z1)
Unit: $r46 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit WEEK>
Unit: $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r84)
Unit: $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
Unit: $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job description: ")
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenSecondDateAfterNow()>()
Unit: if $r93 == null goto $z13 = 0
Unit: $z9 = 1
Unit: $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16)
Unit: $r90 = interfaceinvoke r95.<org.quartz.Trigger: java.util.Date getEndTime()>()
Unit: $r36 = new java.lang.StringBuilder
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerKey: java.lang.String getGroup()>()
Unit: $r50 = new java.lang.StringBuilder
Unit: $z6 = 0
Unit: if $r5 == null goto $z5 = 0
Unit: $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected non-null trigger name ", $z5)]
Unit: if $i1 != 5 goto $z8 = 0
Unit: $r47 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(10, $r46)
Unit: if $r35 == null goto $z9 = 0
Unit: r94 = virtualinvoke $r2.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r2 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: goto [?= staticinvoke <org.quartz.TriggerBuilderTest: void assertTrue(java.lang.String,boolean)>($r24, $z7)]
Unit: $r56 = interfaceinvoke r95.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r60 = interfaceinvoke r95.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r58 = new java.lang.StringBuilder
	method testTriggerBuilderWithEndTimePriorCurrrentTime : 
Unit: specialinvoke $r4.<java.util.Date: void <init>(long)>($l1)
Unit: $r4 = new java.util.Date
Unit: $r8 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("0 0 0 * * ?")
Unit: $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
Unit: $r2 = virtualinvoke $r1.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("some trigger name", "some trigger group")
Unit: $r1 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r0 := @this: org.quartz.TriggerBuilderTest
Unit: virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r9 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r8)
Unit: specialinvoke $r6.<java.util.Date: void <init>(long)>($l3)
Unit: $r6 = new java.util.Date
Unit: $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
Unit: $r5 = virtualinvoke $r3.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r4)
Unit: $r7 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder endAt(java.util.Date)>($r6)
Unit: $l1 = $l0 - 200000000L
Unit: $r3 = virtualinvoke $r2.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(java.lang.String,java.lang.String)>("some job name", "some job group")
Unit: return
Unit: $l3 = $l2 - 100000000L
 ====================================== 
** CLASS org.quartz.ee.servlet.QuartzInitializerListener
	method <init> : 
	method contextInitialized : 
	method getSchedulerFactory : 
	method contextDestroyed : 
 ====================================== 
** CLASS org.quartz.impl.calendar.AnnualCalendar
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method clone : 
	method getDaysExcluded : 
	method isDayExcluded : 
	method setDaysExcluded : 
	method setDayExcluded : 
	method removeExcludedDay : 
	method removeExcludedDay : 
	method isTimeIncluded : 
	method getNextIncludedTime : 
 ====================================== 
** CLASS org.quartz.impl.RemoteMBeanSchedulerTest
	method <init> : 
	method setUp : 
	method tearDown : 
	method testJMXAttributesAccess : 
Unit: $r17 = virtualinvoke $r16.<org.quartz.impl.RemoteMBeanScheduler: java.lang.String getSchedulerInstanceId()>()
Unit: $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r6 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r29 = interfaceinvoke $r28.<org.quartz.Scheduler: java.util.List getTriggerGroupNames()>()
Unit: $r26 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r5 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r4)
Unit: $r25 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r24)
Unit: $r30 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r29)
Unit: $r23 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r21 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r1 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r18 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r11 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r2, $r5)
Unit: $r27 = virtualinvoke $r26.<org.quartz.impl.RemoteMBeanScheduler: java.util.List getTriggerGroupNames()>()
Unit: $r4 = interfaceinvoke $r3.<org.quartz.Scheduler: java.util.List getCalendarNames()>()
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r20 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r19)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r7, $r10)
Unit: $r19 = interfaceinvoke $r18.<org.quartz.Scheduler: java.lang.String getSchedulerInstanceId()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r22, $r25)
Unit: $r2 = virtualinvoke $r1.<org.quartz.impl.RemoteMBeanScheduler: java.util.List getCalendarNames()>()
Unit: $r14 = interfaceinvoke $r13.<org.quartz.Scheduler: java.util.Set getPausedTriggerGroups()>()
Unit: $r8 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r27, $r30)
Unit: return
Unit: $r10 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r9)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r17, $r20)
Unit: $r28 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r9 = interfaceinvoke $r8.<org.quartz.Scheduler: java.util.List getJobGroupNames()>()
Unit: $r12 = virtualinvoke $r11.<org.quartz.impl.RemoteMBeanScheduler: java.util.Set getPausedTriggerGroups()>()
Unit: $r22 = virtualinvoke $r21.<org.quartz.impl.RemoteMBeanScheduler: java.lang.String getSchedulerName()>()
Unit: $r16 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r24 = interfaceinvoke $r23.<org.quartz.Scheduler: java.lang.String getSchedulerName()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r12, $r15)
Unit: $r13 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r14)
Unit: $r7 = virtualinvoke $r6.<org.quartz.impl.RemoteMBeanScheduler: java.util.List getJobGroupNames()>()
	method testSchedulerMetaData : 
Unit: $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
Unit: $z9 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isJobStoreClustered()>()
Unit: $r42 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.Class getThreadPoolClass()>()
Unit: $r7 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r6)
Unit: $r14 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.Class getSchedulerClass()>()
Unit: $r43 = virtualinvoke r2.<org.quartz.SchedulerMetaData: java.lang.Class getThreadPoolClass()>()
Unit: $r13 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r12)
Unit: $r6 = virtualinvoke r2.<org.quartz.SchedulerMetaData: java.lang.String getSchedulerName()>()
Unit: $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r24 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r23)
Unit: $z1 = virtualinvoke r2.<org.quartz.SchedulerMetaData: boolean isInStandbyMode()>()
Unit: r2 = interfaceinvoke $r4.<org.quartz.Scheduler: org.quartz.SchedulerMetaData getMetaData()>()
Unit: $r10 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r9)
Unit: $z4 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isInStandbyMode()>()
Unit: $r39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9)
Unit: $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r51, $r53)
Unit: $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r48, $r50)
Unit: r1 = virtualinvoke $r3.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.SchedulerMetaData getMetaData()>()
Unit: $z5 = virtualinvoke r2.<org.quartz.SchedulerMetaData: boolean isInStandbyMode()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r28, $r29)
Unit: $r21 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r20)
Unit: $i2 = virtualinvoke r1.<org.quartz.SchedulerMetaData: int getThreadPoolSize()>()
Unit: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $r4 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
Unit: $z8 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isJobStoreSupportsPersistence()>()
Unit: $r44 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r43)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r5, $r7)
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r48 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.String getVersion()>()
Unit: $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7)
Unit: $i0 = virtualinvoke r1.<org.quartz.SchedulerMetaData: int getNumberOfJobsExecuted()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r42, $r44)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r45, $r47)
Unit: $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r8, $r10)
Unit: $z7 = virtualinvoke r2.<org.quartz.SchedulerMetaData: boolean isShutdown()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r11, $r13)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r30, $r32)
Unit: $r49 = virtualinvoke r2.<org.quartz.SchedulerMetaData: java.lang.String getVersion()>()
Unit: $r8 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.String getSchedulerInstanceId()>()
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $z3 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isStarted()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r14, $r15)
Unit: $z6 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isShutdown()>()
Unit: $r29 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher nullValue()>()
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r25, $r27)
Unit: $i3 = virtualinvoke r2.<org.quartz.SchedulerMetaData: int getThreadPoolSize()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r19, $r21)
Unit: $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r22, $r24)
Unit: $z2 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isSchedulerRemote()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r39, $r41)
Unit: $z0 = virtualinvoke r1.<org.quartz.SchedulerMetaData: boolean isInStandbyMode()>()
Unit: $r52 = virtualinvoke r2.<org.quartz.SchedulerMetaData: java.lang.Class getJobStoreClass()>()
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r33, $r35)
Unit: $i1 = virtualinvoke r2.<org.quartz.SchedulerMetaData: int getNumberOfJobsExecuted()>()
Unit: $r34 = virtualinvoke r2.<org.quartz.SchedulerMetaData: java.lang.Class getJobStoreClass()>()
Unit: $r28 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.util.Date getRunningSince()>()
Unit: $r51 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.Class getJobStoreClass()>()
Unit: $r9 = virtualinvoke r2.<org.quartz.SchedulerMetaData: java.lang.String getSchedulerInstanceId()>()
Unit: $r38 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r37)
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r36, $r38)
Unit: $r53 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r52)
Unit: $r32 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r31)
Unit: $r47 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r46)
Unit: $r18 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r17)
Unit: $r50 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r49)
Unit: return
Unit: $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6)
Unit: $r40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r5 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.String getSchedulerName()>()
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r16, $r18)
Unit: $r33 = virtualinvoke r1.<org.quartz.SchedulerMetaData: java.lang.Class getJobStoreClass()>()
Unit: $r35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r34)
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>(class "Lorg/quartz/impl/RemoteMBeanSchedulerTest$TestRemoteScheduler;")
Unit: $r27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r26)
Unit: $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: $r41 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r40)
	method testCalendarOperations : 
Unit: virtualinvoke $r2.<org.quartz.impl.RemoteMBeanScheduler: void addCalendar(java.lang.String,org.quartz.Calendar,boolean,boolean)>("testCal", $r1, 1, 1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: r12 = $r10
Unit: $r1 = new org.quartz.impl.calendar.BaseCalendar
Unit: specialinvoke $r1.<org.quartz.impl.calendar.BaseCalendar: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: $r7 = interfaceinvoke $r6.<org.quartz.Scheduler: org.quartz.Calendar getCalendar(java.lang.String)>("calendar1")
Unit: goto [?= $r5 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r7, $r8)
Unit: r11 = $r9
Unit: $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r9 := @caughtexception
Unit: $r5 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r2 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r3.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.Calendar getCalendar(java.lang.String)>("test")
Unit: $r8 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher nullValue()>()
Unit: goto [?= $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: return
Unit: virtualinvoke $r5.<org.quartz.impl.RemoteMBeanScheduler: boolean deleteCalendar(java.lang.String)>("calendar1")
Unit: $r6 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r10 := @caughtexception
	method testTriggerOperations : 
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method had a different return type in MBean API")
Unit: virtualinvoke $r32.<org.quartz.impl.RemoteMBeanScheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>(r2)
Unit: $r26 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r25)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r34, $r36)
Unit: $r7 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: specialinvoke $r3.<org.quartz.TriggerKey: void <init>(java.lang.String,java.lang.String)>("trigger1", "group1")
Unit: $r39 = interfaceinvoke $r38.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: $r40 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r19, $r21)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r44, $r46)
Unit: goto [?= $r17 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r28 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: virtualinvoke $r37.<org.quartz.impl.RemoteMBeanScheduler: void pauseAll()>()
Unit: r52 = $r50
Unit: specialinvoke $r6.<org.quartz.JobKey: void <init>(java.lang.String,java.lang.String)>("job1", "group1")
Unit: virtualinvoke $r22.<org.quartz.impl.RemoteMBeanScheduler: void resumeTrigger(org.quartz.TriggerKey)>(r1)
Unit: $r17 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r4.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>(r1)
Unit: $r46 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r45)
Unit: $r6 = new org.quartz.JobKey
Unit: r51 = $r47
Unit: $r14 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r13)
Unit: $r12 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: virtualinvoke $r17.<org.quartz.impl.RemoteMBeanScheduler: void pauseTrigger(org.quartz.TriggerKey)>(r1)
Unit: virtualinvoke $r42.<org.quartz.impl.RemoteMBeanScheduler: void resumeAll()>()
Unit: virtualinvoke $r7.<org.quartz.impl.RemoteMBeanScheduler: java.util.List getTriggersOfJob(org.quartz.JobKey)>($r6)
Unit: goto [?= $r9 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r48 := @caughtexception
Unit: $r36 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r35)
Unit: return
Unit: $r20 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: goto [?= $r7 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r43 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r11, $r14)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: $r34 = interfaceinvoke $r33.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: r2 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("group1")
Unit: $r9 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r15.<org.quartz.impl.RemoteMBeanScheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>(r2)
Unit: r1 = $r3
Unit: $r11 = virtualinvoke $r10.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: $r44 = interfaceinvoke $r43.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: virtualinvoke $r9.<org.quartz.impl.RemoteMBeanScheduler: boolean checkExists(org.quartz.TriggerKey)>(r1)
Unit: $r27 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r29, $r31)
Unit: $r32 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r50 := @caughtexception
Unit: $r15 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r22 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r24 = interfaceinvoke $r23.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: $r18 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r25 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method had a different return type in MBean API")
Unit: goto [?= $r10 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r33 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r10 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r4 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r49 := @caughtexception
Unit: r53 = $r48
Unit: $r31 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r30)
Unit: $r3 = new org.quartz.TriggerKey
Unit: r54 = $r49
Unit: $r38 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r45 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r39, $r41)
Unit: virtualinvoke $r27.<org.quartz.impl.RemoteMBeanScheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>(r2)
Unit: $r21 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r20)
Unit: $r35 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r19 = interfaceinvoke $r18.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: $r41 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r40)
Unit: $r47 := @caughtexception
Unit: $r23 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r24, $r26)
Unit: $r29 = interfaceinvoke $r28.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: $r37 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r42 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r13 = interfaceinvoke $r12.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>(r1)
Unit: $r30 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
	method testJobOperations : 
Unit: goto [?= $r26 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: goto [?= $r12 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r40, $r42)
Unit: $r10 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>(r2)
Unit: $r45 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r44)
Unit: virtualinvoke $r11.<org.quartz.impl.RemoteMBeanScheduler: boolean checkExists(org.quartz.JobKey)>(r1)
Unit: $r50 := @caughtexception
Unit: $r8 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r52 := @caughtexception
Unit: $r36 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r43.<org.quartz.impl.RemoteMBeanScheduler: boolean deleteJobs(java.util.List)>($r45)
Unit: $r15 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r18, $r20)
Unit: $r41 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method had different parameters in MBean API")
Unit: $r35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r34)
Unit: r60 = $r49
Unit: goto [?= return]
Unit: $r51 := @caughtexception
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r22, $r24)
Unit: r58 = $r50
Unit: $r16 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r14 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r2 = virtualinvoke $r6.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r24 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r23)
Unit: $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r42 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r41)
Unit: r1 = $r3
Unit: $r6 = virtualinvoke $r5.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: $r26 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: goto [?= $r39 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r5 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(org.quartz.JobKey)>(r1)
Unit: r55 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("group1")
Unit: virtualinvoke $r14.<org.quartz.impl.RemoteMBeanScheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>(r55)
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Unit: $r12 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r4 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/impl/RemoteMBeanSchedulerTest$HelloJob;")
Unit: $r37 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r47 := @caughtexception
Unit: $r46 := @caughtexception
Unit: goto [?= $r30 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: virtualinvoke $r37.<org.quartz.impl.RemoteMBeanScheduler: java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)>(null, null)
Unit: specialinvoke $r3.<org.quartz.JobKey: void <init>(java.lang.String,java.lang.String)>("job2", "group1")
Unit: virtualinvoke $r30.<org.quartz.impl.RemoteMBeanScheduler: void scheduleJobs(java.util.Map,boolean)>(null, 0)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: virtualinvoke $r25.<org.quartz.impl.RemoteMBeanScheduler: void triggerJob(org.quartz.JobKey)>(r1)
Unit: $r43 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r54 = $r52
Unit: $r53 := @caughtexception
Unit: r62 = $r46
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method had different parameters in MBean API")
Unit: $r40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $i0 = interfaceinvoke $r17.<java.util.Set: int size()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: $z1 = virtualinvoke $r21.<org.quartz.impl.RemoteMBeanScheduler: boolean interrupt(org.quartz.JobKey)>(r1)
Unit: $r9 = virtualinvoke $r8.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>(r1)
Unit: $r17 = virtualinvoke $r16.<org.quartz.impl.RemoteMBeanScheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>(r55)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r33, $r35)
Unit: $r39 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r48 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: virtualinvoke $r12.<org.quartz.impl.RemoteMBeanScheduler: void pauseJob(org.quartz.JobKey)>(r1)
Unit: $z2 = virtualinvoke $r31.<org.quartz.impl.RemoteMBeanScheduler: boolean unscheduleJob(org.quartz.TriggerKey)>($r32)
Unit: r61 = $r48
Unit: $r3 = new org.quartz.JobKey
Unit: goto [?= $r28 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: virtualinvoke $r36.<org.quartz.impl.RemoteMBeanScheduler: boolean unscheduleJobs(java.util.List)>(null)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r9, $r10)
Unit: $r11 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r28.<org.quartz.impl.RemoteMBeanScheduler: java.util.Date scheduleJob(org.quartz.Trigger)>(null)
Unit: goto [?= $r37 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: $r28 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r7 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r56 = $r53
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method had different parameters in MBean API")
Unit: r57 = $r51
Unit: $r44 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String,java.lang.String)>("job1", "group1")
Unit: $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r49 := @caughtexception
Unit: $r32 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("trigger1", "group1")
Unit: $r30 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $z4 = virtualinvoke $r39.<org.quartz.impl.RemoteMBeanScheduler: boolean deleteJob(org.quartz.JobKey)>(r1)
Unit: $r25 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r15.<org.quartz.impl.RemoteMBeanScheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>(r55)
Unit: virtualinvoke $r26.<org.quartz.impl.RemoteMBeanScheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(null, null)
Unit: virtualinvoke $r13.<org.quartz.impl.RemoteMBeanScheduler: void resumeJob(org.quartz.JobKey)>(r1)
Unit: $r13 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r7.<org.quartz.impl.RemoteMBeanScheduler: void addJob(org.quartz.JobDetail,boolean)>(r2, 0)
Unit: $r31 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: return
Unit: $r20 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r19)
Unit: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: goto [?= $r31 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r21 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r59 = $r47
	method testLifecycleOperations : 
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r4, $r6)
Unit: $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r20 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r31 = $r28
Unit: $z2 = virtualinvoke $r12.<org.quartz.impl.RemoteMBeanScheduler: boolean isInStandbyMode()>()
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r8, $r10)
Unit: virtualinvoke $r21.<org.quartz.impl.RemoteMBeanScheduler: void shutdown()>()
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r22 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r23 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r7 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r10 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r9)
Unit: r32 = $r27
Unit: $r27 := @caughtexception
Unit: $z0 = virtualinvoke $r3.<org.quartz.impl.RemoteMBeanScheduler: boolean isStarted()>()
Unit: $z1 = interfaceinvoke $r7.<org.quartz.Scheduler: boolean isStarted()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Shutting down a scheduler un-registers it in JMX")
Unit: $r19 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r18)
Unit: goto [?= $r2 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: virtualinvoke $r22.<org.quartz.impl.RemoteMBeanScheduler: boolean isShutdown()>()
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r12 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r29 := @caughtexception
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: goto [?= $r21 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r24, $r26)
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: $r6 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r5)
Unit: return
Unit: $z3 = interfaceinvoke $r16.<org.quartz.Scheduler: boolean isInStandbyMode()>()
Unit: virtualinvoke $r11.<org.quartz.impl.RemoteMBeanScheduler: void standby()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: goto [?= $r23 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>]
Unit: r30 = $r29
Unit: $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r26 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r25)
Unit: $r11 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r17, $r19)
Unit: $z5 = interfaceinvoke $r23.<org.quartz.Scheduler: boolean isShutdown()>()
Unit: $r2 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r13, $r15)
Unit: virtualinvoke $r1.<org.quartz.impl.RemoteMBeanScheduler: void startDelayed(int)>(60)
Unit: $r28 := @caughtexception
Unit: $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r16 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.Scheduler scheduler>
Unit: $r1 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r2.<org.quartz.impl.RemoteMBeanScheduler: void start()>()
Unit: $r21 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r20.<org.quartz.impl.RemoteMBeanScheduler: void shutdown(boolean)>(1)
	method testJMXOperations : 
Unit: virtualinvoke $r1.<org.quartz.impl.RemoteMBeanScheduler: void clear()>()
Unit: $r2 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r3 = virtualinvoke $r2.<org.quartz.impl.RemoteMBeanScheduler: java.util.List getJobGroupNames()>()
Unit: $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>()
Unit: $r6 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r5)
Unit: staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r4, $r6)
Unit: return
Unit: $r1 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
	method testUnsupportedMethods : 
Unit: $r1 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r1.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: r6 = $r4
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Operation should not be supported")
Unit: goto [?= $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: r7 = $r5
Unit: $r5 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Operation should not be supported")
Unit: return
Unit: goto [?= return]
Unit: virtualinvoke $r3.<org.quartz.impl.RemoteMBeanScheduler: void setJobFactory(org.quartz.spi.JobFactory)>(null)
Unit: $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r4 := @caughtexception
	method testListBrokenAttributes : 
Unit: goto [?= return]
Unit: r0 := @this: org.quartz.impl.RemoteMBeanSchedulerTest
Unit: $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r1.<org.quartz.impl.RemoteMBeanScheduler: org.quartz.SchedulerContext getContext()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method was not exposed in MBean API")
Unit: r7 = $r6
Unit: $r5 := @caughtexception
Unit: $r1 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>
Unit: virtualinvoke $r3.<org.quartz.impl.RemoteMBeanScheduler: java.util.List getCurrentlyExecutingJobs()>()
Unit: r8 = $r5
Unit: $r6 := @caughtexception
Unit: goto [?= $r3 = r0.<org.quartz.impl.RemoteMBeanSchedulerTest: org.quartz.impl.RemoteMBeanScheduler remoteScheduler>]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Method had a different return type in MBean API")
 ====================================== 
** CLASS org.quartz.core.RemotableQuartzScheduler
	method getSchedulerName : 
	method getSchedulerInstanceId : 
	method getSchedulerContext : 
	method start : 
	method startDelayed : 
	method standby : 
	method isInStandbyMode : 
	method shutdown : 
	method shutdown : 
	method isShutdown : 
	method runningSince : 
	method getVersion : 
	method numJobsExecuted : 
	method getJobStoreClass : 
	method supportsPersistence : 
	method isClustered : 
	method getThreadPoolClass : 
	method getThreadPoolSize : 
	method clear : 
	method getCurrentlyExecutingJobs : 
	method scheduleJob : 
	method scheduleJob : 
	method addJob : 
	method addJob : 
	method deleteJob : 
	method unscheduleJob : 
	method rescheduleJob : 
	method triggerJob : 
	method triggerJob : 
	method pauseTrigger : 
	method pauseTriggers : 
	method pauseJob : 
	method pauseJobs : 
	method resumeTrigger : 
	method resumeTriggers : 
	method getPausedTriggerGroups : 
	method resumeJob : 
	method resumeJobs : 
	method pauseAll : 
	method resumeAll : 
	method getJobGroupNames : 
	method getJobKeys : 
	method getTriggersOfJob : 
	method getTriggerGroupNames : 
	method getTriggerKeys : 
	method getJobDetail : 
	method getTrigger : 
	method getTriggerState : 
	method resetTriggerFromErrorState : 
	method addCalendar : 
	method deleteCalendar : 
	method getCalendar : 
	method getCalendarNames : 
	method interrupt : 
	method interrupt : 
	method checkExists : 
	method checkExists : 
	method deleteJobs : 
	method scheduleJobs : 
	method scheduleJob : 
	method unscheduleJobs : 
 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledRateCounter
	method increment : 
	method decrement : 
	method setValue : 
	method setNumeratorValue : 
	method setDenominatorValue : 
 ====================================== 
** CLASS org.quartz.SchedulerConfigException
	method <init> : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DB2v7Delegate
	method <init> : 
	method setBytes : 
	method setBoolean : 
 ====================================== 
** CLASS org.quartz.impl.SchedulerDetailsSetterTest
	method <init> : 
	method testSetter : 
Unit: specialinvoke $r13.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1)
Unit: r2 = $r13
Unit: $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>()
Unit: $r7 = class "Lorg/quartz/impl/SchedulerDetailsSetterTest$MyThreadPool;"
Unit: virtualinvoke r3.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>($r17, $r18)
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetterTest: void assertEquals(int,int)>(3, $i0)
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetterTest: void assertEquals(int,int)>(3, $i1)
Unit: specialinvoke $r18.<org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore: void <init>()>()
Unit: $r17 = new org.quartz.impl.SchedulerDetailsSetterTest$MyThreadPool
Unit: r1 = $r4
Unit: $r10 = class "Lorg/quartz/impl/SchedulerDetailsSetterTest$MyJobStore;"
Unit: $r15 = <org.quartz.impl.SchedulerDetailsSetterTest: java.util.concurrent.atomic.AtomicInteger instanceIdCalls>
Unit: $r16 = <org.quartz.impl.SchedulerDetailsSetterTest: java.util.concurrent.atomic.AtomicInteger instanceNameCalls>
Unit: $r19 = <org.quartz.impl.SchedulerDetailsSetterTest: java.util.concurrent.atomic.AtomicInteger instanceIdCalls>
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.class", $r8)
Unit: r3 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>()
Unit: specialinvoke $r17.<org.quartz.impl.SchedulerDetailsSetterTest$MyThreadPool: void <init>()>()
Unit: virtualinvoke r1.<java.util.Properties: void load(java.io.InputStream)>($r6)
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetterTest: void assertEquals(int,int)>(5, $i2)
Unit: $i1 = virtualinvoke $r16.<java.util.concurrent.atomic.AtomicInteger: int get()>()
Unit: $r18 = new org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore
Unit: specialinvoke $r4.<java.util.Properties: void <init>()>()
Unit: $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Unit: $r13 = new org.quartz.impl.StdSchedulerFactory
Unit: $r6 = virtualinvoke $r5.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/org/quartz/quartz.properties")
Unit: $i0 = virtualinvoke $r15.<java.util.concurrent.atomic.AtomicInteger: int get()>()
Unit: virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.jobStore.class", $r11)
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetterTest: void assertEquals(int,int)>(6, $i3)
Unit: $r4 = new java.util.Properties
Unit: $i3 = virtualinvoke $r20.<java.util.concurrent.atomic.AtomicInteger: int get()>()
Unit: return
Unit: $i2 = virtualinvoke $r19.<java.util.concurrent.atomic.AtomicInteger: int get()>()
Unit: $r20 = <org.quartz.impl.SchedulerDetailsSetterTest: java.util.concurrent.atomic.AtomicInteger instanceNameCalls>
Unit: r0 := @this: org.quartz.impl.SchedulerDetailsSetterTest
	method testMissingSetterMethods : 
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetter: void setDetails(java.lang.Object,java.lang.String,java.lang.String)>($r1, "name", "id")
Unit: specialinvoke $r1.<java.lang.Object: void <init>()>()
Unit: $r1 = new java.lang.Object
Unit: r0 := @this: org.quartz.impl.SchedulerDetailsSetterTest
Unit: return
	method testUnimplementedMethods : 
Unit: interfaceinvoke r1.<org.quartz.spi.ThreadPool: void setInstanceName(java.lang.String)>("name")
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetter: void setDetails(java.lang.Object,java.lang.String,java.lang.String)>(r1, "name", "id")
Unit: goto [?= staticinvoke <org.quartz.impl.SchedulerDetailsSetter: void setDetails(java.lang.Object,java.lang.String,java.lang.String)>(r1, "name", "id")]
Unit: return
Unit: r1 = specialinvoke r0.<org.quartz.impl.SchedulerDetailsSetterTest: org.quartz.spi.ThreadPool makeIncompleteThreadPool()>()
Unit: staticinvoke <org.quartz.impl.SchedulerDetailsSetterTest: void fail()>()
Unit: r0 := @this: org.quartz.impl.SchedulerDetailsSetterTest
Unit: $r3 := @caughtexception
Unit: r2 = $r3
	method makeIncompleteThreadPool : 
	method access$000 : 
	method access$100 : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.utils.ConnectionProvider
	method getConnection : 
	method shutdown : 
	method initialize : 
 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest$1
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.quartz.spi.TimeBroker
	method getCurrentTime : 
	method initialize : 
	method shutdown : 
 ====================================== 
** CLASS org.quartz.impl.JobExecutionContextImpl
	method <init> : 
	method getScheduler : 
	method getTrigger : 
	method getCalendar : 
	method isRecovering : 
	method getRecoveringTriggerKey : 
	method incrementRefireCount : 
	method getRefireCount : 
	method getMergedJobDataMap : 
	method getJobDetail : 
	method getJobInstance : 
	method getFireTime : 
	method getScheduledFireTime : 
	method getPreviousFireTime : 
	method getNextFireTime : 
	method toString : 
	method getResult : 
	method setResult : 
	method getJobRunTime : 
	method setJobRunTime : 
	method put : 
	method get : 
	method getFireInstanceId : 
 ====================================== 
** CLASS org.quartz.spi.ClassLoadHelper
	method initialize : 
	method loadClass : 
	method loadClass : 
	method getResource : 
	method getResourceAsStream : 
	method getClassLoader : 
 ====================================== 
** CLASS org.quartz.core.QTZ385Test
	method <init> : 
	method testShutdownOrdering : 
Unit: r0 := @this: org.quartz.core.QTZ385Test
Unit: $r29 = new java.util.concurrent.atomic.AtomicBoolean
Unit: throw r7
Unit: $r30 = new org.quartz.simpl.SimpleThreadPool
Unit: $r16 = new org.quartz.simpl.SimpleThreadPool
Unit: $z0 = virtualinvoke r39.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()
Unit: specialinvoke $r14.<org.quartz.core.QTZ385Test$1: void <init>(org.quartz.core.QTZ385Test,org.quartz.impl.jdbcjobstore.JobStoreTX,java.util.concurrent.CyclicBarrier)>(r0, r2, r1)
Unit: interfaceinvoke $r31.<org.quartz.ListenerManager: void addJobListener(org.quartz.JobListener)>($r32)
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceName(java.lang.String)>("testShutdownOrdering")
Unit: $r21 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: interfaceinvoke r5.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: $r10 = new org.quartz.impl.jdbcjobstore.JobStoreTX
Unit: throw r8
Unit: virtualinvoke r1.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(1L, $r28)
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceId(java.lang.String)>("SINGLE_NODE_TEST")
Unit: virtualinvoke r4.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>($r30, r2)
Unit: r1 = $r9
Unit: $r13[0] = class "Lorg/quartz/spi/JobStore;"
Unit: goto [?= $r29 = new java.util.concurrent.atomic.AtomicBoolean]
Unit: r8 = $r34
Unit: interfaceinvoke r5.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>($r20, $r26)
Unit: specialinvoke $r29.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0)
Unit: specialinvoke $r30.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(1, 5)
Unit: $r15 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r12, $r13, $r14)
Unit: $r17 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r31 = interfaceinvoke r6.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: r37 = $r33
Unit: $r9 = new java.util.concurrent.CyclicBarrier
Unit: interfaceinvoke r6.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: $r19 = virtualinvoke $r18.<org.quartz.JobBuilder: org.quartz.JobBuilder requestRecovery()>()
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void createDatabase(java.lang.String)>("testShutdownOrdering")
Unit: goto [?= staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>("testShutdownOrdering")]
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>("testShutdownOrdering")
Unit: $r28 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
Unit: $r32 = new org.quartz.core.QTZ385Test$2
Unit: interfaceinvoke r5.<org.quartz.Scheduler: void start()>()
Unit: $r36 := @caughtexception
Unit: virtualinvoke r1.<java.util.concurrent.CyclicBarrier: int await()>()
Unit: r2 = $r10
Unit: $r23 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
Unit: r38 = $r35
Unit: r3 = (org.quartz.spi.JobStore) $r15
Unit: specialinvoke $r10.<org.quartz.impl.jdbcjobstore.JobStoreTX: void <init>()>()
Unit: $r25 = virtualinvoke $r22.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r24)
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setDataSource(java.lang.String)>("testShutdownOrdering")
Unit: $r24 = virtualinvoke $r23.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInMilliseconds(long)>(1L)
Unit: virtualinvoke r4.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>($r16, r3)
Unit: interfaceinvoke r6.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: $r22 = virtualinvoke $r21.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>("testShutdownOrdering")
Unit: r7 = $r36
Unit: $r33 := @caughtexception
Unit: throw r37
Unit: $r20 = virtualinvoke $r19.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: goto [?= $r28 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>]
Unit: goto [?= return]
Unit: $r14 = new org.quartz.core.QTZ385Test$1
Unit: specialinvoke $r16.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(1, 5)
Unit: interfaceinvoke r6.<org.quartz.Scheduler: void start()>()
Unit: specialinvoke $r32.<org.quartz.core.QTZ385Test$2: void <init>(org.quartz.core.QTZ385Test,java.util.concurrent.atomic.AtomicBoolean)>(r0, r39)
Unit: r4 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: specialinvoke $r9.<java.util.concurrent.CyclicBarrier: void <init>(int)>(2)
Unit: $r13 = newarray (java.lang.Class)[1]
Unit: $r34 := @caughtexception
Unit: r39 = $r29
Unit: interfaceinvoke r5.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: $r26 = virtualinvoke $r25.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r11 = class "Lorg/quartz/spi/JobStore;"
Unit: $r18 = virtualinvoke $r17.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: r6 = virtualinvoke r4.<org.quartz.impl.DirectSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: r5 = virtualinvoke r4.<org.quartz.impl.DirectSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r35 := @caughtexception
Unit: return
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(1000L)
	method access$000 : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeNonConcurrentPersistentJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.calendar.HolidayCalendar
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method clone : 
	method isTimeIncluded : 
	method getNextIncludedTime : 
	method addExcludedDate : 
	method removeExcludedDate : 
	method getExcludedDates : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JTANonClusteredSemaphore$SemaphoreSynchronization
	method <init> : 
	method beforeCompletion : 
	method afterCompletion : 
 ====================================== 
** CLASS org.quartz.ee.jta.JTAJobRunShell
	method <init> : 
	method <init> : 
	method begin : 
	method complete : 
	method passivate : 
	method cleanupUserTransaction : 
 ====================================== 
** CLASS org.quartz.utils.Key
	method <init> : 
	method getName : 
	method getGroup : 
	method toString : 
	method hashCode : 
	method equals : 
	method compareTo : 
	method createUniqueName : 
	method compareTo : 
 ====================================== 
** CLASS org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener
	method <init> : 
	method getFireCount : 
	method getName : 
	method triggerFired : 
	method vetoJobExecution : 
	method triggerMisfired : 
	method triggerComplete : 
 ====================================== 
** CLASS org.quartz.Qtz205SchedulerListenerTest$Qtz205ScheListener
	method <init> : 
	method getTriggerFinalizedCount : 
	method jobScheduled : 
	method jobUnscheduled : 
	method triggerFinalized : 
	method triggerPaused : 
	method triggersPaused : 
	method triggerResumed : 
	method triggersResumed : 
	method jobAdded : 
	method jobDeleted : 
	method jobPaused : 
	method jobsPaused : 
	method jobResumed : 
	method jobsResumed : 
	method schedulerError : 
	method schedulerInStandbyMode : 
	method schedulerStarted : 
	method schedulerStarting : 
	method schedulerShutdown : 
	method schedulerShuttingdown : 
	method schedulingDataCleared : 
 ====================================== 
** CLASS org.quartz.management.ManagementServer
	method start : 
	method stop : 
	method register : 
	method unregister : 
	method hasRegistered : 
 ====================================== 
** CLASS org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest
	method <init> : 
	method testPauseAndResumeTriggers : 
Unit: $r16 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r10 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r19 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: interfaceinvoke $r18.<org.quartz.Scheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>($r19)
Unit: $r20 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r17)
Unit: r34 = interfaceinvoke $r12.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r13)
Unit: $r24 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r27 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r23)
Unit: r2 = (org.quartz.CronTrigger) $r9
Unit: $r32 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r14 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r30 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r21 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_1", "abc")
Unit: $r28 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r36 = interfaceinvoke $r28.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r29)
Unit: $r3 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: return
Unit: $r12 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r31 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r30)
Unit: $r18 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r7 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: interfaceinvoke $r26.<org.quartz.Scheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>($r27)
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test_1", "abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r15)
Unit: $r29 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_1", "abc")
Unit: $r13 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_1", "abc")
Unit: $r8 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: $r22 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r23 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r22)
Unit: $r26 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r25 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r24)
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test_1")
Unit: r35 = interfaceinvoke $r20.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r21)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r31)
Unit: $r17 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r16)
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r25)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r33)
Unit: $r33 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r32)
Unit: r1 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: r0 := @this: org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest
	method testResumeTriggersBeforeAddJob : 
Unit: $r35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r34)
Unit: r2 = (org.quartz.CronTrigger) $r13
Unit: $r21 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r20)
Unit: return
Unit: interfaceinvoke $r22.<org.quartz.Scheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>($r23)
Unit: $r34 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r27)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r29)
Unit: $r3 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r6 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: interfaceinvoke $r5.<org.quartz.Scheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>($r6)
Unit: $r27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r26)
Unit: $r36 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r14 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r33 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_2", "abc")
Unit: interfaceinvoke $r14.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r25 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_2", "abc")
Unit: $r12 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r11)
Unit: $r10 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test_2", "abc")
Unit: $r9 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r7 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r8 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test_2")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r21)
Unit: $r24 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r29 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r28)
Unit: r0 := @this: org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest
Unit: interfaceinvoke $r30.<org.quartz.Scheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>($r31)
Unit: $r19 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r18)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r19)
Unit: $r28 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r20 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: r40 = interfaceinvoke $r32.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r33)
Unit: $r4 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: interfaceinvoke $r3.<org.quartz.Scheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>($r4)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r37 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r36)
Unit: r38 = interfaceinvoke $r16.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r17)
Unit: r1 = virtualinvoke $r8.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r11 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r37)
Unit: $r31 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: $r26 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r23 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: $r5 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r17 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_2", "abc")
Unit: $r18 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r32 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r35)
Unit: $r22 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r16 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r30 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r39 = interfaceinvoke $r24.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r25)
	method testPauseAndResumeJobs : 
Unit: return
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r33)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r31)
Unit: $r21 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_3", "abc")
Unit: $r10 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r36 = interfaceinvoke $r28.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r29)
Unit: r2 = (org.quartz.CronTrigger) $r9
Unit: $r24 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: interfaceinvoke $r26.<org.quartz.Scheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>($r27)
Unit: r0 := @this: org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest
Unit: $r17 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r16)
Unit: $r30 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r27 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r12 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r3 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r16 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r22 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r19 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: r35 = interfaceinvoke $r20.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r21)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r25)
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test_3", "abc")
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r32 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r33 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r32)
Unit: interfaceinvoke $r18.<org.quartz.Scheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>($r19)
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("test_3", "abc")
Unit: $r28 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r13 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_3", "abc")
Unit: $r25 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r24)
Unit: $r31 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r30)
Unit: r34 = interfaceinvoke $r12.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r13)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r15)
Unit: $r29 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_3", "abc")
Unit: $r14 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: r1 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r8 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: $r26 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r20 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r23 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r22)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r17)
Unit: $r18 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r7 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r23)
	method testResumeJobsBeforeAddJobs : 
Unit: $r12 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r11)
Unit: $r29 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r28)
Unit: $r17 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_4", "abc")
Unit: $r5 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r24 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r39 = interfaceinvoke $r24.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r25)
Unit: $r3 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r19 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r18)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r21)
Unit: $r22 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r36 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r14 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r33 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_4", "abc")
Unit: return
Unit: $r23 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r35)
Unit: $r9 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r21 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r20)
Unit: interfaceinvoke $r3.<org.quartz.Scheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>($r4)
Unit: $r10 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test_4", "abc")
Unit: $r11 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r4 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r20 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r6 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: r2 = (org.quartz.CronTrigger) $r13
Unit: $r34 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: interfaceinvoke $r5.<org.quartz.Scheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>($r6)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r29)
Unit: $r7 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r28 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r8 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("test_4", "abc")
Unit: $r16 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: interfaceinvoke $r22.<org.quartz.Scheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>($r23)
Unit: $r26 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r37 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r36)
Unit: $r31 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: interfaceinvoke $r30.<org.quartz.Scheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>($r31)
Unit: interfaceinvoke $r14.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r25 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test_4", "abc")
Unit: $r18 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r19)
Unit: r40 = interfaceinvoke $r32.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r33)
Unit: $r27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r26)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r37)
Unit: $r32 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r34)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r27)
Unit: $r30 = r0.<org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r0 := @this: org.quartz.integrations.tests.QuartzDatabsePauseAndResumeTest
Unit: r1 = virtualinvoke $r8.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: r38 = interfaceinvoke $r16.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r17)
 ====================================== 
** CLASS org.quartz.impl.RemoteMBeanScheduler$1
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap$DirtyFlagIterator
	method <init> : 
	method remove : 
	method hasNext : 
	method next : 
 ====================================== 
** CLASS org.quartz.RAMSchedulerTest
	method <init> : 
	method createScheduler : 
 ====================================== 
** CLASS org.quartz.JobBuilderTest
	method <init> : 
	method setUp : 
	method testJobBuilder : 
Unit: $r13 = new java.lang.StringBuilder
Unit: specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
Unit: $r12 = virtualinvoke $r11.<org.quartz.JobKey: java.lang.String getName()>()
Unit: $z12 = interfaceinvoke r65.<org.quartz.JobDetail: boolean isPersistJobDataAfterExecution()>()
Unit: $r62 = interfaceinvoke r66.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $z11 = interfaceinvoke r65.<org.quartz.JobDetail: boolean isConcurrentExectionDisallowed()>()
Unit: $z5 = interfaceinvoke r64.<org.quartz.JobDetail: boolean isConcurrentExectionDisallowed()>()
Unit: specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r32, $z18)
Unit: $r63 = virtualinvoke $r62.<org.quartz.JobKey: java.lang.String getGroup()>()
Unit: $z16 = interfaceinvoke r66.<org.quartz.JobDetail: boolean isConcurrentExectionDisallowed()>()
Unit: specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
Unit: $r3 = virtualinvoke $r2.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("j1")
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected isConcurrentExectionDisallowed == true ", $z11)
Unit: $r20 = virtualinvoke $r19.<org.quartz.JobKey: java.lang.String getGroup()>()
Unit: $r34 = new java.lang.StringBuilder
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertFalse(java.lang.String,boolean)>("Expected requestsRecovery == false ", $z4)
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertFalse(java.lang.String,boolean)>("Expected isDurable == false ", $z14)
Unit: $r54 = virtualinvoke $r53.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("j1", "g1")
Unit: $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23)
Unit: $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r7 = interfaceinvoke r64.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r44 = virtualinvoke $r43.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably(boolean)>(1)
Unit: $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36)
Unit: $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)
Unit: $r11 = interfaceinvoke r64.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: if $r33 != null goto $z18 = 0
Unit: specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
Unit: $r23 = interfaceinvoke r64.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r41 = virtualinvoke $r40.<org.quartz.JobBuilder: org.quartz.JobBuilder ofType(java.lang.Class)>(class "Lorg/quartz/JobBuilderTest$TestAnnotatedJob;")
Unit: $z15 = interfaceinvoke r66.<org.quartz.JobDetail: boolean requestsRecovery()>()
Unit: $r53 = virtualinvoke $r52.<org.quartz.JobBuilder: org.quartz.JobBuilder ofType(java.lang.Class)>(class "Lorg/quartz/JobBuilderTest$TestStatefulJob;")
Unit: $r15 = interfaceinvoke r64.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r16 = virtualinvoke $r15.<org.quartz.JobKey: java.lang.String getGroup()>()
Unit: $r42 = virtualinvoke $r41.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("j1")
Unit: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r30 = interfaceinvoke r64.<org.quartz.JobDetail: java.lang.String getDescription()>()
Unit: $z6 = interfaceinvoke r64.<org.quartz.JobDetail: boolean isPersistJobDataAfterExecution()>()
Unit: $r55 = virtualinvoke $r54.<org.quartz.JobBuilder: org.quartz.JobBuilder requestRecovery(boolean)>(0)
Unit: r64 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $z18 = 1
Unit: $r2 = virtualinvoke $r1.<org.quartz.JobBuilder: org.quartz.JobBuilder ofType(java.lang.Class)>(class "Lorg/quartz/JobBuilderTest$TestJob;")
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected isPersistJobDataAfterExecution == true ", $z17)
Unit: $r5 = new java.lang.StringBuilder
Unit: $r33 = interfaceinvoke r64.<org.quartz.JobDetail: java.lang.String getDescription()>()
Unit: $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("j1")
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected isPersistJobDataAfterExecution == true ", $z12)
Unit: $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job description: ")
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected isConcurrentExectionDisallowed == true ", $z16)
Unit: $z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("DEFAULT")
Unit: $r8 = virtualinvoke $r7.<org.quartz.JobKey: java.lang.String getName()>()
Unit: $r46 = new java.lang.StringBuilder
Unit: $r21 = new java.lang.StringBuilder
Unit: $z4 = interfaceinvoke r64.<org.quartz.JobDetail: boolean requestsRecovery()>()
Unit: $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: r0 := @this: org.quartz.JobBuilderTest
Unit: $z9 = interfaceinvoke r65.<org.quartz.JobDetail: boolean isDurable()>()
Unit: $r28 = new java.lang.StringBuilder
Unit: $z18 = 0
Unit: $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job description: ")
Unit: $z17 = interfaceinvoke r66.<org.quartz.JobDetail: boolean isPersistJobDataAfterExecution()>()
Unit: $r19 = interfaceinvoke r64.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r38, $z7)
Unit: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertFalse(java.lang.String,boolean)>("Expected isConcurrentExectionDisallowed == false ", $z5)
Unit: $r26 = interfaceinvoke r64.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: goto [?= staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r32, $z18)]
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r25, $z2)
Unit: return
Unit: $r36 = interfaceinvoke r64.<org.quartz.JobDetail: java.lang.Class getJobClass()>()
Unit: $r51 = interfaceinvoke r65.<org.quartz.JobDetail: java.lang.String getDescription()>()
Unit: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job name: ")
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertFalse(java.lang.String,boolean)>("Expected requestsRecovery == false ", $z15)
Unit: $r45 = virtualinvoke $r44.<org.quartz.JobBuilder: org.quartz.JobBuilder requestRecovery()>()
Unit: $r48 = interfaceinvoke r65.<org.quartz.JobDetail: java.lang.String getDescription()>()
Unit: $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
Unit: specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
Unit: $r1 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob()>()
Unit: $r56 = new java.lang.StringBuilder
Unit: $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job group: ")
Unit: $z13 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>("g1")
Unit: $r52 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected isDurable == true ", $z9)
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected requestsRecovery == true ", $z10)
Unit: $z2 = virtualinvoke $r26.<org.quartz.JobKey: boolean equals(java.lang.Object)>($r27)
Unit: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job group: ")
Unit: $z3 = interfaceinvoke r64.<org.quartz.JobDetail: boolean isDurable()>()
Unit: $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertFalse(java.lang.String,boolean)>("Expected isPersistJobDataAfterExecution == false ", $z6)
Unit: $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59)
Unit: $r27 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String)>("j1")
Unit: $r59 = virtualinvoke $r58.<org.quartz.JobKey: java.lang.String getName()>()
Unit: specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
Unit: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job key: ")
Unit: $r40 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r10, $z0)
Unit: $r39 = interfaceinvoke r64.<org.quartz.JobDetail: java.lang.Class getJobClass()>()
Unit: $r43 = virtualinvoke $r42.<org.quartz.JobBuilder: org.quartz.JobBuilder withDescription(java.lang.String)>("my description")
Unit: $z14 = interfaceinvoke r66.<org.quartz.JobDetail: boolean isDurable()>()
Unit: $z7 = virtualinvoke $r39.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lorg/quartz/JobBuilderTest$TestJob;")
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r61, $z13)
Unit: $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected job class: ")
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder storeDurably()>()
Unit: $r58 = interfaceinvoke r66.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>("Expected isDurable == true ", $z3)
Unit: r65 = virtualinvoke $r45.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $z10 = interfaceinvoke r65.<org.quartz.JobDetail: boolean requestsRecovery()>()
Unit: specialinvoke $r56.<java.lang.StringBuilder: void <init>()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r50, $z8)
Unit: r66 = virtualinvoke $r55.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: staticinvoke <org.quartz.JobBuilderTest: void assertTrue(java.lang.String,boolean)>($r18, $z1)
Unit: $z8 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>("my description")
 ====================================== 
** CLASS org.quartz.simpl.RAMJobStoreTest
	method <init> : 
	method createJobStore : 
	method destroyJobStore : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.FiredTriggerRecord
	method <init> : 
	method getFireInstanceId : 
	method getFireTimestamp : 
	method getScheduleTimestamp : 
	method isJobDisallowsConcurrentExecution : 
	method getJobKey : 
	method getSchedulerInstanceId : 
	method getTriggerKey : 
	method getFireInstanceState : 
	method setFireInstanceId : 
	method setFireTimestamp : 
	method setScheduleTimestamp : 
	method setJobDisallowsConcurrentExecution : 
	method setJobKey : 
	method setSchedulerInstanceId : 
	method setTriggerKey : 
	method setFireInstanceState : 
	method isJobRequestsRecovery : 
	method setJobRequestsRecovery : 
	method getPriority : 
	method setPriority : 
 ====================================== 
** CLASS org.quartz.core.ListenerManagerTest$TestJobListener
	method <init> : 
	method getName : 
 ====================================== 
** CLASS org.quartz.core.SampledStatisticsImpl
	method <init> : 
	method shutdown : 
	method createSampledCounter : 
	method clearStatistics : 
	method getJobsCompletedMostRecentSample : 
	method getJobsExecutingMostRecentSample : 
	method getJobsScheduledMostRecentSample : 
	method getName : 
	method jobScheduled : 
	method jobExecutionVetoed : 
	method jobToBeExecuted : 
	method jobWasExecuted : 
	method jobAdded : 
	method jobDeleted : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap
	method <init> : 
	method <init> : 
	method <init> : 
	method clearDirtyFlag : 
	method isDirty : 
	method getWrappedMap : 
	method clear : 
	method containsKey : 
	method containsValue : 
	method entrySet : 
	method equals : 
	method hashCode : 
	method get : 
	method isEmpty : 
	method keySet : 
	method put : 
	method putAll : 
	method remove : 
	method size : 
	method values : 
	method clone : 
	method access$002 : 
 ====================================== 
** CLASS org.quartz.Quartz601Test
	method <init> : 
	method testNormal : 
Unit: return
Unit: i0 = 0
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("0 15 10 * * ? 2005", i0)
Unit: goto [?= (branch)]
Unit: r0 := @this: org.quartz.Quartz601Test
Unit: i0 = i0 + 1
Unit: if i0 >= 6 goto return
	method testSecond : 
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("58-4 5 21 ? * MON-FRI", 0)
Unit: return
Unit: r0 := @this: org.quartz.Quartz601Test
	method testMinute : 
Unit: r0 := @this: org.quartz.Quartz601Test
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("0 58-4 21 ? * MON-FRI", 1)
Unit: return
	method testHour : 
Unit: return
Unit: r0 := @this: org.quartz.Quartz601Test
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("0 0/5 21-3 ? * MON-FRI", 2)
	method testDayOfWeekNumber : 
Unit: r0 := @this: org.quartz.Quartz601Test
Unit: return
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("58 5 21 ? * 6-2", 5)
	method testDayOfWeek : 
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("58 5 21 ? * FRI-TUE", 5)
Unit: r0 := @this: org.quartz.Quartz601Test
Unit: return
	method testDayOfMonth : 
Unit: return
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("58 5 21 28-5 1 ?", 3)
Unit: r0 := @this: org.quartz.Quartz601Test
	method testMonth : 
Unit: r0 := @this: org.quartz.Quartz601Test
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("58 5 21 ? 11-2 FRI", 4)
Unit: return
	method testAmbiguous : 
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("55-3 56-2 6 ? * FRI", 0)
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("55-3 56-2 6 ? * FRI", 1)
Unit: return
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("0 0 14-6 ? * FRI-MON", 5)
Unit: r0 := @this: org.quartz.Quartz601Test
Unit: specialinvoke r0.<org.quartz.Quartz601Test: java.util.Set assertParsesForField(java.lang.String,int)>("0 0 14-6 ? * FRI-MON", 2)
	method assertParsesForField : 
 ====================================== 
** CLASS org.quartz.impl.DirectSchedulerFactory
	method getLog : 
	method <init> : 
	method getInstance : 
	method createVolatileScheduler : 
	method createRemoteScheduler : 
	method createRemoteScheduler : 
	method createRemoteScheduler : 
	method createScheduler : 
	method createScheduler : 
	method createScheduler : 
	method createScheduler : 
	method createScheduler : 
	method createScheduler : 
	method getScheduler : 
	method getScheduler : 
	method getAllSchedulers : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.simpl.SimpleJobFactory
	method <init> : 
	method getLog : 
	method newJob : 
 ====================================== 
** CLASS org.quartz.utils.counter.CounterImpl
	method <init> : 
	method <init> : 
	method increment : 
	method decrement : 
	method getAndSet : 
	method getValue : 
	method increment : 
	method decrement : 
	method setValue : 
 ====================================== 
** CLASS org.quartz.impl.matchers.GroupMatcher
	method <init> : 
	method groupEquals : 
	method jobGroupEquals : 
	method triggerGroupEquals : 
	method groupStartsWith : 
	method jobGroupStartsWith : 
	method triggerGroupStartsWith : 
	method groupEndsWith : 
	method jobGroupEndsWith : 
	method triggerGroupEndsWith : 
	method groupContains : 
	method jobGroupContains : 
	method triggerGroupContains : 
	method anyGroup : 
	method anyJobGroup : 
	method anyTriggerGroup : 
	method getValue : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$TransactionValidator
	method validate : 
 ====================================== 
** CLASS org.quartz.integrations.tests.QuartzMemoryTestSupport
	method <init> : 
	method initSchedulerBeforeTest : 
	method afterSchedulerInit : 
	method createSchedulerProperties : 
	method initSchedulerAfterTest : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.ee.jta.UserTransactionHelper$UserTransactionWithContext
	method <init> : 
	method closeContext : 
	method finalize : 
	method getLog : 
	method begin : 
	method commit : 
	method rollback : 
	method setRollbackOnly : 
	method getStatus : 
	method setTransactionTimeout : 
 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntrySet
	method <init> : 
	method iterator : 
	method toArray : 
	method toArray : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.TablePrefixAware
	method setTablePrefix : 
	method setSchedName : 
 ====================================== 
** CLASS org.quartz.integrations.tests.StdRowLockSemaphoreTest
	method <init> : 
	method initSchedulerBeforeTest : 
	method initSchedulerBeforeTest : 
	method createDefaultProperties : 
	method createMyLockProperties : 
	method testDefaultStdRowLockSemaphore : 
Unit: r0 := @this: org.quartz.integrations.tests.StdRowLockSemaphoreTest
Unit: $r10 = r0.<org.quartz.integrations.tests.StdRowLockSemaphoreTest: org.quartz.Scheduler scheduler>
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r16, $r18)
Unit: virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r9)
Unit: $r18 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r17)
Unit: $r21 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r20)
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: return
Unit: r1 = virtualinvoke $r5.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $z2 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: boolean myLockInvoked>
Unit: $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L)
Unit: $r5 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: $r3 = virtualinvoke r0.<org.quartz.integrations.tests.StdRowLockSemaphoreTest: java.util.Properties createDefaultProperties()>()
Unit: $r12 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: java.util.concurrent.CountDownLatch latch>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r19, $r21)
Unit: specialinvoke $r6.<java.util.HashSet: void <init>()>()
Unit: r2 = $r6
Unit: $r6 = new java.util.HashSet
Unit: $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r4 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r8 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r1)
Unit: $l1 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: long retryPeriod>
Unit: $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Unit: virtualinvoke $r12.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(1L, $r11)
Unit: $r15 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: $r7 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r13, $r15)
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: void scheduleJob(org.quartz.JobDetail,java.util.Set,boolean)>(r1, r2, 1)
Unit: virtualinvoke r0.<org.quartz.integrations.tests.StdRowLockSemaphoreTest: void initSchedulerBeforeTest(java.util.Properties)>($r3)
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $i0 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: int maxRetry>
	method testCustomStdRowLockSemaphore : 
Unit: r1 = virtualinvoke $r5.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: return
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7)
Unit: $i0 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: int maxRetry>
Unit: $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3000L)
Unit: $r5 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: specialinvoke $r6.<java.util.HashSet: void <init>()>()
Unit: $r4 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r8 = virtualinvoke $r7.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r1)
Unit: r0 := @this: org.quartz.integrations.tests.StdRowLockSemaphoreTest
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r19, $r21)
Unit: virtualinvoke r0.<org.quartz.integrations.tests.StdRowLockSemaphoreTest: void initSchedulerBeforeTest(java.util.Properties)>($r3)
Unit: $r10 = r0.<org.quartz.integrations.tests.StdRowLockSemaphoreTest: org.quartz.Scheduler scheduler>
Unit: $r15 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: $r18 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r17)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r16, $r18)
Unit: r2 = $r6
Unit: $r7 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r9)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r13, $r15)
Unit: $l1 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: long retryPeriod>
Unit: $r21 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r20)
Unit: $r3 = virtualinvoke r0.<org.quartz.integrations.tests.StdRowLockSemaphoreTest: java.util.Properties createMyLockProperties()>()
Unit: $r6 = new java.util.HashSet
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: void scheduleJob(org.quartz.JobDetail,java.util.Set,boolean)>(r1, r2, 1)
Unit: $r12 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: java.util.concurrent.CountDownLatch latch>
Unit: $z2 = <org.quartz.integrations.tests.StdRowLockSemaphoreTest: boolean myLockInvoked>
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>
Unit: virtualinvoke $r12.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(1L, $r11)
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.JobBuilder
	method <init> : 
	method newJob : 
	method newJob : 
	method build : 
	method withIdentity : 
	method withIdentity : 
	method withIdentity : 
	method withDescription : 
	method ofType : 
	method requestRecovery : 
	method requestRecovery : 
	method storeDurably : 
	method storeDurably : 
	method usingJobData : 
	method usingJobData : 
	method usingJobData : 
	method usingJobData : 
	method usingJobData : 
	method usingJobData : 
	method usingJobData : 
	method setJobData : 
 ====================================== 
** CLASS org.quartz.spi.JobStore
	method initialize : 
	method schedulerStarted : 
	method schedulerPaused : 
	method schedulerResumed : 
	method shutdown : 
	method supportsPersistence : 
	method getEstimatedTimeToReleaseAndAcquireTrigger : 
	method isClustered : 
	method storeJobAndTrigger : 
	method storeJob : 
	method storeJobsAndTriggers : 
	method removeJob : 
	method removeJobs : 
	method retrieveJob : 
	method storeTrigger : 
	method removeTrigger : 
	method removeTriggers : 
	method replaceTrigger : 
	method retrieveTrigger : 
	method checkExists : 
	method checkExists : 
	method clearAllSchedulingData : 
	method storeCalendar : 
	method removeCalendar : 
	method retrieveCalendar : 
	method getNumberOfJobs : 
	method getNumberOfTriggers : 
	method getNumberOfCalendars : 
	method getJobKeys : 
	method getTriggerKeys : 
	method getJobGroupNames : 
	method getTriggerGroupNames : 
	method getCalendarNames : 
	method getTriggersForJob : 
	method getTriggerState : 
	method resetTriggerFromErrorState : 
	method pauseTrigger : 
	method pauseTriggers : 
	method pauseJob : 
	method pauseJobs : 
	method resumeTrigger : 
	method resumeTriggers : 
	method getPausedTriggerGroups : 
	method resumeJob : 
	method resumeJobs : 
	method pauseAll : 
	method resumeAll : 
	method acquireNextTriggers : 
	method releaseAcquiredTrigger : 
	method triggersFired : 
	method triggeredJobComplete : 
	method setInstanceId : 
	method setInstanceName : 
	method setThreadPoolSize : 
	method getAcquireRetryDelay : 
 ====================================== 
** CLASS org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$SlowRAMJobStore
	method <init> : 
	method acquireNextTriggers : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
	method <init> : 
	method testSerializeJobData : 
Unit: virtualinvoke r2.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("key2", null)
Unit: return
Unit: virtualinvoke r2.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("key3", $r11)
Unit: virtualinvoke $r9.<java.io.ByteArrayOutputStream: void close()>()
Unit: $r15 = virtualinvoke r3.<java.io.NotSerializableException: java.lang.String getMessage()>()
Unit: $r8 = new org.quartz.JobDataMap
Unit: r1 = $r4
Unit: $i0 = virtualinvoke $r15.<java.lang.String: int indexOf(java.lang.String)>("key3")
Unit: specialinvoke $r7.<org.quartz.simpl.SimpleClassLoadHelper: void <init>()>()
Unit: $r11 = new java.lang.Object
Unit: goto [?= staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void assertTrue(boolean)>($z0)]
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
Unit: specialinvoke $r8.<org.quartz.JobDataMap: void <init>()>()
Unit: $r10 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: java.io.ByteArrayOutputStream serializeJobData(org.quartz.JobDataMap)>(r2)
Unit: specialinvoke $r4.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void <init>()>()
Unit: $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Unit: $z0 = 1
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void initialize(org.slf4j.Logger,java.lang.String,java.lang.String,java.lang.String,org.quartz.spi.ClassLoadHelper,boolean,java.lang.String)>($r6, "QRTZ_", "TESTSCHED", "INSTANCE", $r7, 0, "")
Unit: if $i0 < 0 goto $z0 = 0
Unit: r3 = $r14
Unit: $r4 = new org.quartz.impl.jdbcjobstore.StdJDBCDelegate
Unit: virtualinvoke r2.<org.quartz.JobDataMap: void clear()>()
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void fail()>()
Unit: goto [?= return]
Unit: virtualinvoke r2.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("key2", null)
Unit: virtualinvoke r2.<org.quartz.JobDataMap: void clear()>()
Unit: $r14 := @caughtexception
Unit: specialinvoke $r11.<java.lang.Object: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: java.io.ByteArrayOutputStream serializeJobData(org.quartz.JobDataMap)>(r2)
Unit: $r9 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: java.io.ByteArrayOutputStream serializeJobData(org.quartz.JobDataMap)>(r2)
Unit: virtualinvoke $r10.<java.io.ByteArrayOutputStream: void close()>()
Unit: virtualinvoke r2.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("key1", "value")
Unit: r2 = $r8
Unit: $z0 = 0
Unit: $r6 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r5)
Unit: $r7 = new org.quartz.simpl.SimpleClassLoadHelper
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void assertTrue(boolean)>($z0)
Unit: virtualinvoke r2.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("key", "value")
	method testSelectBlobTriggerWithNoBlobContent : 
Unit: $r26 = interfaceinvoke r4.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TRIGGER_TYPE")
Unit: r3 = (java.sql.PreparedStatement) $r11
Local: r3
Possibly Mock: true

Unit: interfaceinvoke $r23.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r24)
Unit: $r12 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/ResultSet;")
Local: $r12
Possibly Mock: true

Unit: $r14 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r13)
Unit: $r18 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r17)
Unit: r2 = (java.sql.Connection) $r10
Local: r2
Possibly Mock: true

Unit: interfaceinvoke $r18.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r4)
Unit: $r27 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r26)
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r10 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r10
Possibly Mock: true

Unit: $z0 = interfaceinvoke r4.<java.sql.ResultSet: boolean next()>()
Unit: $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Unit: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void initialize(org.slf4j.Logger,java.lang.String,java.lang.String,java.lang.String,org.quartz.spi.ClassLoadHelper,boolean,java.lang.String)>($r8, "QRTZ_", "TESTSCHED", "INSTANCE", $r9, 0, "")
Unit: r5 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: org.quartz.spi.OperableTrigger selectTrigger(java.sql.Connection,org.quartz.TriggerKey)>(r2, $r29)
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
Unit: $r21 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r20)
Unit: $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: return
Unit: interfaceinvoke $r15.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r3)
Unit: specialinvoke $r9.<org.quartz.simpl.SimpleClassLoadHelper: void <init>()>()
Unit: $r9 = new org.quartz.simpl.SimpleClassLoadHelper
Unit: $r11 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/PreparedStatement;")
Local: $r11
Possibly Mock: true

Unit: staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void assertNull(java.lang.Object)>(r5)
Unit: r4 = (java.sql.ResultSet) $r12
Local: r4
Possibly Mock: true

Unit: $r15 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r14)
Unit: interfaceinvoke $r27.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>("BLOB")
Unit: $r6 = new org.quartz.impl.jdbcjobstore.StdJDBCDelegate
Unit: specialinvoke $r6.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void <init>()>()
Unit: r1 = $r6
Unit: $r8 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r7)
Unit: $r13 = staticinvoke <org.mockito.Matchers: java.lang.String anyString()>()
Unit: $r29 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String)>("test")
Unit: $r17 = interfaceinvoke r3.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>()
Unit: $r23 = interfaceinvoke $r21.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r22)
	method testSelectSimpleTriggerWithExceptionWithExtendedProps : 
Unit: $r26 = interfaceinvoke r4.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r25)
Unit: interfaceinvoke $r37.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>("SIMPLE")
Unit: r3 = $r18
Unit: r4 = (java.sql.Connection) $r22
Local: r4
Possibly Mock: true

Unit: $r23 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/PreparedStatement;")
Local: $r23
Possibly Mock: true

Unit: r0 := @this: org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
Unit: $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r21 = new org.quartz.simpl.SimpleClassLoadHelper
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: org.quartz.spi.OperableTrigger selectTrigger(java.sql.Connection,org.quartz.TriggerKey)>(r4, $r39)
Unit: goto [?= $r41 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r1)]
Unit: $r8 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/TriggerPersistenceDelegate;")
Local: $r8
Possibly Mock: true

Unit: $r43 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Ljava/sql/Connection;")
Unit: $r27 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r26)
Unit: specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>()
Unit: $r12 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Lorg/quartz/TriggerKey;")
Unit: $r36 = interfaceinvoke r6.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TRIGGER_TYPE")
Unit: $r37 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r36)
Unit: $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()
Unit: r5 = (java.sql.PreparedStatement) $r23
Local: r5
Possibly Mock: true

Unit: $r46 = (org.quartz.TriggerKey) $r45
Unit: $r13 = (org.quartz.TriggerKey) $r12
Unit: r7 = $r48
Unit: $r30 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r29)
Unit: $r39 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String)>("test")
Unit: $r33 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r32)
Unit: $r42 = (org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate) $r41
Unit: specialinvoke $r18.<org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest$TestStdJDBCDelegate: void <init>(org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate)>(r1)
Unit: $r25 = staticinvoke <org.mockito.Matchers: java.lang.String anyString()>()
Unit: interfaceinvoke $r30.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r6)
Unit: specialinvoke $r21.<org.quartz.simpl.SimpleClassLoadHelper: void <init>()>()
Unit: $r24 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/ResultSet;")
Local: $r24
Possibly Mock: true

Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void initialize(org.slf4j.Logger,java.lang.String,java.lang.String,java.lang.String,org.quartz.spi.ClassLoadHelper,boolean,java.lang.String)>($r20, "QRTZ_", "TESTSCHED", "INSTANCE", $r21, 0, "")
Unit: interfaceinvoke $r15.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Throwable[])>($r16)
Unit: $r16 = newarray (java.lang.Throwable)[1]
Unit: $r11 = (java.sql.Connection) $r10
Unit: interfaceinvoke $r42.<org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate: org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle loadExtendedTriggerProperties(java.sql.Connection,org.quartz.TriggerKey)>($r44, $r46)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void assertSame(java.lang.Object,java.lang.Object)>(r2, r7)
Unit: interfaceinvoke $r27.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5)
Unit: r2 = $r9
Unit: interfaceinvoke $r33.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r34)
Unit: $r19 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Unit: $r41 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r1)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void fail(java.lang.String)>("Trigger selection should result in exception")
Unit: $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r22
Possibly Mock: true

Unit: $r48 := @caughtexception
Unit: return
Unit: $r20 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r19)
Unit: r1 = (org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate) $r8
Local: r1
Possibly Mock: true

Unit: $r45 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Lorg/quartz/TriggerKey;")
Unit: $r15 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r14)
Unit: $r16[0] = r2
Unit: $r44 = (java.sql.Connection) $r43
Unit: $r9 = new java.lang.IllegalStateException
Unit: $r10 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Ljava/sql/Connection;")
Unit: $r14 = interfaceinvoke r1.<org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate: org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle loadExtendedTriggerProperties(java.sql.Connection,org.quartz.TriggerKey)>($r11, $r13)
Unit: $r18 = new org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest$TestStdJDBCDelegate
Unit: $r29 = interfaceinvoke r5.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>()
Unit: $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: r6 = (java.sql.ResultSet) $r24
Local: r6
Possibly Mock: true

	method testSelectSimpleTriggerWithDeleteBeforeSelectExtendedProps : 
Unit: $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/PreparedStatement;")
Local: $r22
Possibly Mock: true

Unit: $r28 = interfaceinvoke r4.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>()
Unit: r5 = (java.sql.ResultSet) $r23
Local: r5
Possibly Mock: true

Unit: $r13 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r12)
Unit: interfaceinvoke $r26.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r4)
Unit: $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: void initialize(org.slf4j.Logger,java.lang.String,java.lang.String,java.lang.String,org.quartz.spi.ClassLoadHelper,boolean,java.lang.String)>($r19, "QRTZ_", "TESTSCHED", "INSTANCE", $r20, 0, "")
Unit: r3 = (java.sql.Connection) $r21
Local: r3
Possibly Mock: true

Unit: r6 = virtualinvoke r2.<org.quartz.impl.jdbcjobstore.StdJDBCDelegate: org.quartz.spi.OperableTrigger selectTrigger(java.sql.Connection,org.quartz.TriggerKey)>(r3, $r40)
Unit: r2 = $r17
Unit: $r20 = new org.quartz.simpl.SimpleClassLoadHelper
Unit: $r12 = interfaceinvoke r1.<org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate: org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle loadExtendedTriggerProperties(java.sql.Connection,org.quartz.TriggerKey)>($r9, $r11)
Unit: $r40 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String)>("test")
Unit: $r14 = newarray (java.lang.Throwable)[1]
Unit: $r34 = interfaceinvoke $r32.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r33)
Unit: $r42 = (org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate) $r41
Unit: $z0 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>()
Unit: $r14[0] = $r15
Unit: interfaceinvoke $r42.<org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate: org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle loadExtendedTriggerProperties(java.sql.Connection,org.quartz.TriggerKey)>($r44, $r46)
Unit: $r19 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r18)
Unit: r1 = (org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate) $r7
Local: r1
Possibly Mock: true

Unit: $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r21 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r21
Possibly Mock: true

Unit: interfaceinvoke $r29.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5)
Unit: $r23 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/ResultSet;")
Local: $r23
Possibly Mock: true

Unit: $r29 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r28)
Unit: interfaceinvoke $r38.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>("SIMPLE")
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
Unit: $r9 = (java.sql.Connection) $r8
Unit: $r46 = (org.quartz.TriggerKey) $r45
Unit: specialinvoke $r15.<java.lang.IllegalStateException: void <init>()>()
Unit: $r38 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r37)
Unit: $r17 = new org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest$TestStdJDBCDelegate
Unit: specialinvoke $r17.<org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest$TestStdJDBCDelegate: void <init>(org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate)>(r1)
Unit: $r32 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r31)
Unit: $r11 = (org.quartz.TriggerKey) $r10
Unit: r4 = (java.sql.PreparedStatement) $r22
Local: r4
Possibly Mock: true

Unit: $r15 = new java.lang.IllegalStateException
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest: void assertNull(java.lang.Object)>(r6)
Unit: specialinvoke $r20.<org.quartz.simpl.SimpleClassLoadHelper: void <init>()>()
Unit: $r25 = interfaceinvoke r3.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r24)
Unit: interfaceinvoke $r34.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r35)
Unit: $r37 = interfaceinvoke r5.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TRIGGER_TYPE")
Unit: $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r18 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Unit: $r26 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r25)
Unit: $r8 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Ljava/sql/Connection;")
Unit: $r24 = staticinvoke <org.mockito.Matchers: java.lang.String anyString()>()
Unit: return
Unit: $r43 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Ljava/sql/Connection;")
Unit: $r45 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Lorg/quartz/TriggerKey;")
Unit: interfaceinvoke $r13.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Throwable[])>($r14)
Unit: $r44 = (java.sql.Connection) $r43
Unit: $r7 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/quartz/impl/jdbcjobstore/TriggerPersistenceDelegate;")
Local: $r7
Possibly Mock: true

Unit: $r10 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "Lorg/quartz/TriggerKey;")
Unit: $r41 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r1)
 ====================================== 
** CLASS org.quartz.DisallowConcurrentExecution
 ====================================== 
** CLASS org.quartz.CronTrigger
	method getCronExpression : 
	method getTimeZone : 
	method getExpressionSummary : 
	method getTriggerBuilder : 
 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeExtendedNonConcurrentPersistentJob
	method <init> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.Constants
 ====================================== 
** CLASS org.quartz.integrations.tests.StdRowLockSemaphoreTest$MyLock
	method <init> : 
	method executeSQL : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate
	method initialize : 
	method canHandleTriggerType : 
	method getHandledTriggerTypeDiscriminator : 
	method insertExtendedTriggerProperties : 
	method updateExtendedTriggerProperties : 
	method deleteExtendedTriggerProperties : 
	method loadExtendedTriggerProperties : 
 ====================================== 
** CLASS org.quartz.JobDataMapTest
	method <init> : 
	method getTargetObject : 
	method getVersions : 
	method verifyMatch : 
	method main : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.ee.servlet.QuartzInitializerServlet
	method <init> : 
	method init : 
	method getSchedulerFactory : 
	method destroy : 
	method doPost : 
	method doGet : 
 ====================================== 
** CLASS org.quartz.listeners.BroadcastJobListener
	method <init> : 
	method <init> : 
	method getName : 
	method addListener : 
	method removeListener : 
	method removeListener : 
	method getListeners : 
	method jobToBeExecuted : 
	method jobExecutionVetoed : 
	method jobWasExecuted : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.LockException
	method <init> : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.impl.StdSchedulerFactoryCustomConnectionProviderTest
	method <init> : 
	method loadAndInitializeCustomConnectionProviderTest : 
Unit: $r7 = <org.quartz.impl.MockConnectionProvider: java.util.List methodsCalled>
Unit: $r9 = <org.quartz.impl.MockConnectionProvider: java.util.List methodsCalled>
Unit: return
Unit: $r4 = new org.quartz.impl.StdSchedulerFactory
Unit: $r11 := @caughtexception
Unit: specialinvoke $r4.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/properties/quartzCustomConnectionProvider.properties")
Unit: goto [?= $r5 = <org.quartz.impl.MockConnectionProvider: java.util.List methodsCalled>]
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void start()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("getConnection", $r10)
Unit: $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(2)
Unit: r1 = $r4
Unit: $r12 = virtualinvoke r3.<java.lang.Exception: java.lang.Throwable getCause()>()
Unit: $r5 = <org.quartz.impl.MockConnectionProvider: java.util.List methodsCalled>
Unit: $r13 = virtualinvoke $r12.<java.lang.Throwable: java.lang.Throwable getCause()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("setCustomProperty(customValue)", $r6)
Unit: r2 = virtualinvoke r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>()
Unit: $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(1)
Unit: $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>()
Unit: r3 = $r11
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("initialize", $r8)
Unit: r0 := @this: org.quartz.impl.StdSchedulerFactoryCustomConnectionProviderTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("org.quartz.impl.MockSQLException", $r15)
 ====================================== 
** CLASS org.quartz.utils.counter.CounterManager
	method createCounter : 
	method shutdown : 
	method shutdownCounter : 
 ====================================== 
** CLASS org.quartz.utils.StringKeyDirtyFlagMap
	method <init> : 
	method <init> : 
	method <init> : 
	method equals : 
	method hashCode : 
	method getKeys : 
	method setAllowsTransientData : 
	method getAllowsTransientData : 
	method containsTransientData : 
	method removeTransientData : 
	method put : 
	method put : 
	method put : 
	method put : 
	method put : 
	method put : 
	method put : 
	method put : 
	method getInt : 
	method getLong : 
	method getFloat : 
	method getDouble : 
	method getBoolean : 
	method getChar : 
	method getString : 
	method put : 
 ====================================== 
** CLASS org.quartz.xml.XMLSchedulingDataProcessor
	method <init> : 
	method initDocumentParser : 
	method resolveSchemaSource : 
	method isOverWriteExistingData : 
	method setOverWriteExistingData : 
	method isIgnoreDuplicates : 
	method setIgnoreDuplicates : 
	method addJobGroupToNeverDelete : 
	method removeJobGroupToNeverDelete : 
	method getJobGroupsToNeverDelete : 
	method addTriggerGroupToNeverDelete : 
	method removeTriggerGroupToNeverDelete : 
	method getTriggerGroupsToNeverDelete : 
	method processFile : 
	method processFile : 
	method getSystemIdForFileName : 
	method getURL : 
	method prepForProcessing : 
	method processFile : 
	method processStreamAndScheduleJobs : 
	method process : 
	method getTrimmedToNullString : 
	method getBoolean : 
	method processFileAndScheduleJobs : 
	method processFileAndScheduleJobs : 
	method processFileAndScheduleJobs : 
	method getLoadedJobs : 
	method getLoadedTriggers : 
	method getInputStream : 
	method addJobToSchedule : 
	method addTriggerToSchedule : 
	method buildTriggersByFQJobNameMap : 
	method executePreProcessCommands : 
	method scheduleJobs : 
	method warning : 
	method error : 
	method fatalError : 
	method addValidationException : 
	method clearValidationExceptions : 
	method maybeThrowValidationException : 
 ====================================== 
** CLASS org.quartz.impl.matchers.GroupMatcherTest
	method <init> : 
	method testAnyGroupMatchers : 
Unit: r2 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String,java.lang.String)>("frumpwomp", "bazoo")
Unit: r4 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher anyJobGroup()>()
Unit: $z0 = virtualinvoke r3.<org.quartz.impl.matchers.GroupMatcher: boolean isMatch(org.quartz.utils.Key)>(r1)
Unit: staticinvoke <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>("Expected match on job group", $z1)
Unit: staticinvoke <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>("Expected match on trigger group", $z0)
Unit: r3 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher anyTriggerGroup()>()
Unit: return
Unit: r1 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("booboo", "baz")
Unit: $z1 = virtualinvoke r4.<org.quartz.impl.matchers.GroupMatcher: boolean isMatch(org.quartz.utils.Key)>(r2)
Unit: r0 := @this: org.quartz.impl.matchers.GroupMatcherTest
 ====================================== 
** CLASS org.quartz.CalendarIntervalTriggerTest
	method <init> : 
	method testQTZ331FireTimeAfterBoundary : 
Unit: r3 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r1.<java.util.Calendar: void add(int,int)>(5, 1)
Unit: $r10 = new java.util.Date
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int)>(2013, 1, 15)
Unit: r2 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r11, $r12)
Unit: return
Unit: $r7 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: $l1 = $l0 - 500L
Unit: $r9 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>(r3)
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>(java.lang.String,java.util.Date,java.util.Date,org.quartz.DateBuilder$IntervalUnit,int)>("test", r2, null, $r7, 1)
Unit: $r8 = virtualinvoke r4.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>(r2)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r8, $r9)
Unit: $r12 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>(r3)
Unit: specialinvoke $r10.<java.util.Date: void <init>(long)>($l1)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r11 = virtualinvoke r4.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>(r5)
Unit: r5 = $r10
Unit: virtualinvoke r1.<java.util.Calendar: void clear()>()
Unit: r4 = $r6
Unit: $l0 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
	method testQTZ330DaylightSavingsCornerCase : 
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r14, $r16)
Unit: virtualinvoke r3.<java.util.Calendar: void clear()>()
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2013, 3, 19, 2, 30, 0)
Unit: $z0 = virtualinvoke r6.<java.util.Date: boolean after(java.util.Date)>($r13)
Unit: r5 = $r8
Unit: r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("America/New_York")
Unit: virtualinvoke r5.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(r4)
Unit: virtualinvoke r2.<java.util.Calendar: void clear()>()
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r16 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r15)
Unit: specialinvoke $r7.<org.quartz.impl.calendar.BaseCalendar: void <init>(java.util.TimeZone)>(r1)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setTimeZone(java.util.TimeZone)>(r1)
Unit: virtualinvoke r3.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(r1)
Unit: specialinvoke $r8.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>(java.lang.String,java.util.Date,java.util.Date,org.quartz.DateBuilder$IntervalUnit,int)>("QTZ-330", $r9, null, $r10, 1)
Unit: $r13 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int,int,int,int,int)>(2012, 2, 16, 2, 30, 0)
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: virtualinvoke r2.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(r1)
Unit: $r9 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r12 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: return
Unit: r4 = $r7
Unit: r6 = virtualinvoke r5.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r12)
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: $r8 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r5.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setPreserveHourOfDayAcrossDaylightSavings(boolean)>(1)
Unit: $r7 = new org.quartz.impl.calendar.BaseCalendar
	method testYearlyIntervalGetFireTimeAfter : 
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 4)
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: r2 = $r6
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2009, 5, 1, 9, 30, 17)
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Year increment result not as expected.", $r10, r5)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(2)
Unit: r5 = (java.util.Date) $r9
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit YEAR>
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(2)
Unit: return
	method testMonthlyIntervalGetFireTimeAfter : 
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(5)
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(2, 25)
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 6)
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Month increment result not as expected.", $r10, r5)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(5)
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MONTH>
Unit: virtualinvoke r3.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: r5 = (java.util.Date) $r9
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: r2 = $r6
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: return
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
	method testWeeklyIntervalGetFireTimeAfter : 
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(4)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: r5 = (java.util.Date) $r9
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(6, 168)
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit WEEK>
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(6)
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: return
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 7)
Unit: virtualinvoke r3.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: r2 = $r6
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Week increment result not as expected.", $r10, r5)
	method testDailyIntervalGetFireTimeAfter : 
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: r5 = (java.util.Date) $r9
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(6, 360)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(90)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Day increment result not as expected.", $r10, r5)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(4)
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: return
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 6)
Unit: virtualinvoke r3.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: r2 = $r6
	method testHourlyIntervalGetFireTimeAfter : 
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r3.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: r2 = $r6
Unit: return
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 6)
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(4)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Hour increment result not as expected.", $r10, r5)
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: r5 = (java.util.Date) $r9
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(10, 400)
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(100)
	method testMinutelyIntervalGetFireTimeAfter : 
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 6)
Unit: r2 = $r6
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(4)
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: r5 = (java.util.Date) $r9
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: return
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(12, 400)
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(100)
Unit: virtualinvoke r3.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Minutes increment result not as expected.", $r10, r5)
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
	method testSecondlyIntervalGetFireTimeAfter : 
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r2 = $r6
Unit: $r10 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(4)
Unit: virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 9, 30, 17)
Unit: virtualinvoke r3.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r7)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Seconds increment result not as expected.", $r10, r5)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(100)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: r5 = (java.util.Date) $r9
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: return
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 6)
Unit: $r6 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r1.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(13, 400)
Unit: specialinvoke $r6.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
	method testDaylightSavingsTransitions : 
Unit: $r37 = interfaceinvoke r73.<java.util.List: java.lang.Object get(int)>(3)
Unit: r75 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r3 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: virtualinvoke r55.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r59.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: virtualinvoke r75.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r75.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r39)
Unit: $z0 = 1
Unit: virtualinvoke r66.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r28)
Unit: $r41 = virtualinvoke r75.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r71.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(5)
Unit: virtualinvoke r64.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r48.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 2, 12, 9, 30, 17)
Unit: $i1 = virtualinvoke r60.<java.util.Calendar: int get(int)>(11)
Unit: r52 = (java.util.Date) $r5
Unit: $r27 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: $r46 = interfaceinvoke r78.<java.util.List: java.lang.Object get(int)>(3)
Unit: if $i4 != $i5 goto $z1 = 0
Unit: virtualinvoke r59.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r15)
Unit: $r21 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: $r44 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CEST")
Unit: virtualinvoke r59.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r16)
Unit: virtualinvoke r72.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: $r12 = virtualinvoke r55.<java.util.Calendar: java.util.Date getTime()>()
Unit: $i2 = virtualinvoke r63.<java.util.Calendar: int get(int)>(11)
Unit: $r24 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r70.<java.util.Calendar: void clear(int)>(14)
Unit: specialinvoke $r14.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r49.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r2)
Unit: r64 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r77.<java.util.Calendar: void setTime(java.util.Date)>($r45)
Unit: virtualinvoke r55.<java.util.Calendar: void add(int,int)>(6, 2)
Unit: return
Unit: r78 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r76, null, 6)
Unit: $r5 = interfaceinvoke r51.<java.util.List: java.lang.Object get(int)>(2)
Unit: r77 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r58 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r53.<java.util.Calendar: void clear(int)>(14)
Unit: $r16 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: $r34 = virtualinvoke r70.<java.util.Calendar: java.util.Date getTime()>()
Unit: r66 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r10 = virtualinvoke r53.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r64.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r23)
Unit: r73 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r71, null, 6)
Unit: virtualinvoke r49.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(5)
Unit: virtualinvoke r50.<java.util.Calendar: void add(int,int)>(6, 10)
Unit: $r28 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: r72 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r58.<java.util.Calendar: void set(int,int,int,int,int,int)>(2011, 2, 26, 4, 0, 0)
Unit: r76 = $r40
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: virtualinvoke r66.<java.util.Calendar: void setTime(java.util.Date)>($r29)
Unit: $r29 = virtualinvoke r64.<java.util.Calendar: java.util.Date getTime()>()
Unit: r55 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r77.<java.util.Calendar: void add(int,int)>(6, 3)
Unit: $r30 = interfaceinvoke r67.<java.util.List: java.lang.Object get(int)>(2)
Unit: $r2 = virtualinvoke r48.<java.util.Calendar: java.util.Date getTime()>()
Unit: r56 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r54, null, 6)
Unit: virtualinvoke r50.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: $r19 = virtualinvoke r58.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r65.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertTrue(java.lang.String,boolean)>("Day increment time-of-day result not as expected over spring 2011 daylight savings transition.", $z1)
Unit: $r45 = virtualinvoke r75.<java.util.Calendar: java.util.Date getTime()>()
Unit: r60 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r68 = (java.util.Date) $r30
Unit: $z0 = 0
Unit: virtualinvoke r54.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r8)
Unit: virtualinvoke r54.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: virtualinvoke r66.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: virtualinvoke r76.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r42)
Unit: $r6 = virtualinvoke r50.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertFalse(java.lang.String,boolean)>("Day increment time-of-day result not as expected over spring 2011 daylight savings transition.", $z0)
Unit: $z1 = 0
Unit: virtualinvoke r60.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: virtualinvoke r48.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r72.<java.util.Calendar: void setTime(java.util.Date)>($r36)
Unit: $r8 = virtualinvoke r53.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r25 = virtualinvoke r64.<java.util.Calendar: java.util.Date getTime()>()
Unit: r57 = (java.util.Date) $r11
Unit: $r43 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("EST")
Unit: specialinvoke $r7.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r58.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r13)
Unit: virtualinvoke r60.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r18)
Unit: virtualinvoke r71.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r35)
Unit: $i5 = virtualinvoke r69.<java.util.Calendar: int get(int)>(11)
Unit: if $i1 != $i2 goto $z0 = 0
Unit: goto [?= staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertFalse(java.lang.String,boolean)>("Day increment time-of-day result not as expected over spring 2011 daylight savings transition.", $z0)]
Unit: virtualinvoke r53.<java.util.Calendar: void set(int,int,int,int,int,int)>(2011, 2, 12, 1, 0, 0)
Unit: specialinvoke $r33.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: specialinvoke $r40.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: $r13 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: goto [?= staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertTrue(java.lang.String,boolean)>("Day increment time-of-day result not as expected over spring 2011 daylight savings transition.", $z1)]
Unit: r79 = (java.util.Date) $r46
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Day increment result not as expected over spring 2011 daylight savings transition.", $r12, r57)
Unit: $r18 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: virtualinvoke r69.<java.util.Calendar: void setTimeInMillis(long)>($l3)
Unit: virtualinvoke r77.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r70.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 9, 31, 9, 30, 17)
Unit: r49 = $r1
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: r67 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r65, null, 6)
Unit: r61 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r59, null, 6)
Unit: $r4 = virtualinvoke r48.<java.util.Calendar: java.util.Date getTime()>()
Unit: r69 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r31)
Unit: $r14 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: $r39 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CEST")
Unit: virtualinvoke r60.<java.util.Calendar: void clear(int)>(14)
Unit: $r7 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r71.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r34)
Unit: $r17 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("EST")
Unit: r63 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r21)
Unit: virtualinvoke r66.<java.util.Calendar: void add(int,int)>(6, 2)
Unit: $i4 = virtualinvoke r66.<java.util.Calendar: int get(int)>(11)
Unit: r53 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r76.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: $r15 = virtualinvoke r58.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r1 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: r59 = $r14
Unit: $r36 = virtualinvoke r70.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r66.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r63.<java.util.Calendar: void setTimeInMillis(long)>($l0)
Unit: $l3 = virtualinvoke r68.<java.util.Date: long getTime()>()
Unit: $r38 = virtualinvoke r72.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Day increment result not as expected over fall 2010 daylight savings transition.", $r38, r74)
Unit: virtualinvoke r50.<java.util.Calendar: void setTime(java.util.Date)>($r4)
Unit: virtualinvoke r72.<java.util.Calendar: void clear(int)>(14)
Unit: r54 = $r7
Unit: $r20 = interfaceinvoke r61.<java.util.List: java.lang.Object get(int)>(2)
Unit: specialinvoke $r24.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: $r40 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r65.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r25)
Unit: $r26 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: virtualinvoke r60.<java.util.Calendar: void setTime(java.util.Date)>($r19)
Unit: virtualinvoke r58.<java.util.Calendar: void clear(int)>(14)
Unit: r62 = (java.util.Date) $r20
Unit: r48 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r50 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r55.<java.util.Calendar: void setTime(java.util.Date)>($r10)
Unit: virtualinvoke r76.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setTimeZone(java.util.TimeZone)>($r43)
Unit: virtualinvoke r65.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setTimeZone(java.util.TimeZone)>($r27)
Unit: virtualinvoke r76.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r41)
Unit: virtualinvoke r65.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setPreserveHourOfDayAcrossDaylightSavings(boolean)>(1)
Unit: r70 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: specialinvoke $r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: $r47 = virtualinvoke r77.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r11 = interfaceinvoke r56.<java.util.List: java.lang.Object get(int)>(2)
Unit: virtualinvoke r77.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r44)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Day increment result not as expected over fall 2011 daylight savings transition.", $r47, r79)
Unit: virtualinvoke r49.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r3)
Unit: r74 = (java.util.Date) $r37
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Day increment result not as expected over spring 2010 daylight savings transition.", $r6, r52)
Unit: $r35 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: virtualinvoke r75.<java.util.Calendar: void set(int,int,int,int,int,int)>(2011, 9, 29, 1, 30, 0)
Unit: virtualinvoke r60.<java.util.Calendar: void add(int,int)>(6, 2)
Unit: virtualinvoke r54.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: $z1 = 1
Unit: virtualinvoke r77.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: r71 = $r33
Unit: r51 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r49, null, 6)
Unit: $r23 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: $l0 = virtualinvoke r62.<java.util.Date: long getTime()>()
Unit: r65 = $r24
Unit: virtualinvoke r65.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r26)
Unit: $r42 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: virtualinvoke r64.<java.util.Calendar: void set(int,int,int,int,int,int)>(2011, 2, 26, 4, 0, 0)
Unit: virtualinvoke r72.<java.util.Calendar: void add(int,int)>(6, 15)
Unit: virtualinvoke r50.<java.util.Calendar: void clear(int)>(14)
Unit: $r31 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("CET")
Unit: $r33 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r59.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setTimeZone(java.util.TimeZone)>($r17)
Unit: virtualinvoke r55.<java.util.Calendar: void setLenient(boolean)>(1)
	method testFinalFireTimes : 
Unit: $r5 = virtualinvoke r16.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r16.<java.util.Calendar: void setTime(java.util.Date)>($r4)
Unit: virtualinvoke r14.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 2, 12, 9, 0, 0)
Unit: virtualinvoke r20.<java.util.Calendar: void add(int,int)>(12, -3)
Unit: virtualinvoke r20.<java.util.Calendar: void setTime(java.util.Date)>($r10)
Unit: specialinvoke $r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: r16 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r1 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r20.<java.util.Calendar: void add(int,int)>(6, 15)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertTrue(java.lang.String,boolean)>("Final fire time not computed correctly for minutely interval.", $z0)
Unit: $r12 = virtualinvoke r20.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r6 = virtualinvoke r16.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r20.<java.util.Calendar: void add(int,int)>(12, -2)
Unit: $r10 = virtualinvoke r18.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r14.<java.util.Calendar: void clear(int)>(14)
Unit: return
Unit: virtualinvoke r18.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 2, 12, 9, 0, 0)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertTrue(java.lang.String,boolean)>("Final fire time not computed correctly for minutely interval.", $z1)
Unit: $r3 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: $z1 = virtualinvoke $r13.<java.util.Date: boolean equals(java.lang.Object)>(r21)
Unit: virtualinvoke r16.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: $r7 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: virtualinvoke r20.<java.util.Calendar: void clear(int)>(14)
Unit: r15 = $r1
Unit: virtualinvoke r19.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r8)
Unit: r20 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r2 = virtualinvoke r14.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r15.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r3)
Unit: virtualinvoke r15.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setEndTime(java.util.Date)>($r5)
Unit: r17 = virtualinvoke r15.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.Date getFinalFireTime()>()
Unit: virtualinvoke r19.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setEndTime(java.util.Date)>($r11)
Unit: specialinvoke $r7.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r15.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setStartTime(java.util.Date)>($r2)
Unit: r19 = $r7
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Final fire time not computed correctly for day interval.", $r6, r17)
Unit: $z0 = virtualinvoke $r12.<java.util.Date: boolean after(java.util.Date)>(r21)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
Unit: r14 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r13 = virtualinvoke r20.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r16.<java.util.Calendar: void clear(int)>(14)
Unit: $r8 = virtualinvoke r18.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r18.<java.util.Calendar: void clear(int)>(14)
Unit: virtualinvoke r19.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: virtualinvoke r19.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(5)
Unit: $r11 = virtualinvoke r20.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r16.<java.util.Calendar: void add(int,int)>(6, 10)
Unit: virtualinvoke r20.<java.util.Calendar: void setLenient(boolean)>(1)
Unit: r18 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r15.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setRepeatInterval(int)>(5)
Unit: $r4 = virtualinvoke r14.<java.util.Calendar: java.util.Date getTime()>()
Unit: r21 = virtualinvoke r19.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: java.util.Date getFinalFireTime()>()
	method testMisfireInstructionValidity : 
Unit: goto [?= return]
Unit: return
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setMisfireInstruction(int)>(0)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void fail(java.lang.String)>("Unexpected exception while setting misfire instruction.")
Unit: goto [?= virtualinvoke r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setMisfireInstruction(int)>(3)]
Unit: r5 = $r3
Unit: r1 = $r2
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setMisfireInstruction(int)>(3)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setMisfireInstruction(int)>(1)
Unit: r6 = $r4
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setMisfireInstruction(int)>(-1)
Unit: staticinvoke <org.quartz.CalendarIntervalTriggerTest: void fail(java.lang.String)>("Expected exception while setting invalid misfire instruction but did not get it.")
Unit: $r2 = new org.quartz.impl.triggers.CalendarIntervalTriggerImpl
Unit: $r3 := @caughtexception
Unit: $r4 := @caughtexception
Unit: specialinvoke $r2.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CalendarIntervalTriggerImpl: void setMisfireInstruction(int)>(2)
Unit: r0 := @this: org.quartz.CalendarIntervalTriggerTest
	method getTargetObject : 
	method getVersions : 
	method verifyMatch : 
	method main : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeNonConcurrentJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.JobBuilderTest$TestStatefulJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.utils.CircularLossyQueue
	method <init> : 
	method push : 
	method toArray : 
	method getIndex : 
	method peek : 
	method isEmtpy : 
	method getCurrentIndex : 
	method depth : 
 ====================================== 
** CLASS org.quartz.simpl.SimpleClassLoadHelper
	method <init> : 
	method initialize : 
	method loadClass : 
	method loadClass : 
	method getResource : 
	method getResourceAsStream : 
	method getClassLoader : 
 ====================================== 
** CLASS org.quartz.core.QuartzSchedulerResources
	method <init> : 
	method getName : 
	method setName : 
	method getInstanceId : 
	method setInstanceId : 
	method getUniqueIdentifier : 
	method getUniqueIdentifier : 
	method getRMIRegistryHost : 
	method setRMIRegistryHost : 
	method getRMIRegistryPort : 
	method setRMIRegistryPort : 
	method getRMIServerPort : 
	method setRMIServerPort : 
	method getRMICreateRegistryStrategy : 
	method getThreadName : 
	method setThreadName : 
	method setRMICreateRegistryStrategy : 
	method getThreadPool : 
	method setThreadPool : 
	method getJobStore : 
	method setJobStore : 
	method getJobRunShellFactory : 
	method setJobRunShellFactory : 
	method addSchedulerPlugin : 
	method getSchedulerPlugins : 
	method getMakeSchedulerThreadDaemon : 
	method setMakeSchedulerThreadDaemon : 
	method isThreadsInheritInitializersClassLoadContext : 
	method setThreadsInheritInitializersClassLoadContext : 
	method getRMIBindName : 
	method setRMIBindName : 
	method getJMXExport : 
	method setJMXExport : 
	method getJMXObjectName : 
	method setJMXObjectName : 
	method getThreadExecutor : 
	method setThreadExecutor : 
	method generateJMXObjectName : 
	method getBatchTimeWindow : 
	method setBatchTimeWindow : 
	method getMaxBatchSize : 
	method setMaxBatchSize : 
	method isInterruptJobsOnShutdown : 
	method setInterruptJobsOnShutdown : 
	method isInterruptJobsOnShutdownWithWait : 
	method setInterruptJobsOnShutdownWithWait : 
	method getManagementRESTServiceConfiguration : 
	method setManagementRESTServiceConfiguration : 
 ====================================== 
** CLASS org.quartz.simpl.PropertySettingJobFactoryTest
	method <init> : 
	method setUp : 
	method testSetBeanPropsPrimatives : 
Unit: $f0 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: float getFloatValue()>()
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(java.lang.String,java.lang.String)>("S1", $r22)
Unit: $z0 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: boolean getBooleanValue()>()
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertTrue(boolean)>($z0)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("shortValue", $r14)
Unit: $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(3.0F)
Unit: virtualinvoke $r21.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>(r2, r1)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(int,int)>(5, $s2)
Unit: $z1 = interfaceinvoke $r23.<java.util.Map: boolean containsKey(java.lang.Object)>("A")
Unit: $d0 = (double) $f0
Unit: $r20 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("floatValue", $r8)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(long,long)>(2L, $l1)
Unit: $c3 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: char getCharValue()>()
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("booleanValue", $r12)
Unit: $b4 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: byte getByteValue()>()
Unit: $r21 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(char,char)>(97, $c3)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("stringValue", "S1")
Unit: r1 = $r3
Unit: $d1 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: double getDoubleValue()>()
Unit: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(double,double,double)>(4.0, $d1, 1.0E-4)
Unit: $r3 = new org.quartz.JobDataMap
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(int,int)>(1, $i0)
Unit: r2 = $r20
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(double,double,double)>(3.0, $d0, 1.0E-4)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(byte,byte)>(6, $b4)
Unit: return
Unit: $l1 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: long getLongValue()>()
Unit: $s2 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: short getShortValue()>()
Unit: specialinvoke $r20.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: $r22 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: java.lang.String getStringValue()>()
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("intValue", $r4)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("longValue", $r6)
Unit: $r16 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(6)
Unit: $i0 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: int getIntValue()>()
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r23 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: java.util.Map getMapValue()>()
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,char)>("charValue", 97)
Unit: $r18 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("A", "B")
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("byteValue", $r16)
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(4.0)
Unit: $r14 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(5)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("doubleValue", $r10)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("mapValue", $r18)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertTrue(boolean)>($z1)
	method testSetBeanPropsUnknownProperty : 
Unit: r1 = $r3
Unit: $r6 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: $r7 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: $r3 = new org.quartz.JobDataMap
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: virtualinvoke $r7.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>($r6, r1)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("bogusValue", $r4)
Unit: r2 = $r8
Unit: specialinvoke $r6.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: goto [?= return]
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void fail()>()
Unit: return
Unit: $r8 := @caughtexception
	method testSetBeanPropsNullPrimative : 
Unit: $r3 = new org.quartz.JobDataMap
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: r1 = $r3
Unit: return
Unit: goto [?= return]
Unit: specialinvoke $r4.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("intValue", null)
Unit: $r5 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: virtualinvoke $r5.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>($r4, r1)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void fail()>()
Unit: r2 = $r6
Unit: $r6 := @caughtexception
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: $r4 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
	method testSetBeanPropsNullNonPrimative : 
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: r2 = $r4
Unit: virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void setMapValue(java.util.Map)>($r5)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("mapValue", null)
Unit: $r5 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("A", "B")
Unit: return
Unit: $r6 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: $r3 = new org.quartz.JobDataMap
Unit: specialinvoke $r4.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: $r4 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: r1 = $r3
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertNull(java.lang.Object)>($r7)
Unit: $r7 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: java.util.Map getMapValue()>()
Unit: virtualinvoke $r6.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>(r2, r1)
	method testSetBeanPropsWrongPrimativeType : 
Unit: r1 = $r3
Unit: $r7 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: $r6 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: virtualinvoke $r7.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>($r6, r1)
Unit: specialinvoke $r4.<java.lang.Float: void <init>(float)>(7.0F)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void fail()>()
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: $r3 = new org.quartz.JobDataMap
Unit: goto [?= return]
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("intValue", $r4)
Unit: return
Unit: $r8 := @caughtexception
Unit: $r4 = new java.lang.Float
Unit: specialinvoke $r6.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: r2 = $r8
	method testSetBeanPropsWrongNonPrimativeType : 
Unit: $r4 = new java.lang.Float
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: return
Unit: $r7 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: specialinvoke $r6.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: goto [?= return]
Unit: $r3 = new org.quartz.JobDataMap
Unit: virtualinvoke $r7.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>($r6, r1)
Unit: r1 = $r3
Unit: r2 = $r8
Unit: $r8 := @caughtexception
Unit: $r6 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: specialinvoke $r4.<java.lang.Float: void <init>(float)>(7.0F)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void fail()>()
Unit: virtualinvoke r1.<org.quartz.JobDataMap: java.lang.Object put(java.lang.String,java.lang.Object)>("mapValue", $r4)
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
	method testSetBeanPropsCharStringTooShort : 
Unit: r2 = $r6
Unit: $r3 = new org.quartz.JobDataMap
Unit: r1 = $r3
Unit: $r6 := @caughtexception
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("charValue", "")
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: goto [?= return]
Unit: specialinvoke $r4.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: $r4 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: virtualinvoke $r5.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>($r4, r1)
Unit: return
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void fail()>()
Unit: $r5 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
	method testSetBeanPropsCharStringTooLong : 
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void fail()>()
Unit: r2 = $r6
Unit: $r6 := @caughtexception
Unit: r1 = $r3
Unit: return
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: $r5 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("charValue", "abba")
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: goto [?= return]
Unit: $r3 = new org.quartz.JobDataMap
Unit: specialinvoke $r4.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: virtualinvoke $r5.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>($r4, r1)
Unit: $r4 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
	method testSetBeanPropsFromStrings : 
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(int,int)>(1, $i0)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("shortValue", "5")
Unit: virtualinvoke $r5.<org.quartz.simpl.PropertySettingJobFactory: void setBeanProps(java.lang.Object,org.quartz.JobDataMap)>(r2, r1)
Unit: $i0 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: int getIntValue()>()
Unit: $z0 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: boolean getBooleanValue()>()
Unit: return
Unit: $r3 = new org.quartz.JobDataMap
Unit: $r4 = new org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(byte,byte)>(6, $b4)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(double,double,double)>(4.0, $d1, 1.0E-4)
Unit: r1 = $r3
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("floatValue", "3.0")
Unit: $d1 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: double getDoubleValue()>()
Unit: $c3 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: char getCharValue()>()
Unit: $f0 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: float getFloatValue()>()
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(boolean,boolean)>(1, $z0)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(char,char)>(97, $c3)
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(long,long)>(2L, $l1)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("byteValue", "6")
Unit: specialinvoke $r4.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: void <init>(org.quartz.simpl.PropertySettingJobFactoryTest$1)>(null)
Unit: $r5 = r0.<org.quartz.simpl.PropertySettingJobFactoryTest: org.quartz.simpl.PropertySettingJobFactory factory>
Unit: r2 = $r4
Unit: $d0 = (double) $f0
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(int,int)>(5, $s2)
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("booleanValue", "true")
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("doubleValue", "4.0")
Unit: r0 := @this: org.quartz.simpl.PropertySettingJobFactoryTest
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("intValue", "1")
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("charValue", "a")
Unit: staticinvoke <org.quartz.simpl.PropertySettingJobFactoryTest: void assertEquals(double,double,double)>(3.0, $d0, 1.0E-4)
Unit: specialinvoke $r3.<org.quartz.JobDataMap: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("longValue", "2")
Unit: $l1 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: long getLongValue()>()
Unit: $b4 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: byte getByteValue()>()
Unit: $s2 = virtualinvoke r2.<org.quartz.simpl.PropertySettingJobFactoryTest$TestBean: short getShortValue()>()
 ====================================== 
** CLASS org.quartz.Job
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.RemoteMBeanSchedulerTest$TestRemoteScheduler
	method <init> : 
	method initialize : 
	method getAttribute : 
	method getAttributes : 
	method invoke : 
 ====================================== 
** CLASS org.quartz.SchedulerException
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method getUnderlyingException : 
	method toString : 
 ====================================== 
** CLASS org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest
	method <init> : 
	method testPauseAndResumeTriggers : 
Unit: interfaceinvoke $r26.<org.quartz.Scheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>($r27)
Unit: $r29 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: r1 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r26 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: return
Unit: $r27 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r25 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r24)
Unit: $r13 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r10 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r31 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r30)
Unit: $r28 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r33)
Unit: r34 = interfaceinvoke $r12.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r13)
Unit: $r14 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r18 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: $r32 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r20 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r15)
Unit: $r12 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r19 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: r0 := @this: org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest
Unit: r35 = interfaceinvoke $r20.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r21)
Unit: $r16 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: interfaceinvoke $r18.<org.quartz.Scheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>($r19)
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r23 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r22)
Unit: r36 = interfaceinvoke $r28.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r29)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r31)
Unit: r2 = (org.quartz.CronTrigger) $r9
Unit: $r17 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r16)
Unit: $r33 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r32)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r23)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r25)
Unit: $r21 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r17)
Unit: $r8 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: $r3 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r22 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r7 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r30 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r24 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
	method testResumeTriggersBeforeAddJob : 
Unit: $r14 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r20 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r18 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r21)
Unit: return
Unit: $r16 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r26 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: r1 = virtualinvoke $r8.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r27)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r37)
Unit: $r24 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r22 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r9 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: interfaceinvoke $r14.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: r0 := @this: org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r35)
Unit: $r6 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: $r21 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r20)
Unit: r38 = interfaceinvoke $r16.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r17)
Unit: $r19 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r18)
Unit: $r3 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r12 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r11)
Unit: $r11 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r36 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r7 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r25 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r33 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r29 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r28)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r26)
Unit: interfaceinvoke $r3.<org.quartz.Scheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>($r4)
Unit: interfaceinvoke $r22.<org.quartz.Scheduler: void pauseTriggers(org.quartz.impl.matchers.GroupMatcher)>($r23)
Unit: r39 = interfaceinvoke $r24.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r25)
Unit: r40 = interfaceinvoke $r32.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r33)
Unit: $r35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r34)
Unit: $r37 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r36)
Unit: $r32 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r17 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r4 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: $r28 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r8 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: $r10 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r30 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: interfaceinvoke $r30.<org.quartz.Scheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>($r31)
Unit: $r31 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r19)
Unit: $r5 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r2 = (org.quartz.CronTrigger) $r13
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r29)
Unit: $r23 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("abc")
Unit: interfaceinvoke $r5.<org.quartz.Scheduler: void resumeTriggers(org.quartz.impl.matchers.GroupMatcher)>($r6)
Unit: $r34 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
	method testPauseAndResumeJobs : 
Unit: r36 = interfaceinvoke $r28.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r29)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r33)
Unit: r35 = interfaceinvoke $r20.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r21)
Unit: $r18 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r4 = virtualinvoke $r3.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("test", "abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r17)
Unit: $r7 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r14 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r29 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: r2 = (org.quartz.CronTrigger) $r9
Unit: $r17 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r16)
Unit: $r30 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: return
Unit: $r5 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r28 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r23 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r22)
Unit: r34 = interfaceinvoke $r12.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r13)
Unit: r0 := @this: org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest
Unit: $r25 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r24)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r34, $r15)
Unit: $r20 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r3 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r33 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r32)
Unit: $r24 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r26 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r12 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r8 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r7)
Unit: $r13 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r14)
Unit: $r21 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: interfaceinvoke $r26.<org.quartz.Scheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>($r27)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r25)
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r19 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r31 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r30)
Unit: r1 = virtualinvoke $r4.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r22 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r27 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r10 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r35, $r23)
Unit: $r32 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r16 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: interfaceinvoke $r10.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r36, $r31)
Unit: interfaceinvoke $r18.<org.quartz.Scheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>($r19)
	method testResumeJobsBeforeAddJobs : 
Unit: $r12 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r11)
Unit: interfaceinvoke $r22.<org.quartz.Scheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>($r23)
Unit: $r33 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r34 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r29 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r28)
Unit: interfaceinvoke $r14.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r22 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: interfaceinvoke $r3.<org.quartz.Scheduler: void pauseJobs(org.quartz.impl.matchers.GroupMatcher)>($r4)
Unit: r1 = virtualinvoke $r8.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r20 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r21 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r20)
Unit: $r36 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r37)
Unit: $r18 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: $r37 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>($r36)
Unit: $r16 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r11 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: $r19 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r18)
Unit: $r35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r34)
Unit: $r31 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r32 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: return
Unit: $r30 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r23 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: $r6 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r19)
Unit: r40 = interfaceinvoke $r32.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r33)
Unit: interfaceinvoke $r30.<org.quartz.Scheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>($r31)
Unit: $r5 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r29)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r21)
Unit: r39 = interfaceinvoke $r24.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r25)
Unit: $r10 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r9 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r2 = (org.quartz.CronTrigger) $r13
Unit: $r25 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: r38 = interfaceinvoke $r16.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r17)
Unit: $r14 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r17 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r28 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState NORMAL>
Unit: interfaceinvoke $r5.<org.quartz.Scheduler: void resumeJobs(org.quartz.impl.matchers.GroupMatcher)>($r6)
Unit: $r8 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("test", "abc")
Unit: $r26 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState PAUSED>
Unit: $r24 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: r0 := @this: org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest
Unit: $r27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r26)
Unit: $r4 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("abc")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r39, $r27)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r35)
Unit: $r3 = r0.<org.quartz.integrations.tests.QuartzMemoryPauseAndResumeTest: org.quartz.Scheduler scheduler>
Unit: $r7 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
 ====================================== 
** CLASS org.quartz.DisallowConcurrentExecutionJobTest$TestJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.CacheDelegate$BlobFreeingStream
	method <init> : 
	method read : 
	method read : 
	method read : 
	method skip : 
	method available : 
	method close : 
	method mark : 
	method reset : 
	method markSupported : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreCMT
	method <init> : 
	method setNonManagedTXDataSource : 
	method getNonManagedTXDataSource : 
	method isDontSetNonManagedTXConnectionAutoCommitFalse : 
	method setDontSetNonManagedTXConnectionAutoCommitFalse : 
	method isTxIsolationLevelReadCommitted : 
	method setTxIsolationLevelReadCommitted : 
	method initialize : 
	method shutdown : 
	method getNonManagedTXConnection : 
	method executeInLock : 
 ====================================== 
** CLASS org.quartz.SimpleTrigger
	method getRepeatCount : 
	method getRepeatInterval : 
	method getTimesTriggered : 
	method getTriggerBuilder : 
 ====================================== 
** CLASS org.quartz.InterruptableJob
	method interrupt : 
 ====================================== 
** CLASS org.quartz.impl.StdScheduler
	method <init> : 
	method getSchedulerName : 
	method getSchedulerInstanceId : 
	method getMetaData : 
	method getContext : 
	method start : 
	method startDelayed : 
	method standby : 
	method isStarted : 
	method isInStandbyMode : 
	method shutdown : 
	method shutdown : 
	method isShutdown : 
	method getCurrentlyExecutingJobs : 
	method clear : 
	method scheduleJob : 
	method scheduleJob : 
	method addJob : 
	method addJob : 
	method deleteJobs : 
	method scheduleJobs : 
	method scheduleJob : 
	method unscheduleJobs : 
	method deleteJob : 
	method unscheduleJob : 
	method rescheduleJob : 
	method triggerJob : 
	method triggerJob : 
	method pauseTrigger : 
	method pauseTriggers : 
	method pauseJob : 
	method getPausedTriggerGroups : 
	method pauseJobs : 
	method resumeTrigger : 
	method resumeTriggers : 
	method resumeJob : 
	method resumeJobs : 
	method pauseAll : 
	method resumeAll : 
	method getJobGroupNames : 
	method getTriggersOfJob : 
	method getJobKeys : 
	method getTriggerGroupNames : 
	method getTriggerKeys : 
	method getJobDetail : 
	method getTrigger : 
	method getTriggerState : 
	method resetTriggerFromErrorState : 
	method addCalendar : 
	method deleteCalendar : 
	method getCalendar : 
	method getCalendarNames : 
	method checkExists : 
	method checkExists : 
	method setJobFactory : 
	method getListenerManager : 
	method interrupt : 
	method interrupt : 
 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntryIterator
	method <init> : 
	method next : 
	method next : 
 ====================================== 
** CLASS org.quartz.Qtz205SchedulerListenerTest$Qtz205Job
	method <init> : 
	method execute : 
	method access$100 : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.simpl.SimpleInstanceIdGenerator
	method <init> : 
	method generateInstanceId : 
 ====================================== 
** CLASS org.quartz.SchedulerMetaData
	method <init> : 
	method getSchedulerName : 
	method getSchedulerInstanceId : 
	method getSchedulerClass : 
	method getRunningSince : 
	method getNumberOfJobsExecuted : 
	method isSchedulerRemote : 
	method isStarted : 
	method isInStandbyMode : 
	method isShutdown : 
	method getJobStoreClass : 
	method isJobStoreSupportsPersistence : 
	method isJobStoreClustered : 
	method getThreadPoolClass : 
	method getThreadPoolSize : 
	method getVersion : 
	method toString : 
	method getSummary : 
 ====================================== 
** CLASS org.quartz.FlakyJdbcSchedulerTest
	method data : 
	method <init> : 
	method createScheduler : 
	method testTriggerFiring : 
	method createFailure : 
	method preCommitFailure : 
	method postCommitFailure : 
	method access$100 : 
	method access$200 : 
	method access$300 : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.NoSuchDelegateException
	method <init> : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.core.ListenerManagerTest$TestTriggerListener
	method <init> : 
	method getName : 
 ====================================== 
** CLASS org.quartz.impl.DefaultThreadExecutor
	method <init> : 
	method initialize : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$9
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest
	method <init> : 
	method createSchedulerProperties : 
	method testJobClassNotFoundDoesntBlock : 
Unit: $r7 = new java.util.concurrent.CyclicBarrier
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r2)
Unit: virtualinvoke r1.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(20L, $r31)
Unit: $r35 = <org.quartz.Trigger$TriggerState: org.quartz.Trigger$TriggerState ERROR>
Unit: r2 = virtualinvoke $r12.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r24 = virtualinvoke $r22.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r23)
Unit: interfaceinvoke $r30.<org.quartz.Scheduler: void scheduleJobs(java.util.Map,boolean)>(r6, 1)
Unit: $r9 = interfaceinvoke $r8.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: $r8 = r0.<org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest: org.quartz.Scheduler scheduler>
Unit: interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r28)
Unit: $r33 = interfaceinvoke r5.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r34 = interfaceinvoke $r32.<org.quartz.Scheduler: org.quartz.Trigger$TriggerState getTriggerState(org.quartz.TriggerKey)>($r33)
Unit: r1 = $r7
Unit: $r14 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("bad")
Unit: $r15 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r21 = virtualinvoke $r20.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("bad")
Unit: $r13 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/JobClassNotFoundExceptionErrorsTriggersTest$BadJob;")
Unit: $r23 = new java.util.Date
Unit: $r32 = r0.<org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r34, $r36)
Unit: $r12 = virtualinvoke $r11.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("good")
Unit: $r25 = new java.util.HashMap
Unit: $r22 = virtualinvoke $r21.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r3)
Unit: r3 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: r6 = $r25
Unit: $r26 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5)
Unit: r5 = virtualinvoke $r24.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r36 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r35)
Unit: $l1 = l0 + 1L
Unit: l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
Unit: $r18 = new java.util.Date
Unit: specialinvoke $r18.<java.util.Date: void <init>(long)>($l1)
Unit: interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r26)
Unit: r4 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r0 := @this: org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest
Unit: $r19 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r18)
Unit: virtualinvoke $r9.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>("BARRIER", r1)
Unit: $r20 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r16 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("good")
Unit: $r28 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r4)
Unit: $r31 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
Unit: specialinvoke $r23.<java.util.Date: void <init>(long)>(l0)
Unit: specialinvoke $r7.<java.util.concurrent.CyclicBarrier: void <init>(int)>(2)
Unit: $r11 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/JobClassNotFoundExceptionErrorsTriggersTest$GoodJob;")
Unit: specialinvoke $r25.<java.util.HashMap: void <init>()>()
Unit: return
Unit: $r30 = r0.<org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest: org.quartz.Scheduler scheduler>
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$8
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$7
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.simpl.TriggerWrapperComparator
	method <init> : 
	method compare : 
	method equals : 
	method hashCode : 
	method compare : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$6
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$5
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$4
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.core.QTZ212_SchedulerListener_Test$TestSchedulerListener
	method <init> : 
	method schedulerStarted : 
	method schedulerStarting : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$3
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$2
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.simpl.JobWrapper
	method <init> : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$1
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test
	method <init> : 
	method initialize : 
	method checkAll4TriggersStillRunningTest : 
Unit: r0 := @this: org.quartz.integrations.tests.QTZ179_TriggerLostAfterDbRestart_Test
Unit: if i0 <= 1 goto $z0 = 0
Unit: i0 = staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: int triggersInAcquiredState()>()
Unit: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There should not be more than 1 trigger in ACQUIRED state in the DB, but found ")
Unit: specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r4, $z0)]
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r4, $z0)
Unit: $z0 = 0
Unit: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
Unit: $r1 = new java.lang.StringBuilder
Unit: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $z0 = 1
Unit: return
	method shutdownDb : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.spi.MutableTrigger
	method setKey : 
	method setJobKey : 
	method setDescription : 
	method setCalendarName : 
	method setJobDataMap : 
	method setPriority : 
	method setStartTime : 
	method setEndTime : 
	method setMisfireInstruction : 
	method clone : 
 ====================================== 
** CLASS org.quartz.utils.ClassUtilsTest$1
 ====================================== 
** CLASS org.quartz.core.RecoverJobsTest
	method <init> : 
	method testRecoveringRepeatJobWhichIsFiredAndMisfiredAtTheSameTime : 
Unit: r6 = interfaceinvoke r30.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("SELECT count(*) from QRTZ_FIRED_TRIGGERS")
Unit: $r13 = virtualinvoke $r12.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: r7 = $r29
Unit: interfaceinvoke r4.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>($r13, $r20)
Unit: throw r8
Unit: r5 = virtualinvoke $r22.<org.quartz.utils.DBConnectionManager: java.sql.Connection getConnection(java.lang.String)>(r1)
Unit: $r12 = virtualinvoke $r11.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: r31 = interfaceinvoke r30.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("SELECT TRIGGER_STATE from QRTZ_TRIGGERS")
Unit: $r29 := @caughtexception
Unit: interfaceinvoke r5.<java.sql.Connection: void close()>()
Unit: $r15 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: r8 = $r28
Unit: interfaceinvoke r5.<java.sql.Connection: void close()>()
Unit: $r20 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r30 = interfaceinvoke r5.<java.sql.Connection: java.sql.Statement createStatement()>()
Unit: interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setDataSource(java.lang.String)>(r1)
Unit: $r10 = new org.quartz.simpl.SimpleThreadPool
Unit: $r19 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r18)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void createDatabase(java.lang.String)>(r1)
Unit: specialinvoke $r27.<org.quartz.core.RecoverJobsTest$1: void <init>(org.quartz.core.RecoverJobsTest,java.util.concurrent.atomic.AtomicBoolean)>(r0, r32)
Unit: r0 := @this: org.quartz.core.RecoverJobsTest
Unit: $r14 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r1 = "recoverJobsTest"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("BLOCKED", $r23)
Unit: specialinvoke $r9.<org.quartz.impl.jdbcjobstore.JobStoreTX: void <init>()>()
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(4000L)
Unit: r33 = virtualinvoke r3.<org.quartz.impl.DirectSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: return
Unit: $r22 = staticinvoke <org.quartz.utils.DBConnectionManager: org.quartz.utils.DBConnectionManager getInstance()>()
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>(r1)
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void start()>()
Unit: $z2 = virtualinvoke r32.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()
Unit: $r25 = new org.quartz.simpl.SimpleThreadPool
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $l0 = interfaceinvoke r6.<java.sql.ResultSet: long getLong(int)>(1)
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(2000L)
Unit: $r28 := @caughtexception
Unit: specialinvoke $r25.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(1, 5)
Unit: r32 = $r24
Unit: virtualinvoke r3.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>($r25, r2)
Unit: $r27 = new org.quartz.core.RecoverJobsTest$1
Unit: $r18 = virtualinvoke $r17.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatForever()>()
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setMisfireThreshold(long)>(1000L)
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceId(java.lang.String)>("SINGLE_NODE_TEST")
Unit: r4 = virtualinvoke r3.<org.quartz.impl.DirectSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: interfaceinvoke r33.<org.quartz.Scheduler: void start()>()
Unit: r3 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: $r16 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: virtualinvoke r2.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceName(java.lang.String)>(r1)
Unit: interfaceinvoke $r26.<org.quartz.ListenerManager: void addJobListener(org.quartz.JobListener)>($r27)
Unit: $r26 = interfaceinvoke r33.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(0)
Unit: $r9 = new org.quartz.impl.jdbcjobstore.JobStoreTX
Unit: <org.quartz.core.RecoverJobsTest$RecoverJobsTestJob: boolean runForever> = 1
Unit: $r23 = interfaceinvoke r31.<java.sql.ResultSet: java.lang.String getString(int)>(1)
Unit: <org.quartz.core.RecoverJobsTest$RecoverJobsTestJob: boolean runForever> = 0
Unit: $r17 = virtualinvoke $r16.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInMilliseconds(long)>(1000L)
Unit: interfaceinvoke r30.<java.sql.Statement: void close()>()
Unit: $r24 = new java.util.concurrent.atomic.AtomicBoolean
Unit: throw r7
Unit: specialinvoke $r10.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(1, 5)
Unit: interfaceinvoke r31.<java.sql.ResultSet: boolean next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l0)
Unit: goto [?= <org.quartz.core.RecoverJobsTest$RecoverJobsTestJob: boolean runForever> = 0]
Unit: specialinvoke $r24.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0)
Unit: virtualinvoke r3.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>($r10, r2)
Unit: $r11 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/core/RecoverJobsTest$RecoverJobsTestJob;")
Unit: interfaceinvoke r33.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: goto [?= return]
Unit: r2 = $r9
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(2000L)
 ====================================== 
** CLASS org.quartz.integrations.tests.JdbcQuartzDerbyUtilities$DerbyConnectionProvider
	method <init> : 
	method getConnection : 
	method shutdown : 
	method initialize : 
 ====================================== 
** CLASS org.quartz.simpl.HostnameInstanceIdGenerator
	method <init> : 
	method generateInstanceId : 
 ====================================== 
** CLASS org.quartz.utils.JNDIConnectionProvider
	method <init> : 
	method <init> : 
	method getLog : 
	method init : 
	method getConnection : 
	method isAlwaysLookup : 
	method setAlwaysLookup : 
	method shutdown : 
	method initialize : 
 ====================================== 
** CLASS org.quartz.DateBuilder$1
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
	method <init> : 
	method executeSQL : 
	method getUpdateLockRowSQL : 
	method setUpdateLockRowSQL : 
	method lockViaUpdate : 
	method lockViaInsert : 
 ====================================== 
** CLASS org.quartz.core.jmx.TriggerSupport
	method <init> : 
	method getItemNames : 
	method getItemDescriptions : 
	method getItemTypes : 
	method getIndexNames : 
	method toCompositeData : 
	method toTabularData : 
	method toCompositeList : 
	method initializeTrigger : 
	method initializeTrigger : 
	method newTrigger : 
	method newTrigger : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.management.ManagementRESTServiceConfiguration
	method <init> : 
	method isEnabled : 
	method setEnabled : 
	method getSecurityServiceLocation : 
	method setSecurityServiceLocation : 
	method getSecurityServiceTimeout : 
	method setSecurityServiceTimeout : 
	method getBind : 
	method getHost : 
	method getPort : 
	method setBind : 
 ====================================== 
** CLASS org.quartz.core.QuartzSchedulerMBeanImpl$Emitter
	method <init> : 
	method getNotificationInfo : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.impl.SchedulerDetailsSetter
	method <init> : 
	method setDetails : 
	method set : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.CronExpressionTest
	method <init> : 
	method getTargetObject : 
	method getVersions : 
	method verifyMatch : 
	method testIsSatisfiedBy : 
Unit: $r4 = virtualinvoke r7.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertFalse(boolean)>($z3)
Unit: $r5 = virtualinvoke r8.<java.util.Calendar: java.util.Date getTime()>()
Unit: r1 = $r2
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 10, 16, 0)
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(1, 2006)
Unit: return
Unit: r7 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r8 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $z3 = virtualinvoke r1.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r6)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertFalse(boolean)>($z1)
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 15 10 * * ? 2005")
Unit: $z0 = virtualinvoke r1.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r3)
Unit: $r6 = virtualinvoke r9.<java.util.Calendar: java.util.Date getTime()>()
Unit: $z2 = virtualinvoke r1.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r5)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(boolean)>($z0)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertFalse(boolean)>($z2)
Unit: virtualinvoke r9.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 10, 14, 0)
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 5, 1, 10, 15, 0)
Unit: $r3 = virtualinvoke r7.<java.util.Calendar: java.util.Date getTime()>()
Unit: $z1 = virtualinvoke r1.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r4)
Unit: $r2 = new org.quartz.CronExpression
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: r9 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
	method testLastDayOffset : 
Unit: $z0 = virtualinvoke r11.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r3)
Unit: $r9 = new org.quartz.CronExpression
Unit: $r4 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r7 = new org.quartz.CronExpression
Unit: r12 = $r5
Unit: $z1 = virtualinvoke r11.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r4)
Unit: r14 = $r9
Unit: $r10 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(boolean)>($z2)
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 15 10 L-2 * ? 2010")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(boolean)>($z4)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertFalse(boolean)>($z1)
Unit: $z2 = virtualinvoke r12.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r6)
Unit: $r2 = new org.quartz.CronExpression
Unit: $r8 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r13 = $r7
Unit: $r6 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(boolean)>($z0)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 9, 29, 10, 15, 0)
Unit: r11 = $r2
Unit: $r3 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r5 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(boolean)>($z3)
Unit: specialinvoke $r7.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 15 10 L-1 * ? 2010")
Unit: return
Unit: $z4 = virtualinvoke r14.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r10)
Unit: $z3 = virtualinvoke r13.<org.quartz.CronExpression: boolean isSatisfiedBy(java.util.Date)>($r8)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 9, 26, 10, 15, 0)
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 9, 30, 10, 15, 0)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 9, 28, 10, 15, 0)
Unit: specialinvoke $r5.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 15 10 L-5W * ? 2010")
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2010, 9, 29, 10, 15, 0)
Unit: specialinvoke $r9.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 15 10 L-1W * ? 2010")
	method testQuartz571 : 
Unit: r2 = $r8
Unit: $r16 = new java.util.Date
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: specialinvoke $r16.<java.util.Date: void <init>()>()
Unit: $r9 = new java.io.ObjectOutputStream
Unit: r3 = $r9
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r14, $r15)
Unit: r1 = $r7
Unit: $r14 = virtualinvoke r6.<org.quartz.CronExpression: java.lang.String getCronExpression()>()
Unit: specialinvoke $r7.<org.quartz.CronExpression: void <init>(java.lang.String)>("19 15 10 4 Apr ? ")
Unit: r4 = $r10
Unit: specialinvoke $r12.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r4)
Unit: $r10 = new java.io.ByteArrayInputStream
Unit: specialinvoke $r9.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r2)
Unit: specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>()
Unit: $r11 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
Unit: virtualinvoke r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1)
Unit: $r15 = virtualinvoke r1.<org.quartz.CronExpression: java.lang.String getCronExpression()>()
Unit: virtualinvoke r6.<org.quartz.CronExpression: java.util.Date getNextValidTimeAfter(java.util.Date)>($r16)
Unit: $r8 = new java.io.ByteArrayOutputStream
Unit: return
Unit: r5 = $r12
Unit: $r13 = virtualinvoke r5.<java.io.ObjectInputStream: java.lang.Object readObject()>()
Unit: $r7 = new org.quartz.CronExpression
Unit: specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11)
Unit: $r12 = new java.io.ObjectInputStream
Unit: r6 = (org.quartz.CronExpression) $r13
	method testQtz259 : 
Unit: goto [?= i0 = i0 + 1]
Unit: r15 = interfaceinvoke r2.<org.quartz.Trigger: java.util.Date getFireTimeAfter(java.util.Date)>($r7)
Unit: r15 = r3
Unit: r2 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r9 = <java.lang.System: java.io.PrintStream out>
Unit: i0 = 0
Unit: if i0 >= 26 goto return
Unit: specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Unit: r1 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("0 0 0 L-2 * ? *")
Unit: $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fireTime: ")
Unit: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r14)
Unit: i0 = i0 + 1
Unit: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", previousFireTime: ")
Unit: specialinvoke $r7.<java.util.Date: void <init>()>()
Unit: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Unit: $r7 = new java.util.Date
Unit: return
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>(r1)
Unit: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15)
Unit: $z0 = virtualinvoke r15.<java.util.Date: boolean equals(java.lang.Object)>(r3)
Unit: r3 = interfaceinvoke r2.<org.quartz.Trigger: java.util.Date getFireTimeAfter(java.util.Date)>(r15)
Unit: $r8 = new java.lang.StringBuilder
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertFalse(java.lang.String,boolean)>("Next fire time is the same as previous fire time!", $z0)
	method testQtz259LW : 
Unit: i0 = i0 + 1
Unit: r3 = interfaceinvoke r2.<org.quartz.Trigger: java.util.Date getFireTimeAfter(java.util.Date)>(r15)
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: specialinvoke $r7.<java.util.Date: void <init>()>()
Unit: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", previousFireTime: ")
Unit: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15)
Unit: $r9 = <java.lang.System: java.io.PrintStream out>
Unit: specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Unit: $z0 = virtualinvoke r15.<java.util.Date: boolean equals(java.lang.Object)>(r3)
Unit: r2 = virtualinvoke $r6.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r6 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>(r1)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertFalse(java.lang.String,boolean)>("Next fire time is the same as previous fire time!", $z0)
Unit: $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Unit: virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r14)
Unit: goto [?= i0 = i0 + 1]
Unit: $r8 = new java.lang.StringBuilder
Unit: $r7 = new java.util.Date
Unit: i0 = 0
Unit: if i0 >= 26 goto return
Unit: $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fireTime: ")
Unit: $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: return
Unit: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: r15 = interfaceinvoke r2.<org.quartz.Trigger: java.util.Date getFireTimeAfter(java.util.Date)>($r7)
Unit: r1 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("0 0 0 LW * ? *")
Unit: r15 = r3
	method testQuartz574 : 
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: r7 = $r3
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z0)
Unit: $r5 := @caughtexception
Unit: $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("Invalid Month value:")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for non-existent month")
Unit: return
Unit: goto [?= return]
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for non-existent month")
Unit: $r2 = new org.quartz.CronExpression
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("* * * * Jan-Foo ? ")
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("* * * * Foo ? ")
Unit: r8 = $r5
Unit: $r4 = virtualinvoke r7.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r6 = virtualinvoke r8.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r1 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z1)
Unit: $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("Invalid Month value:")
Unit: $r3 := @caughtexception
Unit: goto [?= $r2 = new org.quartz.CronExpression]
	method testQuartz621 : 
Unit: $r9 = virtualinvoke r10.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for wildcard day-of-month and day-of-week")
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 * 4 * *")
Unit: $r3 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z2)
Unit: r11 = $r4
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 * * * 4")
Unit: $r2 = new org.quartz.CronExpression
Unit: $r8 := @caughtexception
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z0)
Unit: $r6 := @caughtexception
Unit: $r4 := @caughtexception
Unit: $r1 = new org.quartz.CronExpression
Unit: $r5 = virtualinvoke r11.<java.text.ParseException: java.lang.String getMessage()>()
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 * * * *")
Unit: r12 = $r6
Unit: $z1 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("Support for specifying both a day-of-week AND a day-of-month parameter is not implemented.")
Unit: $r7 = virtualinvoke r12.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("Support for specifying both a day-of-week AND a day-of-month parameter is not implemented.")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z1)
Unit: r10 = $r8
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for specified day-of-month and wildcard day-of-week")
Unit: goto [?= return]
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: return
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for wildcard day-of-month and specified day-of-week")
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: $z2 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("Support for specifying both a day-of-week AND a day-of-month parameter is not implemented.")
	method testQuartz640 : 
Unit: r13 = $r5
Unit: $r10 := @caughtexception
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 43 9 ? * SAT,SUN,L")
Unit: $r9 = virtualinvoke r12.<java.text.ParseException: java.lang.String getMessage()>()
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: $z1 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("Support for specifying \'L\' and \'LW\' with other days of the month is not implemented")
Unit: r14 = $r10
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 43 9 1,5,29,L * ?")
Unit: r15 = $r7
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for L combined with other days of the week")
Unit: $r7 := @caughtexception
Unit: $r3 = new org.quartz.CronExpression
Unit: $r1 = new org.quartz.CronExpression
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: $r4 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z0)
Unit: $r8 := @caughtexception
Unit: $z2 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("Support for specifying \'L\' with other days of the week is not implemented")
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: goto [?= return]
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for L combined with other days of the month")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Unexpected ParseException thrown for supported \'5L\' expression.")
Unit: $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("Support for specifying \'L\' with other days of the week is not implemented")
Unit: $r2 = new org.quartz.CronExpression
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: return
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z1)
Unit: $r5 := @caughtexception
Unit: $r11 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 43 9 ? * 5L")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for L combined with other days of the week")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z2)
Unit: $r6 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 43 9 ? * 6,7,L")
Unit: r12 = $r8
	method testQtz96 : 
Unit: r1 = $r3
Unit: $r4 = virtualinvoke r1.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r2 = new org.quartz.CronExpression
Unit: $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("The \'W\' option does not make sense with values larger than")
Unit: return
Unit: $r3 := @caughtexception
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Expected ParseException did not fire for W with value larger than 31")
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0/5 * * 32W 1 ?")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertTrue(java.lang.String,boolean)>("Incorrect ParseException thrown", $z0)
Unit: goto [?= return]
	method testQtz395_CopyConstructorMustPreserveTimeZone : 
Unit: r7 = <org.quartz.CronExpressionTest: java.util.TimeZone EST_TIME_ZONE>
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 15 10 * * ? 2005")
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: $r6 = virtualinvoke r2.<org.quartz.CronExpression: java.util.TimeZone getTimeZone()>()
Unit: $r4 = new org.quartz.CronExpression
Unit: $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>()
Unit: r2 = $r5
Unit: specialinvoke $r5.<org.quartz.CronExpression: void <init>(org.quartz.CronExpression)>(r1)
Unit: if $z0 == 0 goto $r4 = new org.quartz.CronExpression
Unit: r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("Europe/Brussels")
Unit: $z0 = virtualinvoke r7.<java.lang.Object: boolean equals(java.lang.Object)>($r3)
Unit: return
Unit: virtualinvoke r1.<org.quartz.CronExpression: void setTimeZone(java.util.TimeZone)>(r7)
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.Object,java.lang.Object)>(r7, $r6)
Unit: r1 = $r4
Unit: $r5 = new org.quartz.CronExpression
	method testSecRangeIntervalAfterSlash : 
Unit: $r11 := @caughtexception
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r6, "\'/\' must be followed by an integer.")
Unit: $r4 = new org.quartz.CronExpression
Unit: $r1 = new org.quartz.CronExpression
Unit: $r8 = virtualinvoke r16.<java.text.ParseException: java.lang.String getMessage()>()
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: return
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("/120 0 8-18 ? * 2-6")
Unit: $r5 := @caughtexception
Unit: $r2 = new org.quartz.CronExpression
Unit: goto [?= return]
Unit: $r12 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/_blank\'")
Unit: $r10 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'0/_blank\'")
Unit: r16 = $r7
Unit: $r9 := @caughtexception
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r12, "Increment > 60 : 120")
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0/120 0 8-18 ? * 2-6")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/xxx\' form")
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0/ 0 8-18 ? * 2-6")
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("/ 0 8-18 ? * 2-6")
Unit: r13 = $r11
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r8, "\'/\' must be followed by an integer.")
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: $r7 := @caughtexception
Unit: $r3 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r10, "Increment > 60 : 120")
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: r14 = $r9
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: $r6 = virtualinvoke r15.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in in \'0/xxx\' form")
Unit: r15 = $r5
	method testMinRangeIntervalAfterSlash : 
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 /120 8-18 ? * 2-6")
Unit: $r12 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r6, "\'/\' must be followed by an integer.")
Unit: r14 = $r11
Unit: r15 = $r5
Unit: $r4 = new org.quartz.CronExpression
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0/ 8-18 ? * 2-6")
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: goto [?= return]
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r12, "Increment > 60 : 120")
Unit: $r9 := @caughtexception
Unit: $r11 := @caughtexception
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r8, "Increment > 60 : 120")
Unit: $r5 := @caughtexception
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 / 8-18 ? * 2-6")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r10, "\'/\' must be followed by an integer.")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in in \'0/xxx\' form")
Unit: $r3 = new org.quartz.CronExpression
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0/120 8-18 ? * 2-6")
Unit: r16 = $r9
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/xxx\' form")
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: $r8 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r1 = new org.quartz.CronExpression
Unit: $r10 = virtualinvoke r16.<java.text.ParseException: java.lang.String getMessage()>()
Unit: return
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/_blank\'")
Unit: r13 = $r7
Unit: $r6 = virtualinvoke r15.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'0/_blank\'")
Unit: $r2 = new org.quartz.CronExpression
Unit: $r7 := @caughtexception
	method testHourRangeIntervalAfterSlash : 
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0/ ? * 2-6")
Unit: r14 = $r5
Unit: $r3 = new org.quartz.CronExpression
Unit: $r12 = virtualinvoke r15.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/_blank\'")
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 / ? * 2-6")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'0/_blank\'")
Unit: $r4 = new org.quartz.CronExpression
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 /120 ? * 2-6")
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0/120 ? * 2-6")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/xxx\' form")
Unit: r13 = $r9
Unit: $r1 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r12, "\'/\' must be followed by an integer.")
Unit: r16 = $r7
Unit: $r6 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r11 := @caughtexception
Unit: $r10 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in in \'0/xxx\' form")
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: r15 = $r11
Unit: $r8 = virtualinvoke r16.<java.text.ParseException: java.lang.String getMessage()>()
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r6, "Increment > 24 : 120")
Unit: $r5 := @caughtexception
Unit: $r2 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r10, "Increment > 24 : 120")
Unit: goto [?= return]
Unit: return
Unit: $r7 := @caughtexception
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r8, "\'/\' must be followed by an integer.")
Unit: $r9 := @caughtexception
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: goto [?= $r2 = new org.quartz.CronExpression]
	method testDayOfMonthRangeIntervalAfterSlash : 
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 / * 2-6")
Unit: r13 = $r5
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'0/_blank\'")
Unit: $r12 = virtualinvoke r15.<java.text.ParseException: java.lang.String getMessage()>()
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: r14 = $r9
Unit: $r8 = virtualinvoke r16.<java.text.ParseException: java.lang.String getMessage()>()
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 0/120 * 2-6")
Unit: $r4 = new org.quartz.CronExpression
Unit: $r11 := @caughtexception
Unit: $r2 = new org.quartz.CronExpression
Unit: goto [?= return]
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r10, "Increment > 31 : 120")
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: return
Unit: $r10 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r8, "\'/\' must be followed by an integer.")
Unit: r15 = $r11
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/xxx\' form")
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 0/ * 2-6")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r6, "Increment > 31 : 120")
Unit: $r7 := @caughtexception
Unit: $r9 := @caughtexception
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 /120 * 2-6")
Unit: $r6 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in in \'0/xxx\' form")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/_blank\'")
Unit: $r5 := @caughtexception
Unit: r16 = $r7
Unit: $r1 = new org.quartz.CronExpression
Unit: $r3 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r12, "\'/\' must be followed by an integer.")
	method testMonthRangeIntervalAfterSlash : 
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r10, "Increment > 12 : 120")
Unit: $r3 = new org.quartz.CronExpression
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? / 2-6")
Unit: $r12 = virtualinvoke r16.<java.text.ParseException: java.lang.String getMessage()>()
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? /120 2-6")
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? 0/120 2-6")
Unit: r16 = $r11
Unit: $r1 = new org.quartz.CronExpression
Unit: $r8 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: $r11 := @caughtexception
Unit: $r9 := @caughtexception
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r8, "Increment > 12 : 120")
Unit: $r4 = new org.quartz.CronExpression
Unit: return
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'0/_blank\'")
Unit: r13 = $r9
Unit: r15 = $r5
Unit: $r6 = virtualinvoke r15.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r2 = new org.quartz.CronExpression
Unit: $r10 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: r14 = $r7
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r6, "\'/\' must be followed by an integer.")
Unit: $r7 := @caughtexception
Unit: goto [?= return]
Unit: $r5 := @caughtexception
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/xxx\' form")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in in \'0/xxx\' form")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/_blank\'")
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r12, "\'/\' must be followed by an integer.")
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? 0/ 2-6")
Unit: goto [?= $r2 = new org.quartz.CronExpression]
	method testDayOfWeekRangeIntervalAfterSlash : 
Unit: r15 = $r9
Unit: goto [?= return]
Unit: r0 := @this: org.quartz.CronExpressionTest
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r12, "Increment > 7 : 120")
Unit: r14 = $r11
Unit: $r9 := @caughtexception
Unit: specialinvoke $r1.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? * /120")
Unit: r16 = $r7
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r8, "\'/\' must be followed by an integer.")
Unit: r13 = $r5
Unit: return
Unit: $r11 := @caughtexception
Unit: $r12 = virtualinvoke r14.<java.text.ParseException: java.lang.String getMessage()>()
Unit: $r2 = new org.quartz.CronExpression
Unit: specialinvoke $r3.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? * /")
Unit: $r8 = virtualinvoke r16.<java.text.ParseException: java.lang.String getMessage()>()
Unit: goto [?= $r2 = new org.quartz.CronExpression]
Unit: $r7 := @caughtexception
Unit: specialinvoke $r4.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? * 0/")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'0/_blank\'")
Unit: $r5 := @caughtexception
Unit: goto [?= $r4 = new org.quartz.CronExpression]
Unit: $r4 = new org.quartz.CronExpression
Unit: goto [?= $r3 = new org.quartz.CronExpression]
Unit: $r6 = virtualinvoke r13.<java.text.ParseException: java.lang.String getMessage()>()
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r6, "Increment > 7 : 120")
Unit: $r3 = new org.quartz.CronExpression
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/_blank\'")
Unit: staticinvoke <org.quartz.CronExpressionTest: void assertEquals(java.lang.String,java.lang.String)>($r10, "\'/\' must be followed by an integer.")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in in \'0/xxx\' form")
Unit: staticinvoke <org.quartz.CronExpressionTest: void fail(java.lang.String)>("Cron did not validate bad range interval in \'_blank/xxx\' form")
Unit: specialinvoke $r2.<org.quartz.CronExpression: void <init>(java.lang.String)>("0 0 0 ? * 0/120")
Unit: $r1 = new org.quartz.CronExpression
Unit: $r10 = virtualinvoke r15.<java.text.ParseException: java.lang.String getMessage()>()
	method main : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.InterruptableJobTest$TestInterruptableJob
	method <init> : 
	method execute : 
	method interrupt : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledRateCounterImpl
	method <init> : 
	method setValue : 
	method increment : 
	method decrement : 
	method setDenominatorValue : 
	method setNumeratorValue : 
	method getValue : 
	method getAndReset : 
	method getAndSet : 
	method setValue : 
	method decrement : 
	method decrement : 
	method getMaxValue : 
	method getMinValue : 
	method increment : 
	method increment : 
 ====================================== 
** CLASS org.quartz.impl.StdJobRunShellFactory
	method <init> : 
	method initialize : 
	method createJobRunShell : 
 ====================================== 
** CLASS org.quartz.Matcher
	method isMatch : 
	method hashCode : 
	method equals : 
 ====================================== 
** CLASS org.quartz.StatefulJob
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.CalendarIntervalTriggerPersistenceDelegate
	method <init> : 
	method canHandleTriggerType : 
	method getHandledTriggerTypeDiscriminator : 
	method getTriggerProperties : 
	method getTriggerPropertyBundle : 
 ====================================== 
** CLASS org.quartz.Trigger$TriggerState
	method values : 
	method valueOf : 
	method <init> : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest
	method <init> : 
	method createScheduler : 
	method testBasicStorageFunctions : 
	method testDurableStorageFunctions : 
	method testShutdownWithSleepReturnsAfterAllThreadsAreStopped : 
	method testAbilityToFireImmediatelyWhenStartedBefore : 
	method testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob : 
	method testAbilityToFireImmediatelyWhenStartedAfter : 
	method testScheduleMultipleTriggersForAJob : 
	method testShutdownWithoutWaitIsUnclean : 
	method testShutdownWithWaitIsClean : 
 ====================================== 
** CLASS org.quartz.Calendar
	method setBaseCalendar : 
	method getBaseCalendar : 
	method isTimeIncluded : 
	method getNextIncludedTime : 
	method getDescription : 
	method setDescription : 
	method clone : 
 ====================================== 
** CLASS org.quartz.FlakyJdbcSchedulerTest$FlakyConnectionInvocationHandler
	method <init> : 
	method invoke : 
 ====================================== 
** CLASS org.quartz.JobKey
	method <init> : 
	method <init> : 
	method jobKey : 
	method jobKey : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.Util
	method <init> : 
	method rtp : 
	method getJobNameKey : 
	method getTriggerNameKey : 
	method closeResultSet : 
	method closeStatement : 
	method setBeanProps : 
	method getSetMethod : 
 ====================================== 
** CLASS org.quartz.FlakyJdbcSchedulerTest$1
 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledRateCounterConfig
	method <init> : 
	method <init> : 
	method createCounter : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DailyTimeIntervalTriggerPersistenceDelegate
	method <init> : 
	method canHandleTriggerType : 
	method getHandledTriggerTypeDiscriminator : 
	method getTriggerProperties : 
	method join : 
	method getTriggerPropertyBundle : 
 ====================================== 
** CLASS org.quartz.DisallowConcurrentExecutionJobTest
	method <init> : 
	method testNoConcurrentExecOnSameJob : 
Unit: virtualinvoke r2.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(125L, $r36)
Unit: r6 = virtualinvoke $r23.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: specialinvoke $r24.<java.util.Properties: void <init>()>()
Unit: return
Unit: virtualinvoke r7.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.idleWaitTime", "1500")
Unit: specialinvoke $r10.<java.util.concurrent.CyclicBarrier: void <init>(int)>(2)
Unit: $r39 = (java.util.Date) $r38
Unit: $l3 = $l2 + 100L
Unit: $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(300L)
Unit: $r12 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/DisallowConcurrentExecutionJobTest$TestJob;")
Unit: interfaceinvoke r8.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: $r41 = (java.util.Date) $r40
Unit: $r33 = new org.quartz.DisallowConcurrentExecutionJobTest$TestJobListener
Unit: specialinvoke $r27.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r7)
Unit: $r9 = new java.util.ArrayList
Unit: $r27 = new org.quartz.impl.StdSchedulerFactory
Unit: $r14 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r10 = new java.util.concurrent.CyclicBarrier
Unit: $l5 = l1 - l0
Unit: $r40 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1)
Unit: virtualinvoke $r30.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>("DATE_STAMPS", r1)
Unit: r5 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r36 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
Unit: virtualinvoke $r28.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>("BARRIER", r2)
Unit: $r30 = interfaceinvoke r8.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: $r22 = interfaceinvoke r4.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r20 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r19)
Unit: l0 = virtualinvoke $r39.<java.util.Date: long getTime()>()
Unit: l1 = virtualinvoke $r41.<java.util.Date: long getTime()>()
Unit: r0 := @this: org.quartz.DisallowConcurrentExecutionJobTest
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r3)
Unit: interfaceinvoke $r32.<org.quartz.ListenerManager: void addJobListener(org.quartz.JobListener)>($r33)
Unit: $r38 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r18 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r21 = virtualinvoke $r20.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r3)
Unit: specialinvoke $r9.<java.util.ArrayList: void <init>()>()
Unit: $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
Unit: $r19 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: virtualinvoke r7.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "2")
Unit: $r28 = interfaceinvoke r8.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: r1 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r9)
Unit: specialinvoke $r11.<java.util.Date: void <init>(long)>($l3)
Unit: interfaceinvoke r8.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r4, r5)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r1, $r37)
Unit: $r23 = virtualinvoke $r21.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobKey)>($r22)
Unit: $r24 = new java.util.Properties
Unit: $r16 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r15)
Unit: r8 = virtualinvoke $r27.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r37 = staticinvoke <org.hamcrest.collection.IsCollectionWithSize: org.hamcrest.Matcher hasSize(int)>(2)
Unit: $r32 = interfaceinvoke r8.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: interfaceinvoke r8.<org.quartz.Scheduler: void start()>()
Unit: r3 = $r11
Unit: specialinvoke $r33.<org.quartz.DisallowConcurrentExecutionJobTest$TestJobListener: void <init>(int)>(2)
Unit: $r15 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: interfaceinvoke r8.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.Trigger)>(r6)
Unit: r4 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: r7 = $r24
Unit: $r11 = new java.util.Date
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r42, $r44)
Unit: r2 = $r10
Unit: $r44 = staticinvoke <org.hamcrest.number.OrderingComparison: org.hamcrest.Matcher greaterThanOrEqualTo(java.lang.Comparable)>($r43)
Unit: $r13 = virtualinvoke $r12.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
	method testNoConcurrentExecOnSameJobWithBatching : 
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r3)
Unit: $r19 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: specialinvoke $r10.<java.util.concurrent.CyclicBarrier: void <init>(int)>(2)
Unit: r5 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r29 = interfaceinvoke r8.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: specialinvoke $r28.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r7)
Unit: r6 = virtualinvoke $r23.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r3 = $r11
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r43, $r45)
Unit: interfaceinvoke r8.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
Unit: $r22 = interfaceinvoke r4.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: virtualinvoke $r29.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>("BARRIER", r2)
Unit: $r23 = virtualinvoke $r21.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobKey)>($r22)
Unit: r2 = $r10
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r1, $r38)
Unit: specialinvoke $r34.<org.quartz.DisallowConcurrentExecutionJobTest$TestJobListener: void <init>(int)>(2)
Unit: $r45 = staticinvoke <org.hamcrest.number.OrderingComparison: org.hamcrest.Matcher greaterThanOrEqualTo(java.lang.Comparable)>($r44)
Unit: r0 := @this: org.quartz.DisallowConcurrentExecutionJobTest
Unit: interfaceinvoke r8.<org.quartz.Scheduler: void start()>()
Unit: interfaceinvoke $r33.<org.quartz.ListenerManager: void addJobListener(org.quartz.JobListener)>($r34)
Unit: $r40 = (java.util.Date) $r39
Unit: $r24 = new java.util.Properties
Unit: r4 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r41 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1)
Unit: $l3 = $l2 + 100L
Unit: $r18 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r20 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r19)
Unit: specialinvoke $r11.<java.util.Date: void <init>(long)>($l3)
Unit: virtualinvoke r7.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "2")
Unit: $r16 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r15)
Unit: $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(300L)
Unit: $r38 = staticinvoke <org.hamcrest.collection.IsCollectionWithSize: org.hamcrest.Matcher hasSize(int)>(2)
Unit: $r31 = interfaceinvoke r8.<org.quartz.Scheduler: org.quartz.SchedulerContext getContext()>()
Unit: $r14 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: virtualinvoke r7.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.idleWaitTime", "1500")
Unit: interfaceinvoke r8.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r4, r5)
Unit: specialinvoke $r24.<java.util.Properties: void <init>()>()
Unit: virtualinvoke r7.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.batchTriggerAcquisitionMaxCount", "2")
Unit: interfaceinvoke r8.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.Trigger)>(r6)
Unit: r8 = virtualinvoke $r28.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: virtualinvoke $r31.<org.quartz.SchedulerContext: java.lang.Object put(java.lang.String,java.lang.Object)>("DATE_STAMPS", r1)
Unit: r7 = $r24
Unit: $r37 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
Unit: $r21 = virtualinvoke $r20.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r3)
Unit: $r42 = (java.util.Date) $r41
Unit: l1 = virtualinvoke $r42.<java.util.Date: long getTime()>()
Unit: $r34 = new org.quartz.DisallowConcurrentExecutionJobTest$TestJobListener
Unit: $r12 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/DisallowConcurrentExecutionJobTest$TestJob;")
Unit: return
Unit: l0 = virtualinvoke $r40.<java.util.Date: long getTime()>()
Unit: $r9 = new java.util.ArrayList
Unit: $r13 = virtualinvoke $r12.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: r1 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r9)
Unit: specialinvoke $r9.<java.util.ArrayList: void <init>()>()
Unit: $r15 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: $r10 = new java.util.concurrent.CyclicBarrier
Unit: $r28 = new org.quartz.impl.StdSchedulerFactory
Unit: $r39 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r33 = interfaceinvoke r8.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
Unit: $r11 = new java.util.Date
Unit: virtualinvoke r2.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(125L, $r37)
Unit: $l5 = l1 - l0
 ====================================== 
** CLASS org.quartz.core.QuartzSchedulerThread
	method <init> : 
	method <init> : 
	method setIdleWaitTime : 
	method getRandomizedIdleWaitTime : 
	method togglePause : 
	method halt : 
	method isPaused : 
	method signalSchedulingChange : 
	method clearSignaledSchedulingChange : 
	method isScheduleChanged : 
	method getSignaledNextFireTime : 
	method run : 
	method computeDelayForRepeatedErrors : 
	method releaseIfScheduleChangedSignificantly : 
	method isCandidateNewTimeEarlierWithinReason : 
	method getLog : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest$TestAnnotatedJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.SchedulerListener
	method jobScheduled : 
	method jobUnscheduled : 
	method triggerFinalized : 
	method triggerPaused : 
	method triggersPaused : 
	method triggerResumed : 
	method triggersResumed : 
	method jobAdded : 
	method jobDeleted : 
	method jobPaused : 
	method jobsPaused : 
	method jobResumed : 
	method jobsResumed : 
	method schedulerError : 
	method schedulerInStandbyMode : 
	method schedulerStarted : 
	method schedulerStarting : 
	method schedulerShutdown : 
	method schedulerShuttingdown : 
	method schedulingDataCleared : 
 ====================================== 
** CLASS org.quartz.impl.DirectSchedulerFactoryTest
	method <init> : 
	method testPlugins : 
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown()>()
Unit: $r6 = new org.quartz.impl.DirectSchedulerFactoryTest$1
Unit: interfaceinvoke r3.<org.quartz.spi.ThreadPool: void initialize()>()
Unit: $r9 = new org.quartz.simpl.RAMJobStore
Unit: specialinvoke $r9.<org.quartz.simpl.RAMJobStore: void <init>()>()
Unit: return
Unit: specialinvoke $r7.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(1, 5)
Unit: r4 = virtualinvoke $r11.<org.quartz.impl.DirectSchedulerFactory: org.quartz.Scheduler getScheduler(java.lang.String)>("MyScheduler")
Unit: $r11 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: specialinvoke $r6.<org.quartz.impl.DirectSchedulerFactoryTest$1: void <init>(org.quartz.impl.DirectSchedulerFactoryTest,java.lang.StringBuffer)>(r0, r1)
Unit: r2 = $r6
Unit: $r8 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: $r10 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("TestPlugin", r2)
Unit: virtualinvoke $r8.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(java.lang.String,java.lang.String,org.quartz.spi.ThreadPool,org.quartz.spi.JobStore,java.util.Map,java.lang.String,int,long,long,boolean,java.lang.String)>("MyScheduler", "Instance1", r3, $r9, $r10, null, -1, 0L, 0L, 0, null)
Unit: $r5 = new java.lang.StringBuffer
Unit: r1 = $r5
Unit: $r12 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()
Unit: $r7 = new org.quartz.simpl.SimpleThreadPool
Unit: staticinvoke <org.quartz.impl.DirectSchedulerFactoryTest: void assertEquals(java.lang.String,java.lang.String)>("TestPlugin|MyScheduler|start|shutdown", $r12)
Unit: r0 := @this: org.quartz.impl.DirectSchedulerFactoryTest
Unit: r3 = $r7
Unit: specialinvoke $r5.<java.lang.StringBuffer: void <init>()>()
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void start()>()
	method testThreadName : 
Unit: $r12 = virtualinvoke r0.<org.quartz.impl.DirectSchedulerFactoryTest: java.lang.Object getField(java.lang.Object,java.lang.String)>(r4, "workers")
Unit: $r8 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: r2 = (org.quartz.core.QuartzScheduler) $r10
Unit: r7 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>()
Unit: $z0 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("null")
Unit: r1 = virtualinvoke $r9.<org.quartz.impl.DirectSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: r3 = (org.quartz.core.QuartzSchedulerResources) $r11
Unit: r0 := @this: org.quartz.impl.DirectSchedulerFactoryTest
Unit: virtualinvoke $r8.<org.quartz.impl.DirectSchedulerFactory: void createVolatileScheduler(int)>(4)
Unit: $r13 = interfaceinvoke r1.<org.quartz.Scheduler: java.lang.String getSchedulerName()>()
Unit: $z1 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>($r13)
Unit: $r10 = virtualinvoke r0.<org.quartz.impl.DirectSchedulerFactoryTest: java.lang.Object getField(java.lang.Object,java.lang.String)>(r1, "sched")
Unit: $r11 = virtualinvoke r0.<org.quartz.impl.DirectSchedulerFactoryTest: java.lang.Object getField(java.lang.Object,java.lang.String)>(r2, "resources")
Unit: return
Unit: staticinvoke <org.quartz.impl.DirectSchedulerFactoryTest: void assertTrue(boolean)>($z1)
Unit: r6 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r9 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: r4 = virtualinvoke r3.<org.quartz.core.QuartzSchedulerResources: org.quartz.spi.ThreadPool getThreadPool()>()
Unit: r5 = (java.util.List) $r12
Unit: staticinvoke <org.quartz.impl.DirectSchedulerFactoryTest: void assertFalse(boolean)>($z0)
	method getField : 
 ====================================== 
** CLASS org.quartz.impl.QuartzServer
	method <init> : 
	method serve : 
	method schedulerError : 
	method schedulerShutdown : 
	method main : 
 ====================================== 
** CLASS org.quartz.core.JobRunShell
	method <init> : 
	method schedulerShuttingdown : 
	method getLog : 
	method initialize : 
	method requestShutdown : 
	method run : 
	method begin : 
	method complete : 
	method passivate : 
	method notifyListenersBeginning : 
	method notifyJobListenersComplete : 
	method notifyTriggerListenersComplete : 
 ====================================== 
** CLASS org.quartz.simpl.RAMJobStore
	method <init> : 
	method getLog : 
	method initialize : 
	method schedulerStarted : 
	method schedulerPaused : 
	method schedulerResumed : 
	method getMisfireThreshold : 
	method setMisfireThreshold : 
	method shutdown : 
	method supportsPersistence : 
	method clearAllSchedulingData : 
	method storeJobAndTrigger : 
	method storeJob : 
	method removeJob : 
	method removeJobs : 
	method removeTriggers : 
	method storeJobsAndTriggers : 
	method storeTrigger : 
	method removeTrigger : 
	method removeTrigger : 
	method replaceTrigger : 
	method retrieveJob : 
	method retrieveTrigger : 
	method checkExists : 
	method checkExists : 
	method getTriggerState : 
	method resetTriggerFromErrorState : 
	method storeCalendar : 
	method removeCalendar : 
	method retrieveCalendar : 
	method getNumberOfJobs : 
	method getNumberOfTriggers : 
	method getNumberOfCalendars : 
	method getJobKeys : 
	method getCalendarNames : 
	method getTriggerKeys : 
	method getJobGroupNames : 
	method getTriggerGroupNames : 
	method getTriggersForJob : 
	method getTriggerWrappersForJob : 
	method getTriggerWrappersForCalendar : 
	method pauseTrigger : 
	method pauseTriggers : 
	method pauseJob : 
	method pauseJobs : 
	method resumeTrigger : 
	method resumeTriggers : 
	method resumeJob : 
	method resumeJobs : 
	method pauseAll : 
	method resumeAll : 
	method applyMisfire : 
	method getFiredTriggerRecordId : 
	method acquireNextTriggers : 
	method releaseAcquiredTrigger : 
	method triggersFired : 
	method triggeredJobComplete : 
	method getAcquireRetryDelay : 
	method setAllTriggersOfJobToState : 
	method peekTriggers : 
	method getPausedTriggerGroups : 
	method setInstanceId : 
	method setInstanceName : 
	method setThreadPoolSize : 
	method getEstimatedTimeToReleaseAndAcquireTrigger : 
	method isClustered : 
	method resumeTriggers : 
	method pauseJobs : 
	method pauseTriggers : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.ee.jta.JTAAnnotationAwareJobRunShellFactory
	method <init> : 
	method initialize : 
	method createJobRunShell : 
 ====================================== 
** CLASS org.quartz.CalendarIntervalScheduleBuilder
	method <init> : 
	method calendarIntervalSchedule : 
	method build : 
	method withInterval : 
	method withIntervalInSeconds : 
	method withIntervalInMinutes : 
	method withIntervalInHours : 
	method withIntervalInDays : 
	method withIntervalInWeeks : 
	method withIntervalInMonths : 
	method withIntervalInYears : 
	method withMisfireHandlingInstructionIgnoreMisfires : 
	method withMisfireHandlingInstructionDoNothing : 
	method withMisfireHandlingInstructionFireAndProceed : 
	method inTimeZone : 
	method preserveHourOfDayAcrossDaylightSavings : 
	method skipDayIfHourDoesNotExist : 
	method validateInterval : 
 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher
	method <init> : 
	method getValue : 
	method isMatch : 
	method hashCode : 
	method equals : 
	method getCompareToValue : 
	method getCompareWithOperator : 
 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMapTest
	method <init> : 
	method testClear : 
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z0)
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("X", "Y")
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clear()>()
Unit: $z2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: specialinvoke $r2.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: r1 = $r2
Unit: $r2 = new org.quartz.utils.DirtyFlagMap
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z1)
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clear()>()
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: return
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z2)
	method testPut : 
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z0)
Unit: r1 = $r2
Unit: specialinvoke $r2.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: $r2 = new org.quartz.utils.DirtyFlagMap
Unit: return
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
	method testRemove : 
Unit: $r2 = new org.quartz.utils.DirtyFlagMap
Unit: return
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z1)
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z0)
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object remove(java.lang.Object)>("b")
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: specialinvoke $r2.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object remove(java.lang.Object)>("a")
Unit: r1 = $r2
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
	method testEntrySetRemove : 
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>("b")
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z2)
Unit: return
Unit: $z2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: $r6 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
Unit: $r3 = new org.quartz.utils.DirtyFlagMap
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z0)
Unit: interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>($r7)
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object remove(java.lang.Object)>("a")
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: r1 = $r3
Unit: $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>()
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: $z4 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z4)
Unit: specialinvoke $r3.<org.quartz.utils.DirtyFlagMap: void <init>()>()
	method testEntrySetRetainAll : 
Unit: interfaceinvoke r2.<java.util.Set: boolean retainAll(java.util.Collection)>($r8)
Unit: $r3 = new org.quartz.utils.DirtyFlagMap
Unit: $r8 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r7)
Unit: return
Unit: $r6 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z3)
Unit: specialinvoke $r3.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>()
Unit: $z3 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z5)
Unit: r1 = $r3
Unit: $r4 = <java.util.Collections: java.util.List EMPTY_LIST>
Unit: interfaceinvoke r2.<java.util.Set: boolean retainAll(java.util.Collection)>($r9)
Unit: interfaceinvoke r2.<java.util.Set: boolean retainAll(java.util.Collection)>($r4)
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z1)
Unit: $z5 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: $r9 = <java.util.Collections: java.util.List EMPTY_LIST>
	method testEntrySetRemoveAll : 
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z1)
Unit: $r7 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
Unit: r1 = $r3
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: $z5 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: $r6 = <java.util.Collections: java.util.List EMPTY_LIST>
Unit: $z3 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: $r3 = new org.quartz.utils.DirtyFlagMap
Unit: interfaceinvoke r2.<java.util.Set: boolean removeAll(java.util.Collection)>($r4)
Unit: interfaceinvoke r2.<java.util.Set: boolean removeAll(java.util.Collection)>($r6)
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>()
Unit: specialinvoke $r3.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z3)
Unit: $r9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r8)
Unit: return
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: interfaceinvoke r2.<java.util.Set: boolean removeAll(java.util.Collection)>($r9)
Unit: $r4 = <java.util.Collections: java.util.List EMPTY_LIST>
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z5)
	method testEntrySetClear : 
Unit: $r3 = new org.quartz.utils.DirtyFlagMap
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z1)
Unit: return
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: r1 = $r3
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: specialinvoke $r3.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: interfaceinvoke r2.<java.util.Set: void clear()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z0)
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: interfaceinvoke r2.<java.util.Set: void clear()>()
	method testEntrySetIterator : 
Unit: $r7 = new org.quartz.utils.DirtyFlagMap
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z1)
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: r4 = (java.util.Map$Entry) $r11
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "A")
Unit: $i0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: int size()>()
Unit: $z2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: return
Unit: $z3 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean containsValue(java.lang.Object)>("BB")
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("BB")
Unit: specialinvoke $r7.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: r6 = (java.util.Map$Entry) $r13
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("c", "C")
Unit: $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Unit: $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Unit: r5 = (java.lang.String) $r12
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z0)
Unit: interfaceinvoke r3.<java.util.Iterator: void remove()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("b", "B")
Unit: r1 = $r7
Unit: r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertEquals(int,int)>(2, $i0)
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean containsKey(java.lang.Object)>(r5)
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z3)
Unit: $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z2)
	method testEntrySetToArray : 
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("b", "B")
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean containsValue(java.lang.Object)>("BB")
Unit: r3 = interfaceinvoke r2.<java.util.Set: java.lang.Object[] toArray()>()
Unit: r4 = (java.util.Map$Entry) $r9
Unit: $r5 = new org.quartz.utils.DirtyFlagMap
Unit: return
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z0)
Unit: specialinvoke $r5.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "A")
Unit: r1 = $r5
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("c", "C")
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertEquals(int,int)>(3, $i0)
Unit: $r9 = r3[0]
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z1)
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("BB")
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: $i0 = lengthof r3
	method testEntrySetToArrayWithArg : 
Unit: r3 = interfaceinvoke r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r9)
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("b", "B")
Unit: $r9 = newarray (java.util.Map$Entry)[0]
Unit: $r10 = r3[0]
Unit: r1 = $r5
Unit: return
Unit: interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("BB")
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set entrySet()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("c", "C")
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z0)
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean containsValue(java.lang.Object)>("BB")
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertEquals(int,int)>(3, $i0)
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z1)
Unit: $r5 = new org.quartz.utils.DirtyFlagMap
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "A")
Unit: r4 = (java.util.Map$Entry) $r10
Unit: specialinvoke $r5.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: $i0 = lengthof r3
	method testKeySetClear : 
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertEquals(int,int)>(0, $i0)
Unit: return
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z0)
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
Unit: specialinvoke $r3.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: r1 = $r3
Unit: interfaceinvoke r2.<java.util.Set: void clear()>()
Unit: interfaceinvoke r2.<java.util.Set: void clear()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z1)
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: $i0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: int size()>()
Unit: $r3 = new org.quartz.utils.DirtyFlagMap
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Set keySet()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
	method testValuesClear : 
Unit: r1 = $r3
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertFalse(boolean)>($z0)
Unit: interfaceinvoke r2.<java.util.Collection: void clear()>()
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "Y")
Unit: interfaceinvoke r2.<java.util.Collection: void clear()>()
Unit: $i0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: int size()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertEquals(int,int)>(0, $i0)
Unit: virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: void clearDirtyFlag()>()
Unit: staticinvoke <org.quartz.utils.DirtyFlagMapTest: void assertTrue(boolean)>($z1)
Unit: $r3 = new org.quartz.utils.DirtyFlagMap
Unit: specialinvoke $r3.<org.quartz.utils.DirtyFlagMap: void <init>()>()
Unit: r2 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: java.util.Collection values()>()
Unit: $z0 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: return
Unit: $z1 = virtualinvoke r1.<org.quartz.utils.DirtyFlagMap: boolean isDirty()>()
Unit: r0 := @this: org.quartz.utils.DirtyFlagMapTest
 ====================================== 
** CLASS org.quartz.core.SampledStatistics
	method getJobsScheduledMostRecentSample : 
	method getJobsExecutingMostRecentSample : 
	method getJobsCompletedMostRecentSample : 
	method shutdown : 
 ====================================== 
** CLASS org.quartz.PriorityTest
	method <init> : 
	method setUp : 
	method testSameDefaultPriority : 
Unit: specialinvoke $r17.<org.quartz.JobKey: void <init>(java.lang.String)>($r19)
Unit: $r13 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: r0 := @this: org.quartz.PriorityTest
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: specialinvoke $r11.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>(java.lang.String,java.lang.String,java.util.Date)>("T1", null, $r12)
Unit: specialinvoke $r13.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>(java.lang.String,java.lang.String,java.util.Date)>("T2", null, $r14)
Unit: $r17 = new org.quartz.JobKey
Unit: virtualinvoke $r21.<java.util.concurrent.CountDownLatch: void await()>()
Unit: specialinvoke $r10.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1)
Unit: staticinvoke <org.quartz.PriorityTest: void assertEquals(java.lang.String,java.lang.String)>("T1T2", $r23)
Unit: r1 = $r7
Unit: $r15 = new org.quartz.impl.JobDetailImpl
Unit: $r11 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: r4 = $r11
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(13, 1)
Unit: $r19 = virtualinvoke $r18.<org.quartz.JobKey: java.lang.String getName()>()
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool")
Unit: specialinvoke $r15.<org.quartz.impl.JobDetailImpl: void <init>(java.lang.String,java.lang.String,java.lang.Class)>("JD", null, class "Lorg/quartz/PriorityTest$TestJob;")
Unit: r6 = $r15
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.Trigger)>(r5)
Unit: return
Unit: specialinvoke $r7.<java.util.Properties: void <init>()>()
Unit: r5 = $r13
Unit: interfaceinvoke r5.<org.quartz.spi.MutableTrigger: void setJobKey(org.quartz.JobKey)>($r17)
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void shutdown()>()
Unit: r2 = virtualinvoke $r10.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r12 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r21 = <org.quartz.PriorityTest: java.util.concurrent.CountDownLatch latch>
Unit: $r10 = new org.quartz.impl.StdSchedulerFactory
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r6, r4)
Unit: $r7 = new java.util.Properties
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "1")
Unit: $r22 = <org.quartz.PriorityTest: java.lang.StringBuffer result>
Unit: $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>()
Unit: $r18 = interfaceinvoke r6.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r14 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void start()>()
	method testDifferentPriority : 
Unit: r2 = virtualinvoke $r10.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r6, r4)
Unit: specialinvoke $r11.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>(java.lang.String,java.lang.String,java.util.Date)>("T1", null, $r12)
Unit: specialinvoke $r7.<java.util.Properties: void <init>()>()
Unit: interfaceinvoke r5.<org.quartz.spi.MutableTrigger: void setPriority(int)>(10)
Unit: r1 = $r7
Unit: r0 := @this: org.quartz.PriorityTest
Unit: $r11 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: $r19 = virtualinvoke $r18.<org.quartz.JobKey: java.lang.String getName()>()
Unit: $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>()
Unit: $r22 = <org.quartz.PriorityTest: java.lang.StringBuffer result>
Unit: r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r13 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: specialinvoke $r17.<org.quartz.JobKey: void <init>(java.lang.String,java.lang.String)>($r19, null)
Unit: $r17 = new org.quartz.JobKey
Unit: $r15 = new org.quartz.impl.JobDetailImpl
Unit: specialinvoke $r10.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1)
Unit: r4 = $r11
Unit: $r21 = <org.quartz.PriorityTest: java.util.concurrent.CountDownLatch latch>
Unit: virtualinvoke r3.<java.util.Calendar: void add(int,int)>(13, 1)
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "1")
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void start()>()
Unit: virtualinvoke $r21.<java.util.concurrent.CountDownLatch: void await()>()
Unit: interfaceinvoke r4.<org.quartz.spi.MutableTrigger: void setPriority(int)>(5)
Unit: return
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool")
Unit: specialinvoke $r13.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>(java.lang.String,java.lang.String,java.util.Date)>("T2", null, $r14)
Unit: $r7 = new java.util.Properties
Unit: r6 = $r15
Unit: $r12 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void shutdown()>()
Unit: $r10 = new org.quartz.impl.StdSchedulerFactory
Unit: $r14 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.PriorityTest: void assertEquals(java.lang.String,java.lang.String)>("T2T1", $r23)
Unit: interfaceinvoke r5.<org.quartz.spi.MutableTrigger: void setJobKey(org.quartz.JobKey)>($r17)
Unit: specialinvoke $r15.<org.quartz.impl.JobDetailImpl: void <init>(java.lang.String,java.lang.String,java.lang.Class)>("JD", null, class "Lorg/quartz/PriorityTest$TestJob;")
Unit: r5 = $r13
Unit: $r18 = interfaceinvoke r6.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.Trigger)>(r5)
	method access$000 : 
	method access$100 : 
 ====================================== 
** CLASS org.quartz.JdbcSchedulerTest
	method <init> : 
	method createScheduler : 
 ====================================== 
** CLASS org.quartz.impl.matchers.OrMatcher
	method <init> : 
	method or : 
	method isMatch : 
	method getLeftOperand : 
	method getRightOperand : 
	method hashCode : 
	method equals : 
 ====================================== 
** CLASS org.quartz.CronScheduleBuilder
	method <init> : 
	method build : 
	method cronSchedule : 
	method cronScheduleNonvalidatedExpression : 
	method cronScheduleNoParseException : 
	method cronSchedule : 
	method dailyAtHourAndMinute : 
	method atHourAndMinuteOnGivenDaysOfWeek : 
	method weeklyOnDayAndHourAndMinute : 
	method monthlyOnDayAndHourAndMinute : 
	method inTimeZone : 
	method withMisfireHandlingInstructionIgnoreMisfires : 
	method withMisfireHandlingInstructionDoNothing : 
	method withMisfireHandlingInstructionFireAndProceed : 
 ====================================== 
** CLASS org.quartz.TriggerBuilderTest$TestAnnotatedJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JdbcJobStoreTest
	method <init> : 
	method testNothing : 
Unit: return
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.JdbcJobStoreTest
	method createJobStore : 
	method destroyJobStore : 
 ====================================== 
** CLASS org.quartz.ListenerManager
	method addJobListener : 
	method addJobListener : 
	method addJobListener : 
	method addJobListener : 
	method addJobListenerMatcher : 
	method removeJobListenerMatcher : 
	method setJobListenerMatchers : 
	method getJobListenerMatchers : 
	method removeJobListener : 
	method getJobListeners : 
	method getJobListener : 
	method addTriggerListener : 
	method addTriggerListener : 
	method addTriggerListener : 
	method addTriggerListener : 
	method addTriggerListenerMatcher : 
	method removeTriggerListenerMatcher : 
	method setTriggerListenerMatchers : 
	method getTriggerListenerMatchers : 
	method removeTriggerListener : 
	method getTriggerListeners : 
	method getTriggerListener : 
	method addSchedulerListener : 
	method removeSchedulerListener : 
	method getSchedulerListeners : 
 ====================================== 
** CLASS org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest
	method <init> : 
	method simpleScheduleAlwaysFiredUnder20s : 
Unit: $r31 = (java.lang.Long) $r30
Unit: specialinvoke $r13.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1)
Unit: $r30 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
Unit: $r22 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
Unit: r42 = $r13
Unit: $r16 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob;")
Unit: return
Unit: $r15 = <org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest: org.slf4j.Logger LOG>
Unit: $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r38, $z2)]
Unit: $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("Job was not executed once!", $z0)
Unit: virtualinvoke r1.<java.util.Properties: void load(java.io.InputStream)>(r2)
Unit: goto [?= virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.skipUpdateCheck", "true")]
Unit: r4 = virtualinvoke $r17.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: if $b3 >= 0 goto $z2 = 0
Unit: interfaceinvoke r3.<org.quartz.Scheduler: void start()>()
Unit: goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
Unit: $r10 = class "Lorg/quartz/integrations/tests/QTZ336_MissSchedulingChangeSignalTest$SlowRAMJobStore;"
Unit: interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>("------- Initialization Complete -----------")
Unit: r1 = $r7
Unit: $b3 = l0 cmp 20000L
Unit: $r18 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r44 = staticinvoke <org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob: java.util.List getDurations()>()
Unit: l0 = virtualinvoke $r31.<java.lang.Long: long longValue()>()
Unit: $r32 = new java.lang.StringBuilder
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r38, $z2)
Unit: $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
Unit: $z2 = 1
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.jobStore.class", $r11)
Unit: $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
Unit: $r27 = virtualinvoke $r26.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(50000L)
Unit: $r29 = <org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest: org.slf4j.Logger LOG>
Unit: r2 = virtualinvoke $r8.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/org/quartz/quartz.properties")
Unit: virtualinvoke r2.<java.io.InputStream: void close()>()
Unit: $r14 = <org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest: org.slf4j.Logger LOG>
Unit: if $z1 == 0 goto return
Unit: $r23 = virtualinvoke $r22.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInSeconds(int)>(1)
Unit: $r20 = new java.util.Date
Unit: $r24 = virtualinvoke $r23.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatForever()>()
Unit: r6 = interfaceinvoke r44.<java.util.List: java.util.Iterator iterator()>()
Unit: $z2 = 0
Unit: r43 = $r40
Unit: throw r41
Unit: $r26 = virtualinvoke $r21.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r25)
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.skipUpdateCheck", "true")
Unit: goto [?= r44 = staticinvoke <org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob: java.util.List getDurations()>()]
Unit: r5 = (org.quartz.SimpleTrigger) $r27
Unit: $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
Unit: virtualinvoke r43.<java.lang.Exception: void printStackTrace()>()
Unit: $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44)
Unit: $r7 = new java.util.Properties
Unit: $r17 = virtualinvoke $r16.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("job", "group")
Unit: $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (all: ")
Unit: $r40 := @caughtexception
Unit: virtualinvoke r2.<java.io.InputStream: void close()>()
Unit: r0 := @this: org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest
Unit: $r39 := @caughtexception
Unit: $z0 = interfaceinvoke r44.<java.util.List: boolean isEmpty()>()
Unit: specialinvoke $r20.<java.util.Date: void <init>(long)>($l2)
Unit: $r21 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r20)
Unit: $r13 = new org.quartz.impl.StdSchedulerFactory
Unit: $l2 = $l1 + 1000L
Unit: r41 = $r39
Unit: $r25 = virtualinvoke $r24.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withMisfireHandlingInstructionIgnoreMisfires()>()
Unit: specialinvoke $r7.<java.util.Properties: void <init>()>()
Unit: $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missed an execution with one duration being between two fires: ")
Unit: $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
Unit: $r19 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("trigger1", "group1")
Unit: interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String)>("------- Scheduling Job  -------------------")
Unit: interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String)>("------- Scheduler Started -----------------")
Unit: r3 = interfaceinvoke r42.<org.quartz.SchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>()
Unit: interfaceinvoke r3.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r4, r5)
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.CronTriggerTest
	method <init> : 
	method getVersions : 
	method getTargetObject : 
	method verifyMatch : 
	method testClone : 
Unit: specialinvoke $r3.<org.quartz.impl.triggers.CronTriggerImpl: void <init>()>()
Unit: $r5 = interfaceinvoke r2.<org.quartz.CronTrigger: java.lang.String getCronExpression()>()
Unit: r1 = $r3
Unit: $r3 = new org.quartz.impl.triggers.CronTriggerImpl
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setName(java.lang.String)>("test")
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setCronExpression(java.lang.String)>("0 0 12 * * ?")
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setGroup(java.lang.String)>("testGroup")
Unit: staticinvoke <org.quartz.CronTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Cloning failed", r1, r2)
Unit: $r4 = virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: java.lang.Object clone()>()
Unit: r0 := @this: org.quartz.CronTriggerTest
Unit: return
Unit: staticinvoke <org.quartz.CronTriggerTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Cloning failed for the cron expression", "0 0 12 * * ?", $r5)
Unit: r2 = (org.quartz.CronTrigger) $r4
	method testQuartz558 : 
Unit: r0 := @this: org.quartz.CronTriggerTest
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setName(java.lang.String)>("test")
Unit: $r3 = new org.quartz.impl.triggers.CronTriggerImpl
Unit: return
Unit: r1 = $r3
Unit: $r4 = virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: java.lang.Object clone()>()
Unit: specialinvoke $r3.<org.quartz.impl.triggers.CronTriggerImpl: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setGroup(java.lang.String)>("testGroup")
Unit: r2 = (org.quartz.CronTrigger) $r4
Unit: staticinvoke <org.quartz.CronTriggerTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Cloning failed", r1, r2)
	method testMisfireInstructionValidity : 
Unit: r6 = $r3
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setMisfireInstruction(int)>(0)
Unit: return
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setMisfireInstruction(int)>(3)
Unit: staticinvoke <org.quartz.CronTriggerTest: void fail(java.lang.String)>("Unexpected exception while setting misfire instruction.")
Unit: r0 := @this: org.quartz.CronTriggerTest
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setMisfireInstruction(int)>(-1)
Unit: goto [?= virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setMisfireInstruction(int)>(3)]
Unit: r1 = $r2
Unit: $r2 = new org.quartz.impl.triggers.CronTriggerImpl
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setMisfireInstruction(int)>(1)
Unit: $r3 := @caughtexception
Unit: virtualinvoke r1.<org.quartz.impl.triggers.CronTriggerImpl: void setMisfireInstruction(int)>(2)
Unit: $r4 := @caughtexception
Unit: r5 = $r4
Unit: specialinvoke $r2.<org.quartz.impl.triggers.CronTriggerImpl: void <init>()>()
Unit: staticinvoke <org.quartz.CronTriggerTest: void fail(java.lang.String)>("Expected exception while setting invalid misfire instruction but did not get it.")
Unit: goto [?= return]
	method main : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.JobListener
	method getName : 
	method jobToBeExecuted : 
	method jobExecutionVetoed : 
	method jobWasExecuted : 
 ====================================== 
** CLASS org.quartz.Trigger$TriggerTimeComparator
	method <init> : 
	method compare : 
	method compare : 
	method compare : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler
	method <init> : 
	method initialize : 
	method shutdown : 
	method manage : 
	method run : 
 ====================================== 
** CLASS org.quartz.impl.DirectSchedulerFactoryTest$1
	method <init> : 
	method initialize : 
	method start : 
	method shutdown : 
 ====================================== 
** CLASS org.quartz.Scheduler
	method getSchedulerName : 
	method getSchedulerInstanceId : 
	method getContext : 
	method start : 
	method startDelayed : 
	method isStarted : 
	method standby : 
	method isInStandbyMode : 
	method shutdown : 
	method shutdown : 
	method isShutdown : 
	method getMetaData : 
	method getCurrentlyExecutingJobs : 
	method setJobFactory : 
	method getListenerManager : 
	method scheduleJob : 
	method scheduleJob : 
	method scheduleJobs : 
	method scheduleJob : 
	method unscheduleJob : 
	method unscheduleJobs : 
	method rescheduleJob : 
	method addJob : 
	method addJob : 
	method deleteJob : 
	method deleteJobs : 
	method triggerJob : 
	method triggerJob : 
	method pauseJob : 
	method pauseJobs : 
	method pauseTrigger : 
	method pauseTriggers : 
	method resumeJob : 
	method resumeJobs : 
	method resumeTrigger : 
	method resumeTriggers : 
	method pauseAll : 
	method resumeAll : 
	method getJobGroupNames : 
	method getJobKeys : 
	method getTriggersOfJob : 
	method getTriggerGroupNames : 
	method getTriggerKeys : 
	method getPausedTriggerGroups : 
	method getJobDetail : 
	method getTrigger : 
	method getTriggerState : 
	method resetTriggerFromErrorState : 
	method addCalendar : 
	method deleteCalendar : 
	method getCalendar : 
	method getCalendarNames : 
	method interrupt : 
	method interrupt : 
	method checkExists : 
	method checkExists : 
	method clear : 
 ====================================== 
** CLASS org.quartz.ee.jta.JTAJobRunShellFactory
	method <init> : 
	method initialize : 
	method createJobRunShell : 
 ====================================== 
** CLASS org.quartz.integrations.tests.QuartzDatabaseTestSupport
	method <init> : 
	method initialize : 
	method shutdownDb : 
	method createSchedulerProperties : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.SchedulerDetailsSetterTest$MyJobStore
	method <init> : 
	method setInstanceId : 
	method setInstanceName : 
 ====================================== 
** CLASS org.quartz.simpl.ThreadContextClassLoadHelper
	method <init> : 
	method initialize : 
	method loadClass : 
	method loadClass : 
	method getResource : 
	method getResourceAsStream : 
	method getClassLoader : 
 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledCounterConfig
	method <init> : 
	method getHistorySize : 
	method getIntervalSecs : 
	method isResetOnSample : 
	method createCounter : 
 ====================================== 
** CLASS org.quartz.ValueSet
	method <init> : 
 ====================================== 
** CLASS org.quartz.utils.counter.CounterManagerImpl
	method <init> : 
	method shutdown : 
	method createCounter : 
	method shutdownCounter : 
 ====================================== 
** CLASS org.quartz.integrations.tests.JdbcQuartzDerbyUtilities
	method createDatabase : 
	method triggersInAcquiredState : 
	method timesTriggered : 
	method destroyDatabase : 
	method <init> : 
	method delete : 
	method access$000 : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.simpl.ZeroSizeThreadPool
	method <init> : 
	method getLog : 
	method getPoolSize : 
	method initialize : 
	method shutdown : 
	method shutdown : 
	method runInThread : 
	method blockForAvailableThreads : 
	method setInstanceId : 
	method setInstanceName : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.CacheDelegate
	method <init> : 
	method setBytes : 
	method getObjectFromBlob : 
	method getJobDataFromBlob : 
 ====================================== 
** CLASS org.quartz.TimeOfDay
	method <init> : 
	method <init> : 
	method validate : 
	method hourMinuteAndSecondOfDay : 
	method hourAndMinuteOfDay : 
	method getHour : 
	method getMinute : 
	method getSecond : 
	method before : 
	method equals : 
	method hashCode : 
	method getTimeOfDayForDate : 
	method hourAndMinuteAndSecondFromDate : 
	method hourAndMinuteAndSecondFromDate : 
	method hourAndMinuteFromDate : 
	method hourAndMinuteFromDate : 
	method toString : 
 ====================================== 
** CLASS org.quartz.impl.SchedulerDetailsSetterTest$1
	method <init> : 
	method defineClass : 
 ====================================== 
** CLASS org.quartz.core.jmx.QuartzSchedulerMBean
	method getSchedulerName : 
	method getSchedulerInstanceId : 
	method isStandbyMode : 
	method isShutdown : 
	method getVersion : 
	method getJobStoreClassName : 
	method getThreadPoolClassName : 
	method getThreadPoolSize : 
	method getJobsScheduledMostRecentSample : 
	method getJobsExecutedMostRecentSample : 
	method getJobsCompletedMostRecentSample : 
	method getPerformanceMetrics : 
	method getCurrentlyExecutingJobs : 
	method getAllJobDetails : 
	method getAllTriggers : 
	method getJobGroupNames : 
	method getJobNames : 
	method getJobDetail : 
	method isStarted : 
	method start : 
	method shutdown : 
	method standby : 
	method clear : 
	method scheduleJob : 
	method scheduleBasicJob : 
	method scheduleJob : 
	method scheduleJob : 
	method unscheduleJob : 
	method interruptJob : 
	method interruptJob : 
	method triggerJob : 
	method deleteJob : 
	method addJob : 
	method addJob : 
	method pauseJobGroup : 
	method pauseJobsStartingWith : 
	method pauseJobsEndingWith : 
	method pauseJobsContaining : 
	method pauseJobsAll : 
	method resumeJobGroup : 
	method resumeJobsStartingWith : 
	method resumeJobsEndingWith : 
	method resumeJobsContaining : 
	method resumeJobsAll : 
	method pauseJob : 
	method resumeJob : 
	method getTriggerGroupNames : 
	method getTriggerNames : 
	method getTrigger : 
	method getTriggerState : 
	method getTriggersOfJob : 
	method getPausedTriggerGroups : 
	method pauseAllTriggers : 
	method resumeAllTriggers : 
	method pauseTriggerGroup : 
	method pauseTriggersStartingWith : 
	method pauseTriggersEndingWith : 
	method pauseTriggersContaining : 
	method pauseTriggersAll : 
	method resumeTriggerGroup : 
	method resumeTriggersStartingWith : 
	method resumeTriggersEndingWith : 
	method resumeTriggersContaining : 
	method resumeTriggersAll : 
	method pauseTrigger : 
	method resumeTrigger : 
	method getCalendarNames : 
	method deleteCalendar : 
	method setSampledStatisticsEnabled : 
	method isSampledStatisticsEnabled : 
 ====================================== 
** CLASS org.quartz.spi.SchedulerPlugin
	method initialize : 
	method start : 
	method shutdown : 
 ====================================== 
** CLASS org.quartz.utils.HikariCpPoolingConnectionProvider
	method <init> : 
	method <init> : 
	method initialize : 
	method getDataSource : 
	method getConnection : 
	method shutdown : 
	method initialize : 
	method getDataSource : 
 ====================================== 
** CLASS org.quartz.TriggerComparatorTest
	method <init> : 
	method testTriggerSort : 
Unit: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r1)
Unit: $r14 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r3, $r23)
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r22)
Unit: $r21 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r8 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r3 = virtualinvoke $r13.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r4)
Unit: r4 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r2 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r12 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r5)
Unit: r5 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r26 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(5)
Unit: $r19 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("a", "c")
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r21)
Unit: $r24 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(3)
Unit: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r3)
Unit: r6 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r6, $r26)
Unit: $r11 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("b")
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("a", "b")
Unit: specialinvoke $r20.<java.util.LinkedList: void <init>()>()
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r25)
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("c")
Unit: $r18 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r23 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(2)
Unit: $r16 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r2)
Unit: $r20 = new java.util.LinkedList
Unit: r7 = $r20
Unit: r0 := @this: org.quartz.TriggerComparatorTest
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r4, $r24)
Unit: staticinvoke <java.util.Collections: void sort(java.util.List)>(r7)
Unit: $r10 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r15 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("a", "a")
Unit: r1 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r6)
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("a")
Unit: $r25 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(4)
Unit: $r22 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(1)
Unit: return
	method testTriggerTimeSort : 
Unit: $r13 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(2, $r20)
Unit: $r49 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r18 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r41 = virtualinvoke $r40.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("e")
Unit: $r25 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r6)
Unit: $r42 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r9 = virtualinvoke $r73.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r83 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(6)
Unit: specialinvoke $r76.<java.util.LinkedList: void <init>()>()
Unit: $r45 = (org.quartz.spi.OperableTrigger) r5
Unit: $r35 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(5, $r34)
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r4, $r80)
Unit: $r66 = virtualinvoke $r63.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r65)
Unit: $r80 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(3)
Unit: $r15 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r14)
Unit: $r36 = virtualinvoke $r33.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r35)
Unit: $r58 = virtualinvoke $r55.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r57)
Unit: $r27 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r71 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r82 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(5)
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r7, $r83)
Unit: $r69 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r28 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(3, $r27)
Unit: $r70 = virtualinvoke $r69.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("j")
Unit: $r59 = virtualinvoke $r58.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withPriority(int)>(2)
Unit: staticinvoke <java.util.Collections: void sort(java.util.List)>(r10)
Unit: return
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r9)
Unit: $r81 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(4)
Unit: r0 := @this: org.quartz.TriggerComparatorTest
Unit: interfaceinvoke $r23.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: r8 = virtualinvoke $r66.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r4 = virtualinvoke $r37.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r9, $r85)
Unit: $r65 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(6, $r64)
Unit: $r63 = virtualinvoke $r62.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("i")
Unit: interfaceinvoke $r30.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: $r29 = virtualinvoke $r26.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r28)
Unit: $r33 = virtualinvoke $r32.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("d")
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r7)
Unit: $r16 = (org.quartz.spi.OperableTrigger) r1
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r4)
Unit: $r30 = (org.quartz.spi.OperableTrigger) r3
Unit: r5 = virtualinvoke $r44.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r52 = (org.quartz.spi.OperableTrigger) r6
Unit: $r44 = virtualinvoke $r41.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r43)
Unit: $r51 = virtualinvoke $r48.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r50)
Unit: $r62 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r55 = virtualinvoke $r54.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("h")
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r5, $r81)
Unit: $r54 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r56 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r26 = virtualinvoke $r25.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("c")
Unit: interfaceinvoke $r38.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: $r37 = virtualinvoke $r36.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withPriority(int)>(7)
Unit: interfaceinvoke $r60.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r2)
Unit: $r19 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("b")
Unit: $r38 = (org.quartz.spi.OperableTrigger) r4
Unit: interfaceinvoke $r67.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r8)
Unit: $r43 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(5, $r42)
Unit: $r67 = (org.quartz.spi.OperableTrigger) r8
Unit: $r47 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r48 = virtualinvoke $r47.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("g")
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r3, $r79)
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r3)
Unit: $r14 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(1, $r13)
Unit: $r34 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r76 = new java.util.LinkedList
Unit: interfaceinvoke $r52.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: $r50 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(5, $r49)
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r5)
Unit: $r23 = (org.quartz.spi.OperableTrigger) r2
Unit: $r72 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(7, $r71)
Unit: $r73 = virtualinvoke $r70.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r72)
Unit: $r84 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(7)
Unit: interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r1)
Unit: interfaceinvoke $r74.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: interfaceinvoke $r16.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r8, $r84)
Unit: $r78 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(1)
Unit: r6 = virtualinvoke $r51.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r77)
Unit: $r85 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(8)
Unit: $r32 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r1 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r20 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r78)
Unit: $r40 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r22 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>($r21)
Unit: $r57 = staticinvoke <org.quartz.DateBuilder: java.util.Date futureDate(int,org.quartz.DateBuilder$IntervalUnit)>(5, $r56)
Unit: r7 = virtualinvoke $r59.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: staticinvoke <org.quartz.TriggerComparatorTest: void assertEquals(java.lang.Object,java.lang.Object)>(r6, $r82)
Unit: $r64 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r60 = (org.quartz.spi.OperableTrigger) r7
Unit: r3 = virtualinvoke $r29.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: interfaceinvoke $r45.<org.quartz.spi.OperableTrigger: java.util.Date computeFirstFireTime(org.quartz.Calendar)>(null)
Unit: $r74 = (org.quartz.spi.OperableTrigger) r9
Unit: $r77 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r12 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("a")
Unit: $r79 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(2)
Unit: r2 = virtualinvoke $r22.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r10 = $r76
Unit: $r11 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeExtendedNonConcurrentJob
	method <init> : 
 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest$TestJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest$BadJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.TriggerListener
	method getName : 
	method triggerFired : 
	method vetoJobExecution : 
	method triggerMisfired : 
	method triggerComplete : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.TriggerPersistenceDelegate$TriggerPropertyBundle
	method <init> : 
	method getScheduleBuilder : 
	method getStatePropertyNames : 
	method getStatePropertyValues : 
 ====================================== 
** CLASS org.quartz.core.QuartzScheduler
	method <init> : 
	method initialize : 
	method getVersion : 
	method getVersionMajor : 
	method getVersionMinor : 
	method getVersionIteration : 
	method getSchedulerSignaler : 
	method getLog : 
	method registerJMX : 
	method unregisterJMX : 
	method bind : 
	method unBind : 
	method getSchedulerName : 
	method getSchedulerInstanceId : 
	method getSchedulerThreadGroup : 
	method addNoGCObject : 
	method removeNoGCObject : 
	method getSchedulerContext : 
	method isSignalOnSchedulingChange : 
	method setSignalOnSchedulingChange : 
	method start : 
	method startDelayed : 
	method standby : 
	method isInStandbyMode : 
	method runningSince : 
	method numJobsExecuted : 
	method getJobStoreClass : 
	method supportsPersistence : 
	method isClustered : 
	method getThreadPoolClass : 
	method getThreadPoolSize : 
	method shutdown : 
	method shutdown : 
	method isShutdown : 
	method isShuttingDown : 
	method isStarted : 
	method validateState : 
	method getCurrentlyExecutingJobs : 
	method scheduleJob : 
	method scheduleJob : 
	method addJob : 
	method addJob : 
	method deleteJob : 
	method deleteJobs : 
	method scheduleJobs : 
	method scheduleJob : 
	method unscheduleJobs : 
	method unscheduleJob : 
	method rescheduleJob : 
	method newTriggerId : 
	method triggerJob : 
	method triggerJob : 
	method pauseTrigger : 
	method pauseTriggers : 
	method pauseJob : 
	method pauseJobs : 
	method resumeTrigger : 
	method resumeTriggers : 
	method getPausedTriggerGroups : 
	method resumeJob : 
	method resumeJobs : 
	method pauseAll : 
	method resumeAll : 
	method getJobGroupNames : 
	method getJobKeys : 
	method getTriggersOfJob : 
	method getTriggerGroupNames : 
	method getTriggerKeys : 
	method getJobDetail : 
	method getTrigger : 
	method checkExists : 
	method checkExists : 
	method clear : 
	method getTriggerState : 
	method resetTriggerFromErrorState : 
	method addCalendar : 
	method deleteCalendar : 
	method getCalendar : 
	method getCalendarNames : 
	method getListenerManager : 
	method addInternalJobListener : 
	method removeInternalJobListener : 
	method getInternalJobListeners : 
	method getInternalJobListener : 
	method addInternalTriggerListener : 
	method removeinternalTriggerListener : 
	method getInternalTriggerListeners : 
	method getInternalTriggerListener : 
	method addInternalSchedulerListener : 
	method removeInternalSchedulerListener : 
	method getInternalSchedulerListeners : 
	method notifyJobStoreJobComplete : 
	method notifyJobStoreJobVetoed : 
	method notifySchedulerThread : 
	method buildTriggerListenerList : 
	method buildJobListenerList : 
	method buildSchedulerListenerList : 
	method matchJobListener : 
	method matchTriggerListener : 
	method notifyTriggerListenersFired : 
	method notifyTriggerListenersMisfired : 
	method notifyTriggerListenersComplete : 
	method notifyJobListenersToBeExecuted : 
	method notifyJobListenersWasVetoed : 
	method notifyJobListenersWasExecuted : 
	method notifySchedulerListenersError : 
	method notifySchedulerListenersSchduled : 
	method notifySchedulerListenersUnscheduled : 
	method notifySchedulerListenersFinalized : 
	method notifySchedulerListenersPausedTrigger : 
	method notifySchedulerListenersPausedTriggers : 
	method notifySchedulerListenersResumedTrigger : 
	method notifySchedulerListenersResumedTriggers : 
	method notifySchedulerListenersPausedJob : 
	method notifySchedulerListenersPausedJobs : 
	method notifySchedulerListenersResumedJob : 
	method notifySchedulerListenersResumedJobs : 
	method notifySchedulerListenersInStandbyMode : 
	method notifySchedulerListenersStarted : 
	method notifySchedulerListenersStarting : 
	method notifySchedulerListenersShutdown : 
	method notifySchedulerListenersShuttingdown : 
	method notifySchedulerListenersJobAdded : 
	method notifySchedulerListenersJobDeleted : 
	method setJobFactory : 
	method getJobFactory : 
	method interrupt : 
	method interrupt : 
	method shutdownPlugins : 
	method startPlugins : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.matchers.NotMatcher
	method <init> : 
	method not : 
	method isMatch : 
	method getOperand : 
	method hashCode : 
	method equals : 
 ====================================== 
** CLASS org.quartz.impl.calendar.WeeklyCalendar
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method clone : 
	method getDaysExcluded : 
	method isDayExcluded : 
	method setDaysExcluded : 
	method setDayExcluded : 
	method areAllDaysExcluded : 
	method isTimeIncluded : 
	method getNextIncludedTime : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager
	method <init> : 
	method initialize : 
	method shutdown : 
	method manage : 
	method run : 
 ====================================== 
** CLASS org.quartz.utils.FindbugsSuppressWarnings
	method value : 
 ====================================== 
** CLASS org.quartz.impl.triggers.SimpleTriggerImpl
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method getStartTime : 
	method setStartTime : 
	method getEndTime : 
	method setEndTime : 
	method getRepeatCount : 
	method setRepeatCount : 
	method getRepeatInterval : 
	method setRepeatInterval : 
	method getTimesTriggered : 
	method setTimesTriggered : 
	method validateMisfireInstruction : 
	method updateAfterMisfire : 
	method triggered : 
	method updateWithNewCalendar : 
	method computeFirstFireTime : 
	method getNextFireTime : 
	method getPreviousFireTime : 
	method setNextFireTime : 
	method setPreviousFireTime : 
	method getFireTimeAfter : 
	method getFireTimeBefore : 
	method computeNumTimesFiredBetween : 
	method getFinalFireTime : 
	method mayFireAgain : 
	method validate : 
	method hasAdditionalProperties : 
	method getScheduleBuilder : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.SimpleTriggerPersistenceDelegate
	method <init> : 
	method initialize : 
	method getHandledTriggerTypeDiscriminator : 
	method canHandleTriggerType : 
	method deleteExtendedTriggerProperties : 
	method insertExtendedTriggerProperties : 
	method loadExtendedTriggerProperties : 
	method updateExtendedTriggerProperties : 
 ====================================== 
** CLASS org.quartz.impl.StdSchedulerFactory
	method <init> : 
	method <init> : 
	method <init> : 
	method getLog : 
	method initialize : 
	method overrideWithSysProps : 
	method initialize : 
	method initialize : 
	method initialize : 
	method instantiate : 
	method populateProviderWithExtraProps : 
	method shutdownFromInstantiateException : 
	method instantiate : 
	method setBeanProps : 
	method getSetMethod : 
	method loadClass : 
	method findClassloader : 
	method getSchedulerName : 
	method getScheduler : 
	method getDefaultScheduler : 
	method getScheduler : 
	method getAllSchedulers : 
 ====================================== 
** CLASS org.quartz.simpl.LoadingLoaderClassLoadHelper
	method <init> : 
	method initialize : 
	method loadClass : 
	method loadClass : 
	method getResource : 
	method getResourceAsStream : 
	method getClassLoader : 
 ====================================== 
** CLASS org.quartz.utils.ClassUtilsTest$BaseJob
	method <init> : 
	method execute : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.utils.HikariCpPoolingConnectionProviderTest
	method <init> : 
	method testHikariCpPoolProviderWithExtraProps : 
Unit: r0.<org.quartz.utils.HikariCpPoolingConnectionProviderTest: boolean testConnectionProviderClass> = 1
Unit: specialinvoke r0.<org.quartz.utils.HikariCpPoolingConnectionProviderTest: void validateHikariCpPoolProviderClassWithExtraProps()>()
Unit: return
Unit: r0 := @this: org.quartz.utils.HikariCpPoolingConnectionProviderTest
	method testHikariCpPoolProviderClassWithExtraProps : 
Unit: r0 := @this: org.quartz.utils.HikariCpPoolingConnectionProviderTest
Unit: r0.<org.quartz.utils.HikariCpPoolingConnectionProviderTest: boolean testConnectionProviderClass> = 0
Unit: return
Unit: specialinvoke r0.<org.quartz.utils.HikariCpPoolingConnectionProviderTest: void validateHikariCpPoolProviderClassWithExtraProps()>()
	method validateHikariCpPoolProviderClassWithExtraProps : 
	method createSchedulerProperties : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest$TestStdJDBCDelegate
	method <init> : 
	method findTriggerPersistenceDelegate : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DB2v6Delegate
	method <init> : 
	method selectNumJobs : 
	method selectNumTriggersForJob : 
	method selectNumTriggers : 
	method selectNumCalendars : 
 ====================================== 
** CLASS org.quartz.DateBuilder
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method newDate : 
	method newDateInTimezone : 
	method newDateInLocale : 
	method newDateInTimeZoneAndLocale : 
	method build : 
	method atHourOfDay : 
	method atMinute : 
	method atSecond : 
	method atHourMinuteAndSecond : 
	method onDay : 
	method inMonth : 
	method inMonthOnDay : 
	method inYear : 
	method inTimeZone : 
	method inLocale : 
	method futureDate : 
	method translate : 
	method tomorrowAt : 
	method todayAt : 
	method dateOf : 
	method dateOf : 
	method dateOf : 
	method evenHourDateAfterNow : 
	method evenHourDate : 
	method evenHourDateBefore : 
	method evenMinuteDateAfterNow : 
	method evenMinuteDate : 
	method evenMinuteDateBefore : 
	method evenSecondDateAfterNow : 
	method evenSecondDate : 
	method evenSecondDateBefore : 
	method nextGivenMinuteDate : 
	method nextGivenSecondDate : 
	method translateTime : 
	method validateDayOfWeek : 
	method validateHour : 
	method validateMinute : 
	method validateSecond : 
	method validateDayOfMonth : 
	method validateMonth : 
	method validateYear : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.CalendarIntervalTrigger
	method getRepeatIntervalUnit : 
	method getRepeatInterval : 
	method getTimesTriggered : 
	method getTimeZone : 
	method isPreserveHourOfDayAcrossDaylightSavings : 
	method isSkipDayIfHourDoesNotExist : 
	method getTriggerBuilder : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest
	method <init> : 
	method testSingleSuccessUsingUpdate : 
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void setSchedName(java.lang.String)>("test")
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest
Unit: $r7 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r6)
Unit: $r4 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r4
Possibly Mock: true

Unit: $r10 = newarray (java.lang.Class)[1]
Unit: $r10[0] = class "Ljava/lang/AssertionError;"
Unit: interfaceinvoke $r9.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Class[])>($r10)
Unit: r1 = $r3
Unit: $r6 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r5)
Unit: $r5 = staticinvoke <org.mockito.Mockito: java.lang.String startsWith(java.lang.String)>("UPDATE")
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: boolean obtainLock(java.sql.Connection,java.lang.String)>(r2, "test")
Unit: $r9 = interfaceinvoke $r7.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r8)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: return
Unit: $r3 = new org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
Unit: $r8 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement GOOD_STATEMENT>
Unit: specialinvoke $r3.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void <init>()>()
Unit: r2 = (java.sql.Connection) $r4
Local: r2
Possibly Mock: true

	method testSingleFailureFollowedBySuccessUsingUpdate : 
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest
Unit: r2 = (java.sql.Connection) $r4
Local: r2
Possibly Mock: true

Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void setSchedName(java.lang.String)>("test")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r4 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r4
Possibly Mock: true

Unit: $r7 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r6)
Unit: $r10 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement GOOD_STATEMENT>
Unit: $r5 = staticinvoke <org.mockito.Mockito: java.lang.String startsWith(java.lang.String)>("UPDATE")
Unit: $r3 = new org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: boolean obtainLock(java.sql.Connection,java.lang.String)>(r2, "test")
Unit: return
Unit: $r11 = interfaceinvoke $r9.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r10)
Unit: interfaceinvoke $r11.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Class[])>($r12)
Unit: $r12 = newarray (java.lang.Class)[1]
Unit: $r8 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement BAD_STATEMENT>
Unit: $r9 = interfaceinvoke $r7.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r8)
Unit: $r6 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r5)
Unit: r1 = $r3
Unit: $r12[0] = class "Ljava/lang/AssertionError;"
Unit: specialinvoke $r3.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void <init>()>()
	method testDoubleFailureFollowedBySuccessUsingUpdate : 
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest
Unit: $r9 = newarray (java.sql.PreparedStatement)[1]
Unit: return
Unit: $r5 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r5
Possibly Mock: true

Unit: $r6 = staticinvoke <org.mockito.Mockito: java.lang.String startsWith(java.lang.String)>("UPDATE")
Unit: $r13[0] = class "Ljava/lang/AssertionError;"
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r10 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement BAD_STATEMENT>
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: boolean obtainLock(java.sql.Connection,java.lang.String)>(r2, "test")
Unit: r1 = $r4
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void setSchedName(java.lang.String)>("test")
Unit: interfaceinvoke $r12.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Class[])>($r13)
Unit: $r9[0] = $r10
Unit: goto [?= return]
Unit: r2 = (java.sql.Connection) $r5
Local: r2
Possibly Mock: true

Unit: $r15 := @caughtexception
Unit: $r13 = newarray (java.lang.Class)[1]
Unit: specialinvoke $r4.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void <init>()>()
Unit: $r12 = interfaceinvoke $r8.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object,java.lang.Object[])>($r11, $r9)
Unit: $r11 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement BAD_STATEMENT>
Unit: r3 = $r15
Unit: $r8 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r7)
Unit: $r7 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r6)
Unit: $r4 = new org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
	method testFallThroughToInsert : 
Unit: $r14 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r13)
Unit: return
Unit: $r17[0] = class "Ljava/lang/AssertionError;"
Unit: $r6 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r5)
Unit: $r4 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/sql/Connection;")
Local: $r4
Possibly Mock: true

Unit: r1 = $r3
Unit: $r9 = interfaceinvoke $r7.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r8)
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: boolean obtainLock(java.sql.Connection,java.lang.String)>(r2, "test")
Unit: r0 := @this: org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest
Unit: $r13 = interfaceinvoke r2.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r12)
Unit: $r12 = staticinvoke <org.mockito.Mockito: java.lang.String startsWith(java.lang.String)>("INSERT")
Unit: $r10 = newarray (java.lang.Class)[1]
Unit: $r16 = interfaceinvoke $r14.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r15)
Unit: $r5 = staticinvoke <org.mockito.Mockito: java.lang.String startsWith(java.lang.String)>("UPDATE")
Unit: $r8 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement FAIL_STATEMENT>
Unit: interfaceinvoke $r9.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Class[])>($r10)
Unit: specialinvoke $r3.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void <init>()>()
Unit: interfaceinvoke $r16.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenThrow(java.lang.Class[])>($r17)
Unit: virtualinvoke r1.<org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore: void setSchedName(java.lang.String)>("test")
Unit: $r3 = new org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
Unit: r2 = (java.sql.Connection) $r4
Local: r2
Possibly Mock: true

Unit: $r10[0] = class "Ljava/lang/AssertionError;"
Unit: $r7 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r6)
Unit: $r17 = newarray (java.lang.Class)[1]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r15 = <org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest: java.sql.PreparedStatement GOOD_STATEMENT>
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.SchedulerContext
	method <init> : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.simpl.CascadingClassLoadHelper
	method <init> : 
	method initialize : 
	method loadClass : 
	method loadClass : 
	method getResource : 
	method getResourceAsStream : 
	method getClassLoader : 
 ====================================== 
** CLASS org.quartz.core.QTZ212_SchedulerListener_Test
	method <init> : 
	method stdSchedulerCallsStartingBeforeStartedTest : 
Unit: r1 = $r3
Unit: $r6 = <org.quartz.core.QTZ212_SchedulerListener_Test: java.util.List methodsCalledInSchedulerListener>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("SCHEDULER_STARTED", $r11)
Unit: r2 = interfaceinvoke r1.<org.quartz.SchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r8 = (java.lang.String) $r7
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("SCHEDULER_STARTING", $r8)
Unit: $r5 = new org.quartz.core.QTZ212_SchedulerListener_Test$TestSchedulerListener
Unit: $r9 = <org.quartz.core.QTZ212_SchedulerListener_Test: java.util.List methodsCalledInSchedulerListener>
Unit: $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(1)
Unit: specialinvoke $r3.<org.quartz.impl.StdSchedulerFactory: void <init>()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void shutdown()>()
Unit: interfaceinvoke $r4.<org.quartz.ListenerManager: void addSchedulerListener(org.quartz.SchedulerListener)>($r5)
Unit: r0 := @this: org.quartz.core.QTZ212_SchedulerListener_Test
Unit: specialinvoke $r5.<org.quartz.core.QTZ212_SchedulerListener_Test$TestSchedulerListener: void <init>()>()
Unit: $r3 = new org.quartz.impl.StdSchedulerFactory
Unit: $r11 = (java.lang.String) $r10
Unit: $r4 = interfaceinvoke r2.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void start()>()
Unit: return
	method broadcastSchedulerListenerCallsSchedulerStartingOnAllItsListeners : 
Unit: r3 = $r6
Unit: $r6 = new java.util.ArrayList
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void start()>()
Unit: <org.quartz.core.QTZ212_SchedulerListener_Test: java.util.List methodsCalledInSchedulerListener> = $r4
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r12 = (java.lang.String) $r11
Unit: r1 = $r5
Unit: $r5 = new org.quartz.impl.StdSchedulerFactory
Unit: r2 = interfaceinvoke r1.<org.quartz.SchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>()>()
Unit: $r8 = interfaceinvoke r2.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: specialinvoke $r7.<org.quartz.core.QTZ212_SchedulerListener_Test$TestSchedulerListener: void <init>()>()
Unit: $r10 = <org.quartz.core.QTZ212_SchedulerListener_Test: java.util.List methodsCalledInSchedulerListener>
Unit: return
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("SCHEDULER_STARTING", $r12)
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void shutdown()>()
Unit: $r9 = new org.quartz.listeners.BroadcastSchedulerListener
Unit: $r4 = new java.util.ArrayList
Unit: $r15 = (java.lang.String) $r14
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: r0 := @this: org.quartz.core.QTZ212_SchedulerListener_Test
Unit: $r7 = new org.quartz.core.QTZ212_SchedulerListener_Test$TestSchedulerListener
Unit: specialinvoke $r9.<org.quartz.listeners.BroadcastSchedulerListener: void <init>(java.util.List)>(r3)
Unit: $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(1)
Unit: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("SCHEDULER_STARTED", $r15)
Unit: interfaceinvoke $r8.<org.quartz.ListenerManager: void addSchedulerListener(org.quartz.SchedulerListener)>($r9)
Unit: $r13 = <org.quartz.core.QTZ212_SchedulerListener_Test: java.util.List methodsCalledInSchedulerListener>
	method access$000 : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.InvalidConfigurationException
	method <init> : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.simpl.PropertySettingJobFactoryTest$1
 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$StringOperatorName
	method values : 
	method valueOf : 
	method <init> : 
	method evaluate : 
	method <init> : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.RemoteScheduler
	method <init> : 
	method getRemoteScheduler : 
	method invalidateHandleCreateException : 
	method getSchedulerName : 
	method getSchedulerInstanceId : 
	method getMetaData : 
	method getContext : 
	method start : 
	method startDelayed : 
	method standby : 
	method isStarted : 
	method isInStandbyMode : 
	method shutdown : 
	method shutdown : 
	method isShutdown : 
	method getCurrentlyExecutingJobs : 
	method scheduleJob : 
	method scheduleJob : 
	method addJob : 
	method addJob : 
	method deleteJobs : 
	method scheduleJobs : 
	method scheduleJob : 
	method unscheduleJobs : 
	method deleteJob : 
	method unscheduleJob : 
	method rescheduleJob : 
	method triggerJob : 
	method triggerJob : 
	method pauseTrigger : 
	method pauseTriggers : 
	method pauseJob : 
	method pauseJobs : 
	method resumeTrigger : 
	method resumeTriggers : 
	method resumeJob : 
	method resumeJobs : 
	method pauseAll : 
	method resumeAll : 
	method getJobGroupNames : 
	method getJobKeys : 
	method getTriggersOfJob : 
	method getTriggerGroupNames : 
	method getTriggerKeys : 
	method getJobDetail : 
	method checkExists : 
	method checkExists : 
	method clear : 
	method getTrigger : 
	method getTriggerState : 
	method resetTriggerFromErrorState : 
	method addCalendar : 
	method deleteCalendar : 
	method getCalendar : 
	method getCalendarNames : 
	method getPausedTriggerGroups : 
	method getListenerManager : 
	method interrupt : 
	method interrupt : 
	method setJobFactory : 
 ====================================== 
** CLASS org.quartz.core.JobRunShellFactory
	method initialize : 
	method createJobRunShell : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$RecoverMisfiredJobsResult
	method <init> : 
	method hasMoreMisfiredTriggers : 
	method getProcessedMisfiredTriggerCount : 
	method getEarliestNewTime : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.DailyTimeIntervalTrigger
	method getRepeatIntervalUnit : 
	method getRepeatCount : 
	method getRepeatInterval : 
	method getStartTimeOfDay : 
	method getEndTimeOfDay : 
	method getDaysOfWeek : 
	method getTimesTriggered : 
	method getTriggerBuilder : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler
	method <init> : 
	method getLog : 
	method invoke : 
	method setAutoCommit : 
	method setTransactionIsolation : 
	method getWrappedConnection : 
	method restoreOriginalAtributes : 
	method close : 
 ====================================== 
** CLASS org.quartz.integrations.tests.QTZ336_MissSchedulingChangeSignalTest$CollectDuractionBetweenFireTimesJob
	method <init> : 
	method execute : 
	method getDurations : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.PointbaseDelegate
	method <init> : 
	method insertJobDetail : 
	method updateJobDetail : 
	method insertTrigger : 
	method updateTrigger : 
	method updateJobData : 
	method insertCalendar : 
	method updateCalendar : 
	method getObjectFromBlob : 
	method getJobDataFromBlob : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerProperties
	method <init> : 
	method getString1 : 
	method setString1 : 
	method getString2 : 
	method setString2 : 
	method getString3 : 
	method setString3 : 
	method getInt1 : 
	method setInt1 : 
	method getInt2 : 
	method setInt2 : 
	method getLong1 : 
	method setLong1 : 
	method getLong2 : 
	method setLong2 : 
	method getDecimal1 : 
	method setDecimal1 : 
	method getDecimal2 : 
	method setDecimal2 : 
	method isBoolean1 : 
	method setBoolean1 : 
	method isBoolean2 : 
	method setBoolean2 : 
 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$StringOperatorName$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$StringOperatorName$2
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$StringOperatorName$3
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$StringOperatorName$4
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$StringOperatorName$5
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.quartz.spi.ThreadPool
	method runInThread : 
	method blockForAvailableThreads : 
	method initialize : 
	method shutdown : 
	method getPoolSize : 
	method setInstanceId : 
	method setInstanceName : 
 ====================================== 
** CLASS org.quartz.utils.ClassUtilsTest$ExtendedJob
	method <init> : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.JobDataMap
	method <init> : 
	method <init> : 
	method putAsString : 
	method putAsString : 
	method putAsString : 
	method putAsString : 
	method putAsString : 
	method putAsString : 
	method putAsString : 
	method putAsString : 
	method putAsString : 
	method putAsString : 
	method putAsString : 
	method putAsString : 
	method getIntFromString : 
	method getIntValue : 
	method getIntegerFromString : 
	method getBooleanValueFromString : 
	method getBooleanValue : 
	method getBooleanFromString : 
	method getCharFromString : 
	method getCharacterFromString : 
	method getDoubleValueFromString : 
	method getDoubleValue : 
	method getDoubleFromString : 
	method getFloatValueFromString : 
	method getFloatValue : 
	method getFloatFromString : 
	method getLongValueFromString : 
	method getLongValue : 
	method getLongFromString : 
 ====================================== 
** CLASS org.quartz.impl.calendar.BaseCalendar
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method clone : 
	method setBaseCalendar : 
	method getBaseCalendar : 
	method getDescription : 
	method setDescription : 
	method getTimeZone : 
	method setTimeZone : 
	method isTimeIncluded : 
	method getNextIncludedTime : 
	method createJavaCalendar : 
	method createJavaCalendar : 
	method getStartOfDayJavaCalendar : 
	method getEndOfDayJavaCalendar : 
 ====================================== 
** CLASS org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test
	method <init> : 
	method initialize : 
	method checkOldTriggerGetsFired : 
Unit: r1 = staticinvoke <org.quartz.integrations.tests.JdbcQuartzDerbyUtilities: java.math.BigDecimal timesTriggered(java.lang.String,java.lang.String)>("trigger1", "group1")
Unit: $r2 = <java.math.BigDecimal: java.math.BigDecimal ZERO>
Unit: return
Unit: $r4 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher not(org.hamcrest.Matcher)>($r3)
Unit: r0 := @this: org.quartz.integrations.tests.QTZ283_IgnoreMisfirePolicyJdbcStore_Test
Unit: $r3 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($r2)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>("The old trigger has never been fired, even if the policy is ignore", r1, $r4)
	method shutdownDb : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.TriggerKey
	method <init> : 
	method <init> : 
	method triggerKey : 
	method triggerKey : 
 ====================================== 
** CLASS org.quartz.listeners.JobChainingJobListener
	method <init> : 
	method getName : 
	method addJobChainLink : 
	method jobWasExecuted : 
 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest$TestStatefulJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method getStartTime : 
	method setStartTime : 
	method getEndTime : 
	method setEndTime : 
	method getRepeatIntervalUnit : 
	method setRepeatIntervalUnit : 
	method getRepeatInterval : 
	method setRepeatInterval : 
	method getTimesTriggered : 
	method setTimesTriggered : 
	method validateMisfireInstruction : 
	method updateAfterMisfire : 
	method triggered : 
	method updateWithNewCalendar : 
	method computeFirstFireTime : 
	method createCalendarTime : 
	method getNextFireTime : 
	method getPreviousFireTime : 
	method setNextFireTime : 
	method setPreviousFireTime : 
	method getFireTimeAfter : 
	method isSameDay : 
	method advanceToNextDayOfWeekIfNecessary : 
	method getFinalFireTime : 
	method mayFireAgain : 
	method validate : 
	method getDaysOfWeek : 
	method setDaysOfWeek : 
	method getStartTimeOfDay : 
	method setStartTimeOfDay : 
	method getEndTimeOfDay : 
	method setEndTimeOfDay : 
	method getScheduleBuilder : 
	method hasAdditionalProperties : 
	method getRepeatCount : 
	method setRepeatCount : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.integrations.tests.JobDataMapStorageTest
	method <init> : 
	method testJobDataMapDirtyFlag : 
Unit: $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r12 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("0 0 0 * * ?")
Unit: $z1 = virtualinvoke r6.<org.quartz.JobDataMap: boolean isDirty()>()
Unit: r6 = interfaceinvoke r5.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: r1 = virtualinvoke $r9.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: interfaceinvoke $r16.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r1, r2)
Unit: $r24 = staticinvoke <org.quartz.TriggerKey: org.quartz.TriggerKey triggerKey(java.lang.String)>("test")
Unit: r5 = interfaceinvoke $r23.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r24)
Unit: $r7 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/integrations/tests/HelloJob;")
Unit: $r18 = r0.<org.quartz.integrations.tests.JobDataMapStorageTest: org.quartz.Scheduler scheduler>
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r20, $r22)
Unit: $r11 = virtualinvoke $r10.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: $r16 = r0.<org.quartz.integrations.tests.JobDataMapStorageTest: org.quartz.Scheduler scheduler>
Unit: $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r26)
Unit: $z0 = virtualinvoke r4.<org.quartz.JobDataMap: boolean isDirty()>()
Unit: $r22 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r21)
Unit: r4 = interfaceinvoke r3.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>()
Unit: return
Unit: $r10 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r25, $r27)
Unit: $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r13 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r12)
Unit: r3 = interfaceinvoke $r18.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r19)
Unit: r0 := @this: org.quartz.integrations.tests.JobDataMapStorageTest
Unit: $r19 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String)>("test")
Unit: $r9 = virtualinvoke $r8.<org.quartz.JobBuilder: org.quartz.JobBuilder usingJobData(java.lang.String,java.lang.String)>("jfoo", "bar")
Unit: $r8 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: $r14 = virtualinvoke $r13.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder usingJobData(java.lang.String,java.lang.String)>("tfoo", "bar")
Unit: $r23 = r0.<org.quartz.integrations.tests.JobDataMapStorageTest: org.quartz.Scheduler scheduler>
Unit: r2 = (org.quartz.CronTrigger) $r15
Unit: $r15 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
 ====================================== 
** CLASS org.quartz.impl.triggers.AbstractTrigger
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method getName : 
	method setName : 
	method getGroup : 
	method setGroup : 
	method setKey : 
	method getJobName : 
	method setJobName : 
	method getJobGroup : 
	method setJobGroup : 
	method setJobKey : 
	method getFullName : 
	method getKey : 
	method getJobKey : 
	method getFullJobName : 
	method getDescription : 
	method setDescription : 
	method setCalendarName : 
	method getCalendarName : 
	method getJobDataMap : 
	method setJobDataMap : 
	method getPriority : 
	method setPriority : 
	method triggered : 
	method computeFirstFireTime : 
	method executionComplete : 
	method mayFireAgain : 
	method getStartTime : 
	method setStartTime : 
	method setEndTime : 
	method getEndTime : 
	method getNextFireTime : 
	method getPreviousFireTime : 
	method getFireTimeAfter : 
	method getFinalFireTime : 
	method setMisfireInstruction : 
	method validateMisfireInstruction : 
	method getMisfireInstruction : 
	method updateAfterMisfire : 
	method updateWithNewCalendar : 
	method validate : 
	method setFireInstanceId : 
	method getFireInstanceId : 
	method toString : 
	method compareTo : 
	method equals : 
	method hashCode : 
	method clone : 
	method getTriggerBuilder : 
	method getScheduleBuilder : 
	method compareTo : 
 ====================================== 
** CLASS org.quartz.Trigger
	method getKey : 
	method getJobKey : 
	method getDescription : 
	method getCalendarName : 
	method getJobDataMap : 
	method getPriority : 
	method mayFireAgain : 
	method getStartTime : 
	method getEndTime : 
	method getNextFireTime : 
	method getPreviousFireTime : 
	method getFireTimeAfter : 
	method getFinalFireTime : 
	method getMisfireInstruction : 
	method getTriggerBuilder : 
	method getScheduleBuilder : 
	method equals : 
	method compareTo : 
 ====================================== 
** CLASS org.quartz.impl.matchers.StringMatcher$1
 ====================================== 
** CLASS org.quartz.SimpleScheduleBuilder
	method <init> : 
	method simpleSchedule : 
	method repeatMinutelyForever : 
	method repeatMinutelyForever : 
	method repeatSecondlyForever : 
	method repeatSecondlyForever : 
	method repeatHourlyForever : 
	method repeatHourlyForever : 
	method repeatMinutelyForTotalCount : 
	method repeatMinutelyForTotalCount : 
	method repeatSecondlyForTotalCount : 
	method repeatSecondlyForTotalCount : 
	method repeatHourlyForTotalCount : 
	method repeatHourlyForTotalCount : 
	method build : 
	method withIntervalInMilliseconds : 
	method withIntervalInSeconds : 
	method withIntervalInMinutes : 
	method withIntervalInHours : 
	method withRepeatCount : 
	method repeatForever : 
	method withMisfireHandlingInstructionIgnoreMisfires : 
	method withMisfireHandlingInstructionFireNow : 
	method withMisfireHandlingInstructionNextWithExistingCount : 
	method withMisfireHandlingInstructionNextWithRemainingCount : 
	method withMisfireHandlingInstructionNowWithExistingCount : 
	method withMisfireHandlingInstructionNowWithRemainingCount : 
 ====================================== 
** CLASS org.quartz.impl.SchedulerDetailsSetterTest$MyThreadPool
	method <init> : 
	method initialize : 
	method setInstanceId : 
	method setInstanceName : 
 ====================================== 
** CLASS org.quartz.AbstractSchedulerTest$UncleanShutdownJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.SerializationTestSupport
	method <init> : 
	method getTargetObject : 
	method getVersions : 
	method verifyMatch : 
	method testSerialization : 
	method deserialize : 
	method writeJobDataFile : 
	method getSerializedFileName : 
 ====================================== 
** CLASS org.quartz.TriggerBuilderTest$TestStatefulJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.spi.JobFactory
	method newJob : 
 ====================================== 
** CLASS org.quartz.core.jmx.JobDataMapSupport
	method <init> : 
	method newJobDataMap : 
	method newJobDataMap : 
	method toCompositeData : 
	method toTabularData : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.AbstractJobStoreTest
	method <init> : 
	method setUp : 
	method tearDown : 
	method createJobStore : 
	method destroyJobStore : 
	method testAcquireNextTrigger : 
	method testAcquireNextTriggerBatch : 
	method testTriggerStates : 
	method testStoreTriggerReplacesTrigger : 
	method testPauseJobGroupPausesNewJob : 
	method testStoreAndRetrieveJobs : 
	method testStoreAndRetriveTriggers : 
	method testMatchers : 
	method testAcquireTriggers : 
	method testAcquireTriggersInBatch : 
	method testResetErrorTrigger : 
 ====================================== 
** CLASS org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
	method <init> : 
	method testNormalExample : 
Unit: r3 = $r7
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(10, 24, 0, 16, 1, 2011)
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(11, 0, 0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(72)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: return
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: r2 = $r6
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: r4 = $r8
Unit: $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(47)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
	method testQuartzCalendarExclusion : 
Unit: r2 = $r5
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r7)
Unit: r3 = $r8
Unit: $i0 = interfaceinvoke r4.<java.util.List: int size()>()
Unit: $r10 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>($r6)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r5 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: specialinvoke $r8.<org.quartz.impl.calendar.CronCalendar: void <init>(java.lang.String)>("* * 9-12 * * ?")
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int)>(8, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(13, 0, 0, 1, 1, 2011)
Unit: specialinvoke $r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: return
Unit: $r8 = new org.quartz.impl.calendar.CronCalendar
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, r3, 48)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r7 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(23, 0, 0, 4, 1, 2011)
Unit: $r12 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(1)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
	method testValidateTimeOfDayOrder : 
Unit: specialinvoke $r4.<org.quartz.TimeOfDay: void <init>(int,int,int)>(12, 0, 0)
Unit: $r3 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>($r4)
Unit: r1 = $r3
Unit: staticinvoke <org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: void fail(java.lang.String)>("Trigger should be invalidate when time of day is not in order.")
Unit: goto [?= return]
Unit: specialinvoke $r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: r2 = $r6
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r5 = new org.quartz.TimeOfDay
Unit: $r6 := @caughtexception
Unit: $r4 = new org.quartz.TimeOfDay
Unit: specialinvoke $r5.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>($r5)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void validate()>()
Unit: return
	method testValidateInterval : 
Unit: $r3 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String)>("test")
Unit: $r4 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(90000)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r4)
Unit: return
Unit: r15 = $r11
Unit: $r10 := @caughtexception
Unit: staticinvoke <org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: void fail(java.lang.String)>("Trigger should be invalidate when interval is greater than 24 hours.")
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setName(java.lang.String)>("test")
Unit: $r9 := @caughtexception
Unit: $r5 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: goto [?= $r5 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>]
Unit: $r11 := @caughtexception
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void validate()>()
Unit: r18 = $r9
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(25)
Unit: r1 = $r2
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r5)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void validate()>()
Unit: goto [?= return]
Unit: $r6 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>
Unit: r14 = $r12
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(1500)
Unit: $r7 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(0)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void validate()>()
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: staticinvoke <org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: void fail(java.lang.String)>("Trigger should be invalidate when interval is greater than 24 hours.")
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void validate()>()
Unit: staticinvoke <org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: void fail(java.lang.String)>("Trigger should be invalidate when interval is greater than 24 hours.")
Unit: r16 = $r10
Unit: goto [?= $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>]
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void validate()>()
Unit: r17 = $r13
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r7)
Unit: staticinvoke <org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: void fail(java.lang.String)>("Trigger should be invalidate when interval unit > HOUR.")
Unit: $r2 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setGroup(java.lang.String)>("test")
Unit: staticinvoke <org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: void fail(java.lang.String)>("Trigger should be invalidate when interval is zero.")
Unit: specialinvoke $r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setJobKey(org.quartz.JobKey)>($r3)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: goto [?= $r7 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit DAY>]
Unit: virtualinvoke r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r6)
Unit: $r13 := @caughtexception
Unit: goto [?= $r6 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>]
Unit: $r12 := @caughtexception
	method testStartTimeWithoutStartTimeOfDay : 
Unit: $i0 = interfaceinvoke r3.<java.util.List: int size()>()
Unit: $r4 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(47)
Unit: specialinvoke $r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7)
Unit: $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: $r8 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(23, 0, 0, 2, 1, 2011)
Unit: r3 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r2, null, 48)
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)
Unit: $r6 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: r2 = $r4
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: return
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r5 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: virtualinvoke r2.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r5)
	method testEndTimeWithoutEndTimeOfDay : 
Unit: r3 = $r5
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r6)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r6 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(22, 0, 0, 2, 1, 2011)
Unit: $r5 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $i0 = interfaceinvoke r4.<java.util.List: int size()>()
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: specialinvoke $r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r3, null, 48)
Unit: $r7 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: return
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTime(java.util.Date)>(r2)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(47, $i0)
Unit: $r8 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r10 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(46)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(22, 0, 0, 2, 1, 2011)
	method testStartTimeBeforeStartTimeOfDay : 
Unit: specialinvoke $r6.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: specialinvoke $r5.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $r7 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(23, 0, 0, 3, 1, 2011)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r3, null, 48)
Unit: $r8 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: return
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r5 = new org.quartz.TimeOfDay
Unit: $r6 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0)
Unit: $i0 = interfaceinvoke r4.<java.util.List: int size()>()
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r7)
Unit: r3 = $r6
Unit: r2 = $r5
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
	method testStartTimeBeforeStartTimeOfDayOnInvalidDay : 
Unit: specialinvoke $r8.<java.util.HashSet: void <init>()>()
Unit: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r13)
Unit: $r17 = virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r16)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: r2 = $r6
Unit: $r14 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r16 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(6, 0, 0, 22, 5, 2010)
Unit: $r18 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 3, 1, 2011)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: r4 = $r8
Unit: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r12)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: $r20 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(23, 0, 0, 5, 1, 2011)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setDaysOfWeek(java.util.Set)>(r4)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r19)
Unit: r3 = $r7
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r3, null, 48)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r7 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r19 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r10)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r14)
Unit: $r8 = new java.util.HashSet
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 3, 1, 2011)
Unit: $r21 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(47)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21)
Unit: specialinvoke $r7.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r11)
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r9)
Unit: return
	method testStartTimeAfterStartTimeOfDay : 
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r7 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r3 = $r6
Unit: return
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r7)
Unit: $r5 = new org.quartz.TimeOfDay
Unit: r2 = $r5
Unit: $r6 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)
Unit: r4 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r3, null, 48)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 23, 0, 1, 1, 2011)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 0, 0, 4, 1, 2011)
Unit: $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r8 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(10, 0, 0, 1, 1, 2011)
Unit: $i0 = interfaceinvoke r4.<java.util.List: int size()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: specialinvoke $r6.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: specialinvoke $r5.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
	method testEndTimeBeforeEndTimeOfDay : 
Unit: specialinvoke $r7.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r6 = new org.quartz.TimeOfDay
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $r14 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(34)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(35, $i0)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(16, 0, 0, 2, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: r3 = $r6
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: $r12 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(17)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r10 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: r4 = $r7
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: return
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTime(java.util.Date)>(r2)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(16, 0, 0, 2, 1, 2011)
Unit: $r7 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
	method testEndTimeAfterEndTimeOfDay : 
Unit: r3 = $r6
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTime(java.util.Date)>(r2)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 2, 1, 2011)
Unit: $r14 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(35)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: $r10 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: specialinvoke $r7.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: return
Unit: r4 = $r7
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(18, 0, 0, 2, 1, 2011)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r7 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r12 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(17)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(36, $i0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
	method testTimeOfDayWithStartTime : 
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: r4 = $r8
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: r3 = $r7
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $r14 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(15, 0, 0, 5, 1, 2011)
Unit: $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 1, 1, 2011)
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: return
Unit: $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(9)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: r2 = $r6
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
	method testTimeOfDayWithEndTime : 
Unit: specialinvoke $r9.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: return
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: $r8 = new org.quartz.TimeOfDay
Unit: r4 = $r8
Unit: r3 = $r7
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 1, 1, 2011)
Unit: specialinvoke $r8.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTime(java.util.Date)>(r2)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: r5 = $r9
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r10)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 3, 1, 2011)
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 4, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(30, $i0)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: $r9 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r14 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(9)
Unit: $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(29)
Unit: $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
	method testTimeOfDayWithEndTime2 : 
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 23, 0)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 23, 0, 1, 1, 2011)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(23, 59, 59)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: r3 = $r7
Unit: $r6 = new org.quartz.TimeOfDay
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(23, 23, 0, 3, 1, 2011)
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r7 = new org.quartz.TimeOfDay
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: r2 = $r6
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: return
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: r4 = $r8
Unit: $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(47)
	method testAllDaysOfTheWeek : 
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(15, 0, 0, 5, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: r3 = $r7
Unit: r4 = $r8
Unit: $r8 = new org.quartz.TimeOfDay
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: specialinvoke $r8.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r2)
Unit: $r9 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: r5 = $r9
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setDaysOfWeek(java.util.Set)>(r1)
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(17, 0, 0, 1, 1, 2011)
Unit: $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: r1 = <org.quartz.DailyTimeIntervalScheduleBuilder: java.util.Set ALL_DAYS_OF_THE_WEEK>
Unit: specialinvoke $r9.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r14 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(9)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r10)
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: return
	method testMonThroughFri : 
Unit: $i2 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r18)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: r4 = $r8
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r22 = (java.util.Date) $r21
Unit: r5 = $r9
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i2)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: r1 = <org.quartz.DailyTimeIntervalScheduleBuilder: java.util.Set MONDAY_THROUGH_FRIDAY>
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setDaysOfWeek(java.util.Set)>(r1)
Unit: $i1 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r14)
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i1)
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: $r9 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: specialinvoke $r8.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r2)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: $r18 = (java.util.Date) $r17
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 3, 1, 2011)
Unit: $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(10)
Unit: $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: specialinvoke $r9.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $i3 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r22)
Unit: $r8 = new org.quartz.TimeOfDay
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 4, 1, 2011)
Unit: return
Unit: r3 = $r7
Unit: $r13 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r21 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r10)
Unit: $r17 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(10)
Unit: $r20 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: $r19 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(15, 0, 0, 7, 1, 2011)
Unit: $r14 = (java.util.Date) $r13
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r20)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(6, $i3)
	method testSatAndSun : 
Unit: $r9 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: specialinvoke $r9.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: r3 = $r7
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r20)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $r22 = (java.util.Date) $r21
Unit: $r18 = (java.util.Date) $r17
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(7, $i1)
Unit: $r20 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 2, 1, 2011)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r19 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(15, 0, 0, 15, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: $r14 = (java.util.Date) $r13
Unit: return
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r21 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: r1 = <org.quartz.DailyTimeIntervalScheduleBuilder: java.util.Set SATURDAY_AND_SUNDAY>
Unit: $i1 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r14)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(7, $i3)
Unit: r5 = $r9
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r10)
Unit: $r17 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(10)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: $i2 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r18)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: $i3 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r22)
Unit: $r8 = new org.quartz.TimeOfDay
Unit: $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(10)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r2)
Unit: r4 = $r8
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: $r13 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: specialinvoke $r8.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setDaysOfWeek(java.util.Set)>(r1)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
	method testMonOnly : 
Unit: $r17 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 10, 1, 2011)
Unit: $r18 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(10)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22)
Unit: $r22 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18)
Unit: $r9 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: specialinvoke $r11.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i2)
Unit: r3 = $r9
Unit: specialinvoke $r10.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i3)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: $i3 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r24)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: return
Unit: r4 = $r10
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setDaysOfWeek(java.util.Set)>(r1)
Unit: $i2 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r20)
Unit: $r11 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r10 = new org.quartz.TimeOfDay
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r2)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: $r12 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r23 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: $r24 = (java.util.Date) $r23
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 3, 1, 2011)
Unit: $r20 = (java.util.Date) $r19
Unit: $r15 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r12)
Unit: $r19 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(10)
Unit: $r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(15, 0, 0, 31, 1, 2011)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(60)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i1)
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: specialinvoke $r7.<java.util.HashSet: void <init>()>()
Unit: r5 = $r11
Unit: $r7 = new java.util.HashSet
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: $i1 = specialinvoke r0.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest: int getDayOfWeek(java.util.Date)>($r16)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r16 = (java.util.Date) $r15
Unit: $r14 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: specialinvoke $r9.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: r1 = $r7
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r8)
	method getDayOfWeek : 
	method testTimeOfDayWithEndTimeOddInterval : 
Unit: $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(17)
Unit: r5 = $r9
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 55, 0, 3, 1, 2011)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(18, $i0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 55, 0, 1, 1, 2011)
Unit: r4 = $r8
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: $r8 = new org.quartz.TimeOfDay
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r10)
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: $r14 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(5)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 4, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: specialinvoke $r8.<org.quartz.TimeOfDay: void <init>(int,int,int)>(10, 0, 0)
Unit: specialinvoke $r9.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: return
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r7 = new org.quartz.TimeOfDay
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(23)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTime(java.util.Date)>(r2)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r9 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: r3 = $r7
	method testHourInterval : 
Unit: r5 = $r9
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: specialinvoke $r9.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 1, 15, 1, 1, 2011)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 1, 15)
Unit: $r10 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: $r7 = new org.quartz.TimeOfDay
Unit: $r9 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: r3 = $r7
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r4)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(12, 1, 15, 10, 1, 2011)
Unit: r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(13, 0, 0, 15, 1, 2011)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r10)
Unit: $i0 = interfaceinvoke r6.<java.util.List: int size()>()
Unit: specialinvoke $r8.<org.quartz.TimeOfDay: void <init>(int,int,int)>(16, 1, 15)
Unit: r4 = $r8
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTime(java.util.Date)>(r2)
Unit: virtualinvoke r5.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(2)
Unit: $r8 = new org.quartz.TimeOfDay
Unit: r6 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r5, null, 48)
Unit: $r14 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(47)
Unit: return
	method testSecondInterval : 
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 2)
Unit: $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(47)
Unit: r3 = $r7
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit SECOND>
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 2, 1, 1, 2011)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 56, 26, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(13, 30, 0)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(72)
Unit: return
Unit: $r6 = new org.quartz.TimeOfDay
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: r2 = $r6
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: r4 = $r8
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
	method testRepeatCountInf : 
Unit: $r7 = new org.quartz.TimeOfDay
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: r2 = $r6
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(11, 0, 0)
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(10, 24, 0, 16, 1, 2011)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(72)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: r3 = $r7
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatCount(int)>(-1)
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: return
Unit: $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(47)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: r4 = $r8
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(48, $i0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
	method testRepeatCount : 
Unit: $r7 = new org.quartz.TimeOfDay
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: r4 = $r8
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: r2 = $r6
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(11, 0, 0)
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 12, 0, 3, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(8, $i0)
Unit: $r13 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(7)
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: r3 = $r7
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatCount(int)>(7)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(72)
Unit: return
	method testRepeatCount0 : 
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: r3 = $r7
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r7 = new org.quartz.TimeOfDay
Unit: $r9 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit MINUTE>
Unit: return
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatCount(int)>(0)
Unit: r5 = staticinvoke <org.quartz.TriggerUtils: java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)>(r4, null, 48)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $r8 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: r2 = $r6
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r9)
Unit: r4 = $r8
Unit: specialinvoke $r7.<org.quartz.TimeOfDay: void <init>(int,int,int)>(11, 0, 0)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(72)
Unit: $i0 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: specialinvoke $r8.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i0)
	method testGetFireTime : 
Unit: $r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(10, 0, 0, 1, 1, 2011)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(13, 0, 0)
Unit: $r19 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r23)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r20)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)
Unit: $r20 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r19)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: $r18 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 0, 0, 1, 1, 2011)
Unit: $r27 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 2, 1, 2011)
Unit: $r16 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(7, 59, 59, 1, 1, 2011)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: r4 = $r7
Unit: $r14 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r13)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r14)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r26)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(7, 0, 0, 1, 1, 2011)
Unit: $r5 = new org.quartz.TimeOfDay
Unit: $r23 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r22)
Unit: specialinvoke $r5.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: specialinvoke $r7.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r11)
Unit: $r7 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: r3 = $r6
Unit: r2 = $r5
Unit: $r29 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r28)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r22 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 0, 0, 1, 1, 2011)
Unit: $r25 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(12, 59, 59, 1, 1, 2011)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: $r26 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r25)
Unit: return
Unit: $r28 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(13, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: $r11 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r10)
Unit: $r24 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(13, 0, 0, 1, 1, 2011)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r29)
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: $r17 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r16)
	method testGetFireTimeWithDateBeforeStartTime : 
Unit: $r19 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2011)
Unit: $r16 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(7, 59, 59, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: $r11 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r10)
Unit: $r27 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: specialinvoke $r7.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r20)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r33, $r35)
Unit: $r31 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2012)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2012)
Unit: $r24 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: $r25 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(12, 59, 59, 1, 1, 2011)
Unit: $r26 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r25)
Unit: $r28 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(13, 0, 0, 1, 1, 2011)
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(13, 0, 0)
Unit: $r33 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 2, 1, 2012)
Unit: specialinvoke $r5.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: r2 = $r5
Unit: r4 = $r7
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r23)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r26)
Unit: $r5 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r29)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: return
Unit: r3 = $r6
Unit: $r12 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: $r22 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(9, 0, 0, 1, 1, 2011)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2011)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r32)
Unit: $r17 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r16)
Unit: $r21 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: $r13 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(7, 0, 0, 1, 1, 2011)
Unit: $r15 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: $r23 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r22)
Unit: $r30 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: $r7 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r32 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r31)
Unit: $r34 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(13, 0, 0, 1, 1, 2012)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: $r20 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r19)
Unit: $r35 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r34)
Unit: $r29 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r28)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r11)
Unit: $r14 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r13)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r14)
Unit: $r18 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
	method testGetFireTimeWhenStartTimeAndTimeOfDayIsSame : 
Unit: $r11 = virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r10)
Unit: $r7 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: return
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTime(java.util.Date)>(r1)
Unit: $r6 = new org.quartz.TimeOfDay
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatInterval(int)>(1)
Unit: $r5 = new org.quartz.TimeOfDay
Unit: $r9 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r11)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setEndTimeOfDay(org.quartz.TimeOfDay)>(r3)
Unit: r4 = $r7
Unit: r3 = $r6
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setRepeatIntervalUnit(org.quartz.DateBuilder$IntervalUnit)>($r8)
Unit: specialinvoke $r5.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: r2 = $r5
Unit: virtualinvoke r4.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void setStartTimeOfDay(org.quartz.TimeOfDay)>(r2)
Unit: specialinvoke $r7.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>()>()
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(0, 0, 0, 1, 1, 2012)
Unit: $r8 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: specialinvoke $r6.<org.quartz.TimeOfDay: void <init>(int,int,int)>(13, 0, 0)
	method testExtraConstructors : 
Unit: $r8 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getJobName()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("triggerName", $r6)
Unit: $r22 = new org.quartz.TimeOfDay
Unit: $r21 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("jobName", $r8)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r35, $r36)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: r0 := @this: org.quartz.impl.triggers.DailyTimeIntervalTriggerImplTest
Unit: $r9 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getJobGroup()>()
Unit: $r15 = new org.quartz.TimeOfDay
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r30)
Unit: $r32 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.TimeOfDay getStartTimeOfDay()>()
Unit: $r28 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: $r31 = new org.quartz.TimeOfDay
Unit: specialinvoke $r21.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: specialinvoke $r19.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,org.quartz.TimeOfDay,org.quartz.TimeOfDay,org.quartz.DateBuilder$IntervalUnit,int)>("triggerName", "triggerGroup", $r20, null, $r21, $r22, $r23, 1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>(null, $r26)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("triggerGroup", $r25)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i1)
Unit: $r11 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getStartTime()>()
Unit: $r25 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getGroup()>()
Unit: return
Unit: specialinvoke $r1.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,java.util.Date,org.quartz.TimeOfDay,org.quartz.TimeOfDay,org.quartz.DateBuilder$IntervalUnit,int)>("triggerName", "triggerGroup", "jobName", "jobGroup", $r2, null, $r3, $r4, $r5, 1)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r33, $r34)
Unit: $r4 = new org.quartz.TimeOfDay
Unit: specialinvoke $r15.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r31, $r32)
Unit: r37 = $r1
Unit: r38 = $r19
Unit: $r33 = new org.quartz.TimeOfDay
Unit: specialinvoke $r13.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $r27 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getJobGroup()>()
Unit: $r18 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: $r23 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: $r6 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getName()>()
Unit: $r20 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: $r14 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.TimeOfDay getStartTimeOfDay()>()
Unit: $r16 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.TimeOfDay getEndTimeOfDay()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: $r13 = new org.quartz.TimeOfDay
Unit: $r3 = new org.quartz.TimeOfDay
Unit: $r17 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: specialinvoke $r4.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i0)
Unit: specialinvoke $r3.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $r19 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r29 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getStartTime()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("triggerName", $r24)
Unit: $r36 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.DateBuilder$IntervalUnit getRepeatIntervalUnit()>()
Unit: specialinvoke $r33.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: $i0 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: int getRepeatInterval()>()
Unit: $i1 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: int getRepeatInterval()>()
Unit: $r26 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getJobName()>()
Unit: $r35 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: $r1 = new org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl
Unit: $r2 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(8, 0, 0, 1, 1, 2012)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("DEFAULT", $r27)
Unit: specialinvoke $r22.<org.quartz.TimeOfDay: void <init>(int,int,int)>(17, 0, 0)
Unit: specialinvoke $r31.<org.quartz.TimeOfDay: void <init>(int,int,int)>(8, 0, 0)
Unit: $r5 = <org.quartz.DateBuilder$IntervalUnit: org.quartz.DateBuilder$IntervalUnit HOUR>
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("jobGroup", $r9)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: $r34 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: org.quartz.TimeOfDay getEndTimeOfDay()>()
Unit: $r7 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getGroup()>()
Unit: $r12 = virtualinvoke r37.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getEndTime()>()
Unit: $r24 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.lang.String getName()>()
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("triggerGroup", $r7)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18)
Unit: $r30 = virtualinvoke r38.<org.quartz.impl.triggers.DailyTimeIntervalTriggerImpl: java.util.Date getEndTime()>()
 ====================================== 
** CLASS org.quartz.impl.calendar.DailyCalendar
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method clone : 
	method isTimeIncluded : 
	method getNextIncludedTime : 
	method getTimeRangeStartingTimeInMillis : 
	method getTimeRangeEndingTimeInMillis : 
	method getInvertTimeRange : 
	method setInvertTimeRange : 
	method toString : 
	method split : 
	method setTimeRange : 
	method setTimeRange : 
	method setTimeRange : 
	method setTimeRange : 
	method validate : 
 ====================================== 
** CLASS org.quartz.core.jmx.JobExecutionContextSupport
	method <init> : 
	method toCompositeData : 
	method toTabularData : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.SchedulerFactory
	method getScheduler : 
	method getScheduler : 
	method getAllSchedulers : 
 ====================================== 
** CLASS org.quartz.utils.ClassUtilsTest
	method <init> : 
	method testIsAnnotationPresentOnSuperClass : 
Unit: $z4 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$ReallyExtendedJob;", class "Lorg/quartz/DisallowConcurrentExecution;")
Unit: staticinvoke <org.quartz.utils.ClassUtilsTest: void assertTrue(boolean)>($z4)
Unit: staticinvoke <org.quartz.utils.ClassUtilsTest: void assertTrue(boolean)>($z0)
Unit: $z3 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$ExtendedJob;", class "Lorg/quartz/PersistJobDataAfterExecution;")
Unit: staticinvoke <org.quartz.utils.ClassUtilsTest: void assertTrue(boolean)>($z2)
Unit: r0 := @this: org.quartz.utils.ClassUtilsTest
Unit: $z2 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$ExtendedJob;", class "Lorg/quartz/DisallowConcurrentExecution;")
Unit: $z0 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$BaseJob;", class "Lorg/quartz/DisallowConcurrentExecution;")
Unit: staticinvoke <org.quartz.utils.ClassUtilsTest: void assertFalse(boolean)>($z3)
Unit: $z1 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$BaseJob;", class "Lorg/quartz/PersistJobDataAfterExecution;")
Unit: staticinvoke <org.quartz.utils.ClassUtilsTest: void assertFalse(boolean)>($z1)
Unit: $z5 = staticinvoke <org.quartz.utils.ClassUtils: boolean isAnnotationPresent(java.lang.Class,java.lang.Class)>(class "Lorg/quartz/utils/ClassUtilsTest$ReallyExtendedJob;", class "Lorg/quartz/PersistJobDataAfterExecution;")
Unit: staticinvoke <org.quartz.utils.ClassUtilsTest: void assertTrue(boolean)>($z5)
Unit: return
 ====================================== 
** CLASS org.quartz.impl.MockSQLException
	method <init> : 
 ====================================== 
** CLASS org.quartz.utils.C3p0PoolingConnectionProvider
	method <init> : 
	method <init> : 
	method initialize : 
	method getDataSource : 
	method getConnection : 
	method shutdown : 
	method initialize : 
	method getDataSource : 
 ====================================== 
** CLASS org.quartz.simpl.InitThreadContextClassLoadHelper
	method <init> : 
	method initialize : 
	method loadClass : 
	method loadClass : 
	method getResource : 
	method getResourceAsStream : 
	method getClassLoader : 
 ====================================== 
** CLASS org.quartz.core.ListenerManagerImpl
	method <init> : 
	method addJobListener : 
	method addJobListener : 
	method addJobListener : 
	method addJobListener : 
	method addJobListenerMatcher : 
	method removeJobListenerMatcher : 
	method getJobListenerMatchers : 
	method setJobListenerMatchers : 
	method removeJobListener : 
	method getJobListeners : 
	method getJobListener : 
	method addTriggerListener : 
	method addTriggerListener : 
	method addTriggerListener : 
	method addTriggerListener : 
	method addTriggerListenerMatcher : 
	method removeTriggerListenerMatcher : 
	method getTriggerListenerMatchers : 
	method setTriggerListenerMatchers : 
	method removeTriggerListener : 
	method getTriggerListeners : 
	method getTriggerListener : 
	method addSchedulerListener : 
	method removeSchedulerListener : 
	method getSchedulerListeners : 
 ====================================== 
** CLASS org.quartz.integrations.tests.JobClassNotFoundExceptionErrorsTriggersTest$GoodJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.simpl.PropertySettingJobFactoryTest$TestBean
	method <init> : 
	method getBooleanValue : 
	method setBooleanValue : 
	method getDoubleValue : 
	method setDoubleValue : 
	method getFloatValue : 
	method setFloatValue : 
	method getIntValue : 
	method setIntValue : 
	method getLongValue : 
	method setLongValue : 
	method getMapValue : 
	method setMapValue : 
	method getStringValue : 
	method setStringValue : 
	method getByteValue : 
	method setByteValue : 
	method getCharValue : 
	method setCharValue : 
	method getShortValue : 
	method setShortValue : 
	method <init> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.MSSQLDelegate
	method <init> : 
	method getObjectFromBlob : 
	method getJobDataFromBlob : 
 ====================================== 
** CLASS org.quartz.impl.RemoteMBeanScheduler
	method <init> : 
	method getSchedulerObjectName : 
	method setSchedulerObjectName : 
	method setSchedulerObjectName : 
	method initialize : 
	method getAttribute : 
	method getAttributes : 
	method invoke : 
	method getSchedulerName : 
	method getSchedulerInstanceId : 
	method getMetaData : 
	method getAttribute : 
	method getContext : 
	method start : 
	method startDelayed : 
	method standby : 
	method isStarted : 
	method isInStandbyMode : 
	method shutdown : 
	method shutdown : 
	method isShutdown : 
	method getCurrentlyExecutingJobs : 
	method scheduleJob : 
	method scheduleJob : 
	method addJob : 
	method addJob : 
	method deleteJob : 
	method unscheduleJob : 
	method deleteJobs : 
	method scheduleJobs : 
	method scheduleJob : 
	method unscheduleJobs : 
	method rescheduleJob : 
	method triggerJob : 
	method triggerJob : 
	method pauseTrigger : 
	method pauseTriggers : 
	method pauseJob : 
	method pauseJobs : 
	method resumeTrigger : 
	method resumeTriggers : 
	method resumeJob : 
	method resumeJobs : 
	method pauseAll : 
	method resumeAll : 
	method getJobGroupNames : 
	method getJobKeys : 
	method getTriggersOfJob : 
	method getTriggerGroupNames : 
	method getTriggerKeys : 
	method getJobDetail : 
	method getTrigger : 
	method checkExists : 
	method checkExists : 
	method clear : 
	method getTriggerState : 
	method resetTriggerFromErrorState : 
	method addCalendar : 
	method deleteCalendar : 
	method getCalendar : 
	method getCalendarNames : 
	method getPausedTriggerGroups : 
	method getListenerManager : 
	method interrupt : 
	method interrupt : 
	method setJobFactory : 
 ====================================== 
** CLASS org.quartz.core.jmx.JobDetailSupport
	method <init> : 
	method newJobDetail : 
	method newJobDetail : 
	method toCompositeData : 
	method toTabularData : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DeleteNonExistsJobTest$TestJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.simpl.RAMJobStore$1
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.core.QuartzScheduler_Stub
	method <clinit> : 
	method <init> : 
	method addCalendar : 
	method addJob : 
	method addJob : 
	method checkExists : 
	method checkExists : 
	method class$ : 
	method clear : 
	method deleteCalendar : 
	method deleteJob : 
	method deleteJobs : 
	method getCalendar : 
	method getCalendarNames : 
	method getCurrentlyExecutingJobs : 
	method getJobDetail : 
	method getJobGroupNames : 
	method getJobKeys : 
	method getJobStoreClass : 
	method getPausedTriggerGroups : 
	method getSchedulerContext : 
	method getSchedulerInstanceId : 
	method getSchedulerName : 
	method getThreadPoolClass : 
	method getThreadPoolSize : 
	method getTrigger : 
	method getTriggerGroupNames : 
	method getTriggerKeys : 
	method getTriggerState : 
	method getTriggersOfJob : 
	method getVersion : 
	method interrupt : 
	method interrupt : 
	method isClustered : 
	method isInStandbyMode : 
	method isShutdown : 
	method numJobsExecuted : 
	method pauseAll : 
	method pauseJob : 
	method pauseJobs : 
	method pauseTrigger : 
	method pauseTriggers : 
	method rescheduleJob : 
	method resetTriggerFromErrorState : 
	method resumeAll : 
	method resumeJob : 
	method resumeJobs : 
	method resumeTrigger : 
	method resumeTriggers : 
	method runningSince : 
	method scheduleJob : 
	method scheduleJob : 
	method scheduleJob : 
	method scheduleJobs : 
	method shutdown : 
	method shutdown : 
	method standby : 
	method start : 
	method startDelayed : 
	method supportsPersistence : 
	method triggerJob : 
	method triggerJob : 
	method unscheduleJob : 
	method unscheduleJobs : 
 ====================================== 
** CLASS org.quartz.simpl.SimpleTimeBroker
	method <init> : 
	method getCurrentTime : 
	method initialize : 
	method shutdown : 
 ====================================== 
** CLASS org.quartz.simpl.TriggerWrapper
	method <init> : 
	method equals : 
	method hashCode : 
	method getTrigger : 
 ====================================== 
** CLASS org.quartz.Qtz205SchedulerListenerTest
	method <init> : 
	method testTriggerFinalized : 
Unit: $r9 = new java.util.Properties
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void start()>()
Unit: $r16 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("test")
Unit: $r19 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(1)
Unit: virtualinvoke r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.idleWaitTime", "1500")
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i1)
Unit: r0 := @this: org.quartz.Qtz205SchedulerListenerTest
Unit: $r22 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r21)
Unit: staticinvoke <java.lang.Thread: void sleep(long)>(5000L)
Unit: r3 = $r9
Unit: $r8 = new org.quartz.Qtz205SchedulerListenerTest$Qtz205ScheListener
Unit: r6 = virtualinvoke $r22.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r13 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: $r18 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("test")
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2)
Unit: interfaceinvoke r4.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r5, r6)
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void start()>()
Unit: $i1 = virtualinvoke r1.<org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener: int getFireCount()>()
Unit: interfaceinvoke $r13.<org.quartz.ListenerManager: void addSchedulerListener(org.quartz.SchedulerListener)>(r2)
Unit: staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i0)
Unit: specialinvoke $r9.<java.util.Properties: void <init>()>()
Unit: $r14 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.ListenerManager getListenerManager()>()
Unit: $r7 = new org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener
Unit: $r15 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/Qtz205SchedulerListenerTest$Qtz205Job;")
Unit: $r17 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r21 = virtualinvoke $r20.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withRepeatCount(int)>(2)
Unit: r1 = $r7
Unit: specialinvoke $r8.<org.quartz.Qtz205SchedulerListenerTest$Qtz205ScheListener: void <init>()>()
Unit: $r20 = virtualinvoke $r19.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withIntervalInMilliseconds(long)>(250L)
Unit: $i2 = virtualinvoke r2.<org.quartz.Qtz205SchedulerListenerTest$Qtz205ScheListener: int getTriggerFinalizedCount()>()
Unit: r4 = virtualinvoke $r12.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: r2 = $r8
Unit: return
Unit: specialinvoke $r7.<org.quartz.Qtz205SchedulerListenerTest$Qtz205TriggerListener: void <init>()>()
Unit: r5 = virtualinvoke $r16.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: virtualinvoke r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "2")
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void standby()>()
Unit: specialinvoke $r12.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r3)
Unit: interfaceinvoke $r14.<org.quartz.ListenerManager: void addTriggerListener(org.quartz.TriggerListener)>(r1)
Unit: $i0 = staticinvoke <org.quartz.Qtz205SchedulerListenerTest$Qtz205Job: int access$100()>()
Unit: $r12 = new org.quartz.impl.StdSchedulerFactory
	method access$000 : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$16
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$17
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$18
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$19
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$12
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.integrations.tests.HelloJob
	method <init> : 
	method execute : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$13
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$14
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$15
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeExtendedStatefulJob
	method <init> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$10
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$11
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledCounterImpl$1
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.quartz.JobExecutionContext
	method getScheduler : 
	method getTrigger : 
	method getCalendar : 
	method isRecovering : 
	method getRecoveringTriggerKey : 
	method getRefireCount : 
	method getMergedJobDataMap : 
	method getJobDetail : 
	method getJobInstance : 
	method getFireTime : 
	method getScheduledFireTime : 
	method getPreviousFireTime : 
	method getNextFireTime : 
	method getFireInstanceId : 
	method getResult : 
	method setResult : 
	method getJobRunTime : 
	method put : 
	method get : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.CacheDelegate$1
 ====================================== 
** CLASS org.quartz.impl.calendar.DailyCalendarTest
	method <init> : 
	method testStringStartEndTimes : 
Unit: specialinvoke $r3.<org.quartz.impl.calendar.DailyCalendar: void <init>(java.lang.String,java.lang.String)>("1:20:1:456", "14:50:15:2")
Unit: $r2 = virtualinvoke r5.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>()
Unit: goto [?= staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z0)]
Unit: $z1 = 1
Unit: $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("01:20:01:456 - 14:50:15:002")
Unit: if $i0 <= 0 goto $z0 = 0
Unit: $z1 = 0
Unit: if $i1 <= 0 goto $z1 = 0
Unit: $z0 = 0
Unit: r5 = $r1
Unit: $z0 = 1
Unit: r0 := @this: org.quartz.impl.calendar.DailyCalendarTest
Unit: return
Unit: $r3 = new org.quartz.impl.calendar.DailyCalendar
Unit: $r4 = virtualinvoke r6.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>()
Unit: staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z1)
Unit: specialinvoke $r1.<org.quartz.impl.calendar.DailyCalendar: void <init>(java.lang.String,java.lang.String)>("1:20", "14:50")
Unit: $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("01:20:00:000 - 14:50:00:000")
Unit: $r1 = new org.quartz.impl.calendar.DailyCalendar
Unit: staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z0)
Unit: r6 = $r3
Unit: goto [?= staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z1)]
	method testStringInvertTimeRange : 
Unit: $r2 = new org.quartz.impl.calendar.DailyCalendar
Unit: r1 = $r2
Unit: $z0 = 0
Unit: virtualinvoke r1.<org.quartz.impl.calendar.DailyCalendar: void setInvertTimeRange(boolean)>(1)
Unit: if $i1 <= 0 goto $z1 = 0
Unit: staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z0)
Unit: goto [?= staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z1)]
Unit: staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z1)
Unit: $r4 = virtualinvoke r1.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>()
Unit: r0 := @this: org.quartz.impl.calendar.DailyCalendarTest
Unit: $z1 = 0
Unit: $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("inverted: true")
Unit: $z0 = 1
Unit: return
Unit: $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("inverted: false")
Unit: specialinvoke $r2.<org.quartz.impl.calendar.DailyCalendar: void <init>(java.lang.String,java.lang.String)>("1:20", "14:50")
Unit: if $i0 <= 0 goto $z0 = 0
Unit: virtualinvoke r1.<org.quartz.impl.calendar.DailyCalendar: void setInvertTimeRange(boolean)>(0)
Unit: $z1 = 1
Unit: $r3 = virtualinvoke r1.<org.quartz.impl.calendar.DailyCalendar: java.lang.String toString()>()
Unit: goto [?= staticinvoke <org.quartz.impl.calendar.DailyCalendarTest: void assertTrue(boolean)>($z0)]
	method getTargetObject : 
	method getVersions : 
	method verifyMatch : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.calendar.BaseCalendarTest
	method <init> : 
	method testClone : 
Unit: staticinvoke <org.quartz.impl.calendar.BaseCalendarTest: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r10 = virtualinvoke r2.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone getTimeZone()>()
Unit: r1 = $r3
Unit: $r7 = virtualinvoke r1.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar getBaseCalendar()>()
Unit: $r4 = virtualinvoke r1.<org.quartz.impl.calendar.BaseCalendar: java.lang.Object clone()>()
Unit: $r6 = virtualinvoke r2.<org.quartz.impl.calendar.BaseCalendar: java.lang.String getDescription()>()
Unit: $r5 = virtualinvoke r1.<org.quartz.impl.calendar.BaseCalendar: java.lang.String getDescription()>()
Unit: $r3 = new org.quartz.impl.calendar.BaseCalendar
Unit: return
Unit: r0 := @this: org.quartz.impl.calendar.BaseCalendarTest
Unit: staticinvoke <org.quartz.impl.calendar.BaseCalendarTest: void assertEquals(java.lang.String,java.lang.String)>($r5, $r6)
Unit: $r8 = virtualinvoke r2.<org.quartz.impl.calendar.BaseCalendar: org.quartz.Calendar getBaseCalendar()>()
Unit: specialinvoke $r3.<org.quartz.impl.calendar.BaseCalendar: void <init>()>()
Unit: $r9 = virtualinvoke r1.<org.quartz.impl.calendar.BaseCalendar: java.util.TimeZone getTimeZone()>()
Unit: r2 = (org.quartz.impl.calendar.BaseCalendar) $r4
Unit: staticinvoke <org.quartz.impl.calendar.BaseCalendarTest: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
 ====================================== 
** CLASS org.quartz.SimpleTriggerTest
	method <init> : 
	method getTargetObject : 
	method getVersions : 
	method verifyMatch : 
	method testUpdateAfterMisfire : 
Unit: $r7 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r4 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: r3 = $r4
Unit: $r6 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: r0 := @this: org.quartz.SimpleTriggerTest
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: void setEndTime(java.util.Date)>($r6)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: void updateAfterMisfire(org.quartz.Calendar)>(null)
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 6, 5, 10, 0, 0)
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: return
Unit: specialinvoke $r4.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>()>()
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>(2005, 6, 5, 9, 0, 0)
Unit: $r8 = virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: java.util.Date getStartTime()>()
Unit: $r5 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: void setStartTime(java.util.Date)>($r5)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: void setRepeatCount(int)>(5)
Unit: virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(2)
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertNull(java.lang.Object)>($r11)
Unit: $r11 = virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: java.util.Date getNextFireTime()>()
Unit: $r9 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r10 = virtualinvoke r3.<org.quartz.impl.triggers.SimpleTriggerImpl: java.util.Date getEndTime()>()
	method testGetFireTimeAfter : 
Unit: r2 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: java.util.Date getFireTimeAfter(java.util.Date)>($r5)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setRepeatInterval(long)>(10L)
Unit: r1 = $r3
Unit: $r3 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: specialinvoke $r3.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setStartTime(java.util.Date)>($r4)
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(long,long)>(40L, $l0)
Unit: $l0 = virtualinvoke r2.<java.util.Date: long getTime()>()
Unit: $r4 = new java.util.Date
Unit: return
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setRepeatCount(int)>(4)
Unit: specialinvoke $r5.<java.util.Date: void <init>(long)>(34L)
Unit: $r5 = new java.util.Date
Unit: specialinvoke $r4.<java.util.Date: void <init>(long)>(0L)
Unit: r0 := @this: org.quartz.SimpleTriggerTest
	method testClone : 
Unit: $r8 = interfaceinvoke r22.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: return
Unit: $r4 = interfaceinvoke r21.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: $i2 = virtualinvoke $r15.<org.quartz.JobDataMap: int size()>()
Unit: $r12 = virtualinvoke $r11.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>("K2")
Unit: $r18 = virtualinvoke $r17.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>("K1")
Unit: $i1 = virtualinvoke $r8.<org.quartz.JobDataMap: int size()>()
Unit: virtualinvoke $r6.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("K2", "V2")
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(int,int)>(1, $i2)
Unit: $r17 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: org.quartz.JobDataMap getJobDataMap()>()
Unit: virtualinvoke $r5.<org.quartz.JobDataMap: void put(java.lang.String,java.lang.String)>("K1", "V1")
Unit: r22 = (org.quartz.Trigger) $r7
Unit: $r3 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: java.lang.Object clone()>()
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(int,int)>(2, $i1)
Unit: $r7 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: java.lang.Object clone()>()
Unit: $r11 = interfaceinvoke r22.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r20 = virtualinvoke $r19.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>("K2")
Unit: $r2 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(java.lang.Object,java.lang.Object)>("V2", $r12)
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(int,int)>(2, $i3)
Unit: $r19 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r16 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: org.quartz.JobDataMap getJobDataMap()>()
Unit: specialinvoke $r2.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>()>()
Unit: $i0 = virtualinvoke $r4.<org.quartz.JobDataMap: int size()>()
Unit: $r9 = interfaceinvoke r22.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r6 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r5 = virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r15 = interfaceinvoke r22.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(int,int)>(0, $i0)
Unit: $r10 = virtualinvoke $r9.<org.quartz.JobDataMap: java.lang.Object get(java.lang.Object)>("K1")
Unit: $r13 = interfaceinvoke r22.<org.quartz.Trigger: org.quartz.JobDataMap getJobDataMap()>()
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(java.lang.Object,java.lang.Object)>("V1", $r10)
Unit: r21 = (org.quartz.Trigger) $r3
Unit: r0 := @this: org.quartz.SimpleTriggerTest
Unit: virtualinvoke $r13.<org.quartz.JobDataMap: java.lang.Object remove(java.lang.Object)>("K1")
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(java.lang.Object,java.lang.Object)>("V1", $r18)
Unit: $i3 = virtualinvoke $r16.<org.quartz.JobDataMap: int size()>()
Unit: r1 = $r2
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void assertEquals(java.lang.Object,java.lang.Object)>("V2", $r20)
	method testQuartz665 : 
Unit: virtualinvoke $r1.<org.quartz.impl.triggers.SimpleTriggerImpl: boolean equals(java.lang.Object)>($r2)
Unit: return
Unit: $r1 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: $r2 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: specialinvoke $r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>()>()
Unit: r0 := @this: org.quartz.SimpleTriggerTest
Unit: specialinvoke $r2.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>()>()
	method testMisfireInstructionValidity : 
Unit: r10 = $r4
Unit: $r3 := @caughtexception
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(4)
Unit: r1 = $r2
Unit: $r7 = virtualinvoke r10.<java.lang.Exception: java.lang.String getMessage()>()
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(2)
Unit: goto [?= virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(6)]
Unit: goto [?= return]
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(5)
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(3)
Unit: r0 := @this: org.quartz.SimpleTriggerTest
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void fail(java.lang.String)>($r9)
Unit: $r5 = new java.lang.StringBuilder
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(0)
Unit: return
Unit: $r4 := @caughtexception
Unit: $r2 = new org.quartz.impl.triggers.SimpleTriggerImpl
Unit: specialinvoke $r2.<org.quartz.impl.triggers.SimpleTriggerImpl: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(6)
Unit: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected exception while setting misfire instruction: ")
Unit: $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
Unit: staticinvoke <org.quartz.SimpleTriggerTest: void fail(java.lang.String)>("Expected exception while setting invalid misfire instruction but did not get it.")
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(-1)
Unit: specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
Unit: virtualinvoke r1.<org.quartz.impl.triggers.SimpleTriggerImpl: void setMisfireInstruction(int)>(1)
Unit: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: r11 = $r3
	method main : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.xml.XMLSchedulingDataProcessorTest
	method <init> : 
	method testOverwriteFlag : 
Unit: $r13 = virtualinvoke $r12.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("job1")
Unit: $r9 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: throw $r31
Unit: return
Unit: interfaceinvoke r37.<org.quartz.Scheduler: void shutdown()>()
Unit: goto [?= return]
Unit: specialinvoke $r8.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/xml/quartz-test.properties")
Unit: $r7 = new java.io.File
Unit: specialinvoke $r17.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: $r18 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: r5 = $r18
Unit: $r8 = new org.quartz.impl.StdSchedulerFactory
Unit: $z3 = virtualinvoke r1.<java.io.File: boolean delete()>()
Unit: $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Unit: interfaceinvoke r37.<org.quartz.Scheduler: void shutdown()>()
Unit: goto [?= $r19 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("DEFAULT")]
Unit: $r31 = new java.lang.RuntimeException
Unit: specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String)>($r35)
Unit: $r19 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("DEFAULT")
Unit: throw r6
Unit: $i1 = interfaceinvoke $r22.<java.util.Set: int size()>()
Unit: $r26 = new java.lang.StringBuilder
Unit: if r37 == null goto throw r6
Unit: $r10 = virtualinvoke $r9.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: r1 = $r7
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(1, $i1)
Unit: $r22 = interfaceinvoke r37.<org.quartz.Scheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>($r21)
Unit: if $z0 == 0 goto (branch)
Unit: specialinvoke $r18.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r4)
Unit: $z2 = virtualinvoke r1.<java.io.File: boolean exists()>()
Unit: $r17 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void fail(java.lang.String)>("OverWriteExisting flag didn\'t work. We should get Exception when overwrite is set to false.")
Unit: specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.String)>($r29)
Unit: interfaceinvoke r4.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: r40 = interfaceinvoke r37.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r23)
Unit: r37 = null
Unit: $z1 = virtualinvoke r1.<java.io.File: boolean delete()>()
Unit: $r21 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("DEFAULT")
Unit: $r15 = virtualinvoke $r13.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r14)
Unit: $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r25 = new java.lang.RuntimeException
Unit: interfaceinvoke r37.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r38, r3)
Unit: r41 = virtualinvoke $r24.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("foo")
Unit: $r14 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatHourlyForever()>()
Unit: specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
Unit: r2 = $r8
Unit: r4 = $r17
Unit: $r20 = interfaceinvoke r37.<org.quartz.Scheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>($r19)
Unit: $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove test file ")
Unit: $r36 := @caughtexception
Unit: r38 = virtualinvoke $r11.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r12 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: if $z3 != 0 goto (branch)
Unit: specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
Unit: specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>("quartz_data.xml")
Unit: r6 = $r30
Unit: $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove test file ")
Unit: specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: void copyResourceToFile(java.lang.String,java.io.File)>("/org/quartz/xml/simple-job-trigger.xml", r1)
Unit: if $z2 == 0 goto (branch)
Unit: $r24 = interfaceinvoke r40.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r32 = new java.lang.StringBuilder
Unit: $r23 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String)>("job1")
Unit: $r30 := @caughtexception
Unit: r37 = virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: r39 = $r36
Unit: if r37 == null goto return
Unit: $i0 = interfaceinvoke $r20.<java.util.Set: int size()>()
Unit: if $z1 != 0 goto (branch)
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(1, $i0)
Unit: $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Unit: throw $r25
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: virtualinvoke r5.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(org.quartz.Scheduler,boolean)>(r37, 0)
Unit: $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(java.lang.String,java.lang.String)>("dont_chg_me", r41)
Unit: $r11 = virtualinvoke $r10.<org.quartz.JobBuilder: org.quartz.JobBuilder usingJobData(java.lang.String,java.lang.String)>("foo", "dont_chg_me")
Unit: $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
Unit: r3 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
	method copyResourceToFile : 
	method testDirectivesNoOverwriteWithIgnoreDups : 
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: throw r4
Unit: $r21 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: interfaceinvoke r27.<org.quartz.Scheduler: void shutdown()>()
Unit: $r6 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: $r10 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatHourlyForever()>()
Unit: $r11 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r10)
Unit: r31 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("job1")
Unit: $r8 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r15 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: interfaceinvoke r2.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: r3 = $r21
Unit: $r23 = interfaceinvoke r27.<org.quartz.Scheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>($r22)
Unit: specialinvoke $r20.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: r2 = $r20
Unit: $r25 = interfaceinvoke r27.<org.quartz.Scheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>($r24)
Unit: if r27 == null goto return
Unit: $i0 = interfaceinvoke $r23.<java.util.Set: int size()>()
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(2, $i1)
Unit: virtualinvoke r3.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/directives_no-overwrite_ignoredups.xml", r27)
Unit: $r18 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r17)
Unit: goto [?= return]
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(2, $i0)
Unit: interfaceinvoke r27.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r30, r31)
Unit: $r14 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job2")
Unit: r27 = null
Unit: r29 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r20 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: $r17 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatHourlyForever()>()
Unit: return
Unit: interfaceinvoke r27.<org.quartz.Scheduler: void shutdown()>()
Unit: $r13 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: $r7 = virtualinvoke $r6.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: specialinvoke $r21.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r2)
Unit: if r27 == null goto throw r4
Unit: r28 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $i1 = interfaceinvoke $r25.<java.util.Set: int size()>()
Unit: $r26 := @caughtexception
Unit: interfaceinvoke r27.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r28, r29)
Unit: r4 = $r26
Unit: r30 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r5 = new org.quartz.impl.StdSchedulerFactory
Unit: r1 = $r5
Unit: r27 = virtualinvoke r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r24 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("DEFAULT")
Unit: $r22 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("DEFAULT")
Unit: specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/xml/quartz-test.properties")
Unit: $r16 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("job2")
	method testDirectivesOverwriteWithNoIgnoreDups : 
Unit: $i0 = interfaceinvoke $r23.<java.util.Set: int size()>()
Unit: $r6 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: interfaceinvoke r27.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r28, r29)
Unit: interfaceinvoke r27.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r30, r31)
Unit: $r5 = new org.quartz.impl.StdSchedulerFactory
Unit: r30 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: specialinvoke $r21.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r2)
Unit: $r17 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatHourlyForever()>()
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: interfaceinvoke r2.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: if r27 == null goto throw r4
Unit: $r9 = virtualinvoke $r8.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("job1")
Unit: specialinvoke $r20.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: $r20 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: return
Unit: $r14 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job2")
Unit: $r13 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: r29 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: r27 = virtualinvoke r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: goto [?= return]
Unit: $r25 = interfaceinvoke r27.<org.quartz.Scheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>($r24)
Unit: $i1 = interfaceinvoke $r25.<java.util.Set: int size()>()
Unit: $r10 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder repeatHourlyForever()>()
Unit: r28 = virtualinvoke $r7.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r18 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r17)
Unit: r1 = $r5
Unit: if r27 == null goto return
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(2, $i0)
Unit: $r11 = virtualinvoke $r9.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r10)
Unit: r4 = $r26
Unit: $r23 = interfaceinvoke r27.<org.quartz.Scheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>($r22)
Unit: interfaceinvoke r27.<org.quartz.Scheduler: void shutdown()>()
Unit: $r7 = virtualinvoke $r6.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("job1")
Unit: $r26 := @caughtexception
Unit: $r22 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("DEFAULT")
Unit: specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/xml/quartz-test.properties")
Unit: $r8 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r2 = $r20
Unit: interfaceinvoke r27.<org.quartz.Scheduler: void shutdown()>()
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(2, $i1)
Unit: $r21 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: virtualinvoke r3.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/directives_overwrite_no-ignoredups.xml", r27)
Unit: throw r4
Unit: r3 = $r21
Unit: $r16 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("job2")
Unit: $r24 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("DEFAULT")
Unit: $r15 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: r27 = null
Unit: r31 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
	method testXsdSchemaValidationOnVariousTriggers : 
Unit: $i0 = interfaceinvoke $r9.<java.util.Set: int size()>()
Unit: $r11 = interfaceinvoke r13.<org.quartz.Scheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>($r10)
Unit: $r12 := @caughtexception
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: virtualinvoke r3.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/job-scheduling-data-2.0_trigger-samples.xml", r13)
Unit: specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/xml/quartz-test.properties")
Unit: specialinvoke $r7.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r2)
Unit: $i1 = interfaceinvoke $r11.<java.util.Set: int size()>()
Unit: throw r4
Unit: $r10 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("DEFAULT")
Unit: specialinvoke $r6.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: interfaceinvoke r13.<org.quartz.Scheduler: void shutdown()>()
Unit: r4 = $r12
Unit: return
Unit: r1 = $r5
Unit: interfaceinvoke r2.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: $r5 = new org.quartz.impl.StdSchedulerFactory
Unit: $r8 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("DEFAULT")
Unit: $r7 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: if r13 == null goto return
Unit: r13 = null
Unit: $r6 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: goto [?= return]
Unit: r13 = virtualinvoke r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: interfaceinvoke r13.<org.quartz.Scheduler: void shutdown()>()
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(1, $i0)
Unit: r2 = $r6
Unit: if r13 == null goto throw r4
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(35, $i1)
Unit: r3 = $r7
Unit: $r9 = interfaceinvoke r13.<org.quartz.Scheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>($r8)
	method testQTZ327SimpleTriggerNoRepeat : 
Unit: $r6 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: $i1 = interfaceinvoke $r11.<java.util.Set: int size()>()
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: r1 = $r5
Unit: $r12 := @caughtexception
Unit: throw r4
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(1, $i1)
Unit: interfaceinvoke r13.<org.quartz.Scheduler: void shutdown()>()
Unit: specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/xml/quartz-test.properties")
Unit: specialinvoke $r6.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: virtualinvoke r3.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/simple-job-trigger-no-repeat.xml", r13)
Unit: if r13 == null goto return
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(int,int)>(1, $i0)
Unit: goto [?= return]
Unit: r4 = $r12
Unit: $r8 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher jobGroupEquals(java.lang.String)>("DEFAULT")
Unit: $r5 = new org.quartz.impl.StdSchedulerFactory
Unit: interfaceinvoke r2.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: $r7 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: $i0 = interfaceinvoke $r9.<java.util.Set: int size()>()
Unit: $r10 = staticinvoke <org.quartz.impl.matchers.GroupMatcher: org.quartz.impl.matchers.GroupMatcher triggerGroupEquals(java.lang.String)>("DEFAULT")
Unit: r13 = null
Unit: r3 = $r7
Unit: $r9 = interfaceinvoke r13.<org.quartz.Scheduler: java.util.Set getJobKeys(org.quartz.impl.matchers.GroupMatcher)>($r8)
Unit: r13 = virtualinvoke r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: if r13 == null goto throw r4
Unit: specialinvoke $r7.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r2)
Unit: interfaceinvoke r13.<org.quartz.Scheduler: void shutdown()>()
Unit: $r11 = interfaceinvoke r13.<org.quartz.Scheduler: java.util.Set getTriggerKeys(org.quartz.impl.matchers.GroupMatcher)>($r10)
Unit: return
Unit: r2 = $r6
	method dateOfGMT_UTC : 
	method dateOfLocalTime : 
	method testTimeZones : 
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: interfaceinvoke r19.<org.quartz.Scheduler: void shutdown()>()
Unit: virtualinvoke r3.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/simple-job-trigger-with-timezones.xml", r19)
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertNotNull(java.lang.Object)>(r20)
Unit: $r10 = interfaceinvoke r20.<org.quartz.Trigger: java.util.Date getStartTime()>()
Unit: $r18 := @caughtexception
Unit: $r13 = new org.quartz.TriggerKey
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r17)
Unit: $r17 = interfaceinvoke r21.<org.quartz.Trigger: java.util.Date getEndTime()>()
Unit: specialinvoke $r7.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r2)
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15)
Unit: r19 = virtualinvoke r1.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $r12 = interfaceinvoke r20.<org.quartz.Trigger: java.util.Date getEndTime()>()
Unit: $r5 = new org.quartz.impl.StdSchedulerFactory
Unit: $r6 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: $r15 = interfaceinvoke r21.<org.quartz.Trigger: java.util.Date getStartTime()>()
Unit: interfaceinvoke r2.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: specialinvoke $r8.<org.quartz.TriggerKey: void <init>(java.lang.String,java.lang.String)>("job1", "DEFAULT")
Unit: r20 = interfaceinvoke r19.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r8)
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: staticinvoke <org.quartz.xml.XMLSchedulingDataProcessorTest: void assertNotNull(java.lang.Object)>(r21)
Unit: r4 = $r18
Unit: $r7 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: $r16 = specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: java.util.Date dateOfGMT_UTC(int,int,int,int,int,int)>(19, 0, 0, 1, 0, 2012)
Unit: $r8 = new org.quartz.TriggerKey
Unit: $r9 = specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: java.util.Date dateOfGMT_UTC(int,int,int,int,int,int)>(18, 0, 0, 1, 0, 2012)
Unit: r21 = interfaceinvoke r19.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r13)
Unit: goto [?= return]
Unit: r2 = $r6
Unit: specialinvoke $r6.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: specialinvoke $r13.<org.quartz.TriggerKey: void <init>(java.lang.String,java.lang.String)>("job2", "DEFAULT")
Unit: specialinvoke $r5.<org.quartz.impl.StdSchedulerFactory: void <init>(java.lang.String)>("org/quartz/xml/quartz-test.properties")
Unit: r19 = null
Unit: throw r4
Unit: if r19 == null goto throw r4
Unit: $r11 = specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: java.util.Date dateOfGMT_UTC(int,int,int,int,int,int)>(19, 0, 0, 1, 0, 2012)
Unit: $r14 = specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: java.util.Date dateOfLocalTime(int,int,int,int,int,int)>(6, 0, 0, 1, 0, 2012)
Unit: return
Unit: interfaceinvoke r19.<org.quartz.Scheduler: void shutdown()>()
Unit: if r19 == null goto return
Unit: r1 = $r5
Unit: r3 = $r7
	method testRemoveJobClassNotFound : 
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: $r16 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobBuilder usingJobData(java.lang.String,java.lang.String)>("foo", "foo")
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r42, $r27)
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setDataSource(java.lang.String)>(r1)
Unit: interfaceinvoke r4.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r5, r6)
Unit: $r29 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>(r1)
Unit: $r17 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r25 = virtualinvoke $r24.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("foo")
Unit: $r38 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("bar")
Unit: r6 = virtualinvoke $r20.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setTablePrefix(java.lang.String)>("QRTZ_")
Unit: r43 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r30)
Unit: r1 = "XmlDeleteNonExistsJobTestDatasase"
Unit: specialinvoke $r35.<org.quartz.TriggerKey: void <init>(java.lang.String,java.lang.String)>("job1", "DEFAULT")
Unit: $r18 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("testjob1", "DEFAULT")
Unit: r4 = virtualinvoke $r13.<org.quartz.impl.SchedulerRepository: org.quartz.Scheduler lookup(java.lang.String)>(r2)
Unit: specialinvoke $r28.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: r41 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r22)
Unit: $r36 = interfaceinvoke r45.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>()
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceId(java.lang.String)>("AUTO")
Unit: specialinvoke $r12.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(4, 5)
Unit: $r33 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher nullValue()>()
Unit: return
Unit: $r34 = new org.quartz.JobKey
Unit: r2 = "XmlDeleteNonExistsJobTestScheduler"
Unit: $r35 = new org.quartz.TriggerKey
Unit: interfaceinvoke r7.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: r9 = $r40
Unit: $r20 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r19)
Unit: $r23 = interfaceinvoke r6.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r22 = interfaceinvoke r5.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r15 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("testjob1", "DEFAULT")
Unit: $r32 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher nullValue()>()
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r37, $r38)
Unit: goto [?= return]
Unit: $r10 = new org.quartz.impl.jdbcjobstore.JobStoreTX
Unit: specialinvoke $r10.<org.quartz.impl.jdbcjobstore.JobStoreTX: void <init>()>()
Unit: virtualinvoke $r11.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(java.lang.String,java.lang.String,org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>(r2, "AUTO", $r12, r3)
Unit: r44 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r31)
Unit: r3 = $r10
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r43, $r33)
Unit: $r27 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher instanceOf(java.lang.Class)>(class "Lorg/quartz/CronTrigger;")
Unit: r46 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r35)
Unit: $r26 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("foo")
Unit: $r12 = new org.quartz.simpl.SimpleThreadPool
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r44, $r32)
Unit: specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: void modifyStoredJobClassName()>()
Unit: $r14 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: $r30 = interfaceinvoke r5.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r31 = interfaceinvoke r6.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r28 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: $r19 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: specialinvoke $r34.<org.quartz.JobKey: void <init>(java.lang.String,java.lang.String)>("job1", "DEFAULT")
Unit: specialinvoke $r29.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r7)
Unit: $r39 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher instanceOf(java.lang.Class)>(class "Lorg/quartz/SimpleTrigger;")
Unit: r45 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r34)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r25, $r26)
Unit: $r11 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: r5 = virtualinvoke $r16.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: r8 = $r29
Unit: r7 = $r28
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r46, $r39)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void createDatabase(java.lang.String)>(r1)
Unit: $r13 = staticinvoke <org.quartz.impl.SchedulerRepository: org.quartz.impl.SchedulerRepository getInstance()>()
Unit: virtualinvoke r8.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/delete-no-jobclass.xml", r4)
Unit: $r37 = virtualinvoke $r36.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("foo")
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(0)
Unit: r42 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r23)
Unit: $r24 = interfaceinvoke r41.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>()
Unit: throw r9
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(0)
Unit: $r40 := @caughtexception
	method testOverwriteJobClassNotFound : 
Unit: $r23 = interfaceinvoke r6.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: interfaceinvoke r4.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r5, r6)
Unit: throw r9
Unit: $r28 = new org.quartz.simpl.CascadingClassLoadHelper
Unit: r8 = $r29
Unit: r39 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r30)
Unit: r0 := @this: org.quartz.xml.XMLSchedulingDataProcessorTest
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r40, $r35)
Unit: $r17 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $r10 = new org.quartz.impl.jdbcjobstore.JobStoreTX
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r25, $r26)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>(r1)
Unit: $r12 = new org.quartz.simpl.SimpleThreadPool
Unit: r1 = "XmlDeleteNonExistsJobTestDatasase"
Unit: $r31 = interfaceinvoke r6.<org.quartz.Trigger: org.quartz.TriggerKey getKey()>()
Unit: $r35 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher instanceOf(java.lang.Class)>(class "Lorg/quartz/SimpleTrigger;")
Unit: $r11 = staticinvoke <org.quartz.impl.DirectSchedulerFactory: org.quartz.impl.DirectSchedulerFactory getInstance()>()
Unit: r9 = $r36
Unit: r38 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r23)
Unit: $r26 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("foo")
Unit: return
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setTablePrefix(java.lang.String)>("QRTZ_")
Unit: r4 = virtualinvoke $r13.<org.quartz.impl.SchedulerRepository: org.quartz.Scheduler lookup(java.lang.String)>(r2)
Unit: $r30 = interfaceinvoke r5.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: $r34 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("bar")
Unit: goto [?= return]
Unit: r3 = $r10
Unit: specialinvoke $r10.<org.quartz.impl.jdbcjobstore.JobStoreTX: void <init>()>()
Unit: $r18 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>("job1", "DEFAULT")
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setInstanceId(java.lang.String)>("AUTO")
Unit: specialinvoke $r29.<org.quartz.xml.XMLSchedulingDataProcessor: void <init>(org.quartz.spi.ClassLoadHelper)>(r7)
Unit: r40 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.Trigger getTrigger(org.quartz.TriggerKey)>($r31)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r33, $r34)
Unit: $r32 = interfaceinvoke r39.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r33 = virtualinvoke $r32.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("foo")
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void createDatabase(java.lang.String)>(r1)
Unit: r5 = virtualinvoke $r16.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: $r25 = virtualinvoke $r24.<org.quartz.JobDataMap: java.lang.String getString(java.lang.String)>("foo")
Unit: $r13 = staticinvoke <org.quartz.impl.SchedulerRepository: org.quartz.impl.SchedulerRepository getInstance()>()
Unit: r6 = virtualinvoke $r20.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: specialinvoke r0.<org.quartz.xml.XMLSchedulingDataProcessorTest: void modifyStoredJobClassName()>()
Unit: $r22 = interfaceinvoke r5.<org.quartz.JobDetail: org.quartz.JobKey getKey()>()
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(0)
Unit: $r16 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobBuilder usingJobData(java.lang.String,java.lang.String)>("foo", "foo")
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void destroyDatabase(java.lang.String)>(r1)
Unit: $r15 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)>("job1", "DEFAULT")
Unit: $r20 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r19)
Unit: r37 = interfaceinvoke r4.<org.quartz.Scheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>($r22)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r38, $r27)
Unit: $r24 = interfaceinvoke r37.<org.quartz.JobDetail: org.quartz.JobDataMap getJobDataMap()>()
Unit: $r19 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>("* * * * * ?")
Unit: interfaceinvoke r4.<org.quartz.Scheduler: void shutdown(boolean)>(0)
Unit: virtualinvoke r8.<org.quartz.xml.XMLSchedulingDataProcessor: void processFileAndScheduleJobs(java.lang.String,org.quartz.Scheduler)>("org/quartz/xml/overwrite-no-jobclass.xml", r4)
Unit: r2 = "XmlDeleteNonExistsJobTestScheduler"
Unit: specialinvoke $r28.<org.quartz.simpl.CascadingClassLoadHelper: void <init>()>()
Unit: $r14 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob(java.lang.Class)>(class "Lorg/quartz/xml/XMLSchedulingDataProcessorTest$MyJob;")
Unit: $r29 = new org.quartz.xml.XMLSchedulingDataProcessor
Unit: virtualinvoke $r11.<org.quartz.impl.DirectSchedulerFactory: void createScheduler(java.lang.String,java.lang.String,org.quartz.spi.ThreadPool,org.quartz.spi.JobStore)>(r2, "AUTO", $r12, r3)
Unit: r7 = $r28
Unit: specialinvoke $r12.<org.quartz.simpl.SimpleThreadPool: void <init>(int,int)>(4, 5)
Unit: virtualinvoke r3.<org.quartz.impl.jdbcjobstore.JobStoreTX: void setDataSource(java.lang.String)>(r1)
Unit: $r27 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher instanceOf(java.lang.Class)>(class "Lorg/quartz/CronTrigger;")
Unit: interfaceinvoke r7.<org.quartz.spi.ClassLoadHelper: void initialize()>()
Unit: $r36 := @caughtexception
	method modifyStoredJobClassName : 
 ====================================== 
** CLASS org.quartz.utils.DBConnectionManager
	method <init> : 
	method addConnectionProvider : 
	method getConnection : 
	method getInstance : 
	method shutdown : 
	method getConnectionProvider : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.core.jmx.CronTriggerSupport
	method <init> : 
	method getItemNames : 
	method getItemDescriptions : 
	method getItemTypes : 
	method toCompositeData : 
	method toTabularData : 
	method newTrigger : 
	method newTrigger : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.FlakyJdbcSchedulerTest$TestJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.SimpleSemaphore
	method <init> : 
	method getLog : 
	method getThreadLocks : 
	method obtainLock : 
	method releaseLock : 
	method isLockOwner : 
	method requiresConnection : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdJDBCDelegate
	method <init> : 
	method initialize : 
	method addDefaultTriggerPersistenceDelegates : 
	method canUseProperties : 
	method addTriggerPersistenceDelegate : 
	method findTriggerPersistenceDelegate : 
	method findTriggerPersistenceDelegate : 
	method updateTriggerStatesFromOtherStates : 
	method selectMisfiredTriggers : 
	method selectTriggersInState : 
	method selectMisfiredTriggersInState : 
	method hasMisfiredTriggersInState : 
	method countMisfiredTriggersInState : 
	method selectMisfiredTriggersInGroupInState : 
	method selectTriggersForRecoveringJobs : 
	method deleteFiredTriggers : 
	method deleteFiredTriggers : 
	method clearData : 
	method insertJobDetail : 
	method updateJobDetail : 
	method selectTriggerKeysForJob : 
	method deleteJobDetail : 
	method isJobNonConcurrent : 
	method jobExists : 
	method updateJobData : 
	method selectJobDetail : 
	method getMapFromProperties : 
	method selectNumJobs : 
	method selectJobGroups : 
	method selectJobsInGroup : 
	method isMatcherEquals : 
	method toSqlEqualsClause : 
	method toSqlLikeClause : 
	method insertTrigger : 
	method insertBlobTrigger : 
	method updateTrigger : 
	method updateBlobTrigger : 
	method triggerExists : 
	method updateTriggerState : 
	method updateTriggerStateFromOtherStates : 
	method updateTriggerGroupStateFromOtherStates : 
	method updateTriggerStateFromOtherState : 
	method updateTriggerGroupStateFromOtherState : 
	method updateTriggerStatesForJob : 
	method updateTriggerStatesForJobFromOtherState : 
	method deleteBlobTrigger : 
	method deleteTrigger : 
	method deleteTriggerExtension : 
	method selectNumTriggersForJob : 
	method selectJobForTrigger : 
	method selectJobForTrigger : 
	method selectTriggersForJob : 
	method selectTriggersForCalendar : 
	method selectTrigger : 
	method isTriggerStillPresent : 
	method setTriggerStateProperties : 
	method selectTriggerJobDataMap : 
	method selectTriggerState : 
	method selectTriggerStatus : 
	method selectNumTriggers : 
	method selectTriggerGroups : 
	method selectTriggerGroups : 
	method selectTriggersInGroup : 
	method insertPausedTriggerGroup : 
	method deletePausedTriggerGroup : 
	method deletePausedTriggerGroup : 
	method deleteAllPausedTriggerGroups : 
	method isTriggerGroupPaused : 
	method isExistingTriggerGroup : 
	method insertCalendar : 
	method updateCalendar : 
	method calendarExists : 
	method selectCalendar : 
	method calendarIsReferenced : 
	method deleteCalendar : 
	method selectNumCalendars : 
	method selectCalendars : 
	method selectNextFireTime : 
	method selectTriggerForFireTime : 
	method selectTriggerToAcquire : 
	method selectTriggerToAcquire : 
	method insertFiredTrigger : 
	method updateFiredTrigger : 
	method selectFiredTriggerRecords : 
	method selectFiredTriggerRecordsByJob : 
	method selectInstancesFiredTriggerRecords : 
	method selectFiredTriggerInstanceNames : 
	method deleteFiredTrigger : 
	method selectJobExecutionCount : 
	method insertSchedulerState : 
	method deleteSchedulerState : 
	method updateSchedulerState : 
	method selectSchedulerStateRecords : 
	method rtp : 
	method getSchedulerNameLiteral : 
	method serializeObject : 
	method serializeJobData : 
	method getKeyOfNonSerializableValue : 
	method serializeProperties : 
	method convertFromProperty : 
	method convertToProperty : 
	method getObjectFromBlob : 
	method getJobDataFromBlob : 
	method selectPausedTriggerGroups : 
	method closeResultSet : 
	method closeStatement : 
	method setBoolean : 
	method getBoolean : 
	method getBoolean : 
	method setBytes : 
	method selectTriggerForFireTime : 
 ====================================== 
** CLASS org.quartz.impl.RemoteMBeanSchedulerTest$HelloJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$TransactionCallback
	method execute : 
 ====================================== 
** CLASS org.quartz.DailyTimeIntervalScheduleBuilderTest$MyJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.spi.ThreadExecutor
	method execute : 
	method initialize : 
 ====================================== 
** CLASS org.quartz.core.SchedulerSignalerImpl
	method <init> : 
	method notifyTriggerListenersMisfired : 
	method notifySchedulerListenersFinalized : 
	method signalSchedulingChange : 
	method notifySchedulerListenersJobDeleted : 
	method notifySchedulerListenersError : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.SybaseDelegate
	method <init> : 
	method getObjectFromBlob : 
	method getJobDataFromBlob : 
	method setBytes : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$40
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.impl.matchers.NameMatcher
	method <init> : 
	method nameEquals : 
	method jobNameEquals : 
	method triggerNameEquals : 
	method nameStartsWith : 
	method jobNameStartsWith : 
	method triggerNameStartsWith : 
	method nameEndsWith : 
	method jobNameEndsWith : 
	method triggerNameEndsWith : 
	method nameContains : 
	method jobNameContains : 
	method triggerNameContains : 
	method getValue : 
 ====================================== 
** CLASS org.quartz.listeners.BroadcastSchedulerListener
	method <init> : 
	method <init> : 
	method addListener : 
	method removeListener : 
	method getListeners : 
	method jobAdded : 
	method jobDeleted : 
	method jobScheduled : 
	method jobUnscheduled : 
	method triggerFinalized : 
	method triggerPaused : 
	method triggersPaused : 
	method triggerResumed : 
	method triggersResumed : 
	method schedulingDataCleared : 
	method jobPaused : 
	method jobsPaused : 
	method jobResumed : 
	method jobsResumed : 
	method schedulerError : 
	method schedulerStarted : 
	method schedulerStarting : 
	method schedulerInStandbyMode : 
	method schedulerShutdown : 
	method schedulerShuttingdown : 
 ====================================== 
** CLASS org.quartz.core.ExecutingJobsManager
	method <init> : 
	method getName : 
	method getNumJobsCurrentlyExecuting : 
	method jobToBeExecuted : 
	method jobWasExecuted : 
	method getNumJobsFired : 
	method getExecutingJobs : 
	method jobExecutionVetoed : 
 ====================================== 
** CLASS org.quartz.impl.matchers.KeyMatcher
	method <init> : 
	method keyEquals : 
	method isMatch : 
	method getCompareToValue : 
	method hashCode : 
	method equals : 
 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledCounterImpl
	method <init> : 
	method getMostRecentSample : 
	method getAllSampleValues : 
	method shutdown : 
	method getTimerTask : 
	method getIntervalMillis : 
	method recordSample : 
	method getAndReset : 
 ====================================== 
** CLASS org.quartz.utils.ClassUtilsTest$ReallyExtendedJob
	method <init> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$38
	method <init> : 
	method execute : 
	method execute : 
 ====================================== 
** CLASS org.quartz.utils.PropertiesParserTest
	method <init> : 
	method testGetPropertyGroupStringBooleanStringArray : 
Unit: $r4 = new java.util.Properties
Unit: $r6 = new org.quartz.utils.PropertiesParser
Unit: r2 = $r6
Unit: $r7 = newarray (java.lang.String)[0]
Unit: specialinvoke $r4.<java.util.Properties: void <init>()>()
Unit: r3 = virtualinvoke r2.<org.quartz.utils.PropertiesParser: java.util.Properties getPropertyGroup(java.lang.String,boolean,java.lang.String[])>("x.y", 1, $r7)
Unit: specialinvoke $r6.<org.quartz.utils.PropertiesParser: void <init>(java.util.Properties)>(r1)
Unit: r1 = $r4
Unit: return
Unit: staticinvoke <org.quartz.utils.PropertiesParserTest: void assertEquals(java.lang.String,java.lang.String)>("", $r8)
Unit: $r8 = virtualinvoke r3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("z")
Unit: r0 := @this: org.quartz.utils.PropertiesParserTest
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("x.y.z", "")
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$39
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.JobBuilderTest$TestJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$34
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.core.jmx.SimpleTriggerSupport
	method <init> : 
	method getItemNames : 
	method getItemDescriptions : 
	method getItemTypes : 
	method toCompositeData : 
	method toTabularData : 
	method newTrigger : 
	method newTrigger : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$35
	method <init> : 
	method execute : 
	method execute : 
 ====================================== 
** CLASS org.quartz.ee.jta.UserTransactionHelper
	method <init> : 
	method getUserTxLocation : 
	method setUserTxLocation : 
	method lookupUserTransaction : 
	method returnUserTransaction : 
	method access$000 : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$36
	method <init> : 
	method execute : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$37
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$30
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.utils.counter.Counter
	method increment : 
	method decrement : 
	method getAndSet : 
	method getValue : 
	method increment : 
	method decrement : 
	method setValue : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$31
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$32
	method <init> : 
	method execute : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$33
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.spi.TriggerFiredBundle
	method <init> : 
	method getJobDetail : 
	method getTrigger : 
	method getCalendar : 
	method isRecovering : 
	method getFireTime : 
	method getNextFireTime : 
	method getPrevFireTime : 
	method getScheduledFireTime : 
 ====================================== 
** CLASS org.quartz.utils.ClassUtils
	method <init> : 
	method isAnnotationPresent : 
	method isAnnotationPresentOnInterfaces : 
	method getAnnotation : 
 ====================================== 
** CLASS org.quartz.simpl.SystemPropertyInstanceIdGenerator
	method <init> : 
	method generateInstanceId : 
	method getPrepend : 
	method setPrepend : 
	method getPostpend : 
	method setPostpend : 
	method getSystemPropertyName : 
	method setSystemPropertyName : 
 ====================================== 
** CLASS org.quartz.core.ErrorLogger
	method <init> : 
	method schedulerError : 
 ====================================== 
** CLASS org.quartz.xml.XMLSchedulingDataProcessorTest$MyJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.core.QuartzSchedulerMBeanImpl$1
 ====================================== 
** CLASS org.quartz.spi.InstanceIdGenerator
	method generateInstanceId : 
 ====================================== 
** CLASS org.quartz.impl.triggers.CoreTrigger
	method hasAdditionalProperties : 
 ====================================== 
** CLASS org.quartz.spi.SchedulerSignaler
	method notifyTriggerListenersMisfired : 
	method notifySchedulerListenersFinalized : 
	method notifySchedulerListenersJobDeleted : 
	method signalSchedulingChange : 
	method notifySchedulerListenersError : 
 ====================================== 
** CLASS org.quartz.impl.SchedulerRepository
	method <init> : 
	method getInstance : 
	method bind : 
	method remove : 
	method lookup : 
	method lookupAll : 
 ====================================== 
** CLASS org.quartz.impl.triggers.CalendarIntervalTriggerImpl
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method getStartTime : 
	method setStartTime : 
	method getEndTime : 
	method setEndTime : 
	method getRepeatIntervalUnit : 
	method setRepeatIntervalUnit : 
	method getRepeatInterval : 
	method setRepeatInterval : 
	method getTimeZone : 
	method setTimeZone : 
	method isPreserveHourOfDayAcrossDaylightSavings : 
	method setPreserveHourOfDayAcrossDaylightSavings : 
	method isSkipDayIfHourDoesNotExist : 
	method setSkipDayIfHourDoesNotExist : 
	method getTimesTriggered : 
	method setTimesTriggered : 
	method validateMisfireInstruction : 
	method updateAfterMisfire : 
	method triggered : 
	method updateWithNewCalendar : 
	method computeFirstFireTime : 
	method getNextFireTime : 
	method getPreviousFireTime : 
	method setNextFireTime : 
	method setPreviousFireTime : 
	method getFireTimeAfter : 
	method getFireTimeAfter : 
	method daylightSavingHourShiftOccurredAndAdvanceNeeded : 
	method getFinalFireTime : 
	method mayFireAgain : 
	method validate : 
	method getScheduleBuilder : 
	method hasAdditionalProperties : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.xml.ValidationException
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method getValidationExceptions : 
	method getMessage : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$27
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.listeners.SchedulerListenerSupport
	method <init> : 
	method getLog : 
	method jobAdded : 
	method jobDeleted : 
	method jobPaused : 
	method jobResumed : 
	method jobScheduled : 
	method jobsPaused : 
	method jobsResumed : 
	method jobUnscheduled : 
	method schedulerError : 
	method schedulerInStandbyMode : 
	method schedulerShutdown : 
	method schedulerShuttingdown : 
	method schedulerStarted : 
	method schedulerStarting : 
	method triggerFinalized : 
	method triggerPaused : 
	method triggerResumed : 
	method triggersPaused : 
	method triggersResumed : 
	method schedulingDataCleared : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$28
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$29
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreTX
	method <init> : 
	method initialize : 
	method getNonManagedTXConnection : 
	method executeInLock : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$23
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$24
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$25
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdRowLockSemaphore
	method <init> : 
	method <init> : 
	method setMaxRetry : 
	method setRetryPeriod : 
	method getMaxRetry : 
	method getRetryPeriod : 
	method executeSQL : 
	method getSelectWithLockSQL : 
	method setSelectWithLockSQL : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$26
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.calendar.MonthlyCalendar
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method clone : 
	method getDaysExcluded : 
	method isDayExcluded : 
	method setDaysExcluded : 
	method setDayExcluded : 
	method areAllDaysExcluded : 
	method isTimeIncluded : 
	method getNextIncludedTime : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$20
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$21
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$22
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.DateBuilder$IntervalUnit
	method values : 
	method valueOf : 
	method <init> : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry
	method <init> : 
	method setValue : 
	method getKey : 
	method getValue : 
	method equals : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.HSQLDBDelegate
	method <init> : 
	method getObjectFromBlob : 
	method getJobDataFromBlob : 
 ====================================== 
** CLASS org.quartz.impl.MockConnectionProvider
	method <init> : 
	method getConnection : 
	method shutdown : 
	method initialize : 
	method setCustomProperty : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.triggers.CronTriggerImpl
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method clone : 
	method setCronExpression : 
	method getCronExpression : 
	method setCronExpression : 
	method getStartTime : 
	method setStartTime : 
	method getEndTime : 
	method setEndTime : 
	method getNextFireTime : 
	method getPreviousFireTime : 
	method setNextFireTime : 
	method setPreviousFireTime : 
	method getTimeZone : 
	method setTimeZone : 
	method getFireTimeAfter : 
	method getFinalFireTime : 
	method mayFireAgain : 
	method validateMisfireInstruction : 
	method updateAfterMisfire : 
	method willFireOn : 
	method willFireOn : 
	method triggered : 
	method updateWithNewCalendar : 
	method computeFirstFireTime : 
	method getExpressionSummary : 
	method hasAdditionalProperties : 
	method getScheduleBuilder : 
	method getTimeAfter : 
	method getTimeBefore : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DriverDelegate
	method initialize : 
	method updateTriggerStatesFromOtherStates : 
	method selectMisfiredTriggers : 
	method selectMisfiredTriggersInState : 
	method hasMisfiredTriggersInState : 
	method countMisfiredTriggersInState : 
	method selectMisfiredTriggersInGroupInState : 
	method selectTriggersForRecoveringJobs : 
	method deleteFiredTriggers : 
	method deleteFiredTriggers : 
	method insertJobDetail : 
	method updateJobDetail : 
	method selectTriggerKeysForJob : 
	method deleteJobDetail : 
	method isJobNonConcurrent : 
	method jobExists : 
	method updateJobData : 
	method selectJobDetail : 
	method selectNumJobs : 
	method selectJobGroups : 
	method selectJobsInGroup : 
	method insertTrigger : 
	method updateTrigger : 
	method triggerExists : 
	method updateTriggerState : 
	method updateTriggerStateFromOtherState : 
	method updateTriggerStateFromOtherStates : 
	method updateTriggerGroupStateFromOtherStates : 
	method updateTriggerGroupStateFromOtherState : 
	method updateTriggerStatesForJob : 
	method updateTriggerStatesForJobFromOtherState : 
	method deleteTrigger : 
	method selectNumTriggersForJob : 
	method selectJobForTrigger : 
	method selectJobForTrigger : 
	method selectTriggersForJob : 
	method selectTriggersForCalendar : 
	method selectTrigger : 
	method selectTriggerJobDataMap : 
	method selectTriggerState : 
	method selectTriggerStatus : 
	method selectNumTriggers : 
	method selectTriggerGroups : 
	method selectTriggerGroups : 
	method selectTriggersInGroup : 
	method selectTriggersInState : 
	method insertPausedTriggerGroup : 
	method deletePausedTriggerGroup : 
	method deletePausedTriggerGroup : 
	method deleteAllPausedTriggerGroups : 
	method isTriggerGroupPaused : 
	method selectPausedTriggerGroups : 
	method isExistingTriggerGroup : 
	method insertCalendar : 
	method updateCalendar : 
	method calendarExists : 
	method selectCalendar : 
	method calendarIsReferenced : 
	method deleteCalendar : 
	method selectNumCalendars : 
	method selectCalendars : 
	method selectNextFireTime : 
	method selectTriggerForFireTime : 
	method selectTriggerToAcquire : 
	method selectTriggerToAcquire : 
	method insertFiredTrigger : 
	method updateFiredTrigger : 
	method selectFiredTriggerRecords : 
	method selectFiredTriggerRecordsByJob : 
	method selectInstancesFiredTriggerRecords : 
	method selectFiredTriggerInstanceNames : 
	method deleteFiredTrigger : 
	method selectJobExecutionCount : 
	method insertSchedulerState : 
	method deleteSchedulerState : 
	method updateSchedulerState : 
	method selectSchedulerStateRecords : 
	method clearData : 
 ====================================== 
** CLASS org.quartz.core.RecoverJobsTest$1
	method <init> : 
	method getName : 
	method jobToBeExecuted : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdJDBCConstants
 ====================================== 
** CLASS org.quartz.ScheduleBuilder
	method <init> : 
	method build : 
 ====================================== 
** CLASS org.quartz.PriorityTest$TestJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.spi.OperableTrigger
	method triggered : 
	method computeFirstFireTime : 
	method executionComplete : 
	method updateAfterMisfire : 
	method updateWithNewCalendar : 
	method validate : 
	method setFireInstanceId : 
	method getFireInstanceId : 
	method setNextFireTime : 
	method setPreviousFireTime : 
 ====================================== 
** CLASS org.quartz.MonthlyCalendarTest
	method <init> : 
	method testForInfiniteLoop : 
Unit: $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>()
Unit: $r2 = new org.quartz.impl.calendar.MonthlyCalendar
Unit: if i2 >= 9 goto r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: goto [?= (branch)]
Unit: r0 := @this: org.quartz.MonthlyCalendarTest
Unit: r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r4.<java.util.Calendar: void set(int,int,int,int,int,int)>(2007, 11, 8, 12, 0, 0)
Unit: virtualinvoke r1.<org.quartz.impl.calendar.MonthlyCalendar: long getNextIncludedTime(long)>($l0)
Unit: r1 = $r2
Unit: i2 = 1
Unit: specialinvoke $r2.<org.quartz.impl.calendar.MonthlyCalendar: void <init>()>()
Unit: i2 = i2 + 1
Unit: virtualinvoke r1.<org.quartz.impl.calendar.MonthlyCalendar: void setDayExcluded(int,boolean)>(i2, 1)
Unit: return
Unit: $r3 = virtualinvoke r4.<java.util.Calendar: java.util.Date getTime()>()
 ====================================== 
** CLASS org.quartz.utils.PoolingConnectionProvider
	method getDataSource : 
 ====================================== 
** CLASS org.quartz.utils.counter.sampled.SampledCounter
	method shutdown : 
	method getMostRecentSample : 
	method getAllSampleValues : 
	method getAndReset : 
 ====================================== 
** CLASS org.quartz.JobExecutionException
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method setRefireImmediately : 
	method refireImmediately : 
	method setUnscheduleFiringTrigger : 
	method unscheduleFiringTrigger : 
	method setUnscheduleAllTriggers : 
	method unscheduleAllTriggers : 
 ====================================== 
** CLASS org.quartz.utils.PropertiesParser
	method <init> : 
	method getUnderlyingProperties : 
	method getStringProperty : 
	method getStringProperty : 
	method getStringArrayProperty : 
	method getStringArrayProperty : 
	method getBooleanProperty : 
	method getBooleanProperty : 
	method getByteProperty : 
	method getByteProperty : 
	method getCharProperty : 
	method getCharProperty : 
	method getDoubleProperty : 
	method getDoubleProperty : 
	method getFloatProperty : 
	method getFloatProperty : 
	method getIntProperty : 
	method getIntProperty : 
	method getIntArrayProperty : 
	method getIntArrayProperty : 
	method getLongProperty : 
	method getLongProperty : 
	method getShortProperty : 
	method getShortProperty : 
	method getPropertyGroups : 
	method getPropertyGroup : 
	method getPropertyGroup : 
	method getPropertyGroup : 
 ====================================== 
** CLASS org.quartz.core.QTZ385Test$2
	method <init> : 
	method getName : 
	method jobToBeExecuted : 
 ====================================== 
** CLASS org.quartz.core.QTZ385Test$1
	method <init> : 
	method invoke : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$45
	method <init> : 
	method validate : 
	method validate : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$46
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$47
	method <init> : 
	method execute : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$41
	method <init> : 
	method execute : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$42
	method <init> : 
	method validate : 
	method validate : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$43
	method <init> : 
	method executeVoid : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JobStoreSupport$44
	method <init> : 
	method execute : 
	method execute : 
 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeStatefulJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities
	method createDatabase : 
	method destroyDatabase : 
	method shutdownDatabase : 
	method <init> : 
	method access$000 : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.helpers.VersionPrinter
	method <init> : 
	method main : 
 ====================================== 
** CLASS org.quartz.utils.counter.CounterConfig
	method <init> : 
	method getInitialValue : 
	method createCounter : 
 ====================================== 
** CLASS org.quartz.impl.matchers.AndMatcher
	method <init> : 
	method and : 
	method isMatch : 
	method getLeftOperand : 
	method getRightOperand : 
	method hashCode : 
	method equals : 
 ====================================== 
** CLASS org.quartz.JobDetailTest$SomeExtendedPersistentJob
	method <init> : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport
	method <init> : 
	method initialize : 
	method getTriggerProperties : 
	method getTriggerPropertyBundle : 
	method deleteExtendedTriggerProperties : 
	method insertExtendedTriggerProperties : 
	method loadExtendedTriggerProperties : 
	method updateExtendedTriggerProperties : 
 ====================================== 
** CLASS org.quartz.VersionTest
	method <init> : 
	method testVersionParsing : 
Unit: r3 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1)
Unit: if $z0 == 0 goto $r6 = new java.lang.RuntimeException
Unit: throw $r6
Unit: $r4 = staticinvoke <org.quartz.core.QuartzScheduler: java.lang.String getVersionMajor()>()
Unit: $r5 = staticinvoke <org.quartz.core.QuartzScheduler: java.lang.String getVersionMinor()>()
Unit: return
Unit: r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d+)(-\\w+)?")
Unit: specialinvoke r0.<org.quartz.VersionTest: void assertNonNegativeInteger(java.lang.String)>($r11)
Unit: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: staticinvoke <org.quartz.VersionTest: void assertNotNull(java.lang.Object)>(r1)
Unit: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match pattern \'(\\d+)(-\\w+)?\'")
Unit: specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Unit: specialinvoke r0.<org.quartz.VersionTest: void assertNonNegativeInteger(java.lang.String)>($r4)
Unit: $r6 = new java.lang.RuntimeException
Unit: r1 = staticinvoke <org.quartz.core.QuartzScheduler: java.lang.String getVersionIteration()>()
Unit: r0 := @this: org.quartz.VersionTest
Unit: specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10)
Unit: goto [?= return]
Unit: specialinvoke r0.<org.quartz.VersionTest: void assertNonNegativeInteger(java.lang.String)>($r5)
Unit: $r7 = new java.lang.StringBuilder
Unit: $r11 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(1)
Unit: $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean matches()>()
Unit: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
	method assertNonNegativeInteger : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.DB2v8Delegate
	method <init> : 
	method setBoolean : 
 ====================================== 
** CLASS org.quartz.DateBuilderTest
	method <init> : 
	method testBasicBuilding : 
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 0)
Unit: r1 = staticinvoke <org.quartz.DateBuilder: java.util.Date dateOf(int,int,int,int,int,int)>(10, 30, 0, 1, 7, 2013)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, 2013)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, 30)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", r1, r3)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 6)
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: r3 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 0)
Unit: return
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(11, 10)
	method testBuilder : 
Unit: $r41 = virtualinvoke $r40.<org.quartz.DateBuilder: org.quartz.DateBuilder atSecond(int)>(12)
Unit: $r3 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: r55 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>(r1, r2)
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: $r28 = virtualinvoke $r27.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonth(int)>(6)
Unit: $r30 = virtualinvoke $r29.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourOfDay(int)>(10)
Unit: r56 = virtualinvoke $r24.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r8 = virtualinvoke $r7.<org.quartz.DateBuilder: org.quartz.DateBuilder atMinute(int)>(30)
Unit: $r23 = virtualinvoke $r22.<org.quartz.DateBuilder: org.quartz.DateBuilder inTimeZone(java.util.TimeZone)>(r1)
Unit: r58 = virtualinvoke $r42.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: r53 = virtualinvoke $r9.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r38 = virtualinvoke $r37.<org.quartz.DateBuilder: org.quartz.DateBuilder onDay(int)>(1)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r10, r53)
Unit: $r9 = virtualinvoke $r8.<org.quartz.DateBuilder: org.quartz.DateBuilder atSecond(int)>(0)
Unit: $r10 = virtualinvoke r52.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: $r17 = virtualinvoke $r16.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r51 = virtualinvoke r55.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r48 = virtualinvoke $r47.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourOfDay(int)>(10)
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(14, 0)
Unit: $r49 = virtualinvoke $r48.<org.quartz.DateBuilder: org.quartz.DateBuilder atMinute(int)>(33)
Unit: $r12 = virtualinvoke $r11.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r19 = virtualinvoke $r18.<org.quartz.DateBuilder: org.quartz.DateBuilder onDay(int)>(1)
Unit: $r7 = virtualinvoke $r6.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourOfDay(int)>(10)
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(2, 6)
Unit: $r11 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $r27 = virtualinvoke $r26.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r50 = virtualinvoke $r49.<org.quartz.DateBuilder: org.quartz.DateBuilder atSecond(int)>(12)
Unit: r2 = <java.util.Locale: java.util.Locale TAIWAN>
Unit: $r37 = virtualinvoke $r36.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonth(int)>(6)
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(14, 0)
Unit: $r35 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDateInTimezone(java.util.TimeZone)>(r1)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r34, r57)
Unit: $r32 = virtualinvoke $r31.<org.quartz.DateBuilder: org.quartz.DateBuilder atSecond(int)>(12)
Unit: $r18 = virtualinvoke $r17.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonth(int)>(6)
Unit: $r45 = virtualinvoke $r44.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: r59 = virtualinvoke $r50.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r51, r59)
Unit: $r36 = virtualinvoke $r35.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(12, 33)
Unit: $r47 = virtualinvoke $r46.<org.quartz.DateBuilder: org.quartz.DateBuilder onDay(int)>(1)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r15, r54)
Unit: $r5 = virtualinvoke $r4.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonth(int)>(7)
Unit: $r22 = virtualinvoke $r21.<org.quartz.DateBuilder: org.quartz.DateBuilder atSecond(int)>(12)
Unit: $r39 = virtualinvoke $r38.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourOfDay(int)>(10)
Unit: r54 = virtualinvoke $r14.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(13, 0)
Unit: $r33 = virtualinvoke $r32.<org.quartz.DateBuilder: org.quartz.DateBuilder inTimeZone(java.util.TimeZone)>(r1)
Unit: $r29 = virtualinvoke $r28.<org.quartz.DateBuilder: org.quartz.DateBuilder onDay(int)>(1)
Unit: $r6 = virtualinvoke $r5.<org.quartz.DateBuilder: org.quartz.DateBuilder onDay(int)>(1)
Unit: $r26 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDateInLocale(java.util.Locale)>(r2)
Unit: $r42 = virtualinvoke $r41.<org.quartz.DateBuilder: org.quartz.DateBuilder inLocale(java.util.Locale)>(r2)
Unit: $r44 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDateInTimeZoneAndLocale(java.util.TimeZone,java.util.Locale)>(r1, r2)
Unit: $r13 = virtualinvoke $r12.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(7, 1)
Unit: $r25 = virtualinvoke r55.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r40 = virtualinvoke $r39.<org.quartz.DateBuilder: org.quartz.DateBuilder atMinute(int)>(33)
Unit: $r4 = virtualinvoke $r3.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-4:00")
Unit: $r24 = virtualinvoke $r23.<org.quartz.DateBuilder: org.quartz.DateBuilder inLocale(java.util.Locale)>(r2)
Unit: $r46 = virtualinvoke $r45.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonth(int)>(6)
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(12, 30)
Unit: $r14 = virtualinvoke $r13.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: r57 = virtualinvoke $r33.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r16 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r25, r56)
Unit: return
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: $r15 = virtualinvoke r52.<java.util.Calendar: java.util.Date getTime()>()
Unit: r52 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(1, 2013)
Unit: $r31 = virtualinvoke $r30.<org.quartz.DateBuilder: org.quartz.DateBuilder atMinute(int)>(33)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r43, r58)
Unit: $r34 = virtualinvoke r55.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r52.<java.util.Calendar: void set(int,int)>(1, 2013)
Unit: $r20 = virtualinvoke $r19.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourOfDay(int)>(10)
Unit: $r43 = virtualinvoke r55.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r55.<java.util.Calendar: void set(int,int)>(13, 12)
Unit: $r21 = virtualinvoke $r20.<org.quartz.DateBuilder: org.quartz.DateBuilder atMinute(int)>(33)
	method testEvensBuilders : 
Unit: specialinvoke $r25.<java.util.Date: void <init>()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r20, r31)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 13)
Unit: $r26 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r33 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenHourDateBefore(java.util.Date)>($r23)
Unit: $r9 = virtualinvoke $r8.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourOfDay(int)>(10)
Unit: r28 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenSecondDateBefore(java.util.Date)>($r13)
Unit: $i2 = virtualinvoke r1.<java.util.Calendar: int get(int)>(14)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 0)
Unit: $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12)
Unit: $r12 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i1)
Unit: $i6 = virtualinvoke r1.<java.util.Calendar: int get(int)>(14)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r12, r27)
Unit: $r11 = virtualinvoke $r10.<org.quartz.DateBuilder: org.quartz.DateBuilder atSecond(int)>(12)
Unit: $r18 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r32 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenHourDate(java.util.Date)>($r21)
Unit: $r15 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r17 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: $z0 = virtualinvoke r34.<java.util.Date: boolean after(java.util.Date)>(r3)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 33)
Unit: r27 = virtualinvoke $r11.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r22 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i5)
Unit: r35 = staticinvoke <org.quartz.DateBuilder: java.util.Date nextGivenMinuteDate(java.util.Date,int)>($r26, 15)
Unit: r29 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenSecondDate(java.util.Date)>($r15)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 0)
Unit: r30 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenMinuteDate(java.util.Date)>($r17)
Unit: $r5 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $r25 = new java.util.Date
Unit: return
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r22, r32)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i2)
Unit: r2 = (java.util.Calendar) $r4
Unit: $r6 = virtualinvoke $r5.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 0)
Unit: $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 8, $i3)
Unit: $i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13)
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: r3 = $r25
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 8)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r18, r30)
Unit: $r7 = virtualinvoke $r6.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonth(int)>(6)
Unit: $i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r24, r33)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertTrue(java.lang.String,boolean)>("DateBuilder-produced date is not as expected.", $z0)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 0)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 13)
Unit: $r16 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r31 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenMinuteDateBefore(java.util.Date)>($r19)
Unit: $r8 = virtualinvoke $r7.<org.quartz.DateBuilder: org.quartz.DateBuilder onDay(int)>(1)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 0)
Unit: $i3 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11)
Unit: $r24 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: $r13 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 13)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 54)
Unit: $r20 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 12)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 13)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 33)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i0)
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 15, $i4)
Unit: $r14 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 11)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r34)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r16, r29)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, 13)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DateBuilder-produced date is not as expected.", $r14, r28)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 13)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r35)
Unit: $r21 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: r34 = staticinvoke <org.quartz.DateBuilder: java.util.Date evenHourDateAfterNow()>()
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 0)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i6)
Unit: $r4 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 13)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 34)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(1, 2013)
Unit: $r10 = virtualinvoke $r9.<org.quartz.DateBuilder: org.quartz.DateBuilder atMinute(int)>(33)
Unit: $r23 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(14, 13)
Unit: $r19 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>()
	method testGivenBuilders : 
Unit: $r3 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: r5 = staticinvoke <org.quartz.DateBuilder: java.util.Date nextGivenMinuteDate(java.util.Date,int)>($r3, 45)
Unit: $i2 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i5)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 8)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 45, $i1)
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r5)
Unit: $i7 = virtualinvoke r1.<java.util.Calendar: int get(int)>(14)
Unit: $i3 = virtualinvoke r1.<java.util.Calendar: int get(int)>(14)
Unit: $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11)
Unit: r4 = staticinvoke <org.quartz.DateBuilder: java.util.Date nextGivenMinuteDate(java.util.Date,int)>($r2, 45)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r4)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i2)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 46)
Unit: $r2 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i6)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i3)
Unit: $i6 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 54)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 8, $i0)
Unit: $i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, 13)
Unit: $i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, 8)
Unit: $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12)
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: return
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 9, $i4)
Unit: virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, 54)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i7)
	method testAtBuilders : 
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $i2 = virtualinvoke r2.<java.util.Calendar: int get(int)>(13)
Unit: $i9 = virtualinvoke r2.<java.util.Calendar: int get(int)>(14)
Unit: r6 = staticinvoke <org.quartz.DateBuilder: java.util.Date tomorrowAt(int,int,int)>(10, 33, 12)
Unit: $i7 = virtualinvoke r2.<java.util.Calendar: int get(int)>(12)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", $i10, $i11)
Unit: $i6 = virtualinvoke r2.<java.util.Calendar: int get(int)>(11)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 33, $i7)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 10, $i0)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", $i4, $i5)
Unit: $i10 = virtualinvoke r1.<java.util.Calendar: int get(int)>(6)
Unit: $i0 = virtualinvoke r2.<java.util.Calendar: int get(int)>(11)
Unit: specialinvoke $r4.<java.util.Date: void <init>()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 10, $i6)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>($r3)
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r4 = new java.util.Date
Unit: r5 = staticinvoke <org.quartz.DateBuilder: java.util.Date todayAt(int,int,int)>(10, 33, 12)
Unit: return
Unit: virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>(r6)
Unit: $i1 = virtualinvoke r2.<java.util.Calendar: int get(int)>(12)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>($r4)
Unit: $r3 = new java.util.Date
Unit: virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>(r5)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i9)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i3)
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 33, $i1)
Unit: $i11 = virtualinvoke r2.<java.util.Calendar: int get(int)>(6)
Unit: $i3 = virtualinvoke r2.<java.util.Calendar: int get(int)>(14)
Unit: virtualinvoke r1.<java.util.Calendar: void add(int,int)>(14, 86400000)
Unit: $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(6)
Unit: specialinvoke $r3.<java.util.Date: void <init>()>()
Unit: $i5 = virtualinvoke r2.<java.util.Calendar: int get(int)>(6)
Unit: $i8 = virtualinvoke r2.<java.util.Calendar: int get(int)>(13)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 12, $i2)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 12, $i8)
	method testTranslate : 
Unit: return
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(14, 0)
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(12, 33)
Unit: $r3 = virtualinvoke r7.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 12, $i0)
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(1, 2013)
Unit: r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-2:00")
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(14, 0)
Unit: virtualinvoke r7.<java.util.Calendar: void setTime(java.util.Date)>($r4)
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: virtualinvoke r8.<java.util.Calendar: void setTime(java.util.Date)>($r6)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 8, $i1)
Unit: r8 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r2)
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(1, 2013)
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(11, 10)
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: $i1 = virtualinvoke r8.<java.util.Calendar: int get(int)>(11)
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(13, 12)
Unit: $r6 = staticinvoke <org.quartz.DateBuilder: java.util.Date translateTime(java.util.Date,java.util.TimeZone,java.util.TimeZone)>($r5, r2, r1)
Unit: r7 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r1)
Unit: $r5 = virtualinvoke r8.<java.util.Calendar: java.util.Date getTime()>()
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: virtualinvoke r7.<java.util.Calendar: void set(int,int)>(13, 12)
Unit: $i0 = virtualinvoke r7.<java.util.Calendar: int get(int)>(11)
Unit: r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT-4:00")
Unit: $r4 = staticinvoke <org.quartz.DateBuilder: java.util.Date translateTime(java.util.Date,java.util.TimeZone,java.util.TimeZone)>($r3, r1, r2)
Unit: virtualinvoke r8.<java.util.Calendar: void set(int,int)>(12, 33)
	method testMonthTranslations : 
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r56)
Unit: $r32 = virtualinvoke $r31.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(8, 1)
Unit: $i6 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $i8 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: r59 = virtualinvoke $r41.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r30 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 5, $i5)
Unit: r60 = virtualinvoke $r45.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 0, $i0)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 9, $i9)
Unit: $i7 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $r42 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $r4 = virtualinvoke $r3.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(1, 1)
Unit: r61 = virtualinvoke $r49.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r17 = virtualinvoke $r16.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $r45 = virtualinvoke $r44.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $r14 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r55)
Unit: $i2 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $r16 = virtualinvoke $r15.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(4, 1)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 11, $i11)
Unit: $r20 = virtualinvoke $r19.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(5, 1)
Unit: r51 = virtualinvoke $r9.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r37 = virtualinvoke $r36.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $r39 = virtualinvoke $r38.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: r0 := @this: org.quartz.DateBuilderTest
Unit: $r6 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 7, $i7)
Unit: $i0 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $r44 = virtualinvoke $r43.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(11, 1)
Unit: $r26 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: r55 = virtualinvoke $r25.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 10, $i10)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r53)
Unit: $r40 = virtualinvoke $r39.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(10, 1)
Unit: $r38 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: r53 = virtualinvoke $r17.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 6, $i6)
Unit: $r5 = virtualinvoke $r4.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $i3 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 2, $i2)
Unit: $r18 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r54)
Unit: r50 = virtualinvoke $r5.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r31 = virtualinvoke $r30.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: r57 = virtualinvoke $r33.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r33 = virtualinvoke $r32.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 8, $i8)
Unit: $r3 = virtualinvoke $r2.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r35 = virtualinvoke $r34.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r61)
Unit: return
Unit: $r28 = virtualinvoke $r27.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(7, 1)
Unit: r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: r52 = virtualinvoke $r13.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $r13 = virtualinvoke $r12.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $r29 = virtualinvoke $r28.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r60)
Unit: $r47 = virtualinvoke $r46.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r57)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 1, $i1)
Unit: $r48 = virtualinvoke $r47.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(12, 1)
Unit: $r43 = virtualinvoke $r42.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r11 = virtualinvoke $r10.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r9 = virtualinvoke $r8.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $r2 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $r21 = virtualinvoke $r20.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: $i11 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $i10 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r51)
Unit: $r27 = virtualinvoke $r26.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r25 = virtualinvoke $r24.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: r54 = virtualinvoke $r21.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r41 = virtualinvoke $r40.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r52)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r50)
Unit: $r15 = virtualinvoke $r14.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r46 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $r10 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $r7 = virtualinvoke $r6.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r49 = virtualinvoke $r48.<org.quartz.DateBuilder: org.quartz.DateBuilder atHourMinuteAndSecond(int,int,int)>(10, 30, 0)
Unit: r58 = virtualinvoke $r37.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: $r34 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: r56 = virtualinvoke $r29.<org.quartz.DateBuilder: java.util.Date build()>()
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 3, $i3)
Unit: staticinvoke <org.quartz.DateBuilderTest: void assertEquals(java.lang.String,int,int)>("DateBuilder-produced date is not as expected.", 4, $i4)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r59)
Unit: $r19 = virtualinvoke $r18.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r8 = virtualinvoke $r7.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(2, 1)
Unit: $r12 = virtualinvoke $r11.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(3, 1)
Unit: $r23 = virtualinvoke $r22.<org.quartz.DateBuilder: org.quartz.DateBuilder inYear(int)>(2013)
Unit: $r22 = staticinvoke <org.quartz.DateBuilder: org.quartz.DateBuilder newDate()>()
Unit: $i9 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $r24 = virtualinvoke $r23.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(6, 1)
Unit: virtualinvoke r1.<java.util.Calendar: void setTime(java.util.Date)>(r58)
Unit: $i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2)
Unit: $r36 = virtualinvoke $r35.<org.quartz.DateBuilder: org.quartz.DateBuilder inMonthOnDay(int,int)>(9, 1)
 ====================================== 
** CLASS org.quartz.PersistJobDataAfterExecution
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.SchedulerStateRecord
	method <init> : 
	method getCheckinInterval : 
	method getCheckinTimestamp : 
	method getSchedulerInstanceId : 
	method setCheckinInterval : 
	method setCheckinTimestamp : 
	method setSchedulerInstanceId : 
 ====================================== 
** CLASS org.quartz.core.QuartzSchedulerMBeanImpl
	method <init> : 
	method getCurrentlyExecutingJobs : 
	method getAllJobDetails : 
	method getAllTriggers : 
	method addJob : 
	method invokeSetter : 
	method getWrapperIfPrimitive : 
	method findMethod : 
	method scheduleBasicJob : 
	method scheduleJob : 
	method scheduleJob : 
	method addJob : 
	method newPlainException : 
	method deleteCalendar : 
	method deleteJob : 
	method getCalendarNames : 
	method getJobDetail : 
	method getJobGroupNames : 
	method getJobNames : 
	method getJobStoreClassName : 
	method getPausedTriggerGroups : 
	method getTrigger : 
	method getTriggerGroupNames : 
	method getTriggerNames : 
	method getTriggerState : 
	method getTriggersOfJob : 
	method interruptJob : 
	method interruptJob : 
	method scheduleJob : 
	method unscheduleJob : 
	method clear : 
	method getVersion : 
	method isShutdown : 
	method isStarted : 
	method start : 
	method shutdown : 
	method standby : 
	method isStandbyMode : 
	method getSchedulerName : 
	method getSchedulerInstanceId : 
	method getThreadPoolClassName : 
	method getThreadPoolSize : 
	method pauseJob : 
	method pauseJobs : 
	method pauseJobGroup : 
	method pauseJobsStartingWith : 
	method pauseJobsEndingWith : 
	method pauseJobsContaining : 
	method pauseJobsAll : 
	method pauseAllTriggers : 
	method pauseTriggers : 
	method pauseTriggerGroup : 
	method pauseTriggersStartingWith : 
	method pauseTriggersEndingWith : 
	method pauseTriggersContaining : 
	method pauseTriggersAll : 
	method pauseTrigger : 
	method resumeAllTriggers : 
	method resumeJob : 
	method resumeJobs : 
	method resumeJobGroup : 
	method resumeJobsStartingWith : 
	method resumeJobsEndingWith : 
	method resumeJobsContaining : 
	method resumeJobsAll : 
	method resumeTrigger : 
	method resumeTriggers : 
	method resumeTriggerGroup : 
	method resumeTriggersStartingWith : 
	method resumeTriggersEndingWith : 
	method resumeTriggersContaining : 
	method resumeTriggersAll : 
	method triggerJob : 
	method triggerJob : 
	method jobAdded : 
	method jobDeleted : 
	method jobScheduled : 
	method jobUnscheduled : 
	method schedulingDataCleared : 
	method jobPaused : 
	method jobsPaused : 
	method jobsResumed : 
	method jobResumed : 
	method schedulerError : 
	method schedulerStarted : 
	method schedulerStarting : 
	method schedulerInStandbyMode : 
	method schedulerShutdown : 
	method schedulerShuttingdown : 
	method triggerFinalized : 
	method triggersPaused : 
	method triggerPaused : 
	method triggersResumed : 
	method triggerResumed : 
	method getName : 
	method jobExecutionVetoed : 
	method jobToBeExecuted : 
	method jobWasExecuted : 
	method sendNotification : 
	method sendNotification : 
	method sendNotification : 
	method addNotificationListener : 
	method getNotificationInfo : 
	method removeNotificationListener : 
	method removeNotificationListener : 
	method isSampledStatisticsEnabled : 
	method setSampledStatisticsEnabled : 
	method getJobsCompletedMostRecentSample : 
	method getJobsExecutedMostRecentSample : 
	method getJobsScheduledMostRecentSample : 
	method getPerformanceMetrics : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.DisallowConcurrentExecutionJobTest$TestJobListener
	method <init> : 
	method getName : 
	method jobWasExecuted : 
 ====================================== 
** CLASS org.quartz.AnnualCalendarTest
	method <init> : 
	method getTargetObject : 
	method getVersions : 
	method verifyMatch : 
	method testDaysExcluded : 
Unit: specialinvoke $r2.<org.quartz.impl.calendar.AnnualCalendar: void <init>()>()
Unit: r0 := @this: org.quartz.AnnualCalendarTest
Unit: return
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDaysExcluded(java.util.ArrayList)>(null)
Unit: r1 = $r2
Unit: staticinvoke <org.quartz.AnnualCalendarTest: void assertNotNull(java.lang.String,java.lang.Object)>("Annual calendar daysExcluded property should have been set to empty ArrayList, not null.", $r3)
Unit: $r2 = new org.quartz.impl.calendar.AnnualCalendar
Unit: $r3 = virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: java.util.ArrayList getDaysExcluded()>()
	method testExclude : 
Unit: r1 = $r3
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 15)
Unit: goto [?= staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 15 October is not expected to be excluded but it is", $z3)]
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r10, 1)
Unit: $z3 = 0
Unit: return
Unit: goto [?= staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 15 October is not expected to be excluded but it is", $z4)]
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 8)
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r2)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 9)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 15)
Unit: staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 15 October is not expected to be excluded but it is", $z3)
Unit: $r11 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: $r9 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: specialinvoke $r3.<org.quartz.impl.calendar.AnnualCalendar: void <init>()>()
Unit: r0 := @this: org.quartz.AnnualCalendarTest
Unit: $z4 = 0
Unit: $z3 = 1
Unit: staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 15 October is not expected to be excluded but it is", $z4)
Unit: $r6 = (java.util.Calendar) $r5
Unit: $r12 = (java.util.Calendar) $r11
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 9)
Unit: if $z0 != 0 goto $z3 = 0
Unit: $z4 = 1
Unit: $r5 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 10)
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>(r2, 0)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 12)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 15)
Unit: $z2 = virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r2)
Unit: $r3 = new org.quartz.impl.calendar.AnnualCalendar
Unit: $r7 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: $r8 = (java.util.Calendar) $r7
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: if $z2 != 0 goto $z4 = 0
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r8, 1)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 9)
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r6, 1)
Unit: staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 15 October is expected to be excluded but it is not", $z1)
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r12, 0)
Unit: $z1 = virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r2)
Unit: $r10 = (java.util.Calendar) $r9
	method testDaysExcludedOverTime : 
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 23)
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: $r7 = (java.util.Calendar) $r6
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, 2005)
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r5, 1)
Unit: r0 := @this: org.quartz.AnnualCalendarTest
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 1)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, 2008)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 1)
Unit: $r5 = (java.util.Calendar) $r4
Unit: $r3 = new org.quartz.impl.calendar.AnnualCalendar
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r7, 1)
Unit: specialinvoke $r3.<org.quartz.impl.calendar.AnnualCalendar: void <init>()>()
Unit: $r4 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: $r6 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: return
Unit: staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 1 February is expected to be excluded but it is not", $z0)
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r2)
Unit: r1 = $r3
	method testRemoveInTheFuture : 
Unit: r0 := @this: org.quartz.AnnualCalendarTest
Unit: goto [?= staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 23 June is not expected to be excluded but it is", $z1)]
Unit: $r4 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: r1 = $r3
Unit: return
Unit: specialinvoke $r3.<org.quartz.impl.calendar.AnnualCalendar: void <init>()>()
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, 2005)
Unit: r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r7, 0)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 5)
Unit: if $z0 != 0 goto $z1 = 0
Unit: $z1 = 1
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 23)
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, 2008)
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: boolean isDayExcluded(java.util.Calendar)>(r2)
Unit: $r3 = new org.quartz.impl.calendar.AnnualCalendar
Unit: $r6 = virtualinvoke r2.<java.util.Calendar: java.lang.Object clone()>()
Unit: $z1 = 0
Unit: $r5 = (java.util.Calendar) $r4
Unit: staticinvoke <org.quartz.AnnualCalendarTest: void assertTrue(java.lang.String,boolean)>("The day 23 June is not expected to be excluded but it is", $z1)
Unit: virtualinvoke r1.<org.quartz.impl.calendar.AnnualCalendar: void setDayExcluded(java.util.Calendar,boolean)>($r5, 1)
Unit: $r7 = (java.util.Calendar) $r6
Unit: virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, 23)
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.integrations.tests.TrackingJob
	method <init> : 
	method execute : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.JobDetail
	method getKey : 
	method getDescription : 
	method getJobClass : 
	method getJobDataMap : 
	method isDurable : 
	method isPersistJobDataAfterExecution : 
	method isConcurrentExectionDisallowed : 
	method requestsRecovery : 
	method clone : 
	method getJobBuilder : 
 ====================================== 
** CLASS org.quartz.InterruptableJobTest
	method <init> : 
	method setUp : 
	method testJobInterruption : 
Unit: staticinvoke <org.quartz.InterruptableJobTest: void assertTrue(java.lang.String,boolean)>("Expected interrupted flag to be set on job class ", $z1)
Unit: r5 = interfaceinvoke r2.<org.quartz.Scheduler: java.util.List getCurrentlyExecutingJobs()>()
Unit: $i1 = interfaceinvoke r5.<java.util.List: int size()>()
Unit: virtualinvoke $r25.<java.util.concurrent.CyclicBarrier: int await()>()
Unit: staticinvoke <org.quartz.InterruptableJobTest: void assertTrue(java.lang.String,boolean)>("Expected successful result from interruption of job ", z0)
Unit: $r19 = virtualinvoke $r18.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startNow()>()
Unit: staticinvoke <org.quartz.InterruptableJobTest: void assertTrue(java.lang.String,boolean)>("Number of executing jobs should be 1 ", $z2)
Unit: $r7 = new java.util.Properties
Unit: r2 = virtualinvoke $r12.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: $z2 = 1
Unit: r6 = (org.quartz.JobExecutionContext) $r23
Unit: $r25 = <org.quartz.InterruptableJobTest: java.util.concurrent.CyclicBarrier sync>
Unit: specialinvoke $r12.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r1)
Unit: r1 = $r7
Unit: $r13 = staticinvoke <org.quartz.JobBuilder: org.quartz.JobBuilder newJob()>()
Unit: $r26 = <org.quartz.InterruptableJobTest$TestInterruptableJob: java.util.concurrent.atomic.AtomicBoolean interrupted>
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void clear()>()
Unit: $z1 = virtualinvoke $r26.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "2")
Unit: $r23 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
Unit: virtualinvoke $r21.<java.util.concurrent.CyclicBarrier: int await()>()
Unit: $r15 = virtualinvoke $r14.<org.quartz.JobBuilder: org.quartz.JobBuilder withIdentity(java.lang.String)>("j1")
Unit: specialinvoke $r7.<java.util.Properties: void <init>()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)>(r3, r4)
Unit: if $i1 != 1 goto $z2 = 0
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool")
Unit: $r12 = new org.quartz.impl.StdSchedulerFactory
Unit: r4 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
Unit: $r14 = virtualinvoke $r13.<org.quartz.JobBuilder: org.quartz.JobBuilder ofType(java.lang.Class)>(class "Lorg/quartz/InterruptableJobTest$TestInterruptableJob;")
Unit: $r21 = <org.quartz.InterruptableJobTest: java.util.concurrent.CyclicBarrier sync>
Unit: z0 = interfaceinvoke r2.<org.quartz.Scheduler: boolean interrupt(java.lang.String)>($r24)
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceName", "InterruptableJobTest_Scheduler")
Unit: $r24 = interfaceinvoke r6.<org.quartz.JobExecutionContext: java.lang.String getFireInstanceId()>()
Unit: virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceId", "AUTO")
Unit: $r17 = virtualinvoke $r16.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String)>("t1")
Unit: r0 := @this: org.quartz.InterruptableJobTest
Unit: r3 = virtualinvoke $r15.<org.quartz.JobBuilder: org.quartz.JobDetail build()>()
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void shutdown()>()
Unit: return
Unit: goto [?= staticinvoke <org.quartz.InterruptableJobTest: void assertTrue(java.lang.String,boolean)>("Number of executing jobs should be 1 ", $z2)]
Unit: interfaceinvoke r2.<org.quartz.Scheduler: void start()>()
Unit: $r18 = virtualinvoke $r17.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r3)
Unit: $r16 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
Unit: $z2 = 0
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.listeners.TriggerListenerSupport
	method <init> : 
	method getLog : 
	method triggerFired : 
	method vetoJobExecution : 
	method triggerMisfired : 
	method triggerComplete : 
 ====================================== 
** CLASS org.quartz.impl.JobDetailImplTest
	method <init> : 
	method testHashCode : 
Unit: $i0 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: int hashCode()>()
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r3, $r5)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r13 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(org.hamcrest.Matcher)>($r12)
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $i1 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: int hashCode()>()
Unit: $r5 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r4)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r6, $r9)
Unit: r1 = $r2
Unit: $r2 = new org.quartz.impl.JobDetailImpl
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setName(java.lang.String)>("test")
Unit: $r12 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r11)
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setGroup(java.lang.String)>("test")
Unit: $r9 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher not(org.hamcrest.Matcher)>($r8)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r8 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r7)
Unit: r0 := @this: org.quartz.impl.JobDetailImplTest
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r10, $r13)
Unit: return
Unit: specialinvoke $r2.<org.quartz.impl.JobDetailImpl: void <init>()>()
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
Unit: $i2 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: int hashCode()>()
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.TriggerStatus
	method <init> : 
	method getJobKey : 
	method setJobKey : 
	method getKey : 
	method setKey : 
	method getStatus : 
	method getNextFireTime : 
	method toString : 
 ====================================== 
** CLASS org.quartz.Trigger$CompletedExecutionInstruction
	method values : 
	method valueOf : 
	method <init> : 
	method <clinit> : 
 ====================================== 
** CLASS org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
	method <init> : 
	method setUp : 
	method testGetInstanceId : 
Unit: specialinvoke $r3.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void <init>()>()
Unit: return
Unit: r1 = $r3
Unit: staticinvoke <org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest: void assertEquals(java.lang.String,java.lang.String)>("foo", r2)
Unit: r0 := @this: org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
Unit: r2 = virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: java.lang.String generateInstanceId()>()
Unit: $r3 = new org.quartz.simpl.SystemPropertyInstanceIdGenerator
	method testGetInstanceIdWithPrepend : 
Unit: virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void setPrepend(java.lang.String)>("1")
Unit: return
Unit: r0 := @this: org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
Unit: staticinvoke <org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest: void assertEquals(java.lang.String,java.lang.String)>("1foo", r2)
Unit: r1 = $r3
Unit: r2 = virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: java.lang.String generateInstanceId()>()
Unit: $r3 = new org.quartz.simpl.SystemPropertyInstanceIdGenerator
Unit: specialinvoke $r3.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void <init>()>()
	method testGetInstanceIdWithPostpend : 
Unit: r0 := @this: org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
Unit: r1 = $r3
Unit: specialinvoke $r3.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void <init>()>()
Unit: staticinvoke <org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest: void assertEquals(java.lang.String,java.lang.String)>("foo2", r2)
Unit: $r3 = new org.quartz.simpl.SystemPropertyInstanceIdGenerator
Unit: r2 = virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: java.lang.String generateInstanceId()>()
Unit: virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void setPostpend(java.lang.String)>("2")
Unit: return
	method testGetInstanceIdWithPrependAndPostpend : 
Unit: r1 = $r3
Unit: staticinvoke <org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest: void assertEquals(java.lang.String,java.lang.String)>("1foo2", r2)
Unit: $r3 = new org.quartz.simpl.SystemPropertyInstanceIdGenerator
Unit: virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void setPrepend(java.lang.String)>("1")
Unit: r0 := @this: org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
Unit: specialinvoke $r3.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void <init>()>()
Unit: return
Unit: r2 = virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: java.lang.String generateInstanceId()>()
Unit: virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void setPostpend(java.lang.String)>("2")
	method testGetInstanceIdFromCustomSystemProperty : 
Unit: r1 = $r3
Unit: r2 = virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: java.lang.String generateInstanceId()>()
Unit: return
Unit: virtualinvoke r1.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void setSystemPropertyName(java.lang.String)>("blah.blah")
Unit: r0 := @this: org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
Unit: specialinvoke $r3.<org.quartz.simpl.SystemPropertyInstanceIdGenerator: void <init>()>()
Unit: staticinvoke <org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest: void assertEquals(java.lang.String,java.lang.String)>("goo", r2)
Unit: $r3 = new org.quartz.simpl.SystemPropertyInstanceIdGenerator
	method testGeneratorThroughSchedulerInstatiation : 
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.class", "org.quartz.simpl.SimpleThreadPool")
Unit: $r18 = new org.quartz.impl.StdSchedulerFactory
Unit: $r20 := @caughtexception
Unit: specialinvoke $r18.<org.quartz.impl.StdSchedulerFactory: void <init>(java.util.Properties)>(r23)
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceIdGenerator.systemPropertyName", "blah.blah")
Unit: return
Unit: r22 = $r20
Unit: goto [?= $r2 = new java.util.Properties]
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceIdGenerator.postpend", "2")
Unit: $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>()
Unit: specialinvoke $r2.<java.util.Properties: void <init>()>()
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.jobStore.class", $r14)
Unit: specialinvoke $r21.<java.lang.AssertionError: void <init>(java.lang.Object)>(r22)
Unit: r0 := @this: org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceIdGenerator.prepend", "1")
Unit: $r19 = interfaceinvoke r1.<org.quartz.Scheduler: java.lang.String getSchedulerInstanceId()>()
Unit: $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>()
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.jobStore.dataSource", "MeSchedulerDatabase")
Unit: throw $r21
Unit: staticinvoke <org.quartz.simpl.SystemPropertyInstanceIdGeneratorTest: void assertEquals(java.lang.String,java.lang.String)>("1goo2", $r19)
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.threadPool.threadCount", "1")
Unit: r23 = $r2
Unit: $r21 = new java.lang.AssertionError
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.jobStore.isClustered", "true")
Unit: $r2 = new java.util.Properties
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceId", "AUTO")
Unit: r1 = virtualinvoke $r18.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceName", "MeScheduler")
Unit: virtualinvoke r23.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("org.quartz.scheduler.instanceIdGenerator.class", $r6)
Unit: staticinvoke <org.quartz.impl.jdbcjobstore.JdbcQuartzTestUtilities: void createDatabase(java.lang.String)>("MeSchedulerDatabase")
Unit: $r5 = class "Lorg/quartz/simpl/SystemPropertyInstanceIdGenerator;"
Unit: $r13 = class "Lorg/quartz/impl/jdbcjobstore/JobStoreTX;"
 ====================================== 
** CLASS org.quartz.DefaultSchedulerTest
	method <init> : 
	method testAddJobNoTrigger : 
Unit: goto [?= virtualinvoke r2.<org.quartz.impl.JobDetailImpl: void setDurability(boolean)>(1)]
Unit: return
Unit: virtualinvoke r2.<org.quartz.impl.JobDetailImpl: void setDurability(boolean)>(1)
Unit: r0 := @this: org.quartz.DefaultSchedulerTest
Unit: r1 = staticinvoke <org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getDefaultScheduler()>()
Unit: virtualinvoke r2.<org.quartz.impl.JobDetailImpl: void setName(java.lang.String)>("testjob")
Unit: $r6 = virtualinvoke r3.<org.quartz.SchedulerException: java.lang.String getMessage()>()
Unit: $r4 = new org.quartz.impl.JobDetailImpl
Unit: r3 = $r5
Unit: specialinvoke $r4.<org.quartz.impl.JobDetailImpl: void <init>()>()
Unit: interfaceinvoke r1.<org.quartz.Scheduler: void addJob(org.quartz.JobDetail,boolean)>(r2, 0)
Unit: interfaceinvoke r1.<org.quartz.Scheduler: void addJob(org.quartz.JobDetail,boolean)>(r2, 0)
Unit: $r7 = staticinvoke <org.junit.matchers.JUnitMatchers: org.hamcrest.Matcher containsString(java.lang.String)>("durable")
Unit: r2 = $r4
Unit: $r5 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r6, $r7)
 ====================================== 
** CLASS org.quartz.utils.counter.sampled.TimeStampedCounterValue
	method <init> : 
	method getCounterValue : 
	method getTimestamp : 
	method toString : 
 ====================================== 
** CLASS org.quartz.TriggerBuilderTest$TestJob
	method <init> : 
	method execute : 
 ====================================== 
** CLASS org.quartz.utils.C3p0PoolingConnectionProviderTest
	method <init> : 
	method testC3p0PoolProviderWithExtraProps : 
Unit: r0 := @this: org.quartz.utils.C3p0PoolingConnectionProviderTest
Unit: specialinvoke r0.<org.quartz.utils.C3p0PoolingConnectionProviderTest: void validateC3p0PoolProviderClassWithExtraProps()>()
Unit: r0.<org.quartz.utils.C3p0PoolingConnectionProviderTest: boolean testConnectionProviderClass> = 1
Unit: return
	method testC3p0PoolProviderClassWithExtraProps : 
Unit: r0.<org.quartz.utils.C3p0PoolingConnectionProviderTest: boolean testConnectionProviderClass> = 0
Unit: specialinvoke r0.<org.quartz.utils.C3p0PoolingConnectionProviderTest: void validateC3p0PoolProviderClassWithExtraProps()>()
Unit: r0 := @this: org.quartz.utils.C3p0PoolingConnectionProviderTest
Unit: return
	method validateC3p0PoolProviderClassWithExtraProps : 
	method createSchedulerProperties : 
 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.CUBRIDDelegate
	method <init> : 
	method getObjectFromBlob : 
	method getJobDataFromBlob : 
	method setBytes : 
 ====================================== 
** CLASS org.quartz.core.NullSampledStatisticsImpl
	method <init> : 
	method getJobsCompletedMostRecentSample : 
	method getJobsExecutingMostRecentSample : 
	method getJobsScheduledMostRecentSample : 
	method shutdown : 
 ====================================== 
** CLASS org.quartz.JobDetailTest
	method <init> : 
	method testClone : 
Unit: specialinvoke $r3.<org.quartz.impl.JobDetailImpl: void <init>()>()
Unit: staticinvoke <org.quartz.JobDetailTest: void assertEquals(java.lang.Object,java.lang.Object)>(r2, r1)
Unit: return
Unit: r2 = (org.quartz.JobDetail) $r4
Unit: $r3 = new org.quartz.impl.JobDetailImpl
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setName(java.lang.String)>("hi")
Unit: r1 = $r3
Unit: r0 := @this: org.quartz.JobDetailTest
Unit: $r4 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: java.lang.Object clone()>()
	method testAnnotationDetection : 
Unit: $z7 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: staticinvoke <org.quartz.JobDetailTest: void assertFalse(java.lang.String,boolean)>("Expecting SomeExtendedNonConcurrentJob to not be persistent", $z10)
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeStatefulJob to disallow concurrent execution", $z7)
Unit: $z5 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: $z6 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeExtendedNonConcurrentJob;")
Unit: r1 = $r2
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeExtendedPersistentJob to be persistent", $z8)
Unit: $z0 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setName(java.lang.String)>("hi")
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeNonConcurrentPersistentJob to disallow concurrent execution", $z5)
Unit: r0 := @this: org.quartz.JobDetailTest
Unit: $r2 = new org.quartz.impl.JobDetailImpl
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeNonConcurrentPersistentJob to be persistent", $z4)
Unit: $z8 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeExtendedStatefulJob;")
Unit: staticinvoke <org.quartz.JobDetailTest: void assertFalse(java.lang.String,boolean)>("Expecting SomeExtendedPersistentJob to not disallow concurrent execution", $z9)
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeNonConcurrentJob to disallow concurrent execution", $z3)
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeNonConcurrentPersistentJob;")
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeExtendedStatefulJob to disallow concurrent execution", $z15)
Unit: $z13 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: $z12 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomePersistentJob to be persistent", $z0)
Unit: staticinvoke <org.quartz.JobDetailTest: void assertFalse(java.lang.String,boolean)>("Expecting SomePersistentJob to not disallow concurrent execution", $z1)
Unit: $z14 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: $z2 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeExtendedNonConcurrentPersistentJob to be persistent", $z12)
Unit: $z3 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: $z10 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: return
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeStatefulJob;")
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeExtendedStatefulJob to be persistent", $z14)
Unit: staticinvoke <org.quartz.JobDetailTest: void assertFalse(java.lang.String,boolean)>("Expecting SomeNonConcurrentJob to not be persistent", $z2)
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeExtendedNonConcurrentPersistentJob to disallow concurrent execution", $z13)
Unit: $z1 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeExtendedNonConcurrentJob to disallow concurrent execution", $z11)
Unit: specialinvoke $r2.<org.quartz.impl.JobDetailImpl: void <init>()>()
Unit: $z4 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isPersistJobDataAfterExecution()>()
Unit: $z15 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomePersistentJob;")
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeExtendedNonConcurrentPersistentJob;")
Unit: staticinvoke <org.quartz.JobDetailTest: void assertTrue(java.lang.String,boolean)>("Expecting SomeStatefulJob to be persistent", $z6)
Unit: $z9 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: $z11 = virtualinvoke r1.<org.quartz.impl.JobDetailImpl: boolean isConcurrentExectionDisallowed()>()
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeNonConcurrentJob;")
Unit: virtualinvoke r1.<org.quartz.impl.JobDetailImpl: void setJobClass(java.lang.Class)>(class "Lorg/quartz/JobDetailTest$SomeExtendedPersistentJob;")

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.StdJDBCDelegateTest
Number of Methods with PossiblyMock in class: 3
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 0

 ====================================== 
** CLASS org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphoreTest
Number of Methods with PossiblyMock in class: 4
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 0

 ====================================== 
Benchmark quartz_quartz_core_2.3.1 Mock Stats
Total Number of Test Methods with PossiblyMock: 7
Total Number of Test Methods with ArrayMock in class: 0
Total Number of Test Methods with Collection in class: 0

Soot finished on Wed Apr 14 17:22:03 EDT 2021
Soot has run for 3 min. 19 sec.
