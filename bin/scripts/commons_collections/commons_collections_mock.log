/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction
:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/mvn_dependencies/commons-lang3-3.8.1.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/mvn_dependencies/dexmaker-1.5.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/mvn_dependencies/easymock-4.0.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/mvn_dependencies/hamcrest-core-1.3.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/mvn_dependencies/junit-4.12.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/mvn_dependencies/objenesis-3.0.1.jar
it is a maven project
[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--------------< [0;36morg.apache.commons:commons-collections4[0;1m >---------------[m
[[1;34mINFO[m] [1mBuilding Apache Commons Collections 4.3[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:3.0.0:clean[m [1m(default-clean)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] Deleting /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:3.0.0-M2:enforce[m [1m(enforce-maven-version)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:3.0.0-M2:enforce[m [1m(enforce-maven-3)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbuild-helper-maven-plugin:3.0.0:parse-version[m [1m(parse-version)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-antrun-plugin:1.8:run[m [1m(javadoc.resources)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] Executing tasks

main:
     [copy] Copying 2 files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/target/apidocs/META-INF
[[1;34mINFO[m] Executed tasks
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-remote-resources-plugin:1.5:process[m [1m(process-resource-bundles)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbuildnumber-maven-plugin:1.4:create[m [1m(default)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] Executing: /bin/sh -c cd '/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3' && 'git' 'rev-parse' '--verify' 'HEAD'
[[1;34mINFO[m] Working directory: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3
[[1;34mINFO[m] Storing buildNumber: 572264e26709f7fccf06e54dfe429ec8e431a451 at timestamp: 1619046219112
[[1;34mINFO[m] Storing buildScmBranch: master
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.0.2:resources[m [1m(default-resources)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/src/main/resources
[[1;34mINFO[m] Copying 2 resources to META-INF
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.7.0:compile[m [1m(default-compile)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 323 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/target/classes
[[1;34mINFO[m] /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/src/main/java/org/apache/commons/collections4/map/MultiValueMap.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/src/main/java/org/apache/commons/collections4/SetUtils.java: Some input files use unchecked or unsafe operations.
[[1;34mINFO[m] /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/src/main/java/org/apache/commons/collections4/SetUtils.java: Recompile with -Xlint:unchecked for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-bundle-plugin:3.5.0:manifest[m [1m(bundle-manifest)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32manimal-sniffer-maven-plugin:1.16:check[m [1m(checkAPIcompatibility)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] Checking unresolved references to org.codehaus.mojo.signature:java18:1.0
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.0.2:testResources[m [1m(default-testResources)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 178 resources
[[1;34mINFO[m] Copying 2 resources to META-INF
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.7.0:testCompile[m [1m(default-testCompile)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 214 source files to /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/target/test-classes
[[1;34mINFO[m] /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java: Some input files use or override a deprecated API.
[[1;34mINFO[m] /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java: Recompile with -Xlint:deprecation for details.
[[1;34mINFO[m] /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/src/test/java/org/apache/commons/collections4/functors/AbstractCompositePredicateTest.java: Some input files use unchecked or unsafe operations.
[[1;34mINFO[m] /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/src/test/java/org/apache/commons/collections4/functors/AbstractCompositePredicateTest.java: Recompile with -Xlint:unchecked for details.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.1:prepare-agent[m [1m(prepare-agent)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] argLine set to -javaagent:/home/daveroar/.m2/repository/org/jacoco/org.jacoco.agent/0.8.1/org.jacoco.agent-0.8.1-runtime.jar=destfile=/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/target/jacoco.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.22.0:test[m [1m(default-test)[m @ [36mcommons-collections4[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] -------------------------------------------------------
[[1;34mINFO[m]  T E S T S
[[1;34mINFO[m] -------------------------------------------------------
[[1;34mINFO[m] Running org.apache.commons.collections4.bag.[1mPredicatedSortedBagTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m76[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.286 s - in org.apache.commons.collections4.bag.[1mPredicatedSortedBagTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bag.[1mTransformedSortedBagTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m76[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 s - in org.apache.commons.collections4.bag.[1mTransformedSortedBagTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bag.[1mSynchronizedBagTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m74[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.086 s - in org.apache.commons.collections4.bag.[1mSynchronizedBagTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bag.[1mUnmodifiableBagTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m76[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.041 s - in org.apache.commons.collections4.bag.[1mUnmodifiableBagTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bag.[1mUnmodifiableSortedBagTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m76[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 s - in org.apache.commons.collections4.bag.[1mUnmodifiableSortedBagTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bag.[1mTransformedBagTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m76[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 s - in org.apache.commons.collections4.bag.[1mTransformedBagTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bag.[1mCollectionSortedBagTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m28[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 s - in org.apache.commons.collections4.bag.[1mCollectionSortedBagTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bag.[1mPredicatedBagTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m77[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.051 s - in org.apache.commons.collections4.bag.[1mPredicatedBagTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bag.[1mCollectionBagTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m28[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 s - in org.apache.commons.collections4.bag.[1mCollectionBagTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bag.[1mTreeBagTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m77[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 s - in org.apache.commons.collections4.bag.[1mTreeBagTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bag.[1mHashBagTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m74[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 s - in org.apache.commons.collections4.bag.[1mHashBagTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mClosureUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m12[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.085 s - in org.apache.commons.collections4.[1mClosureUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.collection.[1mPredicatedCollectionBuilderTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m5[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in org.apache.commons.collections4.collection.[1mPredicatedCollectionBuilderTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.collection.[1mIndexedCollectionTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m30[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.056 s - in org.apache.commons.collections4.collection.[1mIndexedCollectionTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.collection.[1mTransformedCollectionTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m28[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in org.apache.commons.collections4.collection.[1mTransformedCollectionTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.collection.[1mPredicatedCollectionTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m28[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in org.apache.commons.collections4.collection.[1mPredicatedCollectionTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.collection.[1mSynchronizedCollectionTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m26[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.collection.[1mSynchronizedCollectionTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.collection.[1mCompositeCollectionTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m40[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in org.apache.commons.collections4.collection.[1mCompositeCollectionTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.collection.[1mUnmodifiableBoundedCollectionTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m28[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 s - in org.apache.commons.collections4.collection.[1mUnmodifiableBoundedCollectionTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.collection.[1mUnmodifiableCollectionTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m28[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in org.apache.commons.collections4.collection.[1mUnmodifiableCollectionTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mTransformedNavigableSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m198[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.192 s - in org.apache.commons.collections4.set.[1mTransformedNavigableSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mMapBackedSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m28[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 s - in org.apache.commons.collections4.set.[1mMapBackedSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mUnmodifiableSortedSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m115[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.041 s - in org.apache.commons.collections4.set.[1mUnmodifiableSortedSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mUnmodifiableSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m30[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in org.apache.commons.collections4.set.[1mUnmodifiableSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mCompositeSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m34[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 s - in org.apache.commons.collections4.set.[1mCompositeSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mMapBackedSet2Test[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m29[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 s - in org.apache.commons.collections4.set.[1mMapBackedSet2Test[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mPredicatedNavigableSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m200[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.087 s - in org.apache.commons.collections4.set.[1mPredicatedNavigableSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mListOrderedSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m35[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 s - in org.apache.commons.collections4.set.[1mListOrderedSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mListOrderedSet2Test[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m31[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 s - in org.apache.commons.collections4.set.[1mListOrderedSet2Test[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mTransformedSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m30[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in org.apache.commons.collections4.set.[1mTransformedSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mPredicatedSortedSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m116[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 s - in org.apache.commons.collections4.set.[1mPredicatedSortedSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mPredicatedSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m31[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 s - in org.apache.commons.collections4.set.[1mPredicatedSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mTransformedSortedSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m114[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 s - in org.apache.commons.collections4.set.[1mTransformedSortedSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.set.[1mUnmodifiableNavigableSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m199[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 s - in org.apache.commons.collections4.set.[1mUnmodifiableNavigableSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mMapUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m8480[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.703 s - in org.apache.commons.collections4.[1mMapUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mCollectionUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m104[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 s - in org.apache.commons.collections4.[1mCollectionUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.multimap.[1mTransformedMultiValuedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m331[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.133 s - in org.apache.commons.collections4.multimap.[1mTransformedMultiValuedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.multimap.[1mUnmodifiableMultiValuedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m337[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.075 s - in org.apache.commons.collections4.multimap.[1mUnmodifiableMultiValuedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.multimap.[1mArrayListValuedHashMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m333[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.069 s - in org.apache.commons.collections4.multimap.[1mArrayListValuedHashMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.multimap.[1mHashSetValuedHashMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m331[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.078 s - in org.apache.commons.collections4.multimap.[1mHashSetValuedHashMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mFactoryUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m16[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 s - in org.apache.commons.collections4.[1mFactoryUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mEnumerationUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m3[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.[1mEnumerationUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bidimap.[1mDualHashBidiMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m362[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.248 s - in org.apache.commons.collections4.bidimap.[1mDualHashBidiMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bidimap.[1mUnmodifiableSortedBidiMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m805[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.185 s - in org.apache.commons.collections4.bidimap.[1mUnmodifiableSortedBidiMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bidimap.[1mTreeBidiMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m383[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.153 s - in org.apache.commons.collections4.bidimap.[1mTreeBidiMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bidimap.[1mDualTreeBidiMap2Test[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m808[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.311 s - in org.apache.commons.collections4.bidimap.[1mDualTreeBidiMap2Test[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bidimap.[1mDualLinkedHashBidiMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m362[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.188 s - in org.apache.commons.collections4.bidimap.[1mDualLinkedHashBidiMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bidimap.[1mUnmodifiableOrderedBidiMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m385[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.088 s - in org.apache.commons.collections4.bidimap.[1mUnmodifiableOrderedBidiMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bidimap.[1mUnmodifiableBidiMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m364[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 s - in org.apache.commons.collections4.bidimap.[1mUnmodifiableBidiMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.bidimap.[1mDualTreeBidiMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m803[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.174 s - in org.apache.commons.collections4.bidimap.[1mDualTreeBidiMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mListUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m22[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.[1mListUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mPredicateUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m65[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 s - in org.apache.commons.collections4.[1mPredicateUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mFixedSizeSortedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m543[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.052 s - in org.apache.commons.collections4.map.[1mFixedSizeSortedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mCaseInsensitiveMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m158[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.057 s - in org.apache.commons.collections4.map.[1mCaseInsensitiveMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mLinkedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m332[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.108 s - in org.apache.commons.collections4.map.[1mLinkedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mPassiveExpiringMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m145[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.028 s - in org.apache.commons.collections4.map.[1mPassiveExpiringMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mPredicatedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m52[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 s - in org.apache.commons.collections4.map.[1mPredicatedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mHashedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m155[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 s - in org.apache.commons.collections4.map.[1mHashedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mReferenceMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m156[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.283 s - in org.apache.commons.collections4.map.[1mReferenceMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mTransformedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m53[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in org.apache.commons.collections4.map.[1mTransformedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mStaticBucketMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m152[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 s - in org.apache.commons.collections4.map.[1mStaticBucketMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mFixedSizeMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m50[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in org.apache.commons.collections4.map.[1mFixedSizeMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mMultiKeyMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m164[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.046 s - in org.apache.commons.collections4.map.[1mMultiKeyMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mLazyMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m50[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in org.apache.commons.collections4.map.[1mLazyMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mFlat3MapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m196[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 s - in org.apache.commons.collections4.map.[1mFlat3MapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mTransformedSortedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m546[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.081 s - in org.apache.commons.collections4.map.[1mTransformedSortedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mUnmodifiableMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m52[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.map.[1mUnmodifiableMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mListOrderedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m487[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.086 s - in org.apache.commons.collections4.map.[1mListOrderedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mCompositeMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m58[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in org.apache.commons.collections4.map.[1mCompositeMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mSingletonMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m175[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s - in org.apache.commons.collections4.map.[1mSingletonMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mPredicatedSortedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m53[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in org.apache.commons.collections4.map.[1mPredicatedSortedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mLRUMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m190[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.137 s - in org.apache.commons.collections4.map.[1mLRUMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mMultiValueMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m36[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.map.[1mMultiValueMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mLazySortedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m52[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in org.apache.commons.collections4.map.[1mLazySortedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mReferenceIdentityMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m156[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.141 s - in org.apache.commons.collections4.map.[1mReferenceIdentityMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mUnmodifiableSortedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m52[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.map.[1mUnmodifiableSortedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mDefaultedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m53[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in org.apache.commons.collections4.map.[1mDefaultedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mUnmodifiableOrderedMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m56[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in org.apache.commons.collections4.map.[1mUnmodifiableOrderedMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.map.[1mListOrderedMap2Test[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m328[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.079 s - in org.apache.commons.collections4.map.[1mListOrderedMap2Test[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mIterableUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m18[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.[1mIterableUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mArrayStackTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m154[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.[1mArrayStackTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mMultiSetUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m4[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in org.apache.commons.collections4.[1mMultiSetUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mSetUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m12[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in org.apache.commons.collections4.[1mSetUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.sequence.[1mSequencesComparatorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m4[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.251 s - in org.apache.commons.collections4.sequence.[1mSequencesComparatorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.splitmap.[1mTransformedSplitMapTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m4[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in org.apache.commons.collections4.splitmap.[1mTransformedSplitMapTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mFluentIterableTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m26[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 s - in org.apache.commons.collections4.[1mFluentIterableTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.keyvalue.[1mDefaultKeyValueTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m6[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.keyvalue.[1mDefaultKeyValueTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.keyvalue.[1mDefaultMapEntryTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m5[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.keyvalue.[1mDefaultMapEntryTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.keyvalue.[1mMultiKeyTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m12[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in org.apache.commons.collections4.keyvalue.[1mMultiKeyTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.keyvalue.[1mUnmodifiableMapEntryTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m6[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.keyvalue.[1mUnmodifiableMapEntryTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.keyvalue.[1mTiedMapEntryTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m6[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.keyvalue.[1mTiedMapEntryTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.multiset.[1mPredicatedMultiSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m77[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s - in org.apache.commons.collections4.multiset.[1mPredicatedMultiSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.multiset.[1mSynchronizedMultiSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m74[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in org.apache.commons.collections4.multiset.[1mSynchronizedMultiSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.multiset.[1mHashMultiSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m74[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in org.apache.commons.collections4.multiset.[1mHashMultiSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.multiset.[1mUnmodifiableMultiSetTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m76[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 s - in org.apache.commons.collections4.multiset.[1mUnmodifiableMultiSetTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mSplitMapUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m4[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in org.apache.commons.collections4.[1mSplitMapUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.properties.[1mSortedPropertiesTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m1[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.properties.[1mSortedPropertiesTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mMultiMapUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m10[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.[1mMultiMapUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.functors.[1mEqualPredicateTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m4[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.functors.[1mEqualPredicateTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.functors.[1mComparatorPredicateTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m6[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.functors.[1mComparatorPredicateTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.functors.[1mCatchAndRethrowClosureTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m2[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.functors.[1mCatchAndRethrowClosureTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.functors.[1mAllPredicateTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m13[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in org.apache.commons.collections4.functors.[1mAllPredicateTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.functors.[1mNullPredicateTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m3[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.functors.[1mNullPredicateTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.comparators.[1mComparatorChainTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m18[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in org.apache.commons.collections4.comparators.[1mComparatorChainTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.comparators.[1mComparableComparatorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m13[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.comparators.[1mComparableComparatorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.comparators.[1mTransformingComparatorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m14[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.comparators.[1mTransformingComparatorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.comparators.[1mReverseComparatorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m13[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.comparators.[1mReverseComparatorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.comparators.[1mFixedOrderComparatorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m19[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in org.apache.commons.collections4.comparators.[1mFixedOrderComparatorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.comparators.[1mBooleanComparatorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m16[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in org.apache.commons.collections4.comparators.[1mBooleanComparatorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mQueueUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m5[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in org.apache.commons.collections4.[1mQueueUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mSkippingIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m21[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mSkippingIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mArrayIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m14[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mArrayIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mPermutationIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m17[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in org.apache.commons.collections4.iterators.[1mPermutationIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mFilterIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m16[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in org.apache.commons.collections4.iterators.[1mFilterIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mObjectArrayListIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m16[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in org.apache.commons.collections4.iterators.[1mObjectArrayListIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mLazyIteratorChainTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m15[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mLazyIteratorChainTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mListIteratorWrapperTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m13[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mListIteratorWrapperTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mListIteratorWrapper2Test[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m13[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.iterators.[1mListIteratorWrapper2Test[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mUnmodifiableOrderedMapIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m20[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.iterators.[1mUnmodifiableOrderedMapIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mUnmodifiableMapIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m19[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.iterators.[1mUnmodifiableMapIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mIteratorChainTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m15[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.iterators.[1mIteratorChainTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mUniqueFilterIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m12[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mUniqueFilterIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mCollatingIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m20[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in org.apache.commons.collections4.iterators.[1mCollatingIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mSingletonIterator2Test[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m13[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.iterators.[1mSingletonIterator2Test[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mBoundedIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m24[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.iterators.[1mBoundedIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mArrayListIterator2Test[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m13[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mArrayListIterator2Test[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mReverseListIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m20[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mReverseListIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mNodeListIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m14[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 s - in org.apache.commons.collections4.iterators.[1mNodeListIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mZippingIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m18[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mZippingIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mObjectGraphIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m26[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in org.apache.commons.collections4.iterators.[1mObjectGraphIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mPushbackIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m15[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.iterators.[1mPushbackIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mSingletonIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m14[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mSingletonIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mLoopingIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m8[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mLoopingIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mIteratorEnumerationTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m1[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.iterators.[1mIteratorEnumerationTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mSingletonListIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m20[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in org.apache.commons.collections4.iterators.[1mSingletonListIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mPeekingIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m16[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in org.apache.commons.collections4.iterators.[1mPeekingIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mFilterListIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m15[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 s - in org.apache.commons.collections4.iterators.[1mFilterListIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mLoopingListIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m12[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mLoopingListIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mArrayListIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m16[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.iterators.[1mArrayListIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mArrayIterator2Test[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m13[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.iterators.[1mArrayIterator2Test[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mObjectArrayListIterator2Test[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m18[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mObjectArrayListIterator2Test[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mObjectArrayIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m14[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mObjectArrayIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mUnmodifiableListIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m20[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.iterators.[1mUnmodifiableListIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mIteratorIterableTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m2[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.iterators.[1mIteratorIterableTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.iterators.[1mUnmodifiableIteratorTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m13[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.commons.collections4.iterators.[1mUnmodifiableIteratorTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.trie.[1mPatriciaTrieTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m550[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.326 s - in org.apache.commons.collections4.trie.[1mPatriciaTrieTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.trie.[1mUnmodifiableTrieTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m545[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.174 s - in org.apache.commons.collections4.trie.[1mUnmodifiableTrieTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.trie.[1mPatriciaTrie2Test[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m174[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.075 s - in org.apache.commons.collections4.trie.[1mPatriciaTrie2Test[m
[[1;34mINFO[m] Running org.apache.commons.collections4.list.[1mFixedSizeListTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m58[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.102 s - in org.apache.commons.collections4.list.[1mFixedSizeListTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.list.[1mSetUniqueListTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m75[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.168 s - in org.apache.commons.collections4.list.[1mSetUniqueListTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.list.[1mCursorableLinkedListTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m196[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.138 s - in org.apache.commons.collections4.list.[1mCursorableLinkedListTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.list.[1mPredicatedListTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m61[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 s - in org.apache.commons.collections4.list.[1mPredicatedListTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.list.[1mUnmodifiableListTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m60[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.119 s - in org.apache.commons.collections4.list.[1mUnmodifiableListTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.list.[1mCollections701Test[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m3[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.list.[1mCollections701Test[m
[[1;34mINFO[m] Running org.apache.commons.collections4.list.[1mTreeListTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m158[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.33 s - in org.apache.commons.collections4.list.[1mTreeListTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.list.[1mTransformedListTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m59[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 s - in org.apache.commons.collections4.list.[1mTransformedListTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.list.[1mNodeCachingLinkedListTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m156[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.086 s - in org.apache.commons.collections4.list.[1mNodeCachingLinkedListTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.list.[1mGrowthListTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m61[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 s - in org.apache.commons.collections4.list.[1mGrowthListTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mComparatorUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m6[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in org.apache.commons.collections4.[1mComparatorUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mTransformerUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m18[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.178 s - in org.apache.commons.collections4.[1mTransformerUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mBagUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m8[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 s - in org.apache.commons.collections4.[1mBagUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mIteratorUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m30[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in org.apache.commons.collections4.[1mIteratorUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.[1mTrieUtilsTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m1[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.045 s - in org.apache.commons.collections4.[1mTrieUtilsTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.queue.[1mCircularFifoQueueTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m51[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.04 s - in org.apache.commons.collections4.queue.[1mCircularFifoQueueTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.queue.[1mTransformedQueueTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m37[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.036 s - in org.apache.commons.collections4.queue.[1mTransformedQueueTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.queue.[1mPredicatedQueueTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m37[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 s - in org.apache.commons.collections4.queue.[1mPredicatedQueueTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.queue.[1mUnmodifiableQueueTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m37[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in org.apache.commons.collections4.queue.[1mUnmodifiableQueueTest[m
[[1;34mINFO[m] Running org.apache.commons.collections4.queue.[1mSynchronizedQueueTest[m
[[1;34mINFO[m] [1;32mTests run: [0;1;32m36[m, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in org.apache.commons.collections4.queue.[1mSynchronizedQueueTest[m
[[1;34mINFO[m] 
[[1;34mINFO[m] Results:
[[1;34mINFO[m] 
[[1;34mINFO[m] [1;32mTests run: 24599, Failures: 0, Errors: 0, Skipped: 0[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  36.988 s
[[1;34mINFO[m] Finished at: 2021-04-21T19:04:14-04:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
args[0]: org.apache.commons.collections4.Driver
args[1]: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/target/classes
args[2]: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/target/test-classes
args[3]: target/classes:target/test-classes::/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/mvn_dependencies/commons-lang3-3.8.1.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/mvn_dependencies/dexmaker-1.5.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/mvn_dependencies/easymock-4.0.2.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/mvn_dependencies/hamcrest-core-1.3.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/mvn_dependencies/junit-4.12.jar:/home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/Benchmarks/commons-collections-collections-4.3/mvn_dependencies/objenesis-3.0.1.jar
args[4]: commons_collections_4.3
args[5]: /home/daveroar/Graduation_Studies/ThesisWork/JRefactoring/MockAbstraction/analysis_output/MockAnalysis
Soot started on Wed Apr 21 19:04:15 EDT 2021
Number of methods to be analyzed: 8738
Statement: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("this")
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: r3
Statement: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("is")
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: r3
Statement: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: r3
Statement: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("test")
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: r3
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r1
Statement: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r18)
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: $r18
col_local: r3
Statement: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r19)
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: $r19
col_local: r3
Statement: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r20)
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: $r20
col_local: r3
Statement: interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("one")
InnerBox value: r5
SootClass Type: java.util.ArrayList
col_local: r5
Statement: interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("two")
InnerBox value: r5
SootClass Type: java.util.ArrayList
col_local: r5
Statement: interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("three")
InnerBox value: r5
SootClass Type: java.util.ArrayList
col_local: r5
Statement: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r2, $r9)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
col_local: $r9
Statement: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r2, $r10)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
col_local: $r10
Statement: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r1, $r8)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
col_local: $r8
Statement: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r1, $r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
col_local: $r9
Statement: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r44, $r7)
InnerBox value: r44
SootClass Type: java.util.ArrayList
col_local: r44
col_local: $r7
Statement: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r44, $r8)
InnerBox value: r44
SootClass Type: java.util.ArrayList
col_local: r44
col_local: $r8
Statement: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r16)
InnerBox value: $r16
SootClass Type: java.util.List
Statement: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r16)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r16
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r30)
InnerBox value: $r30
SootClass Type: java.util.List
Statement: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r30)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r30
col_local: r1
Statement: interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r25
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r25
Statement: interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r8)
InnerBox value: r25
SootClass Type: java.util.ArrayList
col_local: $r8
col_local: r25
Statement: interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r25
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r25
Statement: interfaceinvoke r26.<java.util.List: boolean addAll(java.util.Collection)>($r17)
InnerBox value: $r17
SootClass Type: java.util.List
Statement: interfaceinvoke r26.<java.util.List: boolean addAll(java.util.Collection)>($r17)
InnerBox value: r26
SootClass Type: java.util.ArrayList
col_local: $r17
col_local: r26
Statement: interfaceinvoke r26.<java.util.List: boolean addAll(java.util.Collection)>($r19)
InnerBox value: $r19
SootClass Type: java.util.List
Statement: interfaceinvoke r26.<java.util.List: boolean addAll(java.util.Collection)>($r19)
InnerBox value: r26
SootClass Type: java.util.ArrayList
col_local: $r19
col_local: r26
Statement: interfaceinvoke r1.<java.util.Queue: boolean add(java.lang.Object)>($r3)
InnerBox value: r1
SootClass Type: java.util.Queue
col_local: $r3
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r2
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
InnerBox value: r1
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r1
col_local: r4
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
InnerBox value: r2
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r2
col_local: r4
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("x")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r2
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
InnerBox value: r1
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r1
col_local: r4
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
InnerBox value: r2
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r2
col_local: r4
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("AC")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("BB")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("CA")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>("A")
InnerBox value: r3
SootClass Type: java.util.HashSet
col_local: r3
Statement: interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>("C")
InnerBox value: r3
SootClass Type: java.util.HashSet
col_local: r3
Statement: interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>("E")
InnerBox value: r3
SootClass Type: java.util.HashSet
col_local: r3
Statement: interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>("E")
InnerBox value: r3
SootClass Type: java.util.HashSet
col_local: r3
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("A")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("B")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("B")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r8
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r8
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r33)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r33
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r34)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r34
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r35)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r35
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r39)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r39
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r40)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r40
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r41)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r41
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r45)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r45
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r46)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r46
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r47)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r47
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r51)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r51
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r52)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r52
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r53)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r53
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r57)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r57
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r59)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r59
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r33)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r33
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r34)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r34
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r35)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r35
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r39)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r39
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r40)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r40
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r41)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r41
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r45)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r45
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r46)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r46
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r47)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r47
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r51)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r51
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r52)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r52
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r53)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r53
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r57)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r57
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r59)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r59
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r48)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r48
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r49)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r49
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r50)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r50
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r54)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r54
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r55)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r55
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r56)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r56
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r60)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r60
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r61)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r61
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r62)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r62
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r66)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r66
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r67)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r67
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r68)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r68
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r72)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r72
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r74)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r74
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r33)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r33
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r34)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r34
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r35)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r35
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r39)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r39
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r40)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r40
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r41)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r41
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r45)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r45
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r46)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r46
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r47)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r47
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r51)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r51
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r52)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r52
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r53)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r53
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r57)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r57
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r59)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r59
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r1
Statement: interfaceinvoke r40.<java.util.Collection: boolean add(java.lang.Object)>(r39)
InnerBox value: r40
SootClass Type: java.util.ArrayList
col_local: r39
col_local: r40
Statement: interfaceinvoke r40.<java.util.Collection: boolean add(java.lang.Object)>(r38)
InnerBox value: r40
SootClass Type: java.util.ArrayList
col_local: r38
col_local: r40
Statement: interfaceinvoke r40.<java.util.Collection: boolean add(java.lang.Object)>(r39)
InnerBox value: r40
SootClass Type: java.util.ArrayList
col_local: r39
col_local: r40
Statement: interfaceinvoke r45.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r45
SootClass Type: java.util.ArrayList
col_local: r45
Statement: interfaceinvoke r45.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r45
SootClass Type: java.util.ArrayList
col_local: r45
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("b")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("b")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("b")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("b")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("x")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("b")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("x")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("b")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("x")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("b")
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("x")
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("x")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("x")
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r11)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r11
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r8
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r8
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r1
Statement: interfaceinvoke r36.<java.util.Collection: boolean add(java.lang.Object)>(r2)
InnerBox value: r36
SootClass Type: java.util.ArrayList
col_local: r2
col_local: r36
Statement: interfaceinvoke r36.<java.util.Collection: boolean add(java.lang.Object)>(r1)
InnerBox value: r36
SootClass Type: java.util.ArrayList
col_local: r1
col_local: r36
Statement: interfaceinvoke r41.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r41
SootClass Type: java.util.ArrayList
col_local: r41
Statement: interfaceinvoke r41.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r41
SootClass Type: java.util.ArrayList
col_local: r41
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("A")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("C")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("E")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("E")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("A")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("B")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("B")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>("2")
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: r3
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>("3")
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r5
SootClass Type: java.util.ArrayList
col_local: r5
Statement: interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>("3")
InnerBox value: r5
SootClass Type: java.util.ArrayList
col_local: r5
Statement: interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r6
SootClass Type: java.util.ArrayList
col_local: r6
Statement: interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>("3")
InnerBox value: r6
SootClass Type: java.util.ArrayList
col_local: r6
Statement: interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r6
SootClass Type: java.util.ArrayList
col_local: r6
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>("2")
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: r3
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>("3")
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r5
SootClass Type: java.util.ArrayList
col_local: r5
Statement: interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>("3")
InnerBox value: r5
SootClass Type: java.util.ArrayList
col_local: r5
Statement: interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: r3
Statement: interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>("2")
InnerBox value: r5
SootClass Type: java.util.ArrayList
col_local: r5
Statement: interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>("3")
InnerBox value: r7
SootClass Type: java.util.ArrayList
col_local: r7
Statement: interfaceinvoke r9.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r9
SootClass Type: java.util.ArrayList
col_local: r9
Statement: interfaceinvoke r9.<java.util.Collection: boolean add(java.lang.Object)>("3")
InnerBox value: r9
SootClass Type: java.util.ArrayList
col_local: r9
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r5)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r8)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r8
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r11)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r11
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r14)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r14
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r17)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r17
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r20)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r20
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r23)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r23
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r26)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r26
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r29)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r29
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r32)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r32
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r35)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r35
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("2")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("2")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("2")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("2")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("1")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r4)
InnerBox value: $r4
SootClass Type: java.util.List
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r4)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r4
col_local: r2
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r5)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r2
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r4)
InnerBox value: $r4
SootClass Type: java.util.List
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r4)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r4
col_local: r2
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r5)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r2
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("x")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r8)
InnerBox value: $r8
SootClass Type: java.util.List
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r8)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r8
col_local: r2
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r9)
InnerBox value: $r9
SootClass Type: java.util.List
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r9)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r2
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r35)
InnerBox value: $r35
SootClass Type: java.util.List
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r35)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r35
col_local: r2
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r5)
InnerBox value: $r5
SootClass Type: java.util.List
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r5)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r2
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6)
InnerBox value: $r6
SootClass Type: java.util.List
Statement: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r2
MustMock Local: $r3
MustMock Casted Local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("b")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: java.util.Vector
col_local: r1
Statement: virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>("b")
InnerBox value: r1
SootClass Type: java.util.Vector
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("b")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: java.util.Vector
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("item")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("item")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r4
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r4
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r8
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r8
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r8
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r1
Statement: interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>($r2)
InnerBox value: r17
SootClass Type: java.util.ArrayList
col_local: $r2
col_local: r17
Statement: interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>($r3)
InnerBox value: r17
SootClass Type: java.util.ArrayList
col_local: $r3
col_local: r17
Statement: interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>($r4)
InnerBox value: r17
SootClass Type: java.util.ArrayList
col_local: $r4
col_local: r17
Statement: interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>($r13)
InnerBox value: r18
SootClass Type: java.util.ArrayList
col_local: $r13
col_local: r18
Statement: interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>($r14)
InnerBox value: r18
SootClass Type: java.util.ArrayList
col_local: $r14
col_local: r18
Statement: interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>($r15)
InnerBox value: r18
SootClass Type: java.util.ArrayList
col_local: $r15
col_local: r18
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3)
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: $r3
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r4)
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: $r4
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r5)
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: $r5
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("1")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("2")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("3")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("1")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("2")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("3")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: virtualinvoke r10.<org.apache.commons.collections4.queue.CircularFifoQueue: boolean add(java.lang.Object)>("2")
InnerBox value: r10
SootClass Type: org.apache.commons.collections4.queue.CircularFifoQueue
Statement: virtualinvoke r10.<org.apache.commons.collections4.queue.CircularFifoQueue: boolean add(java.lang.Object)>("2")
InnerBox value: r10
SootClass Type: org.apache.commons.collections4.queue.CircularFifoQueue
col_local: r10
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("1")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("2")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("3")
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
Statement: interfaceinvoke r6.<java.util.Queue: boolean add(java.lang.Object)>("2")
InnerBox value: r6
SootClass Type: org.apache.commons.collections4.queue.CircularFifoQueue
Statement: interfaceinvoke r6.<java.util.Queue: boolean add(java.lang.Object)>("2")
InnerBox value: r6
SootClass Type: org.apache.commons.collections4.queue.CircularFifoQueue
col_local: r6
Statement: interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r1)
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: r1
col_local: r3
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r2
col_local: r4
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("A")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("B")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("C")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("A")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("C")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("X")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("A")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("B")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("C")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("A")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("C")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("X")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("1")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("2")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("3")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
MustMock Local: $r6
MustMock Casted Local: r1
MustMock Local: $r7
MustMock Casted Local: r3
MustMock Local: $r8
MustMock Casted Local: r4
MustMock Local: $r9
MustMock Casted Local: r5
Statement: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.util.Enumeration)>($r7, r2)
InnerBox value: $r7
SootClass Type: java.util.List
col_local: $r7
col_local: r2
Statement: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Object[])>($r2, $r1)
InnerBox value: $r2
SootClass Type: java.util.List
col_local: $r2
col_local: $r1
Statement: virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>("foo")
InnerBox value: r6
SootClass Type: java.util.ArrayList
col_local: r6
Statement: virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>("bar")
InnerBox value: r6
SootClass Type: java.util.ArrayList
col_local: r6
Statement: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r13)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r13
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r14)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r14
col_local: r1
Statement: interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r10)
InnerBox value: r3
SootClass Type: java.util.HashSet
col_local: $r10
col_local: r3
Statement: interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r11)
InnerBox value: r3
SootClass Type: java.util.HashSet
col_local: $r11
col_local: r3
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("AC")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("BB")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("CA")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("AA")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("CX")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("XZ")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("AC")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("BB")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("CA")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("AA")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("CX")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("XZ")
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: r2
Statement: interfaceinvoke r1.<org.apache.commons.collections4.MultiSet: boolean add(java.lang.Object)>($r3)
InnerBox value: r1
SootClass Type: org.apache.commons.collections4.MultiSet
col_local: $r3
col_local: r1
Statement: interfaceinvoke r1.<org.apache.commons.collections4.MultiSet: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: org.apache.commons.collections4.MultiSet
col_local: r1
Statement: interfaceinvoke r1.<org.apache.commons.collections4.MultiSet: boolean add(java.lang.Object)>("a")
InnerBox value: r1
SootClass Type: org.apache.commons.collections4.MultiSet
col_local: r1
Statement: virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder addAll(java.util.Collection)>($r3)
InnerBox value: $r3
SootClass Type: java.util.List
col_local: $r3
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r1)
InnerBox value: r1
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r1)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r1)
InnerBox value: r1
SootClass Type: java.util.HashSet
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r1)
InnerBox value: r1
SootClass Type: java.util.HashSet
col_local: r1
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r2)
InnerBox value: r1
SootClass Type: java.util.Set
col_local: r2
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r4)
InnerBox value: r1
SootClass Type: java.util.Set
col_local: $r4
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r2)
InnerBox value: r1
SootClass Type: java.util.Set
col_local: r2
col_local: r1
Statement: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r5)
InnerBox value: r1
SootClass Type: java.util.Set
col_local: $r5
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r8
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r14)
InnerBox value: $r14
SootClass Type: java.util.List
Statement: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r14)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r14
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r15)
InnerBox value: $r15
SootClass Type: java.util.List
Statement: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r15)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r15
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r2
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
InnerBox value: r1
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r1
col_local: r4
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
InnerBox value: r2
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r2
col_local: r4
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r9
col_local: r2
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
InnerBox value: r1
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r1
col_local: r4
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
InnerBox value: r2
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r2
col_local: r4
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
Statement: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(null)
InnerBox value: r4
SootClass Type: java.util.ArrayList
col_local: r4
MustMock Local: $r7
MustMock Casted Local: r3
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("Two")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("One")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("Two")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r4
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("Two")
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r5
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r6
col_local: r1
Statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
InnerBox value: r1
SootClass Type: java.util.ArrayList
col_local: $r7
col_local: r1
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r12
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r13
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r14
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r15)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r15
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r16)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r16
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r17)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r17
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r18)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r18
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r19)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r19
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r20)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r20
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r21)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r21
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r22)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r22
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r23)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r23
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r24)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r24
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r25)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r25
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r26)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r26
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r27)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r27
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r28)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r28
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r29)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r29
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r30)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r30
col_local: r2
Statement: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r31)
InnerBox value: r2
SootClass Type: java.util.ArrayList
col_local: $r31
col_local: r2
Statement: interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r2)
InnerBox value: r2
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r2)
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: r2
col_local: r3
Statement: interfaceinvoke r3.<java.util.List: void add(int,java.lang.Object)>($i6, $r36)
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: $i6
col_local: $r36
col_local: r3
Statement: interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>($r24)
InnerBox value: $r24
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>($r24)
InnerBox value: r28
SootClass Type: java.util.ArrayList
col_local: $r24
col_local: r28
Statement: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r30)
InnerBox value: r3
SootClass Type: java.util.ArrayList
col_local: r30
col_local: r3
Statement: interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>(r3)
InnerBox value: r3
SootClass Type: java.util.ArrayList
Statement: interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>(r3)
InnerBox value: r28
SootClass Type: java.util.ArrayList
col_local: r3
col_local: r28
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractLinkedMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method init : 
	method containsValue : 
	method clear : 
	method firstKey : 
	method lastKey : 
	method nextKey : 
	method getEntry : 
	method previousKey : 
	method getEntry : 
	method addEntry : 
	method createEntry : 
	method removeEntry : 
	method entryBefore : 
	method entryAfter : 
	method mapIterator : 
	method createEntrySetIterator : 
	method createKeySetIterator : 
	method createValuesIterator : 
	method mapIterator : 
	method createEntry : 
	method getEntry : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.EqualPredicateTest$EqualsTestObject
	method <init> : 
	method equals : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.Flat3Map
	method <init> : 
	method <init> : 
	method get : 
	method size : 
	method isEmpty : 
	method containsKey : 
	method containsValue : 
	method put : 
	method putAll : 
	method convertToMap : 
	method createDelegateMap : 
	method remove : 
	method clear : 
	method mapIterator : 
	method entrySet : 
	method keySet : 
	method values : 
	method writeObject : 
	method readObject : 
	method clone : 
	method equals : 
	method hashCode : 
	method toString : 
	method clone : 
	method access$000 : 
	method access$100 : 
	method access$200 : 
	method access$300 : 
	method access$400 : 
	method access$500 : 
	method access$600 : 
	method access$402 : 
	method access$502 : 
	method access$602 : 
	method access$700 : 
 ====================================== 
** CLASS org.apache.commons.collections4.AbstractTreeMapTest
	method <init> : 
	method isAllowNullKey : 
	method makeObject : 
	method testNewMap : 
	method testSearch : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.TrieUtils
	method <init> : 
	method unmodifiableTrie : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.NullPredicate
	method nullPredicate : 
	method <init> : 
	method evaluate : 
	method readResolve : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.junit.SetDefaultLocaleTestRule$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer$1
	method <init> : 
	method getElement : 
	method getCount : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator
	method <init> : 
	method next : 
	method remove : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$7$1
	method <init> : 
	method nextIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.SingletonListIterator
	method <init> : 
	method hasNext : 
	method hasPrevious : 
	method nextIndex : 
	method previousIndex : 
	method next : 
	method previous : 
	method remove : 
	method add : 
	method set : 
	method reset : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.TransformedList
	method transformingList : 
	method transformedList : 
	method <init> : 
	method getList : 
	method equals : 
	method hashCode : 
	method get : 
	method indexOf : 
	method lastIndexOf : 
	method remove : 
	method add : 
	method addAll : 
	method listIterator : 
	method listIterator : 
	method set : 
	method subList : 
	method access$000 : 
	method access$100 : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.MultiKeyMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method getSampleKeys : 
	method getMultiKeyKeys : 
	method getSampleValues : 
	method getNewSampleValues : 
	method getOtherKeys : 
	method isAllowNullKey : 
	method testNullHandling : 
	method testMultiKeyGet : 
	method testMultiKeyContainsKey : 
	method testMultiKeyPut : 
	method testMultiKeyPutWithNullKey : 
	method testMultiKeyRemove : 
	method testMultiKeyRemoveAll1 : 
	method testMultiKeyRemoveAll2 : 
	method testMultiKeyRemoveAll3 : 
	method testMultiKeyRemoveAll4 : 
	method testClone : 
	method testLRUMultiKeyMap : 
	method getCompatibilityVersion : 
	method getMap : 
	method getMap : 
	method makeObject : 
	method getMap : 
	method makeObject : 
	method getOtherKeys : 
	method getSampleKeys : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$Node
	method <init> : 
	method getData : 
	method setLeft : 
	method getLeft : 
	method setRight : 
	method getRight : 
	method setParent : 
	method getParent : 
	method swapColors : 
	method isBlack : 
	method isRed : 
	method setBlack : 
	method setRed : 
	method copyColor : 
	method isLeftChild : 
	method isRightChild : 
	method getKey : 
	method getValue : 
	method setValue : 
	method equals : 
	method hashCode : 
	method setValue : 
	method getValue : 
	method getKey : 
	method access$000 : 
	method access$100 : 
	method access$200 : 
	method access$300 : 
	method access$400 : 
	method access$500 : 
	method access$600 : 
	method access$700 : 
	method access$800 : 
	method access$900 : 
	method access$1000 : 
	method access$1100 : 
	method access$1200 : 
	method access$1300 : 
	method access$1400 : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.AbstractNullComparatorTest
	method <init> : 
	method suite : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.SynchronizedMultiSet
	method synchronizedMultiSet : 
	method <init> : 
	method <init> : 
	method decorated : 
	method equals : 
	method hashCode : 
	method add : 
	method remove : 
	method getCount : 
	method setCount : 
	method uniqueSet : 
	method entrySet : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractIterableMapTest$InnerTestMapIterator
	method <init> : 
	method addSetValues : 
	method supportsRemove : 
	method isGetStructuralModify : 
	method supportsSetValue : 
	method makeEmptyIterator : 
	method makeObject : 
	method getMap : 
	method getConfirmedMap : 
	method verify : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.EnumerationUtilsTest
	method <init> : 
	method testToListWithStringTokenizer : 
Unit: goto [?= $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
Unit: specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String)>("this is a test")
Unit: $r7 = new java.util.ArrayList
Unit: r0 := @this: org.apache.commons.collections4.EnumerationUtilsTest
Unit: if $z0 == 0 goto $r7 = new java.util.ArrayList
Unit: $r8 = new java.util.StringTokenizer
Unit: specialinvoke $r8.<java.util.StringTokenizer: void <init>(java.lang.String)>("this is a test")
Unit: $r9 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>()
Unit: r3 = $r7
Unit: r1 = $r5
Unit: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("test")
Unit: return
Unit: $r6 = new java.util.StringTokenizer
Unit: r4 = staticinvoke <org.apache.commons.collections4.EnumerationUtils: java.util.List toList(java.util.StringTokenizer)>($r8)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r3, r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r4)
Unit: $r5 = new java.util.ArrayList
Unit: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: specialinvoke $r7.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("this")
Unit: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("is")
Unit: r2 = $r6
Unit: $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
	method testToListWithHashtable : 
Unit: r0 := @this: org.apache.commons.collections4.EnumerationUtilsTest
Unit: $z1 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>($r15)
Unit: $i0 = virtualinvoke r1.<java.util.Hashtable: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: $r6 = new java.util.Hashtable
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $l1 = (long) $i0
Unit: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r18)
Unit: $z0 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>($r14)
Unit: $z8 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>("two")
Unit: virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("one", $r7)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9)
Unit: $z2 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>($r16)
Unit: interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("one")
Unit: interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("two")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r13 = virtualinvoke r1.<java.util.Hashtable: java.util.Enumeration elements()>()
Unit: interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>("three")
Unit: r4 = staticinvoke <org.apache.commons.collections4.EnumerationUtils: java.util.List toList(java.util.Enumeration)>($r21)
Unit: specialinvoke $r22.<java.util.ArrayList: void <init>()>()
Unit: $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: r2 = staticinvoke <org.apache.commons.collections4.EnumerationUtils: java.util.List toList(java.util.Enumeration)>($r13)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: specialinvoke $r6.<java.util.Hashtable: void <init>()>()
Unit: r1 = $r6
Unit: $i6 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: $r22 = new java.util.ArrayList
Unit: $i2 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z13)
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $z7 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>("one")
Unit: $z6 = interfaceinvoke r2.<java.util.List: boolean containsAll(java.util.Collection)>(r3)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $l5 = (long) $i4
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7)
Unit: $r17 = new java.util.ArrayList
Unit: specialinvoke $r17.<java.util.ArrayList: void <init>()>()
Unit: r3 = $r17
Unit: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r19)
Unit: return
Unit: $z13 = interfaceinvoke r4.<java.util.List: boolean containsAll(java.util.Collection)>(r5)
Unit: virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("three", $r11)
Unit: $i4 = virtualinvoke r1.<java.util.Hashtable: int size()>()
Unit: $l7 = (long) $i6
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $z9 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>("three")
Unit: virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("two", $r9)
Unit: r5 = $r22
Unit: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r20)
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r21 = virtualinvoke r1.<java.util.Hashtable: java.util.Enumeration keys()>()
	method getFromEnumeration : 
Unit: if $z0 != 0 goto $z1 = 0
Unit: virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>("zero")
Unit: virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>("one")
Unit: return
Unit: r9 = virtualinvoke r1.<java.util.Vector: java.util.Enumeration elements()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("one", $r5)
Unit: $r7 := @caughtexception
Unit: r0 := @this: org.apache.commons.collections4.EnumerationUtilsTest
Unit: r1 = $r3
Unit: $r5 = staticinvoke <org.apache.commons.collections4.EnumerationUtils: java.lang.Object get(java.util.Enumeration,int)>(r9, 1)
Unit: $r3 = new java.util.Vector
Unit: $r4 = staticinvoke <org.apache.commons.collections4.EnumerationUtils: java.lang.Object get(java.util.Enumeration,int)>(r8, 0)
Unit: $z1 = 1
Unit: specialinvoke $r3.<java.util.Vector: void <init>()>()
Unit: goto [?= $z0 = interfaceinvoke r9.<java.util.Enumeration: boolean hasMoreElements()>()]
Unit: $z0 = interfaceinvoke r9.<java.util.Enumeration: boolean hasMoreElements()>()
Unit: $z1 = 0
Unit: r8 = virtualinvoke r1.<java.util.Vector: java.util.Enumeration elements()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException.")
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: r2 = $r7
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("zero", $r4)
Unit: staticinvoke <org.apache.commons.collections4.EnumerationUtils: java.lang.Object get(java.util.Enumeration,int)>(r9, 3)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractListValuedMap
	method <init> : 
	method <init> : 
	method getMap : 
	method createCollection : 
	method get : 
	method wrappedCollection : 
	method remove : 
	method remove : 
	method wrappedCollection : 
	method get : 
	method createCollection : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$1
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.SingletonIterator2Test
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method supportsRemove : 
	method supportsEmptyIterator : 
	method testIterator : 
	method testReset : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.PredicatedMultiSet
	method predicatedMultiSet : 
	method <init> : 
	method decorated : 
	method equals : 
	method hashCode : 
	method add : 
	method remove : 
	method getCount : 
	method setCount : 
	method uniqueSet : 
	method entrySet : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator
	method <init> : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractHashedMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method init : 
	method get : 
	method size : 
	method isEmpty : 
	method containsKey : 
	method containsValue : 
	method put : 
	method putAll : 
	method _putAll : 
	method remove : 
	method clear : 
	method convertKey : 
	method hash : 
	method isEqualKey : 
	method isEqualValue : 
	method hashIndex : 
	method getEntry : 
	method updateEntry : 
	method reuseEntry : 
	method addMapping : 
	method createEntry : 
	method addEntry : 
	method removeMapping : 
	method removeEntry : 
	method destroyEntry : 
	method checkCapacity : 
	method ensureCapacity : 
	method calculateNewCapacity : 
	method calculateThreshold : 
	method entryNext : 
	method entryHashCode : 
	method entryKey : 
	method entryValue : 
	method mapIterator : 
	method entrySet : 
	method createEntrySetIterator : 
	method keySet : 
	method createKeySetIterator : 
	method values : 
	method createValuesIterator : 
	method doWriteObject : 
	method doReadObject : 
	method clone : 
	method equals : 
	method hashCode : 
	method toString : 
	method clone : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.TreeBagTest
	method <init> : 
	method suite : 
	method makeObject : 
	method setupBag : 
	method testCollections265 : 
	method testCollections555 : 
	method testOrdering : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest
	method suite : 
	method <init> : 
	method makeObject : 
	method makeFullMap : 
	method makeConfirmedMap : 
	method ignoredTests : 
	method isAllowNullKey : 
	method isAllowNullValue : 
	method isPutAddSupported : 
	method isPutChangeSupported : 
	method isRemoveSupported : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method makeObject : 
	method makeFullMap : 
	method makeFullMap : 
	method makeObject : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.PredicateTransformer
	method predicateTransformer : 
	method <init> : 
	method transform : 
	method getPredicate : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.EmptyIterator
	method resettableEmptyIterator : 
	method emptyIterator : 
	method <init> : 
	method reset : 
	method remove : 
	method set : 
	method add : 
	method previousIndex : 
	method nextIndex : 
	method previous : 
	method hasPrevious : 
	method next : 
	method hasNext : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.PushbackIteratorTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method supportsRemove : 
	method testNormalIteration : 
	method testImmediatePushback : 
	method testDelayedPushback : 
	method testMultiplePushback : 
	method validate : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator
	method <init> : 
	method hasNext : 
	method hasPrevious : 
	method nextIndex : 
	method add : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.KeyAnalyzer
	method <init> : 
	method isOutOfBoundsIndex : 
	method isEqualBitKey : 
	method isNullBitKey : 
	method isValidBitIndex : 
	method bitsPerElement : 
	method lengthInBits : 
	method isBitSet : 
	method bitIndex : 
	method isPrefix : 
	method compare : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.SynchronizedMultiSet$SynchronizedSet
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValuesIterator
	method <init> : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.NonePredicate
	method nonePredicate : 
	method nonePredicate : 
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.TransformedNavigableSet
	method transformingNavigableSet : 
	method transformedNavigableSet : 
	method <init> : 
	method decorated : 
	method lower : 
	method floor : 
	method ceiling : 
	method higher : 
	method pollFirst : 
	method pollLast : 
	method descendingSet : 
	method descendingIterator : 
	method subSet : 
	method headSet : 
	method tailSet : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.FluentIterableTest
	method <init> : 
	method setUp : 
	method factoryMethodOf : 
Unit: $l1 = (long) $i0
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r7[2] = $r10
Unit: $i0 = virtualinvoke r25.<org.apache.commons.collections4.FluentIterable: int size()>()
Unit: $r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r15)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r7[4] = $r12
Unit: $r1[2] = $r4
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: r24 = virtualinvoke r23.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, r24)
Unit: $r7[1] = $r9
Unit: $z0 = virtualinvoke r25.<org.apache.commons.collections4.FluentIterable: boolean isEmpty()>()
Unit: $r7[0] = $r8
Unit: $r20 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Object[])>($r19)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r18 = virtualinvoke r25.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: r25 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Object)>($r14)
Unit: $r22 := @caughtexception
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18)
Unit: r26 = virtualinvoke $r20.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r15[0] = $r16
Unit: $r19 = newarray (java.lang.Integer)[0]
Unit: return
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r7 = newarray (java.lang.Integer)[5]
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: r23 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Object[])>($r1)
Unit: $r7[3] = $r11
Unit: $r1[0] = $r2
Unit: $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7)
Unit: virtualinvoke $r21.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r1 = newarray (java.lang.Integer)[5]
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r21 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>(null)
Unit: $r1[1] = $r3
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r1[3] = $r5
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r15 = newarray (java.lang.Integer)[1]
Unit: $r1[4] = $r6
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $z1 = interfaceinvoke r26.<java.util.List: boolean isEmpty()>()
	method appendElements : 
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: r1 = virtualinvoke $r4.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable append(java.lang.Object[])>($r5)
Unit: $z3 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object)>(r1, $r13)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z4)
Unit: r2 = virtualinvoke $r16.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable append(java.lang.Object[])>($r17)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $r15 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable emptyIterable>
Unit: $r17 = newarray (java.lang.Integer)[0]
Unit: $z5 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean isEmpty(java.lang.Iterable)>(r2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $i0 = staticinvoke <org.apache.commons.collections4.IterableUtils: int size(java.lang.Iterable)>($r9)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20)
Unit: $z4 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object)>(r1, $r14)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $l4 = (long) $i3
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: $r5 = newarray (java.lang.Integer)[3]
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $z1 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object)>(r1, $r11)
Unit: $i3 = staticinvoke <org.apache.commons.collections4.IterableUtils: int size(java.lang.Iterable)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, $l4)
Unit: $r16 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r15)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(40)
Unit: $r5[1] = $r7
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object)>(r1, $r10)
Unit: return
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(30)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r3)
Unit: $z2 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object)>(r1, $r12)
Unit: $r5[0] = $r6
Unit: $r3 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r5[2] = $r8
Unit: $r9 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $i1 = $i0 + 3
Unit: $l2 = (long) $i1
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(30)
	method appendIterable : 
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(30)
Unit: $l3 = (long) $i2
Unit: $z2 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object)>(r2, $r12)
Unit: $r7 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $i4 = staticinvoke <org.apache.commons.collections4.IterableUtils: int size(java.lang.Iterable)>(r2)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $z4 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object)>(r2, $r14)
Unit: $z1 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object)>(r2, $r11)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(40)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, $l5)
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $i2 = $i0 + $i1
Unit: $l5 = (long) $i4
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $r3[1] = $r5
Unit: $i0 = staticinvoke <org.apache.commons.collections4.IterableUtils: int size(java.lang.Iterable)>($r9)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r7)
Unit: r2 = virtualinvoke $r8.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable append(java.lang.Iterable)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object)>(r2, $r10)
Unit: $r3[0] = $r4
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(30)
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $z3 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object)>(r2, $r13)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z4)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20)
Unit: $r9 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $i1 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $r3 = newarray (java.lang.Integer)[3]
Unit: $r3[2] = $r6
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20)
	method collate : 
Unit: $r4 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: $r11 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: $r15 := @caughtexception
Unit: $r8 = new java.util.ArrayList
Unit: $r6 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: $r9 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: goto [?= return]
Unit: r3 = $r15
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r10 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r2, $r10)
Unit: $r7 = virtualinvoke $r5.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable collate(java.lang.Iterable)>($r6)
Unit: r2 = $r8
Unit: $r13 = virtualinvoke $r12.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable collate(java.lang.Iterable)>(null)
Unit: r1 = virtualinvoke $r7.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: virtualinvoke $r13.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: return
Unit: staticinvoke <java.util.Collections: void sort(java.util.List)>(r2)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r11)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r4)
Unit: specialinvoke $r8.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r2, $r9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r2, r1)
	method collateWithComparator : 
Unit: r1 = $r7
Unit: $r12 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r15)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator naturalComparator()>()
Unit: return
Unit: $r7 = new java.util.ArrayList
Unit: $r2 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: $r4 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r1, $r9)
Unit: r14 = virtualinvoke $r6.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r9 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r14)
Unit: staticinvoke <java.util.Collections: void sort(java.util.List)>(r1)
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r6 = virtualinvoke $r3.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable collate(java.lang.Iterable,java.util.Comparator)>($r4, $r5)
Unit: $r8 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: $r10 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r1, $r8)
Unit: $r13 = virtualinvoke $r11.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable collate(java.lang.Iterable,java.util.Comparator)>($r12, null)
Unit: r15 = virtualinvoke $r13.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: specialinvoke $r7.<java.util.ArrayList: void <init>()>()
Unit: $r11 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r10)
	method filter : 
Unit: $r7[1] = $r9
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r16 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r15)
Unit: $l3 = (long) $i2
Unit: $r19 := @caughtexception
Unit: $r4 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $i0 = interfaceinvoke r20.<java.util.List: int size()>()
Unit: r2 = $r19
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r4)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: specialinvoke $r3.<org.apache.commons.collections4.FluentIterableTest$2: void <init>(org.apache.commons.collections4.FluentIterableTest)>(r0)
Unit: $r15 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r7 = newarray (java.lang.Integer)[3]
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l1)
Unit: $l1 = (long) $i0
Unit: $r7[0] = $r8
Unit: r1 = $r3
Unit: r21 = virtualinvoke $r14.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r13 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r12)
Unit: $r14 = virtualinvoke $r13.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable filter(org.apache.commons.collections4.Predicate)>(r1)
Unit: $r7[2] = $r10
Unit: $r6 = virtualinvoke $r5.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable filter(org.apache.commons.collections4.Predicate)>(r1)
Unit: $r17 = virtualinvoke $r16.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable filter(org.apache.commons.collections4.Predicate)>(null)
Unit: $r12 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable emptyIterable>
Unit: virtualinvoke $r17.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: r20 = virtualinvoke $r6.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, r20)
Unit: $i2 = interfaceinvoke r21.<java.util.List: int size()>()
Unit: $r3 = new org.apache.commons.collections4.FluentIterableTest$2
	method forEach : 
Unit: $r4 = new java.util.concurrent.atomic.AtomicInteger
Unit: goto [?= $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
Unit: if $z0 == 0 goto $l0 = (long) i4
Unit: $l0 = (long) i4
Unit: r15 = $r13
Unit: r3 = (java.lang.Integer) $r12
Unit: $l2 = (long) $i1
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, $l2)
Unit: $r12 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
Unit: $r13 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
Unit: virtualinvoke $r10.<org.apache.commons.collections4.FluentIterable: void forEach(org.apache.commons.collections4.Closure)>($r11)
Unit: $r8 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r9 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r7 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r6)
Unit: $r10 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r9)
Unit: $r11 = (org.apache.commons.collections4.Closure) null
Unit: virtualinvoke $r7.<org.apache.commons.collections4.FluentIterable: void forEach(org.apache.commons.collections4.Closure)>(r2)
Unit: $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
Unit: return
Unit: specialinvoke $r5.<org.apache.commons.collections4.FluentIterableTest$3: void <init>(org.apache.commons.collections4.FluentIterableTest,java.util.concurrent.atomic.AtomicInteger)>(r0, r1)
Unit: goto [?= return]
Unit: r2 = $r5
Unit: i4 = 0
Unit: specialinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0)
Unit: r1 = $r4
Unit: r14 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: $r5 = new org.apache.commons.collections4.FluentIterableTest$3
Unit: $r6 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: i4 = i4 + $i3
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $i1 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicInteger: int get()>()
	method limit : 
Unit: r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List toList(java.lang.Iterable)>($r14)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r11)
Unit: virtualinvoke $r23.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: goto [?= return]
Unit: $r6 = newarray (java.lang.Integer)[3]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, $l5)
Unit: r28 = virtualinvoke $r17.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l1)
Unit: $l3 = (long) $i2
Unit: r27 = virtualinvoke $r13.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $i8 = interfaceinvoke r29.<java.util.List: int size()>()
Unit: $r23 = virtualinvoke $r22.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable limit(long)>(-2L)
Unit: $r25 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9)
Unit: $l5 = (long) $i4
Unit: $r6[0] = $r7
Unit: $r6[2] = $r9
Unit: $r21 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r5 = virtualinvoke $r4.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable limit(long)>(3L)
Unit: $r15 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, r26)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r3)
Unit: $r16 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r15)
Unit: $i0 = interfaceinvoke r26.<java.util.List: int size()>()
Unit: $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6)
Unit: return
Unit: r2 = $r25
Unit: $i2 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $l9 = (long) $i8
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l7)
Unit: $r17 = virtualinvoke $r16.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable limit(long)>(0L)
Unit: r29 = virtualinvoke $r20.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r3 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $l7 = (long) $i6
Unit: $r19 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r18)
Unit: $r13 = virtualinvoke $r12.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable limit(long)>(100L)
Unit: $i4 = interfaceinvoke r27.<java.util.List: int size()>()
Unit: r26 = virtualinvoke $r5.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r27)
Unit: $r20 = virtualinvoke $r19.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable limit(long)>(3L)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $l1 = (long) $i0
Unit: $r11 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $i6 = interfaceinvoke r28.<java.util.List: int size()>()
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting IllegalArgumentException")
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r6[1] = $r8
Unit: $r22 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r21)
Unit: $r14 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r18 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable emptyIterable>
	method reverse : 
Unit: $r4 = virtualinvoke $r3.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable reverse()>()
Unit: $l1 = (long) $i0
Unit: $r2 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List toList(java.lang.Iterable)>($r5)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2)
Unit: $r5 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: r9 = virtualinvoke $r4.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: r10 = virtualinvoke $r8.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r8 = virtualinvoke $r7.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable reverse()>()
Unit: $r6 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable emptyIterable>
Unit: staticinvoke <java.util.Collections: void reverse(java.util.List)>(r1)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r9)
Unit: $i0 = interfaceinvoke r10.<java.util.List: int size()>()
	method skip : 
Unit: goto [?= return]
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, r29)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l1)
Unit: $r17 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: $r24 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: r29 = virtualinvoke $r5.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r25 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r24)
Unit: r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List toList(java.lang.Iterable)>($r20)
Unit: $r6[3] = $r10
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9)
Unit: $i4 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $r6[2] = $r9
Unit: $r6[5] = $r12
Unit: $r16 = virtualinvoke $r15.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable skip(long)>(100L)
Unit: $r20 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r26 = virtualinvoke $r25.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable skip(long)>(-4L)
Unit: $r19 = virtualinvoke $r18.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable skip(long)>(0L)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r14 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $l9 = (long) $i8
Unit: $i0 = interfaceinvoke r29.<java.util.List: int size()>()
Unit: $r6 = newarray (java.lang.Integer)[6]
Unit: $l3 = (long) $i2
Unit: $r5 = virtualinvoke $r4.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable skip(long)>(4L)
Unit: virtualinvoke $r26.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $l5 = (long) $i4
Unit: $r21 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable emptyIterable>
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r6[4] = $r11
Unit: $r4 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r3)
Unit: return
Unit: $i8 = interfaceinvoke r32.<java.util.List: int size()>()
Unit: $r22 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r21)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r28 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7)
Unit: $i2 = interfaceinvoke r30.<java.util.List: int size()>()
Unit: r31 = virtualinvoke $r19.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: r2 = $r28
Unit: $r3 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r6[1] = $r8
Unit: r32 = virtualinvoke $r23.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting IllegalArgumentException")
Unit: $r6[0] = $r7
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r31)
Unit: r30 = virtualinvoke $r16.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r15 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r14)
Unit: $i6 = interfaceinvoke r31.<java.util.List: int size()>()
Unit: $l7 = (long) $i6
Unit: $r23 = virtualinvoke $r22.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable skip(long)>(3L)
Unit: $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6)
Unit: $r18 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r17)
	method transform : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(10L, $l1)
Unit: $r7[9] = $r17
Unit: $r3 = new org.apache.commons.collections4.FluentIterableTest$4
Unit: $r7[2] = $r10
Unit: $r7[0] = $r8
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16)
Unit: specialinvoke $r3.<org.apache.commons.collections4.FluentIterableTest$4: void <init>(org.apache.commons.collections4.FluentIterableTest)>(r0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r4)
Unit: $r19 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable emptyIterable>
Unit: $r7[8] = $r16
Unit: $l1 = (long) $i0
Unit: $r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: r27 = virtualinvoke $r6.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $l3 = (long) $i2
Unit: return
Unit: $r7[6] = $r14
Unit: $r7[5] = $r13
Unit: $r22 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r24 = virtualinvoke $r23.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable transform(org.apache.commons.collections4.Transformer)>(null)
Unit: $r4 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: $r7[3] = $r11
Unit: virtualinvoke $r24.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r7[4] = $r12
Unit: $i2 = interfaceinvoke r28.<java.util.List: int size()>()
Unit: $r7[1] = $r9
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: $r7[7] = $r15
Unit: goto [?= return]
Unit: r1 = $r3
Unit: r28 = virtualinvoke $r21.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r6 = virtualinvoke $r5.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable transform(org.apache.commons.collections4.Transformer)>(r1)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16)
Unit: $i0 = interfaceinvoke r27.<java.util.List: int size()>()
Unit: $r7 = newarray (java.lang.Integer)[10]
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16)
Unit: $r23 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r22)
Unit: r2 = $r26
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r26 := @caughtexception
Unit: $r20 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r19)
Unit: $r21 = virtualinvoke $r20.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable transform(org.apache.commons.collections4.Transformer)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, r27)
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16)
	method unique : 
Unit: $i0 = interfaceinvoke r13.<java.util.List: int size()>()
Unit: $r2 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r1)
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l1)
Unit: $r1 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r4[0] = $r5
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r4[3] = $r8
Unit: $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)
Unit: $i2 = interfaceinvoke r14.<java.util.List: int size()>()
Unit: r13 = virtualinvoke $r3.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: return
Unit: $r11 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: $r4[1] = $r6
Unit: $l3 = (long) $i2
Unit: r14 = virtualinvoke $r12.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, r13)
Unit: $r4[2] = $r7
Unit: $r10 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable emptyIterable>
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r12 = virtualinvoke $r11.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable unique()>()
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r3 = virtualinvoke $r2.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable unique()>()
Unit: $r4 = newarray (java.lang.Integer)[4]
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
	method unmodifiable : 
Unit: $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, r9)
Unit: r9 = virtualinvoke r1.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable unmodifiable()>()
Unit: $r7 := @caughtexception
Unit: $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>()
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $l1 = (long) $i0
Unit: r1 = virtualinvoke $r4.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable unmodifiable()>()
Unit: r2 = virtualinvoke r1.<org.apache.commons.collections4.FluentIterable: java.util.Iterator iterator()>()
Unit: r8 = $r7
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $r3 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: interfaceinvoke r2.<java.util.Iterator: void remove()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting UnsupportedOperationException")
Unit: $r4 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r3)
Unit: goto [?= r9 = virtualinvoke r1.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable unmodifiable()>()]
Unit: $r6 = (java.lang.Integer) $r5
Unit: return
	method zip : 
Unit: $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r30 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r26)
Unit: $r26[0] = $r27
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r46, r45)
Unit: r44 = $r6
Unit: virtualinvoke $r12.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: goto [?= $r14 = newarray (java.lang.Integer)[3]]
Unit: $r10 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r9)
Unit: $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r32[0] = $r33
Unit: $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r14 = newarray (java.lang.Integer)[3]
Unit: $r32[7] = $r40
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r44, r43)
Unit: $r14[1] = $r16
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r32 = newarray (java.lang.Integer)[9]
Unit: $r2 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: $r9 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: return
Unit: $r14[2] = $r17
Unit: r45 = virtualinvoke $r31.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)
Unit: $r5 = virtualinvoke $r3.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable zip(java.lang.Iterable)>($r4)
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7)
Unit: $r26[2] = $r29
Unit: $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2)
Unit: $r32[6] = $r39
Unit: $r19 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r18)
Unit: $r14[0] = $r15
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r32[5] = $r38
Unit: staticinvoke <java.util.Collections: void sort(java.util.List)>(r44)
Unit: r1 = $r42
Unit: $r32[3] = $r36
Unit: $r20 = newarray (java.lang.Iterable)[2]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r31 = virtualinvoke $r19.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable zip(java.lang.Iterable[])>($r20)
Unit: $r21[0] = $r22
Unit: $r26[1] = $r28
Unit: $r32[4] = $r37
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r44, $r8)
Unit: $r32[1] = $r34
Unit: $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: r43 = virtualinvoke $r5.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r7 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: $r8 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: $r20[0] = $r25
Unit: $r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14)
Unit: $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)
Unit: $r6 = new java.util.ArrayList
Unit: $r42 := @caughtexception
Unit: $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7)
Unit: $r26 = newarray (java.lang.Integer)[3]
Unit: $r12 = virtualinvoke $r10.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable zip(java.lang.Iterable)>($r11)
Unit: $r25 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r21)
Unit: $r4 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r21 = newarray (java.lang.Integer)[3]
Unit: $r20[1] = $r30
Unit: $r21[1] = $r23
Unit: $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r32[8] = $r41
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r44, $r7)
Unit: $r21[2] = $r24
Unit: r46 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r32)
Unit: $r11 = (java.lang.Iterable) null
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r32[2] = $r35
Unit: $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
	method asEnumeration : 
Unit: $z0 = interfaceinvoke r7.<java.util.Enumeration: boolean hasMoreElements()>()
Unit: $r5 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable empty()>()
Unit: r7 = virtualinvoke $r5.<org.apache.commons.collections4.FluentIterable: java.util.Enumeration asEnumeration()>()
Unit: $r2 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableB>
Unit: $r4 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableB>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, r1)
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: r1 = staticinvoke <org.apache.commons.collections4.EnumerationUtils: java.util.List toList(java.util.Enumeration)>(r6)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: return
Unit: r6 = virtualinvoke $r3.<org.apache.commons.collections4.FluentIterable: java.util.Enumeration asEnumeration()>()
Unit: $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2)
	method allMatch : 
Unit: $r11 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: virtualinvoke $r12.<org.apache.commons.collections4.FluentIterable: boolean allMatch(org.apache.commons.collections4.Predicate)>(null)
Unit: $r9 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r8)
Unit: $r7 = <org.apache.commons.collections4.FluentIterableTest: org.apache.commons.collections4.Predicate EVEN>
Unit: $r4 = <org.apache.commons.collections4.FluentIterableTest: org.apache.commons.collections4.Predicate EVEN>
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2)
Unit: $z1 = virtualinvoke $r6.<org.apache.commons.collections4.FluentIterable: boolean allMatch(org.apache.commons.collections4.Predicate)>($r7)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2)
Unit: $r5 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: $r6 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r5)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r11)
Unit: $r8 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r10 = <org.apache.commons.collections4.FluentIterableTest: org.apache.commons.collections4.Predicate EVEN>
Unit: $r13 := @caughtexception
Unit: $z0 = virtualinvoke $r3.<org.apache.commons.collections4.FluentIterable: boolean allMatch(org.apache.commons.collections4.Predicate)>($r4)
Unit: $z2 = virtualinvoke $r9.<org.apache.commons.collections4.FluentIterable: boolean allMatch(org.apache.commons.collections4.Predicate)>($r10)
Unit: r1 = $r13
Unit: $r2 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: goto [?= return]
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
	method anyMatch : 
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $z2 = virtualinvoke $r9.<org.apache.commons.collections4.FluentIterable: boolean anyMatch(org.apache.commons.collections4.Predicate)>($r10)
Unit: virtualinvoke $r12.<org.apache.commons.collections4.FluentIterable: boolean anyMatch(org.apache.commons.collections4.Predicate)>(null)
Unit: $r8 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $z1 = virtualinvoke $r6.<org.apache.commons.collections4.FluentIterable: boolean anyMatch(org.apache.commons.collections4.Predicate)>($r7)
Unit: $r10 = <org.apache.commons.collections4.FluentIterableTest: org.apache.commons.collections4.Predicate EVEN>
Unit: $z0 = virtualinvoke $r3.<org.apache.commons.collections4.FluentIterable: boolean anyMatch(org.apache.commons.collections4.Predicate)>($r4)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r11)
Unit: $r4 = <org.apache.commons.collections4.FluentIterableTest: org.apache.commons.collections4.Predicate EVEN>
Unit: $r5 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: $r6 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r5)
Unit: $r9 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r8)
Unit: $r13 := @caughtexception
Unit: $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2)
Unit: $r7 = <org.apache.commons.collections4.FluentIterableTest: org.apache.commons.collections4.Predicate EVEN>
Unit: $r11 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: goto [?= return]
Unit: $r2 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: r1 = $r13
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: return
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
	method isEmpty : 
Unit: $r3 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: $z1 = virtualinvoke $r4.<org.apache.commons.collections4.FluentIterable: boolean isEmpty()>()
Unit: $r2 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r1)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: $r1 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable emptyIterable>
Unit: $z0 = virtualinvoke $r2.<org.apache.commons.collections4.FluentIterable: boolean isEmpty()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r3)
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: return
	method size : 
Unit: goto [?= $r4 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable emptyIterable>]
Unit: $l4 = (long) $i3
Unit: $l6 = (long) $i5
Unit: $r7 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List toList(java.lang.Iterable)>($r6)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r2)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r5 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r4)
Unit: $i3 = interfaceinvoke $r7.<java.util.List: int size()>()
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: virtualinvoke $r3.<org.apache.commons.collections4.FluentIterable: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l4, $l6)
Unit: $r10 := @caughtexception
Unit: $i5 = virtualinvoke $r9.<org.apache.commons.collections4.FluentIterable: int size()>()
Unit: r1 = $r10
Unit: $r8 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: $l2 = (long) $i1
Unit: return
Unit: $r4 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable emptyIterable>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l2)
Unit: $r6 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableOdd>
Unit: $i1 = virtualinvoke $r5.<org.apache.commons.collections4.FluentIterable: int size()>()
Unit: $r2 = (java.lang.Iterable) null
Unit: $r9 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r8)
	method eval : 
Unit: $r19[8] = $r28
Unit: $r39[5] = $r45
Unit: $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r37, $r38)
Unit: $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(5L, $l1)
Unit: $r19[2] = $r22
Unit: $r5[6] = $r12
Unit: $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12)
Unit: $r31[0] = $r32
Unit: $r31[2] = $r34
Unit: $r19[0] = $r20
Unit: $r39[7] = $r47
Unit: $r19[7] = $r27
Unit: $i0 = virtualinvoke r3.<org.apache.commons.collections4.FluentIterable: int size()>()
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(19)
Unit: $r50 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r39)
Unit: $r5[2] = $r8
Unit: $r5[3] = $r9
Unit: $r39[8] = $r48
Unit: $r51 = virtualinvoke r2.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: $r4 = new java.util.ArrayList
Unit: $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7)
Unit: $r5[0] = $r6
Unit: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r16)
Unit: $r38 = virtualinvoke r3.<org.apache.commons.collections4.FluentIterable: java.util.List toList()>()
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r19[9] = $r29
Unit: $r31[4] = $r36
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15)
Unit: $r19[3] = $r23
Unit: $r19 = newarray (java.lang.Integer)[10]
Unit: $r39[0] = $r40
Unit: $r5[7] = $r13
Unit: $i2 = virtualinvoke r2.<org.apache.commons.collections4.FluentIterable: int size()>()
Unit: $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18)
Unit: return
Unit: $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r39[6] = $r46
Unit: $r5[9] = $r15
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r50, $r51)
Unit: $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20)
Unit: $l1 = (long) $i0
Unit: $r18 = <org.apache.commons.collections4.FluentIterableTest: org.apache.commons.collections4.Predicate EVEN>
Unit: $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16)
Unit: $r5 = newarray (java.lang.Integer)[10]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(10L, $l3)
Unit: $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(14)
Unit: $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $r39[9] = $r49
Unit: $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(14)
Unit: $r31 = newarray (java.lang.Integer)[5]
Unit: $r39[3] = $r43
Unit: r3 = virtualinvoke r2.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable eval()>()
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r5[8] = $r14
Unit: r2 = virtualinvoke $r17.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable filter(org.apache.commons.collections4.Predicate)>($r18)
Unit: $r19[1] = $r21
Unit: $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12)
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $r39 = newarray (java.lang.Integer)[10]
Unit: $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r39[2] = $r42
Unit: $r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5)
Unit: $l3 = (long) $i2
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r30)
Unit: $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(17)
Unit: r1 = $r4
Unit: $r17 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>(r1)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r37 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r31)
Unit: $r19[4] = $r24
Unit: $r39[1] = $r41
Unit: $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18)
Unit: $r39[4] = $r44
Unit: $r30 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19)
Unit: $r31[1] = $r33
Unit: $r19[5] = $r25
Unit: $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)
Unit: $r5[4] = $r10
Unit: $r19[6] = $r26
Unit: $r5[1] = $r7
Unit: $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20)
Unit: $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11)
Unit: $r31[3] = $r35
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r5[5] = $r11
Unit: $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)
	method contains : 
Unit: return
Unit: $r2 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r1)
Unit: $r11 = newarray (java.lang.Integer)[1]
Unit: $r4 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: $r12 = (java.lang.Integer) null
Unit: $z3 = virtualinvoke $r13.<org.apache.commons.collections4.FluentIterable: boolean contains(java.lang.Object)>(null)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r9 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: $z1 = virtualinvoke $r5.<org.apache.commons.collections4.FluentIterable: boolean contains(java.lang.Object)>($r6)
Unit: $r10 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r9)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $r13 = virtualinvoke $r10.<org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable append(java.lang.Object[])>($r11)
Unit: $z0 = virtualinvoke $r2.<org.apache.commons.collections4.FluentIterable: boolean contains(java.lang.Object)>($r3)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r1 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: $z2 = virtualinvoke $r8.<org.apache.commons.collections4.FluentIterable: boolean contains(java.lang.Object)>(null)
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r7 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: $r11[0] = $r12
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r7)
	method copyInto : 
Unit: $r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13)
Unit: return
Unit: $r18 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r22 := @caughtexception
Unit: r25 = $r6
Unit: interfaceinvoke r26.<java.util.List: boolean addAll(java.util.Collection)>($r17)
Unit: $i4 = interfaceinvoke r26.<java.util.List: int size()>()
Unit: specialinvoke $r12.<java.util.ArrayList: void <init>()>()
Unit: $i0 = interfaceinvoke r24.<java.util.List: int size()>()
Unit: $r13[1] = $r15
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: interfaceinvoke r26.<java.util.List: boolean addAll(java.util.Collection)>($r19)
Unit: interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: $i6 = interfaceinvoke r25.<java.util.List: int size()>()
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)
Unit: $r13[0] = $r14
Unit: $r6 = new java.util.ArrayList
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r8)
Unit: goto [?= return]
Unit: $l1 = (long) $i0
Unit: $r3 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $i2 = interfaceinvoke r23.<java.util.List: int size()>()
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: virtualinvoke $r4.<org.apache.commons.collections4.FluentIterable: void copyInto(java.util.Collection)>(r23)
Unit: $r12 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r24, r23)
Unit: $l7 = (long) $i6
Unit: $l5 = (long) $i4
Unit: $r21 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r20)
Unit: $r13[2] = $r16
Unit: $r11 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r10)
Unit: $l3 = (long) $i2
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: $r5 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7)
Unit: interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: r24 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List toList(java.lang.Iterable)>($r5)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3)
Unit: $r2 = new java.util.ArrayList
Unit: r1 = $r22
Unit: r26 = $r12
Unit: virtualinvoke $r11.<org.apache.commons.collections4.FluentIterable: void copyInto(java.util.Collection)>(r25)
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8)
Unit: $r19 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List toList(java.lang.Iterable)>($r18)
Unit: $r13 = newarray (java.lang.Integer)[3]
Unit: $r4 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r3)
Unit: virtualinvoke $r21.<org.apache.commons.collections4.FluentIterable: void copyInto(java.util.Collection)>(null)
Unit: $r10 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r26, r25)
Unit: r23 = $r2
Unit: $r20 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
	method iterator : 
Unit: $r2 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r1 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: r4 = virtualinvoke $r2.<org.apache.commons.collections4.FluentIterable: java.util.Iterator iterator()>()
Unit: return
Unit: r5 = virtualinvoke $r3.<org.apache.commons.collections4.FluentIterable: java.util.Iterator iterator()>()
Unit: $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Unit: $r3 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable empty()>()
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
	method get : 
Unit: $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>()
Unit: $r8 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: $r4 = (java.lang.Integer) $r3
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting IndexOutOfBoundsException")
Unit: $r1 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: virtualinvoke $r9.<org.apache.commons.collections4.FluentIterable: java.lang.Object get(int)>($i2)
Unit: $r13 := @caughtexception
Unit: $r2 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r1)
Unit: $l1 = (long) $i0
Unit: $i2 = staticinvoke <org.apache.commons.collections4.IterableUtils: int size(java.lang.Iterable)>($r10)
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: r14 = $r12
Unit: $r5 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
Unit: r15 = $r13
Unit: $r3 = virtualinvoke $r2.<org.apache.commons.collections4.FluentIterable: java.lang.Object get(int)>(0)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r5)
Unit: $r9 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r8)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting IndexOutOfBoundsException")
Unit: goto [?= return]
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: $r12 := @caughtexception
Unit: virtualinvoke $r6.<org.apache.commons.collections4.FluentIterable: java.lang.Object get(int)>(-1)
Unit: goto [?= $r8 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>]
Unit: $r10 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableEven>
	method toArray : 
Unit: $r14 := @caughtexception
Unit: $r4[0] = $r5
Unit: $r10 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Object[])>(r1)
Unit: $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r2)
Unit: return
Unit: $r4[4] = $r9
Unit: $r12 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Object[])>(r1)
Unit: $r4[1] = $r6
Unit: r1 = $r4
Unit: staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>(r1, r2)
Unit: $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: virtualinvoke $r12.<org.apache.commons.collections4.FluentIterable: java.lang.Object[] toArray(java.lang.Class)>(class "Ljava/lang/String;")
Unit: $r4[3] = $r8
Unit: goto [?= return]
Unit: $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L)
Unit: $r4[2] = $r7
Unit: $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: $r11 = virtualinvoke $r10.<org.apache.commons.collections4.FluentIterable: java.lang.Object[] toArray(java.lang.Class)>(class "Ljava/lang/Long;")
Unit: r2 = (java.lang.Long[]) $r11
Unit: r3 = $r14
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: $r4 = newarray (java.lang.Long)[5]
	method testToString : 
Unit: $r3 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: $r5 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable empty()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, r6)
Unit: $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>()
Unit: r0 := @this: org.apache.commons.collections4.FluentIterableTest
Unit: r6 = virtualinvoke $r2.<org.apache.commons.collections4.FluentIterable: java.lang.String toString()>()
Unit: r7 = virtualinvoke $r5.<org.apache.commons.collections4.FluentIterable: java.lang.String toString()>()
Unit: $r1 = r0.<org.apache.commons.collections4.FluentIterableTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[]", r7)
Unit: return
Unit: $r2 = staticinvoke <org.apache.commons.collections4.FluentIterable: org.apache.commons.collections4.FluentIterable of(java.lang.Iterable)>($r1)
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.AbstractArrayListTest
	method <init> : 
	method makeObject : 
	method testNewArrayList : 
	method testSearch : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.PredicatedList$PredicatedListIterator
	method <init> : 
	method add : 
	method set : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.PredicatedBagTest
	method <init> : 
	method suite : 
	method stringPredicate : 
	method decorateBag : 
	method makeObject : 
	method makeTestBag : 
	method testlegalAddRemove : 
	method testIllegalAdd : 
	method testIllegalDecorate : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractDualBidiMap$MapEntry
	method <init> : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator
	method <init> : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef
	method <init> : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.BulkTestSuiteMaker
	method <init> : 
	method make : 
	method make : 
	method addTest : 
	method addBulk : 
	method getBaseName : 
	method getTestCaseConstructor : 
	method makeTestCase : 
	method makeFirstTestCase : 
	method isTest : 
	method isBulk : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy
	method <init> : 
	method <init> : 
	method <init> : 
	method expirationTime : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator
	method <init> : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor
	method <init> : 
	method setList : 
	method visitInsertCommand : 
	method visitKeepCommand : 
	method visitDeleteCommand : 
	method getString : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.ListOrderedSetTest
	method <init> : 
	method makeObject : 
	method setupSet : 
	method testOrdering : 
	method testListAddRemove : 
	method testListAddIndexed : 
	method testListAddReplacing : 
	method testRetainAll : 
	method testDuplicates : 
	method testDecorator : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest
	method <init> : 
	method makeMapEntry : 
	method makeMapEntry : 
	method testConstructors : 
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("name", $r4)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("duke", $r9)
Unit: $z0 = r14 instanceof org.apache.commons.collections4.Unmodifiable
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("name", $r11)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("duke", $r12)
Unit: $r10 = new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry
Unit: specialinvoke $r10.<org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry: void <init>(java.util.Map$Entry)>(r14)
Unit: $r8 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("duke", $r5)
Unit: $r4 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: r14 = $r7
Unit: $r3 = new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry
Unit: r13 = $r3
Unit: $r5 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: r1 = $r6
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("name", $r8)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: specialinvoke $r7.<org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry: void <init>(org.apache.commons.collections4.KeyValue)>(r1)
Unit: $r12 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: $r7 = new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry
Unit: r2 = $r10
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest
Unit: $r9 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: $r11 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: specialinvoke $r3.<org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry: void <init>(java.lang.Object,java.lang.Object)>("name", "duke")
Unit: specialinvoke $r6.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: void <init>(java.lang.Object,java.lang.Object)>("name", "duke")
Unit: $r6 = new org.apache.commons.collections4.keyvalue.DefaultKeyValue
	method testAccessorsAndMutators : 
Unit: r5 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest: java.util.Map$Entry makeMapEntry(java.lang.Object,java.lang.Object)>("name", "duke")
Unit: r6 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest: java.util.Map$Entry makeMapEntry(java.lang.Object,java.lang.Object)>(null, null)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("name", $r1)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(null, $r4)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("duke", $r2)
Unit: $r1 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: $r3 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(null, $r3)
Unit: $r2 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: $r4 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
	method testSelfReferenceHandling : 
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest
Unit: return
	method testUnmodifiable : 
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: goto [?= return]
Unit: r2 = $r4
Unit: return
Unit: interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null)
Unit: r1 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest: java.util.Map$Entry makeMapEntry()>()
Unit: $r4 := @caughtexception
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ChainedTransformer
	method chainedTransformer : 
	method chainedTransformer : 
	method <init> : 
	method <init> : 
	method transform : 
	method getTransformers : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.FunctorUtils
	method <init> : 
	method copy : 
	method coerce : 
	method validate : 
	method validate : 
	method copy : 
	method validate : 
	method coerce : 
	method copy : 
	method validate : 
	method coerce : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapIterator
	method <init> : 
	method addSetValues : 
	method supportsRemove : 
	method supportsSetValue : 
	method makeEmptyIterator : 
	method makeObject : 
	method getMap : 
	method getConfirmedMap : 
	method verify : 
	method getMap : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.QueueUtilsTest
	method <init> : 
	method testSynchronizedQueue : 
Unit: r0 := @this: org.apache.commons.collections4.QueueUtilsTest
Unit: specialinvoke $r3.<java.util.LinkedList: void <init>()>()
Unit: $z0 = r1 instanceof org.apache.commons.collections4.queue.SynchronizedQueue
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null queue.")
Unit: r1 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue synchronizedQueue(java.util.Queue)>($r3)
Unit: r2 = $r5
Unit: staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue synchronizedQueue(java.util.Queue)>(null)
Unit: $r5 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be a SynchronizedQueue.", $z0)
Unit: $r3 = new java.util.LinkedList
Unit: goto [?= return]
Unit: return
	method testUnmodifiableQueue : 
Unit: $r6 := @caughtexception
Unit: $z0 = r1 instanceof org.apache.commons.collections4.queue.UnmodifiableQueue
Unit: r0 := @this: org.apache.commons.collections4.QueueUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue unmodifiableQueue(java.util.Queue)>(null)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null queue.")
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be an UnmodifiableQueue.", $z0)
Unit: $r3 = new java.util.LinkedList
Unit: $r5 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue unmodifiableQueue(java.util.Queue)>(r1)
Unit: specialinvoke $r3.<java.util.LinkedList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("UnmodifiableQueue shall not be decorated", r1, $r5)
Unit: return
Unit: r1 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue unmodifiableQueue(java.util.Queue)>($r3)
Unit: r2 = $r6
Unit: goto [?= $r5 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue unmodifiableQueue(java.util.Queue)>(r1)]
	method testPredicatedQueue : 
Unit: $r9 := @caughtexception
Unit: staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)>($r6, null)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null predicate.")
Unit: $r4 = r0.<org.apache.commons.collections4.QueueUtilsTest: org.apache.commons.collections4.Predicate truePredicate>
Unit: $r8 := @caughtexception
Unit: r0 := @this: org.apache.commons.collections4.QueueUtilsTest
Unit: specialinvoke $r6.<java.util.LinkedList: void <init>()>()
Unit: goto [?= return]
Unit: r11 = $r9
Unit: r1 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)>($r2, $r3)
Unit: $r6 = new java.util.LinkedList
Unit: $r3 = r0.<org.apache.commons.collections4.QueueUtilsTest: org.apache.commons.collections4.Predicate truePredicate>
Unit: staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue predicatedQueue(java.util.Queue,org.apache.commons.collections4.Predicate)>(null, $r4)
Unit: r10 = $r8
Unit: specialinvoke $r2.<java.util.LinkedList: void <init>()>()
Unit: goto [?= $r6 = new java.util.LinkedList]
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be a PredicatedQueue.", $z0)
Unit: return
Unit: $z0 = r1 instanceof org.apache.commons.collections4.queue.PredicatedQueue
Unit: $r2 = new java.util.LinkedList
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null queue.")
	method testTransformedQueue : 
Unit: goto [?= return]
Unit: $r4 = r0.<org.apache.commons.collections4.QueueUtilsTest: org.apache.commons.collections4.Transformer nopTransformer>
Unit: r11 = $r8
Unit: $r9 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null transformer.")
Unit: specialinvoke $r2.<java.util.LinkedList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be an TransformedQueue.", $z0)
Unit: $r8 := @caughtexception
Unit: r1 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)>($r2, $r3)
Unit: r0 := @this: org.apache.commons.collections4.QueueUtilsTest
Unit: $r3 = r0.<org.apache.commons.collections4.QueueUtilsTest: org.apache.commons.collections4.Transformer nopTransformer>
Unit: return
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null queue.")
Unit: staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)>($r6, null)
Unit: specialinvoke $r6.<java.util.LinkedList: void <init>()>()
Unit: goto [?= $r6 = new java.util.LinkedList]
Unit: r10 = $r9
Unit: $r6 = new java.util.LinkedList
Unit: $r2 = new java.util.LinkedList
Unit: $z0 = r1 instanceof org.apache.commons.collections4.queue.TransformedQueue
Unit: staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue transformingQueue(java.util.Queue,org.apache.commons.collections4.Transformer)>(null, $r4)
	method testEmptyQueue : 
Unit: $r3 = new java.lang.Object
Unit: r0 := @this: org.apache.commons.collections4.QueueUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be an UnmodifiableQueue.", $z0)
Unit: $z0 = r1 instanceof org.apache.commons.collections4.queue.UnmodifiableQueue
Unit: r1 = staticinvoke <org.apache.commons.collections4.QueueUtils: java.util.Queue emptyQueue()>()
Unit: $z1 = interfaceinvoke r1.<java.util.Queue: boolean isEmpty()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned queue is not empty.", $z1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting UnsupportedOperationException for empty queue.")
Unit: goto [?= return]
Unit: $r4 := @caughtexception
Unit: r2 = $r4
Unit: specialinvoke $r3.<java.lang.Object: void <init>()>()
Unit: interfaceinvoke r1.<java.util.Queue: boolean add(java.lang.Object)>($r3)
 ====================================== 
** CLASS org.apache.commons.collections4.collection.PredicatedCollection
	method builder : 
	method notNullBuilder : 
	method predicatedCollection : 
	method <init> : 
	method validate : 
	method add : 
	method addAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.AbstractSetDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method equals : 
	method hashCode : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractSortedBidiMapTest
	method <init> : 
	method isAllowNullKey : 
	method isAllowNullValue : 
	method makeObject : 
	method makeFullMap : 
	method makeConfirmedMap : 
	method testBidiHeadMapContains : 
	method testBidiClearByHeadMap : 
	method testBidiRemoveByHeadMap : 
	method testBidiRemoveByHeadMapEntrySet : 
	method testBidiTailMapContains : 
	method testBidiClearByTailMap : 
	method testBidiRemoveByTailMap : 
	method testBidiRemoveByTailMapEntrySet : 
	method testBidiSubMapContains : 
	method testBidiClearBySubMap : 
	method testBidiRemoveBySubMap : 
	method testBidiRemoveBySubMapEntrySet : 
	method bulkTestHeadMap : 
	method bulkTestTailMap : 
	method bulkTestSubMap : 
	method makeObject : 
	method makeFullMap : 
	method makeFullMap : 
	method makeObject : 
	method makeConfirmedMap : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.properties.SortedProperties
	method <init> : 
	method keys : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.ComparableComparator
	method comparableComparator : 
	method <init> : 
	method compare : 
	method hashCode : 
	method equals : 
	method compare : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest
	method <init> : 
	method setUp : 
	method forEach : 
Unit: $z7 = 1
Unit: specialinvoke $r8.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: r1 = $r6
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: specialinvoke $r10.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: void forEach(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r4, r3)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: r4 = $r10
Unit: r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear")
Unit: if $z4 == 0 goto $z7 = 0
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: void forEach(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r4, r3)
Unit: $z4 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: void forEach(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r4, null)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: $r6 = new java.util.ArrayList
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: void forEach(java.lang.Iterable,org.apache.commons.collections4.Closure)>(null, r3)
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: r5 = $r11
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
Unit: $z7 = 0
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: r2 = $r8
Unit: return
Unit: $r11 := @caughtexception
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: $z6 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
Unit: $r8 = new java.util.ArrayList
Unit: $r10 = new java.util.ArrayList
Unit: if $z6 == 0 goto $z7 = 0
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IterableUtils: void forEach(java.lang.Iterable,org.apache.commons.collections4.Closure)>(null, r3)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)]
	method forEachFailure : 
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: void forEach(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r2, r1)
Unit: r1 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear")
Unit: r2 = $r3
Unit: $r3 = new java.util.ArrayList
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("x")
Unit: return
	method forEachButLast : 
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: r16 = (java.util.List) $r11
Unit: if $z7 != 0 goto $z8 = 0
Unit: specialinvoke $r8.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>(r17)
Unit: $r11 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object forEachButLast(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r4, r3)
Unit: $z4 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: r1 = $r6
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $z8 = 0
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: $z8 = 1
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object forEachButLast(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r4, null)
Unit: $r15 := @caughtexception
Unit: $z7 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
Unit: if $z4 == 0 goto $z8 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)]
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object forEachButLast(java.lang.Iterable,org.apache.commons.collections4.Closure)>(null, r3)]
Unit: r17 = (java.util.List) $r14
Unit: r5 = $r15
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object forEachButLast(java.lang.Iterable,org.apache.commons.collections4.Closure)>(null, r3)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r2, r16)
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object forEachButLast(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r4, r3)
Unit: specialinvoke $r10.<java.util.ArrayList: void <init>()>()
Unit: return
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: $r8 = new java.util.ArrayList
Unit: r4 = $r10
Unit: r2 = $r8
Unit: r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear")
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
Unit: $r6 = new java.util.ArrayList
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r10 = new java.util.ArrayList
	method containsWithEquator : 
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("AC")
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: goto [?= return]
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("BB")
Unit: specialinvoke $r5.<org.apache.commons.collections4.IterableUtilsTest$3: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("CA")
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z7)
Unit: return
Unit: r3 = $r6
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object,org.apache.commons.collections4.Equator)>(r1, "AC", null)
Unit: $r4 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
Unit: $z5 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object,org.apache.commons.collections4.Equator)>(r1, "CC", r2)
Unit: r2 = $r5
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $z6 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object,org.apache.commons.collections4.Equator)>(r1, "CX", r2)
Unit: $r5 = new org.apache.commons.collections4.IterableUtilsTest$3
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z6)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r6 := @caughtexception
Unit: $z4 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object,org.apache.commons.collections4.Equator)>(r1, "AC", r2)
Unit: r1 = $r4
Unit: $z3 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("CC")
Unit: $z7 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean contains(java.lang.Iterable,java.lang.Object,org.apache.commons.collections4.Equator)>(null, null, r2)
	method frequency : 
Unit: $i10 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r14, $r15)
Unit: $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: $r26[1] = $r28
Unit: specialinvoke $r41.<org.apache.commons.collections4.bag.HashBag: void <init>()>()
Unit: $r18 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB>
Unit: $r20 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB>
Unit: $r40 = new java.util.HashSet
Unit: interfaceinvoke r4.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object)>("C")
Unit: $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
Unit: $l25 = (long) $i24
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r26[2] = $r29
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l31)
Unit: interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>("C")
Unit: $r32[2] = $r35
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $i42 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r4, "D")
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $i22 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r1, $r38)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l33)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l7)
Unit: $i18 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r22, $r23)
Unit: interfaceinvoke r4.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object,int)>("A", 3)
Unit: $r12 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l5)
Unit: $r16 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB>
Unit: $r32 = newarray (java.lang.Number)[5]
Unit: $i14 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r18, $r19)
Unit: interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>("E")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l35)
Unit: $l3 = (long) $i2
Unit: $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L)
Unit: $l23 = (long) $i22
Unit: $l33 = (long) $i32
Unit: $i34 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r3, "E")
Unit: $i44 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r4, "E")
Unit: $l45 = (long) $i44
Unit: $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
Unit: $l41 = (long) $i40
Unit: r3 = $r40
Unit: $r32[3] = $r36
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l45)
Unit: $i24 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r2, $r39)
Unit: $l31 = (long) $i30
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l37)
Unit: $i0 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(null, $r5)
Unit: $l1 = (long) $i0
Unit: $r22 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB>
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r26)
Unit: $r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: $i26 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r3, "A")
Unit: $i30 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r3, "C")
Unit: r4 = $r41
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l41)
Unit: $l5 = (long) $i4
Unit: $l43 = (long) $i42
Unit: $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: specialinvoke $r40.<java.util.HashSet: void <init>()>()
Unit: $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r32[4] = $r37
Unit: $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r6 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: $r14 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: $i20 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r24, $r25)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l11)
Unit: $l35 = (long) $i34
Unit: $r10 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: interfaceinvoke r4.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object)>("E")
Unit: $l27 = (long) $i26
Unit: $l29 = (long) $i28
Unit: $l21 = (long) $i20
Unit: $l13 = (long) $i12
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: $i4 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r8, $r9)
Unit: $i28 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r3, "B")
Unit: r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r32)
Unit: $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L)
Unit: $r24 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l13)
Unit: $i40 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r4, "C")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l19)
Unit: $l19 = (long) $i18
Unit: $l11 = (long) $i10
Unit: $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r26 = newarray (java.lang.Number)[5]
Unit: $i2 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r6, $r7)
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $l7 = (long) $i6
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l17)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l23)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l43)
Unit: interfaceinvoke r4.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object)>("E")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l39)
Unit: $i8 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r12, $r13)
Unit: $l37 = (long) $i36
Unit: $i32 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r3, "D")
Unit: $r41 = new org.apache.commons.collections4.bag.HashBag
Unit: $i38 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r4, "B")
Unit: interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>("E")
Unit: $r26[3] = $r30
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l27)
Unit: $i12 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r16, $r17)
Unit: $i16 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r20, $r21)
Unit: $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $l9 = (long) $i8
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: $i6 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>($r10, $r11)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l21)
Unit: $l15 = (long) $i14
Unit: $r8 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: $r26[0] = $r27
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l25)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l29)
Unit: $l17 = (long) $i16
Unit: $r32[1] = $r34
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l9)
Unit: $r38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: return
Unit: $r26[4] = $r31
Unit: $i36 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r4, "A")
Unit: interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>("A")
Unit: $r32[0] = $r33
Unit: $l39 = (long) $i38
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l15)
	method frequencyOfNull : 
Unit: $i10 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r1, null)
Unit: $l13 = (long) $i12
Unit: $i0 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r1, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("B")
Unit: $i12 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r1, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l11)
Unit: $l7 = (long) $i6
Unit: $i2 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r1, null)
Unit: $i8 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r1, null)
Unit: $l1 = (long) $i0
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("B")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l13)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("A")
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l7)
Unit: r1 = $r2
Unit: $r2 = new java.util.ArrayList
Unit: $i6 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r1, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: $l5 = (long) $i4
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: $l9 = (long) $i8
Unit: $l3 = (long) $i2
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: $i4 = staticinvoke <org.apache.commons.collections4.IterableUtils: int frequency(java.lang.Iterable,java.lang.Object)>(r1, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5)
Unit: $l11 = (long) $i10
	method find : 
Unit: r13 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r2)
Unit: r15 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r6)
Unit: $r7 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: $r9 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object find(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, r15)
Unit: $z1 = 1
Unit: goto [?= return]
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(45)
Unit: $r3 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r9)
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: return
Unit: if r16 != null goto $z1 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r11)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object find(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r7, r15)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $z1 = 0
Unit: r16 = (java.lang.Integer) $r8
Unit: $r10 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: r1 = $r12
Unit: r14 = (java.lang.Integer) $r4
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $z0 = virtualinvoke r14.<java.lang.Integer: boolean equals(java.lang.Object)>($r5)
Unit: $r12 := @caughtexception
Unit: $r4 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object find(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r3, r13)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r11 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object find(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r10, null)
	method indexOf : 
Unit: $i2 = staticinvoke <org.apache.commons.collections4.IterableUtils: int indexOf(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, r9)
Unit: $r7 := @caughtexception
Unit: goto [?= return]
Unit: return
Unit: $r6 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l1)
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: int indexOf(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r6, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l3)
Unit: $r3 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: $l0 = (long) i5
Unit: i6 = staticinvoke <org.apache.commons.collections4.IterableUtils: int indexOf(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r5, r9)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l0)
Unit: r8 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r2)
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(45)
Unit: $r5 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: $l1 = (long) i6
Unit: r9 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r4)
Unit: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: i5 = staticinvoke <org.apache.commons.collections4.IterableUtils: int indexOf(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r3, r8)
Unit: r1 = $r7
	method countMatches : 
Unit: $r1 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: $l3 = staticinvoke <org.apache.commons.collections4.IterableUtils: long countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l2)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("predicate must not be null")
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: return
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("predicate must not be null")
Unit: $l1 = staticinvoke <org.apache.commons.collections4.IterableUtils: long countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, $r3)
Unit: $r3 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: r7 = $r6
Unit: $r2 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableB>
Unit: $r4 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: $l2 = staticinvoke <org.apache.commons.collections4.IterableUtils: long countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r4, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l0)
Unit: $l0 = staticinvoke <org.apache.commons.collections4.IterableUtils: long countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, $r1)
Unit: goto [?= $l3 = staticinvoke <org.apache.commons.collections4.IterableUtils: long countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, null)]
Unit: r8 = $r5
Unit: $r6 := @caughtexception
Unit: $r5 := @caughtexception
	method matchesAny : 
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: $z2 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, $r3)
Unit: $r14 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("predicate must not be null")
Unit: $r8 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("predicate must not be null")
Unit: r16 = $r13
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r11 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $z9 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, $r11)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
Unit: $z1 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, null)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z7)
Unit: r15 = $r14
Unit: $r13 := @caughtexception
Unit: $r3 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $z0 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, null)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r2 = new java.util.ArrayList
Unit: $z3 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, $r4)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
Unit: r1 = $r2
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: $r4 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: goto [?= $z1 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, null)]
Unit: return
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: $z7 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAny(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, $r8)
Unit: goto [?= $r3 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>]
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r12)
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
	method matchesAll : 
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: r11 = $r8
Unit: r10 = $r9
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: goto [?= $r2 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>]
Unit: $r4 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: $r6 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: $r7 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable emptyIterable>
Unit: $z5 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r7, r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: r1 = $r5
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: $z2 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r4, r12)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
Unit: $r3 = new org.apache.commons.collections4.IterableUtilsTest$4
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $z4 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, r1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("predicate must not be null")
Unit: specialinvoke $r5.<org.apache.commons.collections4.IterableUtilsTest$5: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0)
Unit: $z1 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, null)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("predicate must not be null")
Unit: return
Unit: goto [?= $r3 = new org.apache.commons.collections4.IterableUtilsTest$4]
Unit: r12 = $r3
Unit: specialinvoke $r3.<org.apache.commons.collections4.IterableUtilsTest$4: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0)
Unit: $r2 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: $z0 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, null)
Unit: $r8 := @caughtexception
Unit: $r5 = new org.apache.commons.collections4.IterableUtilsTest$5
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $z3 = staticinvoke <org.apache.commons.collections4.IterableUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r6, r1)
Unit: $r9 := @caughtexception
	method getFromIterable : 
	method getFromIterableIndexOutOfBoundsException : 
Unit: $r2 = new org.apache.commons.collections4.bag.HashBag
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object get(java.lang.Iterable,int)>(r1, 1)
Unit: interfaceinvoke r1.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object,int)>("element", 1)
Unit: return
Unit: specialinvoke $r2.<org.apache.commons.collections4.bag.HashBag: void <init>()>()
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: r1 = $r2
	method firstFromIterable : 
	method firstFromIterableIndexOutOfBoundsException : 
Unit: specialinvoke $r2.<org.apache.commons.collections4.bag.HashBag: void <init>()>()
Unit: r1 = $r2
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: $r2 = new org.apache.commons.collections4.bag.HashBag
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.Object first(java.lang.Iterable)>(r1)
	method partition : 
Unit: $z4 = interfaceinvoke $r22.<java.util.List: boolean isEmpty()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $i6 = interfaceinvoke r33.<java.util.List: int size()>()
Unit: $r10 = interfaceinvoke r30.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r13[0] = $r14
Unit: $r26 = interfaceinvoke r34.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r27 = (org.apache.commons.collections4.Predicate) null
Unit: $r19 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: return
Unit: $l1 = (long) $i0
Unit: $z5 = interfaceinvoke $r24.<java.util.List: boolean isEmpty()>()
Unit: $r9 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: r1 = $r4
Unit: $i4 = virtualinvoke $r12.<java.lang.Integer: int intValue()>()
Unit: $r25 = newarray (org.apache.commons.collections4.Predicate)[0]
Unit: $r18 = interfaceinvoke r32.<java.util.Collection: java.lang.Object[] toArray()>()
Unit: r30 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, $r9)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r24 = (java.util.List) $r23
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: $l9 = (long) $i8
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, $r27)
Unit: $r29 := @caughtexception
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r13[2] = $r16
Unit: $r20 = (java.util.List) null
Unit: r31 = (java.util.Collection) $r10
Unit: $l3 = (long) $i2
Unit: $l5 = (long) $i4
Unit: r34 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Predicate[])>(r1, $r25)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l5)
Unit: r2 = $r13
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>(r2, $r18)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r26)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $r23 = interfaceinvoke r33.<java.util.List: java.lang.Object get(int)>(1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: r33 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r20, $r19)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $i0 = interfaceinvoke r30.<java.util.List: int size()>()
Unit: $r17 = interfaceinvoke r30.<java.util.List: java.lang.Object get(int)>(1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $l7 = (long) $i6
Unit: $i8 = interfaceinvoke r34.<java.util.List: int size()>()
Unit: $r11 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object extractSingleton(java.util.Collection)>(r31)
Unit: $i2 = interfaceinvoke r31.<java.util.Collection: int size()>()
Unit: $r12 = (java.lang.Integer) $r11
Unit: $r13[1] = $r15
Unit: $r13 = newarray (java.lang.Integer)[3]
Unit: $r22 = (java.util.List) $r21
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l7)
Unit: $r4 = new java.util.ArrayList
Unit: $r21 = interfaceinvoke r33.<java.util.List: java.lang.Object get(int)>(0)
Unit: r3 = $r29
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l9)
Unit: r32 = (java.util.Collection) $r17
	method partitionMultiplePredicates : 
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
Unit: $r17 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(1)
Unit: r30 = (java.util.Collection) $r13
Unit: $r18 = interfaceinvoke r31.<java.util.Collection: java.util.Iterator iterator()>()
Unit: $r10[0] = $r11
Unit: $r10[1] = $r12
Unit: $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: r2 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Predicate[])>(r1, $r10)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $r21[0] = $r22
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5)
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>()
Unit: $r26[1] = null
Unit: $r26[0] = $r27
Unit: $i4 = interfaceinvoke r31.<java.util.Collection: int size()>()
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: java.util.List partition(java.lang.Iterable,org.apache.commons.collections4.Predicate[])>(r1, $r26)
Unit: $r10 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: $r12 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EVEN>
Unit: $r27 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: r32 = (java.util.Collection) $r24
Unit: $i0 = interfaceinvoke r30.<java.util.Collection: int size()>()
Unit: $l1 = (long) $i0
Unit: $r29 := @caughtexception
Unit: $i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>()
Unit: r4 = $r29
Unit: $i6 = virtualinvoke $r20.<java.lang.Integer: int intValue()>()
Unit: r31 = (java.util.Collection) $r17
Unit: $r24 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(2)
Unit: r1 = $r5
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l7)
Unit: $r25 = interfaceinvoke r32.<java.util.Collection: java.lang.Object[] toArray()>()
Unit: $r21 = newarray (java.lang.Integer)[2]
Unit: $r5 = new java.util.ArrayList
Unit: $r26 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>()
Unit: $r14 = interfaceinvoke r30.<java.util.Collection: java.util.Iterator iterator()>()
Unit: $l7 = (long) $i6
Unit: goto [?= return]
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3)
Unit: staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>(r3, $r25)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: $r21[1] = $r23
Unit: $l5 = (long) $i4
Unit: r3 = $r21
Unit: $r16 = (java.lang.Integer) $r15
Unit: $r20 = (java.lang.Integer) $r19
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r11 = <org.apache.commons.collections4.IterableUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
	method testToString : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[1, 2, 2, 3, 3, 3, 4, 4, 4, 4]", r8)
Unit: r13 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer)>(null, $r7)
Unit: r9 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable)>($r2)
Unit: $r3 = new org.apache.commons.collections4.IterableUtilsTest$6
Unit: r12 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer)>($r5, $r6)
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: $r2 = new java.util.ArrayList
Unit: specialinvoke $r3.<org.apache.commons.collections4.IterableUtilsTest$6: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0)
Unit: r11 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer)>($r4, $r3)
Unit: $r7 = new org.apache.commons.collections4.IterableUtilsTest$8
Unit: $r5 = new java.util.ArrayList
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[]", r9)
Unit: $r6 = new org.apache.commons.collections4.IterableUtilsTest$7
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[]", r13)
Unit: r10 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable)>(null)
Unit: specialinvoke $r7.<org.apache.commons.collections4.IterableUtilsTest$8: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0)
Unit: r8 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable)>($r1)
Unit: $r1 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: specialinvoke $r6.<org.apache.commons.collections4.IterableUtilsTest$7: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[2, 4, 4, 6, 6, 6, 8, 8, 8, 8]", r11)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: $r4 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[]", r12)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[]", r10)
	method testToStringDelimiter : 
Unit: r16 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r7, r1, ",", "[[", "]]")
Unit: r19 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r10, r1, "", "(", ")")
Unit: r12 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r3, r1, "", "", "")
Unit: specialinvoke $r11.<java.util.ArrayList: void <init>()>()
Unit: $r2 = new org.apache.commons.collections4.IterableUtilsTest$9
Unit: $r7 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: specialinvoke $r10.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[[2,4,4,6,6,6,8,8,8,8]]", r16)
Unit: r20 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r11, r1, "", "", "")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("2446668888", r12)
Unit: $r11 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("()", r19)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[2,4,4,6,6,6,8,8,8,8]", r15)
Unit: specialinvoke $r2.<org.apache.commons.collections4.IterableUtilsTest$9: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0)
Unit: r18 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r9, r1, ",,", "((", "))")
Unit: $r4 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: $r5 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("((2,,4,,4,,6,,6,,6,,8,,8,,8,,8))", r18)
Unit: $r8 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("2,4,4,6,6,6,8,8,8,8", r13)
Unit: r17 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r8, r1, ",,", "[", "]")
Unit: $r9 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: $r3 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[2446668888]", r14)
Unit: $r10 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", r20)
Unit: r1 = $r2
Unit: r14 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r5, r1, "", "[", "]")
Unit: $r6 = r0.<org.apache.commons.collections4.IterableUtilsTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("[2,,4,,4,,6,,6,,6,,8,,8,,8,,8]", r17)
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: r13 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r4, r1, ",", "", "")
Unit: r15 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r6, r1, ",", "[", "]")
	method testToStringWithNullArguments : 
Unit: r20 = $r14
Unit: r18 = $r15
Unit: specialinvoke $r6.<org.apache.commons.collections4.IterableUtilsTest$11: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0)
Unit: $r8 = new java.util.ArrayList
Unit: specialinvoke $r8.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: r1 = staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>(null, $r2, "", "(", ")")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r15 := @caughtexception
Unit: $r12 = new org.apache.commons.collections4.IterableUtilsTest$13
Unit: goto [?= $r5 = new java.util.ArrayList]
Unit: return
Unit: $r14 := @caughtexception
Unit: $r17 := @caughtexception
Unit: $r11 = new java.util.ArrayList
Unit: goto [?= return]
Unit: $r3 = new java.util.ArrayList
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r3, null, "", "(", ")")
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, "", null, ")")
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: goto [?= $r11 = new java.util.ArrayList]
Unit: $r2 = new org.apache.commons.collections4.IterableUtilsTest$10
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("()", r1)
Unit: goto [?= $r8 = new java.util.ArrayList]
Unit: $r6 = new org.apache.commons.collections4.IterableUtilsTest$11
Unit: $r5 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r11, $r12, "", "(", null)
Unit: staticinvoke <org.apache.commons.collections4.IterableUtils: java.lang.String toString(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, null, "(", ")")
Unit: r21 = $r16
Unit: $r16 := @caughtexception
Unit: specialinvoke $r11.<java.util.ArrayList: void <init>()>()
Unit: specialinvoke $r2.<org.apache.commons.collections4.IterableUtilsTest$10: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0)
Unit: $r9 = new org.apache.commons.collections4.IterableUtilsTest$12
Unit: r0 := @this: org.apache.commons.collections4.IterableUtilsTest
Unit: r19 = $r17
Unit: specialinvoke $r9.<org.apache.commons.collections4.IterableUtilsTest$12: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0)
Unit: specialinvoke $r12.<org.apache.commons.collections4.IterableUtilsTest$13: void <init>(org.apache.commons.collections4.IterableUtilsTest)>(r0)
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.ListUtils$1
 ====================================== 
** CLASS org.apache.commons.collections4.PredicateUtilsTest
	method <init> : 
	method testExceptionPredicate : 
Unit: $r5 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate exceptionPredicate()>()
Unit: $r8 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r4, $r5)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate exceptionPredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r3)
Unit: r1 = $r8
Unit: r2 = $r7
Unit: $r4 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate exceptionPredicate()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r10 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: return
Unit: $r7 := @caughtexception
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r9 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate exceptionPredicate()>()
Unit: interfaceinvoke $r9.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r10)
Unit: return
Unit: $r6 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate exceptionPredicate()>()
Unit: interfaceinvoke $r6.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
	method testIsNotNullPredicate : 
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notNullPredicate()>()
Unit: $r12 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notNullPredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r18)
Unit: $z3 = interfaceinvoke $r16.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r17)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r10)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notNullPredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r1)
Unit: $z0 = interfaceinvoke $r5.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r17 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Integer cInteger>
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r13 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $z1 = interfaceinvoke $r8.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r9)
Unit: $r1 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notNullPredicate()>()
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notNullPredicate()>()
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $z2 = interfaceinvoke $r12.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r13)
Unit: $r9 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Object cObject>
Unit: $r3 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notNullPredicate()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r6)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r14)
Unit: $r16 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notNullPredicate()>()
	method testIdentityPredicate : 
Unit: $r26 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate identityPredicate(java.lang.Object)>($r25)
Unit: $z4 = interfaceinvoke $r26.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r27)
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r16 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate identityPredicate(java.lang.Object)>($r15)
Unit: $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $r20 = new java.lang.Integer
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r13)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate identityPredicate(java.lang.Object)>($r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r18)
Unit: $z2 = interfaceinvoke $r16.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r17)
Unit: $r1 = staticinvoke <org.apache.commons.collections4.functors.NullPredicate: org.apache.commons.collections4.Predicate nullPredicate()>()
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate identityPredicate(java.lang.Object)>($r6)
Unit: $z1 = interfaceinvoke $r11.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r12)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r8)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r22 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Integer cInteger>
Unit: $z0 = interfaceinvoke $r7.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r27 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Integer cInteger>
Unit: return
Unit: $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: specialinvoke $r20.<java.lang.Integer: void <init>(int)>(6)
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r4)
Unit: $r17 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: $r11 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate identityPredicate(java.lang.Object)>($r10)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r12 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Object cObject>
Unit: $z3 = interfaceinvoke $r21.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r22)
Unit: $r25 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Integer cInteger>
Unit: $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r28)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r1, $r2)
Unit: $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate identityPredicate(java.lang.Object)>(null)
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r23)
Unit: $r21 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate identityPredicate(java.lang.Object)>($r20)
	method testTruePredicate : 
Unit: $r8 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r3)
Unit: $z0 = interfaceinvoke $r5.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r6)
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r14)
Unit: $z3 = interfaceinvoke $r16.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r17)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r9 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Object cObject>
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r1)
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: return
Unit: $r3 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r1 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r13 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r12 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r16 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r17 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Integer cInteger>
Unit: $z1 = interfaceinvoke $r8.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r9)
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r10)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r18)
Unit: $z2 = interfaceinvoke $r12.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r13)
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
	method testFalsePredicate : 
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r13 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: $z1 = interfaceinvoke $r8.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r9)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: return
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r10)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $z2 = interfaceinvoke $r12.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r13)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r1 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $z0 = interfaceinvoke $r5.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r12 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r16 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r9 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Object cObject>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r18)
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r1)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r14)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r17 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Integer cInteger>
Unit: $r3 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r5 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $z3 = interfaceinvoke $r16.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r17)
	method testNotPredicate : 
Unit: $r9 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notPredicate(org.apache.commons.collections4.Predicate)>($r8)
Unit: $z0 = interfaceinvoke $r5.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $z2 = interfaceinvoke $r14.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r15)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r1 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r2 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notPredicate(org.apache.commons.collections4.Predicate)>($r1)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notPredicate(org.apache.commons.collections4.Predicate)>($r13)
Unit: $z3 = interfaceinvoke $r19.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r20)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r2)
Unit: $r13 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r20 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Integer cInteger>
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r6)
Unit: $r15 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r11)
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r21)
Unit: $r19 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notPredicate(org.apache.commons.collections4.Predicate)>($r18)
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $z1 = interfaceinvoke $r9.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r10)
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r4 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r10 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Object cObject>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r16)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notPredicate(org.apache.commons.collections4.Predicate)>($r4)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r18 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
	method testNotPredicateEx : 
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate notPredicate(org.apache.commons.collections4.Predicate)>(null)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: return
	method testAndPredicate : 
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $z0 = interfaceinvoke $r4.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r9 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate andPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r7, $r8)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $z3 = interfaceinvoke $r19.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: return
Unit: $r7 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $z2 = interfaceinvoke $r14.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r5)
Unit: $r17 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r10)
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $z1 = interfaceinvoke $r9.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate andPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r12, $r13)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r13 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r12 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r19 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate andPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r17, $r18)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate andPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r2, $r3)
Unit: $r18 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r15)
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r20)
	method testAndPredicateEx : 
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate andPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>(null, null)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
	method testAllPredicate : 
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r33)
Unit: $z3 = interfaceinvoke $r30.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>($r61, null)
Unit: $r22 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r9 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])>($r5)
Unit: $r26[1] = $r28
Unit: $r5[1] = $r7
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r40)
Unit: $z11 = interfaceinvoke $r43.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r2 = newarray (org.apache.commons.collections4.Predicate)[0]
Unit: $r47 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r55 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(java.util.Collection)>(r1)
Unit: $r19[2] = $r22
Unit: $z15 = interfaceinvoke $r49.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r12[1] = $r14
Unit: $r12[2] = $r15
Unit: $r13 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r61 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(java.util.Collection)>(r1)
Unit: $r21 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r37 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(java.util.Collection)>(r1)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r47)
Unit: $r19[0] = $r20
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r51)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $z19 = interfaceinvoke $r55.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7)
Unit: $r45 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r50 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: r1 = $r32
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r53)
Unit: $r58 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(java.util.Collection)>(r1)
Unit: $z2 = interfaceinvoke $r23.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r43 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(java.util.Collection)>(r1)
Unit: $r39 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r32 = new java.util.ArrayList
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r45)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r26[2] = $r29
Unit: specialinvoke $r32.<java.util.ArrayList: void <init>()>()
Unit: $z0 = interfaceinvoke $r9.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r5 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>($r3, null)
Unit: $r51 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r46)
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>($r60, null)
Unit: return
Unit: $r19[1] = $r21
Unit: $r12[0] = $r13
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r54, $r56)
Unit: $r40 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r26[0] = $r27
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r15 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r29 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r59)
Unit: $r5[0] = $r6
Unit: $r20 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r17)
Unit: $r54 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r23 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])>($r19)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])>($r2)
Unit: $r52 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $z7 = interfaceinvoke $r37.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r27 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r41 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r44 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11)
Unit: $r33 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r59 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r39)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r6 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r52)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r12 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>($r58, null)
Unit: $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r44)
Unit: $r34 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r35)
Unit: $r30 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])>($r26)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r10)
Unit: $r19 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r57)
Unit: $r48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r25, $r31)
Unit: $r35 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r14 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r53 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r26 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r41)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r46 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r24)
Unit: $r56 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z19)
Unit: $r60 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(java.util.Collection)>(r1)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $z1 = interfaceinvoke $r16.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r48, $r50)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r38)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r34)
Unit: $r49 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(java.util.Collection)>(r1)
Unit: $r57 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r5[2] = $r8
Unit: $r16 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])>($r12)
Unit: $r28 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
	method testAllPredicateEx1 : 
Unit: staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])>($r1)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r1 = (org.apache.commons.collections4.Predicate[]) null
Unit: return
	method testAllPredicateEx2 : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r1[0] = null
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])>($r1)
Unit: $r1 = newarray (org.apache.commons.collections4.Predicate)[1]
	method testAllPredicateEx3 : 
Unit: $r1 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r1[0] = null
Unit: staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])>($r1)
Unit: $r1[1] = null
	method testAllPredicateEx4 : 
Unit: $r1 = (java.util.Collection) null
Unit: staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(java.util.Collection)>($r1)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: return
	method testAllPredicateEx5 : 
Unit: $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(java.util.Collection)>($r1)
Unit: return
	method testAllPredicateEx6 : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: r1 = $r2
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(java.util.Collection)>(r1)
Unit: return
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: $r2 = new java.util.ArrayList
	method testOrPredicate : 
Unit: $r14 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r12, $r13)
Unit: $r18 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $z1 = interfaceinvoke $r9.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r17 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r13 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r19 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r17, $r18)
Unit: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $z3 = interfaceinvoke $r19.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $z2 = interfaceinvoke $r14.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r15)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r5)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r2, $r3)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r9 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r7, $r8)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r20)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z0 = interfaceinvoke $r4.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r3 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
	method testOrPredicateEx : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>(null, null)
	method testAnyPredicate : 
Unit: r1 = $r32
Unit: $r49 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection)>(r1)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r54 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r23 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(org.apache.commons.collections4.Predicate[])>($r19)
Unit: $r13 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r19 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: $r19[0] = $r20
Unit: $r21 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r47)
Unit: $r57 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r35 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r12[1] = $r14
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r39)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r52)
Unit: $r19[1] = $r21
Unit: $z15 = interfaceinvoke $r49.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r10)
Unit: $r50 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15)
Unit: $r58 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection)>(r1)
Unit: $r43 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection)>(r1)
Unit: $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r52 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r17)
Unit: $r60 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection)>(r1)
Unit: $r45 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r19[2] = $r22
Unit: $r39 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r55 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r38)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r27 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r2 = newarray (org.apache.commons.collections4.Predicate)[0]
Unit: $z3 = interfaceinvoke $r30.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r33)
Unit: $r22 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r51 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r5[0] = $r6
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r12 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: $z1 = interfaceinvoke $r16.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r57)
Unit: $r32 = new java.util.ArrayList
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r14 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r26 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: $r9 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(org.apache.commons.collections4.Predicate[])>($r5)
Unit: $r34 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r41)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r45)
Unit: $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r59)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r5 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: $r37 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection)>(r1)
Unit: $r26[0] = $r27
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r34)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r35)
Unit: $r46 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>($r60, null)
Unit: $r33 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r15 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r40 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r44)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $z2 = interfaceinvoke $r23.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r48, $r50)
Unit: $r5[1] = $r7
Unit: $r48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r61 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection)>(r1)
Unit: $r16 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(org.apache.commons.collections4.Predicate[])>($r12)
Unit: $r47 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r20 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r51)
Unit: $r5[2] = $r8
Unit: $r41 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: specialinvoke $r32.<java.util.ArrayList: void <init>()>()
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>($r61, null)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r40)
Unit: $z0 = interfaceinvoke $r9.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r30 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(org.apache.commons.collections4.Predicate[])>($r26)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r44 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11)
Unit: $r12[0] = $r13
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>($r58, null)
Unit: $r29 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7)
Unit: $z7 = interfaceinvoke $r37.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z11 = interfaceinvoke $r43.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r46)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(org.apache.commons.collections4.Predicate[])>($r2)
Unit: $r53 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r26[2] = $r29
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r54, $r56)
Unit: $z19 = interfaceinvoke $r55.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r56 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z19)
Unit: $r59 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r12[2] = $r15
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r25, $r31)
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>($r3, null)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r53)
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r24)
Unit: $r26[1] = $r28
Unit: $r28 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
	method testAnyPredicateEx1 : 
Unit: $r1 = (org.apache.commons.collections4.Predicate[]) null
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(org.apache.commons.collections4.Predicate[])>($r1)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
	method testAnyPredicateEx2 : 
Unit: return
Unit: $r1 = newarray (org.apache.commons.collections4.Predicate)[1]
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r1[0] = null
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(org.apache.commons.collections4.Predicate[])>($r1)
	method testAnyPredicateEx3 : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: return
Unit: $r1 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: $r1[1] = null
Unit: $r1[0] = null
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(org.apache.commons.collections4.Predicate[])>($r1)
	method testAnyPredicateEx4 : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection)>($r1)
Unit: $r1 = (java.util.Collection) null
	method testAnyPredicateEx5 : 
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection)>($r1)
Unit: $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
	method testAnyPredicateEx6 : 
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: return
Unit: $r2 = new java.util.ArrayList
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection)>(r1)
Unit: r1 = $r2
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
	method testEitherPredicate : 
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r13 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r4 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate eitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r2, $r3)
Unit: $z0 = interfaceinvoke $r4.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r17 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r8 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r10)
Unit: $r19 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate eitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r17, $r18)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r15)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r20)
Unit: $r18 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $z1 = interfaceinvoke $r9.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r14 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate eitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r12, $r13)
Unit: $r9 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate eitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r7, $r8)
Unit: $z2 = interfaceinvoke $r14.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $z3 = interfaceinvoke $r19.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: return
Unit: $r7 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
	method testEitherPredicateEx : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate eitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>(null, null)
Unit: return
	method testOnePredicate : 
Unit: $r70 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(java.util.Collection)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r33, $r39)
Unit: $r56 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r50)
Unit: $z9 = interfaceinvoke $r52.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r6[2] = $r9
Unit: $r14 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r13[0] = $r14
Unit: $r65 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z17)
Unit: $r46 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: $r16 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r51, $r53)
Unit: $r31 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(org.apache.commons.collections4.Predicate[])>($r27)
Unit: $r41[0] = $r42
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $z17 = interfaceinvoke $r64.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r63, $r65)
Unit: $r41 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r60)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r11)
Unit: $r49 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r41[2] = $r44
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r55)
Unit: $r34[2] = $r37
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r61)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r48)
Unit: $r6[0] = $r7
Unit: $r34[0] = $r35
Unit: $r22 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r45 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(org.apache.commons.collections4.Predicate[])>($r41)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r27[2] = $r30
Unit: $r69 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r52 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(java.util.Collection)>(r1)
Unit: $r71 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z21)
Unit: $r20[1] = $r22
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r54)
Unit: $r9 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r3 = (org.apache.commons.collections4.Predicate[]) $r2
Unit: $r54 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r27[1] = $r29
Unit: $r68 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r62)
Unit: $r34 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: $z0 = interfaceinvoke $r10.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r72)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r27[0] = $r28
Unit: $r6 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: $r73 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(java.util.Collection)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r25)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r36 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r66)
Unit: $r42 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r62 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r60 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r57 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r66 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r13 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: $r50 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r75 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(java.util.Collection)>(r1)
Unit: $r20[0] = $r21
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r32)
Unit: $r55 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r59 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13)
Unit: $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r15 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r17 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(org.apache.commons.collections4.Predicate[])>($r13)
Unit: $r47 = new java.util.ArrayList
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>($r76, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r18)
Unit: $r23 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r41[1] = $r43
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r69, $r71)
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>($r4, null)
Unit: $r24 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(org.apache.commons.collections4.Predicate[])>($r20)
Unit: $r38 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(org.apache.commons.collections4.Predicate[])>($r34)
Unit: r1 = $r47
Unit: $r40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $z3 = interfaceinvoke $r31.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r2 = newarray (org.apache.commons.collections4.Predicate)[0]
Unit: $r61 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r20[2] = $r23
Unit: $r76 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(java.util.Collection)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r40, $r46)
Unit: $z2 = interfaceinvoke $r24.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r51 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r67)
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>($r75, null)
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>($r73, null)
Unit: $r21 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r10 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(org.apache.commons.collections4.Predicate[])>($r6)
Unit: $r20 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r56)
Unit: $r28 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r8 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r13[2] = $r16
Unit: $r63 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r13[1] = $r15
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r30 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r53 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r57, $r59)
Unit: $z4 = interfaceinvoke $r38.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r29 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $z13 = interfaceinvoke $r58.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r27 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: $r64 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(java.util.Collection)>(r1)
Unit: $z1 = interfaceinvoke $r17.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r6[1] = $r8
Unit: $r37 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r72 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $z21 = interfaceinvoke $r70.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r58 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(java.util.Collection)>(r1)
Unit: $r44 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r4 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(org.apache.commons.collections4.Predicate[])>($r3)
Unit: $r39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: specialinvoke $r47.<java.util.ArrayList: void <init>()>()
Unit: $r74 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r43 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r67 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r48 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r49)
Unit: $z5 = interfaceinvoke $r45.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: return
Unit: $r35 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r68)
Unit: $r34[1] = $r36
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r74)
	method testOnePredicateEx1 : 
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(org.apache.commons.collections4.Predicate[])>($r1)
Unit: return
Unit: $r1 = (org.apache.commons.collections4.Predicate[]) null
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
	method testOnePredicateEx2 : 
Unit: $r1[0] = null
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(org.apache.commons.collections4.Predicate[])>($r1)
Unit: $r1 = newarray (org.apache.commons.collections4.Predicate)[1]
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
	method testOnePredicateEx3 : 
Unit: $r1[0] = null
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r1[1] = null
Unit: return
Unit: $r1 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(org.apache.commons.collections4.Predicate[])>($r1)
	method testOnePredicateEx4 : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r1 = (java.util.Collection) null
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(java.util.Collection)>($r1)
	method testOnePredicateEx5 : 
Unit: return
Unit: $r1 = <java.util.Collections: java.util.List EMPTY_LIST>
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(java.util.Collection)>($r1)
	method testOnePredicateEx6 : 
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: return
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: $r2 = new java.util.ArrayList
Unit: r1 = $r2
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate onePredicate(java.util.Collection)>(r1)
	method testNeitherPredicate : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r10)
Unit: $z0 = interfaceinvoke $r4.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $z2 = interfaceinvoke $r14.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r18 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r9 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate neitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r7, $r8)
Unit: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r15)
Unit: $r17 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r19 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate neitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r17, $r18)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r7 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: return
Unit: $r12 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r8 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $z1 = interfaceinvoke $r9.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r20)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate neitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r12, $r13)
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate neitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>($r2, $r3)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r13 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $z3 = interfaceinvoke $r19.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
	method testNeitherPredicateEx : 
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate neitherPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)>(null, null)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: return
	method testNonePredicate : 
Unit: $r40 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r44)
Unit: $r5[1] = $r7
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r25, $r31)
Unit: $z11 = interfaceinvoke $r43.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r26[2] = $r29
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r46)
Unit: $r12[0] = $r13
Unit: $r61 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)>(r1)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r52)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $z19 = interfaceinvoke $r55.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r19 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r24)
Unit: $r12 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: $r60 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)>(r1)
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r44 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11)
Unit: $r45 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r53)
Unit: $r47 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r45)
Unit: $z15 = interfaceinvoke $r49.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r22 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: specialinvoke $r32.<java.util.ArrayList: void <init>()>()
Unit: $r38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7)
Unit: $r12[1] = $r14
Unit: $r5 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: $r43 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)>(r1)
Unit: $r15 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r19[1] = $r21
Unit: $r20 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r52 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r19[2] = $r22
Unit: $r30 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(org.apache.commons.collections4.Predicate[])>($r26)
Unit: return
Unit: $z0 = interfaceinvoke $r9.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r47)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r23 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(org.apache.commons.collections4.Predicate[])>($r19)
Unit: $z3 = interfaceinvoke $r30.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r39)
Unit: $r5[2] = $r8
Unit: $r58 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)>(r1)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r59)
Unit: $r2 = newarray (org.apache.commons.collections4.Predicate)[0]
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r51)
Unit: $r53 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r57)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r54, $r56)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r33 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r26 = newarray (org.apache.commons.collections4.Predicate)[3]
Unit: $r13 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r41)
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r55 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)>(r1)
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>($r58, null)
Unit: $r32 = new java.util.ArrayList
Unit: $z2 = interfaceinvoke $r23.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r17)
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>($r3, null)
Unit: $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r34 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r5[0] = $r6
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r40)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r38)
Unit: $r57 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r35 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r59 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r50 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15)
Unit: $r29 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r56 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z19)
Unit: $r26[0] = $r27
Unit: $r49 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)>(r1)
Unit: $r21 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r37 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)>(r1)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r7 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r16 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(org.apache.commons.collections4.Predicate[])>($r12)
Unit: $r41 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r39 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r48, $r50)
Unit: $r54 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z7 = interfaceinvoke $r37.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r19[0] = $r20
Unit: r1 = $r32
Unit: $z1 = interfaceinvoke $r16.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r12[2] = $r15
Unit: $r51 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r33)
Unit: $r42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r28 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r35)
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: interfaceinvoke r1.<java.util.Collection: void clear()>()
Unit: $r46 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r26[1] = $r28
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>($r60, null)
Unit: virtualinvoke r0.<org.apache.commons.collections4.PredicateUtilsTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>($r61, null)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(org.apache.commons.collections4.Predicate[])>($r2)
Unit: $r9 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(org.apache.commons.collections4.Predicate[])>($r5)
Unit: $r27 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r34)
	method testNonePredicateEx1 : 
Unit: $r1 = (org.apache.commons.collections4.Predicate[]) null
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(org.apache.commons.collections4.Predicate[])>($r1)
Unit: return
	method testNonePredicateEx2 : 
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(org.apache.commons.collections4.Predicate[])>($r1)
Unit: $r1 = newarray (org.apache.commons.collections4.Predicate)[1]
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r1[0] = null
Unit: return
	method testNonePredicateEx3 : 
Unit: return
Unit: $r1[1] = null
Unit: $r1 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(org.apache.commons.collections4.Predicate[])>($r1)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r1[0] = null
	method testNonePredicateEx4 : 
Unit: return
Unit: $r1 = (java.util.Collection) null
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)>($r1)
	method testNonePredicateEx5 : 
Unit: $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)>($r1)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
	method testNonePredicateEx6 : 
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)>(r1)
Unit: r1 = $r2
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: $r2 = new java.util.ArrayList
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
	method testInstanceOfPredicate : 
Unit: $z3 = interfaceinvoke $r14.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r15)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r4)
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r1)
Unit: $r15 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Integer cInteger>
Unit: $z0 = interfaceinvoke $r3.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r8)
Unit: $r10 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate instanceofPredicate(java.lang.Class)>(class "Ljava/lang/String;")
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r11 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: return
Unit: $z2 = interfaceinvoke $r10.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r11)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r12)
Unit: $r7 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.Object cObject>
Unit: $z1 = interfaceinvoke $r6.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r7)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate instanceofPredicate(java.lang.Class)>(class "Ljava/lang/String;")
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate instanceofPredicate(java.lang.Class)>(class "Ljava/lang/String;")
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r6 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate instanceofPredicate(java.lang.Class)>(class "Ljava/lang/String;")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r16)
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r1 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate instanceofPredicate(java.lang.Class)>(class "Ljava/lang/String;")
Unit: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
	method testUniquePredicate : 
Unit: $r6 = new java.lang.Object
Unit: $z2 = interfaceinvoke r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r9)
Unit: $r12 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r19)
Unit: $r18 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z3 = interfaceinvoke r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r12)
Unit: specialinvoke $r6.<java.lang.Object: void <init>()>()
Unit: $z1 = interfaceinvoke r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r6)
Unit: $z5 = interfaceinvoke r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r18)
Unit: $r3 = new java.lang.Object
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z4 = interfaceinvoke r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r15)
Unit: specialinvoke $r3.<java.lang.Object: void <init>()>()
Unit: $r15 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r4)
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: specialinvoke $r9.<java.lang.Object: void <init>()>()
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: $r9 = new java.lang.Object
Unit: $z0 = interfaceinvoke r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r3)
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: r1 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate uniquePredicate()>()
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r7)
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r16)
Unit: return
Unit: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r13)
	method testAsPredicateTransformer : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r10)
Unit: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>()
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate asPredicate(org.apache.commons.collections4.Transformer)>($r7)
Unit: $z0 = interfaceinvoke $r3.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r4)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate asPredicate(org.apache.commons.collections4.Transformer)>($r2)
Unit: return
Unit: $z1 = interfaceinvoke $r8.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r9)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r5)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>()
	method testAsPredicateTransformerEx1 : 
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate asPredicate(org.apache.commons.collections4.Transformer)>(null)
	method testAsPredicateTransformerEx2 : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r2 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate asPredicate(org.apache.commons.collections4.Transformer)>($r1)
Unit: $r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>()
Unit: interfaceinvoke $r2.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: return
	method testInvokerPredicate : 
Unit: $z0 = interfaceinvoke $r4.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r1)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r2 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r5)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: r1 = $r2
Unit: specialinvoke $r6.<java.lang.Object: void <init>()>()
Unit: $r6 = new java.lang.Object
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r9)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate invokerPredicate(java.lang.String)>("isEmpty")
Unit: $r8 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate invokerPredicate(java.lang.String)>("isEmpty")
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: $z2 = interfaceinvoke $r8.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r1)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: return
	method testInvokerPredicateEx1 : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate invokerPredicate(java.lang.String)>(null)
	method testInvokerPredicateEx2 : 
Unit: return
Unit: $r1 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate invokerPredicate(java.lang.String)>("isEmpty")
Unit: interfaceinvoke $r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
	method testInvokerPredicateEx3 : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: return
Unit: $r1 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate invokerPredicate(java.lang.String)>("noSuchMethod")
Unit: specialinvoke $r2.<java.lang.Object: void <init>()>()
Unit: interfaceinvoke $r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r2)
Unit: $r2 = new java.lang.Object
	method testInvokerPredicate2 : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r8)
Unit: $r12[0] = $r13
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r6 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: $r11[0] = class "Ljava/lang/Object;"
Unit: $r4 = newarray (java.lang.Class)[1]
Unit: $r9 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: $r13 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: $r5 = newarray (java.lang.Object)[1]
Unit: $z2 = interfaceinvoke $r14.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r1)
Unit: $z0 = interfaceinvoke $r7.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(r1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: $r2 = new java.util.ArrayList
Unit: $r4[0] = class "Ljava/lang/Object;"
Unit: $r11 = newarray (java.lang.Class)[1]
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r15)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: return
Unit: $r5[0] = $r6
Unit: $r12 = newarray (java.lang.Object)[1]
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate invokerPredicate(java.lang.String,java.lang.Class[],java.lang.Object[])>("contains", $r11, $r12)
Unit: r1 = $r2
Unit: $r7 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate invokerPredicate(java.lang.String,java.lang.Class[],java.lang.Object[])>("contains", $r4, $r5)
	method testInvokerPredicate2Ex1 : 
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate invokerPredicate(java.lang.String,java.lang.Class[],java.lang.Object[])>(null, null, null)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: return
	method testInvokerPredicate2Ex2 : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r1[0] = class "Ljava/lang/Object;"
Unit: $r3 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: $r4 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate invokerPredicate(java.lang.String,java.lang.Class[],java.lang.Object[])>("contains", $r1, $r2)
Unit: $r1 = newarray (java.lang.Class)[1]
Unit: $r2 = newarray (java.lang.Object)[1]
Unit: return
Unit: interfaceinvoke $r4.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r2[0] = $r3
	method testInvokerPredicate2Ex3 : 
Unit: $r2 = newarray (java.lang.Object)[1]
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: specialinvoke $r5.<java.lang.Object: void <init>()>()
Unit: $r3 = r0.<org.apache.commons.collections4.PredicateUtilsTest: java.lang.String cString>
Unit: $r5 = new java.lang.Object
Unit: $r4 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate invokerPredicate(java.lang.String,java.lang.Class[],java.lang.Object[])>("noSuchMethod", $r1, $r2)
Unit: interfaceinvoke $r4.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r5)
Unit: $r1[0] = class "Ljava/lang/Object;"
Unit: $r2[0] = $r3
Unit: $r1 = newarray (java.lang.Class)[1]
Unit: return
	method testNullIsExceptionPredicate : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r5)
Unit: $z0 = interfaceinvoke $r3.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r4)
Unit: $r4 = new java.lang.Object
Unit: $r7 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nullIsExceptionPredicate(org.apache.commons.collections4.Predicate)>($r6)
Unit: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r3 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nullIsExceptionPredicate(org.apache.commons.collections4.Predicate)>($r2)
Unit: interfaceinvoke $r7.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: specialinvoke $r4.<java.lang.Object: void <init>()>()
Unit: return
	method testNullIsExceptionPredicateEx1 : 
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nullIsExceptionPredicate(org.apache.commons.collections4.Predicate)>(null)
Unit: return
	method testNullIsTruePredicate : 
Unit: $z0 = interfaceinvoke $r3.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nullIsTruePredicate(org.apache.commons.collections4.Predicate)>($r6)
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r14)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: specialinvoke $r8.<java.lang.Object: void <init>()>()
Unit: $r13 = new java.lang.Object
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: return
Unit: $z1 = interfaceinvoke $r7.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r8)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r4)
Unit: $z2 = interfaceinvoke $r12.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r13)
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nullIsTruePredicate(org.apache.commons.collections4.Predicate)>($r11)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r9)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nullIsTruePredicate(org.apache.commons.collections4.Predicate)>($r2)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r8 = new java.lang.Object
Unit: $r11 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: specialinvoke $r13.<java.lang.Object: void <init>()>()
	method testNullIsTruePredicateEx1 : 
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nullIsTruePredicate(org.apache.commons.collections4.Predicate)>(null)
	method testNullIsFalsePredicate : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r14)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r4)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nullIsFalsePredicate(org.apache.commons.collections4.Predicate)>($r2)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nullIsFalsePredicate(org.apache.commons.collections4.Predicate)>($r11)
Unit: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r7 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nullIsFalsePredicate(org.apache.commons.collections4.Predicate)>($r6)
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r8 = new java.lang.Object
Unit: $z0 = interfaceinvoke $r3.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r13 = new java.lang.Object
Unit: $z2 = interfaceinvoke $r12.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r13)
Unit: specialinvoke $r13.<java.lang.Object: void <init>()>()
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: return
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r9)
Unit: $r11 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: specialinvoke $r8.<java.lang.Object: void <init>()>()
Unit: $z1 = interfaceinvoke $r7.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r8)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
	method testNullIsFalsePredicateEx1 : 
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate nullIsFalsePredicate(org.apache.commons.collections4.Predicate)>(null)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
	method testTransformedPredicate : 
Unit: $r15 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)>(r2, r3)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: goto [?= return]
Unit: $z1 = interfaceinvoke $r15.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r11 = new java.util.HashMap
Unit: r1 = $r11
Unit: $r9 = new java.lang.Object
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)>(r1)
Unit: staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)>(null, null)
Unit: specialinvoke $r11.<java.util.HashMap: void <init>()>()
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, "Hello")
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r19 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r20)
Unit: $r18 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)>(r2, r3)
Unit: r3 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("Hello")
Unit: $r22 := @caughtexception
Unit: specialinvoke $r9.<java.lang.Object: void <init>()>()
Unit: $r6 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r16)
Unit: $z0 = interfaceinvoke $r8.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r9)
Unit: $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $z2 = interfaceinvoke $r18.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r19)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: $r8 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)>($r6, $r7)
Unit: r4 = $r22
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r10)
	method testSingletonPatternInSerialization : 
Unit: $r5 = <org.apache.commons.collections4.functors.ExceptionPredicate: org.apache.commons.collections4.Predicate INSTANCE>
Unit: r2 = r1
Unit: i0 = lengthof r2
Unit: r1 = $r4
Unit: r3 = r2[i1]
Unit: i1 = 0
Unit: $r4[4] = $r9
Unit: specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
Unit: $r8 = <org.apache.commons.collections4.functors.NullPredicate: org.apache.commons.collections4.Predicate INSTANCE>
Unit: $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12)
Unit: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r6 = <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate INSTANCE>
Unit: $r9 = <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate INSTANCE>
Unit: goto [?= (branch)]
Unit: $r4[2] = $r7
Unit: $r10 = new java.lang.StringBuilder
Unit: $r4[3] = $r8
Unit: $r12 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()
Unit: $r4[0] = $r5
Unit: $r7 = <org.apache.commons.collections4.functors.NotNullPredicate: org.apache.commons.collections4.Predicate INSTANCE>
Unit: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Singletone patern broken for ")
Unit: r0 := @this: org.apache.commons.collections4.PredicateUtilsTest
Unit: i1 = i1 + 1
Unit: if i1 >= i0 goto return
Unit: $r4[1] = $r6
Unit: return
Unit: $r4 = newarray (java.lang.Object)[5]
Unit: staticinvoke <org.apache.commons.collections4.TestUtils: void assertSameAfterSerialization(java.lang.String,java.lang.Object)>($r14, r3)
	method generatePredicate : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator
	method <init> : 
	method hasNext : 
	method navigateNext : 
	method hasPrevious : 
	method navigatePrevious : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.EnumerationIterator
	method <init> : 
	method <init> : 
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method getEnumeration : 
	method setEnumeration : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.CursorableLinkedList
	method <init> : 
	method <init> : 
	method init : 
	method iterator : 
	method listIterator : 
	method listIterator : 
	method cursor : 
	method cursor : 
	method updateNode : 
	method addNode : 
	method removeNode : 
	method removeAllNodes : 
	method registerCursor : 
	method unregisterCursor : 
	method broadcastNodeChanged : 
	method broadcastNodeRemoved : 
	method broadcastNodeInserted : 
	method writeObject : 
	method readObject : 
	method createSubListListIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.SetUniqueList
	method setUniqueList : 
	method <init> : 
	method asSet : 
	method add : 
	method add : 
	method addAll : 
	method addAll : 
	method set : 
	method remove : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method clear : 
	method contains : 
	method containsAll : 
	method iterator : 
	method listIterator : 
	method listIterator : 
	method subList : 
	method createSetBasedOnList : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet
	method <init> : 
	method iterator : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.StaticBucketMap$Values
	method <init> : 
	method size : 
	method clear : 
	method iterator : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.TreeBagTest$1
	method <init> : 
	method compare : 
	method compare : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.UnmodifiableTrie
	method unmodifiableTrie : 
	method <init> : 
	method entrySet : 
	method keySet : 
	method values : 
	method clear : 
	method containsKey : 
	method containsValue : 
	method get : 
	method isEmpty : 
	method put : 
	method putAll : 
	method remove : 
	method size : 
	method firstKey : 
	method headMap : 
	method lastKey : 
	method subMap : 
	method tailMap : 
	method prefixMap : 
	method comparator : 
	method mapIterator : 
	method nextKey : 
	method previousKey : 
	method hashCode : 
	method equals : 
	method toString : 
	method mapIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.IteratorUtils
	method <init> : 
	method emptyIterator : 
	method emptyListIterator : 
	method emptyOrderedIterator : 
	method emptyMapIterator : 
	method emptyOrderedMapIterator : 
	method singletonIterator : 
	method singletonListIterator : 
	method arrayIterator : 
	method arrayIterator : 
	method arrayIterator : 
	method arrayIterator : 
	method arrayIterator : 
	method arrayIterator : 
	method arrayListIterator : 
	method arrayListIterator : 
	method arrayListIterator : 
	method arrayListIterator : 
	method arrayListIterator : 
	method arrayListIterator : 
	method boundedIterator : 
	method boundedIterator : 
	method unmodifiableIterator : 
	method unmodifiableListIterator : 
	method unmodifiableMapIterator : 
	method chainedIterator : 
	method chainedIterator : 
	method chainedIterator : 
	method collatedIterator : 
	method collatedIterator : 
	method collatedIterator : 
	method objectGraphIterator : 
	method transformedIterator : 
	method filteredIterator : 
	method filteredListIterator : 
	method loopingIterator : 
	method loopingListIterator : 
	method nodeListIterator : 
	method nodeListIterator : 
	method peekingIterator : 
	method pushbackIterator : 
	method skippingIterator : 
	method zippingIterator : 
	method zippingIterator : 
	method zippingIterator : 
	method asIterator : 
	method asIterator : 
	method asEnumeration : 
	method asIterable : 
	method asMultipleUseIterable : 
	method toListIterator : 
	method toArray : 
	method toArray : 
	method toList : 
	method toList : 
	method getIterator : 
	method forEach : 
	method forEachButLast : 
	method find : 
	method indexOf : 
	method matchesAny : 
	method matchesAll : 
	method isEmpty : 
	method contains : 
	method get : 
	method first : 
	method size : 
	method toString : 
	method toString : 
	method toString : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.NullIsFalsePredicate
	method nullIsFalsePredicate : 
	method <init> : 
	method evaluate : 
	method getPredicates : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.IdentityPredicate
	method identityPredicate : 
	method <init> : 
	method evaluate : 
	method getValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.TransformedBag
	method transformingBag : 
	method transformedBag : 
	method <init> : 
	method getBag : 
	method equals : 
	method hashCode : 
	method getCount : 
	method remove : 
	method add : 
	method uniqueSet : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.UnmodifiableBagTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullCollection : 
	method getCollection : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isNullSupported : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method getCompatibilityVersion : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySet
	method <init> : 
	method iterator : 
	method contains : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.DefaultMapEntry
	method <init> : 
	method <init> : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap
	method <init> : 
	method <init> : 
	method init : 
	method size : 
	method isEmpty : 
	method containsKey : 
	method containsValue : 
	method get : 
	method put : 
	method remove : 
	method clear : 
	method mapIterator : 
	method entrySet : 
	method keySet : 
	method values : 
	method purgeBeforeRead : 
	method purgeBeforeWrite : 
	method purge : 
	method purge : 
	method getEntry : 
	method hashEntry : 
	method isEqualKey : 
	method createEntry : 
	method createEntrySetIterator : 
	method createKeySetIterator : 
	method createValuesIterator : 
	method doWriteObject : 
	method doReadObject : 
	method isKeyType : 
	method isValueType : 
	method createEntry : 
	method access$000 : 
	method access$100 : 
	method access$200 : 
	method access$300 : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.FalsePredicate
	method falsePredicate : 
	method <init> : 
	method evaluate : 
	method readResolve : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LazyMapTest$1
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractMapTest
	method <init> : 
	method isPutAddSupported : 
	method isPutChangeSupported : 
	method isSetValueSupported : 
	method isRemoveSupported : 
	method isGetStructuralModify : 
	method isSubMapViewsSerializable : 
	method isAllowNullKey : 
	method isAllowNullValue : 
	method isAllowDuplicateValues : 
	method isFailFastExpected : 
	method areEqualElementsDistinguishable : 
	method getSampleKeys : 
	method getOtherKeys : 
	method getOtherValues : 
	method getAsList : 
	method getOtherNonNullStringElements : 
	method getSampleValues : 
	method getNewSampleValues : 
	method addSampleMappings : 
	method makeObject : 
	method makeFullMap : 
	method makeConfirmedMap : 
	method cloneMapEntry : 
	method getCompatibilityVersion : 
	method testSampleMappings : 
	method testMakeMap : 
	method testMapIsEmpty : 
	method testMapSize : 
	method testMapClear : 
	method testMapContainsKey : 
	method testMapContainsValue : 
	method testMapEquals : 
	method testMapGet : 
	method testMapHashCode : 
	method testMapToString : 
	method testEmptyMapCompatibility : 
	method testFullMapCompatibility : 
	method testMapPut : 
	method testMapPutNullKey : 
	method testMapPutNullValue : 
	method testMapPutAll : 
	method testMapRemove : 
	method testValuesClearChangesMap : 
	method testKeySetClearChangesMap : 
	method testEntrySetClearChangesMap : 
	method testEntrySetContains1 : 
	method testEntrySetContains2 : 
	method testEntrySetContains3 : 
	method testEntrySetRemove1 : 
	method testEntrySetRemove2 : 
	method testEntrySetRemove3 : 
	method testValuesRemoveChangesMap : 
	method testValuesRemoveAll : 
	method testValuesRetainAll : 
	method testValuesIteratorRemoveChangesMap : 
	method testKeySetRemoveChangesMap : 
	method testKeySetRemoveAll : 
	method testKeySetRetainAll : 
	method testKeySetIteratorRemoveChangesMap : 
	method testEntrySetRemoveChangesMap : 
	method testEntrySetRemoveAll : 
	method testEntrySetRetainAll : 
	method testEntrySetIteratorRemoveChangesMap : 
	method makeEntryArray : 
	method bulkTestMapEntrySet : 
	method bulkTestMapKeySet : 
	method bulkTestMapValues : 
	method resetEmpty : 
	method resetFull : 
	method views : 
	method verify : 
	method verifyMap : 
	method verifyEntrySet : 
	method verifyKeySet : 
	method verifyValues : 
	method tearDown : 
	method getMap : 
	method getConfirmed : 
	method makeObject : 
	method access$000 : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterIteratorTest$3
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterIteratorTest$2
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View
	method <init> : 
	method equals : 
	method hashCode : 
	method removeAll : 
	method retainAll : 
	method clear : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterIteratorTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMap2Test
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullMap : 
	method testGetByIndex : 
	method testGetValueByIndex : 
	method testIndexOf : 
	method testRemoveByIndex : 
	method bulkTestListView : 
	method getCompatibilityVersion : 
	method getMap : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.AbstractCompositePredicateTest
	method <init> : 
	method getPredicateInstance : 
	method getPredicateInstance : 
	method getPredicateInstance : 
	method singleElementArrayToGetInstance : 
	method singletonCollectionToGetInstance : 
	method nullArrayToGetInstance : 
	method nullElementInArrayToGetInstance : 
	method nullElementsInArrayToGetInstance : 
	method nullCollectionToGetInstance : 
	method nullElementsInCollectionToGetInstance : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator
	method <init> : 
	method decorated : 
	method mapIterator : 
	method firstKey : 
	method lastKey : 
	method nextKey : 
	method previousKey : 
	method inverseBidiMap : 
	method inverseBidiMap : 
	method mapIterator : 
	method decorated : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.OrderedMapIterator
	method hasPrevious : 
	method previous : 
 ====================================== 
** CLASS org.apache.commons.collections4.FluentIterableTest$3
	method <init> : 
	method execute : 
	method execute : 
 ====================================== 
** CLASS org.apache.commons.collections4.FluentIterableTest$4
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.SingletonMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method ignoredTests : 
	method makeFullMap : 
	method isPutAddSupported : 
	method isRemoveSupported : 
	method getSampleKeys : 
	method getSampleValues : 
	method getNewSampleValues : 
	method testClone : 
	method testKeyValue : 
	method testBoundedMap : 
	method getCompatibilityVersion : 
	method makeFullMap : 
	method makeFullMap : 
	method makeObject : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.FluentIterableTest$1
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.FluentIterableTest$2
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$12
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.FixedSizeListTest
	method <init> : 
	method makeObject : 
	method makeFullCollection : 
	method isAddSupported : 
	method isRemoveSupported : 
	method getCompatibilityVersion : 
	method testListAllowsMutationOfUnderlyingCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$11
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.CompositeCollectionTest$1
	method <init> : 
	method add : 
	method addAll : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$10
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.UnmodifiableSet
	method unmodifiableSet : 
	method <init> : 
	method iterator : 
	method add : 
	method addAll : 
	method clear : 
	method remove : 
	method removeAll : 
	method retainAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.CompositeCollectionTest$3
	method <init> : 
	method add : 
	method addAll : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.CompositeCollectionTest$2
	method <init> : 
	method add : 
	method addAll : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.TransformedSortedBag
	method transformingSortedBag : 
	method transformedSortedBag : 
	method <init> : 
	method getSortedBag : 
	method first : 
	method last : 
	method comparator : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.StaticBucketMap$KeyIterator
	method <init> : 
	method next : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$13
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.MapUtilsTest
	method <init> : 
	method getPredicate : 
	method testPredicatedMap : 
	method testLazyMapFactory : 
	method testLazyMapTransformer : 
	method testInvertMap : 
	method testPutAll_Map_array : 
	method testConvertResourceBundle : 
	method testDebugAndVerbosePrintCasting : 
	method testDebugAndVerbosePrintNullMap : 
	method testVerbosePrintNullLabel : 
	method testDebugPrintNullLabel : 
	method testVerbosePrintNullLabelAndMap : 
	method testDebugPrintNullLabelAndMap : 
	method testVerbosePrintNullStream : 
	method testDebugPrintNullStream : 
	method testDebugPrintNullKey : 
	method testVerbosePrintNullKey : 
	method testDebugPrintNullKeyToMap1 : 
	method testVerbosePrintNullKeyToMap1 : 
	method testDebugPrintNullKeyToMap2 : 
	method testVerbosePrintNullKeyToMap2 : 
	method testVerbosePrint : 
	method testDebugPrint : 
	method testVerbosePrintSelfReference : 
	method testDebugPrintSelfReference : 
	method testEmptyIfNull : 
	method testIsEmptyWithEmptyMap : 
	method testIsEmptyWithNonEmptyMap : 
	method testIsEmptyWithNull : 
	method testIsNotEmptyWithEmptyMap : 
	method testIsNotEmptyWithNonEmptyMap : 
	method testIsNotEmptyWithNull : 
	method testPopulateMap : 
	method testPopulateMultiMap : 
	method testIterableMap : 
	method testIterableSortedMap : 
	method testSize0 : 
	method testSizeNull : 
	method testSize : 
	method testToProperties : 
	method testToPropertiesEmpty : 
	method testgetDoubleValue : 
	method testgetFloatValue : 
	method testgetLongValue : 
	method testgetIntValue : 
	method testgetShortValue : 
	method testgetByteValue : 
	method testgetNumber : 
	method testgetString : 
	method testgetObject : 
	method testgetBooleanValue : 
	method testgetMap : 
	method testSafeAddToMap : 
	method testOrderedMap : 
	method getDecimalSeparator : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.AbstractAnyAllOnePredicateTest
	method <init> : 
	method singleElementArrayToGetInstance : 
	method singletonCollectionToGetInstance : 
	method singleValues : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet
	method <init> : 
	method size : 
	method iterator : 
	method contains : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.AbstractSortedBagDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method first : 
	method last : 
	method comparator : 
	method decorated : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.AbstractListTest$1
	method <init> : 
	method size : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.PredicatedSetTest
	method <init> : 
	method decorateSet : 
	method makeObject : 
	method getFullElements : 
	method makeTestSet : 
	method testGetSet : 
	method testIllegalAdd : 
	method testIllegalAddAll : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.SetUtilsTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.DefaultKeyValueTest
	method <init> : 
	method makeDefaultKeyValue : 
	method makeDefaultKeyValue : 
	method testAccessorsAndMutators : 
Unit: virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setKey(java.lang.Object)>(null)
Unit: $z3 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setValue(java.lang.Object)>("duke")
Unit: $z2 = 1
Unit: if $r5 != "duke" goto $z1 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]
Unit: $z1 = 0
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest
Unit: $z0 = 1
Unit: $z3 = 1
Unit: if $r3 != "name" goto $z0 = 0
Unit: $r5 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setKey(java.lang.Object)>("name")
Unit: if $r9 != null goto $z3 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $r3 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>()
Unit: if $r7 != null goto $z2 = 0
Unit: $z1 = 1
Unit: $r7 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>()
Unit: virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setValue(java.lang.Object)>(null)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
Unit: $r9 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: $z2 = 0
Unit: $z0 = 0
Unit: r1 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue()>()
Unit: return
	method testSelfReferenceHandling : 
Unit: $z1 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: if $r5 != null goto $z0 = 0
Unit: $z0 = 1
Unit: $r8 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>()
Unit: $r7 := @caughtexception
Unit: return
Unit: virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setKey(java.lang.Object)>(r1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Should throw an IllegalArgumentException")
Unit: virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setValue(java.lang.Object)>(r1)
Unit: $r5 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Should throw an IllegalArgumentException")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: if $r9 != null goto $z1 = 0
Unit: $r4 := @caughtexception
Unit: if $r8 != null goto $z1 = 0
Unit: $r9 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest
Unit: $z0 = 0
Unit: if $r6 != null goto $z0 = 0
Unit: goto [?= return]
Unit: $r6 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]
Unit: r10 = $r4
Unit: goto [?= virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setValue(java.lang.Object)>(r1)]
Unit: r11 = $r7
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: $z1 = 1
Unit: r1 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue()>()
	method testConstructors : 
Unit: r27 = $r26
Unit: specialinvoke $r16.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: void <init>(java.lang.Object,java.lang.Object)>("name", "duke")
Unit: $z1 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: if $r29 != "duke" goto $z5 = 0
Unit: specialinvoke $r26.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: void <init>(java.util.Map$Entry)>(r3)
Unit: if $r10 != "duke" goto $z4 = 0
Unit: $z1 = 1
Unit: $r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>()
Unit: if $r14 != null goto $z0 = 0
Unit: virtualinvoke r17.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setValue(java.lang.Object)>(null)
Unit: if $r12 != "duke" goto $z2 = 0
Unit: $r20 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>()
Unit: r15 = $r4
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
Unit: $z3 = 1
Unit: $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)]
Unit: $z4 = 0
Unit: if $r5 != null goto $z0 = 0
Unit: if $r20 != "name" goto $z2 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)]
Unit: $r11 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $r5 = virtualinvoke r15.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>()
Unit: $z5 = 0
Unit: if $r28 != "name" goto $z4 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: $r22 = new java.util.HashMap
Unit: $r14 = virtualinvoke r15.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: virtualinvoke r17.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object setKey(java.lang.Object)>(null)
Unit: $r19 = new org.apache.commons.collections4.keyvalue.DefaultKeyValue
Unit: r1 = $r19
Unit: $z0 = 0
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest
Unit: $r13 = virtualinvoke r17.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $r21 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>()
Unit: if $r18 != "name" goto $z1 = 0
Unit: specialinvoke $r4.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $r16 = new org.apache.commons.collections4.keyvalue.DefaultKeyValue
Unit: $z4 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: specialinvoke $r19.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: void <init>(org.apache.commons.collections4.KeyValue)>(r17)
Unit: $z0 = 1
Unit: $r23 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
Unit: $r18 = virtualinvoke r17.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>()
Unit: if $r21 != "name" goto $z3 = 0
Unit: $r10 = virtualinvoke r27.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: r2 = $r22
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)]
Unit: return
Unit: r3 = (java.util.Map$Entry) $r25
Unit: $z2 = 1
Unit: $r29 = virtualinvoke r27.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: r17 = $r16
Unit: interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", "duke")
Unit: interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null)
Unit: $r26 = new org.apache.commons.collections4.keyvalue.DefaultKeyValue
Unit: $z5 = 1
Unit: $r28 = virtualinvoke r27.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>()
Unit: $r4 = new org.apache.commons.collections4.keyvalue.DefaultKeyValue
Unit: if $r13 != "duke" goto $z1 = 0
Unit: $r12 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: $z2 = 0
Unit: if $r11 != "duke" goto $z3 = 0
Unit: specialinvoke $r22.<java.util.HashMap: void <init>()>()
Unit: $z3 = 0
	method testEqualsAndHashCode : 
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)]
Unit: r3 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>(null, null)
Unit: $z1 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: boolean equals(java.lang.Object)>(r2)
Unit: $z0 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: boolean equals(java.lang.Object)>(r1)
Unit: $z2 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: boolean equals(java.lang.Object)>(r3)
Unit: $i2 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: int hashCode()>()
Unit: return
Unit: r4 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>(null, null)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)]
Unit: $i3 = virtualinvoke r4.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: int hashCode()>()
Unit: if $i2 != $i3 goto $z5 = 0
Unit: r1 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>("name", "duke")
Unit: $z5 = 1
Unit: r2 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>("name", "duke")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $i1 = virtualinvoke r2.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: int hashCode()>()
Unit: if $i0 != $i1 goto $z4 = 0
Unit: $z5 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $z3 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: boolean equals(java.lang.Object)>(r4)
Unit: $z4 = 0
Unit: $i0 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: int hashCode()>()
Unit: $z4 = 1
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
	method testToString : 
Unit: $r14 = virtualinvoke r18.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: $r10 = new java.lang.StringBuilder
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)
Unit: $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=")
Unit: $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)
Unit: return
Unit: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
Unit: $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r16)
Unit: $r1 = virtualinvoke r17.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.String toString()>()
Unit: $r11 = virtualinvoke r18.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>()
Unit: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=")
Unit: $r3 = virtualinvoke r17.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>()
Unit: r18 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>(null, null)
Unit: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r8)
Unit: $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r9 = virtualinvoke r18.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.String toString()>()
Unit: r17 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>("name", "duke")
Unit: specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
Unit: $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6)
Unit: $r6 = virtualinvoke r17.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: $r2 = new java.lang.StringBuilder
Unit: $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)
	method testToMapEntry : 
Unit: $r6 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getValue()>()
Unit: $z1 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $z0 = interfaceinvoke r3.<java.util.Map$Entry: boolean equals(java.lang.Object)>($r11)
Unit: return
Unit: $r4 = new java.util.HashMap
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.DefaultKeyValueTest
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: $i1 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: int hashCode()>()
Unit: $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
Unit: specialinvoke $r4.<java.util.HashMap: void <init>()>()
Unit: $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $i0 = interfaceinvoke r3.<java.util.Map$Entry: int hashCode()>()
Unit: r1 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultKeyValueTest: org.apache.commons.collections4.keyvalue.DefaultKeyValue makeDefaultKeyValue(java.lang.Object,java.lang.Object)>("name", "duke")
Unit: $r11 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.util.Map$Entry toMapEntry()>()
Unit: $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>()
Unit: if $i0 != $i1 goto $z1 = 0
Unit: r2 = $r4
Unit: interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: r3 = (java.util.Map$Entry) $r10
Unit: $z1 = 0
Unit: $r5 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: java.lang.Object getKey()>()
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterListIteratorTest$6
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.UnmodifiableCollectionTest
	method <init> : 
	method makeObject : 
	method makeFullCollection : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method isAddSupported : 
	method isRemoveSupported : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method getCompatibilityVersion : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterListIteratorTest$4
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterListIteratorTest$5
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.ListValuedMap
	method get : 
	method remove : 
	method remove : 
	method get : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterListIteratorTest$2
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterListIteratorTest$3
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.MultiSetUtils
	method <init> : 
	method synchronizedMultiSet : 
	method unmodifiableMultiSet : 
	method predicatedMultiSet : 
	method emptyMultiSet : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView
	method <init> : 
	method contains : 
	method remove : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.NullComparator
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method compare : 
	method hashCode : 
	method equals : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.PermutationIteratorTest
	method <init> : 
	method setUp : 
	method supportsRemove : 
	method supportsEmptyIterator : 
	method makeEmptyIterator : 
	method makeObject : 
	method testPermutationResultSize : 
	method testPermutationExhaustivity : 
	method testPermutationUnicity : 
	method testPermutationException : 
	method testPermutatorHasMore : 
	method testEmptyCollection : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractDualBidiMap
	method <init> : 
	method <init> : 
	method <init> : 
	method createBidiMap : 
	method get : 
	method size : 
	method isEmpty : 
	method containsKey : 
	method equals : 
	method hashCode : 
	method toString : 
	method put : 
	method putAll : 
	method remove : 
	method clear : 
	method containsValue : 
	method mapIterator : 
	method getKey : 
	method removeValue : 
	method inverseBidiMap : 
	method keySet : 
	method createKeySetIterator : 
	method values : 
	method createValuesIterator : 
	method entrySet : 
	method createEntrySetIterator : 
	method values : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.AbstractComparatorTest
	method <init> : 
	method getComparableObjectsOrdered : 
	method makeObject : 
	method supportsEmptyCollections : 
	method supportsFullCollections : 
	method reverseObjects : 
	method randomizeObjects : 
	method sortObjects : 
	method testEmptyListSort : 
	method testReverseListSort : 
	method testRandomListSort : 
	method testComparatorIsSerializable : 
	method getCanonicalComparatorName : 
	method testComparatorCompatibility : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtils$1
 ====================================== 
** CLASS org.apache.commons.collections4.set.CompositeSet$SetMutator
	method add : 
	method addAll : 
	method resolveCollision : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.AbstractMapEntryTest
	method <init> : 
	method makeMapEntry : 
	method makeMapEntry : 
	method makeKnownMapEntry : 
	method makeKnownMapEntry : 
	method testAccessorsAndMutators : 
	method testSelfReferenceHandling : 
	method testConstructors : 
	method testEqualsAndHashCode : 
	method testToString : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterListIteratorTest$1
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator
	method <init> : 
	method getMapEntry : 
	method getKey : 
	method getValue : 
	method setValue : 
	method equals : 
	method hashCode : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractMapTest$TestMapEntrySet
	method <init> : 
	method getFullElements : 
	method getFullNonNullElements : 
	method getOtherElements : 
	method makeObject : 
	method makeFullCollection : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isGetStructuralModify : 
	method areEqualElementsDistinguishable : 
	method isTestSerialization : 
	method resetFull : 
	method resetEmpty : 
	method testMapEntrySetIteratorEntry : 
	method testMapEntrySetIteratorEntrySetValue : 
	method getEntry : 
	method testMapEntrySetRemoveNonMapEntry : 
	method verify : 
	method getFullNonNullElements : 
	method getOtherElements : 
	method getFullElements : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.StaticBucketMap$1
 ====================================== 
** CLASS org.apache.commons.collections4.bag.AbstractBagDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method equals : 
	method hashCode : 
	method getCount : 
	method add : 
	method remove : 
	method uniqueSet : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.MultiValueMap$Values
	method <init> : 
	method iterator : 
	method size : 
	method clear : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator
	method <init> : 
	method next : 
	method getKey : 
	method getValue : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.IteratorChainTest$1
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.splitmap.TransformedSplitMapTest$3
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator
	method <init> : 
	method next : 
	method previous : 
	method previous : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.splitmap.TransformedSplitMapTest$2
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.EmptyMapMutator
	method <init> : 
	method resolveCollision : 
	method put : 
	method putAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.CompositeMapTest$1
	method <init> : 
	method resolveCollision : 
	method put : 
	method putAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.CompositeMapTest$3
	method <init> : 
	method resolveCollision : 
	method put : 
	method putAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.splitmap.TransformedSplitMapTest$1
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.CompositeMapTest$2
	method <init> : 
	method resolveCollision : 
	method put : 
	method putAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractSortedMapTest$TestTailMap
	method <init> : 
	method makeObject : 
	method makeFullMap : 
	method testTailMapOutOfRange : 
	method getCompatibilityVersion : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper
	method <init> : 
	method iterator : 
	method setCardinality : 
	method list : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.AnyPredicate
	method anyPredicate : 
	method anyPredicate : 
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.CloneTransformer
	method cloneTransformer : 
	method <init> : 
	method transform : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.Transformer
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.ListOrderedSet$1
 ====================================== 
** CLASS org.apache.commons.collections4.map.Flat3Map$EntrySet
	method <init> : 
	method size : 
	method clear : 
	method remove : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ObjectArrayListIterator
	method <init> : 
	method <init> : 
	method <init> : 
	method hasPrevious : 
	method previous : 
	method next : 
	method nextIndex : 
	method previousIndex : 
	method add : 
	method set : 
	method reset : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values
	method <init> : 
	method iterator : 
	method size : 
	method contains : 
	method clear : 
	method remove : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.UnmodifiableBag
	method unmodifiableBag : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method iterator : 
	method add : 
	method addAll : 
	method clear : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method add : 
	method remove : 
	method uniqueSet : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.InsertCommand
	method <init> : 
	method accept : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior
	method values : 
	method valueOf : 
	method <init> : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$1
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractIterableMapTest
	method <init> : 
	method makeObject : 
	method makeFullMap : 
	method testFailFastEntrySet : 
	method testFailFastKeySet : 
	method testFailFastValues : 
	method bulkTestMapIterator : 
	method getMap : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.LoopingListIteratorTest
	method <init> : 
	method testConstructorEx : 
Unit: $r2 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: specialinvoke $r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(null)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r3 := @caughtexception
Unit: r1 = $r3
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest
Unit: return
Unit: goto [?= return]
	method testLooping0 : 
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r8 := @caughtexception
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: return
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: goto [?= return]
Unit: $r3 = new java.util.ArrayList
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: r9 = $r7
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1)
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: $z0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>()
Unit: r2 = $r4
Unit: r1 = $r3
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: $z1 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>()
Unit: $r7 := @caughtexception
Unit: goto [?= virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()]
Unit: r10 = $r8
	method testLooping1 : 
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
Unit: $z4 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>()
Unit: $r10 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r3[0] = "a"
Unit: $r9 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1)
Unit: $z5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>()
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r10)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r6)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $r5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $z0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5)
Unit: $z3 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>()
Unit: $z1 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8)
Unit: $r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $r3 = newarray (java.lang.String)[1]
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: r2 = $r4
Unit: $z2 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>()
Unit: $r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
	method testLooping2 : 
Unit: $z4 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>()
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r7)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r9)
Unit: $z0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r6)
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $z5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>()
Unit: r2 = $r4
Unit: $r3[0] = "a"
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
Unit: $z3 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $z2 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>()
Unit: $r10 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $r9 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r3[1] = "b"
Unit: $r3 = newarray (java.lang.String)[2]
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5)
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: $z1 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>()
Unit: $r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r8)
Unit: $r5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r10)
Unit: $r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
	method testJoggingNotOverBoundary : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r8)
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r10)
Unit: $r10 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r6)
Unit: $r3[1] = "b"
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r9 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5)
Unit: $r3[0] = "a"
Unit: $r5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r7)
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
Unit: $r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: r2 = $r4
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: return
Unit: $r3 = newarray (java.lang.String)[2]
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1)
	method testJoggingOverBoundary : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8)
Unit: $r10 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r10)
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest
Unit: $r3[1] = "b"
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r9)
Unit: return
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1)
Unit: $r3[0] = "a"
Unit: $r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r5)
Unit: $r9 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: r2 = $r4
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r6)
Unit: $r3 = newarray (java.lang.String)[2]
	method testRemovingElementsAndIteratingForward : 
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $z3 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void remove()>()
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9)
Unit: $l1 = (long) $i0
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $z0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: $r5[0] = "a"
Unit: $r7 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: $r4 = new java.util.ArrayList
Unit: $r5[2] = "c"
Unit: specialinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1)
Unit: r1 = $r4
Unit: $r5[1] = "b"
Unit: $z1 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>()
Unit: r3 = $r12
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void remove()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void remove()>()
Unit: goto [?= return]
Unit: $l3 = (long) $i2
Unit: $l5 = (long) $i4
Unit: $r5 = newarray (java.lang.String)[3]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $i2 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $i4 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r6)
Unit: return
Unit: r2 = $r7
Unit: $z2 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8)
Unit: $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r10)
Unit: $r9 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: $r10 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r12 := @caughtexception
	method testRemovingElementsAndIteratingBackwards : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $z3 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9)
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void remove()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r4 = new java.util.ArrayList
Unit: $r7 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $z2 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>()
Unit: $i4 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $l5 = (long) $i4
Unit: r1 = $r4
Unit: $r9 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $r5[1] = "b"
Unit: $i2 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: goto [?= return]
Unit: $r5[2] = "c"
Unit: $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5)
Unit: $z0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>()
Unit: specialinvoke $r7.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $r5[0] = "a"
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r6)
Unit: $z1 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: boolean hasPrevious()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r8)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r10)
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l5)
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void remove()>()
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest
Unit: r2 = $r7
Unit: return
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void remove()>()
Unit: $r12 := @caughtexception
Unit: $r5 = newarray (java.lang.String)[3]
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
Unit: r3 = $r12
Unit: $l1 = (long) $i0
Unit: $r10 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $l3 = (long) $i2
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
	method testReset : 
Unit: $r15 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r3 = newarray (java.lang.String)[3]
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r16 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r9 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: return
Unit: $r14 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest
Unit: $r13 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r12 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r3[1] = "b"
Unit: $r3[0] = "a"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r16)
Unit: $r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r14)
Unit: r2 = $r4
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r12)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r6)
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1)
Unit: $r3[2] = "c"
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: $r11 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8)
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r13)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r10)
Unit: $r10 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r15)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5)
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r11)
	method testAdd : 
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: $r14 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r27)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r30)
Unit: specialinvoke $r19.<java.util.ArrayList: void <init>(java.util.Collection)>($r21)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("f", $r24)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("e", $r25)
Unit: virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: void add(java.lang.Object)>("c")
Unit: $r2[0] = "b"
Unit: $r29 = virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r20[0] = "b"
Unit: $r34 = virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r34)
Unit: $r31 = virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: void add(java.lang.Object)>("d")
Unit: $r26 = virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("e", $r9)
Unit: $r17 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r12)
Unit: virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: void add(java.lang.Object)>("d")
Unit: $r28 = virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r24 = virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r21 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r20)
Unit: r37 = $r19
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r23)
Unit: $r20[1] = "e"
Unit: $r30 = virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: void add(java.lang.Object)>("c")
Unit: $r10 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r27 = virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: $r20[2] = "f"
Unit: $r16 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: void add(java.lang.Object)>("a")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("e", $r8)
Unit: $r13 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("d", $r15)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("e", $r16)
Unit: r38 = $r22
Unit: return
Unit: $r33 = virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r7)
Unit: virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r5)
Unit: $r6 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r2 = newarray (java.lang.String)[3]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("d", $r31)
Unit: $r19 = new java.util.ArrayList
Unit: $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)
Unit: $r12 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r15 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r29)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r10)
Unit: $r11 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r18 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r13)
Unit: $r22 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: $r2[1] = "e"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r14)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r18)
Unit: $r8 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("f", $r17)
Unit: $r2[2] = "f"
Unit: $r7 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r1 = new java.util.ArrayList
Unit: virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("d", $r26)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("f", $r33)
Unit: specialinvoke $r22.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r37)
Unit: $r25 = virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: r35 = $r1
Unit: $r20 = newarray (java.lang.String)[3]
Unit: $r5 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r23 = virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r9 = virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r35)
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r28)
Unit: $r32 = virtualinvoke r38.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("e", $r32)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r11)
Unit: r36 = $r4
Unit: virtualinvoke r36.<org.apache.commons.collections4.iterators.LoopingListIterator: void add(java.lang.Object)>("a")
	method testNextAndPreviousIndex : 
Unit: $l17 = (long) $i16
Unit: $i2 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: int previousIndex()>()
Unit: $r3 = newarray (java.lang.String)[3]
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5)
Unit: $r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $i6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: int previousIndex()>()
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: r2 = $r4
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: $l19 = (long) $i18
Unit: $i8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: int nextIndex()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l7)
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1)
Unit: $i12 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: int nextIndex()>()
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $l13 = (long) $i12
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l13)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r8)
Unit: $i14 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: int previousIndex()>()
Unit: $i0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: int nextIndex()>()
Unit: $l1 = (long) $i0
Unit: $r3[2] = "c"
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l21)
Unit: $r9 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: $r3[1] = "b"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r9)
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5)
Unit: $i4 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: int nextIndex()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l11)
Unit: return
Unit: $l23 = (long) $i22
Unit: $l7 = (long) $i6
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l15)
Unit: $r3[0] = "a"
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9)
Unit: $i20 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: int nextIndex()>()
Unit: $i10 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: int previousIndex()>()
Unit: $i22 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: int previousIndex()>()
Unit: $r5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $l9 = (long) $i8
Unit: $i18 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: int previousIndex()>()
Unit: $l11 = (long) $i10
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l17)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3)
Unit: $l21 = (long) $i20
Unit: $i16 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: int nextIndex()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l23)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l19)
Unit: $l15 = (long) $i14
Unit: $l5 = (long) $i4
Unit: $r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
	method testSet : 
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingListIterator: void <init>(java.util.List)>(r1)
Unit: $r10 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9)
Unit: $r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("q", $r6)
Unit: $r9 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r3[2] = "z"
Unit: $r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: $r5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8)
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingListIteratorTest
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingListIterator
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void set(java.lang.Object)>("c")
Unit: return
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void reset()>()
Unit: $r3 = newarray (java.lang.String)[3]
Unit: $r3[0] = "q"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("r", $r7)
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void set(java.lang.Object)>("b")
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: java.lang.Object next()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingListIterator: void set(java.lang.Object)>("a")
Unit: $r3[1] = "r"
Unit: r2 = $r4
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("z", $r5)
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet
	method <init> : 
	method iterator : 
	method contains : 
	method remove : 
	method size : 
	method clear : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtils
	method <init> : 
	method readableMap : 
	method writableMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtils$3
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.IndexedCollection
	method uniqueIndexedCollection : 
	method nonUniqueIndexedCollection : 
	method <init> : 
	method add : 
	method addAll : 
	method clear : 
	method contains : 
	method containsAll : 
	method get : 
	method values : 
	method reindex : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method addToIndex : 
	method removeFromIndex : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtils$2
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtils$1
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMapMultiSet$EntrySetIterator
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.HashMultiSetTest
	method <init> : 
	method suite : 
	method makeObject : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.BoundedIterator
	method <init> : 
	method init : 
	method hasNext : 
	method checkBounds : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.SynchronizedQueueTest
	method suite : 
	method <init> : 
	method getCompatibilityVersion : 
	method makeObject : 
	method testCreate : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.UnmodifiableMapTest
	method <init> : 
	method makeObject : 
	method isPutChangeSupported : 
	method isPutAddSupported : 
	method isRemoveSupported : 
	method makeFullMap : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method getCompatibilityVersion : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.AbstractSortedSetTest
	method <init> : 
	method verify : 
	method isNullSupported : 
	method makeObject : 
	method makeFullCollection : 
	method makeConfirmedCollection : 
	method getFullNonNullElements : 
	method getOtherNonNullElements : 
	method bulkTestSortedSetSubSet : 
	method bulkTestSortedSetHeadSet : 
	method bulkTestSortedSetTailSet : 
	method getCollection : 
	method getConfirmed : 
	method getConfirmed : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeConfirmedCollection : 
	method getConfirmed : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.PredicatedNavigableSetTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullCollection : 
	method makeTestSet : 
	method testGetSet : 
	method testIllegalAdd : 
	method testIllegalAddAll : 
	method testComparator : 
	method getCompatibilityVersion : 
	method makeFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.CompositeCollection
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method size : 
	method isEmpty : 
	method contains : 
	method iterator : 
	method toArray : 
	method toArray : 
	method add : 
	method remove : 
	method containsAll : 
	method addAll : 
	method removeAll : 
	method retainAll : 
	method clear : 
	method setMutator : 
	method addComposited : 
	method addComposited : 
	method addComposited : 
	method removeComposited : 
	method toCollection : 
	method getCollections : 
	method getMutator : 
 ====================================== 
** CLASS org.apache.commons.collections4.SetUtils
	method difference : 
	method disjunction : 
	method emptyIfNull : 
	method emptySet : 
	method emptySortedSet : 
	method hashCodeForSet : 
	method hashSet : 
	method intersection : 
	method isEqualSet : 
	method newIdentityHashSet : 
	method orderedSet : 
	method predicatedNavigableSet : 
	method predicatedSet : 
	method predicatedSortedSet : 
	method synchronizedSet : 
	method synchronizedSortedSet : 
	method transformedNavigableSet : 
	method transformedSet : 
	method transformedSortedSet : 
	method union : 
	method unmodifiableNavigableSet : 
	method unmodifiableSet : 
	method unmodifiableSet : 
	method unmodifiableSortedSet : 
	method <init> : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.CircularFifoQueueTest
	method <init> : 
	method verify : 
	method isNullSupported : 
	method isFailFastSupported : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeObject : 
	method testCircularFifoQueueCircular : 
	method testCircularFifoQueueRemove : 
	method testConstructorException1 : 
	method testConstructorException2 : 
	method testConstructorException3 : 
	method testRemoveError1 : 
	method testRemoveError2 : 
	method testRemoveError3 : 
	method testRemoveError4 : 
	method testRemoveError5 : 
	method testRemoveError6 : 
	method testRemoveError7 : 
	method testRemoveError8 : 
	method testRemoveError9 : 
	method testRepeatedSerialization : 
	method testGetIndex : 
	method getCompatibilityVersion : 
	method getCollection : 
	method getCollection : 
	method getCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.Factory
	method create : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapValues
	method <init> : 
	method getFullElements : 
	method makeObject : 
	method makeFullCollection : 
	method isNullSupported : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isTestSerialization : 
	method resetFull : 
	method resetEmpty : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMapTest
	method <init> : 
	method suite : 
	method isAddSupported : 
	method isRemoveSupported : 
	method makeObject : 
	method makeFullMap : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method testDecoratorFactoryNullMap : 
	method testAddException : 
	method testUnmodifiableEntries : 
	method testUnmodifiableMapIterator : 
	method testUnmodifiableKeySet : 
	method testUnmodifiableValues : 
	method testUnmodifiableAsMap : 
	method testUnmodifiableKeys : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.SwitchClosure
	method switchClosure : 
	method switchClosure : 
	method <init> : 
	method <init> : 
	method execute : 
	method getPredicates : 
	method getClosures : 
	method getDefaultClosure : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ConstantFactory
	method constantFactory : 
	method <init> : 
	method create : 
	method getConstant : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.NodeListIteratorTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method supportsRemove : 
	method testNullConstructor : 
	method testEmptyIteratorWithNodeConstructor : 
	method testFullIteratorWithNodeConstructor : 
	method makeObject : 
	method access$000 : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method supportsRemove : 
	method supportsAdd : 
	method supportsSet : 
	method testListIterator : 
	method testDecorateFactory : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.ResettableListIterator
 ====================================== 
** CLASS org.apache.commons.collections4.functors.PrototypeFactory$1
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.ReverseComparator
	method <init> : 
	method <init> : 
	method compare : 
	method hashCode : 
	method equals : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest$OddPredicate
	method <init> : 
	method evaluate : 
	method evaluate : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassBlocksRemove
	method <init> : 
	method removeLRU : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.UnmodifiableMapIterator
	method unmodifiableMapIterator : 
	method <init> : 
	method hasNext : 
	method next : 
	method getKey : 
	method getValue : 
	method setValue : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassFirstBlocksRemove
	method <init> : 
	method removeLRU : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.InstantiateFactory
	method instantiateFactory : 
	method <init> : 
	method <init> : 
	method findConstructor : 
	method create : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapEntryIterator
	method <init> : 
	method next : 
	method previous : 
	method previous : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ComparatorPredicateTest$1
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.MultiKey
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method getKeys : 
	method getKey : 
	method size : 
	method equals : 
	method hashCode : 
	method toString : 
	method calculateHashCode : 
	method readResolve : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.LazyIteratorChain
	method <init> : 
	method nextIterator : 
	method updateCurrentIterator : 
	method hasNext : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.UniqueFilterIteratorTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method testIterator : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.PredicatedSortedBagTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet
	method <init> : 
	method toArray : 
	method toArray : 
 ====================================== 
** CLASS org.apache.commons.collections4.ClosureUtilsTest
	method <init> : 
	method testExceptionClosure : 
Unit: $r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure exceptionClosure()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r2 = $r10
Unit: $r8 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure exceptionClosure()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: $r5 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure exceptionClosure()>()
Unit: $r4 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure exceptionClosure()>()
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r3)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r4, $r5)
Unit: interfaceinvoke $r8.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>($r9)
Unit: r1 = $r7
Unit: $r9 = <org.apache.commons.collections4.ClosureUtilsTest: java.lang.Object cString>
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.ClosureUtilsTest
Unit: interfaceinvoke $r6.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure exceptionClosure()>()
Unit: $r7 := @caughtexception
Unit: return
Unit: $r10 := @caughtexception
	method testNopClosure : 
Unit: $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: interfaceinvoke $r5.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("Hello")
Unit: specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Hello")
Unit: $r5 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>()
Unit: return
Unit: interfaceinvoke $r3.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: $r2 = new java.lang.StringBuilder
Unit: $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Hello", $r6)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>()
Unit: r0 := @this: org.apache.commons.collections4.ClosureUtilsTest
Unit: r1 = $r2
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Hello", $r4)
	method testInvokeClosure : 
Unit: $r4 = new java.lang.StringBuffer
Unit: $r3 = virtualinvoke r11.<java.lang.StringBuffer: java.lang.String toString()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("olleH", $r3)
Unit: $r5[0] = $r6
Unit: r12 = $r4
Unit: $r5 = newarray (java.lang.Class)[1]
Unit: $r6 = <java.lang.Integer: java.lang.Class TYPE>
Unit: $r7 = newarray (java.lang.Object)[1]
Unit: $r10 = virtualinvoke r12.<java.lang.StringBuffer: java.lang.String toString()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("He", $r10)
Unit: return
Unit: $r7[0] = $r8
Unit: r11 = $r1
Unit: specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("Hello")
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: interfaceinvoke $r2.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(r11)
Unit: $r9 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String,java.lang.Class[],java.lang.Object[])>("setLength", $r5, $r7)
Unit: $r1 = new java.lang.StringBuffer
Unit: specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("Hello")
Unit: interfaceinvoke $r9.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(r12)
Unit: r0 := @this: org.apache.commons.collections4.ClosureUtilsTest
Unit: $r2 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("reverse")
	method testForClosure : 
Unit: $r5 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>
Unit: $r13 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(3, null)
Unit: $r4 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $r7 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: specialinvoke $r4.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: $r11 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(1, null)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(1, r1)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.ClosureUtilsTest
Unit: $r2 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $r9 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(-1, $r7)
Unit: $r8 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>
Unit: $r12 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: specialinvoke $r7.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $r6 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(0, $r4)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: specialinvoke $r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure forClosure(int,org.apache.commons.collections4.Closure)>(5, r1)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r8, $r9)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r14)
Unit: r1 = $r2
Unit: $r10 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>
Unit: $i0 = r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: interfaceinvoke $r3.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(5L, $l1)
	method testWhileClosure : 
Unit: specialinvoke $r4.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $r7 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r9 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: goto [?= $r9 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()]
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r15 = $r1
Unit: interfaceinvoke $r3.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>(null, $r7)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $l1 = (long) $i0
Unit: r18 = $r14
Unit: $l3 = (long) $i2
Unit: r17 = $r13
Unit: $r14 := @caughtexception
Unit: interfaceinvoke $r6.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: $r1 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>(null, null)
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: r19 = $r12
Unit: $r6 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>($r5, r16)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate uniquePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: $r13 := @caughtexception
Unit: $i0 = r15.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $r4 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: r16 = $r4
Unit: $r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>($r2, r15)
Unit: $i2 = r16.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>($r9, null)
Unit: r0 := @this: org.apache.commons.collections4.ClosureUtilsTest
Unit: specialinvoke $r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: goto [?= staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure whileClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>(null, null)]
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r12 := @caughtexception
	method testDoWhileClosure : 
Unit: $r5 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $l1 = (long) $i0
Unit: specialinvoke $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $r9 := @caughtexception
Unit: interfaceinvoke $r7.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r6 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate uniquePredicate()>()
Unit: specialinvoke $r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure doWhileClosure(org.apache.commons.collections4.Closure,org.apache.commons.collections4.Predicate)>(null, null)
Unit: r1 = $r9
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure doWhileClosure(org.apache.commons.collections4.Closure,org.apache.commons.collections4.Predicate)>(r10, $r3)
Unit: $l3 = (long) $i2
Unit: interfaceinvoke $r4.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: r11 = $r5
Unit: $r7 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure doWhileClosure(org.apache.commons.collections4.Closure,org.apache.commons.collections4.Predicate)>(r11, $r6)
Unit: r10 = $r2
Unit: $i0 = r10.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r2 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $i2 = r11.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: r0 := @this: org.apache.commons.collections4.ClosureUtilsTest
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: return
	method testChainedClosure : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l9)
Unit: $r21 = (org.apache.commons.collections4.Closure[]) null
Unit: interfaceinvoke $r8.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: $r13 = newarray (org.apache.commons.collections4.Closure)[0]
Unit: $r14 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>
Unit: r37 = $r6
Unit: goto [?= $r25 = newarray (org.apache.commons.collections4.Closure)[2]]
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r16, $r18)
Unit: interfaceinvoke r45.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: $l1 = (long) $i0
Unit: specialinvoke $r10.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: specialinvoke $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(java.util.Collection)>($r23)
Unit: goto [?= $r21 = (org.apache.commons.collections4.Closure[]) null]
Unit: specialinvoke $r9.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $i4 = r36.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $l11 = (long) $i10
Unit: $r29 := @caughtexception
Unit: $r19[0] = null
Unit: $r4 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>($r3)
Unit: specialinvoke $r27.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r25[0] = null
Unit: specialinvoke $r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l11)
Unit: r42 = $r32
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>($r21)
Unit: $i0 = r34.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $r10 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: interfaceinvoke r45.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l7)
Unit: return
Unit: $i10 = r39.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $i8 = r38.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $r3[1] = r35
Unit: goto [?= return]
Unit: $r33 := @caughtexception
Unit: goto [?= $r23 = (java.util.Collection) null]
Unit: interfaceinvoke $r12.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: r41 = $r31
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>($r19)
Unit: $r19 = newarray (org.apache.commons.collections4.Closure)[2]
Unit: $r25 = newarray (org.apache.commons.collections4.Closure)[2]
Unit: $i2 = r35.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: r40 = $r11
Unit: $r15 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>($r13)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(java.util.Collection)>(r40)
Unit: $r6 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $l9 = (long) $i8
Unit: r38 = $r9
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r23 = (java.util.Collection) null
Unit: $l3 = (long) $i2
Unit: interfaceinvoke r40.<java.util.Collection: boolean add(java.lang.Object)>(r38)
Unit: r0 := @this: org.apache.commons.collections4.ClosureUtilsTest
Unit: r44 = $r29
Unit: $r16 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>
Unit: $r7[1] = r37
Unit: $r30 := @caughtexception
Unit: r45 = $r27
Unit: $r17 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
Unit: interfaceinvoke r40.<java.util.Collection: boolean add(java.lang.Object)>(r39)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r8 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>($r7)
Unit: $r7 = newarray (org.apache.commons.collections4.Closure)[3]
Unit: $r27 = new java.util.ArrayList
Unit: $r7[0] = r36
Unit: r46 = $r33
Unit: r43 = $r30
Unit: $r11 = new java.util.ArrayList
Unit: specialinvoke $r11.<java.util.ArrayList: void <init>()>()
Unit: $r3 = newarray (org.apache.commons.collections4.Closure)[2]
Unit: goto [?= $r27 = new java.util.ArrayList]
Unit: $r1 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $i6 = r37.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: r34 = $r1
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(java.util.Collection)>(r45)
Unit: r36 = $r5
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(org.apache.commons.collections4.Closure[])>($r25)
Unit: interfaceinvoke $r4.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: $r32 := @caughtexception
Unit: $r3[0] = r34
Unit: $r9 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $r19[1] = null
Unit: specialinvoke $r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $l7 = (long) $i6
Unit: $r7[2] = r36
Unit: $r5 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $l5 = (long) $i4
Unit: $r18 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure chainedClosure(java.util.Collection)>($r17)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: r35 = $r2
Unit: specialinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: interfaceinvoke r40.<java.util.Collection: boolean add(java.lang.Object)>(r39)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l5)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r14, $r15)
Unit: r39 = $r10
Unit: $r25[1] = null
Unit: $r2 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $r31 := @caughtexception
	method testIfClosure : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l7)
Unit: $r10 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)>($r9, r17, r18)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5)
Unit: r17 = $r7
Unit: specialinvoke $r8.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: r18 = $r8
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l11)
Unit: r19 = $r11
Unit: r0 := @this: org.apache.commons.collections4.ClosureUtilsTest
Unit: $r8 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $l9 = (long) $i8
Unit: $l3 = (long) $i2
Unit: $r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>($r2, r15)
Unit: r16 = $r4
Unit: $r6 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure)>($r5, r16)
Unit: specialinvoke $r4.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $l5 = (long) $i4
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $r4 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: $i0 = r15.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $r14 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure ifClosure(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Closure,org.apache.commons.collections4.Closure)>($r13, r19, r20)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r11 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $l1 = (long) $i0
Unit: specialinvoke $r12.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $i8 = r19.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $l7 = (long) $i6
Unit: $i6 = r18.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: interfaceinvoke $r14.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: $r7 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: r15 = $r1
Unit: interfaceinvoke $r6.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: $i2 = r16.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: specialinvoke $r11.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: interfaceinvoke $r10.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: r20 = $r12
Unit: $r9 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9)
Unit: specialinvoke $r7.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $i4 = r17.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: interfaceinvoke $r3.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: specialinvoke $r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $l11 = (long) $i10
Unit: $i10 = r20.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $r12 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $r13 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r1 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
	method testSwitchClosure : 
Unit: $r21[1] = r2
Unit: interfaceinvoke $r28.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l19)
Unit: $i20 = r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $r29 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO")
Unit: $i26 = r3.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: virtualinvoke r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: goto [?= $r52 = (org.apache.commons.collections4.Predicate[]) null]
Unit: $i24 = r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $r22 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[],org.apache.commons.collections4.Closure)>($r18, $r21, r3)
Unit: virtualinvoke r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: $r24 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l27)
Unit: $r10[1] = r2
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l21)
Unit: $r59[0] = $r60
Unit: virtualinvoke r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: $r15 = newarray (org.apache.commons.collections4.Closure)[2]
Unit: r4 = $r23
Unit: $r28 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>(r4)
Unit: $r46 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>($r44)
Unit: $i2 = r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: $l1 = (long) $i0
Unit: interfaceinvoke $r33.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("THERE")
Unit: $i10 = r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $r61[1] = r2
Unit: virtualinvoke r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9)
Unit: $r16 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>($r12, $r15)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l17)
Unit: $r59 = newarray (org.apache.commons.collections4.Predicate)[1]
Unit: $r51 = (org.apache.commons.collections4.Closure[]) null
Unit: r70 = $r64
Unit: $r45 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>
Unit: r72 = $r66
Unit: $r18[0] = $r19
Unit: $r54 = (java.util.Map) null
Unit: $r67 := @caughtexception
Unit: interfaceinvoke r4.<java.util.Map: void clear()>()
Unit: $r18[1] = $r20
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l7)
Unit: $l25 = (long) $i24
Unit: specialinvoke $r44.<java.util.HashMap: void <init>()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: $r61 = newarray (org.apache.commons.collections4.Closure)[2]
Unit: $r7[1] = $r9
Unit: specialinvoke $r17.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $r11 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>($r7, $r10)
Unit: $i6 = r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $l17 = (long) $i16
Unit: $i16 = r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: interfaceinvoke r4.<java.util.Map: void clear()>()
Unit: $i12 = r3.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $l21 = (long) $i20
Unit: $r26 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE")
Unit: $i18 = r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $r49 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>(r4)
Unit: r3 = $r17
Unit: virtualinvoke r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: $r52 = (org.apache.commons.collections4.Predicate[]) null
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l23)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE")
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: virtualinvoke r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: virtualinvoke r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: virtualinvoke r3.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: $r7 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: $r31 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE")
Unit: $r36 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE")
Unit: $l27 = (long) $i26
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l15)
Unit: $r48 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>($r59, $r61)
Unit: $l9 = (long) $i8
Unit: $i22 = r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $i14 = r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $r57 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: interfaceinvoke r4.<java.util.Map: void clear()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r12[0] = $r13
Unit: $r9 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE")
Unit: r2 = $r6
Unit: $l13 = (long) $i12
Unit: specialinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $r8 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO")
Unit: specialinvoke $r23.<java.util.HashMap: void <init>()>()
Unit: interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, r1)
Unit: $r44 = new java.util.HashMap
Unit: goto [?= return]
Unit: $r15[0] = r1
Unit: $r12[1] = $r14
Unit: interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, r3)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r1 = $r5
Unit: $r7[0] = $r8
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r45, $r46)
Unit: interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, r2)
Unit: $l19 = (long) $i18
Unit: $i4 = r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: r69 = $r65
Unit: $r23 = new java.util.HashMap
Unit: r71 = $r63
Unit: $r10 = newarray (org.apache.commons.collections4.Closure)[2]
Unit: $r42 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>
Unit: interfaceinvoke $r16.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("HELLO")
Unit: $r17 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, r2)
Unit: virtualinvoke r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: $r12 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l13)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l25)
Unit: $r13 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO")
Unit: $r56 = newarray (org.apache.commons.collections4.Closure)[2]
Unit: $r66 := @caughtexception
Unit: $r39 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>(r4)
Unit: $l3 = (long) $i2
Unit: $r10[0] = r1
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: $r43 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>($r41, $r40)
Unit: $r5 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: goto [?= $r59 = newarray (org.apache.commons.collections4.Predicate)[1]]
Unit: $r34 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO")
Unit: interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, r2)
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>($r52, $r51)
Unit: $r64 := @caughtexception
Unit: $r18 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: $l5 = (long) $i4
Unit: $i8 = r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $i0 = r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $r21 = newarray (org.apache.commons.collections4.Closure)[2]
Unit: interfaceinvoke $r22.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("WELL")
Unit: $r20 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE")
Unit: $r6 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: $l15 = (long) $i14
Unit: $l7 = (long) $i6
Unit: $r61[0] = r1
Unit: $r41 = newarray (org.apache.commons.collections4.Predicate)[0]
Unit: $r60 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $l23 = (long) $i22
Unit: $r65 := @caughtexception
Unit: $r40 = newarray (org.apache.commons.collections4.Closure)[0]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r43)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r21[0] = r1
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>(null, null)
Unit: interfaceinvoke $r11.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("WELL")
Unit: interfaceinvoke $r39.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("WELL")
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>($r54)
Unit: return
Unit: interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r1)
Unit: r68 = $r67
Unit: $r33 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(java.util.Map)>(r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r48, $r49)
Unit: $l11 = (long) $i10
Unit: interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, r1)
Unit: specialinvoke $r5.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: r0 := @this: org.apache.commons.collections4.ClosureUtilsTest
Unit: $r19 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l11)
Unit: $r63 := @caughtexception
Unit: goto [?= $r54 = (java.util.Map) null]
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchClosure(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Closure[])>($r57, $r56)
Unit: goto [?= $r57 = newarray (org.apache.commons.collections4.Predicate)[2]]
Unit: virtualinvoke r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: $r15[1] = r2
Unit: interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, null)
	method testSwitchMapClosure : 
Unit: $l13 = (long) $i12
Unit: r5 = $r24
Unit: $i2 = r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $r22 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchMapClosure(java.util.Map)>($r20)
Unit: $r11 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchMapClosure(java.util.Map)>(r3)
Unit: virtualinvoke r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: $r15 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: specialinvoke $r7.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HELLO", r1)
Unit: $i4 = r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $i8 = r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l11)
Unit: virtualinvoke r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: $l9 = (long) $i8
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: r0 := @this: org.apache.commons.collections4.ClosureUtilsTest
Unit: interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, r4)
Unit: staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchMapClosure(java.util.Map)>(null)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchMapClosure(java.util.Map)>(r3)
Unit: interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("THERE", r2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l13)
Unit: virtualinvoke r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: $i10 = r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: $i0 = r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: $l1 = (long) $i0
Unit: r1 = $r6
Unit: interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HELLO", r1)
Unit: specialinvoke $r8.<java.util.HashMap: void <init>()>()
Unit: $l11 = (long) $i10
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22)
Unit: $r20 = new java.util.HashMap
Unit: $r8 = new java.util.HashMap
Unit: $l5 = (long) $i4
Unit: interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("THERE", r2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l7)
Unit: interfaceinvoke $r19.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("WELL")
Unit: interfaceinvoke r3.<java.util.Map: void clear()>()
Unit: $r19 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure switchMapClosure(java.util.Map)>(r3)
Unit: $i12 = r4.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: specialinvoke $r20.<java.util.HashMap: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r4 = $r15
Unit: goto [?= return]
Unit: interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("THERE", r2)
Unit: virtualinvoke r1.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void reset()>()
Unit: return
Unit: $l3 = (long) $i2
Unit: interfaceinvoke r3.<java.util.Map: void clear()>()
Unit: $r21 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l5)
Unit: $l7 = (long) $i6
Unit: specialinvoke $r6.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: interfaceinvoke $r14.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>("THERE")
Unit: $i6 = r2.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: int count>
Unit: interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HELLO", r1)
Unit: $r24 := @caughtexception
Unit: interfaceinvoke $r11.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: $r6 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
Unit: r2 = $r7
Unit: r3 = $r8
Unit: specialinvoke $r15.<org.apache.commons.collections4.ClosureUtilsTest$MockClosure: void <init>()>()
Unit: $r7 = new org.apache.commons.collections4.ClosureUtilsTest$MockClosure
	method testTransformerClosure : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3)
Unit: r2 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure asClosure(org.apache.commons.collections4.Transformer)>(r1)
Unit: $i0 = r1.<org.apache.commons.collections4.ClosureUtilsTest$MockTransformer: int count>
Unit: r0 := @this: org.apache.commons.collections4.ClosureUtilsTest
Unit: $l3 = (long) $i2
Unit: $r3 = new org.apache.commons.collections4.ClosureUtilsTest$MockTransformer
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r5)
Unit: interfaceinvoke r2.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: return
Unit: $r5 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure asClosure(org.apache.commons.collections4.Transformer)>(null)
Unit: $l1 = (long) $i0
Unit: specialinvoke $r3.<org.apache.commons.collections4.ClosureUtilsTest$MockTransformer: void <init>()>()
Unit: r1 = $r3
Unit: $i2 = r1.<org.apache.commons.collections4.ClosureUtilsTest$MockTransformer: int count>
Unit: interfaceinvoke r2.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>(null)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>()
	method testSingletonPatternInSerialization : 
Unit: $r6 = <org.apache.commons.collections4.functors.NOPClosure: org.apache.commons.collections4.Closure INSTANCE>
Unit: if i1 >= i0 goto return
Unit: goto [?= (branch)]
Unit: i0 = lengthof r2
Unit: $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()
Unit: r1 = $r4
Unit: $r4 = newarray (java.lang.Object)[2]
Unit: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Singletone patern broken for ")
Unit: $r5 = <org.apache.commons.collections4.functors.ExceptionClosure: org.apache.commons.collections4.Closure INSTANCE>
Unit: r2 = r1
Unit: staticinvoke <org.apache.commons.collections4.TestUtils: void assertSameAfterSerialization(java.lang.String,java.lang.Object)>($r11, r3)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.ClosureUtilsTest
Unit: $r4[0] = $r5
Unit: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: r3 = r2[i1]
Unit: $r7 = new java.lang.StringBuilder
Unit: $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)
Unit: i1 = 0
Unit: $r4[1] = $r6
Unit: i1 = i1 + 1
Unit: specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.PeekingIterator
	method peekingIterator : 
	method <init> : 
	method fill : 
	method hasNext : 
	method peek : 
	method element : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Branch
	method <init> : 
	method addLeaf : 
	method getLeaf : 
	method leafIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$LeafFinder
	method <init> : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.NullIsTruePredicate
	method nullIsTruePredicate : 
	method <init> : 
	method evaluate : 
	method getPredicates : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.ListOrderedSetTest$B
	method <init> : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues
	method <init> : 
	method toArray : 
	method toArray : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMapMultiSet$MapBasedMultiSetIterator
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.ListOrderedSetTest$A
	method <init> : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.BoundedIteratorTest$1
	method <init> : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.BagUtils
	method <init> : 
	method synchronizedBag : 
	method unmodifiableBag : 
	method predicatedBag : 
	method transformingBag : 
	method collectionBag : 
	method synchronizedSortedBag : 
	method unmodifiableSortedBag : 
	method predicatedSortedBag : 
	method transformingSortedBag : 
	method emptyBag : 
	method emptySortedBag : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractHashedMap$KeySet
	method <init> : 
	method size : 
	method clear : 
	method contains : 
	method remove : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.TiedMapEntryTest
	method <init> : 
	method makeMapEntry : 
	method testConstructors : 
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.TiedMapEntryTest
	method testSetValue : 
Unit: $r20 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("a", $r8)
Unit: r24 = $r6
Unit: $r12 = new org.apache.commons.collections4.keyvalue.TiedMapEntry
Unit: $r6 = new org.apache.commons.collections4.keyvalue.TiedMapEntry
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("A", "a")
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("b", $r14)
Unit: r26 = $r18
Unit: specialinvoke $r12.<org.apache.commons.collections4.keyvalue.TiedMapEntry: void <init>(java.util.Map,java.lang.Object)>(r1, "B")
Unit: specialinvoke $r2.<java.util.HashMap: void <init>()>()
Unit: $r15 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("y")
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("a", $r9)
Unit: specialinvoke $r18.<org.apache.commons.collections4.keyvalue.TiedMapEntry: void <init>(java.util.Map,java.lang.Object)>(r1, "C")
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.TiedMapEntryTest
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("B", $r13)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("b", $r15)
Unit: $r23 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: $r16 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: $r17 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: $r2 = new java.util.HashMap
Unit: r25 = $r12
Unit: $r18 = new org.apache.commons.collections4.keyvalue.TiedMapEntry
Unit: $r7 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("c", $r21)
Unit: $r21 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("z")
Unit: $r13 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("c", $r20)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("A", $r10)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("A", $r7)
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("B", "b")
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("x", $r11)
Unit: $r9 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>("x")
Unit: $r10 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: specialinvoke $r6.<org.apache.commons.collections4.keyvalue.TiedMapEntry: void <init>(java.util.Map,java.lang.Object)>(r1, "A")
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("z", $r23)
Unit: $r14 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("C", $r19)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("B", $r16)
Unit: $r11 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: $r22 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("C", "c")
Unit: $r8 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("C", $r22)
Unit: r1 = $r2
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("y", $r17)
Unit: $r19 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getKey()>()
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractSortedMapTest$TestHeadMap
	method <init> : 
	method makeObject : 
	method makeFullMap : 
	method testHeadMapOutOfRange : 
	method getCompatibilityVersion : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.CommandVisitor
	method visitInsertCommand : 
	method visitKeepCommand : 
	method visitDeleteCommand : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.SequencesComparatorTest$1
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse
	method <init> : 
	method size : 
	method isEmpty : 
	method get : 
	method getKey : 
	method containsKey : 
	method containsValue : 
	method firstKey : 
	method lastKey : 
	method nextKey : 
	method previousKey : 
	method put : 
	method putAll : 
	method remove : 
	method removeValue : 
	method clear : 
	method keySet : 
	method values : 
	method entrySet : 
	method mapIterator : 
	method inverseBidiMap : 
	method equals : 
	method hashCode : 
	method toString : 
	method inverseBidiMap : 
	method removeValue : 
	method getKey : 
	method put : 
	method values : 
	method remove : 
	method get : 
	method mapIterator : 
	method previousKey : 
	method nextKey : 
	method lastKey : 
	method firstKey : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ZippingIterator
	method <init> : 
	method <init> : 
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator
	method <init> : 
	method checkModCount : 
	method getLastNodeReturned : 
	method hasNext : 
	method next : 
	method hasPrevious : 
	method previous : 
	method nextIndex : 
	method previousIndex : 
	method remove : 
	method set : 
	method add : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractHashedMap$EntrySet
	method <init> : 
	method size : 
	method clear : 
	method contains : 
	method remove : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer
	method <init> : 
	method mask : 
	method bitsPerElement : 
	method lengthInBits : 
	method bitIndex : 
	method isBitSet : 
	method isPrefix : 
	method isPrefix : 
	method bitIndex : 
	method isBitSet : 
	method lengthInBits : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.ArrayListValuedHashMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method createCollection : 
	method trimToSize : 
	method writeObject : 
	method readObject : 
	method createCollection : 
	method createCollection : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.FixedSizeSortedMap
	method fixedSizeSortedMap : 
	method <init> : 
	method getSortedMap : 
	method writeObject : 
	method readObject : 
	method put : 
	method putAll : 
	method clear : 
	method remove : 
	method entrySet : 
	method keySet : 
	method values : 
	method subMap : 
	method headMap : 
	method tailMap : 
	method isFull : 
	method maxSize : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.CollectionBagTest
	method <init> : 
	method makeObject : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method getCompatibilityVersion : 
	method testEmptyBagCompatibility : 
	method testFullBagCompatibility : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.CircularFifoQueue
	method <init> : 
	method <init> : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method size : 
	method isEmpty : 
	method isFull : 
	method isAtFullCapacity : 
	method maxSize : 
	method clear : 
	method add : 
	method get : 
	method offer : 
	method poll : 
	method element : 
	method peek : 
	method remove : 
	method increment : 
	method decrement : 
	method iterator : 
	method access$000 : 
	method access$100 : 
	method access$200 : 
	method access$300 : 
	method access$400 : 
	method access$500 : 
	method access$600 : 
	method access$202 : 
	method access$102 : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.AbstractMapIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method getMap : 
	method getConfirmedMap : 
	method supportsSetValue : 
	method isGetStructuralModify : 
	method addSetValues : 
	method testEmptyMapIterator : 
	method testFullMapIterator : 
	method testMapIteratorSet : 
	method testRemove : 
	method testMapIteratorSetRemoveSet : 
	method testMapIteratorRemoveGetKey : 
	method testMapIteratorRemoveGetValue : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.SetUniqueList$SetListListIterator
	method <init> : 
	method next : 
	method previous : 
	method remove : 
	method add : 
	method set : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMap$ValuesView
	method <init> : 
	method size : 
	method contains : 
	method clear : 
	method iterator : 
	method get : 
	method set : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.MapPerformance$DummyMap
	method <init> : 
	method clear : 
	method containsKey : 
	method containsValue : 
	method entrySet : 
	method get : 
	method isEmpty : 
	method keySet : 
	method put : 
	method putAll : 
	method remove : 
	method size : 
	method values : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.FactoryTransformer
	method factoryTransformer : 
	method <init> : 
	method transform : 
	method getFactory : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.DeleteCommand
	method <init> : 
	method accept : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.StringValueTransformer
	method stringValueTransformer : 
	method <init> : 
	method transform : 
	method readResolve : 
	method transform : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.IteratorIterable
	method createTypesafeIterator : 
	method <init> : 
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ObjectGraphIteratorTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method testIteratorConstructor_null1 : 
	method testIteratorConstructor_null_next : 
	method testIteratorConstructor_null_remove : 
	method testIteratorConstructorIteration_Empty : 
	method testIteratorConstructorIteration_Simple : 
	method testIteratorConstructorIteration_SimpleNoHasNext : 
	method testIteratorConstructorIteration_WithEmptyIterators : 
	method testIteratorConstructorRemove : 
	method testIteration_IteratorOfIterators : 
	method testIteration_IteratorOfIteratorsWithEmptyIterators : 
	method testIteration_RootNull : 
	method testIteration_RootNoTransformer : 
	method testIteration_Transformed1 : 
	method testIteration_Transformed2 : 
	method testIteration_Transformed3 : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.InstantiateTransformer
	method instantiateTransformer : 
	method instantiateTransformer : 
	method <init> : 
	method <init> : 
	method transform : 
	method transform : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.SequencesComparator$Snake
	method <init> : 
	method getStart : 
	method getEnd : 
	method getDiag : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.FixedOrderComparatorTest
	method <init> : 
	method makeObject : 
	method getComparableObjectsOrdered : 
	method getCompatibilityVersion : 
	method testConstructorPlusAdd : 
	method testArrayConstructor : 
	method testListConstructor : 
	method testAddAsEqual : 
	method testLock : 
	method testUnknownObjectBehavior : 
	method assertComparatorYieldsOrder : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.BoundedMap
	method isFull : 
	method maxSize : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.SynchronizedBag$SynchronizedBagSet
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LinkedMap$LinkedMapList
	method <init> : 
	method size : 
	method get : 
	method contains : 
	method indexOf : 
	method lastIndexOf : 
	method containsAll : 
	method remove : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method clear : 
	method toArray : 
	method toArray : 
	method iterator : 
	method listIterator : 
	method listIterator : 
	method subList : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.BooleanComparator
	method getTrueFirstComparator : 
	method getFalseFirstComparator : 
	method booleanComparator : 
	method <init> : 
	method <init> : 
	method compare : 
	method hashCode : 
	method equals : 
	method sortsTrueFirst : 
	method compare : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.properties.SortedPropertiesTest
	method <init> : 
	method testKeys : 
Unit: if c3 > 90 goto return
Unit: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2)
Unit: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: r0 := @this: org.apache.commons.collections4.properties.SortedPropertiesTest
Unit: c2 = 90
Unit: c3 = (char) $i0
Unit: $r2 = new org.apache.commons.collections4.properties.SortedProperties
Unit: specialinvoke $r2.<org.apache.commons.collections4.properties.SortedProperties: void <init>()>()
Unit: r1 = $r2
Unit: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c2)
Unit: goto [?= (branch)]
Unit: virtualinvoke r1.<org.apache.commons.collections4.properties.SortedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
Unit: $i0 = c3 + 1
Unit: $r4 = interfaceinvoke r11.<java.util.Enumeration: java.lang.Object nextElement()>()
Unit: c2 = (char) $i1
Unit: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c3)
Unit: specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
Unit: r11 = virtualinvoke r1.<org.apache.commons.collections4.properties.SortedProperties: java.util.Enumeration keys()>()
Unit: c3 = 65
Unit: $i1 = c2 - 1
Unit: if c2 < 65 goto r11 = virtualinvoke r1.<org.apache.commons.collections4.properties.SortedProperties: java.util.Enumeration keys()>()
Unit: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value")
Unit: goto [?= (branch)]
Unit: return
Unit: $r6 = new java.lang.StringBuilder
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.PredicatedMultiSetTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator
	method <init> : 
	method compare : 
	method compare : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LazyMap
	method lazyMap : 
	method lazyMap : 
	method <init> : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method get : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest$TestBidiOrderedMapIterator
	method <init> : 
	method addSetValues : 
	method supportsRemove : 
	method supportsSetValue : 
	method makeEmptyIterator : 
	method makeObject : 
	method getMap : 
	method getConfirmedMap : 
	method verify : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.UnmodifiableBoundedCollection
	method unmodifiableBoundedCollection : 
	method unmodifiableBoundedCollection : 
	method <init> : 
	method iterator : 
	method add : 
	method addAll : 
	method clear : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method isFull : 
	method maxSize : 
	method decorated : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.MapUtils$1
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.AbstractIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method supportsEmptyIterator : 
	method supportsFullIterator : 
	method supportsRemove : 
	method verify : 
	method testEmptyIterator : 
	method testFullIterator : 
	method testRemove : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.TransformingComparator
	method <init> : 
	method <init> : 
	method compare : 
	method hashCode : 
	method equals : 
 ====================================== 
** CLASS org.apache.commons.collections4.MapUtils$2
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$5
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.Driver
	method <init> : 
	method main : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$4
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet
	method <init> : 
	method contains : 
	method isEmpty : 
	method size : 
	method uniqueElements : 
	method getCount : 
	method createEntrySetIterator : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$3
	method <init> : 
	method equate : 
	method hash : 
	method hash : 
	method equate : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$2
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$1
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.MultiSetUtilsTest$2
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.MultiSetUtilsTest$1
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.LazyIteratorChainTest$3
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.LazyIteratorChainTest$4
	method <init> : 
	method nextIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$9
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$8
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.DualTreeBidiMapTest
	method suite : 
	method <init> : 
	method makeObject : 
	method ignoredTests : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$7
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.LazyIteratorChainTest$1
	method <init> : 
	method nextIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMap$EntrySetView
	method <init> : 
	method getEntrySet : 
	method size : 
	method isEmpty : 
	method contains : 
	method containsAll : 
	method remove : 
	method clear : 
	method equals : 
	method hashCode : 
	method toString : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$6
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.LazyIteratorChainTest$2
	method <init> : 
	method nextIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.ClosureUtils
	method <init> : 
	method exceptionClosure : 
	method nopClosure : 
	method asClosure : 
	method forClosure : 
	method whileClosure : 
	method doWhileClosure : 
	method invokerClosure : 
	method invokerClosure : 
	method chainedClosure : 
	method chainedClosure : 
	method ifClosure : 
	method ifClosure : 
	method switchClosure : 
	method switchClosure : 
	method switchClosure : 
	method switchMapClosure : 
 ====================================== 
** CLASS org.apache.commons.collections4.BulkTest
	method <init> : 
	method clone : 
	method ignoredTests : 
	method toString : 
	method makeSuite : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method getKey : 
	method getValue : 
	method setValue : 
	method reset : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.TransformedSortedMapTest
	method <init> : 
	method suite : 
	method ignoredTests : 
	method makeObject : 
	method isSubMapViewsSerializable : 
	method testTransformedMap : 
	method testFactory_Decorate : 
	method testFactory_decorateTransform : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.ArrayListValuedHashMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method testListValuedMapAdd : 
	method testListValuedMapAddViaListIterator : 
	method testListValuedMapRemove : 
	method testListValuedMapRemoveViaListIterator : 
	method testEqualsHashCodeContract : 
	method testListValuedMapEqualsHashCodeContract : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.PushbackIterator
	method pushbackIterator : 
	method <init> : 
	method pushback : 
	method hasNext : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.PredicatedNavigableSet
	method predicatedNavigableSet : 
	method <init> : 
	method decorated : 
	method lower : 
	method floor : 
	method ceiling : 
	method higher : 
	method pollFirst : 
	method pollLast : 
	method descendingSet : 
	method descendingIterator : 
	method subSet : 
	method headSet : 
	method tailSet : 
	method decorated : 
	method decorated : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.GrowthList
	method growthList : 
	method <init> : 
	method <init> : 
	method <init> : 
	method add : 
	method addAll : 
	method set : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues
	method <init> : 
	method iterator : 
	method size : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.ListUtilsTest
	method <init> : 
	method setUp : 
	method testIntersectNonEmptyWithEmptyList : 
Unit: r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>()
Unit: $r2 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("result not empty", $z0)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List intersection(java.util.List,java.util.List)>(r1, $r2)
	method testIntersectEmptyWithEmptyList : 
Unit: $r2 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List intersection(java.util.List,java.util.List)>(r1, r1)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>()
Unit: r1 = <java.util.Collections: java.util.List EMPTY_LIST>
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("result not empty", $z0)
	method testIntersectNonEmptySubset : 
Unit: $r6 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r4)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
Unit: $r2 = new java.util.ArrayList
Unit: return
Unit: $r7 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List intersection(java.util.List,java.util.List)>($r6, r1)
Unit: $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(1)
Unit: r1 = $r2
Unit: $r3 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(0)
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r7)
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
	method testIntersectListWithNoOverlapAndDifferentTypes : 
Unit: $r5 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>()
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: $r2[0] = $r3
Unit: $r2[1] = $r4
Unit: $r6 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List intersection(java.util.List,java.util.List)>($r5, r1)
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(23)
Unit: return
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)
Unit: $r2 = newarray (java.lang.Integer)[2]
	method testIntersectListWithSelf : 
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: $r1 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: $r4 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List intersection(java.util.List,java.util.List)>($r2, $r1)
Unit: $r3 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: return
Unit: $r2 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
	method testIntersectionOrderInsensitivity : 
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: return
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("b")
Unit: $r6 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List intersection(java.util.List,java.util.List)>(r2, r1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: $r3 = new java.util.ArrayList
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("b")
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: $r5 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List intersection(java.util.List,java.util.List)>(r1, r2)
Unit: r1 = $r3
Unit: $r4 = new java.util.ArrayList
Unit: r2 = $r4
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("b")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6)
	method testPredicatedList : 
Unit: r11 = $r8
Unit: $r9 := @caughtexception
Unit: $r8 := @caughtexception
Unit: $z0 = r2 instanceof org.apache.commons.collections4.list.PredicatedList
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("returned object should be a PredicatedList", $z0)
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List predicatedList(java.util.List,org.apache.commons.collections4.Predicate)>($r5, null)
Unit: specialinvoke $r3.<org.apache.commons.collections4.ListUtilsTest$1: void <init>(org.apache.commons.collections4.ListUtilsTest)>(r0)
Unit: $r3 = new org.apache.commons.collections4.ListUtilsTest$1
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IllegalArgumentException for null list.")
Unit: r1 = $r3
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: $r5 = new java.util.ArrayList
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List predicatedList(java.util.List,org.apache.commons.collections4.Predicate)>(null, r1)
Unit: r10 = $r9
Unit: goto [?= return]
Unit: r2 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List predicatedList(java.util.List,org.apache.commons.collections4.Predicate)>($r4, r1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IllegalArgumentException for null predicate.")
Unit: $r4 = new java.util.ArrayList
Unit: goto [?= staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List predicatedList(java.util.List,org.apache.commons.collections4.Predicate)>(null, r1)]
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
	method testLazyList : 
Unit: $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(5)
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l3)
Unit: r1 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List lazyList(java.util.List,org.apache.commons.collections4.Factory)>($r2, $r3)
Unit: $r2 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r4)
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: $r3 = new org.apache.commons.collections4.ListUtilsTest$2
Unit: $l1 = (long) $i0
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: specialinvoke $r3.<org.apache.commons.collections4.ListUtilsTest$2: void <init>(org.apache.commons.collections4.ListUtilsTest)>(r0)
Unit: $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(5)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l1)
Unit: $i2 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $l3 = (long) $i2
Unit: return
	method testEmptyIfNull : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>()
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: return
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: $r2 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List emptyIfNull(java.util.List)>(null)
Unit: $r3 = new java.util.ArrayList
Unit: r1 = $r3
Unit: $r4 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List emptyIfNull(java.util.List)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r4)
	method testDefaultIfNull : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
Unit: $r6 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List defaultIfNull(java.util.List,java.util.List)>(r1, $r5)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r6)
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: $r3 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List defaultIfNull(java.util.List,java.util.List)>(null, $r2)
Unit: $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
Unit: $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>()
Unit: $r4 = new java.util.ArrayList
Unit: r1 = $r4
	method testEquals : 
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: r3 = $r6
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
Unit: $r4[0] = "a"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $z2 = staticinvoke <org.apache.commons.collections4.ListUtils: boolean isEqualList(java.util.Collection,java.util.Collection)>(r2, r3)
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z3 = staticinvoke <org.apache.commons.collections4.ListUtils: boolean isEqualList(java.util.Collection,java.util.Collection)>(r2, null)
Unit: $r4 = newarray (java.lang.String)[3]
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18)
Unit: $z0 = interfaceinvoke r2.<java.util.List: boolean equals(java.lang.Object)>(r3)
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $z5 = staticinvoke <org.apache.commons.collections4.ListUtils: boolean isEqualList(java.util.Collection,java.util.Collection)>(null, null)
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: return
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $r6 = new java.util.ArrayList
Unit: interfaceinvoke r2.<java.util.List: void clear()>()
Unit: $r4[1] = "b"
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
Unit: $z1 = staticinvoke <org.apache.commons.collections4.ListUtils: boolean isEqualList(java.util.Collection,java.util.Collection)>(r2, r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: $r4[2] = "c"
Unit: r2 = $r5
Unit: $r5 = new java.util.ArrayList
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $z4 = staticinvoke <org.apache.commons.collections4.ListUtils: boolean isEqualList(java.util.Collection,java.util.Collection)>(null, r3)
	method testHashCode : 
Unit: return
Unit: if $i0 != $i1 goto $z0 = 0
Unit: r2 = $r5
Unit: $z2 = 1
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: if $i4 != $i5 goto $z2 = 0
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: $z2 = 0
Unit: $i3 = staticinvoke <org.apache.commons.collections4.ListUtils: int hashCodeForList(java.util.Collection)>(r2)
Unit: $z3 = 0
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: $l11 = (long) $i10
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $z4 = 1
Unit: goto [?= $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)]
Unit: $z3 = 1
Unit: $i9 = staticinvoke <org.apache.commons.collections4.ListUtils: int hashCodeForList(java.util.Collection)>(r3)
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)
Unit: $r4[0] = "a"
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $i10 = staticinvoke <org.apache.commons.collections4.ListUtils: int hashCodeForList(java.util.Collection)>(null)
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z0 = 0
Unit: goto [?= $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)]
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: r3 = $r6
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: $i4 = interfaceinvoke r3.<java.util.List: int hashCode()>()
Unit: interfaceinvoke r2.<java.util.List: void clear()>()
Unit: $i8 = staticinvoke <org.apache.commons.collections4.ListUtils: int hashCodeForList(java.util.Collection)>(r2)
Unit: $r5 = new java.util.ArrayList
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
Unit: $i5 = staticinvoke <org.apache.commons.collections4.ListUtils: int hashCodeForList(java.util.Collection)>(r3)
Unit: $z1 = 0
Unit: $r4[1] = "b"
Unit: $z1 = 1
Unit: $z0 = 1
Unit: if $i6 != $i7 goto $z3 = 0
Unit: $r4 = newarray (java.lang.String)[3]
Unit: $i1 = interfaceinvoke r3.<java.util.List: int hashCode()>()
Unit: $r6 = new java.util.ArrayList
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: goto [?= $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)]
Unit: $i0 = interfaceinvoke r2.<java.util.List: int hashCode()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: goto [?= $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)]
Unit: goto [?= $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)]
Unit: $i2 = interfaceinvoke r2.<java.util.List: int hashCode()>()
Unit: if $i2 != $i3 goto $z1 = 0
Unit: $i7 = staticinvoke <org.apache.commons.collections4.ListUtils: int hashCodeForList(java.util.Collection)>(r3)
Unit: $z4 = 0
Unit: $r4[2] = "c"
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: $i6 = staticinvoke <org.apache.commons.collections4.ListUtils: int hashCodeForList(java.util.Collection)>(r2)
Unit: if $i8 != $i9 goto $z4 = 0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l11)
	method testRetainAll : 
Unit: $i0 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: $r4 = new java.util.ArrayList
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: goto [?= return]
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("x")
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r9 := @caughtexception
Unit: $z7 = 1
Unit: $r7 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: interfaceinvoke $r6.<java.util.List: boolean retainAll(java.util.Collection)>(r1)
Unit: $z6 = interfaceinvoke r2.<java.util.List: boolean equals(java.lang.Object)>($r7)
Unit: $r5 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: $r6 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: interfaceinvoke r1.<java.util.List: boolean remove(java.lang.Object)>("x")
Unit: if $i0 != 2 goto $z7 = 0
Unit: r2 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List retainAll(java.util.Collection,java.util.Collection)>($r5, r1)
Unit: $z4 = interfaceinvoke r2.<java.util.List: boolean equals(java.lang.Object)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: $z7 = 0
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List retainAll(java.util.Collection,java.util.Collection)>(null, null)
Unit: r1 = $r4
Unit: r3 = $r9
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("b")
	method testRemoveAll : 
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: interfaceinvoke $r6.<java.util.List: boolean removeAll(java.util.Collection)>(r1)
Unit: $z5 = 0
Unit: return
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $z5 = 1
Unit: r1 = $r4
Unit: $i0 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List removeAll(java.util.Collection,java.util.Collection)>(null, null)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("x")
Unit: r2 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List removeAll(java.util.Collection,java.util.Collection)>($r5, r1)
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $r5 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: $z4 = interfaceinvoke r2.<java.util.List: boolean equals(java.lang.Object)>($r7)
Unit: $r6 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: $r4 = new java.util.ArrayList
Unit: $r7 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: if $i0 != 3 goto $z5 = 0
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("b")
Unit: $r9 := @caughtexception
Unit: r3 = $r9
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)]
Unit: goto [?= return]
	method testSubtract : 
Unit: $r6 = new java.util.ArrayList
Unit: r5 = $r10
Unit: r4 = $r8
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r4, r3)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: specialinvoke $r8.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: $r7 = new java.util.ArrayList
Unit: specialinvoke $r7.<java.util.ArrayList: void <init>()>()
Unit: r3 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List subtract(java.util.List,java.util.List)>(r1, r2)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("x")
Unit: interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List subtract(java.util.List,java.util.List)>(r1, null)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: r1 = $r6
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("b")
Unit: return
Unit: $z8 = 1
Unit: $r8 = new java.util.ArrayList
Unit: r2 = $r7
Unit: $i0 = interfaceinvoke r3.<java.util.List: int size()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)]
Unit: $r10 := @caughtexception
Unit: goto [?= return]
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: if $i0 != 3 goto $z8 = 0
Unit: $z8 = 0
Unit: interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("x")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("b")
	method testSubtractNullElement : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("x")
Unit: r2 = $r6
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: $i0 = interfaceinvoke r3.<java.util.List: int size()>()
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: $z8 = 1
Unit: if $i0 != 3 goto $z8 = 0
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: r3 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List subtract(java.util.List,java.util.List)>(r1, r2)
Unit: interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("x")
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)]
Unit: interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: $r7 = new java.util.ArrayList
Unit: $r6 = new java.util.ArrayList
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: r1 = $r5
Unit: $r5 = new java.util.ArrayList
Unit: $z8 = 0
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r4, r3)
Unit: r4 = $r7
Unit: return
Unit: specialinvoke $r7.<java.util.ArrayList: void <init>()>()
	method testIndexOf : 
Unit: $i1 = staticinvoke <org.apache.commons.collections4.ListUtils: int indexOf(java.util.List,org.apache.commons.collections4.Predicate)>(null, r7)
Unit: r6 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("d")
Unit: $r1 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i5)
Unit: $r4 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l4, -1L)
Unit: $l2 = (long) $i1
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("d", $r3)
Unit: r7 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("de")
Unit: i5 = staticinvoke <org.apache.commons.collections4.ListUtils: int indexOf(java.util.List,org.apache.commons.collections4.Predicate)>($r1, r6)
Unit: $l0 = (long) i6
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: i6 = staticinvoke <org.apache.commons.collections4.ListUtils: int indexOf(java.util.List,org.apache.commons.collections4.Predicate)>($r4, r7)
Unit: $r5 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: $i3 = staticinvoke <org.apache.commons.collections4.ListUtils: int indexOf(java.util.List,org.apache.commons.collections4.Predicate)>($r5, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, -1L)
Unit: $l4 = (long) $i3
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, -1L)
Unit: $r2 = r0.<org.apache.commons.collections4.ListUtilsTest: java.util.List fullList>
Unit: return
	method testLongestCommonSubsequence : 
Unit: r64 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r43)
Unit: $r25 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r38 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r31[4] = $r36
Unit: $r5 = (java.util.List) null
Unit: $r50 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(79)
Unit: $r17[5] = $r23
Unit: $r37 = newarray (java.lang.Character)[5]
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r17)
Unit: $r41 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(78)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $l1 = (long) $i0
Unit: $r52 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(82)
Unit: $r22 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(78)
Unit: $r31[3] = $r35
Unit: $r19 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r21 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7)
Unit: $r45 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r17[3] = $r21
Unit: $r20 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(78)
Unit: goto [?= $r16 = <java.util.Collections: java.util.List EMPTY_LIST>]
Unit: $r37[0] = $r38
Unit: $r7[0] = $r8
Unit: $r31[1] = $r33
Unit: $r51 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(82)
Unit: $r17[0] = $r18
Unit: $r40 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r24[0] = $r25
Unit: $r34 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r48[2] = $r51
Unit: r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r48)
Unit: $r37[4] = $r42
Unit: $r24 = newarray (java.lang.Character)[6]
Unit: $r33 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(78)
Unit: $r27 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List longestCommonSubsequence(java.util.List,java.util.List)>($r9, null)
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List longestCommonSubsequence(java.util.List,java.util.List)>($r5, null)
Unit: $r32 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r36 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r24[4] = $r29
Unit: $r11 = newarray (java.lang.Character)[1]
Unit: $r42 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r12 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r49 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(90)
Unit: $r39 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(84)
Unit: $r16 = <java.util.Collections: java.util.List EMPTY_LIST>
Unit: goto [?= $r7 = newarray (java.lang.Character)[1]]
Unit: $r43[1] = $r45
Unit: r60 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List longestCommonSubsequence(java.util.List,java.util.List)>($r16, $r15)
Unit: $r7 = newarray (java.lang.Character)[1]
Unit: $r53 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(79)
Unit: goto [?= $r11 = newarray (java.lang.Character)[1]]
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11)
Unit: $r56 := @caughtexception
Unit: r65 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List longestCommonSubsequence(java.util.List,java.util.List)>(r1, r4)
Unit: return
Unit: $r31[0] = $r32
Unit: $r26 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(78)
Unit: $r24[1] = $r26
Unit: $r54 := @caughtexception
Unit: $r43[3] = $r47
Unit: $r48[0] = $r49
Unit: $r17[4] = $r22
Unit: $r37[3] = $r41
Unit: r59 = $r56
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("failed to check for null argument")
Unit: $r31 = newarray (java.lang.Character)[5]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r62, r61)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("failed to check for null argument")
Unit: $r17 = newarray (java.lang.Character)[6]
Unit: $r17[2] = $r20
Unit: $r48 = newarray (java.lang.Character)[5]
Unit: $r11[0] = $r12
Unit: $r48[1] = $r50
Unit: $r37[2] = $r40
Unit: $r44 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: r58 = $r54
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List longestCommonSubsequence(java.util.List,java.util.List)>(null, $r13)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("failed to check for null argument")
Unit: r63 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List longestCommonSubsequence(java.util.List,java.util.List)>(r1, r3)
Unit: r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r24)
Unit: $r37[1] = $r39
Unit: r57 = $r55
Unit: $r24[5] = $r30
Unit: $r24[2] = $r27
Unit: r61 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List longestCommonSubsequence(java.util.List,java.util.List)>(r1, r2)
Unit: $i0 = interfaceinvoke r60.<java.util.List: int size()>()
Unit: $r46 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(78)
Unit: $r55 := @caughtexception
Unit: $r18 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(66)
Unit: r62 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r31)
Unit: $r48[4] = $r53
Unit: $r48[3] = $r52
Unit: $r30 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(83)
Unit: $z0 = interfaceinvoke r65.<java.util.List: boolean isEmpty()>()
Unit: $r15 = <java.util.Collections: java.util.List EMPTY_LIST>
Unit: $r47 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r17[1] = $r19
Unit: $r28 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(78)
Unit: $r43[0] = $r44
Unit: $r43 = newarray (java.lang.Character)[4]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r64, r63)
Unit: $r29 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r35 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(78)
Unit: $r23 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65)
Unit: $r31[2] = $r34
Unit: $r24[3] = $r28
Unit: r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r37)
Unit: $r43[2] = $r46
	method testLongestCommonSubsequenceWithString : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("ANANA", r16)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: r1 = "BANANA"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("AANA", r17)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("failed to check for null argument")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: r4 = "ZORRO"
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: r14 = $r9
Unit: goto [?= staticinvoke <org.apache.commons.collections4.ListUtils: java.lang.String longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)>(null, "A")]
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.lang.String longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)>("A", null)
Unit: r3 = "ATANA"
Unit: r2 = "ANANAS"
Unit: r17 = staticinvoke <org.apache.commons.collections4.ListUtils: java.lang.String longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)>("BANANA", "ATANA")
Unit: r12 = $r11
Unit: $r9 := @caughtexception
Unit: $l1 = (long) $i0
Unit: return
Unit: goto [?= staticinvoke <org.apache.commons.collections4.ListUtils: java.lang.String longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)>("A", null)]
Unit: $i2 = virtualinvoke r18.<java.lang.String: int length()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("failed to check for null argument")
Unit: r16 = staticinvoke <org.apache.commons.collections4.ListUtils: java.lang.String longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)>("BANANA", "ANANAS")
Unit: goto [?= r15 = staticinvoke <org.apache.commons.collections4.ListUtils: java.lang.String longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)>("", "")]
Unit: $r11 := @caughtexception
Unit: r15 = staticinvoke <org.apache.commons.collections4.ListUtils: java.lang.String longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)>("", "")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("failed to check for null argument")
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.lang.String longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)>(null, "A")
Unit: $i0 = virtualinvoke r15.<java.lang.String: int length()>()
Unit: r18 = staticinvoke <org.apache.commons.collections4.ListUtils: java.lang.String longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)>("BANANA", "ZORRO")
Unit: $r5 = (java.lang.String) null
Unit: $r10 := @caughtexception
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.lang.String longestCommonSubsequence(java.lang.CharSequence,java.lang.CharSequence)>($r5, null)
Unit: r13 = $r10
	method testPartition : 
Unit: r15 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List partition(java.util.List,int)>(r1, 3)
Unit: $r10 = interfaceinvoke r19.<java.util.List: java.lang.Object get(int)>(0)
Unit: goto [?= r19 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List partition(java.util.List,int)>(r1, 2147483647)]
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r11)
Unit: i10 = i10 + 1
Unit: r18 = $r13
Unit: r16 = $r14
Unit: $i0 = interfaceinvoke r15.<java.util.List: int size()>()
Unit: $r14 := @caughtexception
Unit: r1 = $r2
Unit: $l5 = (long) $i4
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10)
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List partition(java.util.List,int)>(null, 3)
Unit: r17 = $r12
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l1)
Unit: $r13 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5)
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List partition(java.util.List,int)>(r1, 0)
Unit: staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List partition(java.util.List,int)>(r1, -10)
Unit: $i8 = interfaceinvoke $r9.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r15)
Unit: goto [?= staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List partition(java.util.List,int)>(r1, -10)]
Unit: $r3 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(2)
Unit: if i10 > 6 goto r15 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List partition(java.util.List,int)>(r1, 3)
Unit: $l7 = (long) $i6
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("failed to check for null argument")
Unit: r19 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List partition(java.util.List,int)>(r1, 2147483647)
Unit: $i4 = interfaceinvoke r19.<java.util.List: int size()>()
Unit: $i6 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: goto [?= (branch)]
Unit: $r2 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("failed to check for size argument")
Unit: $r4 = (java.util.List) $r3
Unit: $r9 = (java.util.List) $r8
Unit: $r12 := @caughtexception
Unit: $l3 = (long) $i2
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l7, $l9)
Unit: $r8 = interfaceinvoke r19.<java.util.List: java.lang.Object get(int)>(0)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("failed to check for size argument")
Unit: $i2 = interfaceinvoke $r4.<java.util.List: int size()>()
Unit: goto [?= staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List partition(java.util.List,int)>(r1, 0)]
Unit: i10 = 0
Unit: $l9 = (long) $i8
	method testSelect : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection select(java.lang.Iterable,org.apache.commons.collections4.Predicate,java.util.Collection)>(r1, $r13, $r12)
Unit: $i2 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
Unit: $r11 = <org.apache.commons.collections4.ListUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $l3 = (long) $i2
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: specialinvoke $r12.<java.util.HashSet: void <init>()>()
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r4)
Unit: r2 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List select(java.util.Collection,org.apache.commons.collections4.Predicate)>(r1, $r10)
Unit: $r16 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
Unit: r1 = $r5
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r13 = <org.apache.commons.collections4.ListUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: $r10 = <org.apache.commons.collections4.ListUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: r3 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List select(java.util.Collection,org.apache.commons.collections4.Predicate)>(r1, $r11)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l1)
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: r4 = (java.util.HashSet) $r14
Unit: $r12 = new java.util.HashSet
Unit: $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>()
Unit: return
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)
Unit: $l1 = (long) $i0
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: $r5 = new java.util.ArrayList
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
	method testSelectRejected : 
Unit: $r13 = <org.apache.commons.collections4.ListUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: $r5 = new java.util.ArrayList
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $z5 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r4)
Unit: $r11 = <org.apache.commons.collections4.ListUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r3)
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: r0 := @this: org.apache.commons.collections4.ListUtilsTest
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
Unit: $r12 = new java.util.HashSet
Unit: $z7 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>($r16)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: r4 = (java.util.HashSet) $r14
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
Unit: r1 = $r5
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: $z8 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>($r17)
Unit: specialinvoke $r12.<java.util.HashSet: void <init>()>()
Unit: $i2 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
Unit: r3 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List selectRejected(java.util.Collection,org.apache.commons.collections4.Predicate)>(r1, $r11)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
Unit: r2 = staticinvoke <org.apache.commons.collections4.ListUtils: java.util.List selectRejected(java.util.Collection,org.apache.commons.collections4.Predicate)>(r1, $r10)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate,java.util.Collection)>(r1, $r13, $r12)
Unit: $l3 = (long) $i2
Unit: $z6 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>($r15)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)
Unit: $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: $r10 = <org.apache.commons.collections4.ListUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l1)
Unit: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: return
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ComparatorPredicate$Criterion
	method values : 
	method valueOf : 
	method <init> : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.TransformedQueueTest
	method <init> : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method testTransformedQueue : 
	method testTransformedQueue_decorateTransform : 
	method getCompatibilityVersion : 
	method makeConfirmedFullCollection : 
	method makeConfirmedCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.CaseInsensitiveMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method getCompatibilityVersion : 
	method testCaseInsensitive : 
	method testNullHandling : 
	method testPutAll : 
	method testClone : 
	method testLocaleIndependence : 
	method testInitialCapacityZero : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ReferenceMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method writeObject : 
	method readObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.TruePredicate
	method truePredicate : 
	method <init> : 
	method evaluate : 
	method readResolve : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values$ValueIterator
	method <init> : 
	method next : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.AbstractSortedBagTest
	method <init> : 
	method verify : 
	method isNullSupported : 
	method makeObject : 
	method makeFullCollection : 
	method makeConfirmedCollection : 
	method resetEmpty : 
	method resetFull : 
	method getFullNonNullElements : 
	method getOtherNonNullElements : 
	method getCollection : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeConfirmedCollection : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.PredicatedMapTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.TransformedCollectionTest$1
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.AbstractListIteratorDecorator
	method <init> : 
	method getListIterator : 
	method hasNext : 
	method next : 
	method nextIndex : 
	method hasPrevious : 
	method previous : 
	method previousIndex : 
	method remove : 
	method set : 
	method add : 
 ====================================== 
** CLASS org.apache.commons.collections4.ComparatorUtilsTest
	method <init> : 
	method booleanComparator : 
Unit: $i1 = interfaceinvoke r13.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r3)
Unit: $z0 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)]
Unit: if $i4 != 0 goto $z4 = 0
Unit: $i2 = interfaceinvoke r13.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r6, $r5)
Unit: $r11 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: $z4 = 0
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: if $i0 >= 0 goto $z0 = 0
Unit: $z3 = 1
Unit: $i5 = interfaceinvoke r14.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r12, $r11)
Unit: if $i1 != 0 goto $z1 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
Unit: $z2 = 1
Unit: $i0 = interfaceinvoke r13.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $z3 = 0
Unit: $z4 = 1
Unit: r14 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator booleanComparator(boolean)>(0)
Unit: $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>
Unit: $z5 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)]
Unit: $r9 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: $r6 = <java.lang.Boolean: java.lang.Boolean FALSE>
Unit: $r7 = <java.lang.Boolean: java.lang.Boolean FALSE>
Unit: $z0 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: $i4 = interfaceinvoke r14.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r10, $r9)
Unit: $z1 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]
Unit: $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: if $i2 <= 0 goto $z2 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: $z2 = 0
Unit: if $i3 <= 0 goto $z3 = 0
Unit: $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)]
Unit: $i3 = interfaceinvoke r14.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r8, $r7)
Unit: $z1 = 0
Unit: if $i5 >= 0 goto $z5 = 0
Unit: r13 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator booleanComparator(boolean)>(1)
Unit: $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: $r8 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: $z5 = 0
Unit: $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: $r12 = <java.lang.Boolean: java.lang.Boolean FALSE>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
	method chainedComparator : 
Unit: $i2 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r2[0] = $r3
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $z2 = 1
Unit: $r3 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator naturalComparator()>()
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $z1 = 1
Unit: $i0 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: $z0 = 1
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $z1 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
Unit: $i1 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: $r2 = newarray (java.util.Comparator)[2]
Unit: r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest
Unit: $z2 = 0
Unit: if $i1 != 0 goto $z1 = 0
Unit: $r4 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator naturalComparator()>()
Unit: r1 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator chainedComparator(java.util.Comparator[])>($r2)
Unit: if $i0 >= 0 goto $z0 = 0
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $z0 = 0
Unit: $r2[1] = $r4
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: if $i2 <= 0 goto $z2 = 0
Unit: return
	method max : 
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator naturalComparator()>()
Unit: r25 = $r24
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: r1 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator reversedComparator(java.util.Comparator)>($r2)
Unit: $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r23 := @caughtexception
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r14)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r10)
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r18)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r6)
Unit: $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator)>($r4, $r5, null)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator)>(null, $r21, null)
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r10 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator)>($r8, $r9, null)
Unit: r26 = $r23
Unit: $r18 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator)>($r16, $r17, r1)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10)
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator)>($r12, $r13, r1)
Unit: return
Unit: goto [?= $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)]
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10)
Unit: staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator)>($r19, null, null)
Unit: $r24 := @caughtexception
Unit: r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10)
	method min : 
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r18)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r6)
Unit: $r23 := @caughtexception
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator)>($r4, $r5, null)
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10)
Unit: staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator)>($r19, null, null)
Unit: $r24 := @caughtexception
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r14)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator naturalComparator()>()
Unit: r25 = $r23
Unit: goto [?= $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)]
Unit: $r18 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator)>($r16, $r17, r1)
Unit: $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator)>($r12, $r13, r1)
Unit: $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: r1 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator reversedComparator(java.util.Comparator)>($r2)
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r10)
Unit: r26 = $r24
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-10)
Unit: $r10 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator)>($r8, $r9, null)
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: return
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator)>(null, $r21, null)
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
	method nullLowComparator : 
Unit: $i1 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(null, null)
Unit: $z2 = 0
Unit: if $i0 >= 0 goto $z0 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: if $i2 <= 0 goto $z2 = 0
Unit: r1 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator nullLowComparator(java.util.Comparator)>(null)
Unit: $z0 = 0
Unit: return
Unit: $z1 = 0
Unit: $z2 = 1
Unit: $i0 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(null, $r2)
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $z0 = 1
Unit: if $i1 != 0 goto $z1 = 0
Unit: $z1 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: $i2 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, null)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
	method nullHighComparator : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: r0 := @this: org.apache.commons.collections4.ComparatorUtilsTest
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]
Unit: $z2 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: if $i0 <= 0 goto $z0 = 0
Unit: if $i1 != 0 goto $z1 = 0
Unit: return
Unit: $i0 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(null, $r2)
Unit: $z0 = 0
Unit: $i1 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(null, null)
Unit: $z0 = 1
Unit: $z1 = 0
Unit: r1 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator nullHighComparator(java.util.Comparator)>(null)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
Unit: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: if $i2 >= 0 goto $z2 = 0
Unit: $z1 = 1
Unit: $z2 = 0
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $i2 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, null)
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.AbstractIteratorDecorator
	method <init> : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.AndPredicate
	method andPredicate : 
	method <init> : 
	method evaluate : 
	method getPredicates : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.TransformedList$TransformedListIterator
	method <init> : 
	method add : 
	method set : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.StaticBucketMap$Lock
	method <init> : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.PredicatedSortedMapTest
	method <init> : 
	method decorateMap : 
	method makeObject : 
	method makeTestMap : 
	method isSubMapViewsSerializable : 
	method isAllowNullKey : 
	method testEntrySet : 
	method testPut : 
	method testSortOrder : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator
	method <init> : 
	method hasNext : 
	method next : 
	method hasPrevious : 
	method previous : 
	method remove : 
	method getKey : 
	method getValue : 
	method setValue : 
	method reset : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator
	method <init> : 
	method next : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractHashedMap$HashEntry
	method <init> : 
	method getKey : 
	method getValue : 
	method setValue : 
	method equals : 
	method hashCode : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.MultiSet
	method getCount : 
	method setCount : 
	method add : 
	method add : 
	method remove : 
	method remove : 
	method uniqueSet : 
	method entrySet : 
	method iterator : 
	method size : 
	method containsAll : 
	method removeAll : 
	method retainAll : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method getMap : 
	method getConfirmedMap : 
	method supportsRemove : 
	method supportsSetValue : 
	method testMapIterator : 
	method testDecorateFactory : 
	method getMap : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestInverseBidiMap
	method <init> : 
	method makeObject : 
	method makeFullMap : 
	method getSampleKeys : 
	method getSampleValues : 
	method getCompatibilityVersion : 
	method isAllowNullKey : 
	method isAllowNullValue : 
	method isPutAddSupported : 
	method isPutChangeSupported : 
	method isSetValueSupported : 
	method isRemoveSupported : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.InstanceofPredicate
	method instanceOfPredicate : 
	method <init> : 
	method evaluate : 
	method getType : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.CursorableLinkedList$Cursor
	method <init> : 
	method remove : 
	method add : 
	method nextIndex : 
	method nodeChanged : 
	method nodeRemoved : 
	method nodeInserted : 
	method checkModCount : 
	method close : 
	method set : 
	method previousIndex : 
	method previous : 
	method hasPrevious : 
	method next : 
	method hasNext : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractMapDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method clear : 
	method containsKey : 
	method containsValue : 
	method entrySet : 
	method get : 
	method isEmpty : 
	method keySet : 
	method put : 
	method putAll : 
	method remove : 
	method size : 
	method values : 
	method equals : 
	method hashCode : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.HashSetValuedHashMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method createCollection : 
	method writeObject : 
	method readObject : 
	method createCollection : 
	method createCollection : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractBidiMapTest$TestBidiMapEntrySet
	method <init> : 
	method testMapEntrySetIteratorEntrySetValueCrossCheck : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LazyMapTest
	method <init> : 
	method makeObject : 
	method testMapGet : 
	method mapGetWithFactory : 
	method mapGetWithTransformer : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$UnmodifiableIterable
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$2
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$3
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$4
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.DualHashBidiMapTest
	method suite : 
	method <init> : 
	method makeObject : 
	method ignoredTests : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$5
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.OrderedMap
	method mapIterator : 
	method firstKey : 
	method lastKey : 
	method nextKey : 
	method previousKey : 
	method mapIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.OrPredicate
	method orPredicate : 
	method <init> : 
	method evaluate : 
	method getPredicates : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ArrayListIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeArrayListIterator : 
	method supportsRemove : 
	method testListIterator : 
	method testListIteratorSet : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.UnmodifiableEntrySet
	method unmodifiableEntrySet : 
	method <init> : 
	method add : 
	method addAll : 
	method clear : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method iterator : 
	method toArray : 
	method toArray : 
	method add : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$1
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ReferenceIdentityMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeConfirmedMap : 
	method isAllowNullKey : 
	method isAllowNullValue : 
	method getCompatibilityVersion : 
	method testBasics : 
	method testHashEntry : 
	method testNullHandling : 
	method buildRefMap : 
	method testPurgeValues : 
	method gc : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.LoopingListIterator
	method <init> : 
	method hasNext : 
	method next : 
	method nextIndex : 
	method hasPrevious : 
	method previous : 
	method previousIndex : 
	method remove : 
	method add : 
	method set : 
	method reset : 
	method _reset : 
	method size : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.UnmodifiableSortedBagTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullCollection : 
	method getCollection : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isNullSupported : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method getCompatibilityVersion : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator
	method unmodifiableOrderedMapIterator : 
	method <init> : 
	method hasNext : 
	method next : 
	method hasPrevious : 
	method previous : 
	method getKey : 
	method getValue : 
	method setValue : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.AbstractBagTest
	method <init> : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method resetEmpty : 
	method resetFull : 
	method getCollection : 
	method testBagAdd : 
	method testBagEqualsSelf : 
	method testBagRemove : 
	method testBagRemoveAll : 
	method testBagContains : 
	method testBagContainsAll : 
	method testBagSize : 
	method testBagRetainAll : 
	method testBagIterator : 
	method testBagIteratorFail : 
	method testBagIteratorFailNoMore : 
	method testBagIteratorFailDoubleRemove : 
	method testBagIteratorRemoveProtectsInvariants : 
	method testBagToArray : 
	method testBagToArrayPopulate : 
	method testBagEquals : 
	method testBagEqualsHashBag : 
	method testBagHashCode : 
	method bulkTestBagUniqueSet : 
	method testEmptyBagCompatibility : 
	method testFullBagCompatibility : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.EmptyMapIterator
	method emptyMapIterator : 
	method <init> : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.junit.SetDefaultLocaleTestRule
	method <init> : 
	method apply : 
	method getLocale : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator
	method add : 
	method addAll : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMapTest
	method suite : 
	method <init> : 
	method makeObject : 
	method makeConfirmedMap : 
	method ignoredTests : 
	method isAllowNullKey : 
	method isAllowNullValue : 
	method isSetValueSupported : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeConfirmedMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.AbstractMapBag
	method <init> : 
	method <init> : 
	method getMap : 
	method size : 
	method isEmpty : 
	method getCount : 
	method contains : 
	method containsAll : 
	method containsAll : 
	method iterator : 
	method add : 
	method add : 
	method addAll : 
	method clear : 
	method remove : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method retainAll : 
	method toArray : 
	method toArray : 
	method uniqueSet : 
	method doWriteObject : 
	method doReadObject : 
	method equals : 
	method hashCode : 
	method toString : 
	method access$000 : 
	method access$100 : 
	method access$210 : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ArrayIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method supportsRemove : 
	method testIterator : 
	method testNullArray : 
	method testReset : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.HashBag
	method <init> : 
	method <init> : 
	method writeObject : 
	method readObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.TrieUtilsTest
	method <init> : 
	method testUnmodifiableTrie : 
Unit: r2 = $r6
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null trie.")
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be an UnmodifiableTrie.", $z0)
Unit: $z0 = r1 instanceof org.apache.commons.collections4.trie.UnmodifiableTrie
Unit: staticinvoke <org.apache.commons.collections4.TrieUtils: org.apache.commons.collections4.Trie unmodifiableTrie(org.apache.commons.collections4.Trie)>(null)
Unit: $r6 := @caughtexception
Unit: return
Unit: $r5 = staticinvoke <org.apache.commons.collections4.TrieUtils: org.apache.commons.collections4.Trie unmodifiableTrie(org.apache.commons.collections4.Trie)>(r1)
Unit: r0 := @this: org.apache.commons.collections4.TrieUtilsTest
Unit: goto [?= $r5 = staticinvoke <org.apache.commons.collections4.TrieUtils: org.apache.commons.collections4.Trie unmodifiableTrie(org.apache.commons.collections4.Trie)>(r1)]
Unit: specialinvoke $r3.<org.apache.commons.collections4.trie.PatriciaTrie: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("UnmodifiableTrie shall not be decorated", r1, $r5)
Unit: $r3 = new org.apache.commons.collections4.trie.PatriciaTrie
Unit: r1 = staticinvoke <org.apache.commons.collections4.TrieUtils: org.apache.commons.collections4.Trie unmodifiableTrie(org.apache.commons.collections4.Trie)>($r3)
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement
	method values : 
	method valueOf : 
	method <init> : 
	method toString : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference
	method <init> : 
	method set : 
	method get : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest
	method <init> : 
	method setUp : 
	method testReadableMap : 
Unit: $r6 = new org.apache.commons.collections4.SplitMapUtilsTest$3
Unit: $l4 = (long) $i3
Unit: $l15 = (long) $i14
Unit: $i8 = virtualinvoke $r19.<java.lang.Integer: int intValue()>()
Unit: i18 = 0
Unit: $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i18)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l13, $l15)
Unit: specialinvoke r0.<org.apache.commons.collections4.SplitMapUtilsTest: void attemptPutOperation(java.lang.Runnable)>($r5)
Unit: r29 = (java.lang.String) $r20
Unit: $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i16)
Unit: goto [?= (branch)]
Unit: return
Unit: $l7 = (long) i18
Unit: i17 = i17 + -1
Unit: $r15 = r0.<org.apache.commons.collections4.SplitMapUtilsTest: org.apache.commons.collections4.splitmap.TransformedSplitMap transformedMap>
Unit: i16 = 0
Unit: $r5 = new org.apache.commons.collections4.SplitMapUtilsTest$2
Unit: $l0 = (long) i17
Unit: r28 = interfaceinvoke r1.<org.apache.commons.collections4.IterableMap: org.apache.commons.collections4.MapIterator mapIterator()>()
Unit: $i1 = interfaceinvoke r1.<org.apache.commons.collections4.IterableMap: int size()>()
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100)
Unit: $l9 = (long) $i8
Unit: $z0 = interfaceinvoke r28.<org.apache.commons.collections4.MapIterator: boolean hasNext()>()
Unit: $r23 = interfaceinvoke r28.<org.apache.commons.collections4.MapIterator: java.lang.Object getValue()>()
Unit: $r4 = r0.<org.apache.commons.collections4.SplitMapUtilsTest: org.apache.commons.collections4.splitmap.TransformedSplitMap transformedMap>
Unit: $i5 = virtualinvoke r1.<java.lang.Object: int hashCode()>()
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(300)
Unit: specialinvoke r0.<org.apache.commons.collections4.SplitMapUtilsTest: void attemptPutOperation(java.lang.Runnable)>($r6)
Unit: $r7 = new java.util.HashMap
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r3, r1)
Unit: $i3 = virtualinvoke r3.<java.lang.Object: int hashCode()>()
Unit: specialinvoke $r6.<org.apache.commons.collections4.SplitMapUtilsTest$3: void <init>(org.apache.commons.collections4.SplitMapUtilsTest,org.apache.commons.collections4.IterableMap)>(r0, r1)
Unit: $i11 = interfaceinvoke r1.<org.apache.commons.collections4.IterableMap: int size()>()
Unit: $r26 = interfaceinvoke r1.<org.apache.commons.collections4.IterableMap: java.lang.Object get(java.lang.Object)>($r25)
Unit: $z3 = interfaceinvoke r1.<org.apache.commons.collections4.IterableMap: boolean containsValue(java.lang.Object)>($r24)
Unit: $l13 = (long) i16
Unit: r0 := @this: org.apache.commons.collections4.SplitMapUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r16)
Unit: if $z0 == 0 goto $z1 = r1 instanceof org.apache.commons.collections4.Unmodifiable
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r29, $r21)
Unit: $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r29)
Unit: $z1 = r1 instanceof org.apache.commons.collections4.Unmodifiable
Unit: $r20 = interfaceinvoke r28.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>()
Unit: $l12 = (long) $i11
Unit: specialinvoke $r7.<java.util.HashMap: void <init>()>()
Unit: if i18 >= 10 goto $z2 = interfaceinvoke r1.<org.apache.commons.collections4.IterableMap: boolean isEmpty()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l10, $l12)
Unit: if i16 >= 10 goto r28 = interfaceinvoke r1.<org.apache.commons.collections4.IterableMap: org.apache.commons.collections4.MapIterator mapIterator()>()
Unit: specialinvoke $r5.<org.apache.commons.collections4.SplitMapUtilsTest$2: void <init>(org.apache.commons.collections4.SplitMapUtilsTest,org.apache.commons.collections4.IterableMap)>(r0, r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l4, $l6)
Unit: $l10 = (long) i17
Unit: $r16 = staticinvoke <org.apache.commons.collections4.SplitMapUtils: org.apache.commons.collections4.IterableMap readableMap(org.apache.commons.collections4.Get)>(r1)
Unit: $i14 = virtualinvoke $r27.<java.lang.Integer: int intValue()>()
Unit: virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("bar", $r10)
Unit: i16 = i16 + 1
Unit: i18 = i18 + 1
Unit: r1 = staticinvoke <org.apache.commons.collections4.SplitMapUtils: org.apache.commons.collections4.IterableMap readableMap(org.apache.commons.collections4.Get)>($r4)
Unit: r3 = staticinvoke <org.apache.commons.collections4.SplitMapUtils: org.apache.commons.collections4.IterableMap readableMap(org.apache.commons.collections4.Get)>($r15)
Unit: $z2 = interfaceinvoke r1.<org.apache.commons.collections4.IterableMap: boolean isEmpty()>()
Unit: $r19 = (java.lang.Integer) $r18
Unit: $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i16)
Unit: goto [?= $z0 = interfaceinvoke r28.<org.apache.commons.collections4.MapIterator: boolean hasNext()>()]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, $l2)
Unit: specialinvoke r0.<org.apache.commons.collections4.SplitMapUtilsTest: void attemptPutOperation(java.lang.Runnable)>($r14)
Unit: $r27 = (java.lang.Integer) $r26
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $r18 = interfaceinvoke r1.<org.apache.commons.collections4.IterableMap: java.lang.Object remove(java.lang.Object)>($r17)
Unit: virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("foo", $r8)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l7, $l9)
Unit: $r14 = new org.apache.commons.collections4.SplitMapUtilsTest$4
Unit: i17 = interfaceinvoke r1.<org.apache.commons.collections4.IterableMap: int size()>()
Unit: virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("baz", $r12)
Unit: $l2 = (long) $i1
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
Unit: goto [?= (branch)]
Unit: $r21 = interfaceinvoke r28.<org.apache.commons.collections4.MapIterator: java.lang.Object getKey()>()
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(200)
Unit: $l6 = (long) $i5
Unit: r2 = $r7
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23)
Unit: specialinvoke $r14.<org.apache.commons.collections4.SplitMapUtilsTest$4: void <init>(org.apache.commons.collections4.SplitMapUtilsTest,org.apache.commons.collections4.IterableMap,java.util.HashMap)>(r0, r1, r2)
	method testAlreadyReadableMap : 
Unit: $r3 = staticinvoke <org.apache.commons.collections4.SplitMapUtils: org.apache.commons.collections4.IterableMap readableMap(org.apache.commons.collections4.Get)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r3)
Unit: r0 := @this: org.apache.commons.collections4.SplitMapUtilsTest
Unit: return
Unit: $r2 = new org.apache.commons.collections4.map.HashedMap
Unit: specialinvoke $r2.<org.apache.commons.collections4.map.HashedMap: void <init>()>()
Unit: r1 = $r2
	method testWritableMap : 
Unit: $r10 = new org.apache.commons.collections4.SplitMapUtilsTest$10
Unit: $r18 = r0.<org.apache.commons.collections4.SplitMapUtilsTest: java.util.Map backingMap>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3)
Unit: $r13 = new org.apache.commons.collections4.SplitMapUtilsTest$13
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l9, $l11)
Unit: specialinvoke $r11.<org.apache.commons.collections4.SplitMapUtilsTest$11: void <init>(org.apache.commons.collections4.SplitMapUtilsTest,java.util.Map)>(r0, r1)
Unit: $i2 = interfaceinvoke r1.<java.util.Map: int hashCode()>()
Unit: $r5 = new org.apache.commons.collections4.SplitMapUtilsTest$5
Unit: specialinvoke r0.<org.apache.commons.collections4.SplitMapUtilsTest: void attemptGetOperation(java.lang.Runnable)>($r7)
Unit: specialinvoke r0.<org.apache.commons.collections4.SplitMapUtilsTest: void attemptGetOperation(java.lang.Runnable)>($r9)
Unit: i13 = i12 + 1
Unit: specialinvoke r0.<org.apache.commons.collections4.SplitMapUtilsTest: void attemptGetOperation(java.lang.Runnable)>($r6)
Unit: specialinvoke r0.<org.apache.commons.collections4.SplitMapUtilsTest: void attemptGetOperation(java.lang.Runnable)>($r10)
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("new", "66")
Unit: $r9 = new org.apache.commons.collections4.SplitMapUtilsTest$9
Unit: $r26 = staticinvoke <org.apache.commons.collections4.SplitMapUtils: java.util.Map writableMap(org.apache.commons.collections4.Put)>($r25)
Unit: specialinvoke r0.<org.apache.commons.collections4.SplitMapUtilsTest: void attemptGetOperation(java.lang.Runnable)>($r13)
Unit: specialinvoke r0.<org.apache.commons.collections4.SplitMapUtilsTest: void attemptGetOperation(java.lang.Runnable)>($r5)
Unit: specialinvoke r0.<org.apache.commons.collections4.SplitMapUtilsTest: void attemptGetOperation(java.lang.Runnable)>($r11)
Unit: $r16 = r0.<org.apache.commons.collections4.SplitMapUtilsTest: java.util.Map backingMap>
Unit: $l3 = (long) $i2
Unit: $r25 = (org.apache.commons.collections4.Put) r1
Unit: interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("baz", "99")
Unit: r3 = $r19
Unit: $i8 = i13 + $i7
Unit: r2 = staticinvoke <org.apache.commons.collections4.SplitMapUtils: java.util.Map writableMap(org.apache.commons.collections4.Put)>($r14)
Unit: $i10 = interfaceinvoke $r23.<java.util.Map: int size()>()
Unit: $r4 = r0.<org.apache.commons.collections4.SplitMapUtilsTest: org.apache.commons.collections4.splitmap.TransformedSplitMap transformedMap>
Unit: $r12 = new org.apache.commons.collections4.SplitMapUtilsTest$12
Unit: $i5 = interfaceinvoke $r18.<java.util.Map: int size()>()
Unit: interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bar", "88")
Unit: specialinvoke $r5.<org.apache.commons.collections4.SplitMapUtilsTest$5: void <init>(org.apache.commons.collections4.SplitMapUtilsTest,java.util.Map)>(r0, r1)
Unit: specialinvoke $r7.<org.apache.commons.collections4.SplitMapUtilsTest$7: void <init>(org.apache.commons.collections4.SplitMapUtilsTest,java.util.Map)>(r0, r1)
Unit: $r7 = new org.apache.commons.collections4.SplitMapUtilsTest$7
Unit: $l4 = (long) i13
Unit: $i7 = interfaceinvoke r3.<java.util.Map: int size()>()
Unit: return
Unit: specialinvoke $r13.<org.apache.commons.collections4.SplitMapUtilsTest$13: void <init>(org.apache.commons.collections4.SplitMapUtilsTest,java.util.Map)>(r0, r1)
Unit: interfaceinvoke r1.<java.util.Map: void clear()>()
Unit: specialinvoke r0.<org.apache.commons.collections4.SplitMapUtilsTest: void attemptGetOperation(java.lang.Runnable)>($r12)
Unit: specialinvoke $r8.<org.apache.commons.collections4.SplitMapUtilsTest$8: void <init>(org.apache.commons.collections4.SplitMapUtilsTest,java.util.Map)>(r0, r1)
Unit: $z0 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>("foo")
Unit: interfaceinvoke r1.<java.util.Map: void putAll(java.util.Map)>(r3)
Unit: specialinvoke $r12.<org.apache.commons.collections4.SplitMapUtilsTest$12: void <init>(org.apache.commons.collections4.SplitMapUtilsTest,java.util.Map)>(r0, r1)
Unit: $l11 = (long) $i10
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r2, r1)
Unit: interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("foo", "77")
Unit: i12 = interfaceinvoke $r15.<java.util.Map: int size()>()
Unit: $l9 = (long) $i8
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: specialinvoke $r9.<org.apache.commons.collections4.SplitMapUtilsTest$9: void <init>(org.apache.commons.collections4.SplitMapUtilsTest,java.util.Map)>(r0, r1)
Unit: $r24 = r0.<org.apache.commons.collections4.SplitMapUtilsTest: java.util.Map backingMap>
Unit: $r23 = r0.<org.apache.commons.collections4.SplitMapUtilsTest: java.util.Map backingMap>
Unit: r0 := @this: org.apache.commons.collections4.SplitMapUtilsTest
Unit: $r11 = new org.apache.commons.collections4.SplitMapUtilsTest$11
Unit: $r15 = r0.<org.apache.commons.collections4.SplitMapUtilsTest: java.util.Map backingMap>
Unit: specialinvoke $r6.<org.apache.commons.collections4.SplitMapUtilsTest$6: void <init>(org.apache.commons.collections4.SplitMapUtilsTest,java.util.Map)>(r0, r1)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r26)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: specialinvoke $r19.<java.util.HashMap: void <init>()>()
Unit: $z1 = interfaceinvoke $r24.<java.util.Map: boolean isEmpty()>()
Unit: $r19 = new java.util.HashMap
Unit: r1 = staticinvoke <org.apache.commons.collections4.SplitMapUtils: java.util.Map writableMap(org.apache.commons.collections4.Put)>($r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l4, $l6)
Unit: $l6 = (long) $i5
Unit: specialinvoke r0.<org.apache.commons.collections4.SplitMapUtilsTest: void attemptGetOperation(java.lang.Runnable)>($r8)
Unit: $r8 = new org.apache.commons.collections4.SplitMapUtilsTest$8
Unit: specialinvoke $r10.<org.apache.commons.collections4.SplitMapUtilsTest$10: void <init>(org.apache.commons.collections4.SplitMapUtilsTest,java.util.Map)>(r0, r1)
Unit: $r6 = new org.apache.commons.collections4.SplitMapUtilsTest$6
Unit: $r14 = r0.<org.apache.commons.collections4.SplitMapUtilsTest: org.apache.commons.collections4.splitmap.TransformedSplitMap transformedMap>
Unit: $i0 = interfaceinvoke r2.<java.util.Map: int hashCode()>()
	method testAlreadyWritableMap : 
Unit: r0 := @this: org.apache.commons.collections4.SplitMapUtilsTest
Unit: $r3 = staticinvoke <org.apache.commons.collections4.SplitMapUtils: java.util.Map writableMap(org.apache.commons.collections4.Put)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r3)
Unit: return
Unit: $r2 = new org.apache.commons.collections4.map.HashedMap
Unit: specialinvoke $r2.<org.apache.commons.collections4.map.HashedMap: void <init>()>()
Unit: r1 = $r2
	method attemptGetOperation : 
	method attemptPutOperation : 
	method attemptMapOperation : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.DefaultKeyValue
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method setKey : 
	method setValue : 
	method toMapEntry : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.FactoryUtilsTest$Mock3
	method <init> : 
	method getValue : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.FactoryUtilsTest$Mock2
	method <init> : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator
	method <init> : 
	method next : 
	method previous : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.FixedOrderComparator
	method <init> : 
	method <init> : 
	method <init> : 
	method isLocked : 
	method checkLocked : 
	method getUnknownObjectBehavior : 
	method setUnknownObjectBehavior : 
	method add : 
	method addAsEqual : 
	method compare : 
	method hashCode : 
	method equals : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.MultiKeyMap
	method multiKeyMap : 
	method <init> : 
	method <init> : 
	method get : 
	method containsKey : 
	method put : 
	method removeMultiKey : 
	method hash : 
	method isEqualKey : 
	method get : 
	method containsKey : 
	method put : 
	method removeMultiKey : 
	method hash : 
	method isEqualKey : 
	method get : 
	method containsKey : 
	method put : 
	method removeMultiKey : 
	method hash : 
	method isEqualKey : 
	method get : 
	method containsKey : 
	method put : 
	method removeMultiKey : 
	method hash : 
	method isEqualKey : 
	method removeAll : 
	method removeAll : 
	method removeAll : 
	method removeAll : 
	method checkKey : 
	method clone : 
	method put : 
	method putAll : 
	method mapIterator : 
	method decorated : 
	method writeObject : 
	method readObject : 
	method put : 
	method decorated : 
	method clone : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap
	method <init> : 
	method createEntrySet : 
	method getFromKey : 
	method isFromInclusive : 
	method getToKey : 
	method isToInclusive : 
	method comparator : 
	method containsKey : 
	method remove : 
	method get : 
	method put : 
	method entrySet : 
	method subMap : 
	method headMap : 
	method tailMap : 
	method inRange : 
	method inRange2 : 
	method inFromRange : 
	method inToRange : 
	method createRangeMap : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap
	method <init> : 
	method containsValue : 
	method clear : 
	method headMap : 
	method tailMap : 
	method subMap : 
	method decorated : 
	method previousKey : 
	method nextKey : 
	method decorated : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.StaticBucketMap
	method <init> : 
	method <init> : 
	method getHash : 
	method size : 
	method isEmpty : 
	method get : 
	method containsKey : 
	method containsValue : 
	method put : 
	method remove : 
	method keySet : 
	method values : 
	method entrySet : 
	method putAll : 
	method clear : 
	method equals : 
	method hashCode : 
	method atomic : 
	method atomic : 
	method access$500 : 
	method access$600 : 
	method access$900 : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.EditScript
	method <init> : 
	method append : 
	method append : 
	method append : 
	method visit : 
	method getLCSLength : 
	method getModifications : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMultiSet$MultiSetIterator
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.FactoryUtilsTest$Mock1
	method <init> : 
	method <init> : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1
	method <init> : 
	method nextIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.PredicatedSortedSetTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullCollection : 
	method makeTestSet : 
	method testGetSet : 
	method testIllegalAdd : 
	method testIllegalAddAll : 
	method testComparator : 
	method getCompatibilityVersion : 
	method makeFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.NodeCachingLinkedListTest
	method <init> : 
	method suite : 
	method makeObject : 
	method getCompatibilityVersion : 
	method testShrinkCache : 
	method compareSpeed : 
	method getCollection : 
	method getCollection : 
	method getCollection : 
	method makeObject : 
	method getCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMapTest$TestValueListView
	method <init> : 
	method makeObject : 
	method makeFullCollection : 
	method getFullElements : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isSetSupported : 
	method isNullSupported : 
	method isTestSerialization : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractBitwiseTrie
	method <init> : 
	method getKeyAnalyzer : 
	method toString : 
	method castKey : 
	method lengthInBits : 
	method bitsPerElement : 
	method isBitSet : 
	method bitIndex : 
	method compareKeys : 
	method compare : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.AbstractNavigableSetTest
	method <init> : 
	method makeObject : 
	method makeFullCollection : 
	method makeConfirmedCollection : 
	method verify : 
	method getFullNonNullElements : 
	method getOtherNonNullElements : 
	method bulkTestNavigableSetSubSet : 
	method bulkTestNavigableSetHeadSet : 
	method bulkTestNavigableSetTailSet : 
	method getCollection : 
	method getConfirmed : 
	method getConfirmed : 
	method getCollection : 
	method makeConfirmedCollection : 
	method makeFullCollection : 
	method makeObject : 
	method getConfirmed : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeConfirmedCollection : 
	method getConfirmed : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtils$CardinalityHelper
	method <init> : 
	method max : 
	method min : 
	method freqA : 
	method freqB : 
	method getFreq : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.ComparatorChainTest
	method <init> : 
	method makeObject : 
	method getCompatibilityVersion : 
	method testNoopComparatorChain : 
	method testBadNoopComparatorChain : 
	method testListComparatorChain : 
	method testBadListComparatorChain : 
	method testComparatorChainOnMinvaluedCompatator : 
	method getComparableObjectsOrdered : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.EqualPredicate
	method equalPredicate : 
	method equalPredicate : 
	method <init> : 
	method <init> : 
	method evaluate : 
	method getValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.ArrayStackTest
	method <init> : 
	method suite : 
	method makeObject : 
	method testNewStack : 
	method testPushPeekPop : 
	method testSearch : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry
	method <init> : 
	method <init> : 
	method setKeyValue : 
	method getKey : 
	method getValue : 
	method setValue : 
	method hashCode : 
	method equals : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.MultiSet$Entry
	method getElement : 
	method getCount : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest
	method <init> : 
	method makeObject : 
	method makeFullCollection : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method isAddSupported : 
	method isRemoveSupported : 
	method skipSerializedCanonicalTests : 
	method getCompatibilityVersion : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method makeFullCollection : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.UnmodifiableNavigableSet
	method unmodifiableNavigableSet : 
	method <init> : 
	method iterator : 
	method add : 
	method addAll : 
	method clear : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method subSet : 
	method headSet : 
	method tailSet : 
	method descendingSet : 
	method descendingIterator : 
	method subSet : 
	method headSet : 
	method tailSet : 
	method writeObject : 
	method readObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.TransformerPredicate
	method transformerPredicate : 
	method <init> : 
	method evaluate : 
	method getTransformer : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest$2
	method <init> : 
	method equate : 
	method hash : 
	method hash : 
	method equate : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest$3
	method <init> : 
	method execute : 
	method execute : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.PredicatedBag
	method predicatedBag : 
	method <init> : 
	method decorated : 
	method equals : 
	method hashCode : 
	method add : 
	method remove : 
	method uniqueSet : 
	method getCount : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest$4
	method <init> : 
	method execute : 
	method execute : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest$5
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest$6
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.PrototypeFactory$PrototypeSerializationFactory
	method <init> : 
	method create : 
	method create : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest$7
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest$8
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest$9
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullMap : 
	method testGetByIndex : 
	method testGetValueByIndex : 
	method testIndexOf : 
	method testSetValueByIndex : 
	method testRemoveByIndex : 
	method testPut_intObjectObject : 
	method testPutAllWithIndex : 
	method testPutAllWithIndexBug441 : 
	method testValueList_getByIndex : 
	method testValueList_setByIndex : 
	method testValueList_removeByIndex : 
	method testCOLLECTIONS_474_nullValues : 
	method testCOLLECTIONS_474_nonNullValues : 
	method bulkTestKeyListView : 
	method bulkTestValueListView : 
	method getCompatibilityVersion : 
	method getMap : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtils$WrappedGet
	method <init> : 
	method clear : 
	method containsKey : 
	method containsValue : 
	method entrySet : 
	method equals : 
	method get : 
	method hashCode : 
	method isEmpty : 
	method keySet : 
	method put : 
	method putAll : 
	method remove : 
	method size : 
	method values : 
	method mapIterator : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.PredicatedSortedSetTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet
	method <init> : 
	method iterator : 
	method toArray : 
	method toArray : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.PredicateDecorator
	method getPredicates : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.NodeCachingLinkedList
	method <init> : 
	method <init> : 
	method <init> : 
	method getMaximumCacheSize : 
	method setMaximumCacheSize : 
	method shrinkCacheToMaximumSize : 
	method getNodeFromCache : 
	method isCacheFull : 
	method addNodeToCache : 
	method createNode : 
	method removeNode : 
	method removeAllNodes : 
	method writeObject : 
	method readObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.HashMultiSet
	method <init> : 
	method <init> : 
	method writeObject : 
	method readObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.AbstractPredicateTest
	method <init> : 
	method initialiseTestObjects : 
	method predicateSanityTests : 
	method generatePredicate : 
	method assertFalse : 
	method assertTrue : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.IndexedCollectionTest
	method <init> : 
	method decorateCollection : 
	method decorateUniqueCollection : 
	method makeObject : 
	method makeConfirmedCollection : 
	method getFullElements : 
	method getOtherElements : 
	method makeFullCollection : 
	method makeConfirmedFullCollection : 
	method makeTestCollection : 
	method makeUniqueTestCollection : 
	method skipSerializedCanonicalTests : 
	method testAddedObjectsCanBeRetrievedByKey : 
	method testEnsureDuplicateObjectsCauseException : 
	method testDecoratedCollectionIsIndexedOnCreation : 
	method testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately : 
	method getOtherElements : 
	method getFullElements : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.UnmodifiableMultiSet
	method unmodifiableMultiSet : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method iterator : 
	method add : 
	method addAll : 
	method clear : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method setCount : 
	method add : 
	method remove : 
	method uniqueSet : 
	method entrySet : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.FixedSizeMap
	method fixedSizeMap : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method put : 
	method putAll : 
	method clear : 
	method remove : 
	method entrySet : 
	method keySet : 
	method values : 
	method isFull : 
	method maxSize : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.SingletonIterator
	method <init> : 
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method reset : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator
	method <init> : 
	method hasNext : 
	method checkMod : 
	method nextNull : 
	method nextEntry : 
	method currentEntry : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.SetUniqueListTest$SetUniqueList307
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.UnmodifiableSortedSet
	method unmodifiableSortedSet : 
	method <init> : 
	method iterator : 
	method add : 
	method addAll : 
	method clear : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method subSet : 
	method headSet : 
	method tailSet : 
	method writeObject : 
	method readObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry
	method <init> : 
	method getValue : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.FactoryUtilsTest
	method <init> : 
	method testExceptionFactory : 
Unit: $r10 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory exceptionFactory()>()
Unit: interfaceinvoke $r6.<org.apache.commons.collections4.Factory: java.lang.Object create()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r4, $r5)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r1 = $r9
Unit: $r8 := @caughtexception
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: $r9 := @caughtexception
Unit: $r3 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory exceptionFactory()>()
Unit: return
Unit: r2 = $r8
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r3)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory exceptionFactory()>()
Unit: $r4 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory exceptionFactory()>()
Unit: $r6 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory exceptionFactory()>()
Unit: interfaceinvoke $r10.<org.apache.commons.collections4.Factory: java.lang.Object create()>()
	method testNullFactory : 
Unit: r1 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>()
Unit: r2 = interfaceinvoke r1.<org.apache.commons.collections4.Factory: java.lang.Object create()>()
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>(r2)
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1)
Unit: return
	method testConstantFactoryNull : 
Unit: return
Unit: r2 = interfaceinvoke r1.<org.apache.commons.collections4.Factory: java.lang.Object create()>()
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>(r2)
Unit: r1 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory constantFactory(java.lang.Object)>(null)
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1)
	method testConstantFactoryConstant : 
Unit: r3 = (java.lang.Integer) $r4
Unit: $r4 = interfaceinvoke r2.<org.apache.commons.collections4.Factory: java.lang.Object create()>()
Unit: r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory constantFactory(java.lang.Object)>(r1)
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r2)
Unit: r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, r3)
	method testPrototypeFactoryNull : 
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: $r1 = <org.apache.commons.collections4.functors.ConstantFactory: org.apache.commons.collections4.Factory NULL_INSTANCE>
Unit: $r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory prototypeFactory(java.lang.Object)>(null)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r1, $r2)
	method testPrototypeFactoryPublicCloneMethod : 
Unit: $z0 = 0
Unit: r1 = $r4
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r3)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]
Unit: $r4 = new java.util.Date
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $z0 = 1
Unit: $r5 = interfaceinvoke r2.<org.apache.commons.collections4.Factory: java.lang.Object create()>()
Unit: r3 = (java.util.Date) $r5
Unit: specialinvoke $r4.<java.util.Date: void <init>()>()
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: if r1 == r3 goto $z0 = 0
Unit: r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory prototypeFactory(java.lang.Object)>(r1)
	method testPrototypeFactoryPublicCopyConstructor : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r3)
Unit: if r1 == r3 goto $z0 = 0
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r2)
Unit: return
Unit: $z0 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]
Unit: r1 = $r4
Unit: r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory prototypeFactory(java.lang.Object)>(r1)
Unit: r3 = interfaceinvoke r2.<org.apache.commons.collections4.Factory: java.lang.Object create()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: $r4 = new org.apache.commons.collections4.FactoryUtilsTest$Mock1
Unit: specialinvoke $r4.<org.apache.commons.collections4.FactoryUtilsTest$Mock1: void <init>(int)>(6)
Unit: $z0 = 1
	method testPrototypeFactoryPublicSerialization : 
Unit: r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory prototypeFactory(java.lang.Object)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: r3 = (java.lang.Integer) $r4
Unit: $z0 = 0
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r2)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r3)
Unit: r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: $z0 = 1
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: if r1 == r3 goto $z0 = 0
Unit: $r4 = interfaceinvoke r2.<org.apache.commons.collections4.Factory: java.lang.Object create()>()
	method testPrototypeFactoryPublicSerializationError : 
Unit: return
Unit: $r8 = virtualinvoke r3.<org.apache.commons.collections4.FunctorException: java.lang.Throwable getCause()>()
Unit: specialinvoke $r4.<org.apache.commons.collections4.FactoryUtilsTest$Mock2: void <init>(java.lang.Object)>($r5)
Unit: $r5 = new java.lang.Object
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r4 = new org.apache.commons.collections4.FactoryUtilsTest$Mock2
Unit: r3 = $r7
Unit: $z0 = $r8 instanceof java.io.IOException
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r2)
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory prototypeFactory(java.lang.Object)>(r1)
Unit: r1 = $r4
Unit: return
Unit: interfaceinvoke r2.<org.apache.commons.collections4.Factory: java.lang.Object create()>()
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: specialinvoke $r5.<java.lang.Object: void <init>()>()
Unit: $r7 := @caughtexception
	method testPrototypeFactoryPublicBad : 
Unit: staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory prototypeFactory(java.lang.Object)>(r1)
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r3 = new java.lang.Object
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: specialinvoke $r3.<java.lang.Object: void <init>()>()
Unit: $r5 := @caughtexception
Unit: r2 = $r5
Unit: r1 = $r3
Unit: return
Unit: return
	method instantiateFactoryNull : 
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory instantiateFactory(java.lang.Class)>(null)
	method instantiateFactorySimple : 
Unit: r4 = (org.apache.commons.collections4.FactoryUtilsTest$Mock3) $r2
Unit: $l1 = (long) $i0
Unit: $r2 = interfaceinvoke r1.<org.apache.commons.collections4.Factory: java.lang.Object create()>()
Unit: $i0 = virtualinvoke r4.<org.apache.commons.collections4.FactoryUtilsTest$Mock3: int getValue()>()
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: return
Unit: r1 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory instantiateFactory(java.lang.Class)>(class "Lorg/apache/commons/collections4/FactoryUtilsTest$Mock3;")
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1)
Unit: $r3 = interfaceinvoke r1.<org.apache.commons.collections4.Factory: java.lang.Object create()>()
Unit: $l3 = (long) $i2
Unit: r5 = (org.apache.commons.collections4.FactoryUtilsTest$Mock3) $r3
Unit: $i2 = virtualinvoke r5.<org.apache.commons.collections4.FactoryUtilsTest$Mock3: int getValue()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
	method instantiateFactoryMismatch : 
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: return
Unit: $r1[0] = null
Unit: $r1 = newarray (java.lang.Object)[1]
Unit: staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])>(class "Ljava/util/Date;", null, $r1)
	method instantiateFactoryNoConstructor : 
Unit: staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])>(class "Ljava/util/Date;", $r1, $r2)
Unit: $r2[0] = null
Unit: $r1 = newarray (java.lang.Class)[1]
Unit: $r2 = newarray (java.lang.Object)[1]
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: $r1[0] = class "Ljava/lang/Long;"
	method instantiateFactoryComplex : 
Unit: $r4[1] = $r6
Unit: $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT")
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(70)
Unit: r1 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory instantiateFactory(java.lang.Class,java.lang.Class[],java.lang.Object[])>(class "Ljava/util/Date;", $r4, $r8)
Unit: $r12 = interfaceinvoke r1.<org.apache.commons.collections4.Factory: java.lang.Object create()>()
Unit: $r8[0] = $r9
Unit: r2 = (java.util.Date) $r12
Unit: $r8[1] = $r10
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r8[2] = $r11
Unit: return
Unit: $r5 = <java.lang.Integer: java.lang.Class TYPE>
Unit: $r13 = new java.util.Date
Unit: $r6 = <java.lang.Integer: java.lang.Class TYPE>
Unit: $r4[0] = $r5
Unit: $r8 = newarray (java.lang.Object)[3]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, r2)
Unit: specialinvoke $r13.<java.util.Date: void <init>(long)>(86400000L)
Unit: $r4[2] = $r7
Unit: $r7 = <java.lang.Integer: java.lang.Class TYPE>
Unit: staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>($r3)
Unit: $r4 = newarray (java.lang.Class)[3]
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
	method testSingletonPatternInSerialization : 
Unit: r1 = $r4
Unit: i1 = 0
Unit: specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
Unit: staticinvoke <org.apache.commons.collections4.TestUtils: void assertSameAfterSerialization(java.lang.String,java.lang.Object)>($r10, r3)
Unit: if i1 >= i0 goto return
Unit: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: i1 = i1 + 1
Unit: r3 = r2[i1]
Unit: $r8 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()
Unit: $r5 = <org.apache.commons.collections4.functors.ExceptionFactory: org.apache.commons.collections4.Factory INSTANCE>
Unit: $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8)
Unit: $r4 = newarray (java.lang.Object)[1]
Unit: r2 = r1
Unit: goto [?= (branch)]
Unit: r0 := @this: org.apache.commons.collections4.FactoryUtilsTest
Unit: i0 = lengthof r2
Unit: $r6 = new java.lang.StringBuilder
Unit: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Singletone patern broken for ")
Unit: return
Unit: $r4[0] = $r5
 ====================================== 
** CLASS org.apache.commons.collections4.map.LinkedMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method clone : 
	method writeObject : 
	method readObject : 
	method get : 
	method getValue : 
	method indexOf : 
	method remove : 
	method asList : 
	method clone : 
	method clone : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.SwitchTransformer
	method switchTransformer : 
	method switchTransformer : 
	method <init> : 
	method <init> : 
	method transform : 
	method getPredicates : 
	method getTransformers : 
	method getDefaultTransformer : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator
	method <init> : 
	method next : 
	method remove : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.PermutationIterator
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.SetUtils$SetView
	method <init> : 
	method copyInto : 
	method createIterator : 
	method iterator : 
	method size : 
	method toSet : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.CaseInsensitiveMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method convertKey : 
	method clone : 
	method writeObject : 
	method readObject : 
	method clone : 
	method clone : 
 ====================================== 
** CLASS org.apache.commons.collections4.ArrayStack
	method <init> : 
	method <init> : 
	method empty : 
	method peek : 
	method peek : 
	method pop : 
	method push : 
	method search : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest
	method <init> : 
	method makeObject : 
	method getCompatibilityVersion : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isAllowNullKey : 
	method isTestSerialization : 
	method getSampleKeys : 
	method getSampleValues : 
	method makeFullMap : 
	method addSampleMappings : 
	method makeConfirmedMap : 
	method getConfirmed : 
	method setConfirmed : 
	method getMap : 
	method resetEmpty : 
	method resetFull : 
	method testNoMappingReturnsEmptyCol : 
	method testMultipleValues : 
	method testGet : 
	method testAddMappingThroughGet : 
	method testRemoveMappingThroughGet : 
	method testRemoveMappingThroughGetIterator : 
	method testContainsValue : 
	method testKeyContainsValue : 
	method testValues : 
	method testRemoveAllViaValuesIterator : 
	method testRemoveViaValuesRemove : 
	method testEntriesCollectionIterator : 
	method testRemoveAllViaEntriesIterator : 
	method testSize : 
	method testMapEquals : 
	method testSizeWithPutRemove : 
	method testKeySetSize : 
	method testSize_Key : 
	method testContainsValue_Key : 
	method testPutAll_Map1 : 
	method testPutAll_Map2 : 
	method testPutAll_KeyIterable : 
	method testRemove_KeyItem : 
	method testKeysMultiSet : 
	method testKeysBagIterator : 
	method testKeysBagContainsAll : 
	method testAsMapGet : 
	method testAsMapRemove : 
	method testMapIterator : 
	method testMapIteratorRemove : 
	method testMapIteratorUnsupportedSet : 
	method testEmptyMapCompatibility : 
	method testFullMapCompatibility : 
	method bulkTestMultiValuedMapEntries : 
	method bulkTestMultiValuedMapKeySet : 
	method bulkTestMultiValuedMapValues : 
	method bulkTestMultiValuedMapKeys : 
	method bulkTestAsMap : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractOrderedMapTest$InnerTestOrderedMapIterator
	method <init> : 
	method supportsRemove : 
	method isGetStructuralModify : 
	method supportsSetValue : 
	method makeEmptyIterator : 
	method makeObject : 
	method getMap : 
	method getConfirmedMap : 
	method verify : 
	method getMap : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractSetValuedMap
	method <init> : 
	method <init> : 
	method getMap : 
	method createCollection : 
	method get : 
	method wrappedCollection : 
	method remove : 
	method remove : 
	method wrappedCollection : 
	method get : 
	method createCollection : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap
	method <init> : 
	method <init> : 
	method inverseBidiMap : 
	method inverseBidiMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Forest
	method <init> : 
	method addTree : 
	method getTree : 
	method treeIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.DefaultMapEntryTest
	method <init> : 
	method makeMapEntry : 
	method makeMapEntry : 
	method testConstructors : 
Unit: specialinvoke $r10.<org.apache.commons.collections4.keyvalue.DefaultMapEntry: void <init>(java.util.Map$Entry)>(r1)
Unit: $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: $r5 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null)
Unit: r1 = $r4
Unit: $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("duke", $r12)
Unit: $r8 = interfaceinvoke r2.<org.apache.commons.collections4.KeyValue: java.lang.Object getKey()>()
Unit: r3 = $r10
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("duke", $r9)
Unit: $r10 = new org.apache.commons.collections4.keyvalue.DefaultMapEntry
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("name", $r8)
Unit: specialinvoke $r7.<org.apache.commons.collections4.keyvalue.DefaultKeyValue: void <init>(java.lang.Object,java.lang.Object)>("name", "duke")
Unit: r2 = $r7
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.DefaultMapEntryTest
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("name", $r5)
Unit: specialinvoke $r4.<org.apache.commons.collections4.keyvalue.DefaultMapEntry: void <init>(java.lang.Object,java.lang.Object)>("name", "duke")
Unit: $r7 = new org.apache.commons.collections4.keyvalue.DefaultKeyValue
Unit: $r4 = new org.apache.commons.collections4.keyvalue.DefaultMapEntry
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("name", $r11)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("duke", $r14)
Unit: $r6 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>("duke", $r6)
Unit: $r9 = interfaceinvoke r2.<org.apache.commons.collections4.KeyValue: java.lang.Object getValue()>()
Unit: $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>()
	method testSelfReferenceHandling : 
Unit: $r5 := @caughtexception
Unit: r2 = $r5
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r4)
Unit: r1 = virtualinvoke r0.<org.apache.commons.collections4.keyvalue.DefaultMapEntryTest: java.util.Map$Entry makeMapEntry()>()
Unit: goto [?= return]
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.DefaultMapEntryTest
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("This Map.Entry implementation supports value self-reference.")
Unit: $r4 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: return
Unit: interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(r1)
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator1
	method <init> : 
	method makeObject : 
	method getComparableObjectsOrdered : 
	method getCanonicalComparatorName : 
	method getCompatibilityVersion : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.AbstractNullComparatorTest$TestNullComparator2
	method <init> : 
	method makeObject : 
	method getComparableObjectsOrdered : 
	method getCanonicalComparatorName : 
	method getCompatibilityVersion : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.TransformerUtilsTest
	method <init> : 
	method testExceptionTransformer : 
Unit: return
Unit: r2 = $r12
Unit: interfaceinvoke $r6.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: interfaceinvoke $r9.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r10)
Unit: $r9 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer exceptionTransformer()>()
Unit: r1 = $r8
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: $r8 := @caughtexception
Unit: return
Unit: $r5 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer exceptionTransformer()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r4, $r5)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer exceptionTransformer()>()
Unit: $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer exceptionTransformer()>()
Unit: $r12 := @caughtexception
Unit: $r4 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer exceptionTransformer()>()
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r3)
Unit: $r10 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
	method testNullTransformer : 
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r1)
Unit: $r11 = interfaceinvoke $r9.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r10)
Unit: $r5 = interfaceinvoke $r4.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>()
Unit: $r9 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>()
Unit: $r10 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r3)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r8)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r14)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>()
Unit: $r13 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>
Unit: $r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>()
Unit: $r14 = interfaceinvoke $r12.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r13)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r11)
Unit: $r8 = interfaceinvoke $r6.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r5)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>()
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: $r7 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: return
	method testNopTransformer : 
Unit: $r11 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>()
Unit: $r4 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>()
Unit: $r9 = interfaceinvoke $r7.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r8)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r3)
Unit: $r15 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>()
Unit: $r10 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r5)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>()
Unit: $r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>()
Unit: $r5 = interfaceinvoke $r4.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r13 = interfaceinvoke $r11.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r12)
Unit: $r14 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>
Unit: $r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>()
Unit: $r8 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: $r6 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r17)
Unit: $r16 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r13)
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r1)
Unit: $r17 = interfaceinvoke $r15.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r16)
Unit: $r12 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r9)
Unit: return
Unit: $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nullTransformer()>()
	method testConstantTransformer : 
Unit: $r13 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r10 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r20, $r21)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>($r1)
Unit: $r19 = interfaceinvoke $r17.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r18)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r9)
Unit: $r1 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: $r9 = interfaceinvoke $r7.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r8)
Unit: $r11 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r14)
Unit: $r20 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>
Unit: $r15 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: $r16 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: $r8 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>($r5)
Unit: $r6 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r4)
Unit: $r18 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>
Unit: $r14 = interfaceinvoke $r12.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r13)
Unit: $r17 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>($r15)
Unit: $r5 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: $r21 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>(null)
Unit: $r2 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: $r12 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>($r10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r19)
	method testCloneTransformer : 
Unit: $r8 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r7)
Unit: $r15 = interfaceinvoke $r13.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r14)
Unit: $r4 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r15)
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: r1 = $r16
Unit: $r3 = interfaceinvoke $r2.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r16 := @caughtexception
Unit: $r7 = interfaceinvoke $r5.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r6)
Unit: $r13 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer cloneTransformer()>()
Unit: $r5 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer cloneTransformer()>()
Unit: $r14 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: $r9 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer cloneTransformer()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r11)
Unit: $r12 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: $r6 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: return
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer cloneTransformer()>()
Unit: return
Unit: $r11 = interfaceinvoke $r9.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r10)
Unit: $r10 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>
	method testMapTransformer : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r21)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)>(r1)
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9)
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: r1 = $r2
Unit: specialinvoke $r2.<java.util.HashMap: void <init>()>()
Unit: $r25 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>
Unit: $r13 = interfaceinvoke $r12.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r17)
Unit: $r24 = interfaceinvoke $r22.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r23)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r24)
Unit: $r17 = interfaceinvoke $r15.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r16)
Unit: $r5 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r13)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r15 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)>(r1)
Unit: $r2 = new java.util.HashMap
Unit: $r22 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)>(r1)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r25, $r26)
Unit: $r23 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: $r19 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)>(r1)
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r16 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: $r21 = interfaceinvoke $r19.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r20)
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r3)
Unit: $r8 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r26 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer mapTransformer(java.util.Map)>(null)
Unit: $r20 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
	method testExecutorTransformer : 
Unit: $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Closure)>($r2)
Unit: $r16 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>()
Unit: $r10 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: $r11 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r14)
Unit: $r14 = interfaceinvoke $r12.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r13)
Unit: $r15 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>
Unit: r1 = $r22
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r19)
Unit: $r17 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Closure)>($r16)
Unit: $r13 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: $r2 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r9)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Closure)>($r6)
Unit: $r18 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: $r19 = interfaceinvoke $r17.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r18)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r4)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Closure)>($r11)
Unit: $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r8 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Closure)>($r20)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure nopClosure()>()
Unit: $r9 = interfaceinvoke $r7.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r8)
Unit: $r20 = (org.apache.commons.collections4.Closure) null
Unit: $r5 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: $r22 := @caughtexception
	method testPredicateTransformer : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r20)
Unit: return
Unit: $r12 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r10)
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Predicate)>($r21)
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: $r18 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Predicate)>($r17)
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: $r19 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>
Unit: $r11 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: $r15 = interfaceinvoke $r13.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r14)
Unit: $r17 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r16 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: $r9 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r5)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Predicate)>($r7)
Unit: $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: $r10 = interfaceinvoke $r8.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r9)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r7 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r23 := @caughtexception
Unit: $r13 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Predicate)>($r12)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Predicate)>($r3)
Unit: r1 = $r23
Unit: $r3 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r14 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: $r20 = interfaceinvoke $r18.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r19)
Unit: $r21 = (org.apache.commons.collections4.Predicate) null
Unit: return
Unit: $r5 = interfaceinvoke $r4.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r15)
	method testFactoryTransformer : 
Unit: r1 = $r19
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r12)
Unit: $r11 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: $r10 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Factory)>($r9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r16)
Unit: $r8 = interfaceinvoke $r6.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r7)
Unit: $r17 = (org.apache.commons.collections4.Factory) null
Unit: $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Factory)>($r17)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Factory)>($r13)
Unit: $r7 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cObject>
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r9 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>()
Unit: $r15 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cInteger>
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: $r13 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void fail()>()]
Unit: $r6 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Factory)>($r5)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>()
Unit: $r2 = staticinvoke <org.apache.commons.collections4.FactoryUtils: org.apache.commons.collections4.Factory nullFactory()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r8)
Unit: $r12 = interfaceinvoke $r10.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r11)
Unit: $r16 = interfaceinvoke $r14.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r15)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer asTransformer(org.apache.commons.collections4.Factory)>($r2)
Unit: $r19 := @caughtexception
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r4)
	method testChainedTransformer : 
Unit: goto [?= $r29 = new java.util.ArrayList]
Unit: $r8 = interfaceinvoke $r7.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r31 := @caughtexception
Unit: $r3[1] = r1
Unit: return
Unit: $r27 = newarray (org.apache.commons.collections4.Transformer)[2]
Unit: $r23 = (org.apache.commons.collections4.Transformer[]) null
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r14 = interfaceinvoke $r13.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: interfaceinvoke r36.<java.util.Collection: boolean add(java.lang.Object)>(r2)
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: $r9[0] = r2
Unit: $r21[1] = null
Unit: $r9 = newarray (org.apache.commons.collections4.Transformer)[2]
Unit: $r21 = newarray (org.apache.commons.collections4.Transformer)[2]
Unit: interfaceinvoke r41.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r3)
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(java.util.Collection)>(r41)
Unit: $r16 = <org.apache.commons.collections4.functors.NOPTransformer: org.apache.commons.collections4.Transformer INSTANCE>
Unit: $r11 = interfaceinvoke $r10.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r12 = new java.util.ArrayList
Unit: $r33 := @caughtexception
Unit: $r5 = interfaceinvoke $r4.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: r38 = $r35
Unit: r40 = $r31
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r42 = $r34
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r21)
Unit: r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("A")
Unit: goto [?= $r23 = (org.apache.commons.collections4.Transformer[]) null]
Unit: interfaceinvoke r41.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: specialinvoke $r29.<java.util.ArrayList: void <init>()>()
Unit: r36 = $r12
Unit: $r18 = <org.apache.commons.collections4.functors.NOPTransformer: org.apache.commons.collections4.Transformer INSTANCE>
Unit: r41 = $r29
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r35 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r11)
Unit: $r6[0] = r1
Unit: $r6[1] = r2
Unit: $r29 = new java.util.ArrayList
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r23)
Unit: $r27[0] = null
Unit: $r3 = newarray (org.apache.commons.collections4.Transformer)[2]
Unit: $r13 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(java.util.Collection)>(r36)
Unit: goto [?= $r27 = newarray (org.apache.commons.collections4.Transformer)[2]]
Unit: specialinvoke $r12.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r36.<java.util.Collection: boolean add(java.lang.Object)>(r1)
Unit: $r6 = newarray (org.apache.commons.collections4.Transformer)[2]
Unit: $r17 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r15)
Unit: goto [?= $r25 = (java.util.Collection) null]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r5)
Unit: r39 = $r32
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r18, $r20)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r19 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
Unit: r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("B")
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r27[1] = null
Unit: $r34 := @caughtexception
Unit: $r25 = (java.util.Collection) null
Unit: $r20 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(java.util.Collection)>($r19)
Unit: $r10 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r9)
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r27)
Unit: r37 = $r33
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r8)
Unit: $r3[0] = r2
Unit: goto [?= return]
Unit: $r9[1] = r1
Unit: $r21[0] = null
Unit: $r15 = newarray (org.apache.commons.collections4.Transformer)[0]
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(java.util.Collection)>($r25)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r14)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r16, $r17)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer chainedTransformer(org.apache.commons.collections4.Transformer[])>($r6)
Unit: $r32 := @caughtexception
	method testIfTransformer : 
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)>(null, $r26)
Unit: return
Unit: $r26 = staticinvoke <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("A")
Unit: $r8 = interfaceinvoke $r7.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: r34 = $r31
Unit: $r24 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)>($r24, null)
Unit: goto [?= $r24 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()]
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r21 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)>(r5, r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r18)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r32 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r15)
Unit: $r29 := @caughtexception
Unit: r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("C")
Unit: $r11 = interfaceinvoke $r10.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r16 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>(r4, r1, r2)
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: goto [?= $r26 = staticinvoke <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("A")]
Unit: $r15 = interfaceinvoke $r13.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r14)
Unit: r35 = $r32
Unit: $r30 := @caughtexception
Unit: r36 = $r30
Unit: r33 = $r29
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r8)
Unit: r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("A")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r11)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r22)
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)>(null, null)
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>(null, null, null)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C", $r20)
Unit: $r10 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r9, r1, r2)
Unit: r5 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("A")
Unit: specialinvoke $r12.<org.apache.commons.collections4.TransformerUtilsTest$1: void <init>(org.apache.commons.collections4.TransformerUtilsTest)>(r0)
Unit: $r13 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>(r4, r1, r2)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r6, r1, r2)
Unit: $r20 = interfaceinvoke $r19.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("A")
Unit: goto [?= staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>(null, null, null)]
Unit: $r19 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer ifTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer)>(r5, r3)
Unit: $r31 := @caughtexception
Unit: goto [?= return]
Unit: $r9 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: $r12 = new org.apache.commons.collections4.TransformerUtilsTest$1
Unit: $r18 = interfaceinvoke $r16.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r17)
Unit: $r22 = interfaceinvoke $r21.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("B")
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r4 = $r12
Unit: r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("B")
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
	method testSwitchTransformer : 
Unit: $r72 := @caughtexception
Unit: $r19[0] = r1
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r27)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r83 = $r72
Unit: $r14 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r10, $r13)
Unit: $r23 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO")
Unit: r78 = $r55
Unit: $r8 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r7, r1, r2)
Unit: $r10 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: goto [?= $r66 = newarray (org.apache.commons.collections4.Predicate)[2]]
Unit: $r24 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE")
Unit: r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("A")
Unit: goto [?= $r63 = (java.util.Map) null]
Unit: $r61 = (org.apache.commons.collections4.Predicate[]) null
Unit: $r46 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>(r77)
Unit: $r9 = interfaceinvoke $r8.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r17 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO")
Unit: $r57 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r21)
Unit: $r10[1] = $r12
Unit: $r49 = newarray (org.apache.commons.collections4.Predicate)[0]
Unit: goto [?= $r61 = (org.apache.commons.collections4.Predicate[]) null]
Unit: $r10[0] = $r11
Unit: $r28[1] = $r30
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>($r63)
Unit: $r29 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO")
Unit: $r43 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>(r77)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r42)
Unit: $r28 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: $r21 = interfaceinvoke $r20.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("HELLO")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r40)
Unit: $r53 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>
Unit: interfaceinvoke r77.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, r3)
Unit: $r13 = newarray (org.apache.commons.collections4.Transformer)[2]
Unit: $r66 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: $r68 = newarray (org.apache.commons.collections4.Predicate)[1]
Unit: interfaceinvoke r77.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, r1)
Unit: $r50 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>
Unit: $r4 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r40 = interfaceinvoke $r39.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("WELL")
Unit: r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("B")
Unit: $r5 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer)>($r4, r1, r2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r6)
Unit: r80 = $r76
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r66, $r65)
Unit: $r34 = new java.util.HashMap
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r9)
Unit: specialinvoke $r52.<java.util.HashMap: void <init>()>()
Unit: r77 = $r34
Unit: specialinvoke $r34.<java.util.HashMap: void <init>()>()
Unit: $r65 = newarray (org.apache.commons.collections4.Transformer)[2]
Unit: $r22[0] = $r23
Unit: $r13[0] = r1
Unit: $r58 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>(r78)
Unit: $r35 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO")
Unit: $r12 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE")
Unit: $r27 = interfaceinvoke $r26.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("THERE")
Unit: $r52 = new java.util.HashMap
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: goto [?= $r68 = newarray (org.apache.commons.collections4.Predicate)[1]]
Unit: r81 = $r73
Unit: $r31 = newarray (org.apache.commons.collections4.Transformer)[2]
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r70[0] = r1
Unit: $r42 = interfaceinvoke $r41.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("HELLO")
Unit: $r70 = newarray (org.apache.commons.collections4.Transformer)[2]
Unit: $r28[0] = $r29
Unit: $r60 = (org.apache.commons.collections4.Transformer[]) null
Unit: $r19[1] = r2
Unit: $r22 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: $r16[1] = $r18
Unit: $r30 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C", $r33)
Unit: interfaceinvoke r77.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r37, r2)
Unit: $r16[0] = $r17
Unit: $r76 := @caughtexception
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("C")
Unit: $r6 = interfaceinvoke $r5.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r20 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r16, $r19)
Unit: r82 = $r75
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r75 := @caughtexception
Unit: $r74 := @caughtexception
Unit: $r25[0] = r1
Unit: $r37 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE")
Unit: $r47 = interfaceinvoke $r46.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("WELL")
Unit: $r63 = (java.util.Map) null
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>(null, null)
Unit: $r11 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("HELLO")
Unit: $r54 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>($r52)
Unit: $r31[0] = r1
Unit: $r15 = interfaceinvoke $r14.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("WELL")
Unit: $r26 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r22, $r25)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r53, $r54)
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r68, $r70)
Unit: $r18 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>("THERE")
Unit: $r70[1] = r2
Unit: $r44 = interfaceinvoke $r43.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("THERE")
Unit: $r25 = newarray (org.apache.commons.collections4.Transformer)[2]
Unit: $r31[1] = r2
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C", $r47)
Unit: $r39 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>(r77)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r15)
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r61, $r60)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r50, $r51)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r79 = $r74
Unit: $r55 = new java.util.HashMap
Unit: $r68[0] = $r69
Unit: $r16 = newarray (org.apache.commons.collections4.Predicate)[2]
Unit: $r25[1] = r2
Unit: goto [?= return]
Unit: $r32 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[],org.apache.commons.collections4.Transformer)>($r28, $r31, r3)
Unit: $r41 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(java.util.Map)>(r77)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r44)
Unit: $r69 = staticinvoke <org.apache.commons.collections4.functors.TruePredicate: org.apache.commons.collections4.Predicate truePredicate()>()
Unit: $r48 = newarray (org.apache.commons.collections4.Transformer)[0]
Unit: $r22[1] = $r24
Unit: $r73 := @caughtexception
Unit: $r51 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchTransformer(org.apache.commons.collections4.Predicate[],org.apache.commons.collections4.Transformer[])>($r49, $r48)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.functors.FalsePredicate: org.apache.commons.collections4.Predicate falsePredicate()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r57, $r58)
Unit: specialinvoke $r55.<java.util.HashMap: void <init>()>()
Unit: $r33 = interfaceinvoke $r32.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("WELL")
Unit: $r13[1] = r2
Unit: $r19 = newarray (org.apache.commons.collections4.Transformer)[2]
Unit: interfaceinvoke r78.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, null)
	method testSwitchMapTransformer : 
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("C")
Unit: $r13 = interfaceinvoke $r12.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("THERE")
Unit: interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("A", $r11)
Unit: $r18 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>
Unit: r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("A")
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r22, $r23)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r18, $r19)
Unit: r26 = $r5
Unit: return
Unit: $r11 = interfaceinvoke $r10.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("HELLO")
Unit: r2 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>("B")
Unit: specialinvoke $r17.<java.util.HashMap: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("B", $r13)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r9)
Unit: $r17 = new java.util.HashMap
Unit: $r19 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>($r17)
Unit: $r16 = interfaceinvoke $r15.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("WELL")
Unit: interfaceinvoke r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HELLO", r1)
Unit: r4 = $r25
Unit: $r10 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>(r26)
Unit: $r22 = <org.apache.commons.collections4.functors.ConstantTransformer: org.apache.commons.collections4.Transformer NULL_INSTANCE>
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>(null)
Unit: $r15 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>(r26)
Unit: interfaceinvoke r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("THERE", r2)
Unit: $r12 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>(r26)
Unit: $r20 = new java.util.HashMap
Unit: r27 = $r20
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r9 = interfaceinvoke $r8.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>("WELL")
Unit: interfaceinvoke r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, r3)
Unit: $r23 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>(r27)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer switchMapTransformer(java.util.Map)>(r26)
Unit: $r25 := @caughtexception
Unit: specialinvoke $r5.<java.util.HashMap: void <init>()>()
Unit: $r5 = new java.util.HashMap
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("C", $r16)
Unit: specialinvoke $r20.<java.util.HashMap: void <init>()>()
	method testInvokerTransformer : 
Unit: r1 = $r2
Unit: $r9 = interfaceinvoke $r8.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r1)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)>("size")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r11)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: goto [?= $r13 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)>("noSuchMethod")]
Unit: specialinvoke $r14.<java.lang.Object: void <init>()>()
Unit: $r16 := @caughtexception
Unit: $r17 := @caughtexception
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r13 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)>("noSuchMethod")
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r5 = interfaceinvoke $r4.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r1)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: r19 = $r16
Unit: interfaceinvoke $r13.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r14)
Unit: $r6 = new java.lang.Object
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)>(null)
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r5)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r18 = $r17
Unit: $r11 = interfaceinvoke $r10.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r9)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)>("size")
Unit: $r10 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String)>("size")
Unit: $r14 = new java.lang.Object
Unit: $r2 = new java.util.ArrayList
Unit: return
Unit: goto [?= return]
Unit: specialinvoke $r6.<java.lang.Object: void <init>()>()
	method testInvokerTransformer2 : 
Unit: r44 = $r40
Unit: r46 = $r39
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r15)
Unit: r45 = $r37
Unit: $r38 := @caughtexception
Unit: $r25 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("noSuchMethod", $r22, $r23)
Unit: $r15 = interfaceinvoke $r14.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r1)
Unit: $r31[0] = class "Ljava/lang/Object;"
Unit: goto [?= return]
Unit: interfaceinvoke $r25.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r26)
Unit: $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>
Unit: $r31 = newarray (java.lang.Class)[1]
Unit: $r24 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: $r4 = newarray (java.lang.Object)[1]
Unit: $r14 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("contains", $r10, $r11)
Unit: specialinvoke $r26.<java.lang.Object: void <init>()>()
Unit: $r3 = newarray (java.lang.Class)[1]
Unit: $r16 = newarray (java.lang.Class)[1]
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r41 := @caughtexception
Unit: $r3[0] = class "Ljava/lang/Object;"
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r33 = newarray (java.lang.Object)[1]
Unit: return
Unit: goto [?= $r28 = newarray (java.lang.Object)[1]]
Unit: $r16[0] = class "Ljava/lang/Object;"
Unit: $r33[0] = $r34
Unit: $r10[0] = class "Ljava/lang/Object;"
Unit: $r6 = <java.lang.Boolean: java.lang.Boolean FALSE>
Unit: $r22[0] = class "Ljava/lang/Object;"
Unit: $r23 = newarray (java.lang.Object)[1]
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r35 = newarray (java.lang.Class)[0]
Unit: $r29 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: $r40 := @caughtexception
Unit: $r10 = newarray (java.lang.Class)[1]
Unit: $r18 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: goto [?= $r31 = newarray (java.lang.Class)[1]]
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: r43 = $r41
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("badArgs", null, $r28)
Unit: $r11 = newarray (java.lang.Object)[1]
Unit: $r9 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: $r26 = new java.lang.Object
Unit: $r17[0] = $r18
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: goto [?= $r22 = newarray (java.lang.Class)[1]]
Unit: $r39 := @caughtexception
Unit: $r12 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: $r5 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: $r11[0] = $r12
Unit: r42 = $r38
Unit: $r20 = interfaceinvoke $r19.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("badArgs", $r31, null)
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>(null, null, null)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("contains", $r3, $r4)
Unit: r1 = $r2
Unit: $r22 = newarray (java.lang.Class)[1]
Unit: $r4[0] = $r5
Unit: $r8 = interfaceinvoke $r7.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(r1)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r17 = newarray (java.lang.Object)[1]
Unit: $r34 = <org.apache.commons.collections4.TransformerUtilsTest: java.lang.Object cString>
Unit: $r23[0] = $r24
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("badArgs", $r35, $r33)
Unit: $r28 = newarray (java.lang.Object)[1]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r8)
Unit: $r28[0] = $r29
Unit: goto [?= $r35 = newarray (java.lang.Class)[0]]
Unit: $r2 = new java.util.ArrayList
Unit: $r19 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer invokerTransformer(java.lang.String,java.lang.Class[],java.lang.Object[])>("contains", $r16, $r17)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r20)
Unit: $r37 := @caughtexception
	method testStringValueTransformer : 
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: return
Unit: $r7 = interfaceinvoke $r5.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>($r6)
Unit: $r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer stringValueTransformer()>()
Unit: staticinvoke <org.junit.Assert: void assertNotNull(java.lang.String,java.lang.Object)>("StringValueTransformer should NEVER return a null value.", $r2)
Unit: $r4 = interfaceinvoke $r3.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer stringValueTransformer()>()
Unit: $r2 = interfaceinvoke $r1.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(null)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer stringValueTransformer()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("StringValueTransformer should return \"null\" when given a null argument.", "null", $r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("StringValueTransformer should return toString value", "6", $r7)
	method testInstantiateTransformerNull : 
Unit: r1 = $r19
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r7[0] = class "Ljava/lang/Long;"
Unit: $r4[0] = "str"
Unit: r23 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer instantiateTransformer()>()
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer instantiateTransformer(java.lang.Class[],java.lang.Object[])>(null, $r2)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer instantiateTransformer(java.lang.Class[],java.lang.Object[])>($r5, $r4)
Unit: r21 = $r17
Unit: $r16 = interfaceinvoke r24.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(class "Ljava/util/Date;")
Unit: $r18 := @caughtexception
Unit: $r15 = new java.util.Date
Unit: goto [?= r23 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer instantiateTransformer()>()]
Unit: $r12 = <java.lang.Long: java.lang.Class TYPE>
Unit: r22 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer instantiateTransformer(java.lang.Class[],java.lang.Object[])>($r7, $r8)
Unit: interfaceinvoke r22.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(class "Ljava/lang/String;")
Unit: specialinvoke $r15.<java.util.Date: void <init>(long)>(1000L)
Unit: $r11[0] = $r12
Unit: $r8[0] = null
Unit: $r2[0] = "str"
Unit: goto [?= $r5 = newarray (java.lang.Class)[0]]
Unit: $r7 = newarray (java.lang.Class)[1]
Unit: $r14 = new java.lang.Long
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r4 = newarray (java.lang.Object)[1]
Unit: $r8 = newarray (java.lang.Object)[1]
Unit: specialinvoke $r14.<java.lang.Long: void <init>(long)>(1000L)
Unit: r20 = $r18
Unit: $r19 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: $r17 := @caughtexception
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: $r2 = newarray (java.lang.Object)[1]
Unit: return
Unit: $r13 = newarray (java.lang.Object)[1]
Unit: goto [?= $r7 = newarray (java.lang.Class)[1]]
Unit: $r5 = newarray (java.lang.Class)[0]
Unit: $r10 = interfaceinvoke r23.<org.apache.commons.collections4.Transformer: java.lang.Object transform(java.lang.Object)>(class "Ljava/lang/String;")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $r10)
Unit: $r13[0] = $r14
Unit: $r11 = newarray (java.lang.Class)[1]
Unit: r24 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer instantiateTransformer(java.lang.Class[],java.lang.Object[])>($r11, $r13)
	method testSingletonPatternInSerialization : 
Unit: $r7 = staticinvoke <org.apache.commons.collections4.functors.StringValueTransformer: org.apache.commons.collections4.Transformer stringValueTransformer()>()
Unit: r1 = $r4
Unit: specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Unit: $r4[1] = $r6
Unit: $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()
Unit: i1 = 0
Unit: r0 := @this: org.apache.commons.collections4.TransformerUtilsTest
Unit: if i1 >= i0 goto return
Unit: $r4 = newarray (java.lang.Object)[3]
Unit: staticinvoke <org.apache.commons.collections4.TestUtils: void assertSameAfterSerialization(java.lang.String,java.lang.Object)>($r12, r3)
Unit: $r4[0] = $r5
Unit: r3 = r2[i1]
Unit: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Singleton pattern broken for ")
Unit: $r6 = <org.apache.commons.collections4.functors.NOPTransformer: org.apache.commons.collections4.Transformer INSTANCE>
Unit: $r8 = new java.lang.StringBuilder
Unit: $r5 = <org.apache.commons.collections4.functors.ExceptionTransformer: org.apache.commons.collections4.Transformer INSTANCE>
Unit: r2 = r1
Unit: goto [?= (branch)]
Unit: i0 = lengthof r2
Unit: $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)
Unit: i1 = i1 + 1
Unit: $r4[2] = $r7
Unit: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: return
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$2$1
	method <init> : 
	method nextIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.NotPredicate
	method notPredicate : 
	method <init> : 
	method evaluate : 
	method getPredicates : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$6
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$7
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$8
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtilsTest$9
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.MultiValueMap$1
	method <init> : 
	method nextIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.HashedMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method clone : 
	method writeObject : 
	method readObject : 
	method clone : 
	method clone : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMap$KeySetView
	method <init> : 
	method size : 
	method contains : 
	method clear : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.PredicatedQueue
	method predicatedQueue : 
	method <init> : 
	method decorated : 
	method offer : 
	method poll : 
	method peek : 
	method element : 
	method remove : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractHashedMap$HashIterator
	method <init> : 
	method hasNext : 
	method nextEntry : 
	method currentEntry : 
	method remove : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.MultiMap
	method removeMapping : 
	method size : 
	method get : 
	method containsValue : 
	method put : 
	method remove : 
	method values : 
 ====================================== 
** CLASS org.apache.commons.collections4.ComparatorUtils
	method <init> : 
	method naturalComparator : 
	method chainedComparator : 
	method chainedComparator : 
	method reversedComparator : 
	method booleanComparator : 
	method nullLowComparator : 
	method nullHighComparator : 
	method transformedComparator : 
	method min : 
	method max : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator
	method <init> : 
	method <init> : 
	method checkSetValue : 
	method isSetValueChecking : 
	method entrySet : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator
	method <init> : 
	method next : 
	method getKey : 
	method getValue : 
	method setValue : 
	method hasPrevious : 
	method previous : 
	method nextEntry : 
	method previousEntry : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.UnmodifiableSortedMapTest
	method <init> : 
	method makeObject : 
	method isPutChangeSupported : 
	method isPutAddSupported : 
	method isRemoveSupported : 
	method makeFullMap : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method getCompatibilityVersion : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.NodeListIterator
	method <init> : 
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.AbstractMapEntry
	method <init> : 
	method setValue : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.TransformedCollectionTest
	method <init> : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method getFullElements : 
	method getOtherElements : 
	method testTransformedCollection : 
	method testTransformedCollection_decorateTransform : 
	method getCompatibilityVersion : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.AbstractSerializableListDecorator
	method <init> : 
	method writeObject : 
	method readObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterIterator
	method <init> : 
	method <init> : 
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method getIterator : 
	method setIterator : 
	method getPredicate : 
	method setPredicate : 
	method setNextObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ZippingIteratorTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method testIterateEven : 
	method testIterateEvenOdd : 
	method testIterateOddEven : 
	method testIterateEvenEven : 
	method testIterateFibEvenOdd : 
	method testRemoveFromSingle : 
	method testRemoveFromDouble : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap$AsMapEntrySetIterator
	method <init> : 
	method next : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.Get
	method containsKey : 
	method containsValue : 
	method entrySet : 
	method get : 
	method remove : 
	method isEmpty : 
	method keySet : 
	method size : 
	method values : 
 ====================================== 
** CLASS org.apache.commons.collections4.ListUtils$LcsVisitor
	method <init> : 
	method visitInsertCommand : 
	method visitDeleteCommand : 
	method visitKeepCommand : 
	method getSubSequence : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.StaticBucketMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method isFailFastExpected : 
	method ignoredTests : 
	method test_get_nullMatchesIncorrectly : 
	method test_containsKey_nullMatchesIncorrectly : 
	method test_containsValue_nullMatchesIncorrectly : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Tree
	method <init> : 
	method addBranch : 
	method getBranch : 
	method branchIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator
	method <init> : 
	method next : 
	method next : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableSortedMap
 ====================================== 
** CLASS org.apache.commons.collections4.bag.AbstractMapBag$BagIterator
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySetIterator
	method <init> : 
	method next : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.MapBackedSet
	method mapBackedSet : 
	method mapBackedSet : 
	method <init> : 
	method size : 
	method isEmpty : 
	method iterator : 
	method contains : 
	method containsAll : 
	method add : 
	method addAll : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method clear : 
	method toArray : 
	method toArray : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest
	method <init> : 
	method setUp : 
	method getCardinalityMap : 
Unit: $i4 = virtualinvoke $r12.<java.lang.Integer: int intValue()>()
Unit: $r18 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableB>
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $i6 = virtualinvoke $r15.<java.lang.Integer: int intValue()>()
Unit: $r29 = (java.lang.Integer) $r28
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>()
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r20)
Unit: $l5 = (long) $i4
Unit: $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L)
Unit: $r20 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19)
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>($r3)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13)
Unit: $i12 = virtualinvoke $r29.<java.lang.Integer: int intValue()>()
Unit: $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: $r32 = (java.lang.Integer) $r31
Unit: $r15 = (java.lang.Integer) $r14
Unit: $i8 = virtualinvoke $r23.<java.lang.Integer: int intValue()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l9)
Unit: $l11 = (long) $i10
Unit: $r9 = (java.lang.Integer) $r8
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $i2 = virtualinvoke $r9.<java.lang.Integer: int intValue()>()
Unit: $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l15)
Unit: $r22 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21)
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>($r18)
Unit: $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4)
Unit: $r28 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r27)
Unit: $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
Unit: $r25 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24)
Unit: $l15 = (long) $i14
Unit: $r6 = (java.lang.Integer) $r5
Unit: $r12 = (java.lang.Integer) $r11
Unit: $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: $l7 = (long) $i6
Unit: $l9 = (long) $i8
Unit: $l13 = (long) $i12
Unit: $i10 = virtualinvoke $r26.<java.lang.Integer: int intValue()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l11)
Unit: $r31 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r30)
Unit: $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l13)
Unit: $i14 = virtualinvoke $r32.<java.lang.Integer: int intValue()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l7)
Unit: $r26 = (java.lang.Integer) $r25
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r23 = (java.lang.Integer) $r22
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r17)
Unit: $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: $r17 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $l1 = (long) $i0
Unit: $l3 = (long) $i2
	method cardinality : 
Unit: $r10 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: interfaceinvoke r2.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object)>("E")
Unit: $l29 = (long) $i28
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: $l13 = (long) $i12
Unit: $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5L)
Unit: return
Unit: $r18 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableB>
Unit: $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l43)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l17)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l11)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l27)
Unit: $r16 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableB>
Unit: interfaceinvoke r2.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object,int)>("A", 3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5)
Unit: $l19 = (long) $i18
Unit: $i6 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>($r9, $r10)
Unit: $l25 = (long) $i24
Unit: $i40 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>("D", r2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l31)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $i14 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>($r17, $r18)
Unit: $r14 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableB>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $i36 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>("B", r2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l9)
Unit: $r27 = new java.util.HashSet
Unit: $l5 = (long) $i4
Unit: $i42 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>("E", r2)
Unit: interfaceinvoke r2.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object)>("E")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l23)
Unit: $r22 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableB>
Unit: interfaceinvoke r2.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object)>("C")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $r24 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA2>
Unit: $l7 = (long) $i6
Unit: $l31 = (long) $i30
Unit: $r12 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: $l21 = (long) $i20
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("C")
Unit: $r20 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableB>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l7)
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: $i4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>($r7, $r8)
Unit: $i8 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>($r11, $r12)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $i26 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>("B", r1)
Unit: $i16 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>($r19, $r20)
Unit: specialinvoke $r27.<java.util.HashSet: void <init>()>()
Unit: $l17 = (long) $i16
Unit: $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $l41 = (long) $i40
Unit: $l27 = (long) $i26
Unit: $l3 = (long) $i2
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: $r26 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableB2>
Unit: r2 = $r28
Unit: $i20 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>($r23, $r24)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l25)
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $i30 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>("D", r1)
Unit: $r28 = new org.apache.commons.collections4.bag.HashBag
Unit: $i18 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>($r21, $r22)
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("E")
Unit: specialinvoke $r28.<org.apache.commons.collections4.bag.HashBag: void <init>()>()
Unit: $i12 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>($r15, $r16)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l37)
Unit: $i38 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>("C", r2)
Unit: $i0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>($r3, $r4)
Unit: $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: $l23 = (long) $i22
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l15)
Unit: $i10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>($r13, $r14)
Unit: $i2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>($r5, $r6)
Unit: $l15 = (long) $i14
Unit: $i22 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>($r25, $r26)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l29)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l21)
Unit: $l35 = (long) $i34
Unit: $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
Unit: $l33 = (long) $i32
Unit: $i32 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>("E", r1)
Unit: $i28 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>("C", r1)
Unit: r1 = $r27
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l13)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l33)
Unit: $l39 = (long) $i38
Unit: $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $l9 = (long) $i8
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("E")
Unit: $l1 = (long) $i0
Unit: $l37 = (long) $i36
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l35)
Unit: $i34 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>("A", r2)
Unit: $i24 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>("A", r1)
Unit: $l43 = (long) $i42
Unit: $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: $l11 = (long) $i10
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l39)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l41)
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("A")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l19)
	method cardinalityOfNull : 
Unit: r20 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r1)
Unit: $l13 = (long) $i12
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l11)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r4)
Unit: r17 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r1)
Unit: r19 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r1)
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r3)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("B")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: $r4 = interfaceinvoke r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r3 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(null)
Unit: r21 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5)
Unit: $i10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>(null, r1)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: r16 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l13)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l7)
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l9)
Unit: r15 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r1)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: return
Unit: $r14 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(null)
Unit: r1 = $r2
Unit: $l7 = (long) $i6
Unit: $r6 = interfaceinvoke r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(null)
Unit: $l11 = (long) $i10
Unit: $i12 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>(null, r1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("A")
Unit: $r10 = interfaceinvoke r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(null)
Unit: $i0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>(null, r1)
Unit: $l9 = (long) $i8
Unit: $i6 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>(null, r1)
Unit: r18 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: $r8 = interfaceinvoke r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: $i2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>(null, r1)
Unit: $r12 = interfaceinvoke r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(null)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: $l3 = (long) $i2
Unit: $l5 = (long) $i4
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r2 = new java.util.ArrayList
Unit: $i4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>(null, r1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("B")
Unit: $i8 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int cardinality(java.lang.Object,java.lang.Iterable)>(null, r1)
	method containsAll : 
Unit: specialinvoke $r12.<java.util.ArrayList: void <init>(int)>(3)
Unit: $r11 = new java.util.ArrayList
Unit: specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(0)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({1},{3}) should return false.", $z27)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({3},{1}) should return false.", $z28)
Unit: if $z19 != 0 goto $z29 = 0
Unit: if $z15 != 0 goto $z26 = 0
Unit: $r9 = new java.util.ArrayList
Unit: $z29 = 0
Unit: interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>("3")
Unit: $z20 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r1, r1)
Unit: $z23 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({3},{1,3}) should return false.", $z24)]
Unit: $r10 = new java.util.ArrayList
Unit: $r12 = new java.util.ArrayList
Unit: specialinvoke $r11.<java.util.ArrayList: void <init>(int)>(2)
Unit: $z10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r4, r5)
Unit: r4 = $r10
Unit: interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: if $z10 != 0 goto $z24 = 0
Unit: r6 = $r12
Unit: $z27 = 0
Unit: $z24 = 0
Unit: $z21 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r5, r6)
Unit: $z26 = 1
Unit: $z22 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r5, r5)
Unit: $z28 = 1
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({3},{1}) should return false.", $z28)]
Unit: specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(1)
Unit: $z14 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r3, r5)
Unit: $z24 = 1
Unit: $z8 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r2, r5)
Unit: $z25 = 1
Unit: $z19 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r1, r5)
Unit: $r8 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({1,3},{1,3}) should return true.", $z13)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({1},{3}) should return false.", $z27)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({1,3},{1,3,1}) should return true.", $z21)
Unit: $z11 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r5, r4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({1,3,1},{1,3,1}) should return true.", $z22)
Unit: $z23 = 0
Unit: $z26 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({1,3},{2}) should return false.", $z26)]
Unit: $z18 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r5, r1)
Unit: $r7 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({2},{1,3}) should return false.", $z25)
Unit: $z17 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r4, r2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({},{}) should return true.", $z20)
Unit: interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>("3")
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({1,3},{3}) should return true.", $z11)
Unit: $z9 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r5, r2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({1,3},{}) should return true.", $z18)
Unit: interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: return
Unit: $z25 = 0
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>("3")
Unit: $z13 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r5, r5)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({2},{2}) should return true.", $z12)
Unit: if $z17 != 0 goto $z28 = 0
Unit: $z27 = 1
Unit: if $z8 != 0 goto $z23 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({1,3},{2}) should return false.", $z26)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: r3 = $r9
Unit: interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>("2")
Unit: r5 = $r11
Unit: r2 = $r8
Unit: $z29 = 1
Unit: $z16 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r2, r4)
Unit: specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(1)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({2},{1,3}) should return false.", $z25)]
Unit: $z28 = 0
Unit: $z15 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r5, r3)
Unit: specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(1)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({1},{1,3}) should return false.", $z23)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({3},{1,3}) should return false.", $z24)
Unit: if $z14 != 0 goto $z25 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({},{1,3}) should return false.", $z29)
Unit: $z12 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAll(java.util.Collection,java.util.Collection)>(r3, r3)
Unit: r1 = $r7
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({},{1,3}) should return false.", $z29)]
Unit: interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({1},{1,3}) should return false.", $z23)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAll({1,3},{1}) should return true.", $z9)
Unit: if $z16 != 0 goto $z27 = 0
	method containsAnyInCollection : 
Unit: specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(1)
Unit: r3 = $r8
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{2}) should return false.", $z19)
Unit: $z10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r5, r5)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({3},{1,3}) should return true.", $z7)
Unit: $z19 = 1
Unit: $z24 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{}) should return false.", $z22)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{}) should return false.", $z22)
Unit: $z6 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r5, r2)
Unit: $r9 = new java.util.ArrayList
Unit: $r7 = new java.util.ArrayList
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({},{}) should return false.", $z24)]
Unit: $z16 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r1, r5)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{1}) should return true.", $z6)
Unit: $z5 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r2, r5)
Unit: $z14 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r4, r2)
Unit: $z15 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r5, r1)
Unit: $z11 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r3, r5)
Unit: $z13 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r2, r4)
Unit: $z8 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r5, r4)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{2}) should return false.", $z19)]
Unit: if $z16 != 0 goto $z23 = 0
Unit: $z7 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r4, r5)
Unit: $z21 = 1
Unit: $z9 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r3, r3)
Unit: if $z12 != 0 goto $z19 = 0
Unit: $z21 = 0
Unit: r4 = $r9
Unit: interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>("3")
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1},{1,3}) should return true.", $z5)
Unit: if $z14 != 0 goto $z21 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({3},{1}) should return false.", $z21)
Unit: if $z11 != 0 goto $z18 = 0
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(0)
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>("3")
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({2},{1,3}) should return false.", $z18)]
Unit: if $z17 != 0 goto $z24 = 0
Unit: $r6 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({},{1,3}) should return false.", $z23)
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: $z23 = 0
Unit: $r10 = new java.util.ArrayList
Unit: interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: $z12 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r5, r3)
Unit: $z23 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{1,3}) should return true.", $z10)
Unit: r5 = $r10
Unit: $z24 = 0
Unit: $z22 = 0
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{3}) should return true.", $z8)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({3},{1}) should return false.", $z21)]
Unit: $z17 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.util.Collection)>(r1, r1)
Unit: if $z15 != 0 goto $z22 = 0
Unit: $z19 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({},{1,3}) should return false.", $z23)]
Unit: return
Unit: $z18 = 0
Unit: $z22 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1},{3}) should return false.", $z20)]
Unit: r2 = $r7
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1},{3}) should return false.", $z20)
Unit: specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(2)
Unit: $z18 = 1
Unit: interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>("2")
Unit: specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(1)
Unit: $z20 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({},{}) should return false.", $z24)
Unit: specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({2},{2}) should return true.", $z9)
Unit: $z20 = 1
Unit: if $z13 != 0 goto $z20 = 0
Unit: r1 = $r6
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({2},{1,3}) should return false.", $z18)
Unit: $r8 = new java.util.ArrayList
	method containsAnyInArray : 
Unit: $r12 = new java.util.ArrayList
Unit: r1 = $r11
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1},{3}) should return false.", $z20)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({3},{1}) should return false.", $z21)]
Unit: $r17[0] = "3"
Unit: $z22 = 1
Unit: $z14 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r7, r4)
Unit: interfaceinvoke r9.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: $z23 = 1
Unit: if $z17 != 0 goto $z24 = 0
Unit: specialinvoke $r16.<java.util.ArrayList: void <init>(int)>(1)
Unit: $z8 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r9, r8)
Unit: $z24 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({2},{1,3}) should return false.", $z18)
Unit: $z13 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r3, r8)
Unit: r5 = $r14
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({3},{1,3}) should return true.", $z7)
Unit: if $z16 != 0 goto $z23 = 0
Unit: r3 = $r12
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{2}) should return false.", $z19)
Unit: $z22 = 0
Unit: $r11 = new java.util.ArrayList
Unit: $r17 = newarray (java.lang.String)[1]
Unit: $z15 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r9, r2)
Unit: interfaceinvoke r9.<java.util.Collection: boolean add(java.lang.Object)>("3")
Unit: $z19 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{}) should return false.", $z22)]
Unit: $z7 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r7, r10)
Unit: r2 = newarray (java.lang.String)[0]
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{}) should return false.", $z22)
Unit: r8 = $r17
Unit: $z21 = 0
Unit: $r13 = newarray (java.lang.String)[1]
Unit: $r15 = newarray (java.lang.String)[1]
Unit: $z10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r9, r10)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({},{}) should return false.", $z24)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{1}) should return true.", $z6)
Unit: $z6 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r9, r4)
Unit: $z5 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r3, r10)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({2},{2}) should return true.", $z9)
Unit: specialinvoke $r18.<java.util.ArrayList: void <init>(int)>(2)
Unit: specialinvoke $r14.<java.util.ArrayList: void <init>(int)>(1)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{2}) should return false.", $z19)]
Unit: $z21 = 1
Unit: r9 = $r18
Unit: $z18 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({},{1,3}) should return false.", $z23)
Unit: $r18 = new java.util.ArrayList
Unit: $r16 = new java.util.ArrayList
Unit: $z19 = 1
Unit: $z20 = 0
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: r4 = $r13
Unit: $z17 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r1, r2)
Unit: $r13[0] = "1"
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{1,3}) should return true.", $z10)
Unit: r6 = $r15
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({},{1,3}) should return false.", $z23)]
Unit: interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>("3")
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1},{3}) should return false.", $z20)]
Unit: $r19 = newarray (java.lang.String)[2]
Unit: specialinvoke $r11.<java.util.ArrayList: void <init>(int)>(0)
Unit: $z11 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r5, r10)
Unit: $r15[0] = "2"
Unit: $z12 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r9, r6)
Unit: $r19[0] = "1"
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({},{}) should return false.", $z24)]
Unit: $z16 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r1, r10)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({3},{1}) should return false.", $z21)
Unit: if $z12 != 0 goto $z19 = 0
Unit: if $z14 != 0 goto $z21 = 0
Unit: interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: if $z15 != 0 goto $z22 = 0
Unit: if $z11 != 0 goto $z18 = 0
Unit: $r19[1] = "3"
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({2},{1,3}) should return false.", $z18)]
Unit: interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>("2")
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1},{1,3}) should return true.", $z5)
Unit: return
Unit: specialinvoke $r12.<java.util.ArrayList: void <init>(int)>(1)
Unit: if $z13 != 0 goto $z20 = 0
Unit: $z23 = 0
Unit: r7 = $r16
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("containsAny({1,3},{3}) should return true.", $z8)
Unit: $z18 = 0
Unit: $z9 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean containsAny(java.util.Collection,java.lang.Object[])>(r5, r6)
Unit: $z24 = 1
Unit: r10 = $r19
Unit: $z20 = 1
Unit: $r14 = new java.util.ArrayList
	method union : 
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r21)
Unit: $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r29 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r28)
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection union(java.lang.Iterable,java.lang.Iterable)>($r6, $r5)
Unit: $r12 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11)
Unit: $r21 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r20)
Unit: $r18 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r9)
Unit: $r15 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14)
Unit: $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r26)
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r12)
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableC>
Unit: $r38 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r37)
Unit: $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r32 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r31)
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r29)
Unit: $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8)
Unit: $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r32)
Unit: return
Unit: $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection union(java.lang.Iterable,java.lang.Iterable)>($r23, $r22)
Unit: $r35 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r34)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r18)
Unit: $r26 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25)
Unit: $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r23 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC2>
Unit: $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r33, $r35)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r15)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: r4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r3)
Unit: $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r38)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r1)
Unit: $r22 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
	method intersection : 
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r19 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18)
Unit: $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableC>
Unit: $r11 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10)
Unit: $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r29 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r28)
Unit: $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection intersection(java.lang.Iterable,java.lang.Iterable)>($r21, $r20)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r14)
Unit: $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r17 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16)
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: $r23 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r22)
Unit: $r21 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC2>
Unit: r4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r3)
Unit: $r14 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13)
Unit: $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r8)
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r23)
Unit: $r26 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25)
Unit: return
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection intersection(java.lang.Iterable,java.lang.Iterable)>($r6, $r5)
Unit: $r20 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r29)
Unit: $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r32)
Unit: $r32 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r31)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r34 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r33)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r19)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r11)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r34)
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r26)
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
	method disjunction : 
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)
Unit: $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r25)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r36 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r35)
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r25 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24)
Unit: $r28 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r27)
Unit: $r17 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16)
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection disjunction(java.lang.Iterable,java.lang.Iterable)>($r6, $r5)
Unit: $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: r4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r28)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r12)
Unit: $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r21 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r30 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r29)
Unit: $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r20)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r30)
Unit: $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r9)
Unit: $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r20 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19)
Unit: $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection disjunction(java.lang.Iterable,java.lang.Iterable)>($r22, $r21)
Unit: $r12 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r31, $r33)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r33 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r32)
Unit: $r14 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13)
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r1)
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableC>
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r14)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r36)
Unit: $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r22 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC2>
Unit: return
	method testDisjunctionAsUnionMinusIntersection : 
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection union(java.lang.Iterable,java.lang.Iterable)>($r7, $r6)
Unit: $r7 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection intersection(java.lang.Iterable,java.lang.Iterable)>($r9, $r8)
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection subtract(java.lang.Iterable,java.lang.Iterable)>(r2, r3)
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: $r9 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r1, $r10)
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection disjunction(java.lang.Iterable,java.lang.Iterable)>($r5, $r4)
	method testDisjunctionAsSymmetricDifference : 
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection subtract(java.lang.Iterable,java.lang.Iterable)>($r9, $r8)
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: $r10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection union(java.lang.Iterable,java.lang.Iterable)>(r2, r3)
Unit: $r9 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: return
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r1, $r10)
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection subtract(java.lang.Iterable,java.lang.Iterable)>($r7, $r6)
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection disjunction(java.lang.Iterable,java.lang.Iterable)>($r5, $r4)
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r7 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
	method testSubtract : 
Unit: $r16 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15)
Unit: $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r27)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r23)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r11)
Unit: $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: $r11 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r32 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r31)
Unit: $r30 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r29)
Unit: $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection subtract(java.lang.Iterable,java.lang.Iterable)>($r20, $r19)
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableC>
Unit: $r23 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r22)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection subtract(java.lang.Iterable,java.lang.Iterable)>($r6, $r5)
Unit: $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8)
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r16)
Unit: $r20 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC2>
Unit: $r27 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r30)
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r18 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17)
Unit: $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r25)
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r9)
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r18)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r32)
Unit: $r25 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r13)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: return
Unit: $r19 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r3)
Unit: $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r13 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12)
	method testSubtractWithPredicate : 
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r12)
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>(r2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r15)
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection subtract(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r6, $r5, r1)
Unit: $r20 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19)
Unit: $r4 = new org.apache.commons.collections4.CollectionUtilsTest$1
Unit: r1 = $r4
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r18)
Unit: $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: specialinvoke $r4.<org.apache.commons.collections4.CollectionUtilsTest$1: void <init>(org.apache.commons.collections4.CollectionUtilsTest)>(r0)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r18 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17)
Unit: $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r15 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14)
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: return
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r20)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
	method testIsSubCollectionOfSelf : 
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r2, $r1)
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: $r2 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r1 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r4, $r3)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
	method testIsSubCollection : 
Unit: $z3 = 1
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: return
Unit: $r1 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: $z3 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: if $z1 != 0 goto $z3 = 0
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r4, $r3)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r2, $r1)
Unit: $z2 = 1
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: if $z0 != 0 goto $z2 = 0
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z2 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)]
Unit: $r2 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
	method testIsSubCollection2 : 
Unit: $r2 = new java.util.ArrayList
Unit: $z36 = 0
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r8)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z31)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z34)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z39)
Unit: $z36 = 1
Unit: $r33 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: if $z10 != 0 goto $z38 = 0
Unit: if $z19 != 0 goto $z41 = 0
Unit: $r12 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z45)]
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: if $z28 != 0 goto $z44 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z44)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z15)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z27)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r11)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: if $z33 != 0 goto $z45 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z43)]
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r17)
Unit: $r19 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r7 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>(r1, $r6)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $z37 = 0
Unit: $z38 = 0
Unit: $r21 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $z16 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r19, r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z40)
Unit: $r30 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r1 = $r2
Unit: $z34 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r37, r1)
Unit: $z39 = 1
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>(r1, $r3)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r32)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z38)]
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r20)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r5)
Unit: $r22 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: $z40 = 0
Unit: $r37 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z35 = 0
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $z42 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z45)
Unit: $z7 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r10, r1)
Unit: $z12 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>(r1, $r15)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z36)
Unit: $z9 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>(r1, $r12)
Unit: $z45 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z24)
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r4, r1)
Unit: $r28 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z39)]
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z21)
Unit: $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z12)
Unit: if $z22 != 0 goto $z42 = 0
Unit: $z35 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z37)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z42)
Unit: $z21 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>(r1, $r24)
Unit: $z15 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>(r1, $r18)
Unit: $z22 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r25, r1)
Unit: $z31 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r34, r1)
Unit: return
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r29)
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $z27 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>(r1, $r30)
Unit: $r25 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z24 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>(r1, $r27)
Unit: if $z4 != 0 goto $z36 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z18)
Unit: $z13 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r16, r1)
Unit: $z6 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>(r1, $r9)
Unit: $z30 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>(r1, $r33)
Unit: $z41 = 1
Unit: $r27 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: if $z16 != 0 goto $z40 = 0
Unit: $z44 = 1
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r23)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z42)]
Unit: $r18 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r13, r1)
Unit: $z25 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r28, r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z37)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z38)
Unit: $z19 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r22, r1)
Unit: if $z25 != 0 goto $z43 = 0
Unit: $z43 = 0
Unit: $z43 = 1
Unit: $r9 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z37 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z41)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z30)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z36)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z43)
Unit: if $z1 != 0 goto $z35 = 0
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r26)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z44)]
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z18 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>(r1, $r21)
Unit: $z38 = 1
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r14)
Unit: $z39 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z41)
Unit: $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r24 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r7, r1)
Unit: $r31 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r36 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r15 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z40 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9)
Unit: if $z13 != 0 goto $z39 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z35)]
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $z45 = 0
Unit: if $z7 != 0 goto $z37 = 0
Unit: $z44 = 0
Unit: $z33 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>(r1, $r36)
Unit: $z42 = 0
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r35)
Unit: $z41 = 0
Unit: $r16 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z28 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isSubCollection(java.util.Collection,java.util.Collection)>($r31, r1)
Unit: $r34 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: $r13 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r10 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z35)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z40)]
	method testIsEqualCollectionToSelf : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>($r2, $r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: $r2 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: return
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>($r4, $r3)
Unit: $r1 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
	method testIsEqualCollection : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)]
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>($r4, $r3)
Unit: $z2 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
Unit: if $z1 != 0 goto $z3 = 0
Unit: $r2 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>($r2, $r1)
Unit: if $z0 != 0 goto $z2 = 0
Unit: $z2 = 1
Unit: $z3 = 0
Unit: $z3 = 1
Unit: $r1 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
	method testIsEqualCollectionReturnsFalse : 
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(1)
Unit: return
Unit: r1 = $r2
Unit: $z2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r1, $r7)
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>($r6, r1)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r2 = new java.util.ArrayList
Unit: $r7 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
	method testIsEqualCollection2 : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z22)
Unit: $z25 = 0
Unit: r1 = $r3
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: $z25 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z21)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r1, r2)
Unit: $z21 = 1
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("2")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z13)
Unit: r2 = $r4
Unit: $z7 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: if $z3 != 0 goto $z20 = 0
Unit: if $z9 != 0 goto $z22 = 0
Unit: $z23 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z24)]
Unit: $z15 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r1, r2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z18)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z19)
Unit: $z16 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r1)
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z22)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z20)
Unit: $z24 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z23)
Unit: $z12 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r1, r2)
Unit: $r4 = new java.util.ArrayList
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z20)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: $z22 = 1
Unit: $z23 = 1
Unit: $z24 = 1
Unit: $z20 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z23)]
Unit: $z19 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z12)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("2")
Unit: $z21 = 0
Unit: $z6 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r1, r2)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r1)
Unit: $r3 = new java.util.ArrayList
Unit: $z22 = 0
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z24)
Unit: $z3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r1, r2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $z9 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r1, r2)
Unit: if $z10 != 0 goto $z23 = 0
Unit: if $z15 != 0 goto $z24 = 0
Unit: if $z16 != 0 goto $z25 = 0
Unit: $z10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r1)
Unit: return
Unit: $z20 = 1
Unit: $z18 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r1, r2)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z21)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z25)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z25)]
Unit: if $z4 != 0 goto $z21 = 0
Unit: $z13 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r1)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("1")
	method testIsEqualCollectionEquator : 
Unit: $r12 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: specialinvoke $r6.<org.apache.commons.collections4.CollectionUtilsTest$2: void <init>(org.apache.commons.collections4.CollectionUtilsTest)>(r0)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: return
Unit: r3 = staticinvoke <org.apache.commons.collections4.functors.DefaultEquator: org.apache.commons.collections4.functors.DefaultEquator defaultEquator()>()
Unit: r2 = $r6
Unit: $z3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)>($r12, $r11, r3)
Unit: $r10 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)>($r13, r1, r3)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z4)
Unit: $z2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)>(r1, $r10, r2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Transformer TRANSFORM_TO_INTEGER>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $r6 = new org.apache.commons.collections4.CollectionUtilsTest$2
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)>($r8, $r7, r2)
Unit: $r7 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection collect(java.lang.Iterable,org.apache.commons.collections4.Transformer)>($r5, $r4)
Unit: $r11 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: $r9 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: $r13 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)>($r9, r1, r2)
	method testIsEqualCollectionNullEquator : 
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection,org.apache.commons.collections4.Equator)>($r2, $r1, null)
Unit: return
Unit: $r2 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r1 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
	method testIsProperSubCollection : 
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: $z16 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z20)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z16)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z18)]
Unit: $z12 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isProperSubCollection(java.util.Collection,java.util.Collection)>(r2, r1)
Unit: $z2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isProperSubCollection(java.util.Collection,java.util.Collection)>(r1, r2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z20)
Unit: $z21 = 1
Unit: r2 = $r4
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isProperSubCollection(java.util.Collection,java.util.Collection)>(r2, r2)
Unit: r1 = $r3
Unit: $z19 = 0
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("2")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z12)
Unit: $z3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isProperSubCollection(java.util.Collection,java.util.Collection)>(r2, r1)
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z15 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isProperSubCollection(java.util.Collection,java.util.Collection)>(r1, $r10)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z19)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z21)
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: $z22 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z17)
Unit: $z5 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isProperSubCollection(java.util.Collection,java.util.Collection)>(r1, r1)
Unit: if $z0 != 0 goto $z16 = 0
Unit: $z19 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z18)
Unit: $z20 = 1
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: $z22 = 0
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: $r7 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection intersection(java.lang.Iterable,java.lang.Iterable)>($r6, $r5)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z22)]
Unit: $z9 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isProperSubCollection(java.util.Collection,java.util.Collection)>(r2, r1)
Unit: $z14 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isProperSubCollection(java.util.Collection,java.util.Collection)>($r9, r1)
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("1")
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z14)
Unit: if $z10 != 0 goto $z21 = 0
Unit: $z10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isProperSubCollection(java.util.Collection,java.util.Collection)>(r1, r2)
Unit: $r3 = new java.util.ArrayList
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("2")
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z19)]
Unit: $z16 = 1
Unit: $z17 = 1
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z21)]
Unit: $z17 = 0
Unit: $z20 = 0
Unit: $z21 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z16)]
Unit: if $z15 != 0 goto $z22 = 0
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z13)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isProperSubCollection(java.util.Collection,java.util.Collection)>(r1, r2)
Unit: $z13 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isProperSubCollection(java.util.Collection,java.util.Collection)>($r7, $r8)
Unit: $r9 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection subtract(java.lang.Iterable,java.lang.Iterable)>(r1, r2)
Unit: $r10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection subtract(java.lang.Iterable,java.lang.Iterable)>(r1, r2)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z17)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z22)
Unit: if $z9 != 0 goto $z20 = 0
Unit: if $z3 != 0 goto $z17 = 0
Unit: if $z5 != 0 goto $z19 = 0
Unit: $z18 = 0
Unit: $z18 = 1
Unit: $r4 = new java.util.ArrayList
Unit: if $z4 != 0 goto $z18 = 0
	method find : 
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r14 = (java.lang.Integer) $r7
Unit: $r2 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r7 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object find(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r6, r13)
Unit: r13 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r5)
Unit: if r14 != null goto $z1 = 0
Unit: $r8 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object find(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, r13)
Unit: $r10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object find(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r9, null)
Unit: $z0 = virtualinvoke r12.<java.lang.Integer: boolean equals(java.lang.Object)>($r4)
Unit: $z1 = 0
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r8)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r10)
Unit: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: r12 = (java.lang.Integer) $r3
Unit: $r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object find(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, r11)
Unit: r11 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r1)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $z1 = 1
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r9 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(45)
	method forAllDoCollection : 
Unit: if $z4 == 0 goto $z8 = 0
Unit: $r14 = (java.util.Collection) null
Unit: $z5 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>()
Unit: r2 = $r3
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)]
Unit: $r9 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: org.apache.commons.collections4.Closure forAllDo(java.lang.Iterable,org.apache.commons.collections4.Closure)>($r14, r1)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $z8 = 0
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: org.apache.commons.collections4.Closure forAllDo(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r2, r1)
Unit: r1 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear")
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r5)
Unit: $z8 = 1
Unit: $z2 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>()
Unit: r12 = staticinvoke <org.apache.commons.collections4.CollectionUtils: org.apache.commons.collections4.Closure forAllDo(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r2, $r11)
Unit: $r3 = new java.util.ArrayList
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r4)
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: $r13 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r11 = (org.apache.commons.collections4.Closure) null
Unit: if $z5 == 0 goto $z6 = 0
Unit: $z6 = 0
Unit: if $z7 == 0 goto $z8 = 0
Unit: $z4 = interfaceinvoke $r8.<java.util.Collection: boolean isEmpty()>()
Unit: $z6 = 1
Unit: $z7 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>()
Unit: if $z2 == 0 goto $z6 = 0
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>(r12)
Unit: r10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: org.apache.commons.collections4.Closure forAllDo(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r2, r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, r10)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)]
	method forAllDoIterator : 
Unit: if $z5 == 0 goto $z6 = 0
Unit: $z6 = 1
Unit: $r15 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z7 = interfaceinvoke $r15.<java.util.List: boolean isEmpty()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: r14 = staticinvoke <org.apache.commons.collections4.CollectionUtils: org.apache.commons.collections4.Closure forAllDo(java.util.Iterator,org.apache.commons.collections4.Closure)>($r12, $r13)
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: $r7 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $z5 = interfaceinvoke $r10.<java.util.Collection: boolean isEmpty()>()
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r5)
Unit: $z6 = 0
Unit: $r9 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: org.apache.commons.collections4.Closure forAllDo(java.util.Iterator,org.apache.commons.collections4.Closure)>($r18, r1)
Unit: $r16 = (java.util.Iterator) null
Unit: $r10 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: org.apache.commons.collections4.Closure forAllDo(java.util.Iterator,org.apache.commons.collections4.Closure)>($r16, r1)
Unit: $r3 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, r11)
Unit: $z2 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>()
Unit: $r13 = (org.apache.commons.collections4.Closure) null
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r4)
Unit: r1 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear")
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)]
Unit: if $z2 == 0 goto $z6 = 0
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: r2 = $r3
Unit: $z8 = 1
Unit: return
Unit: $r12 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: if $z4 == 0 goto $z8 = 0
Unit: $r6 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>(r14)
Unit: $z8 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)]
Unit: $r18 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
Unit: r11 = staticinvoke <org.apache.commons.collections4.CollectionUtils: org.apache.commons.collections4.Closure forAllDo(java.util.Iterator,org.apache.commons.collections4.Closure)>($r6, r1)
Unit: if $z7 == 0 goto $z8 = 0
Unit: $z4 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>()
	method forAllDoFailure : 
Unit: r2 = $r3
Unit: $r3 = new java.util.ArrayList
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>("x")
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: org.apache.commons.collections4.Closure forAllDo(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r2, r1)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: r1 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear")
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
	method forAllButLastDoCollection : 
Unit: r34 = (java.util.List) $r10
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)
Unit: interfaceinvoke r2.<java.util.Collection: void clear()>()
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r8)
Unit: $z7 = 1
Unit: specialinvoke $r23.<org.apache.commons.collections4.CollectionUtilsTest$4: void <init>(org.apache.commons.collections4.CollectionUtilsTest,java.lang.StringBuffer)>(r0, r6)
Unit: $r12 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r32)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)]
Unit: return
Unit: $r11 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: $r38 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: $r33 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: $r21[0] = "a"
Unit: $r32 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object forAllButLastDo(java.lang.Iterable,org.apache.commons.collections4.Closure)>($r31, $r30)
Unit: $r23 = new org.apache.commons.collections4.CollectionUtilsTest$4
Unit: if $z4 != 0 goto $z5 = 0
Unit: $z5 = 1
Unit: $r28 = (org.apache.commons.collections4.Closure) null
Unit: $r13 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object forAllButLastDo(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r2, r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a;b;c", $r20)
Unit: $r21 = newarray (java.lang.String)[1]
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r29)
Unit: $z2 = interfaceinvoke $r12.<java.util.List: boolean isEmpty()>()
Unit: $r14 = newarray (java.lang.String)[3]
Unit: $r16 = new org.apache.commons.collections4.CollectionUtilsTest$3
Unit: $r36 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object forAllButLastDo(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r2, r1)
Unit: $r10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object forAllButLastDo(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r2, r1)
Unit: $z6 = interfaceinvoke $r39.<java.util.List: boolean isEmpty()>()
Unit: $r15 = new java.lang.StringBuffer
Unit: $r29 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object forAllButLastDo(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r3, $r28)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)]
Unit: $z5 = 0
Unit: r37 = (java.util.List) $r36
Unit: $z7 = 0
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r27)
Unit: $r31 = (java.util.Collection) null
Unit: $r27 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>()
Unit: $r35 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: $r14[1] = "b"
Unit: specialinvoke $r15.<java.lang.StringBuffer: void <init>()>()
Unit: specialinvoke $r16.<org.apache.commons.collections4.CollectionUtilsTest$3: void <init>(org.apache.commons.collections4.CollectionUtilsTest,java.lang.StringBuffer)>(r0, r4)
Unit: $r39 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: $z4 = interfaceinvoke $r33.<java.util.List: boolean isEmpty()>()
Unit: $r24 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object forAllButLastDo(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r5, $r23)
Unit: if $z6 != 0 goto $z7 = 0
Unit: $r14[2] = "c"
Unit: $r9 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: r40 = (java.util.List) $r13
Unit: virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25)
Unit: $r22 = new java.lang.StringBuffer
Unit: specialinvoke $r7.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r2.<java.util.Collection: void clear()>()
Unit: r2 = $r7
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r35)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r37, $r38)
Unit: r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14)
Unit: if $z2 == 0 goto $z5 = 0
Unit: specialinvoke $r22.<java.lang.StringBuffer: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>(r40)
Unit: virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r14[0] = "a"
Unit: r4 = $r15
Unit: $r18 = (java.lang.String) $r17
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r9)
Unit: $r20 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>()
Unit: $r25 = (java.lang.String) $r24
Unit: r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r21)
Unit: $r17 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object forAllButLastDo(java.lang.Iterable,org.apache.commons.collections4.Closure)>(r3, $r16)
Unit: $r30 = (org.apache.commons.collections4.Closure) null
Unit: r6 = $r22
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r34, $r11)
Unit: r1 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear")
Unit: $r7 = new java.util.ArrayList
	method forAllButLastDoIterator : 
Unit: $z3 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>()
Unit: r1 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear")
Unit: $r4 = new java.util.ArrayList
Unit: if $z2 == 0 goto $z4 = 0
Unit: $r8 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object forAllButLastDo(java.util.Iterator,org.apache.commons.collections4.Closure)>($r7, r1)
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $z4 = 0
Unit: r3 = (java.util.List) $r8
Unit: $r16 = (org.apache.commons.collections4.Closure) null
Unit: $r14 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object forAllButLastDo(java.util.Iterator,org.apache.commons.collections4.Closure)>($r12, $r13)
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: $r9 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: $r11 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: return
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)]
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r3, $r9)
Unit: if $z3 != 0 goto $z4 = 0
Unit: $z4 = 1
Unit: $r12 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
Unit: $r13 = (org.apache.commons.collections4.Closure) null
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r17 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object forAllButLastDo(java.util.Iterator,org.apache.commons.collections4.Closure)>($r15, $r16)
Unit: $r7 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
Unit: $z2 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>()
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r14)
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r10 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r17)
Unit: $r15 = (java.util.Iterator) null
Unit: r2 = $r4
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6)
Unit: interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r5)
	method getFromMap : 
Unit: r26 = $r23
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: specialinvoke $r6.<java.util.HashMap: void <init>()>()
Unit: specialinvoke $r3.<java.util.HashMap: void <init>()>()
Unit: r25 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map$Entry get(java.util.Map,int)>(r1, 1)
Unit: r30 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map$Entry get(java.util.Map,int)>(r28, 0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("one", $r21)
Unit: interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r2)
Unit: $r11 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: $r15 = new java.util.TreeMap
Unit: r28 = $r15
Unit: r27 = $r22
Unit: $r23 := @caughtexception
Unit: specialinvoke $r15.<java.util.TreeMap: void <init>()>()
Unit: r1 = $r3
Unit: $r10 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: $r20 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException.")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("zeroKey", $r18)
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zeroKey", "zero")
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("oneKey", "one")
Unit: r2 = $r6
Unit: goto [?= $r15 = new java.util.TreeMap]
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map$Entry get(java.util.Map,int)>(r1, -2)
Unit: r29 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map$Entry get(java.util.Map,int)>(r28, 1)
Unit: $r18 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: $r22 := @caughtexception
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map$Entry get(java.util.Map,int)>(r1, 2)
Unit: interfaceinvoke r28.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("zeroKey", "zero")
Unit: $r6 = new java.util.HashMap
Unit: interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("oneKey", $r20)
Unit: $r21 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: $r8 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: interfaceinvoke r28.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("oneKey", "one")
Unit: goto [?= staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map$Entry get(java.util.Map,int)>(r1, -2)]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException.")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("zero", $r19)
Unit: $r3 = new java.util.HashMap
Unit: $r7 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getKey()>()
Unit: $r19 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>()
Unit: r24 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map$Entry get(java.util.Map,int)>(r1, 0)
	method getFromList : 
Unit: virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: void replay()>()
Unit: r2 = (java.lang.String) $r10
Unit: $r8 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("zero", r2)
Unit: interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("one")
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Iterable,int)>($r12, 2)
Unit: $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r5 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("one", $r11)
Unit: $r3 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Object createMock(java.lang.Class)>(class "Ljava/util/List;")
Local: $r3
Must Mock: true

Unit: interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("zero")
Unit: $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1)
Unit: $r12 = new java.util.ArrayList
Unit: r1 = (java.util.List) $r3
Local: r1
Must Mock: true

Unit: $r10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Iterable,int)>(r1, 0)
Unit: return
Unit: specialinvoke $r12.<java.util.ArrayList: void <init>()>()
Unit: $r11 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Iterable,int)>(r1, 1)
	method getFromIterator : 
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3)
Unit: $r7 = (java.lang.Integer) $r6
Unit: if $z0 != 0 goto $z1 = 0
Unit: r11 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: goto [?= $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
Unit: $z1 = 1
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: r10 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: $l1 = (long) $i0
Unit: $i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()
Unit: $r9 := @caughtexception
Unit: $l3 = (long) $i2
Unit: r1 = $r9
Unit: $z1 = 0
Unit: return
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException.")
Unit: $r4 = (java.lang.Integer) $r3
Unit: $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
Unit: $r2 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.util.Iterator,int)>(r11, 10)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>()
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.util.Iterator,int)>(r10, 0)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.util.Iterator,int)>(r11, 1)
	method getFromEnumeration : 
Unit: $r7 := @caughtexception
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: r1 = $r3
Unit: goto [?= $z0 = interfaceinvoke r9.<java.util.Enumeration: boolean hasMoreElements()>()]
Unit: r2 = $r7
Unit: $z1 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: $r4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r8, 0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("one", $r5)
Unit: $r3 = new java.util.Vector
Unit: r9 = virtualinvoke r1.<java.util.Vector: java.util.Enumeration elements()>()
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r9, 3)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException.")
Unit: virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>("zero")
Unit: $z1 = 1
Unit: specialinvoke $r3.<java.util.Vector: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("zero", $r4)
Unit: return
Unit: r8 = virtualinvoke r1.<java.util.Vector: java.util.Enumeration elements()>()
Unit: $r5 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r9, 1)
Unit: virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>("one")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: if $z0 != 0 goto $z1 = 0
Unit: $z0 = interfaceinvoke r9.<java.util.Enumeration: boolean hasMoreElements()>()
	method getFromIterable : 
Unit: r1 = $r2
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("element", $r3)
Unit: interfaceinvoke r1.<org.apache.commons.collections4.Bag: boolean add(java.lang.Object,int)>("element", 1)
Unit: return
Unit: $r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Iterable,int)>(r1, 0)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Iterable,int)>(r1, 1)
Unit: specialinvoke $r2.<org.apache.commons.collections4.bag.HashBag: void <init>()>()
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r2 = new org.apache.commons.collections4.bag.HashBag
	method getFromObjectArray : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("one", $r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("zero", $r2)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r1, 0)
Unit: r1[1] = "one"
Unit: $r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r1, 1)
Unit: return
Unit: r1 = newarray (java.lang.Object)[2]
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r1, 2)
Unit: r1[0] = "zero"
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
	method getFromPrimitiveArray : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r3)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: r1 = newarray (int)[2]
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r1, 2)
Unit: r1[1] = 20
Unit: r1[0] = 10
Unit: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r5)
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r1, 1)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r1, 0)
Unit: return
	method getFromObject : 
Unit: r1 = $r2
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r1, 0)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: specialinvoke $r2.<java.lang.Object: void <init>()>()
Unit: $r2 = new java.lang.Object
	method testSize_List : 
Unit: $i6 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(r2)
Unit: $r1 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l5)
Unit: $l3 = (long) $i2
Unit: $l5 = (long) $i4
Unit: specialinvoke $r1.<java.util.ArrayList: void <init>()>()
Unit: r2 = $r1
Unit: return
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("b")
Unit: $l7 = (long) $i6
Unit: $i2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(r2)
Unit: $i4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(r2)
Unit: $i0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(null)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l7)
	method testSize_Map : 
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l5)
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("1", "a")
Unit: specialinvoke $r2.<java.util.HashMap: void <init>()>()
Unit: return
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("2", "b")
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: $r2 = new java.util.HashMap
Unit: r1 = $r2
Unit: $i4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(r1)
Unit: $i2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(r1)
Unit: $l5 = (long) $i4
Unit: $i0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
	method testSize_Array : 
Unit: $i0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(r1)
Unit: $l1 = (long) $i0
Unit: r2 = newarray (java.lang.String)[3]
Unit: r1 = newarray (java.lang.Object)[0]
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $i2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(r2)
Unit: $l5 = (long) $i4
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5)
Unit: r2[1] = "b"
Unit: $l3 = (long) $i2
Unit: $i4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(r2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
Unit: r2[2] = "c"
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: r2[0] = "a"
	method testSize_PrimitiveArray : 
Unit: r2[1] = 1.0
Unit: $l1 = (long) $i0
Unit: $i2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(r2)
Unit: $i4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(r2)
Unit: $l5 = (long) $i4
Unit: r2 = newarray (double)[3]
Unit: $i0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>(r1)
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
Unit: r2[2] = 2.5
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: r1 = newarray (int)[0]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: r2[0] = 0.0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5)
Unit: return
	method testSize_Enumeration : 
Unit: r1 = $r2
Unit: $r2 = new java.util.Vector
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>("b")
Unit: $r3 = virtualinvoke r1.<java.util.Vector: java.util.Enumeration elements()>()
Unit: $r5 = virtualinvoke r1.<java.util.Vector: java.util.Enumeration elements()>()
Unit: $i4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>($r5)
Unit: $l5 = (long) $i4
Unit: $i0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>($r3)
Unit: $l1 = (long) $i0
Unit: $r4 = virtualinvoke r1.<java.util.Vector: java.util.Enumeration elements()>()
Unit: virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>("a")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l5)
Unit: specialinvoke $r2.<java.util.Vector: void <init>()>()
Unit: $l3 = (long) $i2
Unit: return
Unit: $i2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>($r4)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
	method testSize_Iterator : 
Unit: $r2 = new java.util.ArrayList
Unit: r1 = $r2
Unit: $l5 = (long) $i4
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("b")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l5)
Unit: $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: $i2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>($r4)
Unit: $i4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>($r5)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: return
Unit: $i0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>($r3)
Unit: $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: $r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: $l3 = (long) $i2
	method testSize_Other : 
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: int size(java.lang.Object)>("not a list")
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: return
	method testSizeIsEmpty_Null : 
Unit: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(null)
Unit: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r2)
Unit: return
	method testSizeIsEmpty_List : 
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: $r2 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
Unit: r1 = $r2
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: return
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(r1)
Unit: $z2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(r1)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
	method testSizeIsEmpty_Map : 
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: r1 = $r2
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(r1)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r2 = new java.util.HashMap
Unit: specialinvoke $r2.<java.util.HashMap: void <init>()>()
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7)
Unit: interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("1", "a")
	method testSizeIsEmpty_Array : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: r2[2] = "c"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
Unit: r2[1] = "b"
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(r2)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: r2 = newarray (java.lang.String)[3]
Unit: return
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: r2[0] = "a"
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $z2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(r2)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(r1)
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: r1 = newarray (java.lang.Object)[0]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
	method testSizeIsEmpty_PrimitiveArray : 
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: r2 = newarray (double)[3]
Unit: r2[1] = 1.0
Unit: r2[2] = 2.5
Unit: $z2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(r2)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(r2)
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: r1 = newarray (int)[0]
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: return
Unit: r2[0] = 0.0
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
	method testSizeIsEmpty_Enumeration : 
Unit: $z2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>($r8)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r9)
Unit: specialinvoke $r3.<java.util.Vector: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r6)
Unit: r2 = virtualinvoke r1.<java.util.Vector: java.util.Enumeration elements()>()
Unit: virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>("a")
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>($r5)
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: return
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>()
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r3 = new java.util.Vector
Unit: $r8 = virtualinvoke r1.<java.util.Vector: java.util.Enumeration elements()>()
Unit: $z3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(r2)
Unit: r1 = $r3
Unit: $r5 = virtualinvoke r1.<java.util.Vector: java.util.Enumeration elements()>()
	method testSizeIsEmpty_Iterator : 
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $z3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>(r2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r8 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: $z2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>($r8)
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r3 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r6)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r9)
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>($r5)
Unit: interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("a")
Unit: r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: r1 = $r3
	method testSizeIsEmpty_Other : 
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: goto [?= return]
Unit: return
Unit: r1 = $r2
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean sizeIsEmpty(java.lang.Object)>("not a list")
Unit: $r2 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IllegalArgumentException")
	method testIsEmptyWithEmptyCollection : 
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: return
Unit: r1 = $r2
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEmpty(java.util.Collection)>(r1)
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: $r2 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
	method testIsEmptyWithNonEmptyCollection : 
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEmpty(java.util.Collection)>(r1)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: $r2 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
Unit: return
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("item")
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: r1 = $r2
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
	method testIsEmptyWithNull : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r2)
Unit: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEmpty(java.util.Collection)>(null)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
	method testIsNotEmptyWithEmptyCollection : 
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isNotEmpty(java.util.Collection)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: return
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: r1 = $r2
Unit: $r2 = new java.util.ArrayList
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
	method testIsNotEmptyWithNonEmptyCollection : 
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>("item")
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isNotEmpty(java.util.Collection)>(r1)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
Unit: $r2 = new java.util.ArrayList
Unit: return
Unit: r1 = $r2
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
	method testIsNotEmptyWithNull : 
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isNotEmpty(java.util.Collection)>(null)
Unit: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r2)
Unit: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: return
	method filter : 
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: r2 = r1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: return
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
Unit: r1 = $r3
Unit: $r3 = new java.util.ArrayList
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3)
Unit: $l1 = (long) $i0
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean filter(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r2, $r8)
Unit: $r10 = (java.lang.Integer) $r9
Unit: $l3 = (long) $i2
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r8 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4)
Unit: $i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
	method filterNullParameters : 
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2)
Unit: $l3 = (long) $i2
Unit: $l5 = (long) $i4
Unit: $r3 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $i4 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l5)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean filter(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, null)
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: return
Unit: r1 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(4, $r2)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10L)
Unit: $l1 = (long) $i0
Unit: $i2 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l3)
Unit: $z2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean filter(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, null)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean filter(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, $r3)
	method filterInverse : 
Unit: $i6 = virtualinvoke $r14.<java.lang.Integer: int intValue()>()
Unit: $l1 = (long) $i0
Unit: $l5 = (long) $i4
Unit: r1 = $r3
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $i4 = virtualinvoke $r12.<java.lang.Integer: int intValue()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l1)
Unit: $r14 = (java.lang.Integer) $r13
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: $r13 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(2)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5)
Unit: $r3 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l7)
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
Unit: $l3 = (long) $i2
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r8 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1)
Unit: $r12 = (java.lang.Integer) $r11
Unit: r2 = r1
Unit: $l7 = (long) $i6
Unit: $r10 = (java.lang.Integer) $r9
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean filterInverse(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r2, $r8)
Unit: return
Unit: $i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>()
	method filterInverseNullParameters : 
Unit: $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10L)
Unit: r1 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(4, $r2)
Unit: $z2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean filterInverse(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, null)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2)
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: $i4 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $l5 = (long) $i4
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean filterInverse(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, null)
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean filterInverse(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, $r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l1)
Unit: $i2 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l5)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l3)
Unit: $r3 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
	method countMatches : 
Unit: $l5 = (long) $i4
Unit: $l7 = (long) $i6
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l1)
Unit: $i2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r3, null)
Unit: $r1 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l5)
Unit: $r4 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $i4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, $r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l3)
Unit: return
Unit: $i0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r2, $r1)
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: $l3 = (long) $i2
Unit: $i6 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int countMatches(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, null)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $l1 = (long) $i0
Unit: $r2 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableB>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l7)
	method exists : 
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: $z2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean exists(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, $r3)
Unit: r1 = $r2
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: $z3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean exists(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, $r4)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r4 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean exists(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, null)
Unit: $r3 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $z7 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean exists(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, $r8)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9)
Unit: $r8 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r12)
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean exists(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, null)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r11 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2)
Unit: $z9 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean exists(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, $r11)
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z7)
Unit: return
Unit: $r2 = new java.util.ArrayList
	method select : 
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: $r13 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $l3 = (long) $i2
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection select(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, $r10)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: r1 = $r5
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $i2 = interfaceinvoke r2.<java.util.Collection: int size()>()
Unit: $r12 = new java.util.HashSet
Unit: r4 = (java.util.HashSet) $r14
Unit: $l1 = (long) $i0
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection select(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, $r11)
Unit: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r5 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)
Unit: specialinvoke $r12.<java.util.HashSet: void <init>()>()
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r11 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>()
Unit: $r16 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>()
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r4)
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l1)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection select(java.lang.Iterable,org.apache.commons.collections4.Predicate,java.util.Collection)>(r1, $r13, $r12)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r10 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: return
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
	method selectWithOutputCollections : 
Unit: $r14 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object extractSingleton(java.util.Collection)>(r2)
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3)
Unit: $r16 = newarray (java.lang.Integer)[3]
Unit: specialinvoke $r11.<java.util.ArrayList: void <init>()>()
Unit: $i2 = virtualinvoke $r15.<java.lang.Integer: int intValue()>()
Unit: $r10 = new java.util.ArrayList
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection select(java.lang.Iterable,org.apache.commons.collections4.Predicate,java.util.Collection,java.util.Collection)>(r1, $r12, r2, r3)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
Unit: staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>(r4, $r20)
Unit: r4 = $r16
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r16[0] = $r17
Unit: interfaceinvoke r3.<java.util.List: void clear()>()
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $i0 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: $r15 = (java.lang.Integer) $r14
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: interfaceinvoke r2.<java.util.List: void clear()>()
Unit: $z5 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
Unit: $r16[1] = $r18
Unit: $r12 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r21 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: $r20 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray()>()
Unit: $l1 = (long) $i0
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r16[2] = $r19
Unit: $r22 = (java.util.List) null
Unit: r2 = $r10
Unit: $z4 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: r1 = $r5
Unit: $r11 = new java.util.ArrayList
Unit: return
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection select(java.lang.Iterable,org.apache.commons.collections4.Predicate,java.util.Collection,java.util.Collection)>($r22, $r21, r2, r3)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: specialinvoke $r10.<java.util.ArrayList: void <init>()>()
Unit: r3 = $r11
Unit: $r5 = new java.util.ArrayList
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
	method selectRejected : 
Unit: r4 = (java.util.HashSet) $r14
Unit: $i2 = interfaceinvoke r2.<java.util.Collection: int size()>()
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
Unit: $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: $r10 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: r1 = $r5
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l1)
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
Unit: $z7 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>($r16)
Unit: $z8 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>($r17)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r3)
Unit: $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r14 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate,java.util.Collection)>(r1, $r13, $r12)
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, $r10)
Unit: $l1 = (long) $i0
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: $r12 = new java.util.HashSet
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection selectRejected(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(r1, $r11)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: $r11 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $r5 = new java.util.ArrayList
Unit: $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
Unit: $r13 = <org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Predicate EQUALS_TWO>
Unit: $z6 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>($r15)
Unit: $z5 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isEqualCollection(java.util.Collection,java.util.Collection)>(r2, r4)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: specialinvoke $r12.<java.util.HashSet: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
	method collect : 
Unit: $z11 = 0
Unit: $r22 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r12 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection collect(java.util.Iterator,org.apache.commons.collections4.Transformer,java.util.Collection)>(r31, r1, r30)
Unit: $z3 = interfaceinvoke r34.<java.util.Collection: boolean contains(java.lang.Object)>($r27)
Unit: if $i3 != $i4 goto $z5 = 0
Unit: $r13 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $i8 = interfaceinvoke $r15.<java.util.List: int size()>()
Unit: $i1 = interfaceinvoke r28.<java.util.Collection: int size()>()
Unit: $z7 = 0
Unit: $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: if $i10 != 0 goto $z9 = 0
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection collect(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.util.Collection)>($r38, null, $r39)
Unit: specialinvoke $r9.<java.util.ArrayList: void <init>()>()
Unit: $z4 = 0
Unit: specialinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: void assertCollectResult(java.util.Collection)>(r28)
Unit: r31 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: $i4 = interfaceinvoke $r8.<java.util.List: int size()>()
Unit: $r20 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection collect(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.util.Collection)>(null, r1, $r18)
Unit: $z5 = 0
Unit: r34 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection collect(java.util.Iterator,org.apache.commons.collections4.Transformer)>(r33, r1)
Unit: $r39 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $i10 = interfaceinvoke r37.<java.util.Collection: int size()>()
Unit: $z9 = 1
Unit: r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer constantTransformer(java.lang.Object)>($r2)
Unit: $r23 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z1 = interfaceinvoke $r23.<java.util.List: boolean contains(java.lang.Object)>($r24)
Unit: $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $z4 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)
Unit: r37 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection collect(java.util.Iterator,org.apache.commons.collections4.Transformer)>(null, null)
Unit: $z7 = 1
Unit: $z10 = 0
Unit: $r10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection collect(java.util.Iterator,org.apache.commons.collections4.Transformer,java.util.Collection)>(null, r1, $r9)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: if $z1 == 0 goto $z11 = 0
Unit: $r15 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: if $z3 != 0 goto $z8 = 0
Unit: if $z0 == 0 goto $z8 = 0
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: $r5 = new java.util.ArrayList
Unit: $r18 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: $i7 = interfaceinvoke r34.<java.util.Collection: int size()>()
Unit: if $i7 != $i8 goto $z7 = 0
Unit: $z0 = interfaceinvoke r34.<java.util.Collection: boolean contains(java.lang.Object)>($r16)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z10)]
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9)]
Unit: $z10 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z11)
Unit: $r38 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB>
Unit: return
Unit: i0 = interfaceinvoke $r17.<java.util.List: int size()>()
Unit: specialinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: void assertCollectResult(java.util.Collection)>(r28)
Unit: if $i5 != $i6 goto $z6 = 0
Unit: $r14 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r32 = (java.util.ArrayList) $r12
Unit: $r25 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)]
Unit: $r17 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: specialinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: void assertCollectResult(java.util.Collection)>(r29)
Unit: $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $i11 = interfaceinvoke $r40.<java.util.List: int size()>()
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)]
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: $z6 = 0
Unit: if $i1 != $i2 goto $z4 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)]
Unit: if $i11 != i0 goto $z11 = 0
Unit: $r40 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r30 = (java.util.ArrayList) $r10
Unit: $i5 = interfaceinvoke r28.<java.util.Collection: int size()>()
Unit: $z8 = 1
Unit: r29 = (java.util.ArrayList) $r7
Unit: $z5 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9)
Unit: $r11 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Iterable iterableA>
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)]
Unit: $i2 = interfaceinvoke $r4.<java.util.List: int size()>()
Unit: if $i9 != i0 goto $z10 = 0
Unit: $i9 = interfaceinvoke $r22.<java.util.List: int size()>()
Unit: r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionB> = $r21
Unit: $i6 = interfaceinvoke $r13.<java.util.List: int size()>()
Unit: $r21 = (java.util.List) $r20
Unit: $z6 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z11)]
Unit: $r7 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection collect(java.lang.Iterable,org.apache.commons.collections4.Transformer,java.util.Collection)>($r6, r1, $r5)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $z11 = 1
Unit: r28 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection collect(java.lang.Iterable,org.apache.commons.collections4.Transformer)>($r3, r1)
Unit: r33 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: $z9 = 0
Unit: if $z2 == 0 goto $z10 = 0
Unit: $z2 = interfaceinvoke $r25.<java.util.List: boolean contains(java.lang.Object)>($r26)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z10)
Unit: $i3 = virtualinvoke r29.<java.util.ArrayList: int size()>()
Unit: $r9 = new java.util.ArrayList
Unit: $z8 = 0
	method assertCollectResult : 
	method transform1 : 
Unit: $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: r18 = $r12
Unit: $l5 = (long) $i4
Unit: $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: return
Unit: interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>($r13)
Unit: r17 = $r1
Unit: $i0 = interfaceinvoke r17.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l1)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: void transform(java.util.Collection,org.apache.commons.collections4.Transformer)>(null, $r16)
Unit: specialinvoke $r1.<java.util.ArrayList: void <init>()>()
Unit: $r12 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l7)
Unit: specialinvoke $r12.<java.util.ArrayList: void <init>()>()
Unit: $l1 = (long) $i0
Unit: $r9 = interfaceinvoke r17.<java.util.List: java.lang.Object get(int)>(1)
Unit: $i4 = interfaceinvoke r18.<java.util.List: int size()>()
Unit: $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r7 = interfaceinvoke r17.<java.util.List: java.lang.Object get(int)>(0)
Unit: $r16 = r0.<org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Transformer TRANSFORM_TO_INTEGER>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7)
Unit: interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>($r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $l7 = (long) $i6
Unit: interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>($r14)
Unit: interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>($r15)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Transformer TRANSFORM_TO_INTEGER>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>($r2)
Unit: $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: $i2 = interfaceinvoke r18.<java.util.List: int size()>()
Unit: $r11 = interfaceinvoke r17.<java.util.List: java.lang.Object get(int)>(2)
Unit: $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: void transform(java.util.Collection,org.apache.commons.collections4.Transformer)>(r18, null)
Unit: $l3 = (long) $i2
Unit: $r1 = new java.util.ArrayList
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: void transform(java.util.Collection,org.apache.commons.collections4.Transformer)>(r17, $r5)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: void transform(java.util.Collection,org.apache.commons.collections4.Transformer)>(null, null)
Unit: interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>($r4)
Unit: $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $i6 = interfaceinvoke r18.<java.util.List: int size()>()
	method transform2 : 
Unit: $r8 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
Unit: $i0 = interfaceinvoke r1.<java.util.Set: int size()>()
Unit: specialinvoke $r2.<java.util.HashSet: void <init>()>()
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3)
Unit: $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r9)
Unit: $l1 = (long) $i0
Unit: $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>()
Unit: $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: r1 = $r2
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: specialinvoke $r6.<org.apache.commons.collections4.CollectionUtilsTest$7: void <init>(org.apache.commons.collections4.CollectionUtilsTest)>(r0)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: void transform(java.util.Collection,org.apache.commons.collections4.Transformer)>(r1, $r6)
Unit: $r6 = new org.apache.commons.collections4.CollectionUtilsTest$7
Unit: $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: return
Unit: $r2 = new java.util.HashSet
	method addIgnoreNull : 
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: $z5 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addIgnoreNull(java.util.Collection,java.lang.Object)>(r1, "4")
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("1")
Unit: $z6 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>("4")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("2")
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
Unit: $i0 = interfaceinvoke r1.<java.util.Set: int size()>()
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addIgnoreNull(java.util.Collection,java.lang.Object)>(r1, "1")
Unit: specialinvoke $r2.<java.util.HashSet: void <init>()>()
Unit: $i4 = interfaceinvoke r1.<java.util.Set: int size()>()
Unit: r1 = $r2
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z4)
Unit: $l5 = (long) $i4
Unit: $r2 = new java.util.HashSet
Unit: $z3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addIgnoreNull(java.util.Collection,java.lang.Object)>(r1, null)
Unit: $l3 = (long) $i2
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("3")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l1)
Unit: return
Unit: $i2 = interfaceinvoke r1.<java.util.Set: int size()>()
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l5)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6)
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
	method predicatedCollection : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("returned object should be a PredicatedCollection", $z0)
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection predicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)>($r3, r1)
Unit: return
Unit: $z0 = r2 instanceof org.apache.commons.collections4.collection.PredicatedCollection
Unit: $r7 := @caughtexception
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection predicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)>($r4, null)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null collection.")
Unit: r10 = $r8
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null predicate.")
Unit: $r8 := @caughtexception
Unit: $r3 = new java.util.ArrayList
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: r9 = $r7
Unit: goto [?= staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection predicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)>(null, r1)]
Unit: r1 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate instanceofPredicate(java.lang.Class)>(class "Ljava/lang/Integer;")
Unit: $r4 = new java.util.ArrayList
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection predicatedCollection(java.util.Collection,org.apache.commons.collections4.Predicate)>(null, r1)
Unit: goto [?= return]
	method isFull : 
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("3")
Unit: $z7 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isFull(java.util.Collection)>(r10)
Unit: $r3 = new org.apache.commons.collections4.queue.CircularFifoQueue
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isFull(java.util.Collection)>(null)
Unit: $r2 = new java.util.HashSet
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("1")
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isFull(java.util.Collection)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r5)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $z5 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isFull(java.util.Collection)>(r10)
Unit: return
Unit: specialinvoke $r3.<org.apache.commons.collections4.queue.CircularFifoQueue: void <init>(java.util.Collection)>(r1)
Unit: r1 = $r2
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z7)
Unit: goto [?= $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isFull(java.util.Collection)>(r1)]
Unit: virtualinvoke r10.<org.apache.commons.collections4.queue.CircularFifoQueue: boolean add(java.lang.Object)>("2")
Unit: $r8 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z4)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9)
Unit: r10 = $r3
Unit: specialinvoke $r2.<java.util.HashSet: void <init>()>()
Unit: virtualinvoke r10.<org.apache.commons.collections4.queue.CircularFifoQueue: boolean remove(java.lang.Object)>("2")
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: r9 = $r8
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("2")
Unit: $z9 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isFull(java.util.Collection)>(r10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7)
	method isEmpty : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isNotEmpty(java.util.Collection)>(null)
Unit: $r1 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean isNotEmpty(java.util.Collection)>($r1)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
	method maxSize : 
Unit: $l6 = (long) $i5
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: int maxSize(java.util.Collection)>(null)
Unit: $r3 = new org.apache.commons.collections4.queue.CircularFifoQueue
Unit: interfaceinvoke r6.<java.util.Queue: boolean remove(java.lang.Object)>("2")
Unit: $r4 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l8)
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("3")
Unit: $l8 = (long) $i7
Unit: $l2 = (long) $i1
Unit: r6 = $r3
Unit: $i7 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int maxSize(java.util.Collection)>(r6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l4)
Unit: $r2 = new java.util.HashSet
Unit: return
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("1")
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("2")
Unit: $i1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int maxSize(java.util.Collection)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l2)
Unit: $i5 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int maxSize(java.util.Collection)>(r6)
Unit: $i3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int maxSize(java.util.Collection)>(r6)
Unit: goto [?= $i1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: int maxSize(java.util.Collection)>(r1)]
Unit: r1 = $r2
Unit: specialinvoke $r3.<org.apache.commons.collections4.queue.CircularFifoQueue: void <init>(java.util.Collection)>(r1)
Unit: $l4 = (long) $i3
Unit: interfaceinvoke r6.<java.util.Queue: boolean add(java.lang.Object)>("2")
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l6)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: specialinvoke $r2.<java.util.HashSet: void <init>()>()
Unit: r5 = $r4
	method intersectionUsesMethodEquals : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r6, r2)
Unit: $i0 = interfaceinvoke r5.<java.util.Collection: int size()>()
Unit: specialinvoke $r7.<java.lang.Integer: void <init>(int)>(17)
Unit: r2 = $r8
Unit: $r7 = new java.lang.Integer
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: if r6 != r2 goto $z3 = 1
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r2)
Unit: r6 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>()
Unit: if r1 == r2 goto $z2 = 0
Unit: $r11 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>()
Unit: $z2 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: r4 = $r10
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r6)
Unit: return
Unit: r1 = $r7
Unit: r3 = $r9
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r2, r6)
Unit: specialinvoke $r8.<java.lang.Integer: void <init>(int)>(17)
Unit: specialinvoke $r10.<java.util.ArrayList: void <init>()>()
Unit: $z2 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r6, r1)
Unit: r5 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection intersection(java.lang.Iterable,java.lang.Iterable)>(r3, r4)
Unit: if r6 != r1 goto (branch)
Unit: $r8 = new java.lang.Integer
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r1)
Unit: $r10 = new java.util.ArrayList
Unit: $z3 = 1
Unit: $r9 = new java.util.ArrayList
Unit: $z3 = 0
Unit: if r6 == r1 goto $z3 = 0
Unit: specialinvoke $r9.<java.util.ArrayList: void <init>()>()
Unit: $l1 = (long) $i0
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
Unit: if r6 != r2 goto $z3 = 0
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r2, r1)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)]
	method testRetainAll : 
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection retainAll(java.util.Collection,java.util.Collection)>(r1, r2)
Unit: return
Unit: $z10 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("B")
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection retainAll(java.util.Collection,java.util.Collection)>(null, null)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("A")
Unit: $z9 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("A")
Unit: $r5 = new java.util.ArrayList
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("A")
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: $z7 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>("B")
Unit: r4 = $r24
Unit: $r6 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r20)
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z7)
Unit: $z8 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>("C")
Unit: $i2 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12)
Unit: $z13 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>("C")
Unit: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z14)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: r2 = $r6
Unit: goto [?= return]
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r22)
Unit: $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("B")
Unit: $i0 = interfaceinvoke r3.<java.util.Collection: int size()>()
Unit: $z14 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>("X")
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8)
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9)
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("X")
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: r1 = $r5
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11)
Unit: $l5 = (long) $i4
Unit: $z12 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>("A")
Unit: $i4 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r24 := @caughtexception
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("C")
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z11 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("C")
Unit: $z6 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>("A")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("C")
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
	method testRemoveAll : 
Unit: goto [?= return]
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18)
Unit: r2 = $r6
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("A")
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("A")
Unit: $z14 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>("X")
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z8)
Unit: $z13 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>("C")
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection removeAll(java.util.Collection,java.util.Collection)>(null, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("C")
Unit: $z6 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>("A")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: $z10 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("B")
Unit: $r22 := @caughtexception
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13)
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12)
Unit: $z7 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>("B")
Unit: $z11 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("C")
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: $z8 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>("C")
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection removeAll(java.util.Collection,java.util.Collection)>(r1, r2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5)
Unit: $l3 = (long) $i2
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z6)
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z14)
Unit: r1 = $r5
Unit: $r5 = new java.util.ArrayList
Unit: $z9 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("A")
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("X")
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $l5 = (long) $i4
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r20)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9)
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r6 = new java.util.ArrayList
Unit: $i0 = interfaceinvoke r3.<java.util.Collection: int size()>()
Unit: $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("C")
Unit: $i4 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: $z12 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>("A")
Unit: $l1 = (long) $i0
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("B")
Unit: r4 = $r22
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $i2 = interfaceinvoke r1.<java.util.List: int size()>()
	method testTransformedCollection : 
Unit: $z0 = r2 instanceof org.apache.commons.collections4.collection.TransformedCollection
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("returned object should be a TransformedCollection", $z0)
Unit: r1 = staticinvoke <org.apache.commons.collections4.TransformerUtils: org.apache.commons.collections4.Transformer nopTransformer()>()
Unit: r9 = $r8
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)>($r4, null)
Unit: goto [?= staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)>(null, r1)]
Unit: $r4 = new java.util.ArrayList
Unit: goto [?= return]
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r7 := @caughtexception
Unit: $r3 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null collection.")
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: $r8 := @caughtexception
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)>($r3, r1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null transformer.")
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)>(null, r1)
Unit: r10 = $r7
	method testTransformedCollection_2 : 
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection transformingCollection(java.util.Collection,org.apache.commons.collections4.Transformer)>(r1, $r4)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r3 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: $z4 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>("2")
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $z5 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>("3")
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("3")
Unit: r1 = $r3
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("1")
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z3 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>("1")
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: org.apache.commons.collections4.Transformer TRANSFORM_TO_INTEGER>
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("2")
	method testSynchronizedCollection : 
Unit: r2 = $r5
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: $r5 := @caughtexception
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null collection.")
Unit: $r3 = new java.util.ArrayList
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection synchronizedCollection(java.util.Collection)>($r3)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: return
Unit: $z0 = r1 instanceof org.apache.commons.collections4.collection.SynchronizedCollection
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be a SynchronizedCollection.", $z0)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection synchronizedCollection(java.util.Collection)>(null)
	method testUnmodifiableCollection : 
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection unmodifiableCollection(java.util.Collection)>(null)
Unit: $r3 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be a UnmodifiableCollection.", $z0)
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection unmodifiableCollection(java.util.Collection)>($r3)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r5 := @caughtexception
Unit: r2 = $r5
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null collection.")
Unit: $z0 = r1 instanceof org.apache.commons.collections4.collection.UnmodifiableCollection
Unit: goto [?= return]
	method emptyCollection : 
Unit: $r2 = <org.apache.commons.collections4.CollectionUtils: java.util.Collection EMPTY_COLLECTION>
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection emptyCollection()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, r1)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
	method emptyIfNull : 
Unit: r1 = $r3
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r3 = new java.util.ArrayList
Unit: $r4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection emptyIfNull(java.util.Collection)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r4)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection emptyIfNull(java.util.Collection)>(null)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>()
	method addAllForIterable : 
Unit: $z6 = interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r47)
Unit: interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r33)
Unit: $r43 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
Unit: $r54 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r53 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52)
Unit: $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r18)
Unit: $z4 = interfaceinvoke r5.<java.util.Collection: boolean addAll(java.util.Collection)>(r1)
Unit: $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z7 = interfaceinvoke r5.<java.util.Collection: boolean addAll(java.util.Collection)>(r1)
Unit: $z2 = interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r25)
Unit: $r6 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Object createMock(java.lang.Class)>(class "Ljava/util/Collection;")
Local: $r6
Must Mock: true

Unit: r2 = r1
Unit: $r8 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Object createMock(java.lang.Class)>(class "Ljava/util/Iterator;")
Local: $r8
Must Mock: true

Unit: $z3 = interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r30)
Unit: $r36 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: org.easymock.IExpectationSetters expect(java.lang.Object)>($r35)
Unit: r4 = (java.util.Iterator) $r8
Local: r4
Must Mock: true

Unit: $r50 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: $z8 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r5, r3)
Unit: $z1 = interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r20)
Unit: specialinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: void next(java.util.Iterator,java.lang.Object)>(r4, $r14)
Unit: $r48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6)
Unit: $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: r3 = (java.lang.Iterable) $r7
Local: r3
Must Mock: true

Unit: interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r28)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z10)
Unit: $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r50)
Unit: virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: void verify()>()
Unit: $r9 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Object createMock(java.lang.Class)>(class "Ljava/util/Collection;")
Local: $r9
Must Mock: true

Unit: interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
Unit: $r52 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7)
Unit: interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r37)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z11)
Unit: $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: r1 = (java.util.Collection) $r6
Local: r1
Must Mock: true

Unit: $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r10 = interfaceinvoke r3.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Unit: $z9 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r5, r2)
Unit: $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: return
Unit: $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
Unit: $r32 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: org.easymock.IExpectationSetters expect(java.lang.Object)>($r31)
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r27 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26)
Unit: r5 = (java.util.Collection) $r9
Local: r5
Must Mock: true

Unit: $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Unit: $z11 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r5, r2)
Unit: $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r49 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48)
Unit: $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r54)
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r7 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: java.lang.Object createMock(java.lang.Class)>(class "Ljava/lang/Iterable;")
Local: $r7
Must Mock: true

Unit: $r11 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10)
Unit: $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
Unit: $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
Unit: specialinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: void next(java.util.Iterator,java.lang.Object)>(r4, $r13)
Unit: $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $r39 = interfaceinvoke r3.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23)
Unit: virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: void replay()>()
Unit: $z10 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>(r5, r3)
Unit: $r44 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: org.easymock.IExpectationSetters expect(java.lang.Object)>($r43)
Unit: $r22 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21)
Unit: interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r45)
Unit: specialinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: void next(java.util.Iterator,java.lang.Object)>(r4, $r15)
Unit: $r40 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39)
Unit: specialinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: void next(java.util.Iterator,java.lang.Object)>(r4, $r42)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9)
Unit: $r17 = virtualinvoke r0.<org.apache.commons.collections4.CollectionUtilsTest: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16)
	method addAllForEnumeration : 
Unit: specialinvoke $r3.<java.util.Hashtable: void <init>()>()
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $r3 = new java.util.Hashtable
Unit: return
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: r1 = $r3
Unit: virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5)
Unit: $z1 = interfaceinvoke $r8.<java.util.List: boolean contains(java.lang.Object)>($r9)
Unit: r2 = virtualinvoke r1.<java.util.Hashtable: java.util.Enumeration keys()>()
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.util.Enumeration)>($r7, r2)
Unit: $r7 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
	method addAllForElements : 
Unit: $r1[0] = $r3
Unit: $r2 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $z1 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>($r5)
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r1 = newarray (java.lang.Integer)[1]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Object[])>($r2, $r1)
	method getNegative : 
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>($r1, -3)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r1 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: return
	method getPositiveOutOfBounds : 
Unit: return
Unit: $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>()
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>($r2, 30)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r1 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
	method get1 : 
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(null, 0)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
	method get : 
Unit: $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>()
Unit: $r4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>($r3, 2)
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>($r9)
Unit: $r10 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r8)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r9 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r8 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>($r7, 2)
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r4)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()
Unit: $r13 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r1, 0)
Unit: $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
	method getIterator : 
Unit: $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r1, 2)
Unit: $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
Unit: $r2 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: return
Unit: r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r1, 6)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
	method getEnumeration : 
Unit: $r6 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r2, 2)
Unit: $z1 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: r1 = $r3
Unit: r2 = virtualinvoke r1.<java.util.Vector: java.util.Enumeration elements()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r3 = new java.util.Vector
Unit: $r8 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Object,int)>(r2, 6)
Unit: return
Unit: $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>()
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: specialinvoke $r3.<java.util.Vector: void <init>(java.util.Collection)>($r4)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
	method reverse : 
Unit: $r5 = newarray (java.lang.Integer)[$i0]
Unit: $i0 = interfaceinvoke $r3.<java.util.List: int size()>()
Unit: $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5)
Unit: $r7 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)
Unit: $r2 = newarray (java.lang.Object)[0]
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <java.util.Collections: void reverse(java.util.List)>($r7)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: void reverseArray(java.lang.Object[])>($r2)
Unit: r1 = (java.lang.Integer[]) $r6
Unit: $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: void reverseArray(java.lang.Object[])>(r1)
Unit: return
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
	method extractSingleton : 
Unit: goto [?= return]
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object extractSingleton(java.util.Collection)>(r6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $r2)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object extractSingleton(java.util.Collection)>(r6)
Unit: goto [?= $r1 = new java.util.ArrayList]
Unit: r6 = $r1
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r3 := @caughtexception
Unit: goto [?= virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>("foo")]
Unit: virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>("foo")
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object extractSingleton(java.util.Collection)>(null)
Unit: $r4 := @caughtexception
Unit: virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>("bar")
Unit: specialinvoke $r1.<java.util.ArrayList: void <init>()>()
Unit: return
Unit: $r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.lang.Object extractSingleton(java.util.Collection)>(r6)
Unit: $r1 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expected NullPointerException from extractSingleton(null)")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expected IllegalArgumentException from extractSingleton(size == 2)")
Unit: $r5 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expected IllegalArgumentException from extractSingleton(empty)")
	method next : 
	method collateException1 : 
Unit: return
Unit: $r1 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.List collate(java.lang.Iterable,java.lang.Iterable)>($r1, null)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
	method collateException2 : 
Unit: $r2 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.List collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator)>($r2, $r1, null)
Unit: return
Unit: $r1 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionC>
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
	method testCollate : 
Unit: r1 = $r12
Unit: specialinvoke $r12.<java.util.ArrayList: void <init>()>()
Unit: staticinvoke <java.util.Collections: void reverse(java.util.List)>($r21)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $r20 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionE>
Unit: $l1 = (long) $i0
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection emptyCollection>
Unit: $r7 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $i2 = interfaceinvoke r30.<java.util.List: int size()>()
Unit: r32 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.List collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator)>($r25, $r24, r2)
Unit: r26 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.List collate(java.lang.Iterable,java.lang.Iterable)>($r4, $r3)
Unit: $r12 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Merge empty with non-empty", $r7, r27)
Unit: staticinvoke <java.util.Collections: void sort(java.util.List)>(r1)
Unit: return
Unit: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r14)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("Comparator Merge empty with empty", 0L, $l3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Merge two lists 1", r28, r29)
Unit: $r22 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionE>
Unit: r2 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator reversedComparator(java.util.Comparator)>($r15)
Unit: $i0 = interfaceinvoke r26.<java.util.List: int size()>()
Unit: r31 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.List collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator)>($r23, $r22, r2)
Unit: $r4 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection emptyCollection>
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection emptyCollection>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Comparator Merge two lists 2", r1, r32)
Unit: staticinvoke <java.util.Collections: void reverse(java.util.List)>(r1)
Unit: $r17 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection emptyCollection>
Unit: $r21 = (java.util.List) $r20
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("Merge empty with empty", 0L, $l1)
Unit: $r13 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionD>
Unit: r29 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.List collate(java.lang.Iterable,java.lang.Iterable)>($r11, $r10)
Unit: staticinvoke <java.util.Collections: void reverse(java.util.List)>($r19)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Merge two lists 2", r1, r29)
Unit: $r15 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator naturalComparator()>()
Unit: $r16 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection emptyCollection>
Unit: $r23 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionD>
Unit: $r9 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionD>
Unit: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r13)
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r27 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.List collate(java.lang.Iterable,java.lang.Iterable)>($r6, $r5)
Unit: r28 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.List collate(java.lang.Iterable,java.lang.Iterable)>($r9, $r8)
Unit: $r19 = (java.util.List) $r18
Unit: $r14 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionE>
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionE>
Unit: $r25 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionE>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Comparator Merge two lists 1", r31, r32)
Unit: $r10 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionD>
Unit: $r24 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionD>
Unit: $l3 = (long) $i2
Unit: $r18 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionD>
Unit: $r11 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionE>
Unit: r30 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.List collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator)>($r17, $r16, r2)
	method testCollateIgnoreDuplicates : 
Unit: interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r11)
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.List collate(java.lang.Iterable,java.lang.Iterable,boolean)>($r8, $r7, 0)
Unit: specialinvoke $r9.<java.util.HashSet: void <init>()>()
Unit: $r6 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionD>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Merge two lists 1 - ignore duplicates", r1, r2)
Unit: r4 = $r12
Unit: r3 = $r9
Unit: $r7 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionD>
Unit: r1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.List collate(java.lang.Iterable,java.lang.Iterable,boolean)>($r6, $r5, 0)
Unit: staticinvoke <java.util.Collections: void sort(java.util.List)>(r4)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r10)
Unit: return
Unit: $r11 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionE>
Unit: $r9 = new java.util.HashSet
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Merge two lists 2 - ignore duplicates", r4, r2)
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionE>
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionE>
Unit: specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>(r3)
Unit: $r10 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection collectionD>
Unit: $r12 = new java.util.ArrayList
	method testPermutationsWithNullCollection : 
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection permutations(java.util.Collection)>(null)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: return
	method testPermutations : 
Unit: if i5 > i0 goto $l1 = (long) i4
Unit: $l1 = (long) i4
Unit: i5 = i5 + 1
Unit: i5 = 1
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r1 = interfaceinvoke $r3.<java.util.List: java.util.List subList(int,int)>(0, 5)
Unit: $i2 = interfaceinvoke r2.<java.util.Collection: int size()>()
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: return
Unit: i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: goto [?= (branch)]
Unit: r2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection permutations(java.util.Collection)>(r1)
Unit: i4 = 1
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3)
Unit: i4 = i4 * i5
	method testMatchesAll : 
Unit: $r4 = new org.apache.commons.collections4.CollectionUtilsTest$8
Unit: r2 = $r6
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: $r7 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $z5 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r8, r2)
Unit: return
Unit: $r5 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: r1 = $r4
Unit: $r3 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.List collectionA>
Unit: $z1 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r3, null)
Unit: $r6 = new org.apache.commons.collections4.CollectionUtilsTest$9
Unit: $r8 = r0.<org.apache.commons.collections4.CollectionUtilsTest: java.util.Collection emptyCollection>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: $z4 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, r2)
Unit: $z2 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r5, r1)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>(null, null)
Unit: specialinvoke $r6.<org.apache.commons.collections4.CollectionUtilsTest$9: void <init>(org.apache.commons.collections4.CollectionUtilsTest)>(r0)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: specialinvoke $r4.<org.apache.commons.collections4.CollectionUtilsTest$8: void <init>(org.apache.commons.collections4.CollectionUtilsTest)>(r0)
Unit: $z3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: boolean matchesAll(java.lang.Iterable,org.apache.commons.collections4.Predicate)>($r7, r2)
	method testRemoveAllWithEquator : 
Unit: $z11 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("CA")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("AC")
Unit: $z13 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>("CX")
Unit: r25 = $r23
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: $r19 = staticinvoke <org.apache.commons.collections4.functors.DefaultEquator: org.apache.commons.collections4.functors.DefaultEquator defaultEquator()>()
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10)
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11)
Unit: r24 = $r22
Unit: specialinvoke $r6.<org.apache.commons.collections4.CollectionUtilsTest$10: void <init>(org.apache.commons.collections4.CollectionUtilsTest)>(r0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: goto [?= staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection removeAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)>(r1, r2, null)]
Unit: goto [?= return]
Unit: $z12 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>("AA")
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9)
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection removeAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)>(null, null, $r19)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $z10 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("BB")
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13)
Unit: r2 = $r5
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("XZ")
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z8 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>("CA")
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection removeAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)>(r1, r2, $r6)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("CA")
Unit: return
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $l5 = (long) $i4
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z8)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5)
Unit: $z9 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("AC")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: $z14 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>("XZ")
Unit: $r23 := @caughtexception
Unit: r1 = $r4
Unit: $r4 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)
Unit: $r6 = new org.apache.commons.collections4.CollectionUtilsTest$10
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("CX")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: $r22 := @caughtexception
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $z6 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>("AC")
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection removeAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)>(r1, r2, null)
Unit: $z7 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>("BB")
Unit: $i0 = interfaceinvoke r3.<java.util.Collection: int size()>()
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: $i2 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $l3 = (long) $i2
Unit: $l1 = (long) $i0
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r5 = new java.util.ArrayList
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("AA")
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("BB")
Unit: $i4 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12)
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z14)
	method testRetainAllWithEquator : 
Unit: $z13 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>("CX")
Unit: $r10 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $i2 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5)
Unit: goto [?= return]
Unit: $i4 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("AA")
Unit: $r5 = new java.util.ArrayList
Unit: $z10 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("BB")
Unit: $z8 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>("AC")
Unit: r11 = $r10
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.CollectionUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z7)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("BB")
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("AC")
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("CX")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z11)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9)
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z12)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z14)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z8)
Unit: r2 = $r5
Unit: $z12 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>("AA")
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z13)
Unit: $z6 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>("CA")
Unit: $l5 = (long) $i4
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection retainAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)>(null, null, null)
Unit: $i0 = interfaceinvoke r3.<java.util.Collection: int size()>()
Unit: specialinvoke $r6.<org.apache.commons.collections4.CollectionUtilsTest$11: void <init>(org.apache.commons.collections4.CollectionUtilsTest)>(r0)
Unit: $z7 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>("BB")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r6 = new org.apache.commons.collections4.CollectionUtilsTest$11
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("CA")
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: $z14 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>("XZ")
Unit: r1 = $r4
Unit: $r9 := @caughtexception
Unit: $z11 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("CA")
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("XZ")
Unit: $r4 = new java.util.ArrayList
Unit: r3 = staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection retainAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)>(r1, r2, $r6)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z10)
Unit: goto [?= staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection retainAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)>(r1, r2, null)]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: $z9 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("AC")
Unit: staticinvoke <org.apache.commons.collections4.CollectionUtils: java.util.Collection retainAll(java.lang.Iterable,java.lang.Iterable,org.apache.commons.collections4.Equator)>(r1, r2, null)
Unit: r12 = $r9
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullMap : 
	method isGetStructuralModify : 
	method getMap : 
	method testCtors : 
	method testLRU : 
	method testReset : 
	method testAccessOrder : 
	method testAccessOrder2 : 
	method testClone : 
	method testRemoveLRU : 
	method testRemoveLRUBlocksRemove : 
	method testRemoveLRUBlocksRemoveScan : 
	method testRemoveLRUFirstBlocksRemove : 
	method testInternalState_Buckets : 
	method testInternalState_getEntry_int : 
	method testSynchronizedRemoveFromMapIterator : 
	method testSynchronizedRemoveFromEntrySet : 
	method testSynchronizedRemoveFromKeySet : 
	method testSynchronizedRemoveFromValues : 
	method getCompatibilityVersion : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.MultiSetUtilsTest
	method <init> : 
	method setUp : 
	method testEmptyMultiSet : 
Unit: $r4 := @caughtexception
Unit: r1 = staticinvoke <org.apache.commons.collections4.MultiSetUtils: org.apache.commons.collections4.MultiSet emptyMultiSet()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Empty multi set must be read-only")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: r2 = $r4
Unit: goto [?= return]
Unit: $i0 = interfaceinvoke r1.<org.apache.commons.collections4.MultiSet: int size()>()
Unit: $l1 = (long) $i0
Unit: interfaceinvoke r1.<org.apache.commons.collections4.MultiSet: boolean add(java.lang.Object)>($r3)
Unit: r0 := @this: org.apache.commons.collections4.MultiSetUtilsTest
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(55)
Unit: return
	method testUnmodifiableMultiSet : 
Unit: $r2 = r0.<org.apache.commons.collections4.MultiSetUtilsTest: org.apache.commons.collections4.MultiSet multiSet>
Unit: staticinvoke <org.apache.commons.collections4.MultiSetUtils: org.apache.commons.collections4.MultiSet unmodifiableMultiSet(org.apache.commons.collections4.MultiSet)>(null)
Unit: $r5 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NPE")
Unit: goto [?= return]
Unit: goto [?= staticinvoke <org.apache.commons.collections4.MultiSetUtils: org.apache.commons.collections4.MultiSet unmodifiableMultiSet(org.apache.commons.collections4.MultiSet)>(null)]
Unit: r8 = $r6
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, r1)
Unit: return
Unit: $r3 = r0.<org.apache.commons.collections4.MultiSetUtilsTest: org.apache.commons.collections4.MultiSet multiSet>
Unit: r0 := @this: org.apache.commons.collections4.MultiSetUtilsTest
Unit: r7 = $r5
Unit: r1 = staticinvoke <org.apache.commons.collections4.MultiSetUtils: org.apache.commons.collections4.MultiSet unmodifiableMultiSet(org.apache.commons.collections4.MultiSet)>($r2)
Unit: $r6 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Empty multi set must be read-only")
Unit: interfaceinvoke r1.<org.apache.commons.collections4.MultiSet: boolean add(java.lang.Object)>("a")
	method testSynchronizedMultiSet : 
Unit: $r3 = r0.<org.apache.commons.collections4.MultiSetUtilsTest: org.apache.commons.collections4.MultiSet multiSet>
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.MultiSetUtilsTest
Unit: $r2 = r0.<org.apache.commons.collections4.MultiSetUtilsTest: org.apache.commons.collections4.MultiSet multiSet>
Unit: r1 = staticinvoke <org.apache.commons.collections4.MultiSetUtils: org.apache.commons.collections4.MultiSet synchronizedMultiSet(org.apache.commons.collections4.MultiSet)>($r2)
Unit: interfaceinvoke r1.<org.apache.commons.collections4.MultiSet: boolean add(java.lang.Object)>("a")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, r1)
	method testPredicatedMultiSet : 
Unit: specialinvoke $r3.<org.apache.commons.collections4.MultiSetUtilsTest$1: void <init>(org.apache.commons.collections4.MultiSetUtilsTest)>(r0)
Unit: goto [?= $r11 = r0.<org.apache.commons.collections4.MultiSetUtilsTest: org.apache.commons.collections4.MultiSet multiSet>]
Unit: $r3 = new org.apache.commons.collections4.MultiSetUtilsTest$1
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l5, $l7)
Unit: staticinvoke <org.apache.commons.collections4.MultiSetUtils: org.apache.commons.collections4.MultiSet predicatedMultiSet(org.apache.commons.collections4.MultiSet,org.apache.commons.collections4.Predicate)>($r8, null)
Unit: $i0 = interfaceinvoke $r5.<org.apache.commons.collections4.MultiSet: int size()>()
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.MultiSetUtilsTest
Unit: $i6 = interfaceinvoke r2.<org.apache.commons.collections4.MultiSet: int getCount(java.lang.Object)>("a")
Unit: $r4 = r0.<org.apache.commons.collections4.MultiSetUtilsTest: org.apache.commons.collections4.MultiSet multiSet>
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NPE")
Unit: $r8 = r0.<org.apache.commons.collections4.MultiSetUtilsTest: org.apache.commons.collections4.MultiSet multiSet>
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NPE")
Unit: r16 = $r14
Unit: specialinvoke $r10.<org.apache.commons.collections4.MultiSetUtilsTest$2: void <init>(org.apache.commons.collections4.MultiSetUtilsTest)>(r0)
Unit: r18 = $r15
Unit: r2 = staticinvoke <org.apache.commons.collections4.MultiSetUtils: org.apache.commons.collections4.MultiSet predicatedMultiSet(org.apache.commons.collections4.MultiSet,org.apache.commons.collections4.Predicate)>($r4, r1)
Unit: r1 = $r3
Unit: $l1 = (long) $i0
Unit: $r6 = r0.<org.apache.commons.collections4.MultiSetUtilsTest: org.apache.commons.collections4.MultiSet multiSet>
Unit: $l7 = (long) $i6
Unit: staticinvoke <org.apache.commons.collections4.MultiSetUtils: org.apache.commons.collections4.MultiSet predicatedMultiSet(org.apache.commons.collections4.MultiSet,org.apache.commons.collections4.Predicate)>(null, r1)
Unit: $r5 = r0.<org.apache.commons.collections4.MultiSetUtilsTest: org.apache.commons.collections4.MultiSet multiSet>
Unit: $r13 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Predicate is violated for all elements not being \'a\'")
Unit: $r11 = r0.<org.apache.commons.collections4.MultiSetUtilsTest: org.apache.commons.collections4.MultiSet multiSet>
Unit: $r10 = new org.apache.commons.collections4.MultiSetUtilsTest$2
Unit: $r15 := @caughtexception
Unit: r17 = $r13
Unit: staticinvoke <org.apache.commons.collections4.MultiSetUtils: org.apache.commons.collections4.MultiSet predicatedMultiSet(org.apache.commons.collections4.MultiSet,org.apache.commons.collections4.Predicate)>($r11, $r10)
Unit: $l5 = (long) $i4
Unit: $l3 = (long) $i2
Unit: goto [?= $r8 = r0.<org.apache.commons.collections4.MultiSetUtilsTest: org.apache.commons.collections4.MultiSet multiSet>]
Unit: $i4 = interfaceinvoke $r6.<org.apache.commons.collections4.MultiSet: int getCount(java.lang.Object)>("a")
Unit: $r14 := @caughtexception
Unit: goto [?= return]
Unit: $i2 = interfaceinvoke r2.<org.apache.commons.collections4.MultiSet: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3)
 ====================================== 
** CLASS org.apache.commons.collections4.MapPerformance$1
 ====================================== 
** CLASS org.apache.commons.collections4.list.AbstractListDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method equals : 
	method hashCode : 
	method add : 
	method addAll : 
	method get : 
	method indexOf : 
	method lastIndexOf : 
	method listIterator : 
	method listIterator : 
	method remove : 
	method set : 
	method subList : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.DualTreeBidiMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method createBidiMap : 
	method comparator : 
	method valueComparator : 
	method firstKey : 
	method lastKey : 
	method nextKey : 
	method previousKey : 
	method mapIterator : 
	method inverseSortedBidiMap : 
	method inverseOrderedBidiMap : 
	method headMap : 
	method tailMap : 
	method subMap : 
	method inverseBidiMap : 
	method writeObject : 
	method readObject : 
	method inverseBidiMap : 
	method mapIterator : 
	method createBidiMap : 
	method inverseBidiMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.HashSetValuedHashMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeConfirmedMap : 
	method testSetValuedMapAdd : 
	method testSetValuedMapRemove : 
	method testSetValuedMapRemoveViaIterator : 
	method testSetValuedMapEqualsHashCodeContract : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ArrayIterator2Test
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeArrayIterator : 
	method makeArrayIterator : 
	method makeArrayIterator : 
	method supportsRemove : 
	method testIterator : 
	method testIndexedArray : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.TransformedNavigableSetTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullCollection : 
	method testTransformedSet : 
	method testTransformedSet_decorateTransform : 
	method getCompatibilityVersion : 
	method makeFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.Flat3Map$FlatMapIterator
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method getKey : 
	method getValue : 
	method setValue : 
	method reset : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.PredicatedList
	method predicatedList : 
	method <init> : 
	method decorated : 
	method equals : 
	method hashCode : 
	method get : 
	method indexOf : 
	method lastIndexOf : 
	method remove : 
	method add : 
	method addAll : 
	method listIterator : 
	method listIterator : 
	method set : 
	method subList : 
	method decorated : 
	method access$000 : 
	method access$100 : 
 ====================================== 
** CLASS org.apache.commons.collections4.PredicateUtils
	method <init> : 
	method exceptionPredicate : 
	method truePredicate : 
	method falsePredicate : 
	method nullPredicate : 
	method notNullPredicate : 
	method equalPredicate : 
	method identityPredicate : 
	method instanceofPredicate : 
	method uniquePredicate : 
	method invokerPredicate : 
	method invokerPredicate : 
	method andPredicate : 
	method allPredicate : 
	method allPredicate : 
	method orPredicate : 
	method anyPredicate : 
	method anyPredicate : 
	method eitherPredicate : 
	method onePredicate : 
	method onePredicate : 
	method neitherPredicate : 
	method nonePredicate : 
	method nonePredicate : 
	method notPredicate : 
	method asPredicate : 
	method nullIsExceptionPredicate : 
	method nullIsFalsePredicate : 
	method nullIsTruePredicate : 
	method transformedPredicate : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.TreeList$1
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.NodeListIteratorTest$2
	method <init> : 
	method item : 
	method getLength : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractOrderedMapDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method firstKey : 
	method lastKey : 
	method nextKey : 
	method previousKey : 
	method mapIterator : 
	method decorated : 
	method mapIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.NodeListIteratorTest$1
	method <init> : 
	method item : 
	method getLength : 
 ====================================== 
** CLASS org.apache.commons.collections4.ListUtils$CharSequenceAsList
	method <init> : 
	method get : 
	method size : 
	method get : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.AbstractListIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method supportsAdd : 
	method supportsSet : 
	method addSetValue : 
	method testEmptyListIteratorIsIndeedEmpty : 
	method testWalkForwardAndBack : 
	method testAdd : 
	method testSet : 
	method testRemoveThenSet : 
	method testAddThenSet : 
	method testAddThenRemove : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.IteratorEnumeration
	method <init> : 
	method <init> : 
	method hasMoreElements : 
	method nextElement : 
	method getIterator : 
	method setIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.AbstractLinkedList$Node
	method <init> : 
	method <init> : 
	method <init> : 
	method getValue : 
	method setValue : 
	method getPreviousNode : 
	method setPreviousNode : 
	method getNextNode : 
	method setNextNode : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.AbstractQuantifierPredicate
	method <init> : 
	method getPredicates : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.DefaultedMapTest
	method <init> : 
	method makeObject : 
	method testMapGet : 
	method testMapGet2 : 
	method testMapGet3 : 
	method testMapGet4 : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ExceptionClosure
	method exceptionClosure : 
	method <init> : 
	method execute : 
	method readResolve : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ForClosure
	method forClosure : 
	method <init> : 
	method execute : 
	method getClosure : 
	method getCount : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractSortedMapDecorator$SortedMapIterator
	method <init> : 
	method reset : 
	method hasPrevious : 
	method previous : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.KeepCommand
	method <init> : 
	method accept : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.TreeList$TreeListIterator
	method <init> : 
	method checkModCount : 
	method hasNext : 
	method next : 
	method hasPrevious : 
	method previous : 
	method nextIndex : 
	method previousIndex : 
	method remove : 
	method set : 
	method add : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest$1
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.TreeListTest
	method <init> : 
	method suite : 
	method benchmark : 
	method makeObject : 
	method testAddMultiple : 
	method testRemove : 
	method testInsertBefore : 
	method testIndexOf : 
	method testBug35258 : 
	method testBugCollections447 : 
	method testIterationOrder : 
	method testIterationOrderAfterAddAll : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.PredicatedMapTest
	method <init> : 
	method decorateMap : 
	method makeObject : 
	method makeTestMap : 
	method testEntrySet : 
	method testPut : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.PredicatedMap
	method predicatedMap : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method validate : 
	method checkSetValue : 
	method isSetValueChecking : 
	method put : 
	method putAll : 
	method entrySet : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.CursorableLinkedListTest
	method <init> : 
	method suite : 
	method setUp : 
	method makeObject : 
	method testAdd : 
	method testClear : 
	method testContains : 
	method testContainsAll : 
	method testCursorNavigation : 
	method testCursorSet : 
	method testCursorRemove : 
	method testCursorAdd : 
	method testCursorConcurrentModification : 
	method testCursorNextIndexMid : 
	method testCursorNextIndexFirst : 
	method testCursorNextIndexAddBefore : 
	method testCursorNextIndexAddNext : 
	method testCursorNextIndexAddAfter : 
	method testInternalState_CursorNextNextPreviousRemoveIndex1ByList : 
	method testInternalState_CursorNextRemoveIndex1ByList : 
	method testInternalState_CursorNextNextRemoveIndex1ByList : 
	method testInternalState_CursorNextNextNextRemoveIndex1ByList : 
	method testInternalState_CursorNextNextPreviousRemoveByIterator : 
	method testInternalState_CursorNextNextRemoveByIterator : 
	method testInternalState_CursorNextNextPreviousAddIndex1ByList : 
	method testInternalState_CursorNextAddIndex1ByList : 
	method testInternalState_CursorNextNextAddIndex1ByList : 
	method testInternalState_CursorNextNextPreviousAddByIterator : 
	method testInternalState_CursorNextNextAddByIterator : 
	method testInternalState_CursorNextNextRemoveByListSetByIterator : 
	method testInternalState_CursorNextNextPreviousSetByIterator : 
	method testInternalState_CursorNextNextSetByIterator : 
	method testEqualsAndHashCode : 
	method testGet : 
	method testIndexOf : 
	method testIsEmpty : 
	method testIterator : 
	method testListIteratorNavigation : 
	method testListIteratorSet : 
	method testListIteratorRemove : 
	method testListIteratorAdd : 
	method testRemoveAll : 
	method testRemoveByIndex : 
	method testRemove : 
	method testRetainAll : 
	method testSet : 
	method testSubList : 
	method testSubListAddEnd : 
	method testSubListAddBegin : 
	method testSubListAddMiddle : 
	method testSubListRemove : 
	method testToArray : 
	method testSerialization : 
	method testSerializationWithOpenCursor : 
	method testLongSerialization : 
	method ignoredTests : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.UnmodifiableOrderedMap
	method unmodifiableOrderedMap : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method mapIterator : 
	method clear : 
	method put : 
	method putAll : 
	method remove : 
	method entrySet : 
	method keySet : 
	method values : 
	method mapIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtils$EquatorWrapper
	method <init> : 
	method getObject : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.splitmap.TransformedSplitMap
	method transformingMap : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method transformKey : 
	method transformValue : 
	method transformMap : 
	method checkSetValue : 
	method put : 
	method putAll : 
	method clear : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LinkedMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullMap : 
	method getCompatibilityVersion : 
	method testReset : 
	method testInsertionOrder : 
	method testGetByIndex : 
	method testGetValueByIndex : 
	method testIndexOf : 
	method testRemoveByIndex : 
	method bulkTestListView : 
	method testClone : 
	method getMap : 
	method testInitialCapacityZero : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.SynchronizedBag
	method synchronizedBag : 
	method <init> : 
	method <init> : 
	method getBag : 
	method equals : 
	method hashCode : 
	method add : 
	method remove : 
	method uniqueSet : 
	method getCount : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.MultiValueMapTest
	method <init> : 
	method testNoMappingReturnsNull : 
	method testValueCollectionType : 
	method testMultipleValues : 
	method testContainsValue : 
	method testKeyContainsValue : 
	method testValues : 
	method createTestMap : 
	method createTestMap : 
	method testKeyedIterator : 
	method testRemoveAllViaIterator : 
	method testRemoveAllViaKeyedIterator : 
	method testIterator : 
	method testRemoveAllViaEntryIterator : 
	method testTotalSizeA : 
	method testMapEquals : 
	method testGetCollection : 
	method testTotalSize : 
	method testSize : 
	method testSize_Key : 
	method testIterator_Key : 
	method testContainsValue_Key : 
	method testPutWithList : 
	method testPutWithSet : 
	method testPutAll_Map1 : 
	method testPutAll_Map2 : 
	method testPutAll_KeyCollection : 
	method testRemove_KeyItem : 
	method testUnsafeDeSerialization : 
	method serialize : 
	method deserialize : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeEmptyMap : 
	method testEmptyMapCompatibility : 
	method testFullMapCompatibility : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.WhileClosure
	method whileClosure : 
	method <init> : 
	method execute : 
	method getPredicate : 
	method getClosure : 
	method isDoLoop : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.PredicatedNavigableSetTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.UnmodifiableSortedSetTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullCollection : 
	method isAddSupported : 
	method isRemoveSupported : 
	method setupSet : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method verifyUnmodifiable : 
	method testComparator : 
	method getCompatibilityVersion : 
	method makeFullCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.PredicatedSortedMapTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$2
	method <init> : 
	method executeAndThrow : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$1
	method <init> : 
	method executeAndThrow : 
 ====================================== 
** CLASS org.apache.commons.collections4.SetValuedMap
	method get : 
	method remove : 
	method remove : 
	method get : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ReferenceMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method isAllowNullKey : 
	method isAllowNullValue : 
	method getCompatibilityVersion : 
	method testNullHandling : 
	method buildRefMap : 
	method testPurgeValues : 
	method testCustomPurge : 
	method testDataSizeAfterSerialization : 
	method gc : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method $deserializeLambda$ : 
	method lambda$testCustomPurge$4d3b256b$1 : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap
	method <init> : 
	method <init> : 
	method <init> : 
	method createBidiMap : 
	method writeObject : 
	method readObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.TransformedMultiValuedMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method testKeyTransformedMap : 
	method testValueTransformedMap : 
	method testFactory_Decorate : 
	method testFactory_decorateTransform : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.CatchAndRethrowClosureTest$3
	method <init> : 
	method executeAndThrow : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMap
	method listOrderedMap : 
	method <init> : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method mapIterator : 
	method firstKey : 
	method lastKey : 
	method nextKey : 
	method previousKey : 
	method put : 
	method putAll : 
	method putAll : 
	method remove : 
	method clear : 
	method keySet : 
	method keyList : 
	method values : 
	method valueList : 
	method entrySet : 
	method toString : 
	method get : 
	method getValue : 
	method indexOf : 
	method setValue : 
	method put : 
	method remove : 
	method asList : 
	method mapIterator : 
	method access$000 : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ArrayListIterator2Test
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeArrayListIterator : 
	method makeArrayListIterator : 
	method makeArrayListIterator : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeArrayListIterator : 
	method testListIterator : 
	method testListIteratorSet : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey
	method <init> : 
	method equals : 
	method hashCode : 
	method readResolve : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$1
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.TransformedMultiValuedMap
	method transformingMap : 
	method transformedMap : 
	method <init> : 
	method transformKey : 
	method transformValue : 
	method put : 
	method putAll : 
	method putAll : 
	method putAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$3
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.GrowthListTest
	method <init> : 
	method makeObject : 
	method makeFullCollection : 
	method testGrowthAdd : 
	method testGrowthAddAll : 
	method testGrowthSet1 : 
	method testGrowthSet2 : 
	method testListAddByIndexBoundsChecking : 
	method testListAddByIndexBoundsChecking2 : 
	method testListSetByIndexBoundsChecking : 
	method testListSetByIndexBoundsChecking2 : 
	method getCompatibilityVersion : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$2
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$5
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$4
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$7
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$6
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method getMap : 
	method getConfirmedMap : 
	method supportsRemove : 
	method supportsSetValue : 
	method testOrderedMapIterator : 
	method testDecorateFactory : 
	method getMap : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.SingletonMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method getKey : 
	method getValue : 
	method setValue : 
	method isFull : 
	method maxSize : 
	method get : 
	method size : 
	method isEmpty : 
	method containsKey : 
	method containsValue : 
	method put : 
	method putAll : 
	method remove : 
	method clear : 
	method entrySet : 
	method keySet : 
	method values : 
	method mapIterator : 
	method firstKey : 
	method lastKey : 
	method nextKey : 
	method previousKey : 
	method isEqualKey : 
	method isEqualValue : 
	method clone : 
	method equals : 
	method hashCode : 
	method toString : 
	method clone : 
	method mapIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.MultiMapUtils
	method <init> : 
	method emptyMultiValuedMap : 
	method emptyIfNull : 
	method isEmpty : 
	method getCollection : 
	method getValuesAsList : 
	method getValuesAsSet : 
	method getValuesAsBag : 
	method newListValuedHashMap : 
	method newSetValuedHashMap : 
	method unmodifiableMultiValuedMap : 
	method transformedMultiValuedMap : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$9
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$8
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView
	method <init> : 
	method contains : 
	method remove : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeySet
	method <init> : 
	method getFullElements : 
	method makeObject : 
	method makeFullCollection : 
	method isNullSupported : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isTestSerialization : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMultiSetDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method equals : 
	method hashCode : 
	method getCount : 
	method setCount : 
	method add : 
	method remove : 
	method uniqueSet : 
	method entrySet : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtils
	method <init> : 
	method emptyCollection : 
	method emptyIfNull : 
	method union : 
	method intersection : 
	method disjunction : 
	method subtract : 
	method subtract : 
	method containsAll : 
	method containsAny : 
	method containsAny : 
	method getCardinalityMap : 
	method isSubCollection : 
	method isProperSubCollection : 
	method isEqualCollection : 
	method isEqualCollection : 
	method cardinality : 
	method find : 
	method forAllDo : 
	method forAllDo : 
	method forAllButLastDo : 
	method forAllButLastDo : 
	method filter : 
	method filterInverse : 
	method transform : 
	method countMatches : 
	method exists : 
	method matchesAll : 
	method select : 
	method select : 
	method select : 
	method selectRejected : 
	method selectRejected : 
	method collect : 
	method collect : 
	method collect : 
	method collect : 
	method addIgnoreNull : 
	method addAll : 
	method addAll : 
	method addAll : 
	method addAll : 
	method get : 
	method checkIndexBounds : 
	method get : 
	method get : 
	method get : 
	method size : 
	method sizeIsEmpty : 
	method isEmpty : 
	method isNotEmpty : 
	method reverseArray : 
	method isFull : 
	method maxSize : 
	method collate : 
	method collate : 
	method collate : 
	method collate : 
	method permutations : 
	method retainAll : 
	method retainAll : 
	method removeAll : 
	method removeAll : 
	method synchronizedCollection : 
	method unmodifiableCollection : 
	method predicatedCollection : 
	method transformingCollection : 
	method extractSingleton : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap
	method unmodifiableOrderedBidiMap : 
	method <init> : 
	method clear : 
	method put : 
	method putAll : 
	method remove : 
	method entrySet : 
	method keySet : 
	method values : 
	method removeValue : 
	method inverseBidiMap : 
	method mapIterator : 
	method inverseOrderedBidiMap : 
	method inverseBidiMap : 
	method values : 
	method mapIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method testEmptyMapIterator : 
	method testFullMapIterator : 
	method testMapIteratorOrder : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.UnmodifiableIteratorTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method supportsRemove : 
	method testIterator : 
	method testDecorateFactory : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ArrayListIterator
	method <init> : 
	method <init> : 
	method <init> : 
	method hasPrevious : 
	method previous : 
	method next : 
	method nextIndex : 
	method previousIndex : 
	method add : 
	method set : 
	method reset : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractBidiMapTest
	method <init> : 
	method <init> : 
	method makeFullMap : 
	method makeObject : 
	method isAllowDuplicateValues : 
	method getCompatibilityVersion : 
	method testBidiPut : 
	method verify : 
	method verifyInverse : 
	method testBidiGetKey : 
	method testBidiGetKeyInverse : 
	method doTestGetKey : 
	method testBidiInverse : 
	method testBidiModifyEntrySet : 
	method modifyEntrySet : 
	method testBidiClear : 
	method testBidiRemove : 
	method remove : 
	method removeValue : 
	method testBidiKeySetValuesOrder : 
	method testBidiRemoveByKeySet : 
	method removeByKeySet : 
	method testBidiRemoveByEntrySet : 
	method removeByEntrySet : 
	method getMap : 
	method bulkTestMapEntrySet : 
	method bulkTestInverseMap : 
	method bulkTestBidiMapIterator : 
	method testBidiMapIteratorSet : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.PrototypeFactory
	method prototypeFactory : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ReverseListIterator
	method <init> : 
	method hasNext : 
	method next : 
	method nextIndex : 
	method hasPrevious : 
	method previous : 
	method previousIndex : 
	method remove : 
	method set : 
	method add : 
	method reset : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.PredicatedCollectionTest
	method <init> : 
	method decorateCollection : 
	method makeObject : 
	method makeConfirmedCollection : 
	method getFullElements : 
	method makeFullCollection : 
	method makeConfirmedFullCollection : 
	method makeTestCollection : 
	method testIllegalAdd : 
	method testIllegalAddAll : 
	method getCompatibilityVersion : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.ComparatorChainTest$ColumnComparator
	method <init> : 
	method compare : 
	method hashCode : 
	method equals : 
	method compare : 
 ====================================== 
** CLASS org.apache.commons.collections4.MapPerformance
	method <init> : 
	method main : 
	method testAll : 
	method test : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$1
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet
	method <init> : 
	method iterator : 
	method size : 
	method contains : 
	method remove : 
	method clear : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractListValuedMap$WrappedList
	method <init> : 
	method getMapping : 
	method add : 
	method addAll : 
	method get : 
	method indexOf : 
	method lastIndexOf : 
	method listIterator : 
	method listIterator : 
	method remove : 
	method set : 
	method subList : 
	method equals : 
	method hashCode : 
	method getMapping : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator
	method <init> : 
	method decorated : 
	method size : 
	method isEmpty : 
	method containsKey : 
	method containsValue : 
	method containsMapping : 
	method get : 
	method remove : 
	method removeMapping : 
	method clear : 
	method put : 
	method keySet : 
	method entries : 
	method keys : 
	method values : 
	method asMap : 
	method putAll : 
	method putAll : 
	method putAll : 
	method mapIterator : 
	method equals : 
	method hashCode : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ReferenceMapTest$AccessibleEntry
	method <init> : 
	method onPurge : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.SynchronizedQueue
	method synchronizedQueue : 
	method <init> : 
	method <init> : 
	method decorated : 
	method element : 
	method equals : 
	method hashCode : 
	method offer : 
	method peek : 
	method poll : 
	method remove : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest
	method <init> : 
	method addPass : 
Unit: $r3 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List createPredicatedList()>()
Unit: r1 = staticinvoke <org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.collection.PredicatedCollection$Builder notNullBuilder()>()
Unit: $i0 = interfaceinvoke $r3.<java.util.List: int size()>()
Unit: r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest
Unit: return
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L)
Unit: virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>("test")
	method addFail : 
Unit: $r4 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List createPredicatedList()>()
Unit: $r2 = (java.lang.String) null
Unit: $r5 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.Collection rejectedElements()>()
Unit: $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>()
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: r1 = staticinvoke <org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.collection.PredicatedCollection$Builder notNullBuilder()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $i0 = interfaceinvoke $r5.<java.util.Collection: int size()>()
Unit: virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>($r2)
Unit: r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest
Unit: return
	method addAllPass : 
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 2L)
Unit: r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest
Unit: r1 = staticinvoke <org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.collection.PredicatedCollection$Builder notNullBuilder()>()
Unit: $r2 = newarray (java.lang.String)[3]
Unit: $r2[1] = null
Unit: $r2[0] = "test1"
Unit: $r2[2] = "test2"
Unit: virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder addAll(java.util.Collection)>($r3)
Unit: return
Unit: $r5 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List createPredicatedList()>()
Unit: $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)
Unit: $i0 = interfaceinvoke $r5.<java.util.List: int size()>()
	method createPredicatedCollectionWithNotNullPredicate : 
Unit: return
Unit: specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection1(java.util.Collection)>(r2)
Unit: r5 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.Queue createPredicatedQueue()>()
Unit: specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection1(java.util.Collection)>(r5)
Unit: virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>($r7)
Unit: specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection1(java.util.Collection)>(r3)
Unit: virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>("test1")
Unit: r4 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.Bag createPredicatedBag()>()
Unit: r1 = staticinvoke <org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.collection.PredicatedCollection$Builder notNullBuilder()>()
Unit: r3 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.Set createPredicatedSet()>()
Unit: specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection1(java.util.Collection)>(r4)
Unit: $r7 = (java.lang.String) null
Unit: r2 = virtualinvoke r1.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List createPredicatedList()>()
Unit: r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest
	method checkPredicatedCollection1 : 
	method createPredicatedCollectionWithPredicate : 
Unit: r4 = virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.Set createPredicatedSet()>()
Unit: specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection2(java.util.Collection)>(r4)
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: r5 = virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.Bag createPredicatedBag()>()
Unit: $r7 = new org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest$OddPredicate
Unit: r2 = staticinvoke <org.apache.commons.collections4.collection.PredicatedCollection: org.apache.commons.collections4.collection.PredicatedCollection$Builder builder(org.apache.commons.collections4.Predicate)>(r1)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: return
Unit: virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>($r12)
Unit: r6 = virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.Queue createPredicatedQueue()>()
Unit: specialinvoke $r7.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest$OddPredicate: void <init>(org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest$1)>(null)
Unit: r3 = virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: java.util.List createPredicatedList()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>($r8)
Unit: virtualinvoke r2.<org.apache.commons.collections4.collection.PredicatedCollection$Builder: org.apache.commons.collections4.collection.PredicatedCollection$Builder add(java.lang.Object)>($r10)
Unit: r0 := @this: org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection2(java.util.Collection)>(r6)
Unit: specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection2(java.util.Collection)>(r3)
Unit: r1 = $r7
Unit: specialinvoke r0.<org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest: void checkPredicatedCollection2(java.util.Collection)>(r5)
	method checkPredicatedCollection2 : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator
	method <init> : 
	method decorated : 
	method inverseBidiMap : 
	method comparator : 
	method valueComparator : 
	method subMap : 
	method headMap : 
	method tailMap : 
	method inverseBidiMap : 
	method decorated : 
	method inverseBidiMap : 
	method decorated : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.AbstractQueueTest
	method <init> : 
	method isSetSupported : 
	method verify : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method getCollection : 
	method testQueueOffer : 
	method testQueueElement : 
	method testQueuePeek : 
	method testQueueRemove : 
	method testQueuePoll : 
	method testEmptyQueueSerialization : 
	method testFullQueueSerialization : 
	method testEmptyQueueCompatibility : 
	method testFullQueueCompatibility : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.TransformedSet
	method transformingSet : 
	method transformedSet : 
	method <init> : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.FixedSizeSortedMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullMap : 
	method isSubMapViewsSerializable : 
	method isPutAddSupported : 
	method isRemoveSupported : 
	method getCompatibilityVersion : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LazySortedMapTest
	method <init> : 
	method makeObject : 
	method isAllowNullKey : 
	method testMapGet : 
	method mapGet : 
	method testSortOrder : 
	method testTransformerDecorate : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterListIterator
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method add : 
	method hasNext : 
	method hasPrevious : 
	method next : 
	method nextIndex : 
	method previous : 
	method previousIndex : 
	method remove : 
	method set : 
	method getListIterator : 
	method setListIterator : 
	method getPredicate : 
	method setPredicate : 
	method clearNextObject : 
	method setNextObject : 
	method clearPreviousObject : 
	method setPreviousObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.ListUtils
	method <init> : 
	method emptyIfNull : 
	method defaultIfNull : 
	method intersection : 
	method subtract : 
	method sum : 
	method union : 
	method select : 
	method selectRejected : 
	method isEqualList : 
	method hashCodeForList : 
	method retainAll : 
	method removeAll : 
	method synchronizedList : 
	method unmodifiableList : 
	method predicatedList : 
	method transformedList : 
	method lazyList : 
	method fixedSizeList : 
	method indexOf : 
	method longestCommonSubsequence : 
	method longestCommonSubsequence : 
	method longestCommonSubsequence : 
	method partition : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.ComparatorChainTest$PseudoRow
	method <init> : 
	method getColumn : 
	method toString : 
	method equals : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ArrayIterator
	method <init> : 
	method <init> : 
	method <init> : 
	method checkBound : 
	method hasNext : 
	method next : 
	method remove : 
	method getArray : 
	method getStartIndex : 
	method getEndIndex : 
	method reset : 
 ====================================== 
** CLASS org.apache.commons.collections4.TransformerUtilsTest$1
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.ReverseComparatorTest
	method <init> : 
	method makeObject : 
	method getCompatibilityVersion : 
	method getComparableObjectsOrdered : 
	method testSerializeDeserializeThenCompare : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.UnmodifiableSortedMap
	method unmodifiableSortedMap : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method clear : 
	method put : 
	method putAll : 
	method remove : 
	method entrySet : 
	method keySet : 
	method values : 
	method firstKey : 
	method lastKey : 
	method comparator : 
	method subMap : 
	method headMap : 
	method tailMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.TreeList
	method <init> : 
	method <init> : 
	method get : 
	method size : 
	method iterator : 
	method listIterator : 
	method listIterator : 
	method indexOf : 
	method contains : 
	method toArray : 
	method add : 
	method addAll : 
	method set : 
	method remove : 
	method clear : 
	method checkInterval : 
	method access$500 : 
	method access$600 : 
	method access$700 : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMap2Test$TestListView
	method <init> : 
	method makeObject : 
	method makeFullCollection : 
	method getFullElements : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isSetSupported : 
	method isNullSupported : 
	method isTestSerialization : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator
	method <init> : 
	method next : 
	method remove : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList
	method <init> : 
	method size : 
	method get : 
	method add : 
	method remove : 
	method addAll : 
	method addAll : 
	method set : 
	method clear : 
	method iterator : 
	method listIterator : 
	method subList : 
	method rangeCheck : 
	method checkModCount : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.CollatingIterator
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method addIterator : 
	method setIterator : 
	method getIterators : 
	method getComparator : 
	method setComparator : 
	method hasNext : 
	method next : 
	method remove : 
	method getIteratorIndex : 
	method start : 
	method set : 
	method clear : 
	method checkNotStarted : 
	method least : 
	method anyValueSet : 
	method anyHasNext : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.TransformedMap
	method transformingMap : 
	method transformedMap : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method transformKey : 
	method transformValue : 
	method transformMap : 
	method checkSetValue : 
	method isSetValueChecking : 
	method put : 
	method putAll : 
	method entrySet : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.IteratorEnumerationTest
	method <init> : 
	method testEnumeration : 
Unit: $r9 = virtualinvoke r2.<org.apache.commons.collections4.iterators.IteratorEnumeration: java.lang.Object nextElement()>()
Unit: $z1 = virtualinvoke r2.<org.apache.commons.collections4.iterators.IteratorEnumeration: boolean hasMoreElements()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.IteratorEnumeration: java.lang.Object nextElement()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r7)
Unit: $r12 := @caughtexception
Unit: $r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.IteratorEnumeration: java.util.Iterator getIterator()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("NoSuchElementException expected")
Unit: $r4 = newarray (java.lang.String)[3]
Unit: $r6 = new org.apache.commons.collections4.iterators.IteratorEnumeration
Unit: $r10 = virtualinvoke r2.<org.apache.commons.collections4.iterators.IteratorEnumeration: java.lang.Object nextElement()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r10)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8)
Unit: specialinvoke $r6.<org.apache.commons.collections4.iterators.IteratorEnumeration: void <init>(java.util.Iterator)>(r1)
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.IteratorEnumeration: java.lang.Object nextElement()>()
Unit: r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: $r4[0] = "a"
Unit: $r4[1] = "b"
Unit: r3 = $r12
Unit: $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)
Unit: r2 = $r6
Unit: r0 := @this: org.apache.commons.collections4.iterators.IteratorEnumerationTest
Unit: $z0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.IteratorEnumeration: boolean hasMoreElements()>()
Unit: $r4[2] = "c"
 ====================================== 
** CLASS org.apache.commons.collections4.trie.UnmodifiableTrieTest
	method <init> : 
	method suite : 
	method makeObject : 
	method isPutChangeSupported : 
	method isPutAddSupported : 
	method isRemoveSupported : 
	method makeFullMap : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method ignoredTests : 
	method getCompatibilityVersion : 
	method makeFullMap : 
	method makeObject : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMultiSetTest
	method <init> : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method resetEmpty : 
	method resetFull : 
	method getCollection : 
	method testMultiSetAdd : 
	method testMultiSetEqualsSelf : 
	method testMultiSetRemove : 
	method testMultiSetRemoveAll : 
	method testMultiSetContains : 
	method testMultiSetContainsAll : 
	method testMultiSetSize : 
	method testMultiSetRetainAll : 
	method testMultiSetIterator : 
	method testMultiSetIteratorFail : 
	method testMultiSetIteratorFailNoMore : 
	method testMultiSetIteratorFailDoubleRemove : 
	method testMultiSetIteratorRemoveProtectsInvariants : 
	method testMultiSetToArray : 
	method testMultiSetToArrayPopulate : 
	method testMultiSetEquals : 
	method testMultiSetEqualsHashMultiSet : 
	method testMultiSetHashCode : 
	method bulkTestMultiSetUniqueSet : 
	method testEmptyMultiSetCompatibility : 
	method testFullMultiSetCompatibility : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView
	method <init> : 
	method iterator : 
	method contains : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.CircularFifoQueue$1
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.SynchronizedCollection
	method synchronizedCollection : 
	method <init> : 
	method <init> : 
	method decorated : 
	method add : 
	method addAll : 
	method clear : 
	method contains : 
	method containsAll : 
	method isEmpty : 
	method iterator : 
	method toArray : 
	method toArray : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method size : 
	method equals : 
	method hashCode : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.PredicatedBagTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest
	method suite : 
	method <init> : 
	method makeObject : 
	method makeFullMap : 
	method makeConfirmedMap : 
	method ignoredTests : 
	method isPutAddSupported : 
	method isPutChangeSupported : 
	method isRemoveSupported : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method makeFullMap : 
	method makeObject : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$View
	method <init> : 
	method size : 
	method clear : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ObjectArrayIterator
	method <init> : 
	method <init> : 
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method getArray : 
	method getStartIndex : 
	method getEndIndex : 
	method reset : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.StaticBucketMap$EntryIterator
	method <init> : 
	method next : 
	method next : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator
	method <init> : 
	method addSetValues : 
	method supportsRemove : 
	method supportsSetValue : 
	method makeEmptyIterator : 
	method makeObject : 
	method getMap : 
	method getConfirmedMap : 
	method verify : 
	method getMap : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableMap
 ====================================== 
** CLASS org.apache.commons.collections4.map.StaticBucketMap$BaseIterator
	method <init> : 
	method hasNext : 
	method nextEntry : 
	method remove : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.CollectionSortedBag
	method collectionSortedBag : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method containsAll : 
	method add : 
	method addAll : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method add : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMapTest$TestKeyListView
	method <init> : 
	method makeObject : 
	method makeFullCollection : 
	method getFullElements : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isSetSupported : 
	method isNullSupported : 
	method isTestSerialization : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$Values
	method <init> : 
	method iterator : 
	method size : 
	method clear : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.MultiValueMap$1$1$1
	method <init> : 
	method getKey : 
	method getValue : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.IfClosure
	method ifClosure : 
	method ifClosure : 
	method <init> : 
	method <init> : 
	method execute : 
	method getPredicate : 
	method getTrueClosure : 
	method getFalseClosure : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.AbstractMapBag$MutableInteger
	method <init> : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry
	method <init> : 
	method isEmpty : 
	method isInternalNode : 
	method isExternalNode : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.FixedSizeMapTest
	method <init> : 
	method makeObject : 
	method makeFullMap : 
	method isPutAddSupported : 
	method isRemoveSupported : 
	method getCompatibilityVersion : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.PeekingIteratorTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method supportsRemove : 
	method testEmpty : 
	method testSinglePeek : 
	method testMultiplePeek : 
	method testIteratorExhausted : 
	method testIllegalRemove : 
	method validate : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.SynchronizedSortedBag
	method synchronizedSortedBag : 
	method <init> : 
	method <init> : 
	method getSortedBag : 
	method first : 
	method last : 
	method comparator : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.MultiValueMap
	method multiValueMap : 
	method multiValueMap : 
	method multiValueMap : 
	method <init> : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method clear : 
	method removeMapping : 
	method containsValue : 
	method put : 
	method putAll : 
	method entrySet : 
	method values : 
	method containsValue : 
	method getCollection : 
	method size : 
	method putAll : 
	method iterator : 
	method iterator : 
	method totalSize : 
	method createCollection : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.TransformedSortedSet
	method transformingSortedSet : 
	method transformedSortedSet : 
	method <init> : 
	method getSortedSet : 
	method first : 
	method last : 
	method comparator : 
	method subSet : 
	method headSet : 
	method tailSet : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.CatchAndRethrowClosureTest
	method <init> : 
	method generateIOExceptionClosure : 
	method generateNullPointerExceptionClosure : 
	method generateNoExceptionClosure : 
	method generateClosure : 
	method testThrowingClosure : 
Unit: r16 = staticinvoke <org.apache.commons.collections4.functors.CatchAndRethrowClosureTest: org.apache.commons.collections4.Closure generateNullPointerExceptionClosure()>()
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: interfaceinvoke r16.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>($r17)
Unit: $r8 := @caughtexception
Unit: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: interfaceinvoke r12.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>($r13)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r15 = $r2
Unit: goto [?= r16 = staticinvoke <org.apache.commons.collections4.functors.CatchAndRethrowClosureTest: org.apache.commons.collections4.Closure generateNullPointerExceptionClosure()>()]
Unit: goto [?= r12 = staticinvoke <org.apache.commons.collections4.functors.CatchAndRethrowClosureTest: org.apache.commons.collections4.Closure generateIOExceptionClosure()>()]
Unit: r18 = $r7
Unit: r9 = staticinvoke <org.apache.commons.collections4.functors.CatchAndRethrowClosureTest: org.apache.commons.collections4.Closure generateNoExceptionClosure()>()
Unit: $z1 = r19 instanceof java.lang.NullPointerException
Unit: r0 := @this: org.apache.commons.collections4.functors.CatchAndRethrowClosureTest
Unit: r10 = $r3
Unit: r12 = staticinvoke <org.apache.commons.collections4.functors.CatchAndRethrowClosureTest: org.apache.commons.collections4.Closure generateIOExceptionClosure()>()
Unit: r19 = $r8
Unit: r11 = $r4
Unit: r14 = $r5
Unit: goto [?= r16 = staticinvoke <org.apache.commons.collections4.functors.CatchAndRethrowClosureTest: org.apache.commons.collections4.Closure generateNullPointerExceptionClosure()>()]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r5 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $z0 = $r6 instanceof java.io.IOException
Unit: $r4 := @caughtexception
Unit: $r6 = virtualinvoke r14.<org.apache.commons.collections4.FunctorException: java.lang.Throwable getCause()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: goto [?= r12 = staticinvoke <org.apache.commons.collections4.functors.CatchAndRethrowClosureTest: org.apache.commons.collections4.Closure generateIOExceptionClosure()>()]
Unit: $r2 := @caughtexception
Unit: $r7 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r3 := @caughtexception
Unit: interfaceinvoke r9.<org.apache.commons.collections4.Closure: void execute(java.lang.Object)>($r1)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: goto [?= return]
Unit: return
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.SkippingIteratorTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method testSkipping : 
	method testSameAsDecorated : 
	method testOffsetGreaterThanSize : 
	method testNegativeOffset : 
	method testRemoveWithoutCallingNext : 
	method testRemoveCalledTwice : 
	method testRemoveFirst : 
	method testRemoveMiddle : 
	method testRemoveLast : 
	method testRemoveUnsupported : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ListIteratorWrapperTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method testIterator : 
	method testRemove : 
	method testReset : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.TransformedSortedSetTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullCollection : 
	method testTransformedSet : 
	method testTransformedSet_decorateTransform : 
	method getCompatibilityVersion : 
	method makeFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.Unmodifiable
 ====================================== 
** CLASS org.apache.commons.collections4.MapUtils
	method <init> : 
	method getObject : 
	method getString : 
	method getBoolean : 
	method getNumber : 
	method getByte : 
	method getShort : 
	method getInteger : 
	method getLong : 
	method getFloat : 
	method getDouble : 
	method getMap : 
	method getObject : 
	method getString : 
	method getBoolean : 
	method getNumber : 
	method getByte : 
	method getShort : 
	method getInteger : 
	method getLong : 
	method getFloat : 
	method getDouble : 
	method getMap : 
	method getBooleanValue : 
	method getByteValue : 
	method getShortValue : 
	method getIntValue : 
	method getLongValue : 
	method getFloatValue : 
	method getDoubleValue : 
	method getBooleanValue : 
	method getByteValue : 
	method getShortValue : 
	method getIntValue : 
	method getLongValue : 
	method getFloatValue : 
	method getDoubleValue : 
	method toProperties : 
	method toMap : 
	method verbosePrint : 
	method debugPrint : 
	method verbosePrintInternal : 
	method printIndent : 
	method invertMap : 
	method safeAddToMap : 
	method putAll : 
	method emptyIfNull : 
	method isEmpty : 
	method isNotEmpty : 
	method synchronizedMap : 
	method unmodifiableMap : 
	method predicatedMap : 
	method transformedMap : 
	method fixedSizeMap : 
	method lazyMap : 
	method lazyMap : 
	method orderedMap : 
	method multiValueMap : 
	method multiValueMap : 
	method multiValueMap : 
	method synchronizedSortedMap : 
	method unmodifiableSortedMap : 
	method predicatedSortedMap : 
	method transformedSortedMap : 
	method fixedSizeSortedMap : 
	method lazySortedMap : 
	method lazySortedMap : 
	method populateMap : 
	method populateMap : 
	method populateMap : 
	method populateMap : 
	method iterableMap : 
	method iterableSortedMap : 
	method size : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.HashBagTest
	method <init> : 
	method suite : 
	method makeObject : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test
	method suite : 
	method <init> : 
	method makeObject : 
	method makeConfirmedMap : 
	method testComparator : 
	method testComparator2 : 
	method testSerializeDeserializeCheckComparator : 
	method testCollections364 : 
	method testSortOrder : 
	method getCompatibilityVersion : 
	method ignoredTests : 
	method makeConfirmedMap : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method makeConfirmedMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.SortedBag
	method comparator : 
	method first : 
	method last : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator
	method <init> : 
	method hasNext : 
	method next : 
	method getKey : 
	method getValue : 
	method remove : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.AbstractSetTest
	method <init> : 
	method verify : 
	method isEqualsCheckable : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method getCollection : 
	method getConfirmed : 
	method testSetEquals : 
	method testSetHashCode : 
	method getConfirmed : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.ResettableIterator
	method reset : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.StaticBucketMap$EntrySet
	method <init> : 
	method size : 
	method clear : 
	method iterator : 
	method contains : 
	method remove : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.MapBackedSet2Test
	method <init> : 
	method makeObject : 
	method setupSet : 
	method testOrdering : 
	method testCanonicalEmptyCollectionExists : 
	method testCanonicalFullCollectionExists : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry
	method <init> : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.IdentityMap$IdentityEntry
	method <init> : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.OrderedIterator
	method hasPrevious : 
	method previous : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.AbstractNavigableSetDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method lower : 
	method floor : 
	method ceiling : 
	method higher : 
	method pollFirst : 
	method pollLast : 
	method descendingSet : 
	method descendingIterator : 
	method subSet : 
	method headSet : 
	method tailSet : 
	method decorated : 
	method decorated : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractDualBidiMap$Values
	method <init> : 
	method iterator : 
	method contains : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ExceptionPredicate
	method exceptionPredicate : 
	method <init> : 
	method evaluate : 
	method readResolve : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.ClosureUtilsTest$MockClosure
	method <init> : 
	method execute : 
	method reset : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapEntry
	method <init> : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest$3
	method <init> : 
	method uncaughtException : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator
	method <init> : 
	method getKey : 
	method getValue : 
	method setValue : 
	method next : 
	method previous : 
	method previous : 
	method setValue : 
	method getValue : 
	method getKey : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest$2
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.PredicatedSortedSet
	method predicatedSortedSet : 
	method <init> : 
	method decorated : 
	method comparator : 
	method first : 
	method last : 
	method subSet : 
	method headSet : 
	method tailSet : 
	method decorated : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest$1
	method <init> : 
	method uncaughtException : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest$7
	method <init> : 
	method uncaughtException : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.CompositeMapTest
	method <init> : 
	method setUp : 
	method makeObject : 
	method buildOne : 
	method buildTwo : 
	method testGet : 
	method testAddComposited : 
	method testRemoveComposited : 
	method testRemoveFromUnderlying : 
	method testRemoveFromComposited : 
	method testResolveCollision : 
	method testPut : 
	method testPutAll : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method access$002 : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest$6
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.IteratorIterable$1
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest$5
	method <init> : 
	method uncaughtException : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest$4
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.NullPredicateTest
	method <init> : 
	method testNullPredicate : 
Unit: $r1 = staticinvoke <org.apache.commons.collections4.functors.NullPredicate: org.apache.commons.collections4.Predicate nullPredicate()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r1, $r2)
Unit: r0 := @this: org.apache.commons.collections4.functors.NullPredicateTest
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.NullPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>($r3, null)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.NullPredicate: org.apache.commons.collections4.Predicate nullPredicate()>()
Unit: $r3 = staticinvoke <org.apache.commons.collections4.functors.NullPredicate: org.apache.commons.collections4.Predicate nullPredicate()>()
	method ensurePredicateCanBeTypedWithoutWarning : 
Unit: $r2 = r0.<org.apache.commons.collections4.functors.NullPredicateTest: java.lang.String cString>
Unit: r1 = staticinvoke <org.apache.commons.collections4.functors.NullPredicate: org.apache.commons.collections4.Predicate nullPredicate()>()
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.NullPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r1, $r2)
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.functors.NullPredicateTest
	method generatePredicate : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.StaticBucketMap$KeySet
	method <init> : 
	method size : 
	method clear : 
	method iterator : 
	method contains : 
	method remove : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest$8
	method <init> : 
	method run : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator
	method <init> : 
	method hasNext : 
	method next : 
	method hasPrevious : 
	method previous : 
	method remove : 
	method getKey : 
	method getValue : 
	method setValue : 
	method reset : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer
	method <init> : 
	method transform : 
	method transform : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.AbstractSortedSetTest$TestSortedSetSubSet
	method <init> : 
	method <init> : 
	method isNullSupported : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isFailFastSupported : 
	method getFullElements : 
	method getOtherElements : 
	method getSubSet : 
	method makeObject : 
	method makeFullCollection : 
	method isTestSerialization : 
	method bulkTestSortedSetSubSet : 
	method bulkTestSortedSetHeadSet : 
	method bulkTestSortedSetTailSet : 
	method getConfirmed : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeConfirmedCollection : 
	method getConfirmed : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.NOPClosure
	method nopClosure : 
	method <init> : 
	method execute : 
	method readResolve : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapTest
	method <init> : 
	method <init> : 
	method testFirstKey : 
	method testLastKey : 
	method testNextKey : 
	method testPreviousKey : 
	method bulkTestOrderedMapIterator : 
	method getMap : 
	method getMap : 
	method getMap : 
	method getMap : 
	method access$000 : 
	method access$100 : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap
	method <init> : 
	method <init> : 
	method firstKey : 
	method lastKey : 
	method createEntrySet : 
	method getFromKey : 
	method getToKey : 
	method isFromInclusive : 
	method isToInclusive : 
	method createRangeMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.PredicatedMultiSetTest
	method <init> : 
	method suite : 
	method stringPredicate : 
	method decorateMultiSet : 
	method makeObject : 
	method makeTestMultiSet : 
	method testLegalAddRemove : 
	method testIllegalAdd : 
	method testIllegalDecorate : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.ArrayUtils
	method <init> : 
	method contains : 
	method indexOf : 
	method indexOf : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator
	method <init> : 
	method decorated : 
	method mapIterator : 
	method getKey : 
	method removeValue : 
	method inverseBidiMap : 
	method values : 
	method values : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.MultiKeyTest
	method <init> : 
	method testConstructors : 
Unit: $r24 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r37 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $r18 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r4 = newarray (java.lang.Object)[2]
Unit: $r34[2] = $r37
Unit: $r26 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r41 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r42[3] = $r46
Unit: r57 = $r41
Unit: $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r4, $r7)
Unit: $r23 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r40 = virtualinvoke r56.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: $r42[0] = $r43
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $r20 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r14 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r22 = newarray (java.lang.Object)[4]
Unit: $z3 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r34, $r40)
Unit: $r30 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r46 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r21 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r3 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r22, $r27)
Unit: $r51 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r22[0] = $r23
Unit: $r12[1] = $r14
Unit: $r42 = newarray (java.lang.Integer)[4]
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest
Unit: specialinvoke $r8.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, $r9)
Unit: $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r12, $r16)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $r22[2] = $r25
Unit: $r36 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: specialinvoke $r17.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r21, $r20, $r19, $r18)
Unit: $r27 = virtualinvoke r55.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: $r47[3] = $r51
Unit: $r6 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r34 = newarray (java.lang.Object)[5]
Unit: $r25 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $r2 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $r17 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r34[1] = $r36
Unit: $r42[2] = $r45
Unit: $r1 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r34[4] = $r39
Unit: specialinvoke $r28.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r33, $r32, $r31, $r30, $r29)
Unit: return
Unit: $r12[2] = $r15
Unit: $r32 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r38 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r12 = newarray (java.lang.Object)[3]
Unit: $r42[1] = $r44
Unit: r53 = $r1
Unit: $r33 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: r55 = $r17
Unit: $r45 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r47 = newarray (java.lang.Object)[4]
Unit: $r4[1] = $r6
Unit: $r28 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r29 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>
Unit: $r16 = virtualinvoke r54.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: $r47[1] = $r49
Unit: $r48 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $r52 = virtualinvoke r57.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: $r34[3] = $r38
Unit: $r7 = virtualinvoke r53.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: $r43 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $r12[0] = $r13
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r47, $r52)
Unit: $r8 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: r56 = $r28
Unit: $r50 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: specialinvoke $r1.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r3, $r2)
Unit: $r34[0] = $r35
Unit: $r39 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $r22[1] = $r24
Unit: $r15 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: r54 = $r8
Unit: $r22[3] = $r26
Unit: $r31 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $r35 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: specialinvoke $r41.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>($r42, 0)
Unit: $r13 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r10 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r47[0] = $r48
Unit: $r19 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r4[0] = $r5
Unit: $r44 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r47[2] = $r50
Unit: $r49 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
	method testConstructorsByArray : 
Unit: $r12 = virtualinvoke r62.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: $r36[2] = $r39
Unit: $r7[3] = $r11
Unit: $r48[2] = $r51
Unit: $r57 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r7[2] = $r10
Unit: $r47 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r15 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $r20 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r54 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>
Unit: $r33 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r38 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r1[3] = $r5
Unit: $r23[3] = $r27
Unit: $r50 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r32 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r42[2] = $r45
Unit: $r21 = newarray (java.lang.Object)[0]
Unit: $r52 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r34 = virtualinvoke r66.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: $r36 = newarray (java.lang.Object)[4]
Unit: $r58 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: $r36[3] = $r40
Unit: $r56 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $r55[0] = $r56
Unit: $r35 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>
Unit: r67[3] = $r54
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest
Unit: $r14[3] = $r18
Unit: $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r14, $r19)
Unit: $r1[0] = $r2
Unit: $r10 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r18 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r14 = newarray (java.lang.Object)[4]
Unit: $r30 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: r67 = $r42
Unit: r65 = $r23
Unit: $r31 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: r64 = $r20
Unit: $r28 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r19 = virtualinvoke r62.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: $z3 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r29, $r34)
Unit: $r1[1] = $r3
Unit: $z6 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r55, $r60)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r7 = newarray (java.lang.Object)[4]
Unit: $r42[3] = $r46
Unit: $r48[3] = $r52
Unit: $r1 = newarray (java.lang.Integer)[4]
Unit: return
Unit: $r36[1] = $r38
Unit: $r42[0] = $r43
Unit: $r1[2] = $r4
Unit: r61 = $r1
Unit: $r48[0] = $r49
Unit: $r44 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r45 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r21, $r22)
Unit: r65[3] = $r35
Unit: $r14[0] = $r15
Unit: specialinvoke $r28.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>(r65, 1)
Unit: $r51 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r55[2] = $r58
Unit: $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r27 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r29 = newarray (java.lang.Object)[4]
Unit: $r23[0] = $r24
Unit: $r25 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r39 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r40 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r6 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r55 = newarray (java.lang.Object)[4]
Unit: $r48 = newarray (java.lang.Object)[4]
Unit: $r42 = newarray (java.lang.Integer)[4]
Unit: $r59 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $r14[1] = $r16
Unit: $r3 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r23 = newarray (java.lang.Integer)[4]
Unit: specialinvoke $r47.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>(r67, 0)
Unit: $r41 = virtualinvoke r66.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: r66 = $r28
Unit: $r55[1] = $r57
Unit: r63 = newarray (java.lang.Integer)[0]
Unit: $r55[3] = $r59
Unit: $r13 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>
Unit: $r37 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $z5 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r48, $r53)
Unit: $r14[2] = $r17
Unit: $r8 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r36, $r41)
Unit: $r23[2] = $r26
Unit: $r48[1] = $r50
Unit: specialinvoke $r6.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>(r61)
Unit: $r4 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r29[2] = $r32
Unit: $r7[0] = $r8
Unit: $r36[0] = $r37
Unit: $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r12)
Unit: $r46 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r29[1] = $r31
Unit: $r49 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: r61[3] = $r13
Unit: $r17 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: specialinvoke $r20.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>(r63)
Unit: $r22 = virtualinvoke r64.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: $r26 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r16 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r24 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $r42[1] = $r44
Unit: $r29[3] = $r33
Unit: $r7[1] = $r9
Unit: $r43 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $r60 = virtualinvoke r68.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: r62 = $r6
Unit: $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r53 = virtualinvoke r68.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: r68 = $r47
Unit: $r2 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $r29[0] = $r30
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: $r23[1] = $r25
	method testConstructorsByArrayNull : 
Unit: $r3 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: specialinvoke $r2.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>(null, 1)
Unit: $r4 := @caughtexception
Unit: return
Unit: specialinvoke $r3.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>(null, 0)
Unit: $r6 := @caughtexception
Unit: goto [?= $r2 = new org.apache.commons.collections4.keyvalue.MultiKey]
Unit: goto [?= $r3 = new org.apache.commons.collections4.keyvalue.MultiKey]
Unit: specialinvoke $r1.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>(null)
Unit: $r5 := @caughtexception
Unit: $r1 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r2 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: goto [?= return]
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest
Unit: staticinvoke <org.junit.Assert: void fail()>()
	method testSize : 
Unit: $r19 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $r13 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r35 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r15 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r9 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r21 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: specialinvoke $r28.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>($r29)
Unit: $l13 = (long) $i12
Unit: $r7 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r33 = newarray (java.lang.Integer)[7]
Unit: specialinvoke $r22.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null, null, null)
Unit: $i6 = virtualinvoke $r9.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>()
Unit: $i12 = virtualinvoke $r16.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>()
Unit: $r33[2] = $r36
Unit: $l5 = (long) $i4
Unit: $r29[1] = $r31
Unit: $r25 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r27 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r36 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $i20 = virtualinvoke $r28.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>()
Unit: $r26[0] = $r27
Unit: specialinvoke $r1.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r3, $r2)
Unit: $l11 = (long) $i10
Unit: $r39 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $l19 = (long) $i18
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5)
Unit: $r8 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $i4 = virtualinvoke $r5.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>()
Unit: $i0 = virtualinvoke $r1.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>()
Unit: $r2 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(7L, $l23)
Unit: $r33[4] = $r38
Unit: $r22 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r17 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FIVE>
Unit: $i22 = virtualinvoke $r32.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>()
Unit: $r18 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r34 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r12 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: $i10 = virtualinvoke $r15.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>()
Unit: specialinvoke $r15.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null, null)
Unit: $r4 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r16 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $l7 = (long) $i6
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l21)
Unit: specialinvoke $r23.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>($r24)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3)
Unit: $r33[3] = $r37
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l11)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(5L, $l15)
Unit: $r33[5] = $r39
Unit: $r20 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: specialinvoke $r25.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>($r26)
Unit: $r38 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r40 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $l1 = (long) $i0
Unit: $i18 = virtualinvoke $r25.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>()
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l19)
Unit: specialinvoke $r16.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r21, $r20, $r19, $r18, $r17)
Unit: $r37 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r14 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r31 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r6 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer THREE>
Unit: specialinvoke $r10.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r14, $r13, $r12, $r11)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l17)
Unit: $i2 = virtualinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l7)
Unit: specialinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>(null, null)
Unit: $r23 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r33[6] = $r40
Unit: $i16 = virtualinvoke $r23.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>()
Unit: $r1 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer FOUR>
Unit: $r28 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $l21 = (long) $i20
Unit: $l9 = (long) $i8
Unit: $r10 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r30 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r33[1] = $r35
Unit: $i8 = virtualinvoke $r10.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>()
Unit: $r29 = newarray (java.lang.Integer)[2]
Unit: $l23 = (long) $i22
Unit: specialinvoke $r5.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, $r6)
Unit: $r24 = newarray (java.lang.Object)[0]
Unit: return
Unit: $l17 = (long) $i16
Unit: specialinvoke $r32.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[])>($r33)
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest
Unit: $r29[0] = $r30
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l9)
Unit: $i14 = virtualinvoke $r22.<org.apache.commons.collections4.keyvalue.MultiKey: int size()>()
Unit: $r32 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r5 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r33[0] = $r34
Unit: $l15 = (long) $i14
Unit: $r3 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: specialinvoke $r9.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(5L, $l13)
Unit: $r26 = newarray (java.lang.Integer)[1]
	method testGetIndexed : 
Unit: $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r4 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r5, $r6)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r3 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: r1 = $r2
Unit: $r2 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: r13 = $r12
Unit: $r6 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(0)
Unit: virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2)
Unit: $r7 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: r14 = $r11
Unit: goto [?= return]
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: $r11 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r8 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(1)
Unit: virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(-1)
Unit: specialinvoke $r2.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r4, $r3)
Unit: goto [?= virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object getKey(int)>(2)]
Unit: $r12 := @caughtexception
	method testGetKeysSimpleConstructor : 
Unit: $r4 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r7, $r6)
Unit: return
Unit: $l1 = (long) $i0
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest
Unit: r1 = $r3
Unit: $r7 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r3 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r8 = r2[1]
Unit: specialinvoke $r3.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r5, $r4)
Unit: r2 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: $r6 = r2[0]
Unit: $i0 = lengthof r2
Unit: $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r9, $r8)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
	method testGetKeysArrayConstructorCloned : 
Unit: $r4[1] = $r6
Unit: $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: r1 = $r4
Unit: r3 = virtualinvoke r2.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: if r3 == r1 goto $z1 = 0
Unit: $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r4[0] = $r5
Unit: $r8 = r3[0]
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r11, $r10)
Unit: $r6 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $z1 = 0
Unit: specialinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>(r1, 1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r3, r1)
Unit: $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r9, $r8)
Unit: $l1 = (long) $i0
Unit: $i0 = lengthof r3
Unit: $r7 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest
Unit: $z1 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $r4 = newarray (java.lang.Integer)[2]
Unit: r2 = $r7
Unit: $r10 = r3[1]
	method testGetKeysArrayConstructorNonCloned : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: r2 = $r7
Unit: r1 = $r4
Unit: specialinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object[],boolean)>(r1, 0)
Unit: $z1 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: $l1 = (long) $i0
Unit: $r4[0] = $r5
Unit: return
Unit: $r7 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $r10 = r3[1]
Unit: $r8 = r3[0]
Unit: $r6 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r9, $r8)
Unit: $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: r3 = virtualinvoke r2.<org.apache.commons.collections4.keyvalue.MultiKey: java.lang.Object[] getKeys()>()
Unit: $r4 = newarray (java.lang.Integer)[2]
Unit: $i0 = lengthof r3
Unit: $z1 = 0
Unit: if r3 == r1 goto $z1 = 0
Unit: $r4[1] = $r6
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r11, $r10)
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest
Unit: $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r3, r1)
Unit: $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
	method testHashCode : 
Unit: $i8 = 0 ^ $i7
Unit: r1 = $r4
Unit: $i5 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>()
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest
Unit: $z2 = 1
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l10, $l12)
Unit: $i2 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>()
Unit: $r12 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r8 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: r3 = $r10
Unit: $r7 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $i3 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>()
Unit: $r13 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $z1 = 0
Unit: $z1 = 1
Unit: specialinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r6, $r5)
Unit: $z0 = 0
Unit: $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: $r10 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $i6 = virtualinvoke r3.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>()
Unit: $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: i0 = $i8 ^ $i9
Unit: $i11 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>()
Unit: $r6 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: if $i1 != $i2 goto $z0 = 0
Unit: $l10 = (long) i0
Unit: specialinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r9, $r8)
Unit: $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: specialinvoke $r10.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r11, "TWO")
Unit: $i7 = virtualinvoke $r12.<java.lang.Integer: int hashCode()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $z2 = 0
Unit: $r4 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $i4 = virtualinvoke r2.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>()
Unit: if $i3 != $i4 goto $z1 = 0
Unit: $l12 = (long) $i11
Unit: if $i5 == $i6 goto $z2 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: r2 = $r7
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)]
Unit: $i9 = virtualinvoke $r13.<java.lang.Integer: int hashCode()>()
Unit: $z0 = 1
Unit: $i1 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: int hashCode()>()
Unit: return
	method testEquals : 
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: r3 = $r10
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r1)
Unit: $z1 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: boolean equals(java.lang.Object)>("")
Unit: specialinvoke $r4.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r6, $r5)
Unit: r1 = $r4
Unit: $r10 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2)
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest
Unit: $r9 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r8 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $r5 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: $z2 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: boolean equals(java.lang.Object)>(null)
Unit: $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $z0 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKey: boolean equals(java.lang.Object)>(r3)
Unit: $r6 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r7 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: r2 = $r7
Unit: specialinvoke $r10.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r11, "TWO")
Unit: specialinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r9, $r8)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r2)
Unit: $r4 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
	method testEqualsAfterSerialization : 
Unit: specialinvoke $r10.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r11, r26)
Unit: $r21 = virtualinvoke r6.<java.io.ObjectInputStream: java.lang.Object readObject()>()
Unit: $r17 = new java.io.ByteArrayInputStream
Unit: specialinvoke $r22.<org.apache.commons.collections4.keyvalue.MultiKey: void <init>(java.lang.Object,java.lang.Object)>($r23, r27)
Unit: r27 = (org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey) $r20
Unit: interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13)
Unit: $i0 = virtualinvoke r27.<org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey: int hashCode()>()
Unit: specialinvoke $r12.<java.util.HashMap: void <init>()>()
Unit: $r16 = new java.io.ObjectOutputStream
Unit: r2 = $r12
Unit: virtualinvoke r6.<java.io.ObjectInputStream: void close()>()
Unit: specialinvoke $r9.<org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey: void <init>(java.lang.String)>("test")
Unit: $r18 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
Unit: specialinvoke $r16.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r3)
Unit: r3 = $r15
Unit: r7 = (java.util.Map) $r21
Unit: r6 = $r19
Unit: virtualinvoke r4.<java.io.ObjectOutputStream: void close()>()
Unit: specialinvoke $r15.<java.io.ByteArrayOutputStream: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25)
Unit: r26 = $r9
Unit: specialinvoke $r17.<java.io.ByteArrayInputStream: void <init>(byte[])>($r18)
Unit: $r12 = new java.util.HashMap
Unit: virtualinvoke r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r26)
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest
Unit: specialinvoke $r19.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r5)
Unit: $r9 = new org.apache.commons.collections4.keyvalue.MultiKeyTest$SystemHashCodeSimulatingKey
Unit: r4 = $r16
Unit: $r15 = new java.io.ByteArrayOutputStream
Unit: r1 = $r10
Unit: $r13 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: return
Unit: $r20 = virtualinvoke r6.<java.io.ObjectInputStream: java.lang.Object readObject()>()
Unit: $r24 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer TWO>
Unit: r5 = $r17
Unit: $l1 = (long) $i0
Unit: $r11 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: virtualinvoke r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r2)
Unit: r8 = $r22
Unit: $r19 = new java.io.ObjectInputStream
Unit: $r22 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r10 = new org.apache.commons.collections4.keyvalue.MultiKey
Unit: $r23 = r0.<org.apache.commons.collections4.keyvalue.MultiKeyTest: java.lang.Integer ONE>
Unit: $r25 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8)
	method testEqualsAfterSerializationOfDerivedClass : 
Unit: $r8 = new java.io.ByteArrayOutputStream
Unit: virtualinvoke r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1)
Unit: $i0 = virtualinvoke r1.<org.apache.commons.collections4.keyvalue.MultiKeyTest$DerivedMultiKey: int hashCode()>()
Unit: specialinvoke $r9.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r2)
Unit: specialinvoke $r12.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r4)
Unit: r6 = (org.apache.commons.collections4.keyvalue.MultiKeyTest$DerivedMultiKey) $r13
Unit: $r7 = new org.apache.commons.collections4.keyvalue.MultiKeyTest$DerivedMultiKey
Unit: $r13 = virtualinvoke r5.<java.io.ObjectInputStream: java.lang.Object readObject()>()
Unit: r0 := @this: org.apache.commons.collections4.keyvalue.MultiKeyTest
Unit: $i2 = virtualinvoke r6.<org.apache.commons.collections4.keyvalue.MultiKeyTest$DerivedMultiKey: int hashCode()>()
Unit: virtualinvoke r5.<java.io.ObjectInputStream: void close()>()
Unit: virtualinvoke r3.<java.io.ObjectOutputStream: void close()>()
Unit: $l3 = (long) $i2
Unit: r1 = $r7
Unit: specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>()
Unit: r4 = $r10
Unit: $r9 = new java.io.ObjectOutputStream
Unit: $r11 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, $l3)
Unit: specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11)
Unit: $r12 = new java.io.ObjectInputStream
Unit: $l1 = (long) $i0
Unit: $r10 = new java.io.ByteArrayInputStream
Unit: specialinvoke $r7.<org.apache.commons.collections4.keyvalue.MultiKeyTest$DerivedMultiKey: void <init>(java.lang.Object,java.lang.Object)>("A", "B")
Unit: r2 = $r8
Unit: r5 = $r12
Unit: r3 = $r9
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterListIteratorTest
	method <init> : 
	method setUp : 
	method tearDown : 
	method testWalkLists : 
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: $r2 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r2, $r3)
Unit: $r3 = virtualinvoke $r1.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: $r1 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: return
	method testManual : 
Unit: $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r46, $r47)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r74, $r75)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r44, $r45)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r68, $r69)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r66, $r67)
Unit: $r69 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r23 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r47 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $z0 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasPrevious()>()
Unit: $r19 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r59 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r50, $r51)
Unit: $z2 = 1
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r80, $r81)
Unit: $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r81 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r13)
Unit: $r17 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r54, $r55)
Unit: $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $z3 = 1
Unit: $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18)
Unit: $r39 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18)
Unit: if $z1 != 0 goto $z3 = 0
Unit: $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r52, $r53)
Unit: $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12)
Unit: $r61 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r83 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r76, $r77)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15)
Unit: $r43 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15)
Unit: $r37 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12)
Unit: $r73 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r56, $r57)
Unit: $r45 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r58, $r59)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r86, $r87)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
Unit: if $z0 != 0 goto $z2 = 0
Unit: $z3 = 0
Unit: $r76 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r16, $r17)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r38, $r39)
Unit: $r53 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r71 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r82, $r83)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r21 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r33 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r85 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r70 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>
Unit: $z1 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasNext()>()
Unit: $r74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r90, $r91)
Unit: $r31 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r15 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15)
Unit: $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r48, $r49)
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5)
Unit: $r79 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r67 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r78, $r79)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r43)
Unit: $r87 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15)
Unit: $r27 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r35)
Unit: $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r25 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21)
Unit: $z2 = 0
Unit: $r65 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r9 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r2 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r40, $r41)
Unit: $r75 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15)
Unit: $r51 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r88 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12)
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: $r35 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r70, $r71)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r19)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29)
Unit: $r11 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r13 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r37)
Unit: $r55 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r91 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r31)
Unit: $r29 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r88, $r89)
Unit: $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r84, $r85)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r60, $r61)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r62, $r63)
Unit: $r7 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r41 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r63 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12)
Unit: $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r64, $r65)
Unit: $r77 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)
Unit: return
Unit: $r57 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9)
Unit: $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18)
Unit: $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r72, $r73)
Unit: $r89 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23)
Unit: $r49 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: r1 = $r2
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r32, $r33)
Unit: $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18)
	method testTruePredicate : 
Unit: $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5)
Unit: $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate truePred>
Unit: $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: return
Unit: $r2 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: r1 = $r2
Unit: $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r6, r1)
	method testFalsePredicate : 
Unit: $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: $r6 = new java.util.ArrayList
Unit: $r2 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5)
Unit: return
Unit: $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate falsePred>
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: r1 = $r2
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r6, r1)
	method testEvens : 
Unit: $r2 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: r1 = $r2
Unit: $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList evens>
Unit: return
Unit: $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate evenPred>
Unit: specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5)
Unit: $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r6, r1)
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
	method testOdds : 
Unit: return
Unit: $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5)
Unit: $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList odds>
Unit: $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate oddPred>
Unit: $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: $r2 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: r1 = $r2
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r6, r1)
	method testThrees : 
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5)
Unit: r1 = $r2
Unit: $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>
Unit: return
Unit: $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: $r2 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList threes>
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r6, r1)
	method testFours : 
Unit: $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList fours>
Unit: specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r4, $r5)
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r6, r1)
Unit: r1 = $r2
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate fourPred>
Unit: $r2 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: $r3 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: return
	method testNestedSixes : 
Unit: $r7 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate evenPred>
Unit: specialinvoke $r3.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r5, $r6)
Unit: r1 = $r2
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r8, r1)
Unit: $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>
Unit: $r4 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: $r8 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList sixes>
Unit: $r2 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: $r3 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: return
Unit: $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r3, $r7)
	method testNestedSixes2 : 
Unit: specialinvoke $r3.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r5, $r6)
Unit: r1 = $r2
Unit: $r8 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList sixes>
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: $r4 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: $r7 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r8, r1)
Unit: $r3 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: $r2 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate evenPred>
Unit: specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r3, $r7)
	method testNestedSixes3 : 
Unit: $r9 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate truePred>
Unit: $r3 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: specialinvoke $r3.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r5, $r6)
Unit: r1 = $r2
Unit: $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>
Unit: $r8 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: specialinvoke $r2.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r3, $r7)
Unit: $r10 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList sixes>
Unit: $r4 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: specialinvoke $r8.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>(r1, $r9)
Unit: return
Unit: $r2 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkLists(java.util.List,java.util.ListIterator)>($r10, $r8)
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: $r7 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate evenPred>
	method testNextChangesPrevious : 
Unit: $r8 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: r13 = $r1
Unit: $r7 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: $r1 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void nextNextPrevious(java.util.ListIterator,java.util.ListIterator)>($r6, r13)
Unit: $r11 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: r14 = $r7
Unit: return
Unit: specialinvoke $r7.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r9, $r10)
Unit: $r4 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>
Unit: specialinvoke $r1.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r3, $r4)
Unit: $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: $r10 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate truePred>
Unit: $r2 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: $r6 = virtualinvoke $r5.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: $r12 = virtualinvoke $r11.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void nextNextPrevious(java.util.ListIterator,java.util.ListIterator)>($r12, r14)
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList threes>
Unit: $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.ListIterator listIterator()>()
	method testPreviousChangesNext : 
Unit: $r9 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate truePred>
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkForward(java.util.ListIterator,java.util.ListIterator)>(r12, r11)
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: $r8 = virtualinvoke $r7.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: $r10 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: $r1 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: $r6 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: $r4 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate threePred>
Unit: $r5 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList threes>
Unit: $r2 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: r12 = virtualinvoke $r5.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: specialinvoke $r1.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r3, $r4)
Unit: $r7 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: r14 = virtualinvoke $r10.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: r13 = $r6
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void previousPreviousNext(java.util.ListIterator,java.util.ListIterator)>(r12, r11)
Unit: return
Unit: r11 = $r1
Unit: specialinvoke $r6.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r8, $r9)
Unit: $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void walkForward(java.util.ListIterator,java.util.ListIterator)>(r14, r13)
Unit: specialinvoke r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: void previousPreviousNext(java.util.ListIterator,java.util.ListIterator)>(r14, r13)
	method testFailingHasNextBug : 
Unit: if $z0 == 0 goto $z1 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasPrevious()>()
Unit: $r3 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>()
Unit: $r8 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>()
Unit: $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: $r6 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: org.apache.commons.collections4.Predicate fourPred>
Unit: $z1 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasPrevious()>()
Unit: r1 = $r3
Unit: $z2 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasNext()>()
Unit: $r9 = virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)
Unit: $z3 = 1
Unit: r2 = virtualinvoke $r7.<java.util.ArrayList: java.util.ListIterator listIterator()>()
Unit: $r7 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList fours>
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: $r4 = r0.<org.apache.commons.collections4.iterators.FilterListIteratorTest: java.util.ArrayList list>
Unit: $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>()
Unit: if $z2 != 0 goto $z3 = 0
Unit: virtualinvoke r1.<org.apache.commons.collections4.iterators.FilterListIterator: java.lang.Object next()>()
Unit: goto [?= $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>()]
Unit: $z3 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)]
Unit: specialinvoke $r3.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections4.Predicate)>($r5, $r6)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
	method testCollections360 : 
Unit: specialinvoke $r5.<org.apache.commons.collections4.list.GrowthList: void <init>()>()
Unit: r0 := @this: org.apache.commons.collections4.iterators.FilterListIteratorTest
Unit: r4 = $r7
Unit: r3 = $r6
Unit: $r5 = new org.apache.commons.collections4.list.GrowthList
Unit: $r6 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: r2 = staticinvoke <org.apache.commons.collections4.PredicateUtils: org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
Unit: return
Unit: specialinvoke $r7.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(org.apache.commons.collections4.Predicate)>(r2)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
Unit: r1 = $r5
Unit: $z0 = virtualinvoke r3.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasNext()>()
Unit: $z1 = virtualinvoke r4.<org.apache.commons.collections4.iterators.FilterListIterator: boolean hasPrevious()>()
Unit: $r7 = new org.apache.commons.collections4.iterators.FilterListIterator
Unit: specialinvoke $r6.<org.apache.commons.collections4.iterators.FilterListIterator: void <init>(org.apache.commons.collections4.Predicate)>(r2)
	method walkForward : 
	method walkBackward : 
	method nextNextPrevious : 
	method previousPreviousNext : 
	method walkLists : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.PatriciaTrie
	method <init> : 
	method <init> : 
	method mapIterator : 
	method comparator : 
	method remove : 
	method values : 
	method keySet : 
	method entrySet : 
	method containsKey : 
	method get : 
	method size : 
	method clear : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.BooleanComparatorTest
	method <init> : 
	method makeObject : 
	method getComparableObjectsOrdered : 
	method getCompatibilityVersion : 
	method testConstructors : 
	method testStaticFactoryMethods : 
	method testEqualsCompatibleInstance : 
	method allTests : 
	method trueFirstTests : 
	method falseFirstTests : 
	method orderIndependentTests : 
	method nullArgumentTests : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.AbstractListTest$BulkTestSubList
	method <init> : 
	method getFullElements : 
	method getOtherElements : 
	method isAddSupported : 
	method isSetSupported : 
	method isRemoveSupported : 
	method makeObject : 
	method makeFullCollection : 
	method resetEmpty : 
	method resetFull : 
	method verify : 
	method isTestSerialization : 
	method getConfirmed : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.AbstractEmptyIterator
	method <init> : 
	method hasNext : 
	method next : 
	method hasPrevious : 
	method previous : 
	method nextIndex : 
	method previousIndex : 
	method add : 
	method set : 
	method remove : 
	method reset : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeArrayListIterator : 
	method supportsAdd : 
	method supportsRemove : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.Collections701Test
	method <init> : 
	method testArrayList : 
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: r0 := @this: org.apache.commons.collections4.list.Collections701Test
Unit: return
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r3)
Unit: $r2 = new java.util.ArrayList
Unit: $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
Unit: r1 = $r2
	method testHashSet : 
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: r0 := @this: org.apache.commons.collections4.list.Collections701Test
Unit: $l1 = (long) $i0
Unit: r1 = $r2
Unit: $r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
Unit: $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>()
Unit: $i0 = interfaceinvoke r1.<java.util.Set: int size()>()
Unit: return
Unit: specialinvoke $r2.<java.util.HashSet: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r4)
Unit: $r2 = new java.util.HashSet
	method testSetUniqueList : 
Unit: r1 = $r3
Unit: $l1 = (long) $i0
Unit: $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
Unit: r0 := @this: org.apache.commons.collections4.list.Collections701Test
Unit: return
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r2)
Unit: $i0 = interfaceinvoke r2.<java.util.List: int size()>()
Unit: $r3 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r2, $r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: r2 = staticinvoke <org.apache.commons.collections4.list.SetUniqueList: org.apache.commons.collections4.list.SetUniqueList setUniqueList(java.util.List)>(r1)
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap
	method unmodifiableMultiValuedMap : 
	method <init> : 
	method remove : 
	method removeMapping : 
	method clear : 
	method get : 
	method put : 
	method keySet : 
	method entries : 
	method keys : 
	method values : 
	method asMap : 
	method mapIterator : 
	method putAll : 
	method putAll : 
	method putAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator
	method <init> : 
	method hasNext : 
	method hasPrevious : 
	method nextEntry : 
	method previousEntry : 
	method currentEntry : 
	method remove : 
	method reset : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.FunctorException
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractIterableMap
	method <init> : 
	method mapIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.UnmodifiableOrderedMapTest
	method <init> : 
	method makeObject : 
	method isPutChangeSupported : 
	method isPutAddSupported : 
	method isRemoveSupported : 
	method makeFullMap : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method getCompatibilityVersion : 
	method makeFullMap : 
	method makeObject : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ObjectGraphIterator
	method <init> : 
	method <init> : 
	method updateCurrentIterator : 
	method findNext : 
	method findNextByIterator : 
	method hasNext : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.IteratorUtilsTest$1
	method <init> : 
	method getLength : 
	method item : 
 ====================================== 
** CLASS org.apache.commons.collections4.junit.AbstractAvailableLocalesTest
	method getSortedAvailableLocales : 
	method getSortedDeclaredLocales : 
	method <init> : 
	method getLocale : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator
	method <init> : 
	method remove : 
	method add : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.UnmodifiableCollection
	method unmodifiableCollection : 
	method <init> : 
	method iterator : 
	method add : 
	method addAll : 
	method clear : 
	method remove : 
	method removeAll : 
	method retainAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.Flat3Map$KeySetIterator
	method <init> : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractSortedMapDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method comparator : 
	method firstKey : 
	method lastKey : 
	method subMap : 
	method headMap : 
	method tailMap : 
	method previousKey : 
	method nextKey : 
	method mapIterator : 
	method decorated : 
	method mapIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractSortedMapTest
	method <init> : 
	method isAllowNullKey : 
	method makeConfirmedMap : 
	method testComparator : 
	method makeObject : 
	method makeFullMap : 
	method testFirstKey : 
	method testLastKey : 
	method bulkTestHeadMap : 
	method bulkTestTailMap : 
	method bulkTestSubMap : 
	method getMap : 
	method getConfirmed : 
	method getConfirmed : 
	method getMap : 
	method makeConfirmedMap : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.PredicatedQueueTest
	method <init> : 
	method decorateCollection : 
	method makeObject : 
	method makeFullCollection : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeTestQueue : 
	method testGet : 
	method testRemove : 
	method getCompatibilityVersion : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.MapUtilsTest$4
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.MapUtilsTest$3
	method <init> : 
	method getContents : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapAsMap
	method <init> : 
	method makeObject : 
	method makeFullMap : 
	method getSampleKeys : 
	method getSampleValues : 
	method getNewSampleValues : 
	method isAllowNullKey : 
	method isPutAddSupported : 
	method isPutChangeSupported : 
	method isRemoveSupported : 
	method areEqualElementsDistinguishable : 
	method isTestSerialization : 
	method getNewSampleValues : 
	method getSampleValues : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.MapUtilsTest$2
	method <init> : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.StaticBucketMap$Node
	method <init> : 
	method getKey : 
	method getValue : 
	method hashCode : 
	method equals : 
	method setValue : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method get : 
	method get : 
	method moveToMRU : 
	method updateEntry : 
	method addMapping : 
	method reuseMapping : 
	method removeLRU : 
	method isFull : 
	method maxSize : 
	method isScanUntilRemovable : 
	method clone : 
	method writeObject : 
	method readObject : 
	method doWriteObject : 
	method doReadObject : 
	method clone : 
	method clone : 
 ====================================== 
** CLASS org.apache.commons.collections4.Equator
	method equate : 
	method hash : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test$IntegerComparator
	method <init> : 
	method compare : 
	method compare : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.TransformedQueue
	method transformingQueue : 
	method transformedQueue : 
	method <init> : 
	method getQueue : 
	method offer : 
	method poll : 
	method peek : 
	method element : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.MapUtilsTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.TransformerClosure
	method transformerClosure : 
	method <init> : 
	method execute : 
	method getTransformer : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.AbstractSerializableSetDecorator
	method <init> : 
	method writeObject : 
	method readObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest
	method suite : 
	method <init> : 
	method makeObject : 
	method makeFullMap : 
	method makeConfirmedMap : 
	method isSubMapViewsSerializable : 
	method ignoredTests : 
	method isAllowNullKey : 
	method isAllowNullValue : 
	method isPutAddSupported : 
	method isPutChangeSupported : 
	method isRemoveSupported : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method makeObject : 
	method makeFullMap : 
	method makeFullMap : 
	method makeObject : 
	method makeConfirmedMap : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.SetUtilsTest
	method <init> : 
	method difference : 
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: $z3 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>(r18)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptySet()>()
Unit: r17 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
Unit: $i0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: int size()>()
Unit: r19 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView difference(java.util.Set,java.util.Set)>($r7, $r8)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r3 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: goto [?= return]
Unit: if $z2 == 0 goto $r7 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: $r14 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
Unit: $r16 := @caughtexception
Unit: r0 := @this: org.apache.commons.collections4.SetUtilsTest
Unit: $z1 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r5)
Unit: r21 = $r15
Unit: goto [?= $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
Unit: $l1 = (long) $i0
Unit: $r12 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: goto [?= $r12 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>]
Unit: $r10 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView difference(java.util.Set,java.util.Set)>($r10, null)
Unit: $r7 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
Unit: $r9 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView difference(java.util.Set,java.util.Set)>(null, $r12)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, r19)
Unit: $r15 := @caughtexception
Unit: r18 = (java.lang.Integer) $r14
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
Unit: $r6 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>
Unit: $z0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r4)
Unit: r20 = $r16
Unit: $r2 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>
Unit: return
Unit: r1 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView difference(java.util.Set,java.util.Set)>($r3, $r2)
	method disjunction : 
Unit: $r12 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: r2 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView disjunction(java.util.Set,java.util.Set)>($r12, $r13)
Unit: $r3 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: $z5 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r10)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z4)
Unit: $l1 = (long) $i0
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView disjunction(java.util.Set,java.util.Set)>($r15, null)
Unit: $r4 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: goto [?= return]
Unit: r1 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView disjunction(java.util.Set,java.util.Set)>($r4, $r3)
Unit: $r15 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: $r17 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, r2)
Unit: r22 = $r19
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z5)
Unit: return
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z6)
Unit: $r19 := @caughtexception
Unit: $r13 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptySet()>()
Unit: $z4 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r9)
Unit: $z6 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r11)
Unit: goto [?= $r17 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: r21 = $r20
Unit: staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView disjunction(java.util.Set,java.util.Set)>(null, $r17)
Unit: $r20 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $z0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r5)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: r0 := @this: org.apache.commons.collections4.SetUtilsTest
Unit: $i0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: int size()>()
Unit: $z2 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r7)
Unit: $r14 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: $z3 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r8)
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: $z1 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l1)
	method intersection : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r4 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: goto [?= $r17 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>]
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, r2)
Unit: $l1 = (long) $i0
Unit: $z4 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r9)
Unit: r2 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView intersection(java.util.Set,java.util.Set)>($r12, $r13)
Unit: $r15 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: $r20 := @caughtexception
Unit: staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView intersection(java.util.Set,java.util.Set)>(null, $r17)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l1)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z5)
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z6)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r3 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: r22 = $r19
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $z0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r5)
Unit: $r12 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: $r13 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptySet()>()
Unit: $z3 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r8)
Unit: r21 = $r20
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z4)
Unit: $z1 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r6)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptySet()>()
Unit: goto [?= return]
Unit: $i0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: int size()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: r0 := @this: org.apache.commons.collections4.SetUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView intersection(java.util.Set,java.util.Set)>($r15, null)
Unit: return
Unit: $z2 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r7)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $z5 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r10)
Unit: r1 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView intersection(java.util.Set,java.util.Set)>($r4, $r3)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7)
Unit: $r17 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: $r19 := @caughtexception
Unit: $z6 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean contains(java.lang.Object)>($r11)
	method setUp : 
	method testEmptyIfNull : 
Unit: $r3 = new java.util.HashSet
Unit: r1 = $r3
Unit: $z0 = interfaceinvoke $r2.<java.util.Set: boolean isEmpty()>()
Unit: specialinvoke $r3.<java.util.HashSet: void <init>()>()
Unit: $r2 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptyIfNull(java.util.Set)>(null)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: r0 := @this: org.apache.commons.collections4.SetUtilsTest
Unit: $r4 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptyIfNull(java.util.Set)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, $r4)
Unit: return
	method testEquals : 
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $z1 = staticinvoke <org.apache.commons.collections4.SetUtils: boolean isEqualSet(java.util.Collection,java.util.Collection)>(r2, r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: $r5 = new java.util.HashSet
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: r3 = $r6
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $r6 = new java.util.HashSet
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r4[0] = "a"
Unit: $r4[1] = "b"
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: specialinvoke $r6.<java.util.HashSet: void <init>(java.util.Collection)>(r1)
Unit: $z2 = staticinvoke <org.apache.commons.collections4.SetUtils: boolean isEqualSet(java.util.Collection,java.util.Collection)>(r2, r3)
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: r0 := @this: org.apache.commons.collections4.SetUtilsTest
Unit: $z3 = staticinvoke <org.apache.commons.collections4.SetUtils: boolean isEqualSet(java.util.Collection,java.util.Collection)>(r2, null)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18)
Unit: interfaceinvoke r2.<java.util.Set: void clear()>()
Unit: $z5 = staticinvoke <org.apache.commons.collections4.SetUtils: boolean isEqualSet(java.util.Collection,java.util.Collection)>(null, null)
Unit: $r4 = newarray (java.lang.String)[3]
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r4[2] = "c"
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $z4 = staticinvoke <org.apache.commons.collections4.SetUtils: boolean isEqualSet(java.util.Collection,java.util.Collection)>(null, r3)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>(r1)
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)
Unit: $z0 = interfaceinvoke r2.<java.util.Set: boolean equals(java.lang.Object)>(r3)
Unit: r2 = $r5
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
	method testHashCode : 
Unit: $i7 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>(r3)
Unit: if $i2 != $i3 goto $z1 = 0
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, $r14)
Unit: $i8 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>(r2)
Unit: if $i8 != $i9 goto $z4 = 0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l11)
Unit: $r4[0] = "a"
Unit: r3 = $r6
Unit: if $i4 != $i5 goto $z2 = 0
Unit: $i4 = interfaceinvoke r3.<java.util.Set: int hashCode()>()
Unit: $i2 = interfaceinvoke r2.<java.util.Set: int hashCode()>()
Unit: $i5 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>(r3)
Unit: $i10 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>(null)
Unit: $i6 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>(r2)
Unit: $z4 = 0
Unit: $r4[1] = "b"
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: r0 := @this: org.apache.commons.collections4.SetUtilsTest
Unit: $i3 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>(r2)
Unit: return
Unit: $z0 = 1
Unit: $l11 = (long) $i10
Unit: $i1 = interfaceinvoke r3.<java.util.Set: int hashCode()>()
Unit: $i9 = staticinvoke <org.apache.commons.collections4.SetUtils: int hashCodeForSet(java.util.Collection)>(r3)
Unit: $z1 = 0
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8)
Unit: if $i0 != $i1 goto $z0 = 0
Unit: $z3 = 1
Unit: goto [?= $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)]
Unit: if $i6 != $i7 goto $z3 = 0
Unit: $r6 = new java.util.HashSet
Unit: $z1 = 1
Unit: $r4[2] = "c"
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)
Unit: $z2 = 0
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: interfaceinvoke r2.<java.util.Set: void clear()>()
Unit: $r4 = newarray (java.lang.String)[3]
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $z3 = 0
Unit: $z2 = 1
Unit: $r5 = new java.util.HashSet
Unit: goto [?= $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)]
Unit: $z0 = 0
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $i0 = interfaceinvoke r2.<java.util.Set: int hashCode()>()
Unit: r2 = $r5
Unit: goto [?= $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)]
Unit: $z4 = 1
Unit: goto [?= $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r16)
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>(r1)
Unit: specialinvoke $r6.<java.util.HashSet: void <init>(java.util.Collection)>(r1)
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: goto [?= $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r10)
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
	method testHashSet : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 3", $z3)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 2", $z5)
Unit: return
Unit: $r6 = newarray (java.lang.Object)[0]
Unit: $i0 = interfaceinvoke r2.<java.util.Set: int size()>()
Unit: $z4 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("1")
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r16[0] = null
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains null", $z7)
Unit: $i4 = interfaceinvoke r4.<java.util.Set: int size()>()
Unit: $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>()
Unit: $r7[2] = $r10
Unit: r4 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.HashSet hashSet(java.lang.Object[])>($r16)
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: r3 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.HashSet hashSet(java.lang.Object[])>($r15)
Unit: $z6 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("3")
Unit: $z5 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("2")
Unit: $r15[0] = "1"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("set has 1 element", 1L, $l5)
Unit: $r16[1] = null
Unit: $z1 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r12)
Unit: $r15[2] = "2"
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $i2 = interfaceinvoke r3.<java.util.Set: int size()>()
Unit: r2 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.HashSet hashSet(java.lang.Object[])>($r7)
Unit: $z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r13)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 2", $z2)
Unit: $r7[1] = $r9
Unit: $r7[3] = $r11
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: r1 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r6)
Unit: $r15 = newarray (java.lang.String)[4]
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 3", $z6)
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r15[1] = "2"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("set is null", null, r5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("set has 3 elements", 3L, $l3)
Unit: $z3 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r14)
Unit: $r17 = (java.lang.Object[]) null
Unit: $r15[3] = "3"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("set has 3 elements", 3L, $l1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 1", $z4)
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r7[0] = $r8
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 1", $z1)
Unit: $r16 = newarray (java.lang.Object)[2]
Unit: $l5 = (long) $i4
Unit: $l1 = (long) $i0
Unit: $l3 = (long) $i2
Unit: r5 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.HashSet hashSet(java.lang.Object[])>($r17)
Unit: $r7 = newarray (java.lang.Integer)[4]
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set is empty", $z0)
Unit: r0 := @this: org.apache.commons.collections4.SetUtilsTest
Unit: $z7 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(null)
	method testNewIdentityHashSet : 
Unit: specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("a")
Unit: $r4 = new java.lang.String
Unit: interfaceinvoke r1.<java.util.Set: boolean remove(java.lang.Object)>(r2)
Unit: $i4 = interfaceinvoke r1.<java.util.Set: int size()>()
Unit: r1 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set newIdentityHashSet()>()
Unit: $l1 = (long) $i0
Unit: specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>("b")
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
Unit: r2 = $r3
Unit: $i2 = interfaceinvoke r1.<java.util.Set: int size()>()
Unit: return
Unit: $i0 = interfaceinvoke r1.<java.util.Set: int size()>()
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r5)
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
Unit: $r5 = new java.lang.String
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r2)
Unit: $l5 = (long) $i4
Unit: specialinvoke $r3.<java.lang.String: void <init>(java.lang.String)>("a")
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l5)
Unit: r0 := @this: org.apache.commons.collections4.SetUtilsTest
Unit: interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r2)
Unit: $r3 = new java.lang.String
	method testpredicatedSet : 
Unit: goto [?= return]
Unit: r11 = $r8
Unit: r2 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)>($r4, r1)
Unit: r0 := @this: org.apache.commons.collections4.SetUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("returned object should be a PredicatedSet", $z0)
Unit: $r5 = new java.util.HashSet
Unit: return
Unit: $r3 = new org.apache.commons.collections4.SetUtilsTest$1
Unit: staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)>($r5, null)
Unit: $z0 = r2 instanceof org.apache.commons.collections4.set.PredicatedSet
Unit: r10 = $r9
Unit: $r9 := @caughtexception
Unit: r1 = $r3
Unit: staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)>(null, r1)
Unit: specialinvoke $r3.<org.apache.commons.collections4.SetUtilsTest$1: void <init>(org.apache.commons.collections4.SetUtilsTest)>(r0)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null predicate.")
Unit: goto [?= staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set predicatedSet(java.util.Set,org.apache.commons.collections4.Predicate)>(null, r1)]
Unit: specialinvoke $r5.<java.util.HashSet: void <init>()>()
Unit: specialinvoke $r4.<java.util.HashSet: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null set.")
Unit: $r4 = new java.util.HashSet
Unit: $r8 := @caughtexception
	method testUnmodifiableSet : 
Unit: $z3 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r14)
Unit: $r16[1] = null
Unit: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $z6 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("3")
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 2", $z2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 2", $z5)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 3", $z3)
Unit: $r15[1] = "2"
Unit: $r15[3] = "3"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("set has 3 elements", 3L, $l3)
Unit: $z7 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(null)
Unit: $i4 = interfaceinvoke r4.<java.util.Set: int size()>()
Unit: $i0 = interfaceinvoke r2.<java.util.Set: int size()>()
Unit: $r15[2] = "2"
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 1", $z1)
Unit: $r16[0] = null
Unit: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r7[3] = $r11
Unit: $z5 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("2")
Unit: $r7[1] = $r9
Unit: $l3 = (long) $i2
Unit: $r17 = (java.lang.Object[]) null
Unit: return
Unit: r4 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r16)
Unit: $r7[0] = $r8
Unit: $l1 = (long) $i0
Unit: $l5 = (long) $i4
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r6 = newarray (java.lang.Object)[0]
Unit: $r16 = newarray (java.lang.Object)[2]
Unit: $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 1", $z4)
Unit: $z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r13)
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: r2 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("set has 1 element", 1L, $l5)
Unit: $r15[0] = "1"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("set is null", null, r5)
Unit: $r15 = newarray (java.lang.String)[4]
Unit: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $i2 = interfaceinvoke r3.<java.util.Set: int size()>()
Unit: $z4 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>("1")
Unit: r5 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r17)
Unit: r0 := @this: org.apache.commons.collections4.SetUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("set has 3 elements", 3L, $l1)
Unit: r3 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r15)
Unit: r1 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r6)
Unit: $z1 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r12)
Unit: $r7 = newarray (java.lang.Integer)[4]
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r7[2] = $r10
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set is empty", $z0)
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains null", $z7)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("set contains 3", $z6)
	method testUnmodifiableSetWrap : 
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: r1 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.lang.Object[])>($r3)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r1, r2)
Unit: $r3[3] = $r7
Unit: r0 := @this: org.apache.commons.collections4.SetUtilsTest
Unit: $r3[2] = $r6
Unit: $r3 = newarray (java.lang.Integer)[4]
Unit: return
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: r2 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set unmodifiableSet(java.util.Set)>(r1)
Unit: $r3[0] = $r4
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
Unit: $r3[1] = $r5
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
	method union : 
Unit: $r6 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>
Unit: $r9 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: $i0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $z1 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean containsAll(java.util.Collection)>($r6)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(7L, $l1)
Unit: $r10 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: $r12 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: $r7 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: r0 := @this: org.apache.commons.collections4.SetUtilsTest
Unit: return
Unit: r2 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView union(java.util.Set,java.util.Set)>($r7, $r8)
Unit: $z0 = virtualinvoke r1.<org.apache.commons.collections4.SetUtils$SetView: boolean containsAll(java.util.Collection)>($r5)
Unit: $r8 = staticinvoke <org.apache.commons.collections4.SetUtils: java.util.Set emptySet()>()
Unit: $r5 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView union(java.util.Set,java.util.Set)>(null, $r12)
Unit: goto [?= $r12 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: $l1 = (long) $i0
Unit: r17 = $r14
Unit: r16 = $r15
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, r2)
Unit: goto [?= return]
Unit: $r4 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setA>
Unit: staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView union(java.util.Set,java.util.Set)>($r10, null)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: $r3 = r0.<org.apache.commons.collections4.SetUtilsTest: java.util.Set setB>
Unit: r1 = staticinvoke <org.apache.commons.collections4.SetUtils: org.apache.commons.collections4.SetUtils$SetView union(java.util.Set,java.util.Set)>($r4, $r3)
Unit: $r14 := @caughtexception
Unit: $r15 := @caughtexception
 ====================================== 
** CLASS org.apache.commons.collections4.map.DefaultedMapTest$1
	method <init> : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ReferenceMapTest$1
	method <init> : 
	method createEntry : 
	method createEntry : 
	method createEntry : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.PatriciaTrie2Test
	method <init> : 
	method suite : 
	method makeObject : 
	method isAllowNullKey : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMultiSet$UniqueSet
	method <init> : 
	method iterator : 
	method contains : 
	method containsAll : 
	method remove : 
	method size : 
	method clear : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest
	method suite : 
	method <init> : 
	method makeObject : 
	method getCompatibilityVersion : 
	method ignoredTests : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.FactoryUtils
	method <init> : 
	method exceptionFactory : 
	method nullFactory : 
	method constantFactory : 
	method prototypeFactory : 
	method instantiateFactory : 
	method instantiateFactory : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.TransformedCollectionTest$StringToInteger
	method <init> : 
	method transform : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.CatchAndRethrowClosure
	method <init> : 
	method execute : 
	method executeAndThrow : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.StaticBucketMap$ValueIterator
	method <init> : 
	method next : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractOrderedMapTest
	method <init> : 
	method makeObject : 
	method makeFullMap : 
	method makeConfirmedMap : 
	method getSampleKeys : 
	method testFirstKey : 
	method testLastKey : 
	method testNextKey : 
	method testPreviousKey : 
	method bulkTestOrderedMapIterator : 
	method getMap : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method getMap : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMap$ValuesView$1
	method <init> : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.MapUtilsTest$X
	method <init> : 
	method compareTo : 
	method compareTo : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.SetUniqueListTest
	method <init> : 
	method getCompatibilityVersion : 
	method getFullNonNullElements : 
	method makeObject : 
	method testAdd : 
	method testAddAll : 
	method testCollectionAddAll : 
	method testCollectionIteratorRemove : 
	method testCollections304 : 
	method testCollections307 : 
	method testCollections701 : 
	method testFactory : 
	method testIntCollectionAddAll : 
	method testListIterator : 
	method testListIteratorAdd : 
	method testListIteratorSet : 
	method testListSetByIndex : 
	method testRetainAll : 
	method testRetainAllWithInitialList : 
	method testSet : 
	method testSetCollections444 : 
	method testSetDownwardsInList : 
	method testSetInBiggerList : 
	method testSetUpwardsInList : 
	method testSubListIsUnmodifiable : 
	method testUniqueListDoubleInsert : 
	method testUniqueListReInsert : 
	method verify : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.ListUtilsTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.PredicatedSortedBagTest
	method <init> : 
	method suite : 
	method stringPredicate : 
	method decorateBag : 
	method makeObject : 
	method makeTestBag : 
	method testDecorate : 
	method testSortOrder : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.Flat3Map$KeySet
	method <init> : 
	method size : 
	method clear : 
	method contains : 
	method remove : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LinkedMapTest$TestListView
	method <init> : 
	method makeObject : 
	method makeFullCollection : 
	method getFullElements : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isSetSupported : 
	method isNullSupported : 
	method isTestSerialization : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection
	method <init> : 
	method getMapping : 
	method add : 
	method addAll : 
	method clear : 
	method iterator : 
	method size : 
	method contains : 
	method containsAll : 
	method isEmpty : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method toArray : 
	method toArray : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.TreeBag
	method <init> : 
	method <init> : 
	method <init> : 
	method add : 
	method first : 
	method last : 
	method comparator : 
	method getMap : 
	method writeObject : 
	method readObject : 
	method getMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.EmptyOrderedIterator
	method emptyOrderedIterator : 
	method <init> : 
	method reset : 
	method remove : 
	method set : 
	method add : 
	method previousIndex : 
	method nextIndex : 
	method previous : 
	method hasPrevious : 
	method next : 
	method hasNext : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.MockTestCase
	method <init> : 
	method createMock : 
	method registerMock : 
	method expect : 
	method replay : 
	method verify : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.AbstractKeyValue
	method <init> : 
	method getKey : 
	method setKey : 
	method getValue : 
	method setValue : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.IteratorChain
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method addIterator : 
	method size : 
	method isLocked : 
	method checkLocked : 
	method lockChain : 
	method updateCurrentIterator : 
	method hasNext : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.LoopingIteratorTest
	method <init> : 
	method testConstructorEx : 
Unit: goto [?= return]
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingIteratorTest
Unit: specialinvoke $r2.<org.apache.commons.collections4.iterators.LoopingIterator: void <init>(java.util.Collection)>(null)
Unit: $r2 = new org.apache.commons.collections4.iterators.LoopingIterator
Unit: r1 = $r3
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r3 := @caughtexception
Unit: return
	method testLooping0 : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("hasNext should return false", $z1)
Unit: return
Unit: $r8 := @caughtexception
Unit: r2 = $r5
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: specialinvoke $r5.<org.apache.commons.collections4.iterators.LoopingIterator: void <init>(java.util.Collection)>(r1)
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingIteratorTest
Unit: goto [?= return]
Unit: $z1 = 1
Unit: $r5 = new org.apache.commons.collections4.iterators.LoopingIterator
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("hasNext should return false", $z1)]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("NoSuchElementException was not thrown during next() call.")
Unit: r3 = $r8
Unit: if $z0 != 0 goto $z1 = 0
Unit: $z0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: $z1 = 0
Unit: $r4 = new java.util.ArrayList
Unit: r1 = $r4
	method testLooping1 : 
Unit: $r3[0] = "a"
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingIteratorTest
Unit: return
Unit: $z0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("3rd hasNext should return true", $z2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("1st hasNext should return true", $z0)
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingIterator: void <init>(java.util.Collection)>(r1)
Unit: r2 = $r4
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5)
Unit: $r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: $r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: $r5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r7)
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
Unit: $r3 = newarray (java.lang.String)[1]
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingIterator
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("2nd hasNext should return true", $z1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r6)
Unit: $z1 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: $z2 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
	method testLooping2 : 
Unit: $r3[0] = "a"
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("3rd hasNext should return true", $z2)
Unit: $z2 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: $z1 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingIterator: void <init>(java.util.Collection)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("2nd hasNext should return true", $z1)
Unit: $r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5)
Unit: $r3 = newarray (java.lang.String)[2]
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingIterator
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("1st hasNext should return true", $z0)
Unit: $r3[1] = "b"
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingIteratorTest
Unit: $r5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: $r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: r2 = $r4
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r6)
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
Unit: $z0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
	method testLooping3 : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("1st hasNext should return true", $z0)
Unit: $r3 = newarray (java.lang.String)[3]
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingIterator: void <init>(java.util.Collection)>(r1)
Unit: $z3 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("4th hasNext should return true", $z3)
Unit: $z1 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("3rd hasNext should return true", $z2)
Unit: $r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r7)
Unit: $r3[0] = "a"
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
Unit: r2 = $r4
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r6)
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingIteratorTest
Unit: $r3[1] = "b"
Unit: $z0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: $r5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: $r3[2] = "c"
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingIterator
Unit: $z2 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("2nd hasNext should return true", $z1)
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8)
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: $r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
	method testRemoving1 : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r10)
Unit: r2 = $r7
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingIteratorTest
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r6)
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: $l1 = (long) $i0
Unit: $z3 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("4th hasNext should return false", $z3)
Unit: $r12 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8)
Unit: $l7 = (long) $i6
Unit: $r10 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: goto [?= return]
Unit: $r4 = new java.util.ArrayList
Unit: specialinvoke $r7.<org.apache.commons.collections4.iterators.LoopingIterator: void <init>(java.util.Collection)>(r1)
Unit: $i2 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $r5 = newarray (java.lang.String)[3]
Unit: $z2 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: $r5[0] = "a"
Unit: $r9 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: $r5[1] = "b"
Unit: $l3 = (long) $i2
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: void remove()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("list should have 3 elements.", 3L, $l1)
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("list should have 2 elements.", 2L, $l3)
Unit: $l5 = (long) $i4
Unit: $z1 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: $r5[2] = "c"
Unit: $i6 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $i0 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5)
Unit: $r7 = new org.apache.commons.collections4.iterators.LoopingIterator
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expected NoSuchElementException to be thrown.")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("list should have 1 elements.", 1L, $l5)
Unit: r1 = $r4
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9)
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: void remove()>()
Unit: $i4 = interfaceinvoke r1.<java.util.List: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("list should have 0 elements.", 0L, $l7)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("2nd hasNext should return true", $z1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("1st hasNext should return true", $z0)
Unit: r3 = $r12
Unit: $z0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: boolean hasNext()>()
Unit: return
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: void remove()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("3rd hasNext should return true", $z2)
	method testReset : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r6)
Unit: $r12 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: void reset()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r12)
Unit: $r3 = newarray (java.lang.String)[3]
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: void reset()>()
Unit: $r3[1] = "b"
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r10)
Unit: $r4 = new org.apache.commons.collections4.iterators.LoopingIterator
Unit: $r13 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r13)
Unit: $r9 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingIteratorTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r7)
Unit: $r8 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: void reset()>()
Unit: $r11 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r11)
Unit: return
Unit: $r3[0] = "a"
Unit: $r5 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r5)
Unit: r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
Unit: $r7 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r8)
Unit: $r3[2] = "c"
Unit: specialinvoke $r4.<org.apache.commons.collections4.iterators.LoopingIterator: void <init>(java.util.Collection)>(r1)
Unit: r2 = $r4
Unit: $r10 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: $r6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
	method testSize : 
Unit: $i0 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: int size()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l7)
Unit: $r4[0] = "a"
Unit: $i6 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: int size()>()
Unit: $r4[1] = "b"
Unit: $i2 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: int size()>()
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r5)
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: void remove()>()
Unit: $r6 = new org.apache.commons.collections4.iterators.LoopingIterator
Unit: $l5 = (long) $i4
Unit: specialinvoke $r6.<org.apache.commons.collections4.iterators.LoopingIterator: void <init>(java.util.Collection)>(r1)
Unit: return
Unit: $r3 = new java.util.ArrayList
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: $l7 = (long) $i6
Unit: $l3 = (long) $i2
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
Unit: r1 = $r3
Unit: $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l1)
Unit: r0 := @this: org.apache.commons.collections4.iterators.LoopingIteratorTest
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l5)
Unit: $r4[2] = "c"
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: void reset()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: $r4 = newarray (java.lang.String)[3]
Unit: $i4 = virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: int size()>()
Unit: virtualinvoke r2.<org.apache.commons.collections4.iterators.LoopingIterator: java.lang.Object next()>()
Unit: r2 = $r6
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ExceptionFactory
	method exceptionFactory : 
	method <init> : 
	method create : 
	method readResolve : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.UniquePredicate
	method uniquePredicate : 
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator
	method <init> : 
	method getKey : 
	method getValue : 
	method setValue : 
	method next : 
	method previous : 
	method previous : 
	method setValue : 
	method getValue : 
	method getKey : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.ComparableComparatorTest
	method <init> : 
	method makeObject : 
	method getComparableObjectsOrdered : 
	method getCompatibilityVersion : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.UnmodifiableBidiMap
	method unmodifiableBidiMap : 
	method <init> : 
	method clear : 
	method put : 
	method putAll : 
	method remove : 
	method entrySet : 
	method keySet : 
	method values : 
	method removeValue : 
	method mapIterator : 
	method inverseBidiMap : 
	method values : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap
	method <init> : 
	method fixup : 
	method firstKey : 
	method lastKey : 
	method inRange : 
	method inRange2 : 
	method inFromRange : 
	method inToRange : 
	method createEntrySet : 
	method getFromKey : 
	method getToKey : 
	method isFromInclusive : 
	method isToInclusive : 
	method createRangeMap : 
	method clear : 
	method <init> : 
	method access$1100 : 
	method access$1200 : 
	method access$1300 : 
	method access$1400 : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.AbstractEmptyMapIterator
	method <init> : 
	method getKey : 
	method getValue : 
	method setValue : 
	method reset : 
	method remove : 
	method set : 
	method add : 
	method previousIndex : 
	method nextIndex : 
	method previous : 
	method hasPrevious : 
	method next : 
	method hasNext : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator
	method <init> : 
	method next : 
	method findNext : 
	method remove : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet
	method <init> : 
	method size : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.PredicatedCollection$Builder
	method <init> : 
	method add : 
	method addAll : 
	method createPredicatedList : 
	method createPredicatedList : 
	method createPredicatedSet : 
	method createPredicatedSet : 
	method createPredicatedMultiSet : 
	method createPredicatedMultiSet : 
	method createPredicatedBag : 
	method createPredicatedBag : 
	method createPredicatedQueue : 
	method createPredicatedQueue : 
	method rejectedElements : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractLinkedMap$KeySetIterator
	method <init> : 
	method next : 
	method previous : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.UnmodifiableListTest
	method <init> : 
	method makeObject : 
	method makeFullCollection : 
	method isSetSupported : 
	method isAddSupported : 
	method isRemoveSupported : 
	method setupList : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method verifyUnmodifiable : 
	method testUnmodifiableIterator : 
	method getCompatibilityVersion : 
	method makeFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.SingletonIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method supportsRemove : 
	method supportsEmptyIterator : 
	method testIterator : 
	method testSingletonIteratorRemove : 
	method testReset : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator
	method <init> : 
	method hasNext : 
	method next : 
	method next : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap
	method <init> : 
	method entrySet : 
	method containsKey : 
	method get : 
	method keySet : 
	method size : 
	method remove : 
	method equals : 
	method hashCode : 
	method toString : 
	method clear : 
	method remove : 
	method get : 
 ====================================== 
** CLASS org.apache.commons.collections4.ListUtilsTest$3
	method <init> : 
	method evaluate : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.ListUtilsTest$2
	method <init> : 
	method create : 
	method create : 
 ====================================== 
** CLASS org.apache.commons.collections4.FluentIterable
	method empty : 
	method of : 
	method of : 
	method of : 
	method <init> : 
	method <init> : 
	method append : 
	method append : 
	method collate : 
	method collate : 
	method eval : 
	method filter : 
	method limit : 
	method loop : 
	method reverse : 
	method skip : 
	method transform : 
	method unique : 
	method unmodifiable : 
	method zip : 
	method zip : 
	method iterator : 
	method asEnumeration : 
	method allMatch : 
	method anyMatch : 
	method isEmpty : 
	method contains : 
	method forEach : 
	method get : 
	method size : 
	method copyInto : 
	method toArray : 
	method toList : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.ReplacementsHandler
	method handleReplacement : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.PredicatedSortedMap
	method predicatedSortedMap : 
	method <init> : 
	method getSortedMap : 
	method firstKey : 
	method lastKey : 
	method comparator : 
	method subMap : 
	method headMap : 
	method tailMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.AbstractLinkedListTest
	method <init> : 
	method testRemoveFirst : 
	method testRemoveLast : 
	method testAddNodeAfter : 
	method testRemoveNode : 
	method testGetNode : 
	method checkNodes : 
	method getCollection : 
	method getCollection : 
	method getCollection : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.AbstractCollectionTest
	method <init> : 
	method areEqualElementsDistinguishable : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isNullSupported : 
	method isFailFastSupported : 
	method isEqualsCheckable : 
	method verify : 
	method resetEmpty : 
	method resetFull : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method cloneMapEntry : 
	method getFullElements : 
	method getOtherElements : 
	method getFullNonNullElements : 
	method getOtherNonNullElements : 
	method getFullNonNullStringElements : 
	method getOtherNonNullStringElements : 
	method testCollectionAdd : 
	method testCollectionAddAll : 
	method testUnsupportedAdd : 
	method testCollectionClear : 
	method testCollectionContains : 
	method testCollectionContainsAll : 
	method testCollectionIsEmpty : 
	method testCollectionIterator : 
	method testCollectionIteratorRemove : 
	method testCollectionRemove : 
	method testCollectionRemoveAll : 
	method testCollectionRetainAll : 
	method testCollectionSize : 
	method testCollectionToArray : 
	method testCollectionToArray2 : 
	method testCollectionToString : 
	method testUnsupportedRemove : 
	method testCollectionIteratorFailFast : 
	method testSerializeDeserializeThenCompare : 
	method getCollection : 
	method setCollection : 
	method getConfirmed : 
	method setConfirmed : 
	method assertNotCollectionContains : 
	method assertNotCollectionContainsAll : 
	method assertNotRemoveFromCollection : 
	method assertNotRemoveAllFromCollection : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.TransformerUtils
	method <init> : 
	method exceptionTransformer : 
	method nullTransformer : 
	method nopTransformer : 
	method cloneTransformer : 
	method constantTransformer : 
	method asTransformer : 
	method asTransformer : 
	method asTransformer : 
	method chainedTransformer : 
	method chainedTransformer : 
	method ifTransformer : 
	method ifTransformer : 
	method switchTransformer : 
	method switchTransformer : 
	method switchTransformer : 
	method switchTransformer : 
	method switchMapTransformer : 
	method instantiateTransformer : 
	method instantiateTransformer : 
	method mapTransformer : 
	method invokerTransformer : 
	method invokerTransformer : 
	method stringValueTransformer : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapEntries
	method <init> : 
	method getFullElements : 
	method makeObject : 
	method makeFullCollection : 
	method isNullSupported : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isTestSerialization : 
	method resetFull : 
	method resetEmpty : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method getFullElements : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.AbstractQueueDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method offer : 
	method poll : 
	method peek : 
	method element : 
	method remove : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.BoundedIteratorTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method testBounded : 
	method testSameAsDecorated : 
	method testEmptyBounded : 
	method testNegativeOffset : 
	method testNegativeMax : 
	method testOffsetGreaterThanSize : 
	method testMaxGreaterThanSize : 
	method testRemoveWithoutCallingNext : 
	method testRemoveCalledTwice : 
	method testRemoveFirst : 
	method testRemoveMiddle : 
	method testRemoveLast : 
	method testRemoveUnsupported : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.PassiveExpiringMapTest$1
 ====================================== 
** CLASS org.apache.commons.collections4.map.Flat3Map$FlatMapEntry
	method <init> : 
	method setRemoved : 
	method getKey : 
	method getValue : 
	method setValue : 
	method equals : 
	method hashCode : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.MultiKeyTest$DerivedMultiKey
	method <init> : 
	method getFirst : 
	method getSecond : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.TransformingComparatorTest
	method <init> : 
	method makeObject : 
	method getComparableObjectsOrdered : 
	method testEquals : 
	method getCompatibilityVersion : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator
	method <init> : 
	method remove : 
	method hasNext : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter
	method <init> : 
	method getKey : 
	method getValue : 
	method setValue : 
	method hasNext : 
	method next : 
	method reset : 
	method remove : 
	method current : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.Flat3MapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method testEquals1 : 
	method testEquals2 : 
	method testClone2 : 
	method testClone4 : 
	method testSerialisation0 : 
	method testSerialisation2 : 
	method testSerialisation4 : 
	method testEntryIteratorSetValue1 : 
	method testEntryIteratorSetValue2 : 
	method testEntryIteratorSetValue3 : 
	method testMapIteratorSetValue1 : 
	method testMapIteratorSetValue2 : 
	method testMapIteratorSetValue3 : 
	method bulkTestMapIterator : 
	method getCompatibilityVersion : 
	method testCollections261 : 
	method testToString : 
	method testRemove1 : 
	method testRemove2 : 
	method testRemove3 : 
	method testRemove4 : 
	method testRemove5 : 
	method testRemove6 : 
	method testRemove7 : 
	method testRemove8 : 
	method testRemove9 : 
	method testRemove10 : 
	method testRemove11 : 
	method testRemove12 : 
	method testRemove13 : 
	method testNewInstance1 : 
	method testGet1 : 
	method testGet2 : 
	method testGet3 : 
	method testContainsKey1 : 
	method testContainsKey2 : 
	method testContainsKey3 : 
	method testContainsValue1 : 
	method testContainsValue2 : 
	method testContainsValue3 : 
	method testPut1 : 
	method testPut2 : 
	method testPut3 : 
	method testPut4 : 
	method testPut5 : 
	method testPut6 : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.KeyValue
	method getKey : 
	method getValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.ComparatorChain
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method addComparator : 
	method addComparator : 
	method setComparator : 
	method setComparator : 
	method setForwardSort : 
	method setReverseSort : 
	method size : 
	method isLocked : 
	method checkLocked : 
	method checkChainIntegrity : 
	method compare : 
	method hashCode : 
	method equals : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.CompositeSetTest$1
	method <init> : 
	method resolveCollision : 
	method add : 
	method addAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.SetUtils$6
	method <init> : 
	method contains : 
	method createIterator : 
	method isEmpty : 
	method size : 
 ====================================== 
** CLASS org.apache.commons.collections4.SetUtils$5
	method <init> : 
	method contains : 
	method createIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.SetUtils$4
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.SetUtils$3
	method <init> : 
	method contains : 
	method createIterator : 
	method isEmpty : 
	method size : 
 ====================================== 
** CLASS org.apache.commons.collections4.SetUtils$2
	method <init> : 
	method contains : 
	method createIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.SetUtils$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMapMultiSet
	method <init> : 
	method <init> : 
	method getMap : 
	method setMap : 
	method size : 
	method isEmpty : 
	method getCount : 
	method contains : 
	method iterator : 
	method add : 
	method clear : 
	method remove : 
	method createUniqueSetIterator : 
	method uniqueElements : 
	method createEntrySetIterator : 
	method doWriteObject : 
	method doReadObject : 
	method toArray : 
	method toArray : 
	method equals : 
	method hashCode : 
	method access$000 : 
	method access$100 : 
	method access$210 : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.AbstractBagTest$TestBagUniqueSet
	method <init> : 
	method getFullElements : 
	method getOtherElements : 
	method makeObject : 
	method makeFullCollection : 
	method isNullSupported : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isTestSerialization : 
	method resetEmpty : 
	method resetFull : 
	method verify : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.UnmodifiableNavigableSetTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullCollection : 
	method isAddSupported : 
	method isRemoveSupported : 
	method setupSet : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method verifyUnmodifiable : 
	method testComparator : 
	method getCompatibilityVersion : 
	method makeFullCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.PassiveExpiringMap
	method validateAndConvertToMillis : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method clear : 
	method containsKey : 
	method containsValue : 
	method entrySet : 
	method get : 
	method isEmpty : 
	method isExpired : 
	method keySet : 
	method now : 
	method put : 
	method putAll : 
	method remove : 
	method removeAllExpired : 
	method removeIfExpired : 
	method size : 
	method readObject : 
	method writeObject : 
	method values : 
	method access$000 : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.OnePredicate
	method onePredicate : 
	method onePredicate : 
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.SkippingIterator
	method <init> : 
	method init : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator
	method <init> : 
	method next : 
	method remove : 
	method hasPrevious : 
	method previous : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.AbstractNavigableSetTest$TestNavigableSetSubSet
	method <init> : 
	method <init> : 
	method isNullSupported : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isFailFastSupported : 
	method getFullElements : 
	method getOtherElements : 
	method getSubSet : 
	method makeObject : 
	method makeFullCollection : 
	method isTestSerialization : 
	method bulkTestSortedSetSubSet : 
	method bulkTestSortedSetHeadSet : 
	method bulkTestSortedSetTailSet : 
	method bulkTestNavigableSetSubSet : 
	method bulkTestNavigableSetHeadSet : 
	method bulkTestNavigableSetTailSet : 
	method getConfirmed : 
	method getCollection : 
	method makeConfirmedCollection : 
	method makeFullCollection : 
	method makeObject : 
	method getConfirmed : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeConfirmedCollection : 
	method getConfirmed : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.CollatingIteratorTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method testGetSetComparator : 
	method testIterateEven : 
	method testIterateEvenOdd : 
	method testIterateOddEven : 
	method testIterateEvenEven : 
	method testIterateFibEvenOdd : 
	method testRemoveFromSingle : 
	method testRemoveFromDouble : 
	method testNullComparator : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.ReferenceIdentityMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method hash : 
	method hashEntry : 
	method isEqualKey : 
	method isEqualValue : 
	method writeObject : 
	method readObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.PredicatedSetTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory
	method <init> : 
	method create : 
	method readObject : 
	method create : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$10
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.AbstractMockPredicateTest
	method <init> : 
	method createVerifyList : 
	method verifyPredicates : 
	method getTestValue : 
	method createMockPredicate : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.IndexedCollectionTest$1
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$13
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.TreeList$AVLNode
	method <init> : 
	method <init> : 
	method <init> : 
	method getValue : 
	method setValue : 
	method get : 
	method indexOf : 
	method toArray : 
	method next : 
	method previous : 
	method insert : 
	method insertOnLeft : 
	method insertOnRight : 
	method getLeftSubTree : 
	method getRightSubTree : 
	method max : 
	method min : 
	method remove : 
	method removeMax : 
	method removeMin : 
	method removeSelf : 
	method balance : 
	method getOffset : 
	method setOffset : 
	method recalcHeight : 
	method getHeight : 
	method heightRightMinusLeft : 
	method rotateLeft : 
	method rotateRight : 
	method setLeft : 
	method setRight : 
	method addAll : 
	method toString : 
	method <init> : 
	method access$100 : 
	method <init> : 
	method access$300 : 
	method access$400 : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$11
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils$12
	method <init> : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.AbstractSortedSetDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method subSet : 
	method headSet : 
	method tailSet : 
	method first : 
	method last : 
	method comparator : 
	method decorated : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.ReplacementsFinder
	method <init> : 
	method visitInsertCommand : 
	method visitKeepCommand : 
	method visitDeleteCommand : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.IfTransformer
	method ifTransformer : 
	method ifTransformer : 
	method <init> : 
	method transform : 
	method getPredicate : 
	method getTrueTransformer : 
	method getFalseTransformer : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.TransformedSetTest
	method <init> : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method testTransformedSet : 
	method testTransformedSet_decorateTransform : 
	method getCompatibilityVersion : 
	method makeConfirmedFullCollection : 
	method makeConfirmedCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet
	method <init> : 
	method iterator : 
	method size : 
	method isEmpty : 
	method contains : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.LazyList
	method lazyList : 
	method <init> : 
	method get : 
	method subList : 
 ====================================== 
** CLASS org.apache.commons.collections4.ListUtils$Partition
	method <init> : 
	method get : 
	method size : 
	method isEmpty : 
	method get : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator
	method <init> : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet$KeyIterator
	method <init> : 
	method next : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.QueueUtils
	method <init> : 
	method synchronizedQueue : 
	method unmodifiableQueue : 
	method predicatedQueue : 
	method transformingQueue : 
	method emptyQueue : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.UnmodifiableListIterator
	method umodifiableListIterator : 
	method <init> : 
	method hasNext : 
	method next : 
	method nextIndex : 
	method hasPrevious : 
	method previous : 
	method previousIndex : 
	method remove : 
	method set : 
	method add : 
 ====================================== 
** CLASS org.apache.commons.collections4.Trie
	method prefixMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.NotNullPredicate
	method notNullPredicate : 
	method <init> : 
	method evaluate : 
	method readResolve : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.DefaultEquator
	method defaultEquator : 
	method <init> : 
	method equate : 
	method hash : 
	method readResolve : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.UnmodifiableSortedBag
	method unmodifiableSortedBag : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method iterator : 
	method add : 
	method addAll : 
	method clear : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method add : 
	method remove : 
	method uniqueSet : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMultiSetTest$TestMultiSetUniqueSet
	method <init> : 
	method getFullElements : 
	method getOtherElements : 
	method makeObject : 
	method makeFullCollection : 
	method isNullSupported : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isTestSerialization : 
	method resetEmpty : 
	method resetFull : 
	method verify : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ObjectGraphIteratorTest$Leaf
	method <init> : 
	method getColour : 
	method setColour : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry
	method <init> : 
	method equals : 
	method hashCode : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.MultiValueMap$ValuesIterator
	method <init> : 
	method remove : 
	method hasNext : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator
	method <init> : 
	method hasNext : 
	method next : 
	method hasPrevious : 
	method previous : 
	method remove : 
	method getKey : 
	method getValue : 
	method setValue : 
	method reset : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.UnmodifiableQueue
	method unmodifiableQueue : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method iterator : 
	method add : 
	method addAll : 
	method clear : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method offer : 
	method poll : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap$AsMapEntrySet
	method <init> : 
	method iterator : 
	method size : 
	method clear : 
	method contains : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.MultiMapUtilsTest
	method <init> : 
	method testEmptyUnmodifiableMultiValuedMap : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $z0 = interfaceinvoke r1.<org.apache.commons.collections4.MultiValuedMap: boolean isEmpty()>()
Unit: r0 := @this: org.apache.commons.collections4.MultiMapUtilsTest
Unit: r2 = $r3
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Should throw UnsupportedOperationException")
Unit: interfaceinvoke r1.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("key", "value")
Unit: r1 = <org.apache.commons.collections4.MultiMapUtils: org.apache.commons.collections4.MultiValuedMap EMPTY_MULTI_VALUED_MAP>
Unit: goto [?= return]
Unit: return
Unit: $r3 := @caughtexception
	method testTypeSafeEmptyMultiValuedMap : 
Unit: r0 := @this: org.apache.commons.collections4.MultiMapUtilsTest
Unit: interfaceinvoke r1.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("key", "value")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: r2 = $r3
Unit: r1 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: org.apache.commons.collections4.MultiValuedMap emptyMultiValuedMap()>()
Unit: $z0 = interfaceinvoke r1.<org.apache.commons.collections4.MultiValuedMap: boolean isEmpty()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Should throw UnsupportedOperationException")
Unit: $r3 := @caughtexception
Unit: return
Unit: goto [?= return]
	method testEmptyIfNull : 
Unit: $r2 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: org.apache.commons.collections4.MultiValuedMap emptyIfNull(org.apache.commons.collections4.MultiValuedMap)>(null)
Unit: interfaceinvoke r1.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("item", "value")
Unit: $z2 = interfaceinvoke $r4.<org.apache.commons.collections4.MultiValuedMap: boolean isEmpty()>()
Unit: $z0 = interfaceinvoke $r2.<org.apache.commons.collections4.MultiValuedMap: boolean isEmpty()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r3 = new org.apache.commons.collections4.multimap.ArrayListValuedHashMap
Unit: r1 = $r3
Unit: return
Unit: specialinvoke $r3.<org.apache.commons.collections4.multimap.ArrayListValuedHashMap: void <init>()>()
Unit: $r4 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: org.apache.commons.collections4.MultiValuedMap emptyIfNull(org.apache.commons.collections4.MultiValuedMap)>(r1)
Unit: r0 := @this: org.apache.commons.collections4.MultiMapUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2)
	method testIsEmptyWithEmptyMap : 
Unit: $z0 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: boolean isEmpty(org.apache.commons.collections4.MultiValuedMap)>(r1)
Unit: r1 = $r2
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r2 = new org.apache.commons.collections4.multimap.ArrayListValuedHashMap
Unit: return
Unit: specialinvoke $r2.<org.apache.commons.collections4.multimap.ArrayListValuedHashMap: void <init>()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
Unit: r0 := @this: org.apache.commons.collections4.MultiMapUtilsTest
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
	method testIsEmptyWithNonEmptyMap : 
Unit: r0 := @this: org.apache.commons.collections4.MultiMapUtilsTest
Unit: $z1 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: boolean isEmpty(org.apache.commons.collections4.MultiValuedMap)>(r1)
Unit: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: return
Unit: $r2 = new org.apache.commons.collections4.multimap.ArrayListValuedHashMap
Unit: interfaceinvoke r1.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("item", "value")
Unit: specialinvoke $r2.<org.apache.commons.collections4.multimap.ArrayListValuedHashMap: void <init>()>()
Unit: r1 = $r2
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4)
	method testIsEmptyWithNull : 
Unit: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z0 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: boolean isEmpty(org.apache.commons.collections4.MultiValuedMap)>(null)
Unit: r0 := @this: org.apache.commons.collections4.MultiMapUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r2)
Unit: return
Unit: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
	method testGetCollection : 
Unit: $r5[2] = "v3"
Unit: r7 = r1
Unit: $z0 = interfaceinvoke r9.<java.util.Collection: boolean contains(java.lang.Object)>(r3)
Unit: $r5[0] = "v1"
Unit: i2 = lengthof r10
Unit: interfaceinvoke r2.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("key1", r8)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r4)
Unit: if i1 >= i0 goto r9 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: java.util.Collection getCollection(org.apache.commons.collections4.MultiValuedMap,java.lang.Object)>(r2, "key1")
Unit: i0 = lengthof r7
Unit: i3 = i3 + 1
Unit: r0 := @this: org.apache.commons.collections4.MultiMapUtilsTest
Unit: $r5[1] = "v2"
Unit: r2 = $r6
Unit: goto [?= (branch)]
Unit: $r5 = newarray (java.lang.String)[3]
Unit: i1 = 0
Unit: i3 = 0
Unit: goto [?= (branch)]
Unit: r1 = $r5
Unit: r9 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: java.util.Collection getCollection(org.apache.commons.collections4.MultiValuedMap,java.lang.Object)>(r2, "key1")
Unit: r3 = r10[i3]
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r4 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: java.util.Collection getCollection(org.apache.commons.collections4.MultiValuedMap,java.lang.Object)>(null, "key1")
Unit: i1 = i1 + 1
Unit: specialinvoke $r6.<org.apache.commons.collections4.multimap.ArrayListValuedHashMap: void <init>()>()
Unit: $r6 = new org.apache.commons.collections4.multimap.ArrayListValuedHashMap
Unit: r8 = r7[i1]
Unit: r10 = r1
Unit: if i3 >= i2 goto return
	method testGetValuesAsList : 
Unit: $r3 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: java.util.List getValuesAsList(org.apache.commons.collections4.MultiValuedMap,java.lang.Object)>(null, "key1")
Unit: $r5 = new org.apache.commons.collections4.multimap.ArrayListValuedHashMap
Unit: r11 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>()
Unit: $i0 = i3
Unit: $r4 = newarray (java.lang.String)[3]
Unit: $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $r4[2] = "v3"
Unit: i3 = 0
Unit: $r4[0] = "v1"
Unit: r12 = (java.lang.String) $r6
Unit: $z1 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>($r7)
Unit: i2 = i2 + 1
Unit: if i2 >= i1 goto r10 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: java.util.List getValuesAsList(org.apache.commons.collections4.MultiValuedMap,java.lang.Object)>(r2, "key1")
Unit: $r7 = r1[$i0]
Unit: goto [?= $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
Unit: r1 = $r4
Unit: i1 = lengthof r8
Unit: interfaceinvoke r2.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("key1", r9)
Unit: $r4[1] = "v2"
Unit: r9 = r8[i2]
Unit: if $z0 == 0 goto return
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r3)
Unit: specialinvoke $r5.<org.apache.commons.collections4.multimap.ArrayListValuedHashMap: void <init>()>()
Unit: r0 := @this: org.apache.commons.collections4.MultiMapUtilsTest
Unit: i3 = i3 + 1
Unit: r2 = $r5
Unit: goto [?= (branch)]
Unit: i2 = 0
Unit: $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
Unit: r8 = r1
Unit: r10 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: java.util.List getValuesAsList(org.apache.commons.collections4.MultiValuedMap,java.lang.Object)>(r2, "key1")
	method testGetValuesAsSet : 
Unit: $z0 = interfaceinvoke r9.<java.util.Set: boolean contains(java.lang.Object)>(r3)
Unit: i2 = lengthof r7
Unit: $r6 = new org.apache.commons.collections4.multimap.ArrayListValuedHashMap
Unit: r1 = $r5
Unit: i3 = i3 + 1
Unit: $r5[1] = "v2"
Unit: if i3 >= i2 goto r9 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: java.util.Set getValuesAsSet(org.apache.commons.collections4.MultiValuedMap,java.lang.Object)>(r2, "key1")
Unit: r10 = r1
Unit: if i5 >= i4 goto return
Unit: r2 = $r6
Unit: $l1 = (long) $i0
Unit: i5 = i5 + 1
Unit: i3 = 0
Unit: goto [?= (branch)]
Unit: r3 = r10[i5]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l1)
Unit: $r5 = newarray (java.lang.String)[3]
Unit: specialinvoke $r6.<org.apache.commons.collections4.multimap.ArrayListValuedHashMap: void <init>()>()
Unit: interfaceinvoke r2.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("key1", r8)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: interfaceinvoke r2.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("key1", r8)
Unit: goto [?= (branch)]
Unit: $r5[2] = "v3"
Unit: r0 := @this: org.apache.commons.collections4.MultiMapUtilsTest
Unit: r7 = r1
Unit: $r4 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: java.util.List getValuesAsList(org.apache.commons.collections4.MultiValuedMap,java.lang.Object)>(null, "key1")
Unit: r8 = r7[i3]
Unit: r9 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: java.util.Set getValuesAsSet(org.apache.commons.collections4.MultiValuedMap,java.lang.Object)>(r2, "key1")
Unit: return
Unit: $r5[0] = "v1"
Unit: $i0 = interfaceinvoke r9.<java.util.Set: int size()>()
Unit: i5 = 0
Unit: i4 = lengthof r10
	method testGetValuesAsBag : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: interfaceinvoke r2.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("key1", r8)
Unit: if i7 >= i6 goto return
Unit: $z0 = interfaceinvoke r9.<org.apache.commons.collections4.Bag: boolean contains(java.lang.Object)>(r3)
Unit: $r6 = new org.apache.commons.collections4.multimap.ArrayListValuedHashMap
Unit: $r4 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: org.apache.commons.collections4.Bag getValuesAsBag(org.apache.commons.collections4.MultiValuedMap,java.lang.Object)>(null, "key1")
Unit: $i2 = interfaceinvoke r9.<org.apache.commons.collections4.Bag: int getCount(java.lang.Object)>(r3)
Unit: r2 = $r6
Unit: r0 := @this: org.apache.commons.collections4.MultiMapUtilsTest
Unit: $r5 = newarray (java.lang.String)[3]
Unit: r7 = r1
Unit: if i5 >= i4 goto r9 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: org.apache.commons.collections4.Bag getValuesAsBag(org.apache.commons.collections4.MultiValuedMap,java.lang.Object)>(r2, "key1")
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3)
Unit: r9 = staticinvoke <org.apache.commons.collections4.MultiMapUtils: org.apache.commons.collections4.Bag getValuesAsBag(org.apache.commons.collections4.MultiValuedMap,java.lang.Object)>(r2, "key1")
Unit: r3 = r10[i7]
Unit: r10 = r1
Unit: i5 = 0
Unit: interfaceinvoke r2.<org.apache.commons.collections4.MultiValuedMap: boolean put(java.lang.Object,java.lang.Object)>("key1", r8)
Unit: $r5[2] = "v3"
Unit: i4 = lengthof r7
Unit: goto [?= (branch)]
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r4)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l1)
Unit: i6 = lengthof r10
Unit: specialinvoke $r6.<org.apache.commons.collections4.multimap.ArrayListValuedHashMap: void <init>()>()
Unit: i5 = i5 + 1
Unit: i7 = 0
Unit: $l1 = (long) $i0
Unit: i7 = i7 + 1
Unit: r1 = $r5
Unit: $l3 = (long) $i2
Unit: $r5[0] = "v1"
Unit: goto [?= (branch)]
Unit: $r5[1] = "v2"
Unit: $i0 = interfaceinvoke r9.<org.apache.commons.collections4.Bag: int size()>()
Unit: r8 = r7[i5]
 ====================================== 
** CLASS org.apache.commons.collections4.map.TransformedSortedMap
	method transformingSortedMap : 
	method transformedSortedMap : 
	method <init> : 
	method getSortedMap : 
	method firstKey : 
	method lastKey : 
	method comparator : 
	method subMap : 
	method headMap : 
	method tailMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.SynchronizedBagTest
	method <init> : 
	method suite : 
	method makeObject : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.EmptyListIterator
	method resettableEmptyListIterator : 
	method emptyListIterator : 
	method <init> : 
	method reset : 
	method remove : 
	method set : 
	method add : 
	method previousIndex : 
	method nextIndex : 
	method previous : 
	method hasPrevious : 
	method next : 
	method hasNext : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ReverseListIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method testEmptyListIteratorIsIndeedEmpty : 
	method testWalkForwardAndBack : 
	method testReverse : 
	method testReset : 
	method makeObject : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ObjectArrayIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeArrayIterator : 
	method makeArrayIterator : 
	method makeArrayIterator : 
	method makeArrayIterator : 
	method supportsRemove : 
	method testIterator : 
	method testNullArray : 
	method testReset : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.SequencesComparator
	method <init> : 
	method <init> : 
	method getScript : 
	method buildSnake : 
	method getMiddleSnake : 
	method buildScript : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.SetUniqueList$SetListIterator
	method <init> : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.Flat3Map$EntryIterator
	method <init> : 
	method hasNext : 
	method nextEntry : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.TransformedSortedBagTest
	method <init> : 
	method suite : 
	method makeObject : 
	method testTransformedBag : 
	method testTransformedBag_decorateTransform : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractMapTest$TestMapKeySet
	method <init> : 
	method getFullElements : 
	method getOtherElements : 
	method makeObject : 
	method makeFullCollection : 
	method isNullSupported : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isTestSerialization : 
	method resetEmpty : 
	method resetFull : 
	method verify : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.PredicatedQueueTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.FixedOrderComparator$1
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ComparatorPredicateTest
	method <init> : 
	method compareEquals : 
Unit: $r3 = new org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator
Unit: r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicateTest
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r4)
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r5)
Unit: $i4 = $i3 + 1
Unit: r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: return
Unit: r2 = staticinvoke <org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object,java.util.Comparator)>(r1, $r3)
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
Unit: $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
Unit: $i1 = $i0 - 1
Unit: $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: specialinvoke $r3.<org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator: void <init>(org.apache.commons.collections4.functors.ComparatorPredicateTest,org.apache.commons.collections4.functors.ComparatorPredicateTest$1)>(r0, null)
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r6)
Unit: $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
	method compareGreater : 
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
Unit: $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
Unit: $r4 = <org.apache.commons.collections4.functors.ComparatorPredicate$Criterion: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion GREATER>
Unit: $i4 = $i3 + 1
Unit: r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: r2 = staticinvoke <org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)>(r1, $r3, $r4)
Unit: r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicateTest
Unit: $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r6)
Unit: return
Unit: $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: $i1 = $i0 - 1
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r5)
Unit: $r3 = new org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator
Unit: specialinvoke $r3.<org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator: void <init>(org.apache.commons.collections4.functors.ComparatorPredicateTest,org.apache.commons.collections4.functors.ComparatorPredicateTest$1)>(r0, null)
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r7)
	method compareLess : 
Unit: $r4 = <org.apache.commons.collections4.functors.ComparatorPredicate$Criterion: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion LESS>
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
Unit: $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicateTest
Unit: $i4 = $i3 + 1
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r6)
Unit: $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: specialinvoke $r3.<org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator: void <init>(org.apache.commons.collections4.functors.ComparatorPredicateTest,org.apache.commons.collections4.functors.ComparatorPredicateTest$1)>(r0, null)
Unit: r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $i1 = $i0 - 1
Unit: $r3 = new org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator
Unit: r2 = staticinvoke <org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)>(r1, $r3, $r4)
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r7)
Unit: $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r5)
Unit: return
	method compareGreaterOrEqual : 
Unit: specialinvoke $r3.<org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator: void <init>(org.apache.commons.collections4.functors.ComparatorPredicateTest,org.apache.commons.collections4.functors.ComparatorPredicateTest$1)>(r0, null)
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r6)
Unit: $r3 = new org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator
Unit: r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: return
Unit: $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
Unit: $r4 = <org.apache.commons.collections4.functors.ComparatorPredicate$Criterion: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion GREATER_OR_EQUAL>
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r5)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
Unit: $i1 = $i0 - 1
Unit: r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicateTest
Unit: $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r7)
Unit: $i4 = $i3 + 1
Unit: r2 = staticinvoke <org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)>(r1, $r3, $r4)
	method compareLessOrEqual : 
Unit: $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
Unit: $r3 = new org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator
Unit: $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: $i4 = $i3 + 1
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r6)
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r5)
Unit: $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
Unit: r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
Unit: $r4 = <org.apache.commons.collections4.functors.ComparatorPredicate$Criterion: org.apache.commons.collections4.functors.ComparatorPredicate$Criterion LESS_OR_EQUAL>
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
Unit: specialinvoke $r3.<org.apache.commons.collections4.functors.ComparatorPredicateTest$TestComparator: void <init>(org.apache.commons.collections4.functors.ComparatorPredicateTest,org.apache.commons.collections4.functors.ComparatorPredicateTest$1)>(r0, null)
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.ComparatorPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r2, $r7)
Unit: r0 := @this: org.apache.commons.collections4.functors.ComparatorPredicateTest
Unit: r2 = staticinvoke <org.apache.commons.collections4.functors.ComparatorPredicate: org.apache.commons.collections4.Predicate comparatorPredicate(java.lang.Object,java.util.Comparator,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion)>(r1, $r3, $r4)
Unit: return
Unit: $i1 = $i0 - 1
	method generatePredicate : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMapTest$TestMultiValuedMapKeys
	method <init> : 
	method getFullElements : 
	method makeObject : 
	method makeFullCollection : 
	method isNullSupported : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isTestSerialization : 
	method resetFull : 
	method resetEmpty : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.AbstractCollectionDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method setCollection : 
	method add : 
	method addAll : 
	method clear : 
	method contains : 
	method isEmpty : 
	method iterator : 
	method remove : 
	method size : 
	method toArray : 
	method toArray : 
	method containsAll : 
	method removeAll : 
	method retainAll : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractSetValuedMap$WrappedSet
	method <init> : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.CompositeMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method setMutator : 
	method addComposited : 
	method removeComposited : 
	method clear : 
	method containsKey : 
	method containsValue : 
	method entrySet : 
	method get : 
	method isEmpty : 
	method keySet : 
	method put : 
	method putAll : 
	method remove : 
	method size : 
	method values : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.PredicatedSet
	method predicatedSet : 
	method <init> : 
	method decorated : 
	method equals : 
	method hashCode : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.TransformIterator
	method <init> : 
	method <init> : 
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method getIterator : 
	method setIterator : 
	method getTransformer : 
	method setTransformer : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractMapTest$TestMapValues
	method <init> : 
	method getFullElements : 
	method getOtherElements : 
	method makeObject : 
	method makeFullCollection : 
	method isNullSupported : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isTestSerialization : 
	method areEqualElementsDistinguishable : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method resetFull : 
	method resetEmpty : 
	method verify : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractSortedMapTest$TestSubMap
	method <init> : 
	method makeObject : 
	method makeFullMap : 
	method testSubMapOutOfRange : 
	method getCompatibilityVersion : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableGet
	method mapIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.Flat3Map$EntrySetIterator
	method <init> : 
	method next : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.EditCommand
	method <init> : 
	method getObject : 
	method accept : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.SkippingIteratorTest$1
	method <init> : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.junit.ObjectToStringComparator
	method <init> : 
	method compare : 
 ====================================== 
** CLASS org.apache.commons.collections4.BagUtilsTest
	method <init> : 
	method testSynchronizedBag : 
Unit: specialinvoke $r3.<org.apache.commons.collections4.bag.HashBag: void <init>()>()
Unit: staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.Bag synchronizedBag(org.apache.commons.collections4.Bag)>(null)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be a SynchronizedBag.", $z0)
Unit: $z0 = r1 instanceof org.apache.commons.collections4.bag.SynchronizedBag
Unit: r2 = $r5
Unit: r1 = staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.Bag synchronizedBag(org.apache.commons.collections4.Bag)>($r3)
Unit: $r5 := @caughtexception
Unit: r0 := @this: org.apache.commons.collections4.BagUtilsTest
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null bag.")
Unit: $r3 = new org.apache.commons.collections4.bag.HashBag
Unit: goto [?= return]
Unit: return
	method testUnmodifiableBag : 
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null bag.")
Unit: $r3 = new org.apache.commons.collections4.bag.HashBag
Unit: specialinvoke $r3.<org.apache.commons.collections4.bag.HashBag: void <init>()>()
Unit: $r5 = staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.Bag unmodifiableBag(org.apache.commons.collections4.Bag)>(r1)
Unit: r2 = $r6
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("UnmodifiableBag shall not be decorated", r1, $r5)
Unit: $r6 := @caughtexception
Unit: $z0 = r1 instanceof org.apache.commons.collections4.bag.UnmodifiableBag
Unit: r0 := @this: org.apache.commons.collections4.BagUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be an UnmodifiableBag.", $z0)
Unit: goto [?= $r5 = staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.Bag unmodifiableBag(org.apache.commons.collections4.Bag)>(r1)]
Unit: return
Unit: staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.Bag unmodifiableBag(org.apache.commons.collections4.Bag)>(null)
Unit: r1 = staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.Bag unmodifiableBag(org.apache.commons.collections4.Bag)>($r3)
	method testPredicatedBag : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be a PredicatedBag.", $z0)
Unit: return
Unit: r10 = $r9
Unit: r11 = $r8
Unit: r0 := @this: org.apache.commons.collections4.BagUtilsTest
Unit: $z0 = r1 instanceof org.apache.commons.collections4.bag.PredicatedBag
Unit: $r6 = new org.apache.commons.collections4.bag.HashBag
Unit: specialinvoke $r2.<org.apache.commons.collections4.bag.HashBag: void <init>()>()
Unit: $r3 = r0.<org.apache.commons.collections4.BagUtilsTest: org.apache.commons.collections4.Predicate truePredicate>
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null bag.")
Unit: specialinvoke $r6.<org.apache.commons.collections4.bag.HashBag: void <init>()>()
Unit: $r9 := @caughtexception
Unit: goto [?= $r6 = new org.apache.commons.collections4.bag.HashBag]
Unit: $r4 = r0.<org.apache.commons.collections4.BagUtilsTest: org.apache.commons.collections4.Predicate truePredicate>
Unit: staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.Bag predicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)>(null, $r4)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null predicate.")
Unit: r1 = staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.Bag predicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)>($r2, $r3)
Unit: staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.Bag predicatedBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Predicate)>($r6, null)
Unit: goto [?= return]
Unit: $r2 = new org.apache.commons.collections4.bag.HashBag
Unit: $r8 := @caughtexception
	method testTransformedBag : 
Unit: $r4 = r0.<org.apache.commons.collections4.BagUtilsTest: org.apache.commons.collections4.Transformer nopTransformer>
Unit: $r2 = new org.apache.commons.collections4.bag.HashBag
Unit: staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.Bag transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)>(null, $r4)
Unit: $r6 = new org.apache.commons.collections4.bag.HashBag
Unit: $z0 = r1 instanceof org.apache.commons.collections4.bag.TransformedBag
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null bag.")
Unit: staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.Bag transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)>($r6, null)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null transformer.")
Unit: r1 = staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.Bag transformingBag(org.apache.commons.collections4.Bag,org.apache.commons.collections4.Transformer)>($r2, $r3)
Unit: goto [?= return]
Unit: specialinvoke $r2.<org.apache.commons.collections4.bag.HashBag: void <init>()>()
Unit: $r8 := @caughtexception
Unit: goto [?= $r6 = new org.apache.commons.collections4.bag.HashBag]
Unit: specialinvoke $r6.<org.apache.commons.collections4.bag.HashBag: void <init>()>()
Unit: r0 := @this: org.apache.commons.collections4.BagUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be an TransformedBag.", $z0)
Unit: r10 = $r8
Unit: r11 = $r9
Unit: return
Unit: $r9 := @caughtexception
Unit: $r3 = r0.<org.apache.commons.collections4.BagUtilsTest: org.apache.commons.collections4.Transformer nopTransformer>
	method testSynchronizedSortedBag : 
Unit: r2 = $r5
Unit: r0 := @this: org.apache.commons.collections4.BagUtilsTest
Unit: return
Unit: specialinvoke $r3.<org.apache.commons.collections4.bag.TreeBag: void <init>()>()
Unit: $r3 = new org.apache.commons.collections4.bag.TreeBag
Unit: staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.SortedBag synchronizedSortedBag(org.apache.commons.collections4.SortedBag)>(null)
Unit: $z0 = r1 instanceof org.apache.commons.collections4.bag.SynchronizedSortedBag
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be a SynchronizedSortedBag.", $z0)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null bag.")
Unit: r1 = staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.SortedBag synchronizedSortedBag(org.apache.commons.collections4.SortedBag)>($r3)
Unit: $r5 := @caughtexception
Unit: goto [?= return]
	method testUnmodifiableSortedBag : 
Unit: specialinvoke $r3.<org.apache.commons.collections4.bag.TreeBag: void <init>()>()
Unit: staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.SortedBag unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)>(null)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be an UnmodifiableSortedBag.", $z0)
Unit: return
Unit: $r3 = new org.apache.commons.collections4.bag.TreeBag
Unit: r1 = staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.SortedBag unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)>($r3)
Unit: r0 := @this: org.apache.commons.collections4.BagUtilsTest
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null bag.")
Unit: $r5 = staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.SortedBag unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)>(r1)
Unit: $r6 := @caughtexception
Unit: r2 = $r6
Unit: $z0 = r1 instanceof org.apache.commons.collections4.bag.UnmodifiableSortedBag
Unit: goto [?= $r5 = staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.SortedBag unmodifiableSortedBag(org.apache.commons.collections4.SortedBag)>(r1)]
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("UnmodifiableSortedBag shall not be decorated", r1, $r5)
	method testPredicatedSortedBag : 
Unit: $r8 := @caughtexception
Unit: specialinvoke $r6.<org.apache.commons.collections4.bag.TreeBag: void <init>()>()
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be a PredicatedSortedBag.", $z0)
Unit: $r9 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null predicate.")
Unit: r1 = staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.SortedBag predicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)>($r2, $r3)
Unit: $r2 = new org.apache.commons.collections4.bag.TreeBag
Unit: $r3 = r0.<org.apache.commons.collections4.BagUtilsTest: org.apache.commons.collections4.Predicate truePredicate>
Unit: $z0 = r1 instanceof org.apache.commons.collections4.bag.PredicatedSortedBag
Unit: $r4 = r0.<org.apache.commons.collections4.BagUtilsTest: org.apache.commons.collections4.Predicate truePredicate>
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null bag.")
Unit: $r6 = new org.apache.commons.collections4.bag.TreeBag
Unit: r10 = $r8
Unit: return
Unit: goto [?= $r6 = new org.apache.commons.collections4.bag.TreeBag]
Unit: staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.SortedBag predicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)>($r6, null)
Unit: specialinvoke $r2.<org.apache.commons.collections4.bag.TreeBag: void <init>()>()
Unit: r11 = $r9
Unit: staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.SortedBag predicatedSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Predicate)>(null, $r4)
Unit: r0 := @this: org.apache.commons.collections4.BagUtilsTest
	method testTransformedSortedBag : 
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null transformer.")
Unit: goto [?= return]
Unit: r0 := @this: org.apache.commons.collections4.BagUtilsTest
Unit: $r3 = r0.<org.apache.commons.collections4.BagUtilsTest: org.apache.commons.collections4.Transformer nopTransformer>
Unit: r1 = staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.SortedBag transformingSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)>($r2, $r3)
Unit: $r6 = new org.apache.commons.collections4.bag.TreeBag
Unit: goto [?= $r6 = new org.apache.commons.collections4.bag.TreeBag]
Unit: r11 = $r8
Unit: staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.SortedBag transformingSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)>($r6, null)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("Returned object should be an TransformedSortedBag", $z0)
Unit: $r9 := @caughtexception
Unit: $z0 = r1 instanceof org.apache.commons.collections4.bag.TransformedSortedBag
Unit: r10 = $r9
Unit: staticinvoke <org.apache.commons.collections4.BagUtils: org.apache.commons.collections4.SortedBag transformingSortedBag(org.apache.commons.collections4.SortedBag,org.apache.commons.collections4.Transformer)>(null, $r4)
Unit: return
Unit: specialinvoke $r6.<org.apache.commons.collections4.bag.TreeBag: void <init>()>()
Unit: $r2 = new org.apache.commons.collections4.bag.TreeBag
Unit: specialinvoke $r2.<org.apache.commons.collections4.bag.TreeBag: void <init>()>()
Unit: $r4 = r0.<org.apache.commons.collections4.BagUtilsTest: org.apache.commons.collections4.Transformer nopTransformer>
Unit: $r8 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException for null bag.")
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclass
	method <init> : 
	method removeLRU : 
 ====================================== 
** CLASS org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator
	method <init> : 
	method <init> : 
	method decorated : 
	method containsKey : 
	method containsValue : 
	method entrySet : 
	method get : 
	method remove : 
	method isEmpty : 
	method keySet : 
	method size : 
	method values : 
	method mapIterator : 
	method equals : 
	method hashCode : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.queue.UnmodifiableQueueTest
	method <init> : 
	method makeObject : 
	method makeFullCollection : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method getCollection : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isNullSupported : 
	method testQueueRemove : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method getCompatibilityVersion : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.Predicate
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.ListOrderedSet
	method listOrderedSet : 
	method listOrderedSet : 
	method listOrderedSet : 
	method <init> : 
	method <init> : 
	method <init> : 
	method asList : 
	method clear : 
	method iterator : 
	method add : 
	method addAll : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method toArray : 
	method toArray : 
	method get : 
	method indexOf : 
	method add : 
	method addAll : 
	method remove : 
	method toString : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry
	method <init> : 
	method <init> : 
	method <init> : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator
	method <init> : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.TransformedListTest
	method <init> : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method testTransformedList : 
	method testTransformedList_decorateTransform : 
	method getCompatibilityVersion : 
	method makeConfirmedFullCollection : 
	method makeConfirmedCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractSortedMapTest$TestViewMap
	method <init> : 
	method resetEmpty : 
	method resetFull : 
	method verify : 
	method bulkTestHeadMap : 
	method bulkTestTailMap : 
	method bulkTestSubMap : 
	method getSampleKeys : 
	method getSampleValues : 
	method getNewSampleValues : 
	method isAllowNullKey : 
	method isAllowNullValue : 
	method isPutAddSupported : 
	method isPutChangeSupported : 
	method isRemoveSupported : 
	method isTestSerialization : 
	method getConfirmed : 
	method getMap : 
	method makeConfirmedMap : 
	method makeFullMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView
	method <init> : 
	method iterator : 
	method contains : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMapMultiSet$UniqueSetIterator
	method <init> : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.ListOrderedSet2Test
	method <init> : 
	method makeObject : 
	method setupSet : 
	method testOrdering : 
	method testListAddRemove : 
	method testListAddIndexed : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.BidiMap
	method put : 
	method getKey : 
	method removeValue : 
	method inverseBidiMap : 
	method values : 
	method values : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMapMultiSet$MultiSetEntry
	method <init> : 
	method getElement : 
	method getCount : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap
	method <init> : 
	method <init> : 
	method size : 
	method isEmpty : 
	method containsKey : 
	method containsValue : 
	method get : 
	method put : 
	method putAll : 
	method remove : 
	method clear : 
	method getKey : 
	method removeValue : 
	method firstKey : 
	method lastKey : 
	method nextKey : 
	method previousKey : 
	method keySet : 
	method values : 
	method entrySet : 
	method mapIterator : 
	method inverseBidiMap : 
	method equals : 
	method hashCode : 
	method toString : 
	method doPut : 
	method doRemoveKey : 
	method doRemoveValue : 
	method lookup : 
	method lookupKey : 
	method lookupValue : 
	method nextGreater : 
	method nextSmaller : 
	method compare : 
	method leastNode : 
	method greatestNode : 
	method copyColor : 
	method isRed : 
	method isBlack : 
	method makeRed : 
	method makeBlack : 
	method getGrandParent : 
	method getParent : 
	method getRightChild : 
	method getLeftChild : 
	method rotateLeft : 
	method rotateRight : 
	method doRedBlackInsert : 
	method doRedBlackDelete : 
	method doRedBlackDeleteFixup : 
	method swapPosition : 
	method checkNonNullComparable : 
	method checkKey : 
	method checkValue : 
	method checkKeyAndValue : 
	method modify : 
	method grow : 
	method shrink : 
	method insertValue : 
	method doEquals : 
	method doHashCode : 
	method doToString : 
	method getMapIterator : 
	method readObject : 
	method writeObject : 
	method inverseBidiMap : 
	method removeValue : 
	method getKey : 
	method put : 
	method values : 
	method remove : 
	method get : 
	method mapIterator : 
	method previousKey : 
	method nextKey : 
	method lastKey : 
	method firstKey : 
	method access$1500 : 
	method access$1600 : 
	method access$1700 : 
	method access$1800 : 
	method access$1900 : 
	method access$2000 : 
	method access$2100 : 
	method access$2200 : 
	method access$2300 : 
	method access$2400 : 
	method access$2500 : 
	method access$2600 : 
	method access$2700 : 
	method access$2800 : 
	method access$2900 : 
	method access$3000 : 
	method access$3100 : 
	method access$3200 : 
	method access$3300 : 
 ====================================== 
** CLASS org.apache.commons.collections4.SplitMapUtils$WrappedPut
	method <init> : 
	method clear : 
	method containsKey : 
	method containsValue : 
	method entrySet : 
	method equals : 
	method get : 
	method hashCode : 
	method isEmpty : 
	method keySet : 
	method put : 
	method putAll : 
	method remove : 
	method size : 
	method values : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.CursorableLinkedList$SubCursor
	method <init> : 
	method hasNext : 
	method hasPrevious : 
	method nextIndex : 
	method add : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.InvokerTransformer
	method invokerTransformer : 
	method invokerTransformer : 
	method <init> : 
	method <init> : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.UnmodifiableMultiSetTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullCollection : 
	method getCollection : 
	method isAddSupported : 
	method isRemoveSupported : 
	method isNullSupported : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method getCompatibilityVersion : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.IteratorUtilsTest
	method <init> : 
	method createNodeList : 
	method createNodes : 
	method getImmutableIterator : 
	method getImmutableListIterator : 
	method setUp : 
	method testArrayIterator : 
Unit: goto [?= $r10 = newarray (int)[3]]
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object)>($r6)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z13)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: $r24 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: $r7 = (java.lang.Object[]) null
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IllegalArgumentException")
Unit: goto [?= r59 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object,int,int)>(r51, 2, 3)]
Unit: r1 = $r2
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z12)
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int,int)>(r1, 2, 1)
Unit: $r3 = interfaceinvoke r33.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z13)]
Unit: r43 = $r24
Unit: $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: r53 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object,int)>(r51, 1)
Unit: $z13 = 1
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object,int,int)>(r51, 2, 4)
Unit: $r10 = newarray (int)[3]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: $z12 = 0
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int,int)>(r1, -1, 1)]
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[])>($r7)
Unit: r40 = $r21
Unit: $r2[0] = "a"
Unit: $r25 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: r44 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int,int)>(r1, 2, 3)
Unit: if $z4 != 0 goto $z12 = 0
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IllegalArgumentException")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $r22 := @caughtexception
Unit: $r5 = interfaceinvoke r33.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>()
Unit: $r8 = interfaceinvoke r38.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>()
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object,int)>(r51, -1)
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object,int,int)>(r51, 2, 1)
Unit: $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>("a")
Unit: $r10[1] = 1
Unit: $r31 := @caughtexception
Unit: $r10[0] = 0
Unit: $z12 = 1
Unit: $r21 := @caughtexception
Unit: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $z10 = interfaceinvoke r56.<org.apache.commons.collections4.ResettableIterator: boolean hasNext()>()
Unit: interfaceinvoke r41.<org.apache.commons.collections4.ResettableIterator: void reset()>()
Unit: $z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>("b")
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int)>(r1, -1)
Unit: $r28 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: $r27 := @caughtexception
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int,int)>(r1, 2, 1)]
Unit: r65 = $r26
Unit: $z9 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r18)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: $z7 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r14)
Unit: $z11 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r20)
Unit: if $z10 != 0 goto $z13 = 0
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $r30 := @caughtexception
Unit: $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>("b")
Unit: r35 = $r32
Unit: r55 = $r30
Unit: return
Unit: $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>("a")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: $r4 = interfaceinvoke r33.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>()
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int,int)>(r1, 2, 4)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IllegalArgumentException")
Unit: r58 = $r28
Unit: goto [?= $r7 = (java.lang.Object[]) null]
Unit: $r19 = interfaceinvoke r59.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>()
Unit: $r26 := @caughtexception
Unit: $z5 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>("c")
Unit: goto [?= r41 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int)>(r1, 3)]
Unit: r52 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object)>(r51)
Unit: $r10[2] = 2
Unit: r33 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[])>(r1)
Unit: $r15 = interfaceinvoke r52.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>()
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object,int,int)>(r51, 2, 1)]
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int,int)>(r1, -1, 1)
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int)>(r1, 4)
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)
Unit: goto [?= r44 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int,int)>(r1, 2, 3)]
Unit: $z13 = 0
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: $r32 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z11)
Unit: $z4 = interfaceinvoke r41.<org.apache.commons.collections4.ResettableIterator: boolean hasNext()>()
Unit: $r29 := @caughtexception
Unit: $r13 = interfaceinvoke r52.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>()
Unit: r61 = $r25
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: $r2[1] = "b"
Unit: r37 = $r22
Unit: interfaceinvoke r33.<org.apache.commons.collections4.ResettableIterator: void reset()>()
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: interfaceinvoke r56.<org.apache.commons.collections4.ResettableIterator: void reset()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z12)]
Unit: $r2 = newarray (java.lang.Object)[3]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9)
Unit: $r11 = interfaceinvoke r52.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>()
Unit: $r23 := @caughtexception
Unit: r50 = $r31
Unit: r51 = $r10
Unit: r48 = $r29
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: r41 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int)>(r1, 3)
Unit: $r2[2] = "c"
Unit: r63 = $r27
Unit: r46 = $r23
Unit: r38 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int)>(r1, 1)
Unit: r56 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object,int)>(r51, 3)
Unit: $r17 = interfaceinvoke r53.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>()
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object,int,int)>(r51, -1, 1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object,int)>(r51, 4)
Unit: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $z8 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r16)
Unit: $z6 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r12)
Unit: r59 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object,int,int)>(r51, 2, 3)
Unit: interfaceinvoke r52.<org.apache.commons.collections4.ResettableIterator: void reset()>()
Unit: goto [?= r38 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object[],int)>(r1, 1)]
Unit: $r9 = interfaceinvoke r44.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object,int,int)>(r51, -1, 1)]
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: goto [?= r56 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator arrayIterator(java.lang.Object,int)>(r51, 3)]
	method testArrayListIterator : 
Unit: $z42 = 0
Unit: $z41 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z37)
Unit: $z56 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z35)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: $z42 = 1
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object,int)>(r67, -1)
Unit: $i4 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: int nextIndex()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z35)]
Unit: $r25 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object previous()>()
Unit: if $i17 != 0 goto $z48 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z55)
Unit: $z56 = 1
Unit: $z51 = 1
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int,int)>(r1, 2, 1)]
Unit: $i14 = interfaceinvoke r68.<org.apache.commons.collections4.ResettableListIterator: int nextIndex()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z53)
Unit: $z50 = 0
Unit: goto [?= r53 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int)>(r1, 1)]
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z34)]
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z30)]
Unit: $z12 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r16)
Unit: $z51 = 0
Unit: $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z33)]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: $r43 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException.")
Unit: if $i14 != 2 goto $z44 = 0
Unit: r74 = $r38
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z55)]
Unit: $z5 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>("c")
Unit: r79 = $r42
Unit: $z36 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z44)
Unit: $i20 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: int nextIndex()>()
Unit: $i7 = interfaceinvoke r53.<org.apache.commons.collections4.ResettableListIterator: int nextIndex()>()
Unit: $z28 = 1
Unit: $z46 = 1
Unit: if $i23 != -1 goto $z56 = 0
Unit: r50 = $r41
Unit: $z18 = virtualinvoke $r25.<java.lang.Object: boolean equals(java.lang.Object)>($r26)
Unit: $i16 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: int nextIndex()>()
Unit: $z4 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>("b")
Unit: $z39 = 1
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object,int)>(r67, 4)
Unit: if $z23 != 0 goto $z55 = 0
Unit: r64 = $r44
Unit: $i6 = interfaceinvoke r53.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: goto [?= $r14 = newarray (int)[3]]
Unit: r69 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object,int)>(r67, 1)
Unit: r81 = $r47
Unit: $r2[1] = "b"
Unit: $r4 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object previous()>()
Unit: $z44 = 0
Unit: $z49 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z31)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z27)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z19)
Unit: $z36 = 1
Unit: if $i22 != 1 goto $z53 = 0
Unit: if $i2 != 0 goto $z30 = 0
Unit: $z33 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z39)
Unit: $z57 = 1
Unit: $r14[0] = 0
Unit: $z8 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>("b")
Unit: $r2 = newarray (java.lang.Object)[4]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IllegalArgumentException")
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z46)]
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z40)]
Unit: r71 = $r35
Unit: $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int,int)>(r1, -1, 1)]
Unit: $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $z53 = 1
Unit: $z30 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z57)
Unit: $r46 := @caughtexception
Unit: if $i9 != -1 goto $z38 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z36)
Unit: $z21 = virtualinvoke $r31.<java.lang.Object: boolean equals(java.lang.Object)>($r32)
Unit: $z32 = 0
Unit: $i18 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: int nextIndex()>()
Unit: if $i4 != 4 goto $z32 = 0
Unit: $i3 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: int nextIndex()>()
Unit: r77 = $r37
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z12)
Unit: $r14[1] = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z41)]
Unit: $i22 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: int nextIndex()>()
Unit: $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $z37 = 1
Unit: if $i12 != 1 goto $z42 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z32)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z15)
Unit: $z50 = 1
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[])>($r10)
Unit: $r45 := @caughtexception
Unit: if $i15 != -1 goto $z45 = 0
Unit: $r47 := @caughtexception
Unit: $z43 = 0
Unit: r56 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int)>(r1, 3)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException.")
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z56)]
Unit: if $i8 != 0 goto $z37 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z37)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z46)
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object)>($r9)
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int,int)>(r1, 2, 5)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z17)
Unit: r68 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object)>(r67)
Unit: $z15 = virtualinvoke $r21.<java.lang.Object: boolean equals(java.lang.Object)>($r22)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z50)
Unit: if $i3 != 1 goto $z31 = 0
Unit: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z40)
Unit: $r21 = interfaceinvoke r68.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z53)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z29)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z50)]
Unit: $z41 = 1
Unit: $z34 = 1
Unit: $r33 = interfaceinvoke r75.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z42)]
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z36)]
Unit: if $z0 != 0 goto $z27 = 0
Unit: $z17 = virtualinvoke $r23.<java.lang.Object: boolean equals(java.lang.Object)>($r24)
Unit: if $z7 != 0 goto $z35 = 0
Unit: r75 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object,int,int)>(r67, 2, 3)
Unit: $z23 = interfaceinvoke r75.<org.apache.commons.collections4.ResettableListIterator: boolean hasPrevious()>()
Unit: if $i6 != -1 goto $z34 = 0
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IllegalArgumentException")
Unit: $z35 = 0
Unit: if $z22 != 0 goto $z54 = 0
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object,int,int)>(r67, -1, 1)
Unit: if $i13 != 1 goto $z43 = 0
Unit: $z49 = 1
Unit: $r40 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $z40 = 0
Unit: $z47 = 0
Unit: $z47 = 1
Unit: $z34 = 0
Unit: $z6 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>("d")
Unit: $r5 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z33)
Unit: $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: if $i5 != 3 goto $z33 = 0
Unit: $z27 = 0
Unit: $r42 := @caughtexception
Unit: $z29 = 0
Unit: $i8 = interfaceinvoke r53.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z38)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z47)
Unit: $i11 = interfaceinvoke r68.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z57)]
Unit: $z3 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>("a")
Unit: $r44 := @caughtexception
Unit: $i23 = interfaceinvoke r75.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z52)
Unit: if $i16 != 0 goto $z47 = 0
Unit: $r41 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z56)
Unit: $i12 = interfaceinvoke r68.<org.apache.commons.collections4.ResettableListIterator: int nextIndex()>()
Unit: $r38 := @caughtexception
Unit: $r8 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: $z11 = interfaceinvoke r68.<org.apache.commons.collections4.ResettableListIterator: boolean hasPrevious()>()
Unit: $r37 := @caughtexception
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z31)]
Unit: $z27 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z47)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z27)
Unit: $r14 = newarray (int)[3]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z48)
Unit: $z38 = 1
Unit: $r2[0] = "a"
Unit: $z10 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>("c")
Unit: goto [?= r75 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object,int,int)>(r67, 2, 3)]
Unit: r1 = $r2
Unit: $i13 = interfaceinvoke r68.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: if $i1 != 0 goto $z29 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IllegalArgumentException")
Unit: $z24 = virtualinvoke $r33.<java.lang.Object: boolean equals(java.lang.Object)>($r34)
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object,int,int)>(r67, 2, 1)]
Unit: $r17 = interfaceinvoke r68.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: $z2 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>("a")
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object,int,int)>(r67, 2, 4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9)
Unit: return
Unit: $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r15 = interfaceinvoke r68.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z43)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: r66 = $r46
Unit: $z40 = 1
Unit: $i9 = interfaceinvoke r68.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: $z57 = 0
Unit: r53 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int)>(r1, 1)
Unit: r67 = $r14
Unit: $r29 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: $z54 = 1
Unit: $i0 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: $r7 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: if $i7 != 0 goto $z36 = 0
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NoSuchElementException.")
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z38)]
Unit: if $i10 != 0 goto $z40 = 0
Unit: $z29 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z51)]
Unit: $r31 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object previous()>()
Unit: $z54 = 0
Unit: if $z11 != 0 goto $z39 = 0
Unit: $z9 = interfaceinvoke r56.<org.apache.commons.collections4.ResettableListIterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z24)
Unit: $z30 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z44)]
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z52)]
Unit: r60 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int,int)>(r1, 2, 3)
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object,int,int)>(r67, 2, 1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z28)
Unit: $i5 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int)>(r1, -1)
Unit: goto [?= r56 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int)>(r1, 3)]
Unit: $z7 = interfaceinvoke r53.<org.apache.commons.collections4.ResettableListIterator: boolean hasPrevious()>()
Unit: $r14[2] = 2
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z13)
Unit: $z46 = 0
Unit: r52 = $r43
Unit: interfaceinvoke r56.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: if $i20 != 2 goto $z51 = 0
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int)>(r1, 5)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z42)
Unit: $z19 = virtualinvoke $r27.<java.lang.Object: boolean equals(java.lang.Object)>($r28)
Unit: $z55 = 0
Unit: $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $i10 = interfaceinvoke r68.<org.apache.commons.collections4.ResettableListIterator: int nextIndex()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z45)]
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z28)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: $z16 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: boolean hasPrevious()>()
Unit: $r13 = interfaceinvoke r60.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: $r10 = (java.lang.Object[]) null
Unit: if $z26 != 0 goto $z57 = 0
Unit: goto [?= r72 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object,int)>(r67, 3)]
Unit: $r2[3] = "d"
Unit: $i2 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: if $i11 != 0 goto $z41 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z41)
Unit: $z14 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r20)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException")
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z51)
Unit: $z26 = interfaceinvoke r75.<org.apache.commons.collections4.ResettableListIterator: boolean hasNext()>()
Unit: $z33 = 0
Unit: $r11 = interfaceinvoke r53.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: $r27 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int,int)>(r1, 2, 1)
Unit: $i21 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z30)
Unit: $z32 = 1
Unit: $z52 = 1
Unit: $r3 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: $r6 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: $z39 = 0
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: $z31 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $r35 := @caughtexception
Unit: $i1 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: int nextIndex()>()
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $z43 = 1
Unit: $z48 = 0
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int,int)>(r1, -1, 1)
Unit: $i19 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: r48 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[])>(r1)
Unit: $z48 = 1
Unit: if $i18 != 1 goto $z49 = 0
Unit: $z20 = virtualinvoke $r29.<java.lang.Object: boolean equals(java.lang.Object)>($r30)
Unit: $i15 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z18)
Unit: $r23 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z14)
Unit: $z37 = 0
Unit: $i17 = interfaceinvoke r69.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z45)
Unit: r72 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object,int)>(r67, 3)
Unit: r62 = $r45
Unit: $z25 = interfaceinvoke r75.<org.apache.commons.collections4.ResettableListIterator: boolean hasPrevious()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z48)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z54)
Unit: $z31 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z34)
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int)>(r1, 5)
Unit: goto [?= r60 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object[],int,int)>(r1, 2, 3)]
Unit: $r36 := @caughtexception
Unit: if $i19 != 1 goto $z50 = 0
Unit: $z55 = 1
Unit: $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>("a")
Unit: $z35 = 1
Unit: $z45 = 0
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator arrayListIterator(java.lang.Object,int,int)>(r67, -1, 1)]
Unit: r55 = $r40
Unit: $z38 = 0
Unit: if $i21 != 0 goto $z52 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z25)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z29)]
Unit: $z45 = 1
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z43)]
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z39)]
Unit: $z53 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z54)]
Unit: $r39 := @caughtexception
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z32)]
Unit: goto [?= $r10 = (java.lang.Object[]) null]
Unit: $z22 = interfaceinvoke r72.<org.apache.commons.collections4.ResettableListIterator: boolean hasNext()>()
Unit: if $i0 != -1 goto $z28 = 0
Unit: r59 = $r39
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z49)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z20)
Unit: $z0 = interfaceinvoke r48.<org.apache.commons.collections4.ResettableListIterator: boolean hasPrevious()>()
Unit: $z28 = 0
Unit: $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z21)
Unit: r57 = $r36
Unit: $r19 = interfaceinvoke r68.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object previous()>()
Unit: $z44 = 1
Unit: $z52 = 0
Unit: if $z16 != 0 goto $z46 = 0
Unit: $r2[2] = "c"
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z49)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z10)
Unit: $z13 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r18)
	method testAsIterable : 
Unit: $r6 = new java.util.ArrayList
Unit: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)]
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: $i1 = virtualinvoke r5.<java.lang.Integer: int intValue()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("should not be able to iterate twice", $z4)
Unit: if $z3 == 0 goto (branch)
Unit: if i3 <= 0 goto $z5 = 0
Unit: $z4 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>()
Unit: $z5 = 0
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, $l2)
Unit: r4 = interfaceinvoke r3.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
Unit: goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
Unit: $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: i3 = 0
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8)
Unit: $r10 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Iterable asIterable(java.util.Iterator)>(r2)
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $l2 = (long) $i1
Unit: r1 = $r6
Unit: r3 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Iterable asIterable(java.util.Iterator)>(r2)
Unit: r5 = (java.lang.Integer) $r12
Unit: $z5 = 1
Unit: $l0 = (long) i3
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $r11 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: i3 = i3 + 1
Unit: return
	method testAsIterableNull : 
Unit: r1 = $r3
Unit: goto [?= return]
Unit: $r3 := @caughtexception
Unit: return
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Iterable asIterable(java.util.Iterator)>(null)
	method testAsMultipleIterable : 
Unit: goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)]
Unit: $r9 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
Unit: $r8 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
Unit: goto [?= $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
Unit: $l5 = (long) $i4
Unit: $r4 = new java.util.ArrayList
Unit: $i4 = virtualinvoke r11.<java.lang.Integer: int intValue()>()
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $z4 = 1
Unit: r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
Unit: if i6 <= 0 goto $z4 = 0
Unit: r12 = interfaceinvoke r3.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: $i1 = virtualinvoke r13.<java.lang.Integer: int intValue()>()
Unit: if $z5 == 0 goto (branch)
Unit: r10 = interfaceinvoke r3.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: $z6 = 0
Unit: r13 = (java.lang.Integer) $r8
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $z4 = 0
Unit: i6 = i6 + 1
Unit: $l0 = (long) i7
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: i7 = 0
Unit: $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
Unit: if $z3 == 0 goto (branch)
Unit: r1 = $r4
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: $l2 = (long) $i1
Unit: return
Unit: $l3 = (long) i6
Unit: i6 = 0
Unit: if i7 <= 0 goto $z6 = 0
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, $l2)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)]
Unit: i7 = i7 + 1
Unit: $z6 = 1
Unit: r3 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Iterable asMultipleUseIterable(java.util.Iterator)>(r2)
Unit: $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, $l5)
Unit: r11 = (java.lang.Integer) $r9
	method testAsMultipleIterableNull : 
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Iterable asMultipleUseIterable(java.util.Iterator)>(null)
Unit: r1 = $r3
Unit: goto [?= return]
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: return
Unit: $r3 := @caughtexception
	method testCollatedIterator : 
Unit: $r14 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionOdd>
Unit: $r25 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>()
Unit: $r19 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>()
Unit: $r21 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator naturalComparator()>()
Unit: $r20 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionOdd>
Unit: $r9 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionOdd>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r33)
Unit: $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>()
Unit: staticinvoke <java.util.Collections: void sort(java.util.List)>(r1)
Unit: $r27 = interfaceinvoke $r26.<java.util.List: java.util.Iterator iterator()>()
Unit: $i0 = interfaceinvoke r33.<java.util.List: int size()>()
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator collatedIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)>(null, $r4, null)
Unit: $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>()
Unit: goto [?= $r9 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionOdd>]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(12L, $l1)
Unit: $r24 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionOdd>
Unit: $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
Unit: r36 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator collatedIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)>(r2, $r25, $r27)
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator collatedIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)>(null, null, $r7)
Unit: $r11 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionEven>
Unit: $r18 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.Collection emptyCollection>
Unit: specialinvoke $r13.<java.util.ArrayList: void <init>()>()
Unit: $r26 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionEven>
Unit: $r3 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionOdd>
Unit: staticinvoke <java.util.Collections: void reverse(java.util.List)>($r22)
Unit: $r23 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionEven>
Unit: r30 = $r28
Unit: $r22 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionOdd>
Unit: r33 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.List toList(java.util.Iterator)>(r32)
Unit: r34 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator collatedIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)>(null, $r17, $r19)
Unit: $r29 := @caughtexception
Unit: r37 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.List toList(java.util.Iterator)>(r36)
Unit: $r28 := @caughtexception
Unit: staticinvoke <java.util.Collections: void reverse(java.util.List)>(r1)
Unit: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r15)
Unit: $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
Unit: r31 = $r29
Unit: r1 = $r13
Unit: $r16 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionOdd>
Unit: return
Unit: $l1 = (long) $i0
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, r35)
Unit: r32 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator collatedIterator(java.util.Comparator,java.util.Iterator,java.util.Iterator)>(null, $r10, $r12)
Unit: r2 = staticinvoke <org.apache.commons.collections4.ComparatorUtils: java.util.Comparator reversedComparator(java.util.Comparator)>($r21)
Unit: $r6 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionEven>
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: staticinvoke <java.util.Collections: void reverse(java.util.List)>($r23)
Unit: r35 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.List toList(java.util.Iterator)>(r34)
Unit: $r13 = new java.util.ArrayList
Unit: $r15 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionEven>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r37)
Unit: goto [?= $r6 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.List collectionEven>]
Unit: interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r14)
	method testEmptyIterator : 
Unit: $r25 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r13)
Unit: $z2 = $r12 instanceof org.apache.commons.collections4.OrderedIterator
Unit: $r28 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r1)
Unit: $r15 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r7)
Unit: $r1 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r18 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: $r4 = <org.apache.commons.collections4.iterators.EmptyIterator: org.apache.commons.collections4.ResettableIterator RESETTABLE_INSTANCE>
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r25, $r24)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r26, $r27)
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r22)
Unit: $r31 := @caughtexception
Unit: $r26 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: $r32 := @caughtexception
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r6 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: r34 = $r31
Unit: $r9 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: $z5 = interfaceinvoke $r21.<org.apache.commons.collections4.ResettableIterator: boolean hasNext()>()
Unit: $z1 = $r9 instanceof org.apache.commons.collections4.ResettableIterator
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: return
Unit: $r12 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r24 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r4, $r3)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r16)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r10)
Unit: $r21 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: r33 = $r32
Unit: $r3 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r27 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator emptyIterator()>()
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: interfaceinvoke $r30.<org.apache.commons.collections4.ResettableIterator: void remove()>()
Unit: $r23 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: interfaceinvoke $r28.<org.apache.commons.collections4.ResettableIterator: java.lang.Object next()>()
Unit: $r30 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: interfaceinvoke $r23.<org.apache.commons.collections4.ResettableIterator: void reset()>()
Unit: $z0 = $r6 instanceof java.util.Iterator
Unit: $z3 = $r15 instanceof java.util.ListIterator
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r19)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $z4 = $r18 instanceof org.apache.commons.collections4.MapIterator
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: goto [?= return]
Unit: $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $r2 = <org.apache.commons.collections4.iterators.EmptyIterator: java.util.Iterator INSTANCE>
Unit: goto [?= $r30 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR>]
Unit: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
	method testEmptyListIterator : 
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r16)
Unit: $r4 = <org.apache.commons.collections4.iterators.EmptyListIterator: org.apache.commons.collections4.ResettableListIterator RESETTABLE_INSTANCE>
Unit: r43 = $r39
Unit: return
Unit: interfaceinvoke $r30.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object next()>()
Unit: $l1 = (long) $i0
Unit: $r32 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: $r18 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: $r39 := @caughtexception
Unit: $r38 := @caughtexception
Unit: $r29 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator emptyListIterator()>()
Unit: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r42 = $r37
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r28 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: $r1 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: $z1 = $r9 instanceof java.util.ListIterator
Unit: $r12 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: $i2 = interfaceinvoke $r24.<org.apache.commons.collections4.ResettableListIterator: int previousIndex()>()
Unit: $r37 := @caughtexception
Unit: interfaceinvoke $r25.<org.apache.commons.collections4.ResettableListIterator: void reset()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r41 := @caughtexception
Unit: $r24 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r23 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: goto [?= $r36 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator emptyListIterator()>()]
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $l3 = (long) $i2
Unit: $r35 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator emptyListIterator()>()
Unit: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $z4 = $r18 instanceof org.apache.commons.collections4.MapIterator
Unit: $z2 = $r12 instanceof org.apache.commons.collections4.ResettableIterator
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r1)
Unit: r45 = $r38
Unit: interfaceinvoke $r35.<org.apache.commons.collections4.ResettableListIterator: void set(java.lang.Object)>(null)
Unit: $r26 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z3 = $r15 instanceof org.apache.commons.collections4.ResettableListIterator
Unit: $r9 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r4, $r3)
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r27, $r26)
Unit: $r40 := @caughtexception
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: interfaceinvoke $r36.<org.apache.commons.collections4.ResettableListIterator: void add(java.lang.Object)>(null)
Unit: $z0 = $r6 instanceof java.util.Iterator
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l3)
Unit: $r25 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: interfaceinvoke $r34.<org.apache.commons.collections4.ResettableListIterator: void remove()>()
Unit: goto [?= $r35 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator emptyListIterator()>()]
Unit: $r34 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: r44 = $r41
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r27 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r22)
Unit: $i0 = interfaceinvoke $r23.<org.apache.commons.collections4.ResettableListIterator: int nextIndex()>()
Unit: $r36 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator emptyListIterator()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1)
Unit: interfaceinvoke $r32.<org.apache.commons.collections4.ResettableListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r7)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r10)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r21 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: $r2 = <org.apache.commons.collections4.iterators.EmptyListIterator: java.util.ListIterator INSTANCE>
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r28, $r29)
Unit: goto [?= $r34 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>]
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r13)
Unit: $r30 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: r46 = $r40
Unit: $r3 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $z5 = interfaceinvoke $r21.<org.apache.commons.collections4.ResettableListIterator: boolean hasNext()>()
Unit: goto [?= return]
Unit: $r6 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: goto [?= $r32 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>]
Unit: $r15 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR>
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r19)
	method testEmptyMapIterator : 
Unit: interfaceinvoke $r33.<org.apache.commons.collections4.MapIterator: java.lang.Object getKey()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: goto [?= $r37 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>]
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r44 = $r42
Unit: $r35 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: interfaceinvoke $r30.<org.apache.commons.collections4.MapIterator: java.lang.Object next()>()
Unit: r45 = $r43
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: interfaceinvoke $r25.<org.apache.commons.collections4.ResettableIterator: void reset()>()
Unit: $z1 = $r7 instanceof org.apache.commons.collections4.MapIterator
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r23)
Unit: $r42 := @caughtexception
Unit: $r19 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: $r22 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r14)
Unit: goto [?= $r35 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>]
Unit: $z2 = $r10 instanceof org.apache.commons.collections4.ResettableIterator
Unit: $r7 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: $r26 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r11)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r28, $r29)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r48 = $r39
Unit: $z0 = $r4 instanceof java.util.Iterator
Unit: goto [?= $r32 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>]
Unit: r47 = $r41
Unit: $r33 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r8)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r27, $r26)
Unit: $z4 = $r16 instanceof org.apache.commons.collections4.OrderedIterator
Unit: $r29 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator emptyMapIterator()>()
Unit: $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6)
Unit: interfaceinvoke $r35.<org.apache.commons.collections4.MapIterator: java.lang.Object getValue()>()
Unit: $r16 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: goto [?= $r33 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>]
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r2 = <org.apache.commons.collections4.iterators.EmptyMapIterator: org.apache.commons.collections4.MapIterator INSTANCE>
Unit: goto [?= return]
Unit: $z6 = interfaceinvoke $r22.<org.apache.commons.collections4.MapIterator: boolean hasNext()>()
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r10 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: r46 = $r40
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r27 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: $r41 := @caughtexception
Unit: interfaceinvoke $r32.<org.apache.commons.collections4.MapIterator: void remove()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $z3 = $r13 instanceof java.util.ListIterator
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r24 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: $r40 := @caughtexception
Unit: $r4 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: $r32 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: $r13 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: $r25 = (org.apache.commons.collections4.ResettableIterator) $r24
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r37 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: $r43 := @caughtexception
Unit: interfaceinvoke $r37.<org.apache.commons.collections4.MapIterator: java.lang.Object setValue(java.lang.Object)>(null)
Unit: $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r28 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z5 = $r19 instanceof org.apache.commons.collections4.OrderedMapIterator
Unit: $r39 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r20)
Unit: $r1 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r1)
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r30 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR>
	method testEmptyOrderedIterator : 
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r13 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r34 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: $r7 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: r38 = $r36
Unit: $r24 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $r25 = (org.apache.commons.collections4.ResettableIterator) $r24
Unit: interfaceinvoke $r32.<org.apache.commons.collections4.OrderedIterator: java.lang.Object previous()>()
Unit: $r35 := @caughtexception
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: $r28 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r20)
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: $r22 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: interfaceinvoke $r25.<org.apache.commons.collections4.ResettableIterator: void reset()>()
Unit: $r29 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()>()
Unit: $z6 = interfaceinvoke $r22.<org.apache.commons.collections4.OrderedIterator: boolean hasPrevious()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r23)
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r27 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r27, $r26)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: interfaceinvoke $r30.<org.apache.commons.collections4.OrderedIterator: java.lang.Object next()>()
Unit: goto [?= $r32 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>]
Unit: $z0 = $r4 instanceof java.util.Iterator
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r14)
Unit: goto [?= $r34 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>]
Unit: $r32 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: $z2 = $r10 instanceof org.apache.commons.collections4.ResettableIterator
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r16 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: $z3 = $r13 instanceof java.util.ListIterator
Unit: return
Unit: $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: interfaceinvoke $r34.<org.apache.commons.collections4.OrderedIterator: void remove()>()
Unit: $r36 := @caughtexception
Unit: $r2 = <org.apache.commons.collections4.iterators.EmptyOrderedIterator: org.apache.commons.collections4.OrderedIterator INSTANCE>
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z1 = $r7 instanceof org.apache.commons.collections4.OrderedIterator
Unit: $r1 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r37 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r8)
Unit: $r19 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: $z5 = interfaceinvoke $r19.<org.apache.commons.collections4.OrderedIterator: boolean hasNext()>()
Unit: r39 = $r35
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r28, $r29)
Unit: $r4 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r11)
Unit: r40 = $r37
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: goto [?= return]
Unit: $r10 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: $r30 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: $r26 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR>
Unit: $z4 = $r16 instanceof org.apache.commons.collections4.MapIterator
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6)
Unit: staticinvoke <org.junit.Assert: void fail()>()
	method testEmptyOrderedMapIterator : 
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r28, $r29)
Unit: $r35 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r51 = $r41
Unit: $r32 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: r47 = $r46
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: interfaceinvoke $r34.<org.apache.commons.collections4.OrderedMapIterator: void remove()>()
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, $r11)
Unit: $z3 = $r13 instanceof org.apache.commons.collections4.ResettableIterator
Unit: interfaceinvoke $r32.<org.apache.commons.collections4.OrderedMapIterator: java.lang.Object previous()>()
Unit: $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r43 := @caughtexception
Unit: $r37 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Unit: $r24 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: goto [?= return]
Unit: $z4 = $r16 instanceof java.util.ListIterator
Unit: $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
Unit: $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
Unit: $r41 := @caughtexception
Unit: $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: goto [?= $r37 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>]
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r28 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r17)
Unit: $r46 := @caughtexception
Unit: goto [?= $r35 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>]
Unit: $r13 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: $z5 = interfaceinvoke $r19.<org.apache.commons.collections4.OrderedMapIterator: boolean hasNext()>()
Unit: interfaceinvoke $r25.<org.apache.commons.collections4.ResettableIterator: void reset()>()
Unit: $z6 = interfaceinvoke $r22.<org.apache.commons.collections4.OrderedMapIterator: boolean hasPrevious()>()
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: $z0 = $r4 instanceof java.util.Iterator
Unit: $z2 = $r10 instanceof org.apache.commons.collections4.OrderedMapIterator
Unit: $r2 = <org.apache.commons.collections4.iterators.EmptyOrderedMapIterator: org.apache.commons.collections4.OrderedMapIterator INSTANCE>
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r27, $r26)
Unit: $r19 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: goto [?= $r32 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>]
Unit: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
Unit: goto [?= $r39 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>]
Unit: $r22 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: r52 = $r45
Unit: $r7 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: $r29 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator emptyOrderedMapIterator()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r18, $r20)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r48 = $r43
Unit: $r10 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, $r14)
Unit: $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6)
Unit: staticinvoke <org.junit.Assert: void fail()>()
Unit: r50 = $r42
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r8)
Unit: interfaceinvoke $r35.<org.apache.commons.collections4.OrderedMapIterator: java.lang.Object getKey()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r5)
Unit: interfaceinvoke $r39.<org.apache.commons.collections4.OrderedMapIterator: java.lang.Object setValue(java.lang.Object)>(null)
Unit: $r27 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: $r26 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: interfaceinvoke $r37.<org.apache.commons.collections4.OrderedMapIterator: java.lang.Object getValue()>()
Unit: $r16 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: $r30 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: r49 = $r44
Unit: $r25 = (org.apache.commons.collections4.ResettableIterator) $r24
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r2, $r1)
Unit: goto [?= $r34 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>]
Unit: $r45 := @caughtexception
Unit: $r44 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r21, $r23)
Unit: $r34 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: $r39 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: return
Unit: $z1 = $r7 instanceof org.apache.commons.collections4.MapIterator
Unit: $r42 := @caughtexception
Unit: $r1 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: $r4 = <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>
Unit: interfaceinvoke $r30.<org.apache.commons.collections4.OrderedMapIterator: java.lang.Object next()>()
	method testFind : 
Unit: $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: $r10 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object find(java.util.Iterator,org.apache.commons.collections4.Predicate)>($r9, r18)
Unit: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: $r8 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.lang.Iterable iterableA>
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $r12 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.lang.Iterable iterableA>
Unit: $z1 = 1
Unit: r19 = (java.lang.Integer) $r10
Unit: r1 = $r15
Unit: $z1 = 0
Unit: $z0 = virtualinvoke r17.<java.lang.Integer: boolean equals(java.lang.Object)>($r6)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(45)
Unit: return
Unit: $r5 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object find(java.util.Iterator,org.apache.commons.collections4.Predicate)>($r4, r16)
Unit: $r14 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object find(java.util.Iterator,org.apache.commons.collections4.Predicate)>($r13, null)
Unit: r18 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r7)
Unit: $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: $r11 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object find(java.util.Iterator,org.apache.commons.collections4.Predicate)>(null, r18)
Unit: $r13 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: r17 = (java.lang.Integer) $r5
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r11)
Unit: r16 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r2)
Unit: $r3 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.lang.Iterable iterableA>
Unit: $r15 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: if r19 != null goto $z1 = 0
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r14)
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: goto [?= return]
	method testFirstFromIterator : 
Unit: r1 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: return
Unit: $l1 = (long) $i0
Unit: $r3 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object first(java.util.Iterator)>(r1)
Unit: $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>()
Unit: $r2 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.lang.Iterable iterableA>
Unit: $r4 = (java.lang.Integer) $r3
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
	method testForEach : 
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: $r11 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>()
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: $r13 := @caughtexception
Unit: r2 = $r8
Unit: $z4 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
Unit: $r14 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)]
Unit: if $z4 == 0 goto $z7 = 0
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: return
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: void forEach(java.util.Iterator,org.apache.commons.collections4.Closure)>($r11, r3)
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
Unit: $r10 = new java.util.ArrayList
Unit: r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear")
Unit: r4 = $r10
Unit: $z7 = 0
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: void forEach(java.util.Iterator,org.apache.commons.collections4.Closure)>($r12, r3)
Unit: r1 = $r6
Unit: $z7 = 1
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: void forEach(java.util.Iterator,org.apache.commons.collections4.Closure)>(null, r3)
Unit: $r6 = new java.util.ArrayList
Unit: specialinvoke $r8.<java.util.ArrayList: void <init>()>()
Unit: r5 = $r13
Unit: if $z6 == 0 goto $z7 = 0
Unit: $r8 = new java.util.ArrayList
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)
Unit: specialinvoke $r10.<java.util.ArrayList: void <init>()>()
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
Unit: $z6 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IteratorUtils: void forEach(java.util.Iterator,org.apache.commons.collections4.Closure)>(null, r3)]
Unit: $r12 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>()
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: void forEach(java.util.Iterator,org.apache.commons.collections4.Closure)>($r14, null)
	method testForEachButLast : 
Unit: r1 = $r6
Unit: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Unit: $z4 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)]
Unit: $r19 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>()
Unit: $z8 = 1
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: r18 = (java.util.List) $r12
Unit: if $z4 == 0 goto $z8 = 0
Unit: $r15 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>()
Unit: specialinvoke $r10.<java.util.ArrayList: void <init>()>()
Unit: $z8 = 0
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
Unit: return
Unit: $r17 := @caughtexception
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: r20 = (java.util.List) $r16
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: r5 = $r17
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(null)
Unit: $r11 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>()
Unit: $r16 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object forEachButLast(java.util.Iterator,org.apache.commons.collections4.Closure)>($r15, r3)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9)
Unit: $r10 = new java.util.ArrayList
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object forEachButLast(java.util.Iterator,org.apache.commons.collections4.Closure)>(null, r3)
Unit: staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>(r20)
Unit: r3 = staticinvoke <org.apache.commons.collections4.ClosureUtils: org.apache.commons.collections4.Closure invokerClosure(java.lang.String)>("clear")
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object forEachButLast(java.util.Iterator,org.apache.commons.collections4.Closure)>(null, r3)]
Unit: $z7 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
Unit: r2 = $r8
Unit: interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r2)
Unit: specialinvoke $r8.<java.util.ArrayList: void <init>()>()
Unit: $r6 = new java.util.ArrayList
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object forEachButLast(java.util.Iterator,org.apache.commons.collections4.Closure)>($r19, null)
Unit: if $z7 != 0 goto $z8 = 0
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: r4 = $r10
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $r12 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object forEachButLast(java.util.Iterator,org.apache.commons.collections4.Closure)>($r11, r3)
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r2, r18)
Unit: $r8 = new java.util.ArrayList
	method testGetAtIndexFromIterator : 
Unit: $r9 := @caughtexception
Unit: $r4 = (java.lang.Integer) $r3
Unit: r10 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
Unit: return
Unit: $r2 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.lang.Iterable iterableA>
Unit: r11 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: r1 = $r9
Unit: $z1 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: if $z0 != 0 goto $z1 = 0
Unit: $r5 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.lang.Iterable iterableA>
Unit: $l3 = (long) $i2
Unit: $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3)
Unit: $l1 = (long) $i0
Unit: $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>()
Unit: $z1 = 1
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $r6 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object get(java.util.Iterator,int)>(r11, 1)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting IndexOutOfBoundsException.")
Unit: goto [?= $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
Unit: $i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)]
Unit: $r7 = (java.lang.Integer) $r6
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object get(java.util.Iterator,int)>(r11, 10)
Unit: $r3 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object get(java.util.Iterator,int)>(r10, 0)
	method testGetIterator : 
Unit: $r5[2] = "c"
Unit: $r15 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator getIterator(java.lang.Object)>(r4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("returns empty iterator when null passed", $z0)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("returns NodeListIterator when nodeList passed", $z5)
Unit: $z4 = $r14 instanceof java.util.Iterator
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $r5[1] = "b"
Unit: $r13 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator getIterator(java.lang.Object)>(r1)
Unit: $z6 = $r18 instanceof org.apache.commons.collections4.iterators.EnumerationIterator
Unit: $r8 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.lang.Iterable iterableA>
Unit: $r17 = virtualinvoke $r16.<java.util.Vector: java.util.Enumeration elements()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("returns Iterator when Iterator directly ", $z1)
Unit: r1 = $r5
Unit: $z3 = $r13 instanceof org.apache.commons.collections4.iterators.ObjectArrayIterator
Unit: $r7 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator getIterator(java.lang.Object)>(null)
Unit: $r5 = newarray (java.lang.Object)[3]
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("returns Iterator when iterable passed", $z2)
Unit: $z2 = $r12 instanceof java.util.Iterator
Unit: $r12 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator getIterator(java.lang.Object)>($r11)
Unit: $r5[0] = "a"
Unit: $r16 = new java.util.Vector
Unit: r4 = specialinvoke r0.<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.NodeList createNodeList(org.w3c.dom.Node[])>(r3)
Unit: specialinvoke $r16.<java.util.Vector: void <init>()>()
Unit: $r6 = new java.util.HashMap
Unit: r3 = specialinvoke r0.<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.Node[] createNodes()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("returns ObjectArrayIterator when Object array passed", $z3)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("returns EnumerationIterator when Enumeration passed", $z6)
Unit: $z1 = $r10 instanceof java.util.Iterator
Unit: $r18 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator getIterator(java.lang.Object)>($r17)
Unit: $r10 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator getIterator(java.lang.Object)>($r9)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("returns Iterator when Map passed", $z4)
Unit: specialinvoke $r6.<java.util.HashMap: void <init>()>()
Unit: $r14 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.Iterator getIterator(java.lang.Object)>(r2)
Unit: $z0 = $r7 instanceof org.apache.commons.collections4.iterators.EmptyIterator
Unit: $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: $z5 = $r15 instanceof org.apache.commons.collections4.iterators.NodeListIterator
Unit: r2 = $r6
Unit: $r11 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.lang.Iterable iterableA>
	method testIndexOf : 
Unit: $r3 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.lang.Iterable iterableA>
Unit: i5 = staticinvoke <org.apache.commons.collections4.IteratorUtils: int indexOf(java.util.Iterator,org.apache.commons.collections4.Predicate)>($r4, r11)
Unit: r1 = $r10
Unit: $l3 = (long) $i2
Unit: return
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(45)
Unit: $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("expecting NullPointerException")
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: int indexOf(java.util.Iterator,org.apache.commons.collections4.Predicate)>($r9, null)
Unit: r12 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r5)
Unit: i6 = staticinvoke <org.apache.commons.collections4.IteratorUtils: int indexOf(java.util.Iterator,org.apache.commons.collections4.Predicate)>($r7, r12)
Unit: $l1 = (long) i6
Unit: $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: r11 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r2)
Unit: $r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: $i2 = staticinvoke <org.apache.commons.collections4.IteratorUtils: int indexOf(java.util.Iterator,org.apache.commons.collections4.Predicate)>(null, r12)
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l3)
Unit: $r10 := @caughtexception
Unit: goto [?= return]
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-1L, $l1)
Unit: $l0 = (long) i5
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>(6L, $l0)
Unit: $r6 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.lang.Iterable iterableA>
Unit: $r8 = r0.<org.apache.commons.collections4.IteratorUtilsTest: java.lang.Iterable iterableA>
	method testNodeIterator : 
Unit: $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
Unit: if $z0 == 0 goto (branch)
Unit: $r10 = newarray (java.lang.Object)[1]
Unit: r4 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(org.w3c.dom.Node)>(r3)
Unit: interfaceinvoke $r9.<org.easymock.IExpectationSetters: void andStubReturn(java.lang.Object)>(r2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, r6)
Unit: r2 = specialinvoke r0.<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.NodeList createNodeList(org.w3c.dom.Node[])>(r1)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
Unit: $z2 = 0
Unit: r1 = specialinvoke r0.<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.Node[] createNodes()>()
Unit: i0 = i0 + 1
Unit: $r8 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>()
Unit: $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
Unit: $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>()
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: if i0 <= 0 goto $z2 = 0
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
Unit: r5 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("should not be able to iterate twice", $z1)
Unit: r3 = (org.w3c.dom.Node) $r7
Local: r3
Must Mock: true

Unit: $r10[0] = r3
Local: $r10
Array Mock: true

Unit: $r12 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Iterable asIterable(java.util.Iterator)>(r4)
Unit: i0 = 0
Unit: return
Unit: r6 = (org.w3c.dom.Node) $r14
Unit: staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r10)
Unit: $r15 = r1[i0]
Unit: $r13 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/w3c/dom/Node;")
Local: $r7
Must Mock: true

Unit: $z2 = 1
Unit: $r11 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Iterable asIterable(java.util.Iterator)>(r4)
Unit: $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
	method testNodeListIterator : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: $z2 = 1
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("should not be able to iterate twice", $z1)
Unit: $z2 = 0
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)]
Unit: r2 = specialinvoke r0.<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.NodeList createNodeList(org.w3c.dom.Node[])>(r1)
Unit: $r6 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Iterable asIterable(java.util.Iterator)>(r3)
Unit: $r7 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Iterable asIterable(java.util.Iterator)>(r3)
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: r3 = staticinvoke <org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(org.w3c.dom.NodeList)>(r2)
Unit: i0 = 0
Unit: $r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
Unit: if i0 <= 0 goto $z2 = 0
Unit: r1 = specialinvoke r0.<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.Node[] createNodes()>()
Unit: $r10 = r1[i0]
Unit: r5 = (org.w3c.dom.Node) $r9
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, r5)
Unit: $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Unit: $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>()
Unit: if $z0 == 0 goto (branch)
Unit: goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
Unit: r4 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>()
Unit: return
Unit: i0 = i0 + 1
	method testToArray : 
Unit: r3 = $r9
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: $r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: r1 = $r4
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object[] toArray(java.util.Iterator)>(null)
Unit: $r4 = new java.util.ArrayList
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2)
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r7)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("Two")
Unit: goto [?= return]
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
Unit: r2 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object[] toArray(java.util.Iterator)>($r6)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: return
Unit: $r9 := @caughtexception
	method testToArray2 : 
Unit: r2 = (java.lang.String[]) $r5
Unit: goto [?= return]
Unit: r13 = $r10
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("Two")
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r6)
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: $r3 = new java.util.ArrayList
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("One")
Unit: $r7 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: return
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: r12 = $r11
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object[] toArray(java.util.Iterator,java.lang.Class)>(null, class "Ljava/lang/String;")
Unit: $r11 := @caughtexception
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: goto [?= staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object[] toArray(java.util.Iterator,java.lang.Class)>(null, class "Ljava/lang/String;")]
Unit: $r10 := @caughtexception
Unit: $r5 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object[] toArray(java.util.Iterator,java.lang.Class)>($r4, class "Ljava/lang/String;")
Unit: $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2)
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: java.lang.Object[] toArray(java.util.Iterator,java.lang.Class)>($r7, null)
Unit: r1 = $r3
	method testToList : 
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: return
Unit: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
Unit: r1 = $r3
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4)
Unit: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: $r3 = new java.util.ArrayList
Unit: r2 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.List toList(java.util.Iterator)>($r5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, r2)
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("Two")
	method testToListIterator : 
Unit: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
Unit: $r4 = new java.util.ArrayList
Unit: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
Unit: $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, $l2)
Unit: specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Unit: $l0 = (long) i3
Unit: $r9 = (java.lang.Integer) $r8
Unit: r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Unit: r1 = $r4
Unit: $r8 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>()
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5)
Unit: if $z3 == 0 goto return
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6)
Unit: return
Unit: r3 = staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.ListIterator toListIterator(java.util.Iterator)>(r2)
Unit: i3 = 0
Unit: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Unit: $z3 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>()
Unit: goto [?= $z3 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>()]
Unit: $l2 = (long) $i1
Unit: i3 = i3 + 1
Unit: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
	method testToListIteratorNull : 
Unit: staticinvoke <org.apache.commons.collections4.IteratorUtils: java.util.ListIterator toListIterator(java.util.Iterator)>(null)
Unit: goto [?= return]
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting NullPointerException")
Unit: r1 = $r3
Unit: $r3 := @caughtexception
Unit: return
	method testUnmodifiableIteratorImmutability : 
Unit: goto [?= return]
Unit: goto [?= interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("remove() should throw an UnsupportedOperationException")
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: r1 = specialinvoke r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.Iterator getImmutableIterator()>()
Unit: interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
Unit: $r3 := @caughtexception
Unit: interfaceinvoke r1.<java.util.Iterator: void remove()>()
Unit: r6 = $r3
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("remove() should throw an UnsupportedOperationException")
Unit: r5 = $r4
Unit: interfaceinvoke r1.<java.util.Iterator: void remove()>()
Unit: return
Unit: $r4 := @caughtexception
	method testUnmodifiableIteratorIteration : 
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r3)
Unit: $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
Unit: $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)]
Unit: $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
Unit: $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
Unit: $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
Unit: $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
Unit: $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("d", $r5)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
Unit: return
Unit: $z5 = 0
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: if $z4 != 0 goto $z5 = 0
Unit: $z5 = 1
Unit: r1 = specialinvoke r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.Iterator getImmutableIterator()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r4)
Unit: $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
	method testUnmodifiableListIteratorImmutability : 
Unit: $r6 := @caughtexception
Unit: goto [?= interfaceinvoke r1.<java.util.ListIterator: void add(java.lang.Object)>("a")]
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("remove() should throw an UnsupportedOperationException")
Unit: r14 = $r4
Unit: r9 = $r8
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("add(Object) should throw an UnsupportedOperationException")
Unit: return
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("remove() should throw an UnsupportedOperationException")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("set(Object) should throw an UnsupportedOperationException")
Unit: $r7 := @caughtexception
Unit: goto [?= interfaceinvoke r1.<java.util.ListIterator: void add(java.lang.Object)>("a")]
Unit: $r3 := @caughtexception
Unit: r12 = $r6
Unit: interfaceinvoke r1.<java.util.ListIterator: void add(java.lang.Object)>("a")
Unit: interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>()
Unit: interfaceinvoke r1.<java.util.ListIterator: void set(java.lang.Object)>("a")
Unit: goto [?= return]
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: $r4 := @caughtexception
Unit: interfaceinvoke r1.<java.util.ListIterator: void remove()>()
Unit: goto [?= interfaceinvoke r1.<java.util.ListIterator: void set(java.lang.Object)>("a")]
Unit: r13 = $r5
Unit: r10 = $r7
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("set(Object) should throw an UnsupportedOperationException")
Unit: staticinvoke <org.junit.Assert: void fail(java.lang.String)>("add(Object) should throw an UnsupportedOperationException")
Unit: interfaceinvoke r1.<java.util.ListIterator: void add(java.lang.Object)>("a")
Unit: r1 = specialinvoke r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.ListIterator getImmutableListIterator()>()
Unit: goto [?= interfaceinvoke r1.<java.util.ListIterator: void set(java.lang.Object)>("a")]
Unit: interfaceinvoke r1.<java.util.ListIterator: void set(java.lang.Object)>("a")
Unit: r11 = $r3
Unit: interfaceinvoke r1.<java.util.ListIterator: void remove()>()
Unit: goto [?= interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>()]
Unit: $r5 := @caughtexception
Unit: $r8 := @caughtexception
	method testUnmodifiableListIteratorIteration : 
Unit: $r3 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>()
Unit: r0 := @this: org.apache.commons.collections4.IteratorUtilsTest
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z19)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z15)
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z18)]
Unit: $z18 = 1
Unit: $z19 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z10)
Unit: $z10 = interfaceinvoke r1.<java.util.ListIterator: boolean hasPrevious()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z13)
Unit: $z4 = interfaceinvoke r1.<java.util.ListIterator: boolean hasPrevious()>()
Unit: $z20 = 0
Unit: $z8 = interfaceinvoke r1.<java.util.ListIterator: boolean hasPrevious()>()
Unit: $z20 = 1
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r3)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z19)
Unit: return
Unit: $z12 = interfaceinvoke r1.<java.util.ListIterator: boolean hasPrevious()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r9)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("d", $r5)
Unit: $r4 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>()
Unit: $r6 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object previous()>()
Unit: $z16 = interfaceinvoke r1.<java.util.ListIterator: boolean hasPrevious()>()
Unit: $z11 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>()
Unit: $z2 = interfaceinvoke r1.<java.util.ListIterator: boolean hasPrevious()>()
Unit: $z19 = 0
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("a", $r2)
Unit: if $z0 != 0 goto $z18 = 0
Unit: if $z16 != 0 goto $z20 = 0
Unit: $r2 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>()
Unit: r1 = specialinvoke r0.<org.apache.commons.collections4.IteratorUtilsTest: java.util.ListIterator getImmutableListIterator()>()
Unit: $r5 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>()
Unit: $z3 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>()
Unit: $r7 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object previous()>()
Unit: $r9 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object previous()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r7)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
Unit: $z5 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>()
Unit: $z6 = interfaceinvoke r1.<java.util.ListIterator: boolean hasPrevious()>()
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("d", $r6)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("b", $r8)
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $r4)
Unit: if $z9 != 0 goto $z19 = 0
Unit: $z13 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z20)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z14)
Unit: $z9 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>()
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z20)]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z12)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z7)
Unit: $z15 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>()
Unit: $z7 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>()
Unit: $z18 = 0
Unit: $z1 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z11)
Unit: $r8 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object previous()>()
Unit: $z14 = interfaceinvoke r1.<java.util.ListIterator: boolean hasPrevious()>()
Unit: $z17 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>()
Unit: $z0 = interfaceinvoke r1.<java.util.ListIterator: boolean hasPrevious()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z17)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z18)
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z8)
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest$11
	method <init> : 
	method equate : 
	method hash : 
	method hash : 
	method equate : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.LazyIteratorChainTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method testIterator : 
	method testRemoveFromFilteredIterator : 
	method testRemove : 
	method testFirstIteratorIsEmptyBug : 
	method testEmptyChain : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.Bag
	method getCount : 
	method add : 
	method add : 
	method remove : 
	method remove : 
	method uniqueSet : 
	method size : 
	method containsAll : 
	method removeAll : 
	method retainAll : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest$10
	method <init> : 
	method equate : 
	method hash : 
	method hash : 
	method equate : 
 ====================================== 
** CLASS org.apache.commons.collections4.SortedBidiMap
	method inverseBidiMap : 
	method valueComparator : 
	method inverseBidiMap : 
	method inverseBidiMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.MapBackedSetTest
	method <init> : 
	method makeObject : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ComparatorPredicate$1
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues$1$1
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.SynchronizedCollectionTest
	method <init> : 
	method makeObject : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method getCompatibilityVersion : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ClosureTransformer
	method closureTransformer : 
	method <init> : 
	method transform : 
	method getClosure : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$MapEntry
	method <init> : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.comparators.ComparatorChainTest$1
	method <init> : 
	method compare : 
	method compare : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.PredicatedListTest
	method <init> : 
	method decorateList : 
	method makeObject : 
	method getFullElements : 
	method makeTestList : 
	method testIllegalAdd : 
	method testIllegalAddAll : 
	method testIllegalSet : 
	method testLegalAddAll : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap
	method <init> : 
	method <init> : 
	method getMap : 
	method setMap : 
	method createCollection : 
	method containsKey : 
	method containsValue : 
	method containsMapping : 
	method entries : 
	method get : 
	method wrappedCollection : 
	method remove : 
	method removeMapping : 
	method isEmpty : 
	method keySet : 
	method size : 
	method values : 
	method clear : 
	method put : 
	method putAll : 
	method putAll : 
	method keys : 
	method asMap : 
	method putAll : 
	method mapIterator : 
	method equals : 
	method hashCode : 
	method toString : 
	method doWriteObject : 
	method doReadObject : 
	method access$300 : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.EmptyOrderedMapIterator
	method emptyOrderedMapIterator : 
	method <init> : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.EmptySetMutator
	method <init> : 
	method resolveCollision : 
	method add : 
	method addAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy
	method expirationTime : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.FilterIteratorTest
	method <init> : 
	method setUp : 
	method tearDown : 
	method makeEmptyIterator : 
	method makeObject : 
	method testRepeatedHasNext : 
	method testRepeatedNext : 
	method testReturnValues : 
	method testSetIterator : 
	method testSetPredicate : 
	method verifyNoMoreElements : 
	method verifyElementsInPredicate : 
	method initIterator : 
	method makePassThroughFilter : 
	method makeBlockAllFilter : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator
	method <init> : 
	method next : 
	method previous : 
	method getKey : 
	method getValue : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.CompositeCollectionTest
	method <init> : 
	method isAddSupported : 
	method isRemoveSupported : 
	method makeObject : 
	method makeConfirmedCollection : 
	method getFullElements : 
	method makeFullCollection : 
	method makeConfirmedFullCollection : 
	method testUnsupportedRemove : 
	method setUpTest : 
	method setUpMutatorTest : 
	method testSize : 
	method testMultipleCollectionsSize : 
	method testIsEmpty : 
	method testIterator : 
	method testClear : 
	method testContainsAll : 
	method testRetainAll : 
	method testAddAllMutator : 
	method testAddMutator : 
	method testToCollection : 
	method testAddAllToCollection : 
	method testRemove : 
	method testRemoveAll : 
	method testRemoveComposited : 
	method getCompatibilityVersion : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.OrderedBidiMap
	method inverseBidiMap : 
	method inverseBidiMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.IteratorChainTest
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method testIterator : 
	method testRemoveFromFilteredIterator : 
	method testRemove : 
	method testFirstIteratorIsEmptyBug : 
	method testEmptyChain : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.CompositeSet
	method <init> : 
	method <init> : 
	method <init> : 
	method size : 
	method isEmpty : 
	method contains : 
	method iterator : 
	method toArray : 
	method toArray : 
	method add : 
	method remove : 
	method containsAll : 
	method addAll : 
	method removeAll : 
	method retainAll : 
	method clear : 
	method setMutator : 
	method addComposited : 
	method addComposited : 
	method addComposited : 
	method removeComposited : 
	method toSet : 
	method getSets : 
	method getMutator : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator
	method <init> : 
	method getOrderedMapIterator : 
	method hasNext : 
	method next : 
	method hasPrevious : 
	method previous : 
	method remove : 
	method getKey : 
	method getValue : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.UnmodifiableSetTest
	method <init> : 
	method suite : 
	method makeObject : 
	method makeFullCollection : 
	method isAddSupported : 
	method isRemoveSupported : 
	method testUnmodifiable : 
	method testDecorateFactory : 
	method getCompatibilityVersion : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.UnmodifiableIterator
	method unmodifiableIterator : 
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator
	method <init> : 
	method next : 
	method getKey : 
	method getValue : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.keyvalue.TiedMapEntry
	method <init> : 
	method getKey : 
	method getValue : 
	method setValue : 
	method equals : 
	method hashCode : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.AbstractListTest$TestListIterator
	method <init> : 
	method addSetValue : 
	method supportsRemove : 
	method supportsAdd : 
	method supportsSet : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.SynchronizedMultiSetTest
	method <init> : 
	method suite : 
	method makeObject : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractMultiValuedMap$1
 ====================================== 
** CLASS org.apache.commons.collections4.map.ListOrderedMap$KeySetView$1
	method <init> : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.AllPredicateTest
	method <init> : 
	method getPredicateInstance : 
	method getPredicateInstance : 
	method emptyArrayToGetInstance : 
Unit: r0 := @this: org.apache.commons.collections4.functors.AllPredicateTest
Unit: $r1 = newarray (org.apache.commons.collections4.Predicate)[0]
Unit: $r2 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(org.apache.commons.collections4.Predicate[])>($r1)
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("empty array not true", $z0)
Unit: return
Unit: $z0 = interfaceinvoke $r2.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>(null)
	method emptyCollectionToGetInstance : 
Unit: $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
Unit: return
Unit: r1 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.util.Collection)>($r2)
Unit: $r3 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: java.lang.Object getTestValue()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("empty collection not true", $z0)
Unit: r0 := @this: org.apache.commons.collections4.functors.AllPredicateTest
Unit: $z0 = interfaceinvoke r1.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r3)
	method oneTruePredicate : 
Unit: r0 := @this: org.apache.commons.collections4.functors.AllPredicateTest
Unit: r1 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: org.apache.commons.collections4.Predicate createMockPredicate(java.lang.Boolean)>($r2)
Unit: $r3 = newarray (org.apache.commons.collections4.Predicate)[1]
Unit: $r5 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: java.lang.Object getTestValue()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("single true predicate evaluated to false", $z0)
Unit: $r3[0] = r1
Unit: return
Unit: $r4 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])>($r3)
Unit: $z0 = interfaceinvoke $r4.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r5)
Unit: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
	method oneFalsePredicate : 
Unit: r1 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: org.apache.commons.collections4.Predicate createMockPredicate(java.lang.Boolean)>($r2)
Unit: return
Unit: $r4 = staticinvoke <org.apache.commons.collections4.functors.AllPredicate: org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])>($r3)
Unit: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r3 = newarray (org.apache.commons.collections4.Predicate)[1]
Unit: r0 := @this: org.apache.commons.collections4.functors.AllPredicateTest
Unit: $r3[0] = r1
Unit: $r5 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: java.lang.Object getTestValue()>()
Unit: $z0 = interfaceinvoke $r4.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r5)
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("single false predicate evaluated to true", $z0)
	method allTrue : 
Unit: $r1[0] = $r2
Unit: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: r0 := @this: org.apache.commons.collections4.functors.AllPredicateTest
Unit: $r4 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.lang.Boolean[])>($r1)
Unit: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r6[1] = $r8
Unit: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r6[0] = $r7
Unit: return
Unit: $r1 = newarray (java.lang.Boolean)[2]
Unit: $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z1 = interfaceinvoke $r10.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r11)
Unit: $r5 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: java.lang.Object getTestValue()>()
Unit: $r10 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.lang.Boolean[])>($r6)
Unit: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $z0 = interfaceinvoke $r4.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r5)
Unit: $r6[2] = $r9
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("multiple true predicates evaluated to false", $z0)
Unit: $r11 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: java.lang.Object getTestValue()>()
Unit: staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("multiple true predicates evaluated to false", $z1)
Unit: $r1[1] = $r3
Unit: $r6 = newarray (java.lang.Boolean)[3]
	method trueAndFalseCombined : 
Unit: $z4 = interfaceinvoke $r24.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r25)
Unit: $r14 = newarray (java.lang.Boolean)[3]
Unit: $r20 = newarray (java.lang.Boolean)[4]
Unit: $r24 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.lang.Boolean[])>($r20)
Unit: $r1 = newarray (java.lang.Boolean)[2]
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("false predicate evaluated to true", $z0)
Unit: $r14[2] = $r17
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("false predicate evaluated to true", $z4)
Unit: $r20[1] = $r22
Unit: $z3 = interfaceinvoke $r18.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r19)
Unit: $r5 = newarray (java.lang.Boolean)[3]
Unit: $z0 = interfaceinvoke $r3.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r4)
Unit: $r3 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.lang.Boolean[])>($r1)
Unit: $r9 = newarray (java.lang.Boolean)[3]
Unit: $r9[1] = $r11
Unit: $r1[0] = $r2
Unit: $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r5[0] = $r6
Unit: $r18 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.lang.Boolean[])>($r14)
Unit: r0 := @this: org.apache.commons.collections4.functors.AllPredicateTest
Unit: $r1[1] = null
Unit: $r9[0] = $r10
Unit: $r12 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.lang.Boolean[])>($r9)
Unit: $r5[1] = null
Unit: $z2 = interfaceinvoke $r12.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r13)
Unit: $r9[2] = null
Unit: $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $z1 = interfaceinvoke $r7.<org.apache.commons.collections4.Predicate: boolean evaluate(java.lang.Object)>($r8)
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("false predicate evaluated to true", $z2)
Unit: return
Unit: $r13 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: java.lang.Object getTestValue()>()
Unit: $r7 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.lang.Boolean[])>($r5)
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("false predicate evaluated to true", $z1)
Unit: $r25 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: java.lang.Object getTestValue()>()
Unit: $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r14[0] = $r15
Unit: $r20[2] = $r23
Unit: $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r19 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: java.lang.Object getTestValue()>()
Unit: $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
Unit: $r5[2] = null
Unit: $r4 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: java.lang.Object getTestValue()>()
Unit: $r14[1] = $r16
Unit: $r8 = virtualinvoke r0.<org.apache.commons.collections4.functors.AllPredicateTest: java.lang.Object getTestValue()>()
Unit: $r20[3] = null
Unit: $r20[0] = $r21
Unit: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
Unit: staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("false predicate evaluated to true", $z3)
Unit: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
 ====================================== 
** CLASS org.apache.commons.collections4.map.UnmodifiableMap
	method unmodifiableMap : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method clear : 
	method put : 
	method putAll : 
	method remove : 
	method mapIterator : 
	method entrySet : 
	method keySet : 
	method values : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.PredicatedListTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.MapIterator
	method hasNext : 
	method next : 
	method getKey : 
	method getValue : 
	method remove : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.PredicatedCollectionTest$1
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.EqualPredicateTest
	method <init> : 
	method generatePredicate : 
	method testNullArgumentEqualsNullPredicate : 
Unit: r0 := @this: org.apache.commons.collections4.functors.EqualPredicateTest
Unit: return
Unit: staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r1, $r2)
Unit: $r2 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>(null)
Unit: $r1 = staticinvoke <org.apache.commons.collections4.functors.NullPredicate: org.apache.commons.collections4.Predicate nullPredicate()>()
	method objectFactoryUsesEqualsForTest : 
Unit: return
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.EqualPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>($r5, $r6)
Unit: r1 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r2)
Unit: $r5 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r4)
Unit: $r3 = <org.apache.commons.collections4.functors.EqualPredicateTest: org.apache.commons.collections4.functors.EqualPredicateTest$EqualsTestObject FALSE_OBJECT>
Unit: r0 := @this: org.apache.commons.collections4.functors.EqualPredicateTest
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.EqualPredicateTest: void assertFalse(org.apache.commons.collections4.Predicate,java.lang.Object)>(r1, $r3)
Unit: $r4 = <org.apache.commons.collections4.functors.EqualPredicateTest: org.apache.commons.collections4.functors.EqualPredicateTest$EqualsTestObject TRUE_OBJECT>
Unit: $r6 = <org.apache.commons.collections4.functors.EqualPredicateTest: org.apache.commons.collections4.functors.EqualPredicateTest$EqualsTestObject TRUE_OBJECT>
Unit: $r2 = <org.apache.commons.collections4.functors.EqualPredicateTest: org.apache.commons.collections4.functors.EqualPredicateTest$EqualsTestObject FALSE_OBJECT>
	method testPredicateTypeCanBeSuperClassOfObject : 
Unit: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: r0 := @this: org.apache.commons.collections4.functors.EqualPredicateTest
Unit: r1 = staticinvoke <org.apache.commons.collections4.functors.EqualPredicate: org.apache.commons.collections4.Predicate equalPredicate(java.lang.Object)>($r2)
Unit: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4)
Unit: virtualinvoke r0.<org.apache.commons.collections4.functors.EqualPredicateTest: void assertTrue(org.apache.commons.collections4.Predicate,java.lang.Object)>(r1, $r3)
Unit: return
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest
	method <init> : 
	method makeObject : 
	method makeConfirmedMap : 
	method isAllowNullKey : 
	method isAllowNullValue : 
	method isSetValueSupported : 
	method makeObject : 
	method makeObject : 
	method makeConfirmedMap : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.NOPTransformer
	method nopTransformer : 
	method <init> : 
	method transform : 
	method readResolve : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.UnmodifiableList
	method unmodifiableList : 
	method <init> : 
	method iterator : 
	method add : 
	method addAll : 
	method clear : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method listIterator : 
	method listIterator : 
	method add : 
	method addAll : 
	method remove : 
	method set : 
	method subList : 
 ====================================== 
** CLASS org.apache.commons.collections4.Closure
	method execute : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator
	method <init> : 
	method <init> : 
	method nextEntry : 
	method findNext : 
	method hasNext : 
	method remove : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtils
	method <init> : 
	method emptyIterable : 
	method chainedIterable : 
	method chainedIterable : 
	method chainedIterable : 
	method chainedIterable : 
	method collatedIterable : 
	method collatedIterable : 
	method filteredIterable : 
	method boundedIterable : 
	method loopingIterable : 
	method reversedIterable : 
	method skippingIterable : 
	method transformedIterable : 
	method uniqueIterable : 
	method unmodifiableIterable : 
	method zippingIterable : 
	method zippingIterable : 
	method emptyIfNull : 
	method forEach : 
	method forEachButLast : 
	method find : 
	method indexOf : 
	method matchesAll : 
	method matchesAny : 
	method countMatches : 
	method isEmpty : 
	method contains : 
	method contains : 
	method frequency : 
	method get : 
	method first : 
	method size : 
	method partition : 
	method partition : 
	method partition : 
	method toList : 
	method toString : 
	method toString : 
	method toString : 
	method checkNotNull : 
	method checkNotNull : 
	method emptyIteratorIfNull : 
	method access$000 : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.AbstractLinkedListTest
	method <init> : 
	method makeObject : 
	method getCollection : 
	method getConfirmedLinkedList : 
	method testLinkedListAddFirst : 
	method testLinkedListAddLast : 
	method testLinkedListGetFirst : 
	method testLinkedListGetLast : 
	method testLinkedListRemoveFirst : 
	method testLinkedListRemoveLast : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method getCollection : 
	method makeObject : 
	method getCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.splitmap.TransformedSplitMapTest
	method <init> : 
	method testTransformedMap : 
	method testMapIterator : 
	method testEmptyMap : 
	method testFullMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.EnumerationUtils
	method <init> : 
	method get : 
	method toList : 
	method toList : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator
	method <init> : 
	method getMapIterator : 
	method hasNext : 
	method next : 
	method remove : 
	method getKey : 
	method getValue : 
	method setValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ChainedClosure
	method chainedClosure : 
	method chainedClosure : 
	method <init> : 
	method <init> : 
	method execute : 
	method getClosures : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.IteratorIterableTest
	method suite : 
	method <init> : 
	method createIterator : 
	method testIterator : 
	method testMultipleUserIterator : 
	method verifyIteration : 
 ====================================== 
** CLASS org.apache.commons.collections4.BoundedCollection
	method isFull : 
	method maxSize : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.TransformedPredicate
	method transformedPredicate : 
	method <init> : 
	method evaluate : 
	method getPredicates : 
	method getTransformer : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.AllPredicate
	method allPredicate : 
	method allPredicate : 
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator
	method <init> : 
	method <init> : 
	method add : 
	method hasNext : 
	method hasPrevious : 
	method next : 
	method nextIndex : 
	method previous : 
	method previousIndex : 
	method remove : 
	method set : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength
	method values : 
	method valueOf : 
	method resolve : 
	method <init> : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.SingletonMap$SingletonValues
	method <init> : 
	method size : 
	method isEmpty : 
	method contains : 
	method clear : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMultiSet
	method <init> : 
	method size : 
	method getCount : 
	method setCount : 
	method contains : 
	method iterator : 
	method add : 
	method add : 
	method clear : 
	method remove : 
	method remove : 
	method removeAll : 
	method uniqueSet : 
	method createUniqueSet : 
	method createUniqueSetIterator : 
	method entrySet : 
	method createEntrySet : 
	method uniqueElements : 
	method createEntrySetIterator : 
	method doWriteObject : 
	method doReadObject : 
	method equals : 
	method hashCode : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.NullIsExceptionPredicate
	method nullIsExceptionPredicate : 
	method <init> : 
	method evaluate : 
	method getPredicates : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap$SoftRef
	method <init> : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.sequence.SequencesComparatorTest
	method <init> : 
	method testLength : 
Unit: $r12 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: int[] length>
Unit: $i1 = $r12[i5]
Unit: $r6 = (java.lang.String) $r5
Unit: i5 = i5 + 1
Unit: $r4 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List before>
Unit: if i5 >= $i0 goto return
Unit: staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l2, $l4)
Unit: $r2 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List before>
Unit: goto [?= $r2 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List before>]
Unit: return
Unit: r1 = $r3
Unit: $r11 = specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List sequence(java.lang.String)>($r10)
Unit: $r13 = virtualinvoke r1.<org.apache.commons.collections4.sequence.SequencesComparator: org.apache.commons.collections4.sequence.EditScript getScript()>()
Unit: $l4 = (long) $i3
Unit: $i3 = virtualinvoke $r13.<org.apache.commons.collections4.sequence.EditScript: int getModifications()>()
Unit: $r10 = (java.lang.String) $r9
Unit: r0 := @this: org.apache.commons.collections4.sequence.SequencesComparatorTest
Unit: i5 = 0
Unit: $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i5)
Unit: $r3 = new org.apache.commons.collections4.sequence.SequencesComparator
Unit: $l2 = (long) $i1
Unit: $i0 = interfaceinvoke $r2.<java.util.List: int size()>()
Unit: $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i5)
Unit: specialinvoke $r3.<org.apache.commons.collections4.sequence.SequencesComparator: void <init>(java.util.List,java.util.List)>($r7, $r11)
Unit: $r7 = specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List sequence(java.lang.String)>($r6)
Unit: $r8 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List after>
	method testExecution : 
Unit: $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i1)
Unit: virtualinvoke r1.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: void setList(java.util.List)>($r7)
Unit: goto [?= $r3 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List before>]
Unit: $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1)
Unit: if i1 >= $i0 goto return
Unit: $r12 = specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List sequence(java.lang.String)>($r11)
Unit: specialinvoke $r8.<org.apache.commons.collections4.sequence.SequencesComparator: void <init>(java.util.List,java.util.List)>($r12, $r16)
Unit: $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i1)
Unit: $i0 = interfaceinvoke $r3.<java.util.List: int size()>()
Unit: $r9 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List before>
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r20)
Unit: i1 = 0
Unit: specialinvoke $r2.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: void <init>(org.apache.commons.collections4.sequence.SequencesComparatorTest,org.apache.commons.collections4.sequence.SequencesComparatorTest$1)>(r0, null)
Unit: $r3 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List before>
Unit: r1 = $r2
Unit: $r20 = virtualinvoke r1.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: java.lang.String getString()>()
Unit: i1 = i1 + 1
Unit: r0 := @this: org.apache.commons.collections4.sequence.SequencesComparatorTest
Unit: $r8 = new org.apache.commons.collections4.sequence.SequencesComparator
Unit: $r13 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List after>
Unit: $r18 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List after>
Unit: $r2 = new org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor
Unit: $r7 = specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List sequence(java.lang.String)>($r6)
Unit: $r16 = specialinvoke r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List sequence(java.lang.String)>($r15)
Unit: return
Unit: $r4 = r0.<org.apache.commons.collections4.sequence.SequencesComparatorTest: java.util.List before>
Unit: $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i1)
Unit: $r17 = virtualinvoke $r8.<org.apache.commons.collections4.sequence.SequencesComparator: org.apache.commons.collections4.sequence.EditScript getScript()>()
Unit: $r11 = (java.lang.String) $r10
Unit: $r6 = (java.lang.String) $r5
Unit: $r15 = (java.lang.String) $r14
Unit: virtualinvoke $r17.<org.apache.commons.collections4.sequence.EditScript: void visit(org.apache.commons.collections4.sequence.CommandVisitor)>(r1)
	method testMinimal : 
Unit: r1 = $r5
Unit: specialinvoke $r6.<java.lang.String: void <init>(java.lang.String)>("GA")
Unit: $i7 = virtualinvoke r4.<java.util.Random: int nextInt(int)>(4)
Unit: $r28 = r1[1]
Unit: specialinvoke $r33.<org.apache.commons.collections4.sequence.SequencesComparator: void <init>(java.util.List,java.util.List)>(r2, r3)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r23)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r20)
Unit: $r6 = new java.lang.String
Unit: $r5[2] = $r8
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r21)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r22)
Unit: if i9 >= i8 goto $r33 = new org.apache.commons.collections4.sequence.SequencesComparator
Unit: $r30 = r1[0]
Unit: $r8 = new java.lang.String
Unit: $i5 = $i4 + 1
Unit: $r10 = new java.util.ArrayList
Unit: $r27 = r1[0]
Unit: goto [?= i9 = i9 + 1]
Unit: $r13 = r1[2]
Unit: $i6 = virtualinvoke r4.<java.util.Random: int nextInt(int)>($i5)
Unit: $r5[0] = $r6
Unit: return
Unit: if $i1 != 0 goto $i2 = interfaceinvoke r3.<java.util.List: int size()>()
Unit: $r25 = r1[2]
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r27)
Unit: $i1 = virtualinvoke r4.<java.util.Random: int nextInt(int)>(2)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r28)
Unit: specialinvoke $r8.<java.lang.String: void <init>(java.lang.String)>("ZO")
Unit: $r33 = new org.apache.commons.collections4.sequence.SequencesComparator
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r15)
Unit: if $i0 > i8 goto $z21 = 0
Unit: i9 = 0
Unit: $r14 = r1[3]
Unit: $r34 = virtualinvoke r37.<org.apache.commons.collections4.sequence.SequencesComparator: org.apache.commons.collections4.sequence.EditScript getScript()>()
Unit: specialinvoke $r7.<java.lang.String: void <init>(java.lang.String)>("BU")
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r18)
Unit: $r31 = r1[3]
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r29)
Unit: $i0 = virtualinvoke $r34.<org.apache.commons.collections4.sequence.EditScript: int getModifications()>()
Unit: interfaceinvoke r3.<java.util.List: void add(int,java.lang.Object)>($i6, $r36)
Unit: $r12 = r1[0]
Unit: $i2 = interfaceinvoke r3.<java.util.List: int size()>()
Unit: $r5[1] = $r7
Unit: i8 = 0
Unit: $r19 = r1[1]
Unit: $r20 = r1[3]
Unit: staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z21)
Unit: interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r2)
Unit: $r18 = r1[2]
Unit: $r32 = new java.util.Random
Unit: $z21 = 1
Unit: specialinvoke $r32.<java.util.Random: void <init>(long)>(4564634237452342L)
Unit: r3 = $r11
Unit: r37 = $r33
Unit: $i3 = virtualinvoke r4.<java.util.Random: int nextInt(int)>($i2)
Unit: $r16 = r1[0]
Unit: i8 = i8 + 5
Unit: goto [?= (branch)]
Unit: $r5 = newarray (java.lang.String)[4]
Unit: r4 = $r32
Unit: r0 := @this: org.apache.commons.collections4.sequence.SequencesComparatorTest
Unit: $r9 = new java.lang.String
Unit: specialinvoke $r10.<java.util.ArrayList: void <init>()>()
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r19)
Unit: $r26 = r1[2]
Unit: $r36 = r1[$i7]
Unit: goto [?= (branch)]
Unit: $r29 = r1[3]
Unit: $r21 = r1[0]
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r25)
Unit: specialinvoke $r9.<java.lang.String: void <init>(java.lang.String)>("MEU")
Unit: $r15 = r1[1]
Unit: $r23 = r1[1]
Unit: interfaceinvoke r3.<java.util.List: void clear()>()
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r17)
Unit: $i4 = interfaceinvoke r3.<java.util.List: int size()>()
Unit: $r22 = r1[2]
Unit: $r5[3] = $r9
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r26)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r24)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r16)
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r30)
Unit: $r17 = r1[0]
Unit: interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>($i3)
Unit: $r7 = new java.lang.String
Unit: i9 = i9 + 1
Unit: specialinvoke $r11.<java.util.ArrayList: void <init>()>()
Unit: if i8 > 40 goto return
Unit: r2 = $r10
Unit: $r11 = new java.util.ArrayList
Unit: interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r31)
Unit: $r24 = r1[3]
Unit: goto [?= staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z21)]
Unit: $z21 = 0
	method testShadok : 
Unit: $r18 = new java.lang.StringBuilder
Unit: goto [?= (branch)]
Unit: if i2 >= 5 goto $r10 = new org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor
Unit: virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37)
Unit: r31 = interfaceinvoke r27.<java.util.List: java.util.Iterator iterator()>()
Unit: $r4[2] = $r7
Unit: r32 = $r10
Unit: staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, $r20)
Unit: virtualinvoke $r17.<org.apache.commons.collections4.sequence.EditScript: void visit(org.apache.commons.collections4.sequence.CommandVisitor)>(r32)
Unit: $z1 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()
Unit: interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>($r24)
Unit: $r24 = new java.util.ArrayList
Unit: $r8 = new java.lang.String
Unit: r27 = r28
Unit: r29 = r1
Unit: virtualinvoke r32.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: void setList(java.util.List)>($r13)
Unit: goto [?= $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
Unit: goto [?= $z3 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
Unit: i2 = 0
Unit: if i5 >= $i1 goto return
Unit: $r5 = new java.lang.String
Unit: $r14 = new org.apache.commons.collections4.sequence.SequencesComparator
Unit: r30 = r29[i4]
Unit: $r21 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()
Unit: specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("GA")
Unit: r33 = interfaceinvoke r27.<java.util.List: java.util.Iterator iterator()>()
Unit: r28 = $r23
Unit: i4 = 0
Unit: interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>(r3)
Unit: $r16 = (java.util.List) $r15
Unit: $r25 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>()
Unit: $r9 = new java.util.ArrayList
Unit: $r10 = new org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor
Unit: $i1 = interfaceinvoke r27.<java.util.List: int size()>()
Unit: $r15 = interfaceinvoke r27.<java.util.List: java.lang.Object get(int)>(i5)
Unit: goto [?= (branch)]
Unit: interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r30)
Unit: $r7 = new java.lang.String
Unit: specialinvoke $r9.<java.util.ArrayList: void <init>()>()
Unit: specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
Unit: r1 = $r4
Unit: $r19 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r4[0] = $r5
Unit: goto [?= $i1 = interfaceinvoke r27.<java.util.List: int size()>()]
Unit: r0 := @this: org.apache.commons.collections4.sequence.SequencesComparatorTest
Unit: $r4[1] = $r6
Unit: specialinvoke $r8.<java.lang.String: void <init>(java.lang.String)>("MEU")
Unit: specialinvoke $r7.<java.lang.String: void <init>(java.lang.String)>("ZO")
Unit: specialinvoke $r14.<org.apache.commons.collections4.sequence.SequencesComparator: void <init>(java.util.List,java.util.List)>($r16, r34)
Unit: return
Unit: specialinvoke $r10.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: void <init>(org.apache.commons.collections4.sequence.SequencesComparatorTest,org.apache.commons.collections4.sequence.SequencesComparatorTest$1)>(r0, null)
Unit: r34 = (java.util.List) $r11
Unit: $r13 = (java.util.List) $r12
Unit: r36 = interfaceinvoke r34.<java.util.List: java.util.Iterator iterator()>()
Unit: $r20 = virtualinvoke r32.<org.apache.commons.collections4.sequence.SequencesComparatorTest$ExecutionVisitor: java.lang.String getString()>()
Unit: specialinvoke $r23.<java.util.ArrayList: void <init>()>()
Unit: if $z1 == 0 goto $r19 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>()
Unit: $r4 = newarray (java.lang.String)[4]
Unit: specialinvoke $r6.<java.lang.String: void <init>(java.lang.String)>("BU")
Unit: $r4[3] = $r8
Unit: specialinvoke $r24.<java.util.ArrayList: void <init>()>()
Unit: if i4 >= i3 goto r27 = r28
Unit: r35 = $r18
Unit: r2 = (java.util.List) $r25
Unit: $r11 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()
Unit: $r23 = new java.util.ArrayList
Unit: $r26 = new java.util.ArrayList
Unit: i2 = i2 + 1
Unit: b0 = 5
Unit: if $z0 == 0 goto i5 = i5 + 1
Unit: specialinvoke $r26.<java.util.ArrayList: void <init>(java.util.Collection)>(r2)
Unit: i3 = lengthof r29
Unit: goto [?= $z1 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]
Unit: if $z3 == 0 goto i4 = i4 + 1
Unit: r3 = $r26
Unit: $r6 = new java.lang.String
Unit: $r12 = interfaceinvoke r27.<java.util.List: java.lang.Object get(int)>(i5)
Unit: $r17 = virtualinvoke $r14.<org.apache.commons.collections4.sequence.SequencesComparator: org.apache.commons.collections4.sequence.EditScript getScript()>()
Unit: r27 = $r9
Unit: i5 = 0
Unit: i5 = i5 + 1
Unit: r37 = (java.lang.String) $r21
Unit: $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
Unit: $z3 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
Unit: i4 = i4 + 1
	method sequence : 
	method setUp : 
	method tearDown : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.PredicatedSortedBag
	method predicatedSortedBag : 
	method <init> : 
	method decorated : 
	method first : 
	method last : 
	method comparator : 
	method decorated : 
	method decorated : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.MapTransformer
	method mapTransformer : 
	method <init> : 
	method transform : 
	method getMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.set.CompositeSetTest
	method <init> : 
	method makeObject : 
	method buildOne : 
	method buildTwo : 
	method testContains : 
	method testRemoveUnderlying : 
	method testRemoveComposited : 
	method testFailedCollisionResolution : 
	method testAddComposited : 
	method testAddCompositedCollision : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ComparatorPredicate
	method comparatorPredicate : 
	method comparatorPredicate : 
	method <init> : 
	method evaluate : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractHashedMap$Values
	method <init> : 
	method size : 
	method clear : 
	method contains : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.Flat3Map$ValuesIterator
	method <init> : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.PredicatedCollectionBuilderTest$1
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$13
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.UniqueFilterIterator
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.TransformedCollection
	method transformingCollection : 
	method transformedCollection : 
	method <init> : 
	method transform : 
	method transform : 
	method add : 
	method addAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.AbstractPatriciaTrie
	method <init> : 
	method <init> : 
	method clear : 
	method size : 
	method incrementSize : 
	method decrementSize : 
	method incrementModCount : 
	method put : 
	method addEntry : 
	method get : 
	method getEntry : 
	method select : 
	method selectKey : 
	method selectValue : 
	method selectR : 
	method containsKey : 
	method entrySet : 
	method keySet : 
	method values : 
	method remove : 
	method getNearestEntryForKey : 
	method removeEntry : 
	method removeExternalEntry : 
	method removeInternalEntry : 
	method nextEntry : 
	method nextEntryImpl : 
	method firstEntry : 
	method followLeft : 
	method comparator : 
	method firstKey : 
	method lastKey : 
	method nextKey : 
	method previousKey : 
	method mapIterator : 
	method prefixMap : 
	method getPrefixMapByBits : 
	method headMap : 
	method subMap : 
	method tailMap : 
	method higherEntry : 
	method ceilingEntry : 
	method lowerEntry : 
	method floorEntry : 
	method subtree : 
	method lastEntry : 
	method followRight : 
	method previousEntry : 
	method nextEntryInSubtree : 
	method isValidUplink : 
	method readObject : 
	method writeObject : 
	method mapIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LazySortedMap
	method lazySortedMap : 
	method lazySortedMap : 
	method <init> : 
	method <init> : 
	method getSortedMap : 
	method firstKey : 
	method lastKey : 
	method comparator : 
	method subMap : 
	method headMap : 
	method tailMap : 
 ====================================== 
** CLASS org.apache.commons.collections4.MultiValuedMap
	method size : 
	method isEmpty : 
	method containsKey : 
	method containsValue : 
	method containsMapping : 
	method get : 
	method put : 
	method putAll : 
	method putAll : 
	method putAll : 
	method remove : 
	method removeMapping : 
	method clear : 
	method entries : 
	method keys : 
	method keySet : 
	method values : 
	method asMap : 
	method mapIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.HashedMapTest
	method <init> : 
	method suite : 
	method makeObject : 
	method getCompatibilityVersion : 
	method testClone : 
	method testInternalState : 
	method testInitialCapacityZero : 
	method makeObject : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.CollectionBag
	method collectionBag : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method containsAll : 
	method add : 
	method addAll : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method add : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.Flat3Map$Values
	method <init> : 
	method size : 
	method clear : 
	method contains : 
	method iterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.FixedSizeList
	method fixedSizeList : 
	method <init> : 
	method add : 
	method add : 
	method addAll : 
	method addAll : 
	method clear : 
	method get : 
	method indexOf : 
	method iterator : 
	method lastIndexOf : 
	method listIterator : 
	method listIterator : 
	method remove : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method set : 
	method subList : 
	method isFull : 
	method maxSize : 
	method unsupportedOperationException : 
	method access$000 : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$10
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.TransformedBagTest
	method <init> : 
	method suite : 
	method makeObject : 
	method testTransformedBag : 
	method testTransformedBag_decorateTransform : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$11
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.IterableUtilsTest$12
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry
	method <init> : 
	method getKey : 
	method getValue : 
	method setValue : 
	method equals : 
	method hashCode : 
	method toReference : 
	method onPurge : 
	method purge : 
	method next : 
	method nullValue : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.SingletonListIteratorTest
	method <init> : 
	method makeEmptyIterator : 
	method makeObject : 
	method supportsAdd : 
	method supportsRemove : 
	method supportsEmptyIterator : 
	method testIterator : 
	method testReset : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap
	method unmodifiableSortedBidiMap : 
	method <init> : 
	method clear : 
	method put : 
	method putAll : 
	method remove : 
	method entrySet : 
	method keySet : 
	method values : 
	method removeValue : 
	method mapIterator : 
	method inverseBidiMap : 
	method subMap : 
	method headMap : 
	method tailMap : 
	method inverseBidiMap : 
	method inverseBidiMap : 
	method values : 
	method mapIterator : 
 ====================================== 
** CLASS org.apache.commons.collections4.TestUtils
	method <init> : 
	method assertSameAfterSerialization : 
	method assertSameAfterSerialization : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.DefaultedMap
	method defaultedMap : 
	method defaultedMap : 
	method defaultedMap : 
	method <init> : 
	method <init> : 
	method <init> : 
	method writeObject : 
	method readObject : 
	method get : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.PassiveExpiringMapTest$TestExpirationPolicy
	method <init> : 
	method expirationTime : 
	method expirationTime : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMultiSet$1
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.LoopingIterator
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method reset : 
	method size : 
 ====================================== 
** CLASS org.apache.commons.collections4.ClosureUtilsTest$MockTransformer
	method <init> : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.EntrySetMapIterator
	method <init> : 
	method hasNext : 
	method next : 
	method remove : 
	method getKey : 
	method getValue : 
	method setValue : 
	method reset : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySet
	method <init> : 
	method toArray : 
	method toArray : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ListIteratorWrapper
	method <init> : 
	method add : 
	method hasNext : 
	method hasPrevious : 
	method next : 
	method nextIndex : 
	method previous : 
	method previousIndex : 
	method remove : 
	method set : 
	method reset : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.AbstractClosureTest
	method <init> : 
	method closureSanityTests : 
	method generateClosure : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator
	method <init> : 
	method next : 
	method previous : 
	method createEntry : 
	method previous : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.CompositeMap$MapMutator
	method resolveCollision : 
	method put : 
	method putAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.LRUMapTest$SingleHashCode
	method <init> : 
	method hashCode : 
	method toString : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.PassiveExpiringMapTest
	method suite : 
	method <init> : 
	method getCompatibilityVersion : 
	method makeDecoratedTestMap : 
	method makeObject : 
	method makeTestMap : 
	method testConstructors : 
	method testContainsKey : 
	method testContainsValue : 
	method testDecoratedMap : 
	method testEntrySet : 
	method testExpiration : 
	method testGet : 
	method testIsEmpty : 
	method testKeySet : 
	method testPut : 
	method testSize : 
	method testValues : 
	method testZeroTimeToLive : 
	method validateExpiration : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.AbstractLinkedList
	method <init> : 
	method <init> : 
	method init : 
	method size : 
	method isEmpty : 
	method get : 
	method iterator : 
	method listIterator : 
	method listIterator : 
	method indexOf : 
	method lastIndexOf : 
	method contains : 
	method containsAll : 
	method toArray : 
	method toArray : 
	method subList : 
	method add : 
	method add : 
	method addAll : 
	method addAll : 
	method remove : 
	method remove : 
	method removeAll : 
	method retainAll : 
	method set : 
	method clear : 
	method getFirst : 
	method getLast : 
	method addFirst : 
	method addLast : 
	method removeFirst : 
	method removeLast : 
	method equals : 
	method hashCode : 
	method toString : 
	method isEqualValue : 
	method updateNode : 
	method createHeaderNode : 
	method createNode : 
	method addNodeBefore : 
	method addNodeAfter : 
	method addNode : 
	method removeNode : 
	method removeAllNodes : 
	method getNode : 
	method createSubListIterator : 
	method createSubListListIterator : 
	method doWriteObject : 
	method doReadObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.multiset.AbstractMapMultiSet$MutableInteger
	method <init> : 
	method equals : 
	method hashCode : 
 ====================================== 
** CLASS org.apache.commons.collections4.bidimap.DualHashBidiMap
	method <init> : 
	method <init> : 
	method <init> : 
	method createBidiMap : 
	method writeObject : 
	method readObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.PrototypeFactory$PrototypeCloneFactory
	method <init> : 
	method findCloneMethod : 
	method create : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.list.AbstractListTest
	method <init> : 
	method isSetSupported : 
	method verify : 
	method isEqualsCheckable : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method makeObject : 
	method makeFullCollection : 
	method getCollection : 
	method getConfirmed : 
	method testListAddByIndexBoundsChecking : 
	method testListAddByIndexBoundsChecking2 : 
	method testListAddByIndex : 
	method testListEquals : 
	method testListHashCode : 
	method testListGetByIndex : 
	method testListGetByIndexBoundsChecking : 
	method testListGetByIndexBoundsChecking2 : 
	method testListIndexOf : 
	method testListLastIndexOf : 
	method testListSetByIndexBoundsChecking : 
	method testListSetByIndexBoundsChecking2 : 
	method testListSetByIndex : 
	method testUnsupportedSet : 
	method testListRemoveByIndexBoundsChecking : 
	method testListRemoveByIndexBoundsChecking2 : 
	method testListRemoveByIndex : 
	method testListListIterator : 
	method testListListIteratorByIndex : 
	method testListListIteratorPreviousRemoveNext : 
	method testListListIteratorPreviousRemovePrevious : 
	method testListListIteratorNextRemoveNext : 
	method testListListIteratorNextRemovePrevious : 
	method forwardTest : 
	method backwardTest : 
	method testListIteratorAdd : 
	method testListIteratorSet : 
	method testEmptyListSerialization : 
	method testFullListSerialization : 
	method testEmptyListCompatibility : 
	method testFullListCompatibility : 
	method bulkTestSubList : 
	method testListSubListFailFastOnAdd : 
	method testListSubListFailFastOnRemove : 
	method failFastAll : 
	method failFastMethod : 
	method bulkTestListIterator : 
	method getConfirmed : 
	method getCollection : 
	method makeFullCollection : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ConstantTransformer
	method nullTransformer : 
	method constantTransformer : 
	method <init> : 
	method transform : 
	method getConstant : 
	method equals : 
	method hashCode : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.functors.ExceptionTransformer
	method exceptionTransformer : 
	method <init> : 
	method transform : 
	method readResolve : 
	method <clinit> : 
 ====================================== 
** CLASS org.apache.commons.collections4.bag.CollectionSortedBagTest
	method <init> : 
	method isNullSupported : 
	method makeObject : 
	method makeConfirmedCollection : 
	method makeConfirmedFullCollection : 
	method getFullNonNullElements : 
	method getOtherNonNullElements : 
	method getCompatibilityVersion : 
	method testEmptyBagCompatibility : 
	method testFullBagCompatibility : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.trie.PatriciaTrieTest
	method <init> : 
	method suite : 
	method makeObject : 
	method isAllowNullKey : 
	method testPrefixMap : 
	method testPrefixMapRemoval : 
	method testPrefixMapSizes : 
	method testPrefixMapSizes2 : 
	method testPrefixMapClear : 
	method testPrefixMapClearNothing : 
	method testPrefixMapClearUsingRemove : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.collection.IndexedCollectionTest$IntegerTransformer
	method <init> : 
	method transform : 
	method transform : 
	method <init> : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.TransformedMapTest
	method <init> : 
	method makeObject : 
	method testTransformedMap : 
	method testFactory_Decorate : 
	method testFactory_decorateTransform : 
	method getCompatibilityVersion : 
	method makeObject : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.Put
	method clear : 
	method put : 
	method putAll : 
 ====================================== 
** CLASS org.apache.commons.collections4.AbstractObjectTest
	method <init> : 
	method makeObject : 
	method supportsEmptyCollections : 
	method supportsFullCollections : 
	method isTestSerialization : 
	method isEqualsCheckable : 
	method testObjectEqualsSelf : 
	method testEqualsNull : 
	method testObjectHashCodeEqualsSelfHashCode : 
	method testObjectHashCodeEqualsContract : 
	method serializeDeserialize : 
	method testSerializeDeserializeThenCompare : 
	method testSimpleSerialization : 
	method testCanonicalEmptyCollectionExists : 
	method testCanonicalFullCollectionExists : 
	method getCompatibilityVersion : 
	method getCanonicalEmptyCollectionName : 
	method getCanonicalFullCollectionName : 
	method writeExternalFormToDisk : 
	method writeExternalFormToBytes : 
	method readExternalFormFromDisk : 
	method readExternalFormFromBytes : 
	method skipSerializedCanonicalTests : 
	method readExternalFormFromStream : 
	method writeExternalFormToStream : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.IdentityMap
	method <init> : 
	method <init> : 
	method <init> : 
	method <init> : 
	method hash : 
	method isEqualKey : 
	method isEqualValue : 
	method createEntry : 
	method clone : 
	method writeObject : 
	method readObject : 
	method clone : 
	method createEntry : 
	method clone : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.ListIteratorWrapper2Test
	method <init> : 
	method setUp : 
	method makeEmptyIterator : 
	method makeObject : 
	method testIterator : 
	method testRemove : 
	method testReset : 
	method makeObject : 
	method makeEmptyIterator : 
	method makeObject : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator
	method <init> : 
	method next : 
	method next : 
 ====================================== 
** CLASS org.apache.commons.collections4.map.MultiValueMap$1$1
	method <init> : 
	method transform : 
	method transform : 
 ====================================== 
** CLASS org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator
	method <init> : 
	method getIterator : 
	method hasNext : 
	method remove : 

 ====================================== 
** CLASS org.apache.commons.collections4.CollectionUtilsTest
Number of Methods with MustMock in class: 2
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 0

 ====================================== 
** CLASS org.apache.commons.collections4.IteratorUtilsTest
Number of Methods with MustMock in class: 1
Number of Methods with ArrayMock in class: 1
Number of Methods with Collection in class: 0

 ====================================== 
Benchmark commons_collections_4.3 Mock Stats
Total Number of Test Methods with MustMock: 3
Total Number of Test Methods with ArrayMock in class: 1
Total Number of Test Methods with Collection in class: 0

Soot finished on Wed Apr 21 19:05:47 EDT 2021
Soot has run for 1 min. 32 sec.
