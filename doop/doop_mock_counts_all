bootique-basic-NO_INTERPROC
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Removed row: ['org.mockito.internal.util.DefaultMockingDetails:', 'void', 'assertGoodMock()', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.invocation.MockHandler', 'getMockHandler(java.lang.Object)', '1']
Total number of mock counts in bootique-results/basic-new-counts-NO_INTERPROC is 122 
bootique-CI-NO_INTERPROC
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Removed row: ['org.mockito.internal.util.DefaultMockingDetails:', 'void', 'assertGoodMock()', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.invocation.MockHandler', 'getMockHandler(java.lang.Object)', '1']
Total number of mock counts in bootique-results/new-counts-NO_INTERPROC is 122 
commons-basic-NO_INTERPROC
Total number of mock counts in commons-collection4-results/basic-new-counts-NO_INTERPROC is 3 
commons-CI-NO_INTERPROC
Total number of mock counts in commons-collection4-results/new-counts-NO_INTERPROC is 3 
flink-core-basic-NO_INTERPROC
Total number of mock counts in flink-core-results/basic-new-counts-NO_INTERPROC is 40 
flink-core-CI-NO_INTERPROC
Total number of mock counts in flink-core-results/new-counts-NO_INTERPROC is 40 
jsonschema2pojo-basic-NO_INTERPROC
Total number of mock counts in jsonschema2pojo-core-results/basic-new-counts-NO_INTERPROC is 282 
jsonschema2pojo-CI-NO_INTERPROC
Total number of mock counts in jsonschema2pojo-core-results/new-counts-NO_INTERPROC is 282 
maven-core-basic-NO_INTERPROC
Total number of mock counts in maven-core-results/basic-new-counts-NO_INTERPROC is 23 
maven-core-CI-NO_INTERPROC
Total number of mock counts in maven-core-results/new-counts-NO_INTERPROC is 23 
microbenchmark-basic-NO_INTERPROC
Total number of mock counts in microbenchmark-results/basic-new-counts-NO_INTERPROC is 123 
microbenchmark-CI-NO_INTERPROC
Total number of mock counts in microbenchmark-results/new-counts-NO_INTERPROC is 123 
quartz-core-basic-NO_INTERPROC
Total number of mock counts in quartz-core-results/basic-new-counts-NO_INTERPROC is 21 
quartz-core-CI-NO_INTERPROC
Total number of mock counts in quartz-core-results/new-counts-NO_INTERPROC is 21 
vraptor-core-basic-NO_INTERPROC
Total number of mock counts in vraptor-core-results/basic-new-counts-NO_INTERPROC is 963 
vraptor-core-CI-NO_INTERPROC
Total number of mock counts in vraptor-core-results/new-counts-NO_INTERPROC is 962 
bootique-basic-NORMAL
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Removed row: ['org.mockito.internal.util.DefaultMockingDetails:', 'void', 'assertGoodMock()', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.invocation.MockHandler', 'getMockHandler(java.lang.Object)', '1']
Total number of mock counts in bootique-results/basic-new-counts-NORMAL is 120 
bootique-CI-NORMAL
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Removed row: ['org.mockito.internal.util.DefaultMockingDetails:', 'void', 'assertGoodMock()', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.invocation.MockHandler', 'getMockHandler(java.lang.Object)', '1']
Total number of mock counts in bootique-results/new-counts-NORMAL is 122 
commons-basic-NORMAL
Removed row: ['org.junit.Assert:', 'boolean', 'isEquals(java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.junit.Assert:', 'java.lang.String', 'formatClassAndValue(java.lang.Object,java.lang.String)', '1']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'compact(java.lang.String)', '1']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'sharedPrefix()', '4']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'sharedSuffix(java.lang.String)', '5']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor:', 'java.lang.String', 'extractDiff(java.lang.String)', '2']
Total number of mock counts in commons-collection4-results/basic-new-counts-NORMAL is 23 
commons-CI-NORMAL
Removed row: ['org.junit.Assert:', 'boolean', 'isEquals(java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.junit.Assert:', 'java.lang.String', 'formatClassAndValue(java.lang.Object,java.lang.String)', '1']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'compact(java.lang.String)', '1']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'sharedPrefix()', '4']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'sharedSuffix(java.lang.String)', '5']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor:', 'java.lang.String', 'extractDiff(java.lang.String)', '2']
Total number of mock counts in commons-collection4-results/new-counts-NORMAL is 23 
flink-core-basic-NORMAL
Removed row: ['com.esotericsoftware.kryo.Kryo:', 'boolean', 'isFinal(java.lang.Class)', '1']
Removed row: ['com.esotericsoftware.kryo.Kryo:', 'com.esotericsoftware.kryo.Registration', 'getRegistration(java.lang.Class)', '2']
Removed row: ['com.esotericsoftware.kryo.Kryo:', 'com.esotericsoftware.kryo.Serializer', 'getDefaultSerializer(java.lang.Class)', '2']
Removed row: ['com.esotericsoftware.kryo.Kryo:', 'int', 'readReferenceOrNull(com.esotericsoftware.kryo.io.Input,java.lang.Class,boolean)', '1']
Removed row: ['com.esotericsoftware.kryo.Registration:', 'void', 'setSerializer(com.esotericsoftware.kryo.Serializer)', '1']
Removed row: ['com.esotericsoftware.kryo.factories.ReflectionSerializerFactory:', 'com.esotericsoftware.kryo.Serializer', 'makeSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class,java.lang.Class)', '5']
Removed row: ['com.esotericsoftware.kryo.serializers.DefaultSerializers$ClassSerializer:', 'java.lang.Class', 'read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)', '1']
Removed row: ['com.esotericsoftware.kryo.util.DefaultClassResolver:', 'com.esotericsoftware.kryo.Registration', 'register(com.esotericsoftware.kryo.Registration)', '1']
Removed row: ['com.esotericsoftware.kryo.util.ObjectMap:', 'java.lang.Object', 'put_internal(java.lang.Object,java.lang.Object)', '5']
Removed row: ['com.esotericsoftware.kryo.util.ObjectMap:', 'void', 'push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)', '1']
Removed row: ['com.esotericsoftware.kryo.util.ObjectMap:', 'void', 'putResize(java.lang.Object,java.lang.Object)', '1']
Removed row: ['com.esotericsoftware.kryo.util.Util:', 'int', 'getDimensionCount(java.lang.Class)', '1']
Removed row: ['com.esotericsoftware.kryo.util.Util:', 'java.lang.Class', 'getElementClass(java.lang.Class)', '2']
Removed row: ['com.esotericsoftware.kryo.util.Util:', 'java.lang.String', 'className(java.lang.Class)', '4']
Removed row: ['org.junit.Assert:', 'boolean', 'isEquals(java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.junit.Assert:', 'java.lang.String', 'formatClassAndValue(java.lang.Object,java.lang.String)', '1']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'compact(java.lang.String)', '1']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'sharedPrefix()', '6']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'sharedSuffix(java.lang.String)', '8']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor:', 'java.lang.String', 'extractDiff(java.lang.String)', '2']
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Removed row: ['org.mockito.internal.util.DefaultMockingDetails:', 'void', 'assertGoodMock()', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.invocation.MockHandler', 'getMockHandler(java.lang.Object)', '1']
Total number of mock counts in flink-core-results/basic-new-counts-NORMAL is 1262 
flink-core-CI-NORMAL
Removed row: ['com.esotericsoftware.kryo.Kryo:', 'boolean', 'writeReferenceOrNull(com.esotericsoftware.kryo.io.Output,java.lang.Object,boolean)', '1']
Removed row: ['com.esotericsoftware.kryo.Kryo:', 'com.esotericsoftware.kryo.Registration', 'getRegistration(java.lang.Class)', '2']
Removed row: ['com.esotericsoftware.kryo.Kryo:', 'com.esotericsoftware.kryo.Serializer', 'getDefaultSerializer(java.lang.Class)', '2']
Removed row: ['com.esotericsoftware.kryo.Kryo:', 'int', 'readReferenceOrNull(com.esotericsoftware.kryo.io.Input,java.lang.Class,boolean)', '1']
Removed row: ['com.esotericsoftware.kryo.Kryo:', 'java.lang.Object', 'copy(java.lang.Object)', '2']
Removed row: ['com.esotericsoftware.kryo.Kryo:', 'void', 'writeClassAndObject(com.esotericsoftware.kryo.io.Output,java.lang.Object)', '1']
Removed row: ['com.esotericsoftware.kryo.Kryo:', 'void', 'writeObject(com.esotericsoftware.kryo.io.Output,java.lang.Object)', '2']
Removed row: ['com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy:', 'org.objenesis.instantiator.ObjectInstantiator', 'newInstantiatorOf(java.lang.Class)', '7']
Removed row: ['com.esotericsoftware.kryo.Registration:', 'void', 'setSerializer(com.esotericsoftware.kryo.Serializer)', '1']
Removed row: ['com.esotericsoftware.kryo.factories.ReflectionSerializerFactory:', 'com.esotericsoftware.kryo.Serializer', 'makeSerializer(com.esotericsoftware.kryo.Kryo,java.lang.Class,java.lang.Class)', '5']
Removed row: ['com.esotericsoftware.kryo.io.Output:', 'void', 'writeAscii_slow(java.lang.String,int)', '1']
Removed row: ['com.esotericsoftware.kryo.io.Output:', 'void', 'writeString(java.lang.String)', '4']
Removed row: ['com.esotericsoftware.kryo.io.Output:', 'void', 'writeString_slow(java.lang.CharSequence,int,int)', '1']
Removed row: ['com.esotericsoftware.kryo.serializers.DefaultSerializers$BooleanSerializer:', 'void', 'write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Boolean)', '1']
Removed row: ['com.esotericsoftware.kryo.serializers.DefaultSerializers$ByteSerializer:', 'void', 'write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Byte)', '1']
Removed row: ['com.esotericsoftware.kryo.serializers.DefaultSerializers$CharSerializer:', 'void', 'write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Character)', '1']
Removed row: ['com.esotericsoftware.kryo.serializers.DefaultSerializers$DoubleSerializer:', 'void', 'write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Double)', '1']
Removed row: ['com.esotericsoftware.kryo.serializers.DefaultSerializers$FloatSerializer:', 'void', 'write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Float)', '1']
Removed row: ['com.esotericsoftware.kryo.serializers.DefaultSerializers$IntSerializer:', 'void', 'write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Integer)', '1']
Removed row: ['com.esotericsoftware.kryo.serializers.DefaultSerializers$LongSerializer:', 'void', 'write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Long)', '1']
Removed row: ['com.esotericsoftware.kryo.serializers.DefaultSerializers$ShortSerializer:', 'void', 'write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Short)', '1']
Removed row: ['com.esotericsoftware.kryo.util.DefaultClassResolver:', 'com.esotericsoftware.kryo.Registration', 'register(com.esotericsoftware.kryo.Registration)', '1']
Removed row: ['com.esotericsoftware.kryo.util.ObjectMap:', 'java.lang.Object', 'get(java.lang.Object)', '4']
Removed row: ['com.esotericsoftware.kryo.util.ObjectMap:', 'java.lang.Object', 'getStash(java.lang.Object)', '1']
Removed row: ['com.esotericsoftware.kryo.util.ObjectMap:', 'java.lang.Object', 'put_internal(java.lang.Object,java.lang.Object)', '5']
Removed row: ['com.esotericsoftware.kryo.util.ObjectMap:', 'void', 'push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)', '1']
Removed row: ['com.esotericsoftware.kryo.util.ObjectMap:', 'void', 'putResize(java.lang.Object,java.lang.Object)', '1']
Removed row: ['com.esotericsoftware.kryo.util.Util:', 'int', 'getDimensionCount(java.lang.Class)', '1']
Removed row: ['com.esotericsoftware.kryo.util.Util:', 'java.lang.Class', 'getElementClass(java.lang.Class)', '2']
Removed row: ['com.esotericsoftware.kryo.util.Util:', 'java.lang.String', 'className(java.lang.Class)', '4']
Removed row: ['com.esotericsoftware.kryo.util.Util:', 'java.lang.String', 'string(java.lang.Object)', '1']
Removed row: ['com.esotericsoftware.kryo.util.Util:', 'void', 'log(java.lang.String,java.lang.Object)', '1']
Removed row: ['com.esotericsoftware.reflectasm.AccessClassLoader:', 'java.lang.ClassLoader', 'getParentClassLoader(java.lang.Class)', '1']
Removed row: ['com.esotericsoftware.reflectasm.ConstructorAccess:', 'com.esotericsoftware.reflectasm.ConstructorAccess', 'get(java.lang.Class)', '10']
Removed row: ['javassist.CtMethod:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['javassist.bytecode.MemberrefInfo:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.apache.logging.log4j.MarkerManager$Log4jMarker:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.apache.logging.log4j.spi.Provider:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.apache.logging.log4j.util.LoaderUtil$UrlResource:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.hamcrest.BaseDescription:', 'java.lang.String', 'descriptionOf(java.lang.Object)', '2']
Removed row: ['org.hamcrest.BaseDescription:', 'org.hamcrest.Description', 'appendDescriptionOf(org.hamcrest.SelfDescribing)', '1']
Removed row: ['org.hamcrest.BaseDescription:', 'org.hamcrest.Description', 'appendValue(java.lang.Object)', '2']
Removed row: ['org.hamcrest.BaseDescription:', 'org.hamcrest.Description', 'appendValueList(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable)', '1']
Removed row: ['org.hamcrest.BaseDescription:', 'void', 'toJavaSyntax(java.lang.String)', '2']
Removed row: ['org.hamcrest.TypeSafeMatcher:', 'void', 'describeMismatch(java.lang.Object,org.hamcrest.Description)', '1']
Removed row: ['org.hamcrest.collection.IsEmptyCollection:', 'boolean', 'matchesSafely(java.util.Collection)', '1']
Removed row: ['org.hamcrest.collection.IsIterableContainingInAnyOrder:', 'boolean', 'matchesSafely(java.lang.Iterable,org.hamcrest.Description)', '1']
Removed row: ['org.hamcrest.collection.IsIterableContainingInOrder:', 'boolean', 'matchesSafely(java.lang.Iterable,org.hamcrest.Description)', '1']
Removed row: ['org.hamcrest.core.IsCollectionContaining:', 'boolean', 'matchesSafely(java.lang.Iterable,org.hamcrest.Description)', '1']
Removed row: ['org.hamcrest.core.IsEqual:', 'boolean', 'areEqual(java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.hamcrest.core.IsEqual:', 'boolean', 'isArray(java.lang.Object)', '1']
Removed row: ['org.hamcrest.core.IsInstanceOf:', 'boolean', 'matches(java.lang.Object,org.hamcrest.Description)', '1']
Removed row: ['org.hamcrest.core.StringContains:', 'boolean', 'evalSubstringOf(java.lang.String)', '1']
Removed row: ['org.hamcrest.internal.ArrayIterator:', 'void', '<init>(java.lang.Object)', '1']
Removed row: ['org.hamcrest.number.OrderingComparison:', 'boolean', 'matchesSafely(java.lang.Comparable)', '1']
Removed row: ['org.hamcrest.number.OrderingComparison:', 'void', 'describeMismatchSafely(java.lang.Comparable,org.hamcrest.Description)', '1']
Removed row: ['org.joda.time.base.AbstractPartial:', 'boolean', 'equals(java.lang.Object)', '4']
Removed row: ['org.joda.time.chrono.BasicChronology:', 'boolean', 'equals(java.lang.Object)', '3']
Removed row: ['org.joda.time.chrono.ISOChronology:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.joda.time.field.MillisDurationField:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.joda.time.field.PreciseDurationField:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.joda.time.field.ScaledDurationField:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['org.joda.time.field.UnsupportedDurationField:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.joda.time.tz.FixedDateTimeZone:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.junit.Assert:', 'boolean', 'isEquals(java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.junit.Assert:', 'java.lang.String', 'formatClassAndValue(java.lang.Object,java.lang.String)', '1']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'compact(java.lang.String)', '1']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'sharedPrefix()', '6']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'sharedSuffix(java.lang.String)', '8']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor:', 'java.lang.String', 'extractDiff(java.lang.String)', '2']
Removed row: ['org.junit.internal.matchers.ThrowableMessageMatcher:', 'boolean', 'matchesSafely(java.lang.Throwable)', '1']
Removed row: ['org.junit.internal.matchers.ThrowableMessageMatcher:', 'void', 'describeMismatchSafely(java.lang.Throwable,org.hamcrest.Description)', '1']
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Removed row: ['org.mockito.internal.util.DefaultMockingDetails:', 'void', 'assertGoodMock()', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.invocation.MockHandler', 'getMockHandler(java.lang.Object)', '1']
Removed row: ['org.objenesis.instantiator.android.Android10Instantiator:', 'java.lang.Object', 'newInstance()', '1']
Removed row: ['org.objenesis.instantiator.android.Android17Instantiator:', 'java.lang.Object', 'newInstance()', '1']
Removed row: ['org.objenesis.instantiator.android.Android18Instantiator:', 'java.lang.Object', 'newInstance()', '1']
Removed row: ['org.objenesis.instantiator.gcj.GCJInstantiator:', 'java.lang.Object', 'newInstance()', '1']
Removed row: ['org.objenesis.instantiator.gcj.GCJSerializationInstantiator:', 'java.lang.Object', 'newInstance()', '1']
Removed row: ['org.objenesis.instantiator.jrockit.JRockitLegacyInstantiator:', 'java.lang.Object', 'newInstance()', '1']
Removed row: ['org.objenesis.instantiator.sun.UnsafeFactoryInstantiator:', 'java.lang.Object', 'newInstance()', '1']
Removed row: ['org.slf4j.helpers.BasicMarker:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.slf4j.helpers.SubstituteLogger:', 'boolean', 'equals(java.lang.Object)', '1']
Total number of mock counts in flink-core-results/new-counts-NORMAL is 1389 
jsonschema2pojo-basic-NORMAL
Removed row: ['org.hamcrest.core.IsEqual:', 'boolean', 'isArray(java.lang.Object)', '1']
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Removed row: ['org.mockito.internal.util.DefaultMockingDetails:', 'void', 'assertGoodMock()', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.invocation.MockHandler', 'getMockHandler(java.lang.Object)', '1']
Total number of mock counts in jsonschema2pojo-core-results/basic-new-counts-NORMAL is 462 
jsonschema2pojo-CI-NORMAL
Removed row: ['com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.core.JsonLocation:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.core.io.SerializedString:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.databind.PropertyName:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.databind.introspect.MemberKey:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.databind.jsontype.NamedType:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.databind.type.ArrayType:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.databind.type.ClassKey:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.databind.type.CollectionLikeType:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.databind.type.MapLikeType:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.databind.type.ReferenceType:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.databind.type.ResolvedRecursiveType:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.databind.type.SimpleType:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.databind.type.TypeBindings$AsKey:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.fasterxml.jackson.databind.util.ClassUtil:', 'boolean', 'hasClass(java.lang.Object,java.lang.Class)', '1']
Removed row: ['com.fasterxml.jackson.databind.util.TypeKey:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.github.tomakehurst.wiremock.admin.RequestSpec:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.github.tomakehurst.wiremock.global.GlobalSettings:', 'boolean', 'equals(java.lang.Object)', '4']
Removed row: ['com.github.tomakehurst.wiremock.http.RequestMethod:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.github.tomakehurst.wiremock.stubbing.Scenario:', 'boolean', 'equals(java.lang.Object)', '5']
Removed row: ['com.google.common.collect.AbstractMapEntry:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['com.google.common.collect.Iterables:', 'boolean', 'all(java.lang.Iterable,com.google.common.base.Predicate)', '1']
Removed row: ['com.google.common.collect.Lists:', 'boolean', 'equalsImpl(java.util.List,java.lang.Object)', '3']
Removed row: ['com.google.common.collect.Sets:', 'boolean', 'equalsImpl(java.util.Set,java.lang.Object)', '1']
Removed row: ['com.sun.codemodel.JClass:', 'com.sun.codemodel.JClass', 'narrow(com.sun.codemodel.JType)', '1']
Removed row: ['com.sun.codemodel.JDefinedClass:', 'com.sun.codemodel.JDefinedClass', '_extends(com.sun.codemodel.JClass)', '2']
Removed row: ['com.sun.codemodel.JMethod:', 'boolean', 'hasSignature(com.sun.codemodel.JType[])', '1']
Removed row: ['com.sun.codemodel.JNarrowedClass:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.sun.codemodel.JNarrowedClass:', 'com.sun.codemodel.JClass', '_extends()', '1']
Removed row: ['com.sun.codemodel.JVar:', 'com.sun.codemodel.JAnnotationUse', 'annotate(java.lang.Class)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'boolean', 'nodeEquals(japa.parser.ast.Node,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.BlockComment,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.LineComment,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.TypeParameter,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)', '4']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)', '5']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.BaseParameter,japa.parser.ast.Node)', '3']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)', '8']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)', '7']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)', '4']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)', '6']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)', '4']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.InitializerDeclaration,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.JavadocComment,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)', '9']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.MultiTypeParameter,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.Parameter,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.VariableDeclarator,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.body.VariableDeclaratorId,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.ArrayAccessExpr,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)', '4']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.ArrayInitializerExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.AssignExpr,japa.parser.ast.Node)', '3']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.BinaryExpr,japa.parser.ast.Node)', '3']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.BooleanLiteralExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.CastExpr,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.CharLiteralExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.ClassExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.ConditionalExpr,japa.parser.ast.Node)', '3']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.DoubleLiteralExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.EnclosedExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.FieldAccessExpr,japa.parser.ast.Node)', '3']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.InstanceOfExpr,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.IntegerLiteralExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.IntegerLiteralMinValueExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.LongLiteralExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.LongLiteralMinValueExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.MarkerAnnotationExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.MemberValuePair,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)', '4']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.NameExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.NormalAnnotationExpr,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)', '5']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.QualifiedNameExpr,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.SingleMemberAnnotationExpr,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.StringLiteralExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.SuperExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.ThisExpr,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.UnaryExpr,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)', '4']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.AssertStmt,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.BlockStmt,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.BreakStmt,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.CatchClause,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.ContinueStmt,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.DoStmt,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,japa.parser.ast.Node)', '3']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.ExpressionStmt,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)', '4']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.ForeachStmt,japa.parser.ast.Node)', '3']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.IfStmt,japa.parser.ast.Node)', '3']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.LabeledStmt,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.ReturnStmt,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.SwitchEntryStmt,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.SwitchStmt,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.SynchronizedStmt,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.ThrowStmt,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.TryStmt,japa.parser.ast.Node)', '3']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.TypeDeclarationStmt,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.stmt.WhileStmt,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.type.ClassOrInterfaceType,japa.parser.ast.Node)', '3']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.type.PrimitiveType,japa.parser.ast.Node)', '1']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.type.ReferenceType,japa.parser.ast.Node)', '2']
Removed row: ['japa.parser.ast.visitor.EqualsVisitor:', 'java.lang.Boolean', 'visit(japa.parser.ast.type.WildcardType,japa.parser.ast.Node)', '2']
Removed row: ['org.hamcrest.BaseDescription:', 'java.lang.String', 'descriptionOf(java.lang.Object)', '2']
Removed row: ['org.hamcrest.BaseDescription:', 'org.hamcrest.Description', 'appendValue(java.lang.Object)', '2']
Removed row: ['org.hamcrest.BaseDescription:', 'void', 'toJavaSyntax(java.lang.String)', '2']
Removed row: ['org.hamcrest.TypeSafeMatcher:', 'void', 'describeMismatch(java.lang.Object,org.hamcrest.Description)', '1']
Removed row: ['org.hamcrest.collection.IsCollectionWithSize:', 'java.lang.Integer', 'featureValueOf(java.util.Collection)', '1']
Removed row: ['org.hamcrest.core.IsEqual:', 'boolean', 'areEqual(java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.hamcrest.core.IsEqual:', 'boolean', 'isArray(java.lang.Object)', '1']
Removed row: ['org.hamcrest.core.IsInstanceOf:', 'boolean', 'matches(java.lang.Object,org.hamcrest.Description)', '1']
Removed row: ['org.hamcrest.internal.ArrayIterator:', 'void', '<init>(java.lang.Object)', '1']
Removed row: ['org.hamcrest.number.OrderingComparison:', 'boolean', 'matchesSafely(java.lang.Comparable)', '1']
Removed row: ['org.hamcrest.number.OrderingComparison:', 'void', 'describeMismatchSafely(java.lang.Comparable,org.hamcrest.Description)', '1']
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Removed row: ['org.mockito.internal.util.DefaultMockingDetails:', 'void', 'assertGoodMock()', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.invocation.MockHandler', 'getMockHandler(java.lang.Object)', '1']
Removed row: ['org.slf4j.helpers.SubstituteLogger:', 'boolean', 'equals(java.lang.Object)', '1']
Total number of mock counts in jsonschema2pojo-core-results/new-counts-NORMAL is 604 
maven-core-basic-NORMAL
Removed row: ['org.junit.Assert:', 'boolean', 'isEquals(java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.junit.Assert:', 'java.lang.String', 'formatClassAndValue(java.lang.Object,java.lang.String)', '1']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'compact(java.lang.String)', '1']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'sharedPrefix()', '6']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'sharedSuffix(java.lang.String)', '8']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor:', 'java.lang.String', 'extractDiff(java.lang.String)', '2']
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Removed row: ['org.mockito.internal.util.DefaultMockingDetails:', 'void', 'assertGoodMock()', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.invocation.MockHandler', 'getMockHandler(java.lang.Object)', '1']
Total number of mock counts in maven-core-results/basic-new-counts-NORMAL is 31 
maven-core-CI-NORMAL
Removed row: ['org.junit.Assert:', 'boolean', 'isEquals(java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.junit.Assert:', 'java.lang.String', 'formatClassAndValue(java.lang.Object,java.lang.String)', '1']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'compact(java.lang.String)', '1']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'sharedPrefix()', '6']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor:', 'java.lang.String', 'sharedSuffix(java.lang.String)', '8']
Removed row: ['org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor:', 'java.lang.String', 'extractDiff(java.lang.String)', '2']
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Removed row: ['org.mockito.internal.util.DefaultMockingDetails:', 'void', 'assertGoodMock()', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.invocation.MockHandler', 'getMockHandler(java.lang.Object)', '1']
Total number of mock counts in maven-core-results/new-counts-NORMAL is 39 
microbenchmark-basic-NORMAL
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Total number of mock counts in microbenchmark-results/basic-new-counts-NORMAL is 132 
microbenchmark-CI-NORMAL
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Removed row: ['org.mockito.internal.creation.CglibMockMaker:', 'org.mockito.invocation.MockHandler', 'getHandler(java.lang.Object)', '1']
Total number of mock counts in microbenchmark-results/new-counts-NORMAL is 132 
quartz-core-basic-NORMAL
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Total number of mock counts in quartz-core-results/basic-new-counts-NORMAL is 23 
quartz-core-CI-NORMAL
Removed row: ['org.mockito.internal.MockitoCore:', 'java.lang.Object', 'verify(java.lang.Object,org.mockito.verification.VerificationMode)', '1']
Removed row: ['org.mockito.internal.creation.CglibMockMaker:', 'org.mockito.invocation.MockHandler', 'getHandler(java.lang.Object)', '1']
Total number of mock counts in quartz-core-results/new-counts-NORMAL is 31 
vraptor-core-basic-NORMAL
Removed row: ['br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter:', 'java.util.Locale', 'providedOrDefault()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'boolean', 'isAsyncStarted()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'boolean', 'isAsyncSupported()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'boolean', 'isSecure()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'boolean', 'isWrapperFor(java.lang.Class)', '2']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'boolean', 'isWrapperFor(javax.servlet.ServletRequest)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'int', 'getContentLength()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'int', 'getLocalPort()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'int', 'getRemotePort()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'int', 'getServerPort()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.io.BufferedReader', 'getReader()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.Object', 'getAttribute(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getCharacterEncoding()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getContentType()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getLocalAddr()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getLocalName()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getParameter(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getProtocol()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getRealPath(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getRemoteAddr()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getRemoteHost()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getScheme()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getServerName()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String[]', 'getParameterValues(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.util.Enumeration', 'getAttributeNames()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.util.Enumeration', 'getLocales()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.util.Enumeration', 'getParameterNames()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.util.Locale', 'getLocale()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.util.Map', 'getParameterMap()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.AsyncContext', 'getAsyncContext()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.AsyncContext', 'startAsync()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.AsyncContext', 'startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.DispatcherType', 'getDispatcherType()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.RequestDispatcher', 'getRequestDispatcher(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.ServletContext', 'getServletContext()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.ServletInputStream', 'getInputStream()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'void', 'removeAttribute(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'void', 'setAttribute(java.lang.String,java.lang.Object)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'void', 'setCharacterEncoding(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'boolean', 'isCommitted()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'boolean', 'isWrapperFor(java.lang.Class)', '2']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'boolean', 'isWrapperFor(javax.servlet.ServletResponse)', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'int', 'getBufferSize()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'java.io.PrintWriter', 'getWriter()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'java.lang.String', 'getCharacterEncoding()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'java.lang.String', 'getContentType()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'java.util.Locale', 'getLocale()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'javax.servlet.ServletOutputStream', 'getOutputStream()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'flushBuffer()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'reset()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'resetBuffer()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'setBufferSize(int)', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'setCharacterEncoding(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'setContentLength(int)', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'setContentType(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'setLocale(java.util.Locale)', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'boolean', 'authenticate(javax.servlet.http.HttpServletResponse)', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'boolean', 'isRequestedSessionIdFromCookie()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'boolean', 'isRequestedSessionIdFromURL()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'boolean', 'isRequestedSessionIdFromUrl()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'boolean', 'isRequestedSessionIdValid()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'boolean', 'isUserInRole(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'int', 'getIntHeader(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getAuthType()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getContextPath()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getHeader(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getMethod()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getPathInfo()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getPathTranslated()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getQueryString()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getRemoteUser()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getRequestURI()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getRequestedSessionId()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getServletPath()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.StringBuffer', 'getRequestURL()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.security.Principal', 'getUserPrincipal()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.util.Collection', 'getParts()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.util.Enumeration', 'getHeaderNames()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.util.Enumeration', 'getHeaders(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'javax.servlet.http.Cookie[]', 'getCookies()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'javax.servlet.http.HttpSession', 'getSession()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'javax.servlet.http.HttpSession', 'getSession(boolean)', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'javax.servlet.http.Part', 'getPart(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'long', 'getDateHeader(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'void', 'login(java.lang.String,java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'void', 'logout()', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'boolean', 'containsHeader(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'int', 'getStatus()', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'java.lang.String', 'encodeRedirectURL(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'java.lang.String', 'encodeRedirectUrl(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'java.lang.String', 'encodeURL(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'java.lang.String', 'encodeUrl(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'java.lang.String', 'getHeader(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'java.util.Collection', 'getHeaderNames()', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'java.util.Collection', 'getHeaders(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'addCookie(javax.servlet.http.Cookie)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'addDateHeader(java.lang.String,long)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'addHeader(java.lang.String,java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'addIntHeader(java.lang.String,int)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'sendError(int)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'sendError(int,java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'sendRedirect(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'setDateHeader(java.lang.String,long)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'setHeader(java.lang.String,java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'setIntHeader(java.lang.String,int)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'setStatus(int)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'setStatus(int,java.lang.String)', '1']
Removed row: ['javax.servlet.jsp.jstl.core.Config:', 'java.lang.Object', 'get(javax.servlet.ServletContext,java.lang.String)', '1']
Removed row: ['javax.servlet.jsp.jstl.core.Config:', 'java.lang.Object', 'get(javax.servlet.ServletRequest,java.lang.String)', '1']
Removed row: ['net.vidageek.mirror.get.DefaultGetterHandler:', 'void', '<init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)', '1']
Removed row: ['net.vidageek.mirror.invoke.DefaultInvocationHandler:', 'java.lang.Object', 'getterFor(java.lang.String)', '1']
Removed row: ['net.vidageek.mirror.invoke.DefaultInvocationHandler:', 'void', '<init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)', '1']
Removed row: ['net.vidageek.mirror.set.DefaultSetterHandler:', 'void', '<init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)', '1']
Removed row: ['ognl.ASTAdd:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '6']
Removed row: ['ognl.ASTCtor:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTList:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '7']
Removed row: ['ognl.ASTMethod:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTMethod:', 'java.lang.String', 'toSetSourceString(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTProperty:', 'int', 'getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTProperty:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '15']
Removed row: ['ognl.ASTProperty:', 'java.lang.String', 'toSetSourceString(ognl.OgnlContext,java.lang.Object)', '14']
Removed row: ['ognl.ASTProperty:', 'java.lang.reflect.Method', 'getIndexedWriteMethod(java.beans.PropertyDescriptor)', '2']
Removed row: ['ognl.ASTSequence:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTStaticMethod:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTVarRef:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ArrayPropertyAccessor:', 'java.lang.String', 'getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.ArrayPropertyAccessor:', 'java.lang.String', 'getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.ArrayPropertyAccessor:', 'void', 'setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.Evaluation:', 'java.lang.String', 'toString(boolean,boolean,java.lang.String)', '1']
Removed row: ['ognl.EvaluationPool:', 'void', 'recycle(ognl.Evaluation)', '1']
Removed row: ['ognl.EvaluationPool:', 'void', 'recycleAll(ognl.Evaluation)', '2']
Removed row: ['ognl.ListPropertyAccessor:', 'java.lang.Object', 'getProperty(java.util.Map,java.lang.Object,java.lang.Object)', '8']
Removed row: ['ognl.ListPropertyAccessor:', 'java.lang.String', 'getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.ListPropertyAccessor:', 'java.lang.String', 'getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.ListPropertyAccessor:', 'void', 'setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)', '7']
Removed row: ['ognl.NoSuchPropertyException:', 'java.lang.String', 'getReason(java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.NumericExpression:', 'java.lang.String', 'coerceToNumeric(java.lang.String,ognl.OgnlContext,ognl.Node)', '3']
Removed row: ['ognl.ObjectPropertyAccessor:', 'java.lang.Object', 'setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)', '1']
Removed row: ['ognl.ObjectPropertyAccessor:', 'java.lang.String', 'getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.ObjectPropertyAccessor:', 'java.lang.String', 'getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.OgnlContext:', 'void', 'setRoot(java.lang.Object)', '1']
Removed row: ['ognl.OgnlOps:', 'boolean', 'booleanValue(java.lang.Object)', '4']
Removed row: ['ognl.OgnlRuntime:', 'boolean', 'isFieldAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Field,java.lang.String)', '1']
Removed row: ['ognl.OgnlRuntime:', 'boolean', 'isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)', '2']
Removed row: ['ognl.OgnlRuntime:', 'boolean', 'setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)', '7']
Removed row: ['ognl.OgnlRuntime:', 'boolean', 'setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)', '3']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Class', 'classForName(ognl.OgnlContext,java.lang.String)', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Class[]', 'findParameterTypes(java.lang.Class,java.lang.reflect.Method)', '3']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)', '2']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)', '4']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)', '3']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.String', 'getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.reflect.Method', 'getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.reflect.Method', 'getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])', '2']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.reflect.Method', 'getMethod(ognl.OgnlContext,java.lang.Class,java.lang.String,ognl.Node[],boolean)', '1']
Removed row: ['ognl.enhance.ContextClassLoader:', 'java.lang.Class', 'findClass(java.lang.String)', '1']
Removed row: ['ognl.enhance.ExpressionCompiler:', 'java.lang.Class', 'getRootExpressionClass(ognl.Node,ognl.OgnlContext)', '1']
Removed row: ['ognl.enhance.ExpressionCompiler:', 'java.lang.String', 'castExpression(ognl.OgnlContext,ognl.Node,java.lang.String)', '2']
Removed row: ['ognl.enhance.ExpressionCompiler:', 'java.lang.String', 'getCastString(java.lang.Class)', '3']
Removed row: ['org.apache.commons.fileupload.servlet.ServletFileUpload:', 'boolean', 'isMultipartContent(javax.servlet.http.HttpServletRequest)', '1']
Removed row: ['org.apache.commons.fileupload.servlet.ServletRequestContext:', 'int', 'getContentLength()', '1']
Removed row: ['org.apache.commons.fileupload.servlet.ServletRequestContext:', 'java.io.InputStream', 'getInputStream()', '1']
Removed row: ['org.apache.commons.fileupload.servlet.ServletRequestContext:', 'java.lang.String', 'getCharacterEncoding()', '1']
Removed row: ['org.apache.commons.fileupload.servlet.ServletRequestContext:', 'java.lang.String', 'getContentType()', '1']
Removed row: ['org.apache.commons.fileupload.servlet.ServletRequestContext:', 'long', 'contentLength()', '2']
Removed row: ['org.hamcrest.core.IsEqual:', 'boolean', 'isArray(java.lang.Object)', '1']
Removed row: ['org.mockito.internal.stubbing.answers.Returns:', 'java.lang.Class', 'getReturnType()', '1']
Removed row: ['org.mockito.internal.stubbing.answers.Returns:', 'java.lang.String', 'printReturnType()', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'boolean', 'isMockitoMock(java.lang.Object)', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.internal.creation.MethodInterceptorFilter', 'getInterceptor(java.lang.Object)', '1']
Removed row: ['org.springframework.web.context.request.RequestContextListener:', 'void', 'requestDestroyed(javax.servlet.ServletRequestEvent)', '1']
Removed row: ['org.springframework.web.context.request.RequestContextListener:', 'void', 'requestInitialized(javax.servlet.ServletRequestEvent)', '2']
Removed row: ['org.springframework.web.context.request.ServletRequestAttributes:', 'java.lang.Object', 'getAttribute(java.lang.String,int)', '1']
Removed row: ['org.springframework.web.context.request.ServletRequestAttributes:', 'java.lang.String', 'toString()', '1']
Removed row: ['org.springframework.web.context.request.ServletRequestAttributes:', 'java.lang.String[]', 'getAttributeNames(int)', '1']
Removed row: ['org.springframework.web.context.request.ServletRequestAttributes:', 'javax.servlet.http.HttpSession', 'getSession(boolean)', '1']
Removed row: ['org.springframework.web.context.request.ServletRequestAttributes:', 'void', 'removeAttribute(java.lang.String,int)', '1']
Removed row: ['org.springframework.web.context.request.ServletRequestAttributes:', 'void', 'setAttribute(java.lang.String,java.lang.Object,int)', '1']
Removed row: ['org.springframework.web.context.request.ServletRequestAttributes:', 'void', 'updateAccessedSessionAttributes()', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'boolean', 'checkNotModified(long)', '2']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'boolean', 'isSecure()', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'boolean', 'isUserInRole(java.lang.String)', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.lang.Object', 'getNativeRequest(java.lang.Class)', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.lang.Object', 'getNativeResponse(java.lang.Class)', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.lang.String', 'getContextPath()', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.lang.String', 'getDescription(boolean)', '4']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.lang.String', 'getHeader(java.lang.String)', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.lang.String', 'getParameter(java.lang.String)', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.lang.String', 'getRemoteUser()', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.lang.String[]', 'getHeaderValues(java.lang.String)', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.lang.String[]', 'getParameterValues(java.lang.String)', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.security.Principal', 'getUserPrincipal()', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.util.Iterator', 'getHeaderNames()', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.util.Iterator', 'getParameterNames()', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.util.Locale', 'getLocale()', '1']
Removed row: ['org.springframework.web.context.request.ServletWebRequest:', 'java.util.Map', 'getParameterMap()', '1']
Removed row: ['org.springframework.web.context.support.WebApplicationContextUtils:', 'org.springframework.web.context.WebApplicationContext', 'getWebApplicationContext(javax.servlet.ServletContext,java.lang.String)', '1']
Removed row: ['org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory:', 'javax.servlet.http.HttpSession', 'getObject()', '1']
Total number of mock counts in vraptor-core-results/basic-new-counts-NORMAL is 1301 
vraptor-core-CI-NORMAL
Removed row: ['br.com.caelum.iogi.EmptyObjectsProvider:', 'boolean', 'canProvide(br.com.caelum.iogi.reflection.Target)', '2']
Removed row: ['br.com.caelum.iogi.EmptyObjectsProvider:', 'boolean', 'selfCanProvide(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.EmptyObjectsProvider:', 'java.lang.Object', 'emptyArrayFor(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.EmptyObjectsProvider:', 'java.lang.Object', 'provide(br.com.caelum.iogi.reflection.Target)', '4']
Removed row: ['br.com.caelum.iogi.MultiInstantiator:', 'java.lang.Object', 'instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)', '2']
Removed row: ['br.com.caelum.iogi.ObjectInstantiator:', 'java.lang.Object', 'instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)', '1']
Removed row: ['br.com.caelum.iogi.ObjectInstantiator:', 'void', 'expectingAConcreteTarget(br.com.caelum.iogi.reflection.Target)', '2']
Removed row: ['br.com.caelum.iogi.collections.ArrayInstantiator:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '2']
Removed row: ['br.com.caelum.iogi.collections.ArrayInstantiator$ArrayFactory:', 'java.lang.Object', 'instantiateArrayElement(br.com.caelum.iogi.parameters.Parameters)', '1']
Removed row: ['br.com.caelum.iogi.collections.ArrayInstantiator$ArrayFactory:', 'java.lang.Object', 'makeArray()', '1']
Removed row: ['br.com.caelum.iogi.collections.CyclingListInstantiator:', 'int', 'countToFirstRepeatedParameterName(java.util.List)', '2']
Removed row: ['br.com.caelum.iogi.collections.CyclingListInstantiator:', 'java.util.List', 'instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)', '1']
Removed row: ['br.com.caelum.iogi.collections.IndexedListInstantiator:', 'br.com.caelum.iogi.reflection.Target', 'elementTarget(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.collections.IndexedListInstantiator:', 'java.util.List', 'instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)', '1']
Removed row: ['br.com.caelum.iogi.collections.ListInstantiator:', 'boolean', 'firstParameterIsDecorated(java.util.List)', '1']
Removed row: ['br.com.caelum.iogi.collections.ListInstantiator:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '2']
Removed row: ['br.com.caelum.iogi.collections.ParametersByIndex$1:', 'java.lang.Integer', 'apply(br.com.caelum.iogi.parameters.Parameter)', '1']
Removed row: ['br.com.caelum.iogi.conversion.BigDecimalConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.BigIntegerConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.BooleanPrimitiveConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.BooleanWrapperConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.BytePrimitiveConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.ByteWrapperConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.CharacterPrimitiveConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.CharacterWrapperConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.CharacterWrapperConverter:', 'java.lang.Character', 'convert(java.lang.String,br.com.caelum.iogi.reflection.Target)', '2']
Removed row: ['br.com.caelum.iogi.conversion.DoublePrimitiveConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.DoubleWrapperConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.EnumConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.EnumConverter:', 'boolean', 'isNumber(java.lang.String)', '2']
Removed row: ['br.com.caelum.iogi.conversion.EnumConverter:', 'java.lang.Object', 'convert(java.lang.String,br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.EnumConverter:', 'java.lang.Object', 'instantiateFromName(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.EnumConverter:', 'java.lang.Object', 'instantiateFromOrdinal(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)', '2']
Removed row: ['br.com.caelum.iogi.conversion.EnumConverter:', 'void', 'ensureTargetIsAnEnum(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.FallbackConverter:', 'java.lang.Object', 'convert(java.lang.String,br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.FloatPrimitiveConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.FloatWrapperConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.IntegerPrimitiveConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.IntegerWrapperConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter:', 'java.util.Locale', 'providedOrDefault()', '1']
Removed row: ['br.com.caelum.iogi.conversion.LongPrimitiveConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.LongWrapperConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.ShortPrimitiveConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.ShortWrapperConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.StringConverter:', 'boolean', 'isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.conversion.TypeConverter:', 'java.lang.Object', 'instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)', '3']
Removed row: ['br.com.caelum.iogi.parameters.Parameter:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['br.com.caelum.iogi.parameters.Parameter:', 'com.google.common.collect.ImmutableList', 'computeNameComponents(java.lang.String)', '1']
Removed row: ['br.com.caelum.iogi.parameters.Parameter:', 'int', 'hashCode()', '1']
Removed row: ['br.com.caelum.iogi.parameters.Parameters:', 'br.com.caelum.iogi.parameters.Parameter', 'namedAfter(br.com.caelum.iogi.reflection.Target)', '2']
Removed row: ['br.com.caelum.iogi.parameters.Parameters:', 'br.com.caelum.iogi.parameters.Parameters', 'focusedOn(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.parameters.Parameters:', 'com.google.common.collect.ListMultimap', 'groupByFirstNameComponent(java.util.List)', '1']
Removed row: ['br.com.caelum.iogi.parameters.Parameters:', 'java.util.List', 'forTarget(br.com.caelum.iogi.reflection.Target)', '1']
Removed row: ['br.com.caelum.iogi.reflection.ClassConstructor:', 'java.util.List', 'argumentTargets()', '2']
Removed row: ['br.com.caelum.iogi.reflection.Constructors$1:', 'int', 'compare(br.com.caelum.iogi.reflection.ClassConstructor,br.com.caelum.iogi.reflection.ClassConstructor)', '2']
Removed row: ['br.com.caelum.iogi.reflection.Constructors$FilledConstructor:', 'br.com.caelum.iogi.reflection.NewObject', 'instantiate(br.com.caelum.iogi.Instantiator)', '1']
Removed row: ['br.com.caelum.iogi.reflection.Constructors$FilledConstructor:', 'java.util.Collection', 'targetsNeedingADependency()', '1']
Removed row: ['br.com.caelum.iogi.reflection.Constructors$FilledConstructor:', 'java.util.List', 'argumentValues(br.com.caelum.iogi.Instantiator)', '1']
Removed row: ['br.com.caelum.iogi.reflection.NewObject:', 'void', 'setProperty(br.com.caelum.iogi.reflection.NewObject$Setter)', '1']
Removed row: ['br.com.caelum.iogi.reflection.NewObject$JavaSetter:', 'java.lang.String', 'propertyName()', '1']
Removed row: ['br.com.caelum.iogi.reflection.NewObject$JavaSetter$1:', 'boolean', 'accepts(java.lang.reflect.Method)', '4']
Removed row: ['br.com.caelum.iogi.reflection.NewObject$ScalaSetter:', 'java.lang.String', 'propertyName()', '1']
Removed row: ['br.com.caelum.iogi.reflection.NewObject$ScalaSetter$1:', 'boolean', 'accepts(java.lang.reflect.Method)', '1']
Removed row: ['br.com.caelum.iogi.reflection.NewObject$Setter:', 'java.lang.reflect.Type', 'type()', '1']
Removed row: ['br.com.caelum.iogi.reflection.Target:', 'boolean', 'equals(java.lang.Object)', '3']
Removed row: ['br.com.caelum.iogi.reflection.Target:', 'boolean', 'isInstantiable()', '2']
Removed row: ['br.com.caelum.iogi.reflection.Target:', 'br.com.caelum.iogi.reflection.Constructors', 'constructors(br.com.caelum.iogi.spi.ParameterNamesProvider,br.com.caelum.iogi.DependenciesInjector)', '1']
Removed row: ['br.com.caelum.iogi.reflection.Target:', 'br.com.caelum.iogi.reflection.Target', 'typeArgument(int)', '1']
Removed row: ['br.com.caelum.iogi.reflection.Target:', 'int', 'hashCode()', '2']
Removed row: ['br.com.caelum.iogi.reflection.Target:', 'java.lang.Class', 'arrayElementType()', '1']
Removed row: ['br.com.caelum.iogi.reflection.Target:', 'java.lang.Class', 'findRawClassType(java.lang.reflect.Type)', '1']
Removed row: ['br.com.caelum.iogi.reflection.Target:', 'java.lang.Object', 'cast(java.lang.Object)', '2']
Removed row: ['br.com.caelum.iogi.reflection.Target$Primitives:', 'java.lang.Object', 'primitiveCast(java.lang.Object,java.lang.Class)', '1']
Removed row: ['br.com.caelum.iogi.util.Assert:', 'void', 'isNotARawType(br.com.caelum.iogi.reflection.Target)', '2']
Removed row: ['com.google.common.base.Joiner:', 'java.lang.CharSequence', 'toString(java.lang.Object)', '1']
Removed row: ['com.google.common.base.Objects:', 'boolean', 'equal(java.lang.Object,java.lang.Object)', '1']
Removed row: ['com.google.common.base.Preconditions:', 'java.lang.String', 'format(java.lang.String,java.lang.Object[])', '4']
Removed row: ['com.google.common.base.Predicates$InPredicate:', 'boolean', 'apply(java.lang.Object)', '1']
Removed row: ['com.google.common.base.Predicates$InPredicate:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.google.common.base.Predicates$InPredicate:', 'int', 'hashCode()', '1']
Removed row: ['com.google.common.base.Predicates$InstanceOfPredicate:', 'boolean', 'apply(java.lang.Object)', '1']
Removed row: ['com.google.common.base.Predicates$InstanceOfPredicate:', 'int', 'hashCode()', '1']
Removed row: ['com.google.common.base.Predicates$InstanceOfPredicate:', 'java.lang.String', 'toString()', '1']
Removed row: ['com.google.common.base.Predicates$NotPredicate:', 'boolean', 'apply(java.lang.Object)', '1']
Removed row: ['com.google.common.base.Predicates$NotPredicate:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.google.common.base.Predicates$NotPredicate:', 'int', 'hashCode()', '1']
Removed row: ['com.google.common.base.Predicates$NotPredicate:', 'java.lang.String', 'toString()', '1']
Removed row: ['com.google.common.base.Predicates$OrPredicate:', 'boolean', 'apply(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.AbstractMapBasedMultiset:', 'int', 'add(java.lang.Object,int)', '4']
Removed row: ['com.google.common.collect.AbstractMapBasedMultiset:', 'int', 'count(java.lang.Object)', '2']
Removed row: ['com.google.common.collect.AbstractMapBasedMultiset:', 'int', 'distinctElements()', '1']
Removed row: ['com.google.common.collect.AbstractMapBasedMultiset:', 'int', 'remove(java.lang.Object,int)', '4']
Removed row: ['com.google.common.collect.AbstractMapBasedMultiset:', 'int', 'setCount(java.lang.Object,int)', '3']
Removed row: ['com.google.common.collect.AbstractMapBasedMultiset:', 'java.util.Iterator', 'entryIterator()', '1']
Removed row: ['com.google.common.collect.AbstractMapBasedMultiset:', 'void', 'clear()', '2']
Removed row: ['com.google.common.collect.AbstractMapBasedMultiset$1:', 'void', 'remove()', '1']
Removed row: ['com.google.common.collect.AbstractMapBasedMultiset$1$1:', 'int', 'getCount()', '4']
Removed row: ['com.google.common.collect.AbstractMapBasedMultiset$1$1:', 'java.lang.Object', 'getElement()', '1']
Removed row: ['com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet:', 'java.util.Iterator', 'iterator()', '1']
Removed row: ['com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet:', 'void', '<init>(com.google.common.collect.AbstractMapBasedMultiset,java.util.Map)', '1']
Removed row: ['com.google.common.collect.AbstractMapEntry:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['com.google.common.collect.AbstractMapEntry:', 'int', 'hashCode()', '2']
Removed row: ['com.google.common.collect.AbstractMultimap:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.AbstractMultimap$WrappedCollection:', 'boolean', 'addAll(java.util.Collection)', '1']
Removed row: ['com.google.common.collect.ByFunctionOrdering:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['com.google.common.collect.ByFunctionOrdering:', 'int', 'compare(java.lang.Object,java.lang.Object)', '3']
Removed row: ['com.google.common.collect.Collections2$FilteredCollection:', 'boolean', 'add(java.lang.Object)', '2']
Removed row: ['com.google.common.collect.Collections2$FilteredCollection:', 'boolean', 'addAll(java.util.Collection)', '3']
Removed row: ['com.google.common.collect.Collections2$FilteredCollection:', 'boolean', 'contains(java.lang.Object)', '2']
Removed row: ['com.google.common.collect.Collections2$FilteredCollection:', 'boolean', 'isEmpty()', '1']
Removed row: ['com.google.common.collect.Collections2$FilteredCollection:', 'boolean', 'remove(java.lang.Object)', '2']
Removed row: ['com.google.common.collect.Collections2$FilteredCollection:', 'java.util.Iterator', 'iterator()', '1']
Removed row: ['com.google.common.collect.Collections2$FilteredCollection$1:', 'boolean', 'apply(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.Collections2$FilteredCollection$2:', 'boolean', 'apply(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.Collections2$TransformedCollection:', 'boolean', 'isEmpty()', '1']
Removed row: ['com.google.common.collect.Collections2$TransformedCollection:', 'int', 'size()', '1']
Removed row: ['com.google.common.collect.Collections2$TransformedCollection:', 'java.util.Iterator', 'iterator()', '1']
Removed row: ['com.google.common.collect.Collections2$TransformedCollection:', 'void', 'clear()', '1']
Removed row: ['com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment:', 'java.lang.Object', 'getOrCompute(java.lang.Object,int,com.google.common.base.Function)', '1']
Removed row: ['com.google.common.collect.ForwardingMultimap:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.Iterables:', 'boolean', 'removeIf(java.lang.Iterable,com.google.common.base.Predicate)', '1']
Removed row: ['com.google.common.collect.Iterables:', 'boolean', 'removeIfFromRandomAccessList(java.util.List,com.google.common.base.Predicate)', '6']
Removed row: ['com.google.common.collect.Iterables:', 'void', 'slowRemoveIfForRemainingElements(java.util.List,com.google.common.base.Predicate,int,int)', '5']
Removed row: ['com.google.common.collect.Iterators:', 'boolean', 'any(java.util.Iterator,com.google.common.base.Predicate)', '1']
Removed row: ['com.google.common.collect.Iterators:', 'boolean', 'removeIf(java.util.Iterator,com.google.common.base.Predicate)', '1']
Removed row: ['com.google.common.collect.Iterators$5:', 'boolean', 'hasNext()', '1']
Removed row: ['com.google.common.collect.Iterators$7:', 'java.lang.Object', 'computeNext()', '1']
Removed row: ['com.google.common.collect.Iterators$8:', 'java.lang.Object', 'next()', '1']
Removed row: ['com.google.common.collect.LinkedListMultimap:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.MapMaker:', 'com.google.common.base.Equivalence', 'getKeyEquivalence()', '1']
Removed row: ['com.google.common.collect.MapMaker:', 'com.google.common.base.Equivalence', 'getValueEquivalence()', '1']
Removed row: ['com.google.common.collect.MapMaker$NullConcurrentMap:', 'void', 'notifyRemoval(java.lang.Object,java.lang.Object)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap:', 'boolean', 'containsValue(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap:', 'boolean', 'isExpired(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap:', 'com.google.common.collect.MapMakerInternalMap$ValueReference', 'newValueReference(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap:', 'int', 'hash(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap:', 'void', 'processPendingNotifications()', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap$EntryFactory:', 'com.google.common.collect.MapMakerInternalMap$EntryFactory', 'getFactory(com.google.common.collect.MapMakerInternalMap$Strength,boolean,boolean)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap$EntrySet:', 'boolean', 'contains(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap$Segment:', 'boolean', 'clearValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ValueReference)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap$Segment:', 'boolean', 'containsValue(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap$Segment:', 'boolean', 'reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ValueReference)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap$Segment:', 'boolean', 'remove(java.lang.Object,int,java.lang.Object)', '2']
Removed row: ['com.google.common.collect.MapMakerInternalMap$Segment:', 'boolean', 'replace(java.lang.Object,int,java.lang.Object,java.lang.Object)', '2']
Removed row: ['com.google.common.collect.MapMakerInternalMap$Segment:', 'com.google.common.collect.MapMakerInternalMap$ReferenceEntry', 'getEntry(java.lang.Object,int)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap$Segment:', 'java.lang.Object', 'put(java.lang.Object,int,java.lang.Object,boolean)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap$Segment:', 'java.lang.Object', 'remove(java.lang.Object,int)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap$Segment:', 'java.lang.Object', 'replace(java.lang.Object,int,java.lang.Object)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap$Segment:', 'void', 'expireEntries()', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap$Segment:', 'void', 'recordExpirationTime(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,long)', '1']
Removed row: ['com.google.common.collect.MapMakerInternalMap$Segment:', 'void', 'setValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object)', '1']
Removed row: ['com.google.common.collect.Multimaps$UnmodifiableListMultimap:', 'java.util.List', 'get(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.Multimaps$UnmodifiableMultimap:', 'com.google.common.collect.Multiset', 'keys()', '1']
Removed row: ['com.google.common.collect.Multimaps$UnmodifiableMultimap:', 'java.util.Collection', 'entries()', '1']
Removed row: ['com.google.common.collect.Multimaps$UnmodifiableMultimap:', 'java.util.Collection', 'get(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.Multimaps$UnmodifiableMultimap:', 'java.util.Collection', 'values()', '1']
Removed row: ['com.google.common.collect.Multimaps$UnmodifiableMultimap:', 'java.util.Map', 'asMap()', '1']
Removed row: ['com.google.common.collect.Multimaps$UnmodifiableMultimap:', 'java.util.Set', 'keySet()', '1']
Removed row: ['com.google.common.collect.RegularImmutableMap:', 'java.lang.Object', 'get(java.lang.Object)', '2']
Removed row: ['com.google.common.collect.RegularImmutableMap:', 'void', '<init>(java.util.Map$Entry[])', '2']
Removed row: ['com.google.common.collect.Sets$FilteredSortedSet:', 'java.lang.Object', 'last()', '3']
Removed row: ['com.google.common.collect.Sets$FilteredSortedSet:', 'java.util.Comparator', 'comparator()', '1']
Removed row: ['com.google.common.collect.Sets$FilteredSortedSet:', 'java.util.SortedSet', 'headSet(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.Sets$FilteredSortedSet:', 'java.util.SortedSet', 'subSet(java.lang.Object,java.lang.Object)', '1']
Removed row: ['com.google.common.collect.Sets$FilteredSortedSet:', 'java.util.SortedSet', 'tailSet(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.SingletonImmutableList:', 'boolean', 'contains(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.SingletonImmutableList:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.SingletonImmutableList:', 'int', 'hashCode()', '1']
Removed row: ['com.google.common.collect.SingletonImmutableList:', 'int', 'indexOf(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.SingletonImmutableList:', 'int', 'lastIndexOf(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.SingletonImmutableList:', 'java.lang.String', 'toString()', '1']
Removed row: ['com.google.common.collect.SingletonImmutableMap:', 'boolean', 'containsKey(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.SingletonImmutableMap:', 'boolean', 'containsValue(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.SingletonImmutableMap:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['com.google.common.collect.SingletonImmutableMap:', 'int', 'hashCode()', '2']
Removed row: ['com.google.common.collect.SingletonImmutableMap:', 'java.lang.Object', 'get(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.SingletonImmutableMap:', 'java.lang.String', 'toString()', '2']
Removed row: ['com.google.common.collect.SingletonImmutableMap:', 'void', '<init>(java.util.Map$Entry)', '2']
Removed row: ['com.google.common.collect.SingletonImmutableSet:', 'boolean', 'contains(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.SingletonImmutableSet:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.google.common.collect.SingletonImmutableSet:', 'int', 'hashCode()', '1']
Removed row: ['com.google.common.collect.SingletonImmutableSet:', 'java.lang.String', 'toString()', '1']
Removed row: ['com.google.gson.Gson:', 'com.google.gson.TypeAdapter', 'getAdapter(com.google.gson.reflect.TypeToken)', '1']
Removed row: ['com.google.gson.Gson:', 'com.google.gson.TypeAdapter', 'getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)', '1']
Removed row: ['com.google.gson.Gson:', 'java.lang.Object', 'fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)', '1']
Removed row: ['com.google.gson.Gson:', 'java.lang.String', 'toJson(java.lang.Object)', '1']
Removed row: ['com.google.gson.Gson:', 'void', 'toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)', '1']
Removed row: ['com.google.gson.Gson$3:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.Number)', '1']
Removed row: ['com.google.gson.Gson$4:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.Number)', '1']
Removed row: ['com.google.gson.Gson$5:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.Number)', '1']
Removed row: ['com.google.gson.Gson$FutureTypeAdapter:', 'java.lang.Object', 'read(com.google.gson.stream.JsonReader)', '1']
Removed row: ['com.google.gson.Gson$FutureTypeAdapter:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.Object)', '1']
Removed row: ['com.google.gson.JsonArray:', 'java.lang.String', 'getAsString()', '1']
Removed row: ['com.google.gson.JsonArray:', 'long', 'getAsLong()', '1']
Removed row: ['com.google.gson.JsonPrimitive:', 'boolean', 'equals(java.lang.Object)', '8']
Removed row: ['com.google.gson.JsonPrimitive:', 'boolean', 'getAsBoolean()', '1']
Removed row: ['com.google.gson.JsonPrimitive:', 'boolean', 'isPrimitiveOrString(java.lang.Object)', '1']
Removed row: ['com.google.gson.JsonPrimitive:', 'double', 'getAsDouble()', '1']
Removed row: ['com.google.gson.JsonPrimitive:', 'int', 'getAsInt()', '1']
Removed row: ['com.google.gson.JsonPrimitive:', 'int', 'hashCode()', '3']
Removed row: ['com.google.gson.JsonPrimitive:', 'java.lang.String', 'getAsString()', '2']
Removed row: ['com.google.gson.JsonPrimitive:', 'java.math.BigDecimal', 'getAsBigDecimal()', '1']
Removed row: ['com.google.gson.JsonPrimitive:', 'java.math.BigInteger', 'getAsBigInteger()', '1']
Removed row: ['com.google.gson.JsonPrimitive:', 'long', 'getAsLong()', '1']
Removed row: ['com.google.gson.JsonPrimitive:', 'void', 'setValue(java.lang.Object)', '1']
Removed row: ['com.google.gson.TreeTypeAdapter:', 'java.lang.Object', 'read(com.google.gson.stream.JsonReader)', '2']
Removed row: ['com.google.gson.TreeTypeAdapter:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.Object)', '2']
Removed row: ['com.google.gson.internal.$Gson$Types:', 'boolean', 'equals(java.lang.reflect.Type,java.lang.reflect.Type)', '8']
Removed row: ['com.google.gson.internal.Excluder:', 'boolean', 'excludeClass(java.lang.Class,boolean)', '1']
Removed row: ['com.google.gson.internal.Excluder:', 'boolean', 'excludeField(java.lang.reflect.Field,boolean)', '1']
Removed row: ['com.google.gson.internal.Excluder$1:', 'java.lang.Object', 'read(com.google.gson.stream.JsonReader)', '1']
Removed row: ['com.google.gson.internal.Excluder$1:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.Object)', '1']
Removed row: ['com.google.gson.internal.LinkedTreeMap:', 'com.google.gson.internal.LinkedTreeMap$Node', 'find(java.lang.Object,boolean)', '2']
Removed row: ['com.google.gson.internal.LinkedTreeMap$1:', 'int', 'compare(java.lang.Comparable,java.lang.Comparable)', '1']
Removed row: ['com.google.gson.internal.LinkedTreeMap$Node:', 'boolean', 'equals(java.lang.Object)', '6']
Removed row: ['com.google.gson.internal.LinkedTreeMap$Node:', 'int', 'hashCode()', '2']
Removed row: ['com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:', 'void', 'write(com.google.gson.stream.JsonWriter,java.util.Collection)', '1']
Removed row: ['com.google.gson.internal.bind.JsonTreeReader:', 'boolean', 'nextBoolean()', '1']
Removed row: ['com.google.gson.internal.bind.JsonTreeReader:', 'com.google.gson.stream.JsonToken', 'peek()', '5']
Removed row: ['com.google.gson.internal.bind.JsonTreeReader:', 'double', 'nextDouble()', '1']
Removed row: ['com.google.gson.internal.bind.JsonTreeReader:', 'int', 'nextInt()', '1']
Removed row: ['com.google.gson.internal.bind.JsonTreeReader:', 'java.lang.String', 'nextName()', '3']
Removed row: ['com.google.gson.internal.bind.JsonTreeReader:', 'java.lang.String', 'nextString()', '1']
Removed row: ['com.google.gson.internal.bind.JsonTreeReader:', 'long', 'nextLong()', '1']
Removed row: ['com.google.gson.internal.bind.JsonTreeReader:', 'void', 'beginArray()', '1']
Removed row: ['com.google.gson.internal.bind.JsonTreeReader:', 'void', 'beginObject()', '1']
Removed row: ['com.google.gson.internal.bind.JsonTreeReader:', 'void', 'promoteNameToValue()', '3']
Removed row: ['com.google.gson.internal.bind.JsonTreeWriter:', 'com.google.gson.stream.JsonWriter', 'value(java.lang.Number)', '1']
Removed row: ['com.google.gson.internal.bind.JsonTreeWriter:', 'void', 'put(com.google.gson.JsonElement)', '2']
Removed row: ['com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:', 'java.lang.String', 'keyToString(com.google.gson.JsonElement)', '3']
Removed row: ['com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:', 'void', 'write(com.google.gson.stream.JsonWriter,java.util.Map)', '8']
Removed row: ['com.google.gson.internal.bind.ObjectTypeAdapter:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.Object)', '2']
Removed row: ['com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:', 'void', 'read(com.google.gson.stream.JsonReader,java.lang.Object)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:', 'java.lang.Object', 'read(com.google.gson.stream.JsonReader)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:', 'java.lang.reflect.Type', 'getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.Object)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$1:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.Class)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$12:', 'java.lang.Character', 'read(com.google.gson.stream.JsonReader)', '2']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$16:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$17:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$18:', 'void', 'write(com.google.gson.stream.JsonWriter,java.net.URL)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$19:', 'void', 'write(com.google.gson.stream.JsonWriter,java.net.URI)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$2:', 'void', 'write(com.google.gson.stream.JsonWriter,java.util.BitSet)', '2']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$20:', 'void', 'write(com.google.gson.stream.JsonWriter,java.net.InetAddress)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$21:', 'void', 'write(com.google.gson.stream.JsonWriter,java.util.UUID)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$22$1:', 'java.sql.Timestamp', 'read(com.google.gson.stream.JsonReader)', '2']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$22$1:', 'void', 'write(com.google.gson.stream.JsonWriter,java.sql.Timestamp)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$23:', 'void', 'write(com.google.gson.stream.JsonWriter,java.util.Calendar)', '6']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$24:', 'void', 'write(com.google.gson.stream.JsonWriter,java.util.Locale)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$25:', 'void', 'write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)', '8']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$3:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.Boolean)', '1']
Removed row: ['com.google.gson.internal.bind.TypeAdapters$4:', 'void', 'write(com.google.gson.stream.JsonWriter,java.lang.Boolean)', '1']
Removed row: ['com.google.gson.stream.JsonWriter:', 'com.google.gson.stream.JsonWriter', 'value(java.lang.Number)', '4']
Removed row: ['com.google.gson.stream.JsonWriter:', 'void', 'string(java.lang.String)', '2']
Removed row: ['com.google.inject.internal.MoreTypes:', 'boolean', 'equals(java.lang.reflect.Type,java.lang.reflect.Type)', '8']
Removed row: ['com.google.inject.internal.util.$AbstractMapEntry:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap:', 'java.lang.Object', 'get(java.lang.Object)', '1']
Removed row: ['com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap:', 'void', '<init>(java.util.Map$Entry[])', '2']
Removed row: ['com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap:', 'boolean', 'containsKey(java.lang.Object)', '1']
Removed row: ['com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap:', 'boolean', 'containsValue(java.lang.Object)', '1']
Removed row: ['com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap:', 'int', 'hashCode()', '2']
Removed row: ['com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap:', 'java.lang.Object', 'get(java.lang.Object)', '1']
Removed row: ['com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap:', 'java.lang.String', 'toString()', '2']
Removed row: ['com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap:', 'void', '<init>(java.util.Map$Entry)', '2']
Removed row: ['com.sun.beans.TypeResolver:', 'java.lang.reflect.Type', 'resolve(java.lang.reflect.Type,java.lang.reflect.Type)', '1']
Removed row: ['com.thoughtworks.paranamer.AnnotationParanamer:', 'java.lang.String[]', 'lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)', '7']
Removed row: ['com.thoughtworks.paranamer.BytecodeReadingParanamer:', 'java.lang.String[]', 'lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)', '5']
Removed row: ['com.thoughtworks.xstream.converters.ConversionException:', 'java.lang.String', 'getMessage()', '1']
Removed row: ['com.thoughtworks.xstream.converters.ConversionException:', 'void', 'add(java.lang.String,java.lang.String)', '1']
Removed row: ['com.thoughtworks.xstream.converters.SingleValueConverterWrapper:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.SingleValueConverterWrapper:', 'java.lang.Object', 'fromString(java.lang.String)', '1']
Removed row: ['com.thoughtworks.xstream.converters.SingleValueConverterWrapper:', 'java.lang.String', 'toString(java.lang.Object)', '1']
Removed row: ['com.thoughtworks.xstream.converters.SingleValueConverterWrapper:', 'void', 'appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)', '2']
Removed row: ['com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter:', 'java.lang.String', 'toString(java.lang.Object)', '1']
Removed row: ['com.thoughtworks.xstream.converters.basic.BigDecimalConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.basic.BigIntegerConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.basic.BooleanConverter:', 'boolean', 'canConvert(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.basic.BooleanConverter:', 'java.lang.String', 'toString(java.lang.Object)', '1']
Removed row: ['com.thoughtworks.xstream.converters.basic.ByteConverter:', 'boolean', 'canConvert(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.basic.CharConverter:', 'boolean', 'canConvert(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.basic.CharConverter:', 'java.lang.Object', 'fromString(java.lang.String)', '2']
Removed row: ['com.thoughtworks.xstream.converters.basic.CharConverter:', 'java.lang.String', 'toString(java.lang.Object)', '2']
Removed row: ['com.thoughtworks.xstream.converters.basic.DateConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.basic.DateConverter:', 'java.lang.String', 'toString(java.lang.Object)', '1']
Removed row: ['com.thoughtworks.xstream.converters.basic.DoubleConverter:', 'boolean', 'canConvert(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.basic.FloatConverter:', 'boolean', 'canConvert(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.basic.IntConverter:', 'boolean', 'canConvert(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.basic.LongConverter:', 'boolean', 'canConvert(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.basic.LongConverter:', 'java.lang.Object', 'fromString(java.lang.String)', '9']
Removed row: ['com.thoughtworks.xstream.converters.basic.ShortConverter:', 'boolean', 'canConvert(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.basic.StringBufferConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.basic.StringConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.basic.StringConverter:', 'java.lang.Object', 'fromString(java.lang.String)', '1']
Removed row: ['com.thoughtworks.xstream.converters.basic.URIConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.basic.URLConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:', 'java.lang.Object', 'createCollection(java.lang.Class)', '3']
Removed row: ['com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:', 'void', 'writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)', '2']
Removed row: ['com.thoughtworks.xstream.converters.collections.ArrayConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.collections.ArrayConverter:', 'java.lang.Object', 'unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)', '1']
Removed row: ['com.thoughtworks.xstream.converters.collections.BitSetConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.collections.BitSetConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '2']
Removed row: ['com.thoughtworks.xstream.converters.collections.CharArrayConverter:', 'boolean', 'canConvert(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.collections.CharArrayConverter:', 'java.lang.Object', 'unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)', '1']
Removed row: ['com.thoughtworks.xstream.converters.collections.CollectionConverter:', 'boolean', 'canConvert(java.lang.Class)', '6']
Removed row: ['com.thoughtworks.xstream.converters.collections.CollectionConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '1']
Removed row: ['com.thoughtworks.xstream.converters.collections.MapConverter:', 'boolean', 'canConvert(java.lang.Class)', '6']
Removed row: ['com.thoughtworks.xstream.converters.collections.MapConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '4']
Removed row: ['com.thoughtworks.xstream.converters.collections.PropertiesConverter:', 'java.lang.Object', 'unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)', '1']
Removed row: ['com.thoughtworks.xstream.converters.collections.PropertiesConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '5']
Removed row: ['com.thoughtworks.xstream.converters.collections.TreeMapConverter:', 'java.util.Comparator', 'unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)', '2']
Removed row: ['com.thoughtworks.xstream.converters.collections.TreeMapConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '1']
Removed row: ['com.thoughtworks.xstream.converters.collections.TreeSetConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.ColorConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.ColorConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '4']
Removed row: ['com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:', 'java.lang.Object', 'unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)', '2']
Removed row: ['com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:', 'void', 'addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:', 'boolean', 'canConvert(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:', 'java.lang.Object', 'unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.FileConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.FileConverter:', 'java.lang.String', 'toString(java.lang.Object)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.FontConverter:', 'boolean', 'canConvert(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.extended.FontConverter:', 'java.lang.Object', 'unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)', '2']
Removed row: ['com.thoughtworks.xstream.converters.extended.FontConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '2']
Removed row: ['com.thoughtworks.xstream.converters.extended.JavaFieldConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.JavaFieldConverter:', 'java.lang.Object', 'unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)', '2']
Removed row: ['com.thoughtworks.xstream.converters.extended.JavaFieldConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '2']
Removed row: ['com.thoughtworks.xstream.converters.extended.JavaMethodConverter:', 'boolean', 'canConvert(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.extended.JavaMethodConverter:', 'java.lang.Object', 'unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.JavaMethodConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '5']
Removed row: ['com.thoughtworks.xstream.converters.extended.LocaleConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.LocaleConverter:', 'int[]', 'underscorePositions(java.lang.String)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.LocaleConverter:', 'java.lang.Object', 'fromString(java.lang.String)', '5']
Removed row: ['com.thoughtworks.xstream.converters.extended.SqlDateConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.SqlTimeConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.SqlTimestampConverter:', 'boolean', 'canConvert(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.extended.SqlTimestampConverter:', 'java.lang.Object', 'fromString(java.lang.String)', '5']
Removed row: ['com.thoughtworks.xstream.converters.extended.SqlTimestampConverter:', 'java.lang.String', 'toString(java.lang.Object)', '2']
Removed row: ['com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:', 'java.lang.String', 'getName(java.text.AttributedCharacterIterator$Attribute)', '2']
Removed row: ['com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:', 'boolean', 'shouldUnmarshalField(java.lang.reflect.Field)', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:', 'java.lang.Object', 'doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)', '18']
Removed row: ['com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:', 'java.lang.Object', 'unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)', '2']
Removed row: ['com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '3']
Removed row: ['com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:', 'void', 'marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)', '2']
Removed row: ['com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:', 'void', 'writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:', 'void', 'visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)', '4']
Removed row: ['com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:', 'void', '<init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:', 'void', 'writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:', 'boolean', 'add(java.lang.Object)', '9']
Removed row: ['com.thoughtworks.xstream.converters.reflection.ExternalizableConverter:', 'java.lang.Object', 'unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)', '7']
Removed row: ['com.thoughtworks.xstream.converters.reflection.ExternalizableConverter:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '2']
Removed row: ['com.thoughtworks.xstream.converters.reflection.FieldDictionary:', 'java.util.Map', 'buildMap(java.lang.Class,boolean)', '2']
Removed row: ['com.thoughtworks.xstream.converters.reflection.FieldKey:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.FieldKey:', 'int', 'hashCode()', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:', 'boolean', 'fieldModifiersSupported(java.lang.reflect.Field)', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:', 'java.lang.Class', 'getFieldType(java.lang.Object,java.lang.String,java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:', 'java.lang.Object', 'instantiateUsingSerialization(java.lang.Class)', '2']
Removed row: ['com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:', 'java.lang.Object', 'newInstance(java.lang.Class)', '5']
Removed row: ['com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:', 'void', 'validateFieldAccess(java.lang.reflect.Field)', '5']
Removed row: ['com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:', 'void', 'visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)', '9']
Removed row: ['com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:', 'void', 'writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)', '3']
Removed row: ['com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider$1:', 'java.lang.Class', 'resolveClass(java.io.ObjectStreamClass)', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.SerializableConverter:', 'boolean', 'isSerializable(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.SerializableConverter:', 'java.lang.Object', 'doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.SerializableConverter:', 'java.util.List', 'hierarchyFor(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.SerializableConverter:', 'void', 'doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '3']
Removed row: ['com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:', 'void', 'defaultWriteObject()', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:', 'void', 'writeFieldsToStream(java.util.Map)', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:', 'void', 'defaultReadObject()', '1']
Removed row: ['com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:', 'java.lang.Object', 'callWriteReplace(java.lang.Object)', '3']
Removed row: ['com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:', 'java.lang.reflect.Method', 'getMethod(java.lang.Class,java.lang.String,java.lang.Class[])', '2']
Removed row: ['com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:', 'void', 'callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream)', '2']
Removed row: ['com.thoughtworks.xstream.core.AbstractReferenceMarshaller:', 'void', 'convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)', '3']
Removed row: ['com.thoughtworks.xstream.core.DefaultConverterLookup:', 'com.thoughtworks.xstream.converters.Converter', 'lookupConverterForType(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.core.DefaultConverterLookup:', 'void', 'registerConverter(com.thoughtworks.xstream.converters.Converter,int)', '1']
Removed row: ['com.thoughtworks.xstream.core.TreeMarshaller:', 'void', 'convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)', '3']
Removed row: ['com.thoughtworks.xstream.core.TreeMarshaller:', 'void', 'convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)', '3']
Removed row: ['com.thoughtworks.xstream.core.TreeMarshaller:', 'void', 'start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)', '2']
Removed row: ['com.thoughtworks.xstream.core.TreeUnmarshaller:', 'java.lang.Object', 'convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)', '1']
Removed row: ['com.thoughtworks.xstream.core.TreeUnmarshaller:', 'java.lang.Object', 'convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)', '1']
Removed row: ['com.thoughtworks.xstream.core.TreeUnmarshaller:', 'java.lang.Object', 'start(com.thoughtworks.xstream.converters.DataHolder)', '1']
Removed row: ['com.thoughtworks.xstream.core.TreeUnmarshaller:', 'void', 'addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)', '4']
Removed row: ['com.thoughtworks.xstream.core.util.Base64Encoder:', 'byte[]', 'decode(java.lang.String)', '1']
Removed row: ['com.thoughtworks.xstream.core.util.CompositeClassLoader:', 'java.lang.Class', 'loadClass(java.lang.String)', '1']
Removed row: ['com.thoughtworks.xstream.core.util.CompositeClassLoader:', 'void', 'addInternal(java.lang.ClassLoader)', '1']
Removed row: ['com.thoughtworks.xstream.core.util.CompositeClassLoader$1:', 'boolean', 'add(java.lang.Object)', '1']
Removed row: ['com.thoughtworks.xstream.core.util.CustomObjectInputStream:', 'int', 'read(byte[],int,int)', '1']
Removed row: ['com.thoughtworks.xstream.core.util.CustomObjectInputStream:', 'int', 'readUnsignedByte()', '2']
Removed row: ['com.thoughtworks.xstream.core.util.CustomObjectInputStream:', 'void', 'close()', '1']
Removed row: ['com.thoughtworks.xstream.core.util.CustomObjectOutputStream:', 'void', 'close()', '1']
Removed row: ['com.thoughtworks.xstream.core.util.FastField:', 'boolean', 'equals(java.lang.Object)', '3']
Removed row: ['com.thoughtworks.xstream.core.util.FastField:', 'int', 'hashCode()', '1']
Removed row: ['com.thoughtworks.xstream.core.util.FastField:', 'void', '<init>(java.lang.Class,java.lang.String)', '1']
Removed row: ['com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper:', 'java.lang.String', 'toString()', '1']
Removed row: ['com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['com.thoughtworks.xstream.core.util.OrderRetainingMap:', 'void', 'putAll(java.util.Map)', '2']
Removed row: ['com.thoughtworks.xstream.core.util.PresortedMap:', 'java.util.Set', 'keySet()', '1']
Removed row: ['com.thoughtworks.xstream.core.util.QuickWriter:', 'void', 'write(java.lang.String)', '3']
Removed row: ['com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:', 'java.lang.Object', 'unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)', '1']
Removed row: ['com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:', 'void', 'marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)', '1']
Removed row: ['com.thoughtworks.xstream.core.util.WeakCache$4$1:', 'java.lang.Object', 'getValue()', '1']
Removed row: ['com.thoughtworks.xstream.io.json.JsonWriter:', 'void', 'writeText(java.lang.String)', '2']
Removed row: ['com.thoughtworks.xstream.io.path.Path:', 'java.lang.String', 'normalize(java.lang.String,int,int)', '5']
Removed row: ['com.thoughtworks.xstream.io.path.Path:', 'void', '<init>(java.lang.String)', '2']
Removed row: ['com.thoughtworks.xstream.io.path.PathTracker:', 'java.lang.String', 'peekElement(int)', '1']
Removed row: ['com.thoughtworks.xstream.io.xml.AbstractPullReader:', 'java.lang.String', 'getValue()', '1']
Removed row: ['com.thoughtworks.xstream.io.xml.PrettyPrintWriter:', 'void', 'writeText(java.lang.String,boolean)', '2']
Removed row: ['com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:', 'java.lang.String', 'decodeName(java.lang.String)', '8']
Removed row: ['com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:', 'java.lang.String', 'encodeName(java.lang.String)', '4']
Removed row: ['com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper:', 'boolean', 'stringFoundAt(java.lang.String,int,java.lang.String)', '2']
Removed row: ['com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper:', 'java.lang.String', 'unescapeClassName(java.lang.String)', '3']
Removed row: ['com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper:', 'java.lang.String', 'unescapeFieldName(java.lang.String)', '2']
Removed row: ['com.thoughtworks.xstream.mapper.ArrayMapper:', 'java.lang.Class', 'realClass(java.lang.String)', '3']
Removed row: ['com.thoughtworks.xstream.mapper.ArrayMapper:', 'java.lang.String', 'boxedTypeName(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.mapper.ArrayMapper:', 'java.lang.String', 'serializedClass(java.lang.Class)', '3']
Removed row: ['com.thoughtworks.xstream.mapper.ClassAliasingMapper:', 'java.lang.String', 'serializedClass(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.mapper.DefaultMapper:', 'java.lang.Class', 'realClass(java.lang.String)', '2']
Removed row: ['com.thoughtworks.xstream.mapper.DefaultMapper:', 'java.lang.String', 'serializedClass(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.mapper.DynamicProxyMapper:', 'java.lang.Class', 'realClass(java.lang.String)', '1']
Removed row: ['com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:', 'com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass', 'getMapper(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.mapper.OuterClassMapper:', 'java.lang.String', 'realMember(java.lang.Class,java.lang.String)', '1']
Removed row: ['com.thoughtworks.xstream.mapper.PackageAliasingMapper:', 'java.lang.Class', 'realClass(java.lang.String)', '4']
Removed row: ['com.thoughtworks.xstream.mapper.PackageAliasingMapper:', 'java.lang.String', 'serializedClass(java.lang.Class)', '1']
Removed row: ['com.thoughtworks.xstream.mapper.SecurityMapper:', 'java.lang.Class', 'realClass(java.lang.String)', '1']
Removed row: ['com.thoughtworks.xstream.security.AnyTypePermission:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['java.beans.FeatureDescriptor:', 'java.lang.String', 'toString()', '2']
Removed row: ['java.beans.Introspector:', 'java.beans.EventSetDescriptor[]', 'getTargetEventInfo()', '1']
Removed row: ['java.beans.Introspector:', 'java.beans.PropertyDescriptor', 'mergePropertyDescriptor(java.beans.IndexedPropertyDescriptor,java.beans.PropertyDescriptor)', '2']
Removed row: ['java.beans.Introspector:', 'java.beans.PropertyDescriptor', 'mergePropertyWithIndexedProperty(java.beans.PropertyDescriptor,java.beans.IndexedPropertyDescriptor)', '2']
Removed row: ['java.beans.Introspector:', 'java.beans.PropertyDescriptor[]', 'getTargetPropertyInfo()', '1']
Removed row: ['java.beans.Introspector:', 'void', 'addPropertyDescriptor(java.beans.PropertyDescriptor)', '2']
Removed row: ['java.beans.Introspector:', 'void', 'processPropertyDescriptors()', '25']
Removed row: ['java.beans.MethodDescriptor:', 'java.lang.Class[]', 'getParams()', '1']
Removed row: ['java.beans.PropertyDescriptor:', 'int', 'hashCode()', '3']
Removed row: ['java.beans.PropertyDescriptor:', 'void', '<init>(java.beans.PropertyDescriptor,java.beans.PropertyDescriptor)', '4']
Removed row: ['java.io.FileDescriptor:', 'void', 'closeAll(java.io.Closeable)', '1']
Removed row: ['java.io.FilePermissionCollection:', 'boolean', 'implies(java.security.Permission)', '3']
Removed row: ['java.lang.ClassLoader:', 'long', 'findNative(java.lang.ClassLoader,java.lang.String)', '1']
Removed row: ['java.lang.String:', 'java.lang.String[]', 'split(java.lang.String,int)', '1']
Removed row: ['java.lang.invoke.InnerClassLambdaMetafactory:', 'java.lang.invoke.CallSite', 'buildCallSite()', '1']
Removed row: ['java.lang.invoke.LambdaForm:', 'java.lang.invoke.MemberName', 'compileToBytecode()', '1']
Removed row: ['java.lang.invoke.LambdaForm:', 'void', 'computeInitialPreparedForms()', '5']
Removed row: ['java.lang.invoke.LambdaForm$NamedFunction:', 'void', 'initializeInvokers()', '5']
Removed row: ['java.lang.invoke.MemberName$Factory:', 'java.util.List', 'getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)', '1']
Removed row: ['java.net.InetAddress:', 'java.lang.String', 'getHostFromNameService(java.net.InetAddress,boolean)', '1']
Removed row: ['java.net.InetAddress:', 'java.net.InetAddress[]', 'getAddressesFromNameService(java.lang.String,java.net.InetAddress)', '1']
Removed row: ['java.net.SocketPermissionCollection:', 'boolean', 'implies(java.security.Permission)', '3']
Removed row: ['java.security.KeyFactory:', 'java.security.KeyFactorySpi', 'nextSpi(java.security.KeyFactorySpi)', '2']
Removed row: ['java.security.PermissionCollection:', 'java.lang.String', 'toString()', '1']
Removed row: ['java.security.Permissions:', 'java.security.PermissionCollection', 'getUnresolvedPermissions(java.security.Permission)', '1']
Removed row: ['java.security.ProtectionDomain:', 'java.security.PermissionCollection', 'mergePermissions()', '5']
Removed row: ['java.security.SecureRandom:', 'java.lang.String', 'getPrngAlgorithm()', '2']
Removed row: ['java.security.Signature$Delegate:', 'void', 'chooseFirstProvider()', '1']
Removed row: ['java.security.Signature$Delegate:', 'void', 'chooseProvider(int,java.security.Key,java.security.SecureRandom)', '2']
Removed row: ['java.text.AttributedString:', 'void', 'setAttributes(java.util.Map,int)', '2']
Removed row: ['java.text.CharacterIteratorFieldDelegate:', 'java.text.AttributedCharacterIterator', 'getIterator(java.lang.String)', '1']
Removed row: ['java.text.CharacterIteratorFieldDelegate:', 'void', 'formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)', '3']
Removed row: ['java.text.DateFormatSymbols:', 'void', 'initializeData(java.util.Locale)', '1']
Removed row: ['java.text.MessageFormat:', 'java.lang.StringBuffer', 'subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)', '1']
Removed row: ['java.util.AbstractList:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['java.util.AbstractList:', 'int', 'hashCode()', '1']
Removed row: ['java.util.AbstractMap:', 'boolean', 'equals(java.lang.Object)', '3']
Removed row: ['java.util.AbstractMap:', 'int', 'hashCode()', '1']
Removed row: ['java.util.AbstractMap:', 'java.lang.String', 'toString()', '2']
Removed row: ['java.util.AbstractMap:', 'void', 'putAll(java.util.Map)', '2']
Removed row: ['java.util.AbstractSet:', 'int', 'hashCode()', '1']
Removed row: ['java.util.Currency$1:', 'java.lang.Void', 'run()', '1']
Removed row: ['java.util.Formatter:', 'java.util.Formatter', 'format(java.util.Locale,java.lang.String,java.lang.Object[])', '8']
Removed row: ['java.util.HashMap:', 'void', 'putMapEntries(java.util.Map,boolean)', '2']
Removed row: ['java.util.Hashtable:', 'boolean', 'equals(java.lang.Object)', '3']
Removed row: ['java.util.Hashtable:', 'java.lang.String', 'toString()', '4']
Removed row: ['java.util.Hashtable:', 'void', 'putAll(java.util.Map)', '2']
Removed row: ['java.util.Hashtable$EntrySet:', 'boolean', 'contains(java.lang.Object)', '1']
Removed row: ['java.util.Hashtable$EntrySet:', 'boolean', 'remove(java.lang.Object)', '1']
Removed row: ['java.util.ResourceBundle:', 'java.util.ResourceBundle', 'getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)', '2']
Removed row: ['java.util.ResourceBundle:', 'java.util.ResourceBundle$Control', 'getDefaultControl(java.lang.String)', '1']
Removed row: ['java.util.ResourceBundle$Control$CandidateListCache:', 'java.util.List', 'createObject(sun.util.locale.BaseLocale)', '4']
Removed row: ['java.util.TreeMap:', 'java.util.TreeMap$Entry', 'buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)', '2']
Removed row: ['java.util.TreeMap:', 'void', 'putAll(java.util.Map)', '1']
Removed row: ['java.util.TreeSet:', 'boolean', 'addAll(java.util.Collection)', '1']
Removed row: ['java.util.concurrent.ConcurrentHashMap:', 'boolean', 'equals(java.lang.Object)', '4']
Removed row: ['java.util.concurrent.ConcurrentHashMap$MapEntry:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['java.util.jar.JarVerifier:', 'void', 'processEntry(sun.security.util.ManifestEntryVerifier)', '3']
Removed row: ['java.util.logging.LogManager:', 'void', 'reset()', '2']
Removed row: ['java.util.logging.LogManager:', 'void', 'setLevelsOnExistingLoggers()', '1']
Removed row: ['java.util.logging.Logger:', 'void', 'doSetParent(java.util.logging.Logger)', '2']
Removed row: ['java.util.logging.Logger:', 'void', 'updateEffectiveLevel()', '1']
Removed row: ['java.util.regex.Pattern:', 'java.lang.String[]', 'split(java.lang.CharSequence,int)', '1']
Removed row: ['javassist.CtBehavior:', 'byte[]', 'getAttribute(java.lang.String)', '1']
Removed row: ['javassist.CtBehavior:', 'int', 'getModifiers()', '1']
Removed row: ['javassist.CtBehavior:', 'int', 'insertAt(int,boolean,java.lang.String)', '2']
Removed row: ['javassist.CtBehavior:', 'java.lang.String', 'getSignature()', '1']
Removed row: ['javassist.CtBehavior:', 'javassist.CtClass', 'getReturnType0()', '1']
Removed row: ['javassist.CtBehavior:', 'javassist.CtClass[]', 'getExceptionTypes()', '2']
Removed row: ['javassist.CtBehavior:', 'javassist.CtClass[]', 'getParameterTypes()', '1']
Removed row: ['javassist.CtBehavior:', 'void', 'addCatch(java.lang.String,javassist.CtClass,java.lang.String)', '3']
Removed row: ['javassist.CtBehavior:', 'void', 'addLocalVariable(java.lang.String,javassist.CtClass)', '2']
Removed row: ['javassist.CtBehavior:', 'void', 'addParameter(javassist.CtClass)', '2']
Removed row: ['javassist.CtBehavior:', 'void', 'addParameter2(int,javassist.CtClass,java.lang.String)', '2']
Removed row: ['javassist.CtBehavior:', 'void', 'copy(javassist.CtBehavior,boolean,javassist.ClassMap)', '2']
Removed row: ['javassist.CtBehavior:', 'void', 'extendToString(java.lang.StringBuffer)', '1']
Removed row: ['javassist.CtBehavior:', 'void', 'insertAfter(java.lang.String,boolean)', '3']
Removed row: ['javassist.CtBehavior:', 'void', 'insertBefore(java.lang.String,boolean)', '2']
Removed row: ['javassist.CtBehavior:', 'void', 'insertParameter(javassist.CtClass)', '2']
Removed row: ['javassist.CtBehavior:', 'void', 'instrument(javassist.CodeConverter)', '1']
Removed row: ['javassist.CtBehavior:', 'void', 'setAttribute(java.lang.String,byte[])', '2']
Removed row: ['javassist.CtBehavior:', 'void', 'setBody(java.lang.String,java.lang.String,java.lang.String)', '4']
Removed row: ['javassist.CtBehavior:', 'void', 'setExceptionTypes(javassist.CtClass[])', '5']
Removed row: ['javassist.CtBehavior:', 'void', 'setModifiers(int)', '1']
Removed row: ['javassist.CtClassType:', 'javassist.CtClass', 'getDeclaringClass()', '4']
Removed row: ['javassist.CtClassType:', 'void', 'insertAuxInitializer(javassist.bytecode.CodeAttribute,javassist.bytecode.Bytecode,int)', '3']
Removed row: ['javassist.CtClassType:', 'void', 'makeBehaviorCache(javassist.CtMember$Cache)', '1']
Removed row: ['javassist.CtClassType:', 'void', 'modifyClassConstructor(javassist.bytecode.ClassFile,javassist.bytecode.Bytecode,int,int)', '7']
Removed row: ['javassist.CtClassType:', 'void', 'modifyConstructors(javassist.bytecode.ClassFile)', '5']
Removed row: ['javassist.CtConstructor:', 'boolean', 'callsSuper()', '1']
Removed row: ['javassist.CtConstructor:', 'boolean', 'isClassInitializer()', '1']
Removed row: ['javassist.CtConstructor:', 'boolean', 'isConstructor()', '1']
Removed row: ['javassist.CtConstructor:', 'java.lang.String', 'getName()', '1']
Removed row: ['javassist.CtConstructor:', 'javassist.CtMethod', 'toMethod(java.lang.String,javassist.CtClass,javassist.ClassMap)', '1']
Removed row: ['javassist.CtConstructor:', 'void', 'insertBeforeBody(java.lang.String)', '3']
Removed row: ['javassist.CtField:', 'byte[]', 'getAttribute(java.lang.String)', '1']
Removed row: ['javassist.CtField:', 'int', 'getModifiers()', '1']
Removed row: ['javassist.CtField:', 'java.lang.Object', 'getConstantValue()', '3']
Removed row: ['javassist.CtField:', 'java.lang.String', 'getName()', '1']
Removed row: ['javassist.CtField:', 'java.lang.String', 'getSignature()', '1']
Removed row: ['javassist.CtField:', 'java.lang.String', 'toString()', '1']
Removed row: ['javassist.CtField:', 'javassist.CtClass', 'getType()', '1']
Removed row: ['javassist.CtField:', 'void', '<init>(javassist.CtField,javassist.CtClass)', '7']
Removed row: ['javassist.CtField:', 'void', 'extendToString(java.lang.StringBuffer)', '1']
Removed row: ['javassist.CtField:', 'void', 'setAttribute(java.lang.String,byte[])', '2']
Removed row: ['javassist.CtField:', 'void', 'setModifiers(int)', '1']
Removed row: ['javassist.CtField:', 'void', 'setName(java.lang.String)', '1']
Removed row: ['javassist.CtField:', 'void', 'setType(javassist.CtClass)', '1']
Removed row: ['javassist.CtMethod:', 'java.lang.String', 'getName()', '1']
Removed row: ['javassist.CtMethod:', 'java.lang.String', 'getStringRep()', '2']
Removed row: ['javassist.CtMethod:', 'void', 'setName(java.lang.String)', '1']
Removed row: ['javassist.CtMethod:', 'void', 'setWrappedBody(javassist.CtMethod,javassist.CtMethod$ConstParameter)', '3']
Removed row: ['javassist.CtNewWrappedConstructor:', 'javassist.CtConstructor', 'wrapped(javassist.CtClass[],javassist.CtClass[],int,javassist.CtMethod,javassist.CtMethod$ConstParameter,javassist.CtClass)', '1']
Removed row: ['javassist.bytecode.AttributeInfo:', 'int', 'getLength(java.util.ArrayList)', '1']
Removed row: ['javassist.bytecode.AttributeInfo:', 'java.util.ArrayList', 'copyAll(java.util.ArrayList,javassist.bytecode.ConstPool)', '1']
Removed row: ['javassist.bytecode.AttributeInfo:', 'javassist.bytecode.AttributeInfo', 'lookup(java.util.ArrayList,java.lang.String)', '1']
Removed row: ['javassist.bytecode.AttributeInfo:', 'void', 'remove(java.util.ArrayList,java.lang.String)', '1']
Removed row: ['javassist.bytecode.AttributeInfo:', 'void', 'writeAll(java.util.ArrayList,java.io.DataOutputStream)', '1']
Removed row: ['javassist.bytecode.ClassFile:', 'boolean', 'isDuplicated(javassist.bytecode.MethodInfo,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo,java.util.ListIterator)', '2']
Removed row: ['javassist.bytecode.ClassFile:', 'boolean', 'notBridgeMethod(javassist.bytecode.MethodInfo)', '1']
Removed row: ['javassist.bytecode.ClassFile:', 'int', 'getInnerAccessFlags()', '3']
Removed row: ['javassist.bytecode.ClassFile:', 'javassist.bytecode.AttributeInfo', 'getAttribute(java.lang.String)', '1']
Removed row: ['javassist.bytecode.ClassFile:', 'javassist.bytecode.MethodInfo', 'getMethod(java.lang.String)', '1']
Removed row: ['javassist.bytecode.ClassFile:', 'void', 'compact()', '2']
Removed row: ['javassist.bytecode.ClassFile:', 'void', 'prune()', '5']
Removed row: ['javassist.bytecode.ClassFile:', 'void', 'renameClass(java.lang.String,java.lang.String)', '3']
Removed row: ['javassist.bytecode.ClassFile:', 'void', 'renameClass(java.util.Map)', '3']
Removed row: ['javassist.bytecode.ClassFile:', 'void', 'setSuperclass(java.lang.String)', '1']
Removed row: ['javassist.bytecode.ClassFile:', 'void', 'testExistingField(java.lang.String,java.lang.String)', '1']
Removed row: ['javassist.bytecode.ClassFile:', 'void', 'testExistingMethod(javassist.bytecode.MethodInfo)', '2']
Removed row: ['javassist.bytecode.ClassFile:', 'void', 'write(java.io.DataOutputStream)', '2']
Removed row: ['javassist.bytecode.CodeAttribute:', 'void', '<init>(javassist.bytecode.ConstPool,javassist.bytecode.CodeAttribute,java.util.Map)', '1']
Removed row: ['javassist.bytecode.CodeIterator:', 'byte[]', 'insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)', '6']
Removed row: ['javassist.bytecode.CodeIterator:', 'byte[]', 'insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)', '5']
Removed row: ['javassist.bytecode.CodeIterator:', 'byte[]', 'makeExapndedCode(byte[],java.util.ArrayList,int,int)', '3']
Removed row: ['javassist.bytecode.CodeIterator$Pointers:', 'void', 'shiftPc(int,int,boolean)', '5']
Removed row: ['javassist.bytecode.FieldInfo:', 'int', 'getConstantValue()', '1']
Removed row: ['javassist.bytecode.FieldInfo:', 'void', 'prune(javassist.bytecode.ConstPool)', '3']
Removed row: ['javassist.bytecode.MethodInfo:', 'void', 'prune(javassist.bytecode.ConstPool)', '5']
Removed row: ['javassist.bytecode.MethodInfo:', 'void', 'rebuildStackMap(javassist.ClassPool)', '1']
Removed row: ['javassist.bytecode.MethodInfo:', 'void', 'rebuildStackMapForME(javassist.ClassPool)', '1']
Removed row: ['javassist.bytecode.stackmap.BasicBlock$Maker:', 'javassist.bytecode.stackmap.BasicBlock[]', 'make(javassist.bytecode.MethodInfo)', '2']
Removed row: ['javassist.bytecode.stackmap.MapMaker:', 'javassist.bytecode.StackMap', 'make2(javassist.ClassPool,javassist.bytecode.MethodInfo)', '1']
Removed row: ['javassist.bytecode.stackmap.MapMaker:', 'javassist.bytecode.StackMapTable', 'make(javassist.ClassPool,javassist.bytecode.MethodInfo)', '1']
Removed row: ['javassist.bytecode.stackmap.MapMaker:', 'void', '<init>(javassist.ClassPool,javassist.bytecode.MethodInfo,javassist.bytecode.CodeAttribute)', '2']
Removed row: ['javassist.bytecode.stackmap.TypeData$TypeName:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['javassist.bytecode.stackmap.TypeData$TypeName:', 'java.lang.String', 'evalExpectedType2(java.util.ArrayList,int)', '3']
Removed row: ['javassist.bytecode.stackmap.TypedBlock:', 'javassist.bytecode.stackmap.TypedBlock[]', 'makeBlocks(javassist.bytecode.MethodInfo,javassist.bytecode.CodeAttribute,boolean)', '5']
Removed row: ['javassist.compiler.AccessorMaker:', 'java.lang.String', 'getConstructor(javassist.CtClass,java.lang.String,javassist.bytecode.MethodInfo)', '2']
Removed row: ['javassist.compiler.AccessorMaker:', 'java.lang.String', 'getMethodAccessor(java.lang.String,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo)', '2']
Removed row: ['javassist.compiler.AccessorMaker:', 'javassist.bytecode.MethodInfo', 'getFieldGetter(javassist.bytecode.FieldInfo,boolean)', '2']
Removed row: ['javassist.compiler.AccessorMaker:', 'javassist.bytecode.MethodInfo', 'getFieldSetter(javassist.bytecode.FieldInfo,boolean)', '2']
Removed row: ['javassist.compiler.CodeGen:', 'void', 'patchGoto(java.util.ArrayList,int)', '1']
Removed row: ['javassist.compiler.Javac:', 'javassist.CtBehavior', 'compileMethod(javassist.compiler.Parser,javassist.compiler.ast.MethodDecl)', '2']
Removed row: ['javassist.compiler.Javac:', 'javassist.CtMember', 'compile(java.lang.String)', '1']
Removed row: ['javassist.compiler.MemberCodeGen:', 'boolean', 'setFieldType(javassist.bytecode.FieldInfo)', '1']
Removed row: ['javassist.compiler.MemberCodeGen:', 'int', 'addFieldrefInfo(javassist.CtField,javassist.bytecode.FieldInfo)', '2']
Removed row: ['javassist.compiler.MemberCodeGen:', 'javassist.compiler.AccessorMaker', 'isAccessibleField(javassist.CtField,javassist.bytecode.FieldInfo)', '1']
Removed row: ['javassist.compiler.MemberCodeGen:', 'void', 'atMethodCallCore2(javassist.CtClass,java.lang.String,boolean,boolean,int,int,javassist.compiler.MemberResolver$Method)', '2']
Removed row: ['javassist.compiler.MemberResolver:', 'javassist.compiler.MemberResolver$Method', 'lookupMethod(javassist.CtClass,java.lang.String,int[],int[],java.lang.String[],boolean)', '2']
Removed row: ['javassist.compiler.MemberResolver:', 'javassist.compiler.MemberResolver$Method', 'lookupMethod(javassist.CtClass,javassist.CtClass,javassist.bytecode.MethodInfo,java.lang.String,int[],int[],java.lang.String[])', '2']
Removed row: ['javassist.compiler.MemberResolver$Method:', 'boolean', 'isStatic()', '1']
Removed row: ['javassist.compiler.TypeChecker:', 'javassist.compiler.MemberResolver$Method', 'atMethodCallCore(javassist.CtClass,java.lang.String,javassist.compiler.ast.ASTList)', '1']
Removed row: ['javassist.compiler.TypeChecker:', 'void', 'atFieldRead(javassist.CtField)', '1']
Removed row: ['javassist.util.proxy.ProxyFactory:', 'boolean', 'isVisible(int,java.lang.String,java.lang.reflect.Member)', '1']
Removed row: ['javassist.util.proxy.ProxyFactory:', 'boolean', 'makeUniqueName0(java.lang.String,java.util.Iterator)', '2']
Removed row: ['javassist.util.proxy.ProxyFactory:', 'int', 'overrideMethods(javassist.bytecode.ClassFile,javassist.bytecode.ConstPool,java.lang.String)', '3']
Removed row: ['javassist.util.proxy.ProxyFactory:', 'java.lang.String', 'keyToDesc(java.lang.String)', '2']
Removed row: ['javassist.util.proxy.ProxyFactory:', 'javassist.bytecode.MethodInfo', 'makeConstructor(java.lang.String,java.lang.reflect.Constructor,javassist.bytecode.ConstPool,java.lang.Class,boolean)', '3']
Removed row: ['javassist.util.proxy.ProxyFactory:', 'javassist.bytecode.MethodInfo', 'makeDelegator(java.lang.reflect.Method,java.lang.String,javassist.bytecode.ConstPool,java.lang.Class,java.lang.String)', '4']
Removed row: ['javassist.util.proxy.ProxyFactory:', 'javassist.bytecode.MethodInfo', 'makeForwarder(java.lang.String,java.lang.reflect.Method,java.lang.String,javassist.bytecode.ConstPool,java.lang.Class,java.lang.String,int)', '5']
Removed row: ['javassist.util.proxy.ProxyFactory:', 'void', 'computeSignature(javassist.util.proxy.MethodFilter)', '2']
Removed row: ['javassist.util.proxy.ProxyFactory:', 'void', 'getMethods(java.util.HashMap,java.lang.Class)', '3']
Removed row: ['javassist.util.proxy.ProxyFactory:', 'void', 'makeConstructors(java.lang.String,javassist.bytecode.ClassFile,javassist.bytecode.ConstPool,java.lang.String)', '1']
Removed row: ['javassist.util.proxy.ProxyFactory:', 'void', 'override(java.lang.String,java.lang.reflect.Method,java.lang.String,int,java.lang.String,javassist.bytecode.ClassFile,javassist.bytecode.ConstPool)', '3']
Removed row: ['javassist.util.proxy.ProxyFactory:', 'void', 'setThrows(javassist.bytecode.MethodInfo,javassist.bytecode.ConstPool,java.lang.reflect.Method)', '1']
Removed row: ['javassist.util.proxy.ProxyFactory$2:', 'int', 'compare(java.lang.Object,java.lang.Object)', '1']
Removed row: ['javassist.util.proxy.RuntimeSupport:', 'java.lang.String', 'makeDescriptor(java.lang.reflect.Method)', '2']
Removed row: ['javax.crypto.Cipher:', 'boolean', 'passCryptoPermCheck(javax.crypto.CipherSpi,java.security.Key,java.security.spec.AlgorithmParameterSpec)', '2']
Removed row: ['javax.crypto.Cipher:', 'javax.crypto.Cipher', 'getInstance(java.lang.String,java.security.Provider)', '3']
Removed row: ['javax.crypto.Cipher:', 'void', 'initCryptoPermission()', '1']
Removed row: ['javax.crypto.CryptoPermissionCollection:', 'boolean', 'implies(java.security.Permission)', '1']
Removed row: ['javax.crypto.CryptoPermissions:', 'javax.crypto.CryptoPermission[]', 'getMinimum(int,java.security.PermissionCollection)', '7']
Removed row: ['javax.crypto.CryptoPermissions:', 'javax.crypto.CryptoPermission[]', 'getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)', '2']
Removed row: ['javax.crypto.CryptoPermissions:', 'javax.crypto.CryptoPermissions', 'getMinimum(javax.crypto.CryptoPermissions)', '2']
Removed row: ['javax.crypto.CryptoPolicyParser:', 'javax.crypto.CryptoPermission[]', 'getPermissions()', '1']
Removed row: ['javax.crypto.JceSecurity:', 'sun.security.jca.GetInstance$Instance', 'getInstance(java.lang.String,java.lang.Class,java.lang.String)', '1']
Removed row: ['javax.crypto.JceSecurityManager:', 'javax.crypto.CryptoPermission', 'getCryptoPermission(java.lang.String)', '9']
Removed row: ['javax.security.auth.PrivateCredentialPermission:', 'void', '<init>(java.lang.String,java.util.Set)', '2']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'boolean', 'isAsyncStarted()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'boolean', 'isAsyncSupported()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'boolean', 'isSecure()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'boolean', 'isWrapperFor(java.lang.Class)', '2']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'boolean', 'isWrapperFor(javax.servlet.ServletRequest)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'int', 'getContentLength()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'int', 'getLocalPort()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'int', 'getRemotePort()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'int', 'getServerPort()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.io.BufferedReader', 'getReader()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.Object', 'getAttribute(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getCharacterEncoding()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getContentType()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getLocalAddr()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getLocalName()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getParameter(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getProtocol()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getRealPath(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getRemoteAddr()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getRemoteHost()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getScheme()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String', 'getServerName()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.lang.String[]', 'getParameterValues(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.util.Enumeration', 'getAttributeNames()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.util.Enumeration', 'getLocales()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.util.Enumeration', 'getParameterNames()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.util.Locale', 'getLocale()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'java.util.Map', 'getParameterMap()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.AsyncContext', 'getAsyncContext()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.AsyncContext', 'startAsync()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.AsyncContext', 'startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.DispatcherType', 'getDispatcherType()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.RequestDispatcher', 'getRequestDispatcher(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.ServletContext', 'getServletContext()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'javax.servlet.ServletInputStream', 'getInputStream()', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'void', 'removeAttribute(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'void', 'setAttribute(java.lang.String,java.lang.Object)', '1']
Removed row: ['javax.servlet.ServletRequestWrapper:', 'void', 'setCharacterEncoding(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'boolean', 'isCommitted()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'boolean', 'isWrapperFor(java.lang.Class)', '2']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'boolean', 'isWrapperFor(javax.servlet.ServletResponse)', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'int', 'getBufferSize()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'java.io.PrintWriter', 'getWriter()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'java.lang.String', 'getCharacterEncoding()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'java.lang.String', 'getContentType()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'java.util.Locale', 'getLocale()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'javax.servlet.ServletOutputStream', 'getOutputStream()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'flushBuffer()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'reset()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'resetBuffer()', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'setBufferSize(int)', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'setCharacterEncoding(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'setContentLength(int)', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'setContentType(java.lang.String)', '1']
Removed row: ['javax.servlet.ServletResponseWrapper:', 'void', 'setLocale(java.util.Locale)', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getContextPath()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getHeader(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getMethod()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getRemoteUser()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'java.lang.String', 'getRequestURI()', '1']
Removed row: ['javax.servlet.http.HttpServletRequestWrapper:', 'javax.servlet.http.HttpSession', 'getSession()', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'addDateHeader(java.lang.String,long)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'addHeader(java.lang.String,java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'addIntHeader(java.lang.String,int)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'sendError(int)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'sendError(int,java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'sendRedirect(java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'setDateHeader(java.lang.String,long)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'setHeader(java.lang.String,java.lang.String)', '1']
Removed row: ['javax.servlet.http.HttpServletResponseWrapper:', 'void', 'setStatus(int)', '1']
Removed row: ['javax.servlet.jsp.jstl.core.Config:', 'java.lang.Object', 'get(javax.servlet.ServletContext,java.lang.String)', '1']
Removed row: ['javax.servlet.jsp.jstl.core.Config:', 'java.lang.Object', 'get(javax.servlet.ServletRequest,java.lang.String)', '1']
Removed row: ['javax.validation.Validation$GenericBootstrapImpl:', 'javax.validation.Configuration', 'configure()', '1']
Removed row: ['javax.xml.namespace.QName:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['javax.xml.namespace.QName:', 'int', 'hashCode()', '1']
Removed row: ['junit.framework.ComparisonCompactor:', 'java.lang.String', 'compactString(java.lang.String)', '2']
Removed row: ['junit.framework.ComparisonCompactor:', 'void', 'findCommonPrefix()', '2']
Removed row: ['junit.framework.ComparisonCompactor:', 'void', 'findCommonSuffix()', '2']
Removed row: ['net.vidageek.mirror.bean.Bean:', 'java.lang.String', 'capitalize(java.lang.String)', '2']
Removed row: ['net.vidageek.mirror.get.DefaultGetterHandler:', 'java.lang.Object', 'field(java.lang.reflect.Field)', '4']
Removed row: ['net.vidageek.mirror.get.DefaultGetterHandler:', 'void', '<init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)', '1']
Removed row: ['net.vidageek.mirror.invoke.ConstructorHandlerByArgs:', 'java.lang.reflect.Constructor', 'getConstructor(java.lang.Object[])', '1']
Removed row: ['net.vidageek.mirror.invoke.ConstructorHandlerByConstructor:', 'void', '<init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class,java.lang.reflect.Constructor)', '2']
Removed row: ['net.vidageek.mirror.invoke.DefaultInvocationHandler:', 'java.lang.Object', 'getterFor(java.lang.String)', '1']
Removed row: ['net.vidageek.mirror.invoke.DefaultInvocationHandler:', 'void', '<init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)', '1']
Removed row: ['net.vidageek.mirror.invoke.MethodHandlerByMethod:', 'java.lang.Object', 'withArgs(java.lang.Object[])', '3']
Removed row: ['net.vidageek.mirror.invoke.MethodHandlerByMethod:', 'void', '<init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)', '2']
Removed row: ['net.vidageek.mirror.invoke.MethodHandlerByName:', 'java.lang.reflect.Method', 'getMethod(java.lang.Object[])', '1']
Removed row: ['net.vidageek.mirror.list.EqualMethodRemover:', 'boolean', 'sameArgs(java.lang.reflect.Method)', '4']
Removed row: ['net.vidageek.mirror.list.EqualMethodRemover:', 'boolean', 'sameMethodName(java.lang.reflect.Method)', '1']
Removed row: ['net.vidageek.mirror.list.SameNameMatcher:', 'boolean', 'accepts(java.lang.reflect.Method)', '1']
Removed row: ['net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider:', 'java.lang.reflect.Field', 'reflectField(java.lang.String)', '1']
Removed row: ['net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider:', 'java.lang.reflect.Method', 'reflectMethod(java.lang.String,java.lang.Class[])', '2']
Removed row: ['net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider:', 'java.util.List', 'reflectAllConstructors()', '1']
Removed row: ['net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider:', 'java.util.List', 'reflectAllFields()', '3']
Removed row: ['net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider:', 'java.util.List', 'reflectAllMethods()', '2']
Removed row: ['net.vidageek.mirror.provider.java.PureJavaConstructorReflectionProvider:', 'java.lang.Object', 'instantiate(java.lang.Object[])', '4']
Removed row: ['net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider:', 'java.lang.Object', 'getValue()', '2']
Removed row: ['net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider:', 'void', 'setAccessible()', '1']
Removed row: ['net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider:', 'void', 'setValue(java.lang.Object)', '2']
Removed row: ['net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider:', 'java.lang.Class[]', 'getParameters()', '1']
Removed row: ['net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider:', 'java.lang.Object', 'invoke(java.lang.Object[])', '5']
Removed row: ['net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider:', 'void', 'setAccessible()', '1']
Removed row: ['net.vidageek.mirror.reflect.DefaultConstructorReflector:', 'java.lang.reflect.Constructor', 'withAnyArgs()', '1']
Removed row: ['net.vidageek.mirror.reflect.DefaultFieldReflector:', 'void', '<init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String)', '1']
Removed row: ['net.vidageek.mirror.reflect.DefaultMethodReflector:', 'java.lang.reflect.Method', 'withAnyArgs()', '1']
Removed row: ['net.vidageek.mirror.reflect.DefaultMethodReflector:', 'void', '<init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String,java.lang.Class)', '2']
Removed row: ['net.vidageek.mirror.reflect.DefaultReflectionHandler:', 'java.lang.reflect.Field', 'field(java.lang.String)', '1']
Removed row: ['net.vidageek.mirror.reflect.DefaultReflectionHandler:', 'net.vidageek.mirror.reflect.dsl.MethodReflector', 'method(java.lang.String)', '1']
Removed row: ['ognl.ASTAdd:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTAdd:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '11']
Removed row: ['ognl.ASTAnd:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTAnd:', 'java.lang.String', 'toSetSourceString(ognl.OgnlContext,java.lang.Object)', '4']
Removed row: ['ognl.ASTAnd:', 'void', 'setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.ASTAssign:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTAssign:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '10']
Removed row: ['ognl.ASTAssign:', 'java.lang.String', 'toSetSourceString(ognl.OgnlContext,java.lang.Object)', '7']
Removed row: ['ognl.ASTBitAnd:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTBitNegate:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTBitNegate:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTBitOr:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTChain:', 'boolean', 'isSimpleNavigationChain(ognl.OgnlContext)', '1']
Removed row: ['ognl.ASTChain:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '9']
Removed row: ['ognl.ASTChain:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '10']
Removed row: ['ognl.ASTChain:', 'java.lang.String', 'toSetSourceString(ognl.OgnlContext,java.lang.Object)', '4']
Removed row: ['ognl.ASTChain:', 'java.lang.String', 'toString()', '2']
Removed row: ['ognl.ASTChain:', 'void', 'setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '11']
Removed row: ['ognl.ASTConst:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '13']
Removed row: ['ognl.ASTConst:', 'java.lang.String', 'toString()', '3']
Removed row: ['ognl.ASTCtor:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '5']
Removed row: ['ognl.ASTCtor:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '6']
Removed row: ['ognl.ASTDivide:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTEq:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTEval:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '4']
Removed row: ['ognl.ASTEval:', 'void', 'setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '4']
Removed row: ['ognl.ASTGreater:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTGreaterEq:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTIn:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTInstanceof:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTInstanceof:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTLess:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTLessEq:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTList:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTList:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '6']
Removed row: ['ognl.ASTList:', 'java.lang.String', 'toString()', '1']
Removed row: ['ognl.ASTMap:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '4']
Removed row: ['ognl.ASTMap:', 'java.lang.String', 'toString()', '2']
Removed row: ['ognl.ASTMethod:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTMethod:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '6']
Removed row: ['ognl.ASTMethod:', 'java.lang.String', 'toSetSourceString(ognl.OgnlContext,java.lang.Object)', '6']
Removed row: ['ognl.ASTMultiply:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTNegate:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTNegate:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTNot:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTNotEq:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTNotIn:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTOr:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTOr:', 'java.lang.String', 'toSetSourceString(ognl.OgnlContext,java.lang.Object)', '4']
Removed row: ['ognl.ASTOr:', 'void', 'setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.ASTProject:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '3']
Removed row: ['ognl.ASTProperty:', 'boolean', 'isNodeSimpleProperty(ognl.OgnlContext)', '1']
Removed row: ['ognl.ASTProperty:', 'int', 'getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTProperty:', 'java.lang.Object', 'getProperty(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTProperty:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '4']
Removed row: ['ognl.ASTProperty:', 'java.lang.String', 'toSetSourceString(ognl.OgnlContext,java.lang.Object)', '4']
Removed row: ['ognl.ASTProperty:', 'java.lang.String', 'toString()', '2']
Removed row: ['ognl.ASTRemainder:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTSelect:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '3']
Removed row: ['ognl.ASTSelectFirst:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '3']
Removed row: ['ognl.ASTSelectLast:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '3']
Removed row: ['ognl.ASTSequence:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTSequence:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '3']
Removed row: ['ognl.ASTSequence:', 'void', 'setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.ASTShiftLeft:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTShiftRight:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTStaticMethod:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTStaticMethod:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '6']
Removed row: ['ognl.ASTSubtract:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTTest:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTTest:', 'void', 'setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.ASTUnsignedShiftRight:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ASTUnsignedShiftRight:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ASTXor:', 'java.lang.Object', 'getValueBody(ognl.OgnlContext,java.lang.Object)', '2']
Removed row: ['ognl.ArrayPropertyAccessor:', 'java.lang.Object', 'getProperty(java.util.Map,java.lang.Object,java.lang.Object)', '4']
Removed row: ['ognl.ArrayPropertyAccessor:', 'void', 'setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)', '6']
Removed row: ['ognl.CollectionElementsAccessor:', 'java.util.Enumeration', 'getElements(java.lang.Object)', '1']
Removed row: ['ognl.DefaultMemberAccess:', 'boolean', 'isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)', '1']
Removed row: ['ognl.EnumerationPropertyAccessor:', 'java.lang.Object', 'getProperty(java.util.Map,java.lang.Object,java.lang.Object)', '6']
Removed row: ['ognl.Evaluation:', 'java.lang.String', 'toString(boolean,boolean,java.lang.String)', '3']
Removed row: ['ognl.Evaluation:', 'ognl.Evaluation', 'getFirstDescendant()', '1']
Removed row: ['ognl.Evaluation:', 'ognl.Evaluation', 'getLastDescendant()', '1']
Removed row: ['ognl.EvaluationPool:', 'ognl.Evaluation', 'create(ognl.SimpleNode,java.lang.Object,boolean)', '1']
Removed row: ['ognl.EvaluationPool:', 'void', 'recycle(ognl.Evaluation)', '1']
Removed row: ['ognl.EvaluationPool:', 'void', 'recycleAll(ognl.Evaluation)', '2']
Removed row: ['ognl.ExpressionNode:', 'boolean', 'isConstant(ognl.OgnlContext)', '1']
Removed row: ['ognl.ExpressionNode:', 'java.lang.String', 'toGetSourceString(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ExpressionNode:', 'java.lang.String', 'toSetSourceString(ognl.OgnlContext,java.lang.Object)', '1']
Removed row: ['ognl.ExpressionNode:', 'java.lang.String', 'toString()', '1']
Removed row: ['ognl.IteratorEnumeration:', 'boolean', 'hasMoreElements()', '1']
Removed row: ['ognl.IteratorEnumeration:', 'java.lang.Object', 'nextElement()', '1']
Removed row: ['ognl.IteratorPropertyAccessor:', 'java.lang.Object', 'getProperty(java.util.Map,java.lang.Object,java.lang.Object)', '4']
Removed row: ['ognl.JJTOgnlParserState:', 'ognl.Node', 'popNode()', '1']
Removed row: ['ognl.JJTOgnlParserState:', 'void', 'clearNodeScope(ognl.Node)', '1']
Removed row: ['ognl.JJTOgnlParserState:', 'void', 'closeNodeScope(ognl.Node,boolean)', '3']
Removed row: ['ognl.JJTOgnlParserState:', 'void', 'closeNodeScope(ognl.Node,int)', '2']
Removed row: ['ognl.ListPropertyAccessor:', 'java.lang.Object', 'getProperty(java.util.Map,java.lang.Object,java.lang.Object)', '14']
Removed row: ['ognl.ListPropertyAccessor:', 'void', 'setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)', '10']
Removed row: ['ognl.MapElementsAccessor:', 'java.util.Enumeration', 'getElements(java.lang.Object)', '1']
Removed row: ['ognl.MapPropertyAccessor:', 'java.lang.Object', 'getProperty(java.util.Map,java.lang.Object,java.lang.Object)', '11']
Removed row: ['ognl.MapPropertyAccessor:', 'void', 'setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.NoSuchPropertyException:', 'java.lang.String', 'getReason(java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.ObjectMethodAccessor:', 'java.lang.Object', 'callMethod(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])', '1']
Removed row: ['ognl.ObjectPropertyAccessor:', 'java.lang.Object', 'getProperty(java.util.Map,java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.ObjectPropertyAccessor:', 'java.lang.Object', 'setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)', '1']
Removed row: ['ognl.ObjectPropertyAccessor:', 'void', 'setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.Ognl:', 'void', 'setValue(java.lang.Object,java.util.Map,java.lang.Object,java.lang.Object)', '3']
Removed row: ['ognl.OgnlContext:', 'java.lang.Object', 'get(java.lang.Object)', '9']
Removed row: ['ognl.OgnlContext:', 'java.lang.Object', 'put(java.lang.Object,java.lang.Object)', '9']
Removed row: ['ognl.OgnlContext:', 'java.lang.Object', 'remove(java.lang.Object)', '9']
Removed row: ['ognl.OgnlContext:', 'ognl.Evaluation', 'getEvaluation(int)', '1']
Removed row: ['ognl.OgnlContext:', 'ognl.Evaluation', 'popEvaluation()', '1']
Removed row: ['ognl.OgnlContext:', 'void', 'pushEvaluation(ognl.Evaluation)', '1']
Removed row: ['ognl.OgnlContext:', 'void', 'setRoot(java.lang.Object)', '1']
Removed row: ['ognl.OgnlOps:', 'boolean', 'booleanValue(java.lang.Object)', '4']
Removed row: ['ognl.OgnlOps:', 'boolean', 'equal(java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.OgnlOps:', 'boolean', 'in(java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.OgnlOps:', 'boolean', 'isEqual(java.lang.Object,java.lang.Object)', '5']
Removed row: ['ognl.OgnlOps:', 'double', 'doubleValue(java.lang.Object)', '5']
Removed row: ['ognl.OgnlOps:', 'int', 'compareWithConversion(java.lang.Object,java.lang.Object)', '7']
Removed row: ['ognl.OgnlOps:', 'int', 'getNumericType(java.lang.Object)', '1']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'add(java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'binaryAnd(java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'binaryOr(java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'binaryXor(java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'bitNegate(java.lang.Object)', '1']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'convertValue(java.lang.Object,java.lang.Class,boolean)', '6']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'divide(java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'multiply(java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'negate(java.lang.Object)', '2']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'remainder(java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'shiftLeft(java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'shiftRight(java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'subtract(java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.OgnlOps:', 'java.lang.Object', 'unsignedShiftRight(java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.OgnlOps:', 'java.lang.String', 'stringValue(java.lang.Object,boolean)', '2']
Removed row: ['ognl.OgnlOps:', 'java.math.BigDecimal', 'bigDecValue(java.lang.Object)', '3']
Removed row: ['ognl.OgnlOps:', 'java.math.BigInteger', 'bigIntValue(java.lang.Object)', '5']
Removed row: ['ognl.OgnlOps:', 'long', 'longValue(java.lang.Object)', '4']
Removed row: ['ognl.OgnlRuntime:', 'boolean', 'areArgsCompatible(java.lang.Object[],java.lang.Class[],java.lang.reflect.Method)', '1']
Removed row: ['ognl.OgnlRuntime:', 'boolean', 'indexMethodCheck(java.util.List)', '2']
Removed row: ['ognl.OgnlRuntime:', 'boolean', 'isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)', '2']
Removed row: ['ognl.OgnlRuntime:', 'boolean', 'isMethodCallable(java.lang.reflect.Method)', '2']
Removed row: ['ognl.OgnlRuntime:', 'boolean', 'setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)', '7']
Removed row: ['ognl.OgnlRuntime:', 'boolean', 'setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)', '4']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Class', 'classForName(ognl.OgnlContext,java.lang.String)', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Class', 'getArgClass(java.lang.Object)', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Class', 'getTargetClass(java.lang.Object)', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Class[]', 'findParameterTypes(java.lang.Class,java.lang.reflect.Method)', '7']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Class[]', 'getParameterTypes(java.lang.reflect.Method)', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])', '3']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'callMethod(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object[])', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)', '2']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)', '4']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'getHandler(java.lang.Class,ognl.internal.ClassCache)', '3']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)', '2']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)', '3']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.Object', 'invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])', '8']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.reflect.Method', 'findClosestMatchingMethod(java.lang.Class,java.lang.reflect.Method,java.lang.String,java.lang.Class,boolean)', '7']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.reflect.Method', 'getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.reflect.Method', 'getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])', '2']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.reflect.Method', 'getReadMethod(java.lang.Class,java.lang.String,int)', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.lang.reflect.Method', 'getWriteMethod(java.lang.Class,java.lang.String,int)', '1']
Removed row: ['ognl.OgnlRuntime:', 'java.security.Permission', 'getPermission(java.lang.reflect.Method)', '4']
Removed row: ['ognl.OgnlRuntime:', 'java.util.List', 'getDeclaredMethods(java.lang.Class,java.lang.String,boolean)', '2']
Removed row: ['ognl.OgnlRuntime:', 'java.util.Map', 'getFields(java.lang.Class)', '1']
Removed row: ['ognl.OgnlRuntime:', 'void', 'findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)', '7']
Removed row: ['ognl.OgnlRuntime:', 'void', 'setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.OgnlRuntime:', 'void', 'setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)', '1']
Removed row: ['ognl.SetPropertyAccessor:', 'java.lang.Object', 'getProperty(java.util.Map,java.lang.Object,java.lang.Object)', '6']
Removed row: ['ognl.SimpleNode:', 'java.lang.Object', 'getValue(ognl.OgnlContext,java.lang.Object)', '4']
Removed row: ['ognl.SimpleNode:', 'void', 'dump(java.io.PrintWriter,java.lang.String)', '1']
Removed row: ['ognl.SimpleNode:', 'void', 'flattenTree()', '5']
Removed row: ['ognl.SimpleNode:', 'void', 'setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)', '2']
Removed row: ['ognl.internal.ClassCacheImpl:', 'java.lang.Object', 'get(java.lang.Class)', '1']
Removed row: ['ognl.internal.ClassCacheImpl:', 'java.lang.Object', 'put(java.lang.Class,java.lang.Object)', '1']
Removed row: ['org.apache.commons.fileupload.servlet.ServletFileUpload:', 'boolean', 'isMultipartContent(javax.servlet.http.HttpServletRequest)', '1']
Removed row: ['org.apache.commons.fileupload.servlet.ServletRequestContext:', 'int', 'getContentLength()', '1']
Removed row: ['org.apache.commons.fileupload.servlet.ServletRequestContext:', 'java.io.InputStream', 'getInputStream()', '1']
Removed row: ['org.apache.commons.fileupload.servlet.ServletRequestContext:', 'java.lang.String', 'getCharacterEncoding()', '1']
Removed row: ['org.apache.commons.fileupload.servlet.ServletRequestContext:', 'java.lang.String', 'getContentType()', '1']
Removed row: ['org.apache.commons.fileupload.servlet.ServletRequestContext:', 'long', 'contentLength()', '2']
Removed row: ['org.apache.log4j.Category:', 'void', 'closeNestedAppenders()', '1']
Removed row: ['org.apache.log4j.CategoryKey:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.apache.log4j.Hierarchy:', 'void', 'fireAddAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)', '1']
Removed row: ['org.apache.log4j.Hierarchy:', 'void', 'fireRemoveAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)', '1']
Removed row: ['org.apache.log4j.Hierarchy:', 'void', 'resetConfiguration()', '3']
Removed row: ['org.apache.log4j.Hierarchy:', 'void', 'shutdown()', '2']
Removed row: ['org.apache.log4j.PropertyConfigurator:', 'org.apache.log4j.Appender', 'parseAppender(java.util.Properties,java.lang.String)', '3']
Removed row: ['org.apache.log4j.config.PropertySetter:', 'void', 'setProperties(java.util.Properties,java.lang.String)', '1']
Removed row: ['org.apache.log4j.config.PropertySetter:', 'void', 'setProperty(java.beans.PropertyDescriptor,java.lang.String,java.lang.String)', '2']
Removed row: ['org.apache.log4j.helpers.AppenderAttachableImpl:', 'int', 'appendLoopOnAppenders(org.apache.log4j.spi.LoggingEvent)', '1']
Removed row: ['org.apache.log4j.helpers.AppenderAttachableImpl:', 'void', 'removeAllAppenders()', '1']
Removed row: ['org.apache.log4j.helpers.OptionConverter:', 'java.lang.Object', 'instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)', '4']
Removed row: ['org.codehaus.jettison.AbstractXMLStreamReader:', 'int', 'getAttributeCount()', '1']
Removed row: ['org.codehaus.jettison.AbstractXMLStreamReader:', 'int', 'getNamespaceCount()', '1']
Removed row: ['org.codehaus.jettison.AbstractXMLStreamReader:', 'java.lang.String', 'getAttributeValue(int)', '1']
Removed row: ['org.codehaus.jettison.AbstractXMLStreamReader:', 'java.lang.String', 'getAttributeValue(java.lang.String,java.lang.String)', '1']
Removed row: ['org.codehaus.jettison.AbstractXMLStreamReader:', 'java.lang.String', 'getNamespacePrefix(int)', '1']
Removed row: ['org.codehaus.jettison.AbstractXMLStreamReader:', 'java.lang.String', 'getNamespaceURI(int)', '1']
Removed row: ['org.codehaus.jettison.AbstractXMLStreamReader:', 'java.lang.String', 'getNamespaceURI(java.lang.String)', '1']
Removed row: ['org.codehaus.jettison.AbstractXMLStreamReader:', 'javax.xml.namespace.QName', 'getAttributeName(int)', '1']
Removed row: ['org.codehaus.jettison.AbstractXMLStreamReader:', 'javax.xml.namespace.QName', 'getName()', '1']
Removed row: ['org.codehaus.jettison.Node:', 'java.lang.String', 'getNamespacePrefix(java.lang.String)', '1']
Removed row: ['org.codehaus.jettison.Node:', 'java.lang.String', 'getNamespaceURI(java.lang.String)', '1']
Removed row: ['org.codehaus.jettison.Node:', 'void', '<init>(org.codehaus.jettison.Node,java.lang.String,org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.Convention)', '1']
Removed row: ['org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader:', 'int', 'next()', '9']
Removed row: ['org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader:', 'void', 'processElement()', '2']
Removed row: ['org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader:', 'void', 'processKey(java.lang.String,java.lang.Object)', '3']
Removed row: ['org.codehaus.jettison.json.JSONArray:', 'java.io.Writer', 'write(java.io.Writer)', '2']
Removed row: ['org.codehaus.jettison.json.JSONObject:', 'java.lang.String', 'numberToString(java.lang.Number)', '10']
Removed row: ['org.codehaus.jettison.json.JSONObject:', 'java.lang.String', 'quote(java.lang.String)', '3']
Removed row: ['org.codehaus.jettison.json.JSONObject:', 'java.lang.String', 'valueToString(java.lang.Object)', '4']
Removed row: ['org.codehaus.jettison.json.JSONObject:', 'void', 'testValidity(java.lang.Object)', '4']
Removed row: ['org.codehaus.jettison.mapped.MappedNamespaceConvention:', 'javax.xml.namespace.QName', 'createQName(java.lang.String)', '3']
Removed row: ['org.codehaus.jettison.mapped.MappedNamespaceConvention:', 'void', 'processAttributesAndNamespaces(org.codehaus.jettison.Node,org.codehaus.jettison.json.JSONObject)', '5']
Removed row: ['org.codehaus.jettison.mapped.MappedXMLStreamReader:', 'int', 'next()', '5']
Removed row: ['org.codehaus.jettison.mapped.MappedXMLStreamReader:', 'void', '<init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)', '1']
Removed row: ['org.codehaus.jettison.mapped.MappedXMLStreamReader:', 'void', 'processElement()', '17']
Removed row: ['org.codehaus.jettison.mapped.MappedXMLStreamWriter:', 'void', 'writeEndElement()', '1']
Removed row: ['org.hamcrest.BaseDescription:', 'org.hamcrest.Description', 'appendDescriptionOf(org.hamcrest.SelfDescribing)', '1']
Removed row: ['org.hamcrest.BaseDescription:', 'org.hamcrest.Description', 'appendValue(java.lang.Object)', '2']
Removed row: ['org.hamcrest.BaseDescription:', 'void', 'toJavaSyntax(java.lang.String)', '2']
Removed row: ['org.hamcrest.ResourceBundleDescription:', 'org.hamcrest.Description', 'appendText(java.lang.String)', '7']
Removed row: ['org.hamcrest.TypeSafeMatcher:', 'void', 'describeMismatch(java.lang.Object,org.hamcrest.Description)', '1']
Removed row: ['org.hamcrest.collection.IsCollectionWithSize:', 'java.lang.Integer', 'featureValueOf(java.util.Collection)', '1']
Removed row: ['org.hamcrest.collection.IsEmptyCollection:', 'boolean', 'matchesSafely(java.util.Collection)', '1']
Removed row: ['org.hamcrest.collection.IsIterableContainingInOrder:', 'boolean', 'matchesSafely(java.lang.Iterable,org.hamcrest.Description)', '1']
Removed row: ['org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries:', 'boolean', 'isMatched(java.lang.Object)', '1']
Removed row: ['org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries:', 'void', 'describeMismatch(org.hamcrest.Matcher,java.lang.Object)', '1']
Removed row: ['org.hamcrest.core.AllOf:', 'boolean', 'matches(java.lang.Object,org.hamcrest.Description)', '2']
Removed row: ['org.hamcrest.core.IsCollectionContaining:', 'boolean', 'matchesSafely(java.lang.Iterable,org.hamcrest.Description)', '1']
Removed row: ['org.hamcrest.core.IsEqual:', 'boolean', 'areEqual(java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.hamcrest.core.IsEqual:', 'boolean', 'isArray(java.lang.Object)', '1']
Removed row: ['org.hamcrest.core.IsInstanceOf:', 'boolean', 'matches(java.lang.Object,org.hamcrest.Description)', '1']
Removed row: ['org.hamcrest.core.StringContains:', 'boolean', 'evalSubstringOf(java.lang.String)', '1']
Removed row: ['org.hamcrest.core.StringEndsWith:', 'boolean', 'evalSubstringOf(java.lang.String)', '1']
Removed row: ['org.hamcrest.core.StringStartsWith:', 'boolean', 'evalSubstringOf(java.lang.String)', '1']
Removed row: ['org.hamcrest.internal.ArrayIterator:', 'void', '<init>(java.lang.Object)', '1']
Removed row: ['org.hamcrest.number.OrderingComparison:', 'boolean', 'matchesSafely(java.lang.Comparable)', '1']
Removed row: ['org.hamcrest.object.IsCompatibleType:', 'void', 'describeMismatchSafely(java.lang.Class,org.hamcrest.Description)', '1']
Removed row: ['org.joda.time.base.AbstractInstant:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['org.joda.time.base.AbstractPartial:', 'boolean', 'equals(java.lang.Object)', '4']
Removed row: ['org.joda.time.field.BaseDurationField:', 'int', 'compareTo(java.lang.Object)', '1']
Removed row: ['org.joda.time.field.MillisDurationField:', 'int', 'compareTo(java.lang.Object)', '1']
Removed row: ['org.joda.time.field.PreciseDurationField:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.joda.time.field.ScaledDurationField:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['org.joda.time.field.UnsupportedDurationField:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['org.joda.time.format.DateTimeFormat$StyleFormatter:', 'int', 'parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)', '1']
Removed row: ['org.joda.time.format.DateTimeFormat$StyleFormatter:', 'void', 'printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)', '1']
Removed row: ['org.joda.time.format.DateTimeFormat$StyleFormatter:', 'void', 'printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatter:', 'java.lang.String', 'print(org.joda.time.ReadableInstant)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatter:', 'java.lang.String', 'print(org.joda.time.ReadablePartial)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatter:', 'long', 'parseMillis(java.lang.String)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatter:', 'org.joda.time.DateTime', 'parseDateTime(java.lang.String)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatter:', 'void', 'printTo(java.lang.StringBuffer,long,org.joda.time.Chronology)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatter:', 'void', 'printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatterBuilder:', 'boolean', 'isParser(java.lang.Object)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatterBuilder:', 'boolean', 'isPrinter(java.lang.Object)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatterBuilder$Composite:', 'int', 'parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatterBuilder$Composite:', 'void', '<init>(java.util.List)', '2']
Removed row: ['org.joda.time.format.DateTimeFormatterBuilder$Composite:', 'void', 'printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatterBuilder$Composite:', 'void', 'printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatterBuilder$Composite:', 'void', 'printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)', '1']
Removed row: ['org.joda.time.format.DateTimeFormatterBuilder$Composite:', 'void', 'printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)', '1']
Removed row: ['org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.joda.time.tz.FixedDateTimeZone:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.junit.Assert:', 'java.lang.String', 'format(java.lang.String,java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.junit.internal.ArrayComparisonFailure:', 'java.lang.String', 'getMessage()', '1']
Removed row: ['org.mockito.asm.ByteVector:', 'org.mockito.asm.ByteVector', 'putUTF8(java.lang.String)', '4']
Removed row: ['org.mockito.asm.ClassWriter:', 'int', 'addUninitializedType(java.lang.String,int)', '1']
Removed row: ['org.mockito.asm.ClassWriter:', 'java.lang.String', 'getCommonSuperClass(java.lang.String,java.lang.String)', '2']
Removed row: ['org.mockito.asm.ClassWriter:', 'org.mockito.asm.Item', 'newConstItem(java.lang.Object)', '11']
Removed row: ['org.mockito.asm.Frame:', 'int', 'type(org.mockito.asm.ClassWriter,java.lang.String)', '9']
Removed row: ['org.mockito.asm.Frame:', 'void', 'execute(int,int,org.mockito.asm.ClassWriter,org.mockito.asm.Item)', '2']
Removed row: ['org.mockito.asm.Item:', 'boolean', 'isEqualTo(org.mockito.asm.Item)', '4']
Removed row: ['org.mockito.asm.Item:', 'void', 'set(int,java.lang.String,java.lang.String,java.lang.String)', '3']
Removed row: ['org.mockito.asm.Type:', 'java.lang.String', 'getMethodDescriptor(java.lang.reflect.Method)', '2']
Removed row: ['org.mockito.asm.util.AbstractVisitor:', 'void', 'printList(java.io.PrintWriter,java.util.List)', '3']
Removed row: ['org.mockito.cglib.core.AbstractClassGenerator:', 'java.lang.Object', 'create(java.lang.Object)', '3']
Removed row: ['org.mockito.cglib.core.AbstractClassGenerator$1:', 'boolean', 'evaluate(java.lang.Object)', '1']
Removed row: ['org.mockito.cglib.core.ClassInfo:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.mockito.cglib.core.CodeEmitter:', 'void', 'invoke(org.mockito.cglib.core.MethodInfo)', '1']
Removed row: ['org.mockito.cglib.core.CodeEmitter:', 'void', 'invoke(org.mockito.cglib.core.MethodInfo,org.mockito.asm.Type)', '3']
Removed row: ['org.mockito.cglib.core.EmitUtils:', 'org.mockito.cglib.core.CodeEmitter', 'begin_method(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.core.MethodInfo)', '1']
Removed row: ['org.mockito.cglib.core.EmitUtils:', 'org.mockito.cglib.core.CodeEmitter', 'begin_method(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.core.MethodInfo,int)', '2']
Removed row: ['org.mockito.cglib.core.EmitUtils:', 'void', 'load_method(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.core.MethodInfo)', '3']
Removed row: ['org.mockito.cglib.core.EmitUtils:', 'void', 'stringSwitchHelper(org.mockito.cglib.core.CodeEmitter,java.util.List,org.mockito.cglib.core.ObjectSwitchCallback,org.mockito.asm.Label,org.mockito.asm.Label,int)', '1']
Removed row: ['org.mockito.cglib.core.EmitUtils$1:', 'java.lang.Object', 'transform(java.lang.Object)', '1']
Removed row: ['org.mockito.cglib.core.EmitUtils$10:', 'org.mockito.asm.Type[]', 'getParameterTypes(org.mockito.cglib.core.MethodInfo)', '1']
Removed row: ['org.mockito.cglib.core.EmitUtils$11:', 'java.lang.Object', 'transform(java.lang.Object)', '1']
Removed row: ['org.mockito.cglib.core.EmitUtils$3:', 'java.lang.Object', 'transform(java.lang.Object)', '1']
Removed row: ['org.mockito.cglib.core.EmitUtils$5:', 'java.lang.Object', 'transform(java.lang.Object)', '1']
Removed row: ['org.mockito.cglib.core.MethodInfo:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.mockito.cglib.core.MethodWrapper:', 'java.lang.Object', 'create(java.lang.reflect.Method)', '3']
Removed row: ['org.mockito.cglib.core.ReflectUtils:', 'org.mockito.asm.Type[]', 'getExceptionTypes(java.lang.reflect.Member)', '2']
Removed row: ['org.mockito.cglib.core.ReflectUtils:', 'org.mockito.cglib.core.MethodInfo', 'getMethodInfo(java.lang.reflect.Member)', '1']
Removed row: ['org.mockito.cglib.core.ReflectUtils:', 'org.mockito.cglib.core.Signature', 'getSignature(java.lang.reflect.Member)', '2']
Removed row: ['org.mockito.cglib.core.ReflectUtils$3:', 'org.mockito.cglib.core.ClassInfo', 'getClassInfo()', '1']
Removed row: ['org.mockito.cglib.core.RejectModifierPredicate:', 'boolean', 'evaluate(java.lang.Object)', '1']
Removed row: ['org.mockito.cglib.core.VisibilityPredicate:', 'boolean', 'evaluate(java.lang.Object)', '3']
Removed row: ['org.mockito.cglib.proxy.DispatcherGenerator:', 'void', 'generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)', '2']
Removed row: ['org.mockito.cglib.proxy.Enhancer:', 'void', 'emitConstructors(org.mockito.cglib.core.ClassEmitter,java.util.List)', '1']
Removed row: ['org.mockito.cglib.proxy.Enhancer:', 'void', 'emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)', '2']
Removed row: ['org.mockito.cglib.proxy.Enhancer$2:', 'java.lang.Object', 'transform(java.lang.Object)', '1']
Removed row: ['org.mockito.cglib.proxy.Enhancer$5:', 'void', 'processCase(java.lang.Object,org.mockito.asm.Label)', '2']
Removed row: ['org.mockito.cglib.proxy.Enhancer$6:', 'org.mockito.cglib.core.CodeEmitter', 'beginMethod(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.core.MethodInfo)', '1']
Removed row: ['org.mockito.cglib.proxy.Enhancer$6:', 'org.mockito.cglib.core.Signature', 'getImplSignature(org.mockito.cglib.core.MethodInfo)', '1']
Removed row: ['org.mockito.cglib.proxy.InvocationHandlerGenerator:', 'void', 'generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)', '2']
Removed row: ['org.mockito.cglib.proxy.LazyLoaderGenerator:', 'void', 'generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)', '2']
Removed row: ['org.mockito.cglib.proxy.MethodInterceptorGenerator:', 'void', 'generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)', '2']
Removed row: ['org.mockito.cglib.proxy.MethodInterceptorGenerator:', 'void', 'generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)', '2']
Removed row: ['org.mockito.cglib.proxy.MethodInterceptorGenerator:', 'void', 'superHelper(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.core.MethodInfo)', '3']
Removed row: ['org.mockito.cglib.proxy.MethodInterceptorGenerator$1:', 'java.lang.Object', 'transform(java.lang.Object)', '1']
Removed row: ['org.mockito.cglib.proxy.NoOpGenerator:', 'void', 'generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)', '1']
Removed row: ['org.mockito.internal.creation.jmock.ClassImposterizer$2:', 'int', 'accept(java.lang.reflect.Method)', '1']
Removed row: ['org.mockito.internal.creation.jmock.SearchingClassLoader:', 'java.lang.Class', 'findClass(java.lang.String)', '1']
Removed row: ['org.mockito.internal.debugging.Location:', 'void', '<init>(org.mockito.internal.exceptions.base.StackTraceFilter)', '1']
Removed row: ['org.mockito.internal.matchers.Equality:', 'boolean', 'isArray(java.lang.Object)', '1']
Removed row: ['org.mockito.internal.matchers.InstanceOf:', 'boolean', 'matches(java.lang.Object)', '1']
Removed row: ['org.mockito.internal.progress.ArgumentMatcherStorageImpl:', 'void', 'validateState()', '1']
Removed row: ['org.mockito.internal.stubbing.answers.Returns:', 'java.lang.Class', 'getReturnType()', '1']
Removed row: ['org.mockito.internal.stubbing.answers.Returns:', 'java.lang.String', 'printReturnType()', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'boolean', 'isMockitoMock(java.lang.Object)', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.internal.MockHandlerInterface', 'getMockHandler(java.lang.Object)', '1']
Removed row: ['org.mockito.internal.util.MockUtil:', 'org.mockito.internal.creation.MethodInterceptorFilter', 'getInterceptor(java.lang.Object)', '1']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'java.lang.Object', 'decorateComponent(java.lang.Object,org.picocontainer.ComponentAdapter)', '2']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'java.lang.Object', 'getComponent(java.lang.Class)', '1']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'java.lang.Object', 'getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)', '6']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'java.lang.Object', 'getLocalInstance(org.picocontainer.ComponentAdapter)', '1']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'java.lang.String', 'toString()', '1']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'java.util.List', 'getComponentAdapters(java.lang.Class,java.lang.Class)', '5']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'java.util.List', 'getComponents(java.lang.Class)', '1']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'org.picocontainer.ComponentAdapter', 'getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)', '3']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'org.picocontainer.ComponentAdapter', 'getComponentAdapter(java.lang.Object)', '1']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'org.picocontainer.Converters', 'getConverters()', '2']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'org.picocontainer.MutablePicoContainer', 'addComponent(java.lang.Object,java.util.Properties)', '1']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'void', 'addAdapterIfStartable(org.picocontainer.ComponentAdapter)', '1']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'void', 'disposeAdapters()', '1']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'void', 'instantiateComponentAsIsStartable(org.picocontainer.ComponentAdapter)', '1']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'void', 'potentiallyStartAdapter(org.picocontainer.ComponentAdapter)', '1']
Removed row: ['org.picocontainer.DefaultPicoContainer:', 'void', 'stopAdapters()', '3']
Removed row: ['org.picocontainer.PicoBuilder:', 'org.picocontainer.ComponentFactory', 'buildComponentFactory(org.picocontainer.DefaultPicoContainer,org.picocontainer.ComponentFactory,java.util.Stack)', '1']
Removed row: ['org.picocontainer.adapters.AbstractAdapter:', 'java.lang.ClassCastException', 'newCCE(java.lang.Class)', '2']
Removed row: ['org.picocontainer.adapters.AbstractAdapter:', 'void', 'checkTypeCompatibility()', '2']
Removed row: ['org.picocontainer.adapters.InstanceAdapter:', 'boolean', 'componentHasLifecycle()', '1']
Removed row: ['org.picocontainer.adapters.InstanceAdapter:', 'java.lang.Class', 'getInstanceClass(java.lang.Object)', '1']
Removed row: ['org.picocontainer.behaviors.AbstractBehaviorFactory:', 'org.picocontainer.ComponentAdapter', 'addComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,org.picocontainer.ComponentAdapter)', '1']
Removed row: ['org.picocontainer.behaviors.AbstractBehaviorFactory:', 'org.picocontainer.ComponentAdapter', 'createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])', '1']
Removed row: ['org.picocontainer.behaviors.AbstractBehaviorFactory:', 'void', 'accept(org.picocontainer.PicoVisitor)', '1']
Removed row: ['org.picocontainer.behaviors.AbstractBehaviorFactory:', 'void', 'verify(org.picocontainer.PicoContainer)', '1']
Removed row: ['org.picocontainer.behaviors.HiddenImplementation:', 'java.lang.Object', 'getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)', '2']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'int', 'hashCode()', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'java.lang.Object', 'getComponent(java.lang.Class)', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'java.lang.Object', 'getComponent(java.lang.Class,java.lang.Class)', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'java.lang.Object', 'getComponent(java.lang.Object)', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'java.lang.Object', 'getComponent(java.lang.Object,java.lang.reflect.Type)', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'java.lang.String', 'toString()', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'java.util.Collection', 'getComponentAdapters()', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'java.util.List', 'getComponentAdapters(java.lang.Class)', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'java.util.List', 'getComponentAdapters(java.lang.Class,java.lang.Class)', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'java.util.List', 'getComponents()', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'java.util.List', 'getComponents(java.lang.Class)', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'org.picocontainer.ComponentAdapter', 'getComponentAdapter(java.lang.Class,java.lang.Class)', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'org.picocontainer.ComponentAdapter', 'getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding)', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'org.picocontainer.ComponentAdapter', 'getComponentAdapter(java.lang.Object)', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'org.picocontainer.Converters', 'getConverters()', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'org.picocontainer.PicoContainer', 'getParent()', '1']
Removed row: ['org.picocontainer.containers.ImmutablePicoContainer:', 'void', 'accept(org.picocontainer.PicoVisitor)', '1']
Removed row: ['org.picocontainer.converters.CharacterConverter:', 'java.lang.Character', 'convert(java.lang.String)', '1']
Removed row: ['org.picocontainer.injectors.AbstractInjector:', 'java.lang.Object', 'newInstance(java.lang.reflect.Constructor,java.lang.Object[])', '1']
Removed row: ['org.picocontainer.injectors.AbstractInjector:', 'void', 'checkConcrete()', '2']
Removed row: ['org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException:', 'java.lang.String', 'getMessage()', '1']
Removed row: ['org.picocontainer.injectors.AbstractInjector$NotConcreteRegistrationException:', 'void', '<init>(java.lang.Class)', '1']
Removed row: ['org.picocontainer.injectors.AbstractInjector$UnsatisfiableDependenciesException:', 'void', '<init>(org.picocontainer.ComponentAdapter,java.lang.reflect.Type,java.util.Set,org.picocontainer.PicoContainer)', '1']
Removed row: ['org.picocontainer.injectors.AdaptingInjection$1:', 'java.lang.Object', 'run()', '1']
Removed row: ['org.picocontainer.injectors.AdaptingInjection$2:', 'java.lang.Object', 'run()', '3']
Removed row: ['org.picocontainer.injectors.AnnotatedFieldInjector:', 'boolean', 'isAnnotatedForInjection(java.lang.reflect.Field)', '1']
Removed row: ['org.picocontainer.injectors.AnnotatedFieldInjector:', 'java.lang.Object', 'injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)', '2']
Removed row: ['org.picocontainer.injectors.AnnotatedFieldInjector:', 'java.lang.annotation.Annotation', 'getBinding(java.lang.reflect.Field)', '1']
Removed row: ['org.picocontainer.injectors.AnnotatedFieldInjector:', 'void', 'initializeInjectionMembersAndTypeLists()', '2']
Removed row: ['org.picocontainer.injectors.AnnotatedFieldInjector$1:', 'java.lang.reflect.Field[]', 'run()', '1']
Removed row: ['org.picocontainer.injectors.AnnotatedFieldInjector$2:', 'java.lang.String', 'getName()', '1']
Removed row: ['org.picocontainer.injectors.AnnotatedMethodInjector:', 'boolean', 'isInjectorMethod(java.lang.reflect.Method)', '1']
Removed row: ['org.picocontainer.injectors.AnnotatedMethodInjector:', 'java.lang.Object', 'injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.picocontainer.injectors.ConstructorInjector:', 'java.util.List', 'getSortedMatchingConstructors()', '3']
Removed row: ['org.picocontainer.injectors.ConstructorInjector:', 'org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters', 'getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)', '4']
Removed row: ['org.picocontainer.injectors.ConstructorInjector:', 'void', 'fixGenericParameterTypes(java.lang.reflect.Constructor,java.lang.reflect.Type[])', '1']
Removed row: ['org.picocontainer.injectors.ConstructorInjector$3:', 'java.lang.reflect.Constructor[]', 'run()', '1']
Removed row: ['org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters:', 'java.lang.Object[]', 'getParameterArguments(org.picocontainer.PicoContainer)', '3']
Removed row: ['org.picocontainer.injectors.ConstructorInjector$ResolverKey:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['org.picocontainer.injectors.ConstructorInjector$ResolverKey:', 'int', 'hashCode()', '1']
Removed row: ['org.picocontainer.injectors.IterativeInjector:', 'java.lang.annotation.Annotation', 'getBindings(java.lang.reflect.Method,int)', '1']
Removed row: ['org.picocontainer.injectors.IterativeInjector:', 'void', 'fixGenericParameterTypes(java.lang.reflect.Method,java.lang.reflect.Type[])', '1']
Removed row: ['org.picocontainer.injectors.IterativeInjector:', 'void', 'initializeInjectionMembersAndTypeLists()', '1']
Removed row: ['org.picocontainer.injectors.IterativeInjector$1:', 'java.lang.Object', 'run()', '1']
Removed row: ['org.picocontainer.injectors.IterativeInjector$5:', 'java.lang.Object', 'run()', '1']
Removed row: ['org.picocontainer.injectors.MethodInjector:', 'boolean', 'isNullParamAllowed(java.lang.reflect.AccessibleObject,int)', '1']
Removed row: ['org.picocontainer.injectors.MethodInjector:', 'java.lang.reflect.Method', 'getInjectorMethod()', '1']
Removed row: ['org.picocontainer.injectors.MethodInjector$1:', 'java.lang.Object', 'run(java.lang.Object)', '1']
Removed row: ['org.picocontainer.injectors.PrimitiveMemberChecker:', 'boolean', 'isPrimitiveArgument(java.lang.reflect.AccessibleObject,int)', '4']
Removed row: ['org.picocontainer.injectors.ProviderAdapter:', 'java.lang.reflect.Method', 'getProvideMethod(java.lang.Class)', '1']
Removed row: ['org.picocontainer.injectors.SetterInjector:', 'boolean', 'isInjectorMethod(java.lang.reflect.Method)', '1']
Removed row: ['org.picocontainer.injectors.SetterInjector:', 'java.lang.Object', 'injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.picocontainer.injectors.SetterInjector:', 'java.lang.Object', 'memberInvocationReturn(java.lang.Object,java.lang.reflect.AccessibleObject,java.lang.Object)', '1']
Removed row: ['org.picocontainer.lifecycle.JavaEE5LifecycleStrategy:', 'boolean', 'hasLifecycle(java.lang.Class)', '1']
Removed row: ['org.picocontainer.lifecycle.JavaEE5LifecycleStrategy:', 'void', 'doLifecycleMethod(java.lang.Object,java.lang.Class,boolean)', '1']
Removed row: ['org.picocontainer.parameters.BasicComponentParameter:', 'org.picocontainer.ComponentAdapter', 'noMatchingAdaptersFound(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.NameBinding,java.lang.annotation.Annotation)', '2']
Removed row: ['org.picocontainer.parameters.BasicComponentParameter:', 'org.picocontainer.ComponentAdapter', 'resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)', '3']
Removed row: ['org.picocontainer.parameters.BasicComponentParameter:', 'org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException', 'tooManyMatchingAdaptersFound(java.lang.Class,java.util.List)', '1']
Removed row: ['org.picocontainer.parameters.BasicComponentParameter:', 'void', 'removeExcludedAdapterIfApplicable(java.lang.Object,java.util.List)', '2']
Removed row: ['org.picocontainer.parameters.BasicComponentParameter$1:', 'java.lang.Object', 'resolveInstance()', '2']
Removed row: ['org.picocontainer.parameters.CollectionComponentParameter:', 'java.util.Map', 'getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)', '7']
Removed row: ['org.picocontainer.paranamer.AnnotationParanamer:', 'java.lang.String[]', 'lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)', '7']
Removed row: ['org.picocontainer.paranamer.BytecodeReadingParanamer:', 'java.lang.String[]', 'lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)', '5']
Removed row: ['org.picocontainer.paranamer.DefaultParanamer:', 'java.lang.String[]', 'getParameterNames(java.lang.Class,java.lang.String,java.lang.String)', '2']
Removed row: ['org.picocontainer.paranamer.DefaultParanamer:', 'java.lang.String[]', 'lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)', '5']
Removed row: ['org.scannotation.AnnotationDB:', 'void', 'scanClass(javassist.bytecode.ClassFile)', '2']
Removed row: ['org.scannotation.AnnotationDB:', 'void', 'scanFields(javassist.bytecode.ClassFile)', '4']
Removed row: ['org.scannotation.AnnotationDB:', 'void', 'scanMethods(javassist.bytecode.ClassFile)', '10']
Removed row: ['org.springframework.aop.config.AopConfigUtils:', 'int', 'findPriorityForClass(java.lang.String)', '1']
Removed row: ['org.springframework.aop.support.AopUtils:', 'boolean', 'isCglibProxy(java.lang.Object)', '1']
Removed row: ['org.springframework.aop.support.AopUtils:', 'java.lang.Class', 'getTargetClass(java.lang.Object)', '3']
Removed row: ['org.springframework.beans.BeanInstantiationException:', 'void', '<init>(java.lang.Class,java.lang.String,java.lang.Throwable)', '1']
Removed row: ['org.springframework.beans.BeanMetadataAttribute:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.springframework.beans.BeanMetadataAttribute:', 'int', 'hashCode()', '1']
Removed row: ['org.springframework.beans.BeanUtils:', 'boolean', 'isSimpleProperty(java.lang.Class)', '2']
Removed row: ['org.springframework.beans.BeanUtils:', 'boolean', 'isSimpleValueType(java.lang.Class)', '5']
Removed row: ['org.springframework.beans.BeanUtils:', 'java.beans.PropertyEditor', 'findEditorByConvention(java.lang.Class)', '4']
Removed row: ['org.springframework.beans.BeanUtils:', 'java.lang.Object', 'instantiateClass(java.lang.reflect.Constructor,java.lang.Object[])', '5']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'java.lang.Class', 'getPropertyType(java.lang.String)', '1']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'java.lang.Class', 'getRootClass()', '1']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'java.lang.Class', 'getWrappedClass()', '1']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'java.lang.Object', 'getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)', '10']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'java.lang.Object', 'growArrayIfNecessary(java.lang.Object,int,java.lang.String)', '1']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'java.lang.Object', 'newValue(java.lang.Class,java.lang.String)', '4']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'java.lang.String', 'getFinalPath(org.springframework.beans.BeanWrapper,java.lang.String)', '1']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'org.springframework.beans.BeanWrapperImpl', 'getBeanWrapperForPropertyPath(java.lang.String)', '2']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder', 'getPropertyNameTokens(java.lang.String)', '4']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'void', 'growCollectionIfNecessary(java.util.Collection,int,java.lang.String,java.beans.PropertyDescriptor,int)', '3']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'void', 'setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)', '34']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'void', 'setPropertyValue(org.springframework.beans.PropertyValue)', '2']
Removed row: ['org.springframework.beans.BeanWrapperImpl:', 'void', 'setWrappedInstance(java.lang.Object,java.lang.String,java.lang.Object)', '1']
Removed row: ['org.springframework.beans.BeanWrapperImpl$1:', 'java.lang.Object', 'run()', '1']
Removed row: ['org.springframework.beans.BeanWrapperImpl$2:', 'java.lang.Object', 'run()', '1']
Removed row: ['org.springframework.beans.BeanWrapperImpl$3:', 'java.lang.Object', 'run()', '1']
Removed row: ['org.springframework.beans.BeanWrapperImpl$4:', 'java.lang.Object', 'run()', '1']
Removed row: ['org.springframework.beans.BeanWrapperImpl$5:', 'java.lang.Object', 'run()', '1']
Removed row: ['org.springframework.beans.BeanWrapperImpl$6:', 'java.lang.Object', 'run()', '1']
Removed row: ['org.springframework.beans.BeansException:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['org.springframework.beans.CachedIntrospectionResults:', 'java.beans.PropertyDescriptor', 'getPropertyDescriptor(java.lang.String)', '4']
Removed row: ['org.springframework.beans.CachedIntrospectionResults:', 'void', '<init>(java.lang.Class,boolean)', '1']
Removed row: ['org.springframework.beans.GenericTypeAwarePropertyDescriptor:', 'void', '<init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)', '2']
Removed row: ['org.springframework.beans.MutablePropertyValues:', 'org.springframework.beans.MutablePropertyValues', 'addPropertyValue(org.springframework.beans.PropertyValue)', '2']
Removed row: ['org.springframework.beans.MutablePropertyValues:', 'org.springframework.beans.PropertyValue', 'getPropertyValue(java.lang.String)', '2']
Removed row: ['org.springframework.beans.MutablePropertyValues:', 'org.springframework.beans.PropertyValue', 'mergeIfRequired(org.springframework.beans.PropertyValue,org.springframework.beans.PropertyValue)', '3']
Removed row: ['org.springframework.beans.PropertyAccessorUtils:', 'boolean', 'isNestedOrIndexedProperty(java.lang.String)', '2']
Removed row: ['org.springframework.beans.PropertyAccessorUtils:', 'boolean', 'matchesProperty(java.lang.String,java.lang.String)', '3']
Removed row: ['org.springframework.beans.PropertyAccessorUtils:', 'int', 'getNestedPropertySeparatorIndex(java.lang.String,boolean)', '2']
Removed row: ['org.springframework.beans.PropertyAccessorUtils:', 'java.lang.String', 'getPropertyName(java.lang.String)', '3']
Removed row: ['org.springframework.beans.PropertyEditorRegistrySupport:', 'void', 'addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)', '6']
Removed row: ['org.springframework.beans.PropertyMatches:', 'int', 'calculateStringDistance(java.lang.String,java.lang.String)', '7']
Removed row: ['org.springframework.beans.PropertyValue:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.springframework.beans.PropertyValue:', 'int', 'hashCode()', '1']
Removed row: ['org.springframework.beans.PropertyValue:', 'void', '<init>(org.springframework.beans.PropertyValue)', '4']
Removed row: ['org.springframework.beans.PropertyValue:', 'void', '<init>(org.springframework.beans.PropertyValue,java.lang.Object)', '2']
Removed row: ['org.springframework.beans.TypeConverterDelegate:', 'java.lang.Object', 'attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)', '2']
Removed row: ['org.springframework.beans.TypeConverterDelegate:', 'java.lang.Object', 'convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)', '16']
Removed row: ['org.springframework.beans.TypeConverterDelegate:', 'java.lang.Object', 'convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)', '4']
Removed row: ['org.springframework.beans.TypeConverterDelegate:', 'java.lang.Object', 'doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)', '1']
Removed row: ['org.springframework.beans.TypeConverterDelegate:', 'java.util.Collection', 'convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)', '8']
Removed row: ['org.springframework.beans.TypeConverterDelegate:', 'java.util.Map', 'convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)', '10']
Removed row: ['org.springframework.beans.factory.BeanCreationException:', 'boolean', 'contains(java.lang.Class)', '1']
Removed row: ['org.springframework.beans.factory.BeanCreationException:', 'void', 'printStackTrace(java.io.PrintStream)', '1']
Removed row: ['org.springframework.beans.factory.BeanCreationException:', 'void', 'printStackTrace(java.io.PrintWriter)', '1']
Removed row: ['org.springframework.beans.factory.BeanFactoryUtils:', 'boolean', 'isFactoryDereference(java.lang.String)', '1']
Removed row: ['org.springframework.beans.factory.BeanFactoryUtils:', 'java.lang.String', 'transformedBeanName(java.lang.String)', '2']
Removed row: ['org.springframework.beans.factory.BeanNotOfRequiredTypeException:', 'void', '<init>(java.lang.String,java.lang.Class,java.lang.Class)', '1']
Removed row: ['org.springframework.beans.factory.NoSuchBeanDefinitionException:', 'void', '<init>(java.lang.Class,java.lang.String)', '1']
Removed row: ['org.springframework.beans.factory.NoSuchBeanDefinitionException:', 'void', '<init>(java.lang.Class,java.lang.String,java.lang.String)', '1']
Removed row: ['org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver:', 'boolean', 'checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)', '3']
Removed row: ['org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver:', 'boolean', 'isAutowireCandidate(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.config.DependencyDescriptor)', '1']
Removed row: ['org.springframework.beans.factory.config.BeanDefinitionHolder:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.springframework.beans.factory.config.BeanDefinitionHolder:', 'int', 'hashCode()', '1']
Removed row: ['org.springframework.beans.factory.config.ConstructorArgumentValues:', 'org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder', 'getGenericArgumentValue(java.lang.Class,java.lang.String,java.util.Set)', '7']
Removed row: ['org.springframework.beans.factory.config.ConstructorArgumentValues:', 'void', 'addArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)', '1']
Removed row: ['org.springframework.beans.factory.config.ConstructorArgumentValues:', 'void', 'addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)', '9']
Removed row: ['org.springframework.beans.factory.config.ConstructorArgumentValues:', 'void', 'addOrMergeIndexedArgumentValue(java.lang.Integer,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)', '5']
Removed row: ['org.springframework.beans.factory.config.DependencyDescriptor:', 'void', '<init>(org.springframework.core.MethodParameter,boolean,boolean)', '3']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'boolean', 'isExcludedFromDependencyCheck(java.beans.PropertyDescriptor)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'java.lang.Class', 'getTypeForFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])', '4']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'java.lang.Class', 'predictBeanType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'java.lang.Object', 'applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'java.lang.Object', 'applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'java.lang.Object', 'applyBeanPostProcessorsBeforeInstantiation(java.lang.Class,java.lang.String)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'java.lang.Object', 'doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'java.lang.Object', 'getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'java.lang.reflect.Constructor[]', 'determineConstructorsFromBeanPostProcessors(java.lang.Class,java.lang.String)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'org.springframework.beans.BeanWrapper', 'createBeanInstance(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])', '2']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'void', 'applyMergedBeanDefinitionPostProcessors(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'void', 'applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)', '6']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'void', 'invokeAwareMethods(java.lang.String,java.lang.Object)', '3']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'void', 'invokeCustomInitMethod(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)', '2']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'void', 'invokeInitMethods(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory:', 'void', 'populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)', '2']
Removed row: ['org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$5:', 'java.lang.Object', 'run()', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanDefinition:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanDefinition:', 'int', 'getResolvedAutowireMode()', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanDefinition:', 'java.lang.String', 'getBeanClassName()', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanDefinition:', 'java.lang.String', 'getResourceDescription()', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanDefinition:', 'java.lang.String', 'toString()', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanDefinition:', 'org.springframework.beans.factory.config.BeanDefinition', 'getOriginatingBeanDefinition()', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanDefinition:', 'void', '<init>(org.springframework.beans.factory.config.BeanDefinition)', '28']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanDefinition:', 'void', 'overrideFrom(org.springframework.beans.factory.config.BeanDefinition)', '33']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanFactory:', 'boolean', 'isSingleton(java.lang.String)', '2']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanFactory:', 'boolean', 'isTypeMatch(java.lang.String,java.lang.Class)', '9']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanFactory:', 'java.lang.Class', 'getType(java.lang.String)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanFactory:', 'java.lang.Object', 'doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)', '3']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanFactory:', 'java.lang.Object', 'getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanFactory:', 'java.lang.String', 'originalBeanName(java.lang.String)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanFactory:', 'java.lang.String', 'resolveEmbeddedValue(java.lang.String)', '1']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanFactory:', 'java.lang.String[]', 'getAliases(java.lang.String)', '2']
Removed row: ['org.springframework.beans.factory.support.AbstractBeanFactory:', 'org.springframework.beans.factory.support.RootBeanDefinition', 'getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)', '8']
Removed row: ['org.springframework.beans.factory.support.AutowireUtils:', 'boolean', 'isExcludedFromDependencyCheck(java.beans.PropertyDescriptor)', '5']
Removed row: ['org.springframework.beans.factory.support.AutowireUtils:', 'boolean', 'isSetterDefinedInInterface(java.beans.PropertyDescriptor,java.util.Set)', '4']
Removed row: ['org.springframework.beans.factory.support.AutowireUtils:', 'java.lang.Object', 'resolveAutowiringValue(java.lang.Object,java.lang.Class)', '3']
Removed row: ['org.springframework.beans.factory.support.BeanDefinitionValueResolver:', 'java.lang.Class', 'resolveTargetType(org.springframework.beans.factory.config.TypedStringValue)', '3']
Removed row: ['org.springframework.beans.factory.support.BeanDefinitionValueResolver:', 'java.lang.Object', 'evaluate(org.springframework.beans.factory.config.TypedStringValue)', '3']
Removed row: ['org.springframework.beans.factory.support.BeanDefinitionValueResolver:', 'java.lang.Object', 'resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)', '3']
Removed row: ['org.springframework.beans.factory.support.BeanDefinitionValueResolver:', 'java.lang.Object', 'resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)', '3']
Removed row: ['org.springframework.beans.factory.support.BeanDefinitionValueResolver:', 'java.lang.Object', 'resolveValueIfNecessary(java.lang.Object,java.lang.Object)', '7']
Removed row: ['org.springframework.beans.factory.support.BeanDefinitionValueResolver:', 'java.util.List', 'resolveManagedList(java.lang.Object,java.util.List)', '3']
Removed row: ['org.springframework.beans.factory.support.BeanDefinitionValueResolver:', 'java.util.Map', 'resolveManagedMap(java.lang.Object,java.util.Map)', '5']
Removed row: ['org.springframework.beans.factory.support.BeanDefinitionValueResolver:', 'java.util.Set', 'resolveManagedSet(java.lang.Object,java.util.Set)', '2']
Removed row: ['org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibSubclassCreator:', 'java.lang.Object', 'instantiate(java.lang.reflect.Constructor,java.lang.Object[])', '1']
Removed row: ['org.springframework.beans.factory.support.ConstructorResolver:', 'int', 'resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)', '9']
Removed row: ['org.springframework.beans.factory.support.ConstructorResolver:', 'java.lang.Object[]', 'resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])', '3']
Removed row: ['org.springframework.beans.factory.support.ConstructorResolver:', 'org.springframework.beans.BeanWrapper', 'autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])', '4']
Removed row: ['org.springframework.beans.factory.support.ConstructorResolver:', 'org.springframework.beans.BeanWrapper', 'instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])', '10']
Removed row: ['org.springframework.beans.factory.support.ConstructorResolver:', 'org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder', 'createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)', '6']
Removed row: ['org.springframework.beans.factory.support.ConstructorResolver:', 'void', 'resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)', '2']
Removed row: ['org.springframework.beans.factory.support.ConstructorResolver$2:', 'java.lang.reflect.Method[]', 'run()', '1']
Removed row: ['org.springframework.beans.factory.support.DefaultListableBeanFactory:', 'java.lang.Object', 'doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)', '9']
Removed row: ['org.springframework.beans.factory.support.DefaultListableBeanFactory:', 'java.lang.Object', 'resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)', '2']
Removed row: ['org.springframework.beans.factory.support.DefaultListableBeanFactory:', 'java.util.Map', 'findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)', '2']
Removed row: ['org.springframework.beans.factory.support.DefaultListableBeanFactory:', 'void', 'preInstantiateSingletons()', '1']
Removed row: ['org.springframework.beans.factory.support.DefaultListableBeanFactory:', 'void', 'resetBeanDefinition(java.lang.String)', '2']
Removed row: ['org.springframework.beans.factory.support.DefaultListableBeanFactory$2:', 'java.lang.Boolean', 'run()', '1']
Removed row: ['org.springframework.beans.factory.support.DisposableBeanAdapter:', 'java.lang.reflect.Method', 'findDestroyMethod()', '2']
Removed row: ['org.springframework.beans.factory.support.DisposableBeanAdapter:', 'void', 'destroy()', '2']
Removed row: ['org.springframework.beans.factory.support.DisposableBeanAdapter$1:', 'java.lang.Object', 'run()', '1']
Removed row: ['org.springframework.beans.factory.support.FactoryBeanRegistrySupport:', 'java.lang.Class', 'getTypeForFactoryBean(org.springframework.beans.factory.FactoryBean)', '1']
Removed row: ['org.springframework.beans.factory.support.FactoryBeanRegistrySupport:', 'java.lang.Object', 'doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)', '1']
Removed row: ['org.springframework.beans.factory.support.FactoryBeanRegistrySupport:', 'java.lang.Object', 'getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)', '1']
Removed row: ['org.springframework.beans.factory.support.FactoryBeanRegistrySupport:', 'org.springframework.beans.factory.FactoryBean', 'getFactoryBean(java.lang.String,java.lang.Object)', '1']
Removed row: ['org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1:', 'java.lang.Class', 'run()', '1']
Removed row: ['org.springframework.beans.factory.support.FactoryBeanRegistrySupport$2:', 'java.lang.Object', 'run()', '1']
Removed row: ['org.springframework.beans.factory.support.RootBeanDefinition:', 'boolean', 'isFactoryMethod(java.lang.reflect.Method)', '1']
Removed row: ['org.springframework.beans.factory.support.SimpleInstantiationStrategy:', 'java.lang.Object', 'instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)', '2']
Removed row: ['org.springframework.beans.factory.support.SimpleInstantiationStrategy:', 'java.lang.Object', 'instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])', '1']
Removed row: ['org.springframework.beans.factory.support.SimpleInstantiationStrategy$1:', 'java.lang.reflect.Constructor', 'run()', '1']
Removed row: ['org.springframework.beans.propertyeditors.ByteArrayPropertyEditor:', 'void', 'setAsText(java.lang.String)', '1']
Removed row: ['org.springframework.beans.propertyeditors.CharArrayPropertyEditor:', 'void', 'setAsText(java.lang.String)', '1']
Removed row: ['org.springframework.beans.propertyeditors.CharacterEditor:', 'boolean', 'isUnicodeCharacterSequence(java.lang.String)', '2']
Removed row: ['org.springframework.beans.propertyeditors.CharacterEditor:', 'void', 'setAsText(java.lang.String)', '3']
Removed row: ['org.springframework.beans.propertyeditors.CharacterEditor:', 'void', 'setAsUnicode(java.lang.String)', '1']
Removed row: ['org.springframework.beans.propertyeditors.ClassArrayEditor:', 'void', 'setAsText(java.lang.String)', '1']
Removed row: ['org.springframework.beans.propertyeditors.ClassEditor:', 'void', 'setAsText(java.lang.String)', '1']
Removed row: ['org.springframework.beans.propertyeditors.CustomBooleanEditor:', 'void', 'setAsText(java.lang.String)', '1']
Removed row: ['org.springframework.beans.propertyeditors.CustomCollectionEditor:', 'void', 'setValue(java.lang.Object)', '3']
Removed row: ['org.springframework.beans.propertyeditors.CustomMapEditor:', 'void', 'setValue(java.lang.Object)', '4']
Removed row: ['org.springframework.beans.propertyeditors.PropertiesEditor:', 'void', 'setAsText(java.lang.String)', '1']
Removed row: ['org.springframework.beans.propertyeditors.URIEditor:', 'void', 'setAsText(java.lang.String)', '1']
Removed row: ['org.springframework.context.annotation.ClassPathBeanDefinitionScanner:', 'boolean', 'isCompatible(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)', '1']
Removed row: ['org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider:', 'boolean', 'isCandidateComponent(org.springframework.core.type.classreading.MetadataReader)', '2']
Removed row: ['org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider:', 'java.util.Set', 'findCandidateComponents(java.lang.String)', '1']
Removed row: ['org.springframework.context.event.AbstractApplicationEventMulticaster:', 'boolean', 'supportsEvent(org.springframework.context.ApplicationListener,java.lang.Class,java.lang.Class)', '2']
Removed row: ['org.springframework.context.event.GenericApplicationListenerAdapter:', 'boolean', 'supportsEventType(java.lang.Class)', '4']
Removed row: ['org.springframework.context.event.GenericApplicationListenerAdapter:', 'int', 'getOrder()', '1']
Removed row: ['org.springframework.context.event.GenericApplicationListenerAdapter:', 'void', 'onApplicationEvent(org.springframework.context.ApplicationEvent)', '1']
Removed row: ['org.springframework.context.event.SimpleApplicationEventMulticaster:', 'void', 'multicastEvent(org.springframework.context.ApplicationEvent)', '1']
Removed row: ['org.springframework.context.event.SimpleApplicationEventMulticaster$1:', 'void', 'run()', '1']
Removed row: ['org.springframework.context.expression.BeanExpressionContextAccessor:', 'boolean', 'canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)', '1']
Removed row: ['org.springframework.context.expression.BeanExpressionContextAccessor:', 'org.springframework.expression.TypedValue', 'read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)', '1']
Removed row: ['org.springframework.context.expression.BeanFactoryAccessor:', 'boolean', 'canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)', '1']
Removed row: ['org.springframework.context.expression.BeanFactoryAccessor:', 'org.springframework.expression.TypedValue', 'read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)', '1']
Removed row: ['org.springframework.context.expression.MapAccessor:', 'boolean', 'canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)', '1']
Removed row: ['org.springframework.context.expression.MapAccessor:', 'org.springframework.expression.TypedValue', 'read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)', '2']
Removed row: ['org.springframework.context.expression.MapAccessor:', 'void', 'write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)', '1']
Removed row: ['org.springframework.context.support.AbstractApplicationContext:', 'boolean', 'isRunning()', '1']
Removed row: ['org.springframework.context.support.AbstractApplicationContext:', 'void', 'addApplicationListener(org.springframework.context.ApplicationListener)', '1']
Removed row: ['org.springframework.context.support.AbstractApplicationContext:', 'void', 'doClose()', '1']
Removed row: ['org.springframework.context.support.AbstractApplicationContext:', 'void', 'finishRefresh()', '1']
Removed row: ['org.springframework.context.support.AbstractApplicationContext:', 'void', 'initMessageSource()', '2']
Removed row: ['org.springframework.context.support.AbstractApplicationContext:', 'void', 'invokeBeanFactoryPostProcessors(java.util.Collection,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)', '1']
Removed row: ['org.springframework.context.support.AbstractApplicationContext:', 'void', 'invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)', '2']
Removed row: ['org.springframework.context.support.AbstractApplicationContext:', 'void', 'publishEvent(org.springframework.context.ApplicationEvent)', '1']
Removed row: ['org.springframework.context.support.AbstractApplicationContext:', 'void', 'registerListeners()', '2']
Removed row: ['org.springframework.context.support.AbstractApplicationContext:', 'void', 'start()', '1']
Removed row: ['org.springframework.context.support.AbstractApplicationContext:', 'void', 'stop()', '1']
Removed row: ['org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker:', 'java.lang.Object', 'postProcessAfterInitialization(java.lang.Object,java.lang.String)', '1']
Removed row: ['org.springframework.context.support.ApplicationContextAwareProcessor:', 'void', 'invokeAwareInterfaces(java.lang.Object)', '5']
Removed row: ['org.springframework.context.support.DelegatingMessageSource:', 'java.lang.String', 'getMessage(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale)', '1']
Removed row: ['org.springframework.context.support.DelegatingMessageSource:', 'java.lang.String', 'getMessage(java.lang.String,java.lang.Object[],java.util.Locale)', '1']
Removed row: ['org.springframework.context.support.DelegatingMessageSource:', 'java.lang.String', 'getMessage(org.springframework.context.MessageSourceResolvable,java.util.Locale)', '1']
Removed row: ['org.springframework.context.weaving.LoadTimeWeaverAwareProcessor:', 'java.lang.Object', 'postProcessBeforeInitialization(java.lang.Object,java.lang.String)', '1']
Removed row: ['org.springframework.core.AttributeAccessorSupport:', 'void', 'copyAttributesFrom(org.springframework.core.AttributeAccessor)', '2']
Removed row: ['org.springframework.core.BridgeMethodResolver:', 'boolean', 'isBridgedCandidateFor(java.lang.reflect.Method,java.lang.reflect.Method)', '6']
Removed row: ['org.springframework.core.BridgeMethodResolver:', 'boolean', 'isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)', '3']
Removed row: ['org.springframework.core.BridgeMethodResolver:', 'java.lang.reflect.Method', 'findBridgedMethod(java.lang.reflect.Method)', '2']
Removed row: ['org.springframework.core.BridgeMethodResolver:', 'java.lang.reflect.Method', 'findGenericDeclaration(java.lang.reflect.Method)', '2']
Removed row: ['org.springframework.core.BridgeMethodResolver:', 'java.lang.reflect.Method', 'searchCandidates(java.util.List,java.lang.reflect.Method)', '3']
Removed row: ['org.springframework.core.BridgeMethodResolver:', 'java.lang.reflect.Method', 'searchForMatch(java.lang.Class,java.lang.reflect.Method)', '2']
Removed row: ['org.springframework.core.CollectionFactory:', 'java.util.Collection', 'createApproximateCollection(java.lang.Object,int)', '1']
Removed row: ['org.springframework.core.CollectionFactory:', 'java.util.Collection', 'createCollection(java.lang.Class,int)', '6']
Removed row: ['org.springframework.core.CollectionFactory:', 'java.util.Map', 'createApproximateMap(java.lang.Object,int)', '1']
Removed row: ['org.springframework.core.CollectionFactory:', 'java.util.Map', 'createMap(java.lang.Class,int)', '6']
Removed row: ['org.springframework.core.GenericCollectionTypeResolver:', 'java.lang.Class', 'extractTypeFromClass(org.springframework.core.MethodParameter,java.lang.Class,java.lang.Class,int,int,int)', '5']
Removed row: ['org.springframework.core.GenericCollectionTypeResolver:', 'java.lang.Class', 'extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)', '7']
Removed row: ['org.springframework.core.GenericCollectionTypeResolver:', 'java.lang.Class', 'getGenericReturnType(java.lang.reflect.Method,java.lang.Class,int,int)', '1']
Removed row: ['org.springframework.core.GenericTypeResolver:', 'java.lang.Class', 'extractClass(java.lang.Class,java.lang.reflect.Type)', '2']
Removed row: ['org.springframework.core.GenericTypeResolver:', 'java.lang.Class', 'resolveReturnType(java.lang.reflect.Method,java.lang.Class)', '2']
Removed row: ['org.springframework.core.GenericTypeResolver:', 'java.lang.reflect.Type', 'extractBoundForTypeVariable(java.lang.reflect.TypeVariable)', '1']
Removed row: ['org.springframework.core.GenericTypeResolver:', 'java.lang.reflect.Type', 'getRawType(java.lang.reflect.Type,java.util.Map)', '1']
Removed row: ['org.springframework.core.GenericTypeResolver:', 'java.lang.reflect.Type', 'getTargetType(org.springframework.core.MethodParameter)', '3']
Removed row: ['org.springframework.core.LocalVariableTableParameterNameDiscoverer:', 'java.lang.String[]', 'getParameterNames(java.lang.reflect.Constructor)', '1']
Removed row: ['org.springframework.core.LocalVariableTableParameterNameDiscoverer:', 'java.lang.String[]', 'getParameterNames(java.lang.reflect.Method)', '1']
Removed row: ['org.springframework.core.MethodParameter:', 'java.lang.Class', 'getDeclaringClass()', '2']
Removed row: ['org.springframework.core.MethodParameter:', 'java.lang.Class', 'getParameterType()', '3']
Removed row: ['org.springframework.core.MethodParameter:', 'java.lang.annotation.Annotation', 'getMethodAnnotation(java.lang.Class)', '2']
Removed row: ['org.springframework.core.MethodParameter:', 'java.lang.annotation.Annotation[]', 'getMethodAnnotations()', '2']
Removed row: ['org.springframework.core.MethodParameter:', 'java.lang.annotation.Annotation[]', 'getParameterAnnotations()', '2']
Removed row: ['org.springframework.core.MethodParameter:', 'java.lang.reflect.Type', 'getGenericParameterType()', '3']
Removed row: ['org.springframework.core.annotation.AnnotationUtils:', 'java.util.Map', 'getAnnotationAttributes(java.lang.annotation.Annotation,boolean)', '1']
Removed row: ['org.springframework.core.convert.TypeDescriptor:', 'boolean', 'equals(java.lang.Object)', '6']
Removed row: ['org.springframework.core.convert.TypeDescriptor:', 'boolean', 'isArray()', '1']
Removed row: ['org.springframework.core.convert.TypeDescriptor:', 'boolean', 'isAssignableTo(org.springframework.core.convert.TypeDescriptor)', '12']
Removed row: ['org.springframework.core.convert.TypeDescriptor:', 'boolean', 'isPrimitive()', '1']
Removed row: ['org.springframework.core.convert.TypeDescriptor:', 'int', 'hashCode()', '1']
Removed row: ['org.springframework.core.convert.TypeDescriptor:', 'java.lang.Class', 'resolveElementType()', '1']
Removed row: ['org.springframework.core.convert.TypeDescriptor:', 'java.lang.Class', 'resolveMapKeyType()', '1']
Removed row: ['org.springframework.core.convert.TypeDescriptor:', 'java.lang.Class', 'resolveMapValueType()', '1']
Removed row: ['org.springframework.core.convert.TypeDescriptor:', 'java.lang.String', 'toString()', '1']
Removed row: ['org.springframework.core.convert.TypeDescriptor:', 'org.springframework.core.convert.TypeDescriptor', 'forObject(java.lang.Object)', '1']
Removed row: ['org.springframework.core.convert.TypeDescriptor:', 'void', '<init>(java.lang.Object)', '1']
Removed row: ['org.springframework.core.convert.support.ArrayToCollectionConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '2']
Removed row: ['org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber:', 'java.lang.Number', 'convert(java.lang.Character)', '1']
Removed row: ['org.springframework.core.convert.support.CollectionToArrayConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '2']
Removed row: ['org.springframework.core.convert.support.CollectionToArrayConverter:', 'java.lang.Object', 'convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '2']
Removed row: ['org.springframework.core.convert.support.CollectionToCollectionConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '2']
Removed row: ['org.springframework.core.convert.support.CollectionToCollectionConverter:', 'java.lang.Object', 'convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '3']
Removed row: ['org.springframework.core.convert.support.CollectionToObjectConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.CollectionToObjectConverter:', 'java.lang.Object', 'convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '2']
Removed row: ['org.springframework.core.convert.support.CollectionToStringConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.CollectionToStringConverter:', 'java.lang.Object', 'convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '2']
Removed row: ['org.springframework.core.convert.support.ConversionUtils:', 'java.lang.Object', 'invokeConverter(org.springframework.core.convert.converter.GenericConverter,java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.GenericConversionService:', 'java.lang.Object', 'convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '2']
Removed row: ['org.springframework.core.convert.support.GenericConversionService:', 'org.springframework.core.convert.converter.GenericConverter', 'findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '13']
Removed row: ['org.springframework.core.convert.support.GenericConversionService:', 'org.springframework.core.convert.converter.GenericConverter', 'getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.GenericConversionService:', 'org.springframework.core.convert.converter.GenericConverter', 'getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)', '13']
Removed row: ['org.springframework.core.convert.support.GenericConversionService:', 'org.springframework.core.convert.converter.GenericConverter', 'matchConverter(org.springframework.core.convert.support.GenericConversionService$MatchableConverters,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.GenericConversionService:', 'void', 'addConverter(org.springframework.core.convert.converter.GenericConverter)', '1']
Removed row: ['org.springframework.core.convert.support.GenericConversionService$ConverterAdapter:', 'java.lang.String', 'toString()', '2']
Removed row: ['org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey:', 'int', 'hashCode()', '2']
Removed row: ['org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter:', 'java.lang.String', 'toString()', '2']
Removed row: ['org.springframework.core.convert.support.GenericConversionService$MatchableConverters:', 'org.springframework.core.convert.converter.GenericConverter', 'matchConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.IdToEntityConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.IdToEntityConverter:', 'java.lang.reflect.Method', 'getFinder(java.lang.Class)', '1']
Removed row: ['org.springframework.core.convert.support.MapToMapConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '4']
Removed row: ['org.springframework.core.convert.support.MapToMapConverter:', 'java.lang.Object', 'convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '5']
Removed row: ['org.springframework.core.convert.support.NumberToCharacterConverter:', 'java.lang.Character', 'convert(java.lang.Number)', '1']
Removed row: ['org.springframework.core.convert.support.ObjectToArrayConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.ObjectToCollectionConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.ObjectToObjectConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '3']
Removed row: ['org.springframework.core.convert.support.ObjectToObjectConverter:', 'java.lang.Object', 'convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '3']
Removed row: ['org.springframework.core.convert.support.ObjectToStringConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '2']
Removed row: ['org.springframework.core.convert.support.ObjectToStringConverter:', 'java.lang.Object', 'convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.PropertiesToStringConverter:', 'java.lang.String', 'convert(java.util.Properties)', '1']
Removed row: ['org.springframework.core.convert.support.PropertyTypeDescriptor:', 'java.lang.annotation.Annotation[]', 'getAnnotations()', '3']
Removed row: ['org.springframework.core.convert.support.StringToArrayConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.StringToArrayConverter:', 'java.lang.Object', 'convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.StringToBooleanConverter:', 'java.lang.Boolean', 'convert(java.lang.String)', '1']
Removed row: ['org.springframework.core.convert.support.StringToCharacterConverter:', 'java.lang.Character', 'convert(java.lang.String)', '4']
Removed row: ['org.springframework.core.convert.support.StringToCollectionConverter:', 'boolean', 'matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.StringToCollectionConverter:', 'java.lang.Object', 'convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum:', 'java.lang.Enum', 'convert(java.lang.String)', '2']
Removed row: ['org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber:', 'java.lang.Number', 'convert(java.lang.String)', '1']
Removed row: ['org.springframework.core.convert.support.StringToPropertiesConverter:', 'java.util.Properties', 'convert(java.lang.String)', '1']
Removed row: ['org.springframework.core.io.support.PathMatchingResourcePatternResolver:', 'boolean', 'isJarResource(org.springframework.core.io.Resource)', '1']
Removed row: ['org.springframework.core.io.support.PathMatchingResourcePatternResolver:', 'java.util.Set', 'doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)', '1']
Removed row: ['org.springframework.core.io.support.PathMatchingResourcePatternResolver:', 'java.util.Set', 'doFindPathMatchingJarResources(org.springframework.core.io.Resource,java.lang.String)', '3']
Removed row: ['org.springframework.core.io.support.PathMatchingResourcePatternResolver:', 'org.springframework.core.io.Resource', 'resolveRootDirResource(org.springframework.core.io.Resource)', '1']
Removed row: ['org.springframework.core.io.support.PathMatchingResourcePatternResolver:', 'org.springframework.core.io.Resource[]', 'findPathMatchingResources(java.lang.String)', '1']
Removed row: ['org.springframework.core.io.support.PathMatchingResourcePatternResolver$VfsResourceMatchingDelegate:', 'java.util.Set', 'findMatchingResources(org.springframework.core.io.Resource,java.lang.String,org.springframework.util.PathMatcher)', '1']
Removed row: ['org.springframework.core.io.support.ResourceArrayPropertyEditor:', 'void', 'setValue(java.lang.Object)', '1']
Removed row: ['org.springframework.core.style.DefaultValueStyler:', 'java.lang.String', 'style(java.lang.Object)', '3']
Removed row: ['org.springframework.core.style.DefaultValueStyler:', 'java.lang.String', 'style(java.util.Collection)', '3']
Removed row: ['org.springframework.core.style.DefaultValueStyler:', 'java.lang.String', 'style(java.util.Map$Entry)', '2']
Removed row: ['org.springframework.core.style.DefaultValueStyler:', 'java.lang.String', 'style(java.util.Map)', '3']
Removed row: ['org.springframework.core.style.DefaultValueStyler:', 'java.lang.String', 'styleArray(java.lang.Object[])', '1']
Removed row: ['org.springframework.core.type.StandardAnnotationMetadata:', 'boolean', 'hasAnnotation(java.lang.String)', '2']
Removed row: ['org.springframework.core.type.StandardAnnotationMetadata:', 'boolean', 'isAnnotated(java.lang.String)', '3']
Removed row: ['org.springframework.core.type.StandardAnnotationMetadata:', 'java.util.Map', 'getAnnotationAttributes(java.lang.String,boolean)', '3']
Removed row: ['org.springframework.core.type.StandardAnnotationMetadata:', 'java.util.Set', 'getAnnotationTypes()', '2']
Removed row: ['org.springframework.core.type.StandardAnnotationMetadata:', 'java.util.Set', 'getMetaAnnotationTypes(java.lang.String)', '3']
Removed row: ['org.springframework.core.type.StandardClassMetadata:', 'boolean', 'hasEnclosingClass()', '1']
Removed row: ['org.springframework.core.type.StandardClassMetadata:', 'boolean', 'hasSuperClass()', '1']
Removed row: ['org.springframework.core.type.StandardClassMetadata:', 'boolean', 'isAbstract()', '1']
Removed row: ['org.springframework.core.type.StandardClassMetadata:', 'boolean', 'isFinal()', '1']
Removed row: ['org.springframework.core.type.StandardClassMetadata:', 'boolean', 'isIndependent()', '2']
Removed row: ['org.springframework.core.type.StandardClassMetadata:', 'boolean', 'isInterface()', '1']
Removed row: ['org.springframework.core.type.StandardClassMetadata:', 'java.lang.String', 'getClassName()', '1']
Removed row: ['org.springframework.core.type.StandardClassMetadata:', 'java.lang.String', 'getEnclosingClassName()', '1']
Removed row: ['org.springframework.core.type.StandardClassMetadata:', 'java.lang.String', 'getSuperClassName()', '1']
Removed row: ['org.springframework.core.type.StandardClassMetadata:', 'java.lang.String[]', 'getInterfaceNames()', '1']
Removed row: ['org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor:', 'void', 'visitEnd()', '4']
Removed row: ['org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor:', 'java.util.Map', 'getAnnotationAttributes(java.lang.String,boolean)', '4']
Removed row: ['org.springframework.core.type.classreading.SimpleMetadataReader:', 'void', '<init>(org.springframework.core.io.Resource,java.lang.ClassLoader)', '1']
Removed row: ['org.springframework.expression.common.ExpressionUtils:', 'boolean', 'toBoolean(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)', '3']
Removed row: ['org.springframework.expression.common.ExpressionUtils:', 'byte', 'toByte(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)', '3']
Removed row: ['org.springframework.expression.common.ExpressionUtils:', 'char', 'toChar(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)', '3']
Removed row: ['org.springframework.expression.common.ExpressionUtils:', 'double', 'toDouble(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)', '3']
Removed row: ['org.springframework.expression.common.ExpressionUtils:', 'float', 'toFloat(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)', '3']
Removed row: ['org.springframework.expression.common.ExpressionUtils:', 'int', 'toInt(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)', '3']
Removed row: ['org.springframework.expression.common.ExpressionUtils:', 'java.lang.Object', 'convertTypedValue(org.springframework.expression.EvaluationContext,org.springframework.expression.TypedValue,java.lang.Class)', '2']
Removed row: ['org.springframework.expression.common.ExpressionUtils:', 'long', 'toLong(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)', '3']
Removed row: ['org.springframework.expression.common.ExpressionUtils:', 'short', 'toShort(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)', '3']
Removed row: ['org.springframework.expression.common.TemplateAwareExpressionParser:', 'boolean', 'isSuffixHere(java.lang.String,int,java.lang.String)', '2']
Removed row: ['org.springframework.expression.common.TemplateAwareExpressionParser:', 'int', 'skipToCorrectEndSuffix(java.lang.String,java.lang.String,java.lang.String,int)', '5']
Removed row: ['org.springframework.expression.common.TemplateAwareExpressionParser:', 'org.springframework.expression.Expression', 'parseTemplate(java.lang.String,org.springframework.expression.ParserContext)', '1']
Removed row: ['org.springframework.expression.common.TemplateAwareExpressionParser:', 'org.springframework.expression.Expression[]', 'parseExpressions(java.lang.String,org.springframework.expression.ParserContext)', '7']
Removed row: ['org.springframework.expression.spel.ExpressionState:', 'java.lang.Object', 'convertValue(org.springframework.expression.TypedValue,org.springframework.core.convert.TypeDescriptor)', '2']
Removed row: ['org.springframework.expression.spel.ExpressionState:', 'org.springframework.expression.TypedValue', 'operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)', '2']
Removed row: ['org.springframework.expression.spel.ast.Assign:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '1']
Removed row: ['org.springframework.expression.spel.ast.AstUtils:', 'java.util.List', 'getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)', '1']
Removed row: ['org.springframework.expression.spel.ast.ConstructorReference:', 'org.springframework.expression.ConstructorExecutor', 'findExecutorForConstructor(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)', '1']
Removed row: ['org.springframework.expression.spel.ast.ConstructorReference:', 'org.springframework.expression.TypedValue', 'createArray(org.springframework.expression.spel.ExpressionState)', '1']
Removed row: ['org.springframework.expression.spel.ast.ConstructorReference:', 'org.springframework.expression.TypedValue', 'createNewInstance(org.springframework.expression.spel.ExpressionState)', '3']
Removed row: ['org.springframework.expression.spel.ast.Elvis:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '4']
Removed row: ['org.springframework.expression.spel.ast.FormatHelper:', 'java.lang.String', 'formatClassNameForMessage(java.lang.Class)', '3']
Removed row: ['org.springframework.expression.spel.ast.FormatHelper:', 'java.lang.String', 'formatMethodForMessage(java.lang.String,java.util.List)', '1']
Removed row: ['org.springframework.expression.spel.ast.FunctionReference:', 'java.lang.Object[]', 'getArguments(org.springframework.expression.spel.ExpressionState)', '1']
Removed row: ['org.springframework.expression.spel.ast.FunctionReference:', 'org.springframework.expression.TypedValue', 'executeFunctionJLRMethod(org.springframework.expression.spel.ExpressionState,java.lang.reflect.Method)', '10']
Removed row: ['org.springframework.expression.spel.ast.Indexer:', 'boolean', 'growCollection(org.springframework.expression.spel.ExpressionState,java.lang.Class,int,java.util.Collection)', '5']
Removed row: ['org.springframework.expression.spel.ast.Indexer:', 'java.lang.Object', 'accessArrayElement(java.lang.Object,int)', '1']
Removed row: ['org.springframework.expression.spel.ast.Indexer:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '21']
Removed row: ['org.springframework.expression.spel.ast.Indexer:', 'void', 'setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)', '8']
Removed row: ['org.springframework.expression.spel.ast.Indexer:', 'void', 'setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)', '20']
Removed row: ['org.springframework.expression.spel.ast.Literal:', 'java.lang.String', 'toString()', '1']
Removed row: ['org.springframework.expression.spel.ast.MethodReference:', 'org.springframework.expression.MethodExecutor', 'findAccessorForMethod(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)', '4']
Removed row: ['org.springframework.expression.spel.ast.MethodReference:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '6']
Removed row: ['org.springframework.expression.spel.ast.MethodReference:', 'void', 'throwSimpleExceptionIfPossible(org.springframework.expression.spel.ExpressionState,org.springframework.expression.AccessException)', '2']
Removed row: ['org.springframework.expression.spel.ast.OpAnd:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '2']
Removed row: ['org.springframework.expression.spel.ast.OpDivide:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '8']
Removed row: ['org.springframework.expression.spel.ast.OpEQ:', 'org.springframework.expression.spel.support.BooleanTypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '8']
Removed row: ['org.springframework.expression.spel.ast.OpGE:', 'org.springframework.expression.spel.support.BooleanTypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '8']
Removed row: ['org.springframework.expression.spel.ast.OpGT:', 'org.springframework.expression.spel.support.BooleanTypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '8']
Removed row: ['org.springframework.expression.spel.ast.OpLE:', 'org.springframework.expression.spel.support.BooleanTypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '8']
Removed row: ['org.springframework.expression.spel.ast.OpLT:', 'org.springframework.expression.spel.support.BooleanTypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '8']
Removed row: ['org.springframework.expression.spel.ast.OpMinus:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '15']
Removed row: ['org.springframework.expression.spel.ast.OpModulus:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '8']
Removed row: ['org.springframework.expression.spel.ast.OpMultiply:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '9']
Removed row: ['org.springframework.expression.spel.ast.OpNE:', 'org.springframework.expression.spel.support.BooleanTypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '8']
Removed row: ['org.springframework.expression.spel.ast.OpOr:', 'org.springframework.expression.spel.support.BooleanTypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '2']
Removed row: ['org.springframework.expression.spel.ast.OpPlus:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '14']
Removed row: ['org.springframework.expression.spel.ast.OperatorBetween:', 'org.springframework.expression.spel.support.BooleanTypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '5']
Removed row: ['org.springframework.expression.spel.ast.OperatorInstanceof:', 'org.springframework.expression.spel.support.BooleanTypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '5']
Removed row: ['org.springframework.expression.spel.ast.OperatorMatches:', 'org.springframework.expression.spel.support.BooleanTypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '1']
Removed row: ['org.springframework.expression.spel.ast.OperatorNot:', 'org.springframework.expression.spel.support.BooleanTypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '1']
Removed row: ['org.springframework.expression.spel.ast.OperatorPower:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '8']
Removed row: ['org.springframework.expression.spel.ast.Projection:', 'java.lang.Class', 'determineCommonType(java.lang.Class,java.lang.Class)', '2']
Removed row: ['org.springframework.expression.spel.ast.Projection:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '10']
Removed row: ['org.springframework.expression.spel.ast.PropertyOrFieldReference:', 'boolean', 'isWritableProperty(java.lang.String,org.springframework.expression.spel.ExpressionState)', '2']
Removed row: ['org.springframework.expression.spel.ast.PropertyOrFieldReference:', 'java.util.List', 'getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)', '1']
Removed row: ['org.springframework.expression.spel.ast.PropertyOrFieldReference:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '4']
Removed row: ['org.springframework.expression.spel.ast.PropertyOrFieldReference:', 'org.springframework.expression.TypedValue', 'readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)', '11']
Removed row: ['org.springframework.expression.spel.ast.PropertyOrFieldReference:', 'void', 'writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)', '9']
Removed row: ['org.springframework.expression.spel.ast.QualifiedIdentifier:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '3']
Removed row: ['org.springframework.expression.spel.ast.Selection:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '19']
Removed row: ['org.springframework.expression.spel.ast.SpelNodeImpl:', 'java.lang.Class', 'getObjectClass(java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.ast.SpelNodeImpl:', 'java.lang.Object', 'getValue(org.springframework.expression.spel.ExpressionState)', '1']
Removed row: ['org.springframework.expression.spel.ast.SpelNodeImpl:', 'java.lang.Object', 'getValue(org.springframework.expression.spel.ExpressionState,java.lang.Class)', '2']
Removed row: ['org.springframework.expression.spel.ast.Ternary:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '1']
Removed row: ['org.springframework.expression.spel.ast.TypeCode:', 'org.springframework.expression.spel.ast.TypeCode', 'forName(java.lang.String)', '1']
Removed row: ['org.springframework.expression.spel.ast.TypeReference:', 'org.springframework.expression.TypedValue', 'getValueInternal(org.springframework.expression.spel.ExpressionState)', '4']
Removed row: ['org.springframework.expression.spel.standard.InternalSpelExpressionParser:', 'boolean', 'maybeEatBeanReference()', '1']
Removed row: ['org.springframework.expression.spel.standard.InternalSpelExpressionParser:', 'boolean', 'maybeEatNullReference()', '1']
Removed row: ['org.springframework.expression.spel.standard.InternalSpelExpressionParser:', 'boolean', 'maybeEatTypeReference()', '1']
Removed row: ['org.springframework.expression.spel.standard.InternalSpelExpressionParser:', 'boolean', 'peekIdentifierToken(java.lang.String)', '1']
Removed row: ['org.springframework.expression.spel.standard.InternalSpelExpressionParser:', 'int', 'positionOf(org.springframework.expression.spel.standard.Token)', '1']
Removed row: ['org.springframework.expression.spel.standard.InternalSpelExpressionParser:', 'java.lang.String', 'toString(org.springframework.expression.spel.standard.Token)', '2']
Removed row: ['org.springframework.expression.spel.standard.InternalSpelExpressionParser:', 'org.springframework.expression.spel.ast.SpelNodeImpl', 'eatPossiblyQualifiedId()', '3']
Removed row: ['org.springframework.expression.spel.standard.InternalSpelExpressionParser:', 'org.springframework.expression.spel.ast.SpelNodeImpl', 'eatPrimaryExpression()', '2']
Removed row: ['org.springframework.expression.spel.standard.InternalSpelExpressionParser:', 'org.springframework.expression.spel.ast.SpelNodeImpl', 'eatRelationalExpression()', '1']
Removed row: ['org.springframework.expression.spel.standard.InternalSpelExpressionParser:', 'org.springframework.expression.spel.standard.Token', 'eatToken(org.springframework.expression.spel.standard.TokenKind)', '2']
Removed row: ['org.springframework.expression.spel.standard.InternalSpelExpressionParser:', 'org.springframework.expression.spel.standard.Token', 'maybeEatRelationalOperator()', '6']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'boolean', 'isWritable(java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'boolean', 'isWritable(org.springframework.expression.EvaluationContext)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'boolean', 'isWritable(org.springframework.expression.EvaluationContext,java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.Class', 'getValueType()', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.Class', 'getValueType(java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.Class', 'getValueType(org.springframework.expression.EvaluationContext)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.Class', 'getValueType(org.springframework.expression.EvaluationContext,java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.Object', 'getValue()', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.Object', 'getValue(java.lang.Class)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.Object', 'getValue(java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.Object', 'getValue(java.lang.Object,java.lang.Class)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.Object', 'getValue(org.springframework.expression.EvaluationContext)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.Object', 'getValue(org.springframework.expression.EvaluationContext,java.lang.Class)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.Object', 'getValue(org.springframework.expression.EvaluationContext,java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.Object', 'getValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'java.lang.String', 'toStringAST()', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'org.springframework.core.convert.TypeDescriptor', 'getValueTypeDescriptor()', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'org.springframework.core.convert.TypeDescriptor', 'getValueTypeDescriptor(java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'org.springframework.core.convert.TypeDescriptor', 'getValueTypeDescriptor(org.springframework.expression.EvaluationContext)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'org.springframework.core.convert.TypeDescriptor', 'getValueTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'void', 'setValue(java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'void', 'setValue(org.springframework.expression.EvaluationContext,java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.standard.SpelExpression:', 'void', 'setValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.standard.Tokenizer:', 'void', 'pushHexIntToken(char[],boolean,int,int)', '2']
Removed row: ['org.springframework.expression.spel.support.ReflectionHelper:', 'org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo', 'compareArguments(java.util.List,java.util.List,org.springframework.expression.TypeConverter)', '4']
Removed row: ['org.springframework.expression.spel.support.ReflectionHelper:', 'org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo', 'compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)', '10']
Removed row: ['org.springframework.expression.spel.support.ReflectionHelper:', 'void', 'convertAllArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.reflect.Method)', '6']
Removed row: ['org.springframework.expression.spel.support.ReflectionHelper:', 'void', 'convertArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.Object,int[],java.lang.Integer)', '1']
Removed row: ['org.springframework.expression.spel.support.ReflectiveMethodResolver:', 'org.springframework.expression.MethodExecutor', 'resolve(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.util.List)', '2']
Removed row: ['org.springframework.expression.spel.support.ReflectivePropertyAccessor:', 'boolean', 'canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)', '3']
Removed row: ['org.springframework.expression.spel.support.ReflectivePropertyAccessor:', 'boolean', 'canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)', '1']
Removed row: ['org.springframework.expression.spel.support.ReflectivePropertyAccessor:', 'java.lang.reflect.Field', 'findField(java.lang.String,java.lang.Class,boolean)', '1']
Removed row: ['org.springframework.expression.spel.support.ReflectivePropertyAccessor:', 'java.lang.reflect.Method', 'findGetterForProperty(java.lang.String,java.lang.Class,boolean)', '1']
Removed row: ['org.springframework.expression.spel.support.ReflectivePropertyAccessor:', 'java.lang.reflect.Method', 'findSetterForProperty(java.lang.String,java.lang.Class,boolean)', '1']
Removed row: ['org.springframework.expression.spel.support.ReflectivePropertyAccessor:', 'org.springframework.core.convert.TypeDescriptor', 'getTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)', '3']
Removed row: ['org.springframework.expression.spel.support.ReflectivePropertyAccessor:', 'org.springframework.expression.PropertyAccessor', 'createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)', '2']
Removed row: ['org.springframework.expression.spel.support.ReflectivePropertyAccessor:', 'org.springframework.expression.TypedValue', 'read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)', '3']
Removed row: ['org.springframework.expression.spel.support.ReflectivePropertyAccessor:', 'void', 'write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)', '1']
Removed row: ['org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey:', 'boolean', 'equals(java.lang.Object)', '2']
Removed row: ['org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey:', 'int', 'hashCode()', '2']
Removed row: ['org.springframework.expression.spel.support.StandardTypeComparator:', 'int', 'compare(java.lang.Object,java.lang.Object)', '13']
Removed row: ['org.springframework.expression.spel.support.StandardTypeConverter:', 'boolean', 'canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.expression.spel.support.StandardTypeConverter:', 'java.lang.Object', 'convertValue(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)', '1']
Removed row: ['org.springframework.ui.context.support.UiApplicationContextUtils:', 'org.springframework.ui.context.ThemeSource', 'initThemeSource(org.springframework.context.ApplicationContext)', '2']
Removed row: ['org.springframework.util.AntPathMatcher:', 'boolean', 'doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)', '6']
Removed row: ['org.springframework.util.AntPathStringMatcher:', 'java.lang.String', 'quote(java.lang.String,int,int)', '1']
Removed row: ['org.springframework.util.AntPathStringMatcher:', 'java.util.regex.Pattern', 'createPattern(java.lang.String)', '1']
Removed row: ['org.springframework.util.ClassUtils:', 'boolean', 'isAssignable(java.lang.Class,java.lang.Class)', '4']
Removed row: ['org.springframework.util.ClassUtils:', 'boolean', 'isAssignableValue(java.lang.Class,java.lang.Object)', '2']
Removed row: ['org.springframework.util.ClassUtils:', 'boolean', 'isPrimitiveOrWrapper(java.lang.Class)', '1']
Removed row: ['org.springframework.util.ClassUtils:', 'int', 'getMethodCountForName(java.lang.Class,java.lang.String)', '4']
Removed row: ['org.springframework.util.ClassUtils:', 'java.lang.Class', 'forName(java.lang.String,java.lang.ClassLoader)', '12']
Removed row: ['org.springframework.util.ClassUtils:', 'java.lang.Class', 'getUserClass(java.lang.Class)', '2']
Removed row: ['org.springframework.util.ClassUtils:', 'java.lang.Class', 'resolvePrimitiveClassName(java.lang.String)', '1']
Removed row: ['org.springframework.util.ClassUtils:', 'java.lang.Class', 'resolvePrimitiveIfNecessary(java.lang.Class)', '1']
Removed row: ['org.springframework.util.ClassUtils:', 'java.lang.String', 'getDescriptiveType(java.lang.Object)', '1']
Removed row: ['org.springframework.util.ClassUtils:', 'java.lang.String', 'getQualifiedName(java.lang.Class)', '2']
Removed row: ['org.springframework.util.ClassUtils:', 'java.lang.String', 'getQualifiedNameForArray(java.lang.Class)', '3']
Removed row: ['org.springframework.util.ClassUtils:', 'java.lang.String', 'getShortName(java.lang.String)', '4']
Removed row: ['org.springframework.util.ClassUtils:', 'java.lang.reflect.Constructor', 'getConstructorIfAvailable(java.lang.Class,java.lang.Class[])', '1']
Removed row: ['org.springframework.util.ClassUtils:', 'java.lang.reflect.Method', 'getStaticMethod(java.lang.Class,java.lang.String,java.lang.Class[])', '1']
Removed row: ['org.springframework.util.CollectionUtils:', 'boolean', 'isEmpty(java.util.Collection)', '1']
Removed row: ['org.springframework.util.CollectionUtils:', 'java.lang.Class', 'findCommonElementType(java.util.Collection)', '3']
Removed row: ['org.springframework.util.NumberUtils:', 'boolean', 'isHexNumber(java.lang.String)', '4']
Removed row: ['org.springframework.util.NumberUtils:', 'java.lang.Number', 'convertNumberToTargetClass(java.lang.Number,java.lang.Class)', '23']
Removed row: ['org.springframework.util.NumberUtils:', 'java.lang.Number', 'parseNumber(java.lang.String,java.lang.Class)', '10']
Removed row: ['org.springframework.util.NumberUtils:', 'java.math.BigInteger', 'decodeBigInteger(java.lang.String)', '7']
Removed row: ['org.springframework.util.NumberUtils:', 'void', 'raiseOverflowException(java.lang.Number,java.lang.Class)', '2']
Removed row: ['org.springframework.util.ObjectUtils:', 'boolean', 'isArray(java.lang.Object)', '1']
Removed row: ['org.springframework.util.ObjectUtils:', 'boolean', 'nullSafeEquals(java.lang.Object,java.lang.Object)', '3']
Removed row: ['org.springframework.util.ObjectUtils:', 'int', 'nullSafeHashCode(java.lang.Object)', '2']
Removed row: ['org.springframework.util.ObjectUtils:', 'java.lang.Object[]', 'toObjectArray(java.lang.Object)', '1']
Removed row: ['org.springframework.util.ObjectUtils:', 'java.lang.String', 'identityToString(java.lang.Object)', '1']
Removed row: ['org.springframework.util.ObjectUtils:', 'java.lang.String', 'nullSafeClassName(java.lang.Object)', '1']
Removed row: ['org.springframework.util.ObjectUtils:', 'java.lang.String', 'nullSafeToString(java.lang.Object)', '1']
Removed row: ['org.springframework.util.PropertyPlaceholderHelper:', 'java.lang.String', 'parseStringValue(java.lang.String,org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver,java.util.Set)', '1']
Removed row: ['org.springframework.util.ReflectionUtils:', 'java.lang.reflect.Method', 'findMethod(java.lang.Class,java.lang.String,java.lang.Class[])', '4']
Removed row: ['org.springframework.util.ReflectionUtils:', 'void', 'doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback,org.springframework.util.ReflectionUtils$MethodFilter)', '5']
Removed row: ['org.springframework.util.ReflectionUtils:', 'void', 'makeAccessible(java.lang.reflect.Constructor)', '4']
Removed row: ['org.springframework.util.ReflectionUtils:', 'void', 'makeAccessible(java.lang.reflect.Method)', '4']
Removed row: ['org.springframework.util.ResourceUtils:', 'boolean', 'isUrl(java.lang.String)', '1']
Removed row: ['org.springframework.util.StringUtils:', 'boolean', 'hasLength(java.lang.CharSequence)', '1']
Removed row: ['org.springframework.util.StringUtils:', 'boolean', 'hasText(java.lang.CharSequence)', '2']
Removed row: ['org.springframework.util.StringUtils:', 'java.lang.String', 'changeFirstCharacterCase(java.lang.String,boolean)', '5']
Removed row: ['org.springframework.util.StringUtils:', 'java.lang.String[]', 'delimitedListToStringArray(java.lang.String,java.lang.String,java.lang.String)', '7']
Removed row: ['org.springframework.util.StringUtils:', 'java.util.Locale', 'parseLocaleString(java.lang.String)', '4']
Removed row: ['org.springframework.web.context.support.AbstractRefreshableWebApplicationContext:', 'org.springframework.ui.context.Theme', 'getTheme(java.lang.String)', '1']
Removed row: ['org.springframework.web.context.support.ServletContextAwareProcessor:', 'java.lang.Object', 'postProcessBeforeInitialization(java.lang.Object,java.lang.String)', '2']
Removed row: ['org.springframework.web.context.support.ServletContextResource:', 'boolean', 'equals(java.lang.Object)', '1']
Removed row: ['org.springframework.web.context.support.ServletContextResource:', 'boolean', 'exists()', '1']
Removed row: ['org.springframework.web.context.support.ServletContextResource:', 'java.io.InputStream', 'getInputStream()', '1']
Removed row: ['org.springframework.web.context.support.ServletContextResource:', 'java.net.URL', 'getURL()', '1']
Removed row: ['org.springframework.web.context.support.ServletContextResourcePatternResolver:', 'java.util.Set', 'doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)', '3']
Removed row: ['org.springframework.web.context.support.ServletContextResourcePatternResolver:', 'void', 'doRetrieveMatchingServletContextResources(javax.servlet.ServletContext,java.lang.String,java.lang.String,java.util.Set)', '2']
Removed row: ['org.springframework.web.context.support.ServletContextScope:', 'java.lang.Object', 'get(java.lang.String,org.springframework.beans.factory.ObjectFactory)', '2']
Removed row: ['org.springframework.web.context.support.ServletContextScope:', 'java.lang.Object', 'remove(java.lang.String)', '2']
Removed row: ['org.springframework.web.context.support.WebApplicationContextUtils:', 'org.springframework.web.context.WebApplicationContext', 'getWebApplicationContext(javax.servlet.ServletContext,java.lang.String)', '1']
Removed row: ['org.springframework.web.context.support.WebApplicationContextUtils:', 'void', 'registerEnvironmentBeans(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,javax.servlet.ServletContext,javax.servlet.ServletConfig)', '4']
Removed row: ['org.springframework.web.context.support.WebApplicationContextUtils:', 'void', 'registerWebApplicationScopes(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,javax.servlet.ServletContext)', '1']
Removed row: ['org.springframework.web.util.WebUtils:', 'java.lang.String', 'getRealPath(javax.servlet.ServletContext,java.lang.String)', '1']
Removed row: ['org.xmlpull.v1.XmlPullParserFactory:', 'org.xmlpull.v1.XmlPullParser', 'newPullParser()', '2']
Removed row: ['sun.font.AttributeValues:', 'sun.font.AttributeValues', 'merge(java.util.Map,int)', '2']
Removed row: ['sun.misc.ExtensionDependency:', 'java.lang.Boolean', 'addNewExtensionsToClassLoader(sun.misc.Launcher$ExtClassLoader)', '1']
Removed row: ['sun.misc.ObjectInputFilter$Config$Global:', 'void', '<init>(java.lang.String)', '10']
Removed row: ['sun.misc.ProxyGenerator:', 'byte[]', 'generateClassFile()', '2']
Removed row: ['sun.misc.ProxyGenerator:', 'java.util.List', 'computeUniqueCatchList(java.lang.Class[])', '1']
Removed row: ['sun.misc.ProxyGenerator:', 'void', 'checkReturnTypes(java.util.List)', '1']
Removed row: ['sun.misc.ProxyGenerator$ConstantPool:', 'void', 'write(java.io.OutputStream)', '1']
Removed row: ['sun.misc.ProxyGenerator$ProxyMethod:', 'sun.misc.ProxyGenerator$MethodInfo', 'generateMethod()', '1']
Removed row: ['sun.misc.URLClassPath:', 'java.net.URL', 'findResource(java.lang.String,boolean)', '1']
Removed row: ['sun.misc.URLClassPath:', 'java.util.List', 'closeLoaders()', '1']
Removed row: ['sun.misc.URLClassPath:', 'sun.misc.Resource', 'getResource(java.lang.String,boolean)', '1']
Removed row: ['sun.misc.URLClassPath:', 'sun.misc.URLClassPath$Loader', 'getNextLoader(int[],int)', '1']
Removed row: ['sun.misc.URLClassPath$1:', 'boolean', 'next()', '1']
Removed row: ['sun.misc.URLClassPath$2:', 'boolean', 'next()', '1']
Removed row: ['sun.reflect.annotation.AnnotationType:', 'void', '<init>(java.lang.Class)', '7']
Removed row: ['sun.reflect.generics.visitor.Reifier:', 'void', 'visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)', '12']
Removed row: ['sun.security.pkcs.ContentInfo:', 'byte[]', 'getContentBytes()', '1']
Removed row: ['sun.security.pkcs.ContentInfo:', 'byte[]', 'getData()', '1']
Removed row: ['sun.security.pkcs.ContentInfo:', 'void', '<init>(sun.security.util.DerInputStream,boolean)', '2']
Removed row: ['sun.security.pkcs.ContentInfo:', 'void', 'encode(sun.security.util.DerOutputStream)', '1']
Removed row: ['sun.security.pkcs.PKCS7:', 'void', 'parseNetscapeCertChain(sun.security.util.DerValue)', '1']
Removed row: ['sun.security.pkcs.PKCS7:', 'void', 'parseOldSignedData(sun.security.util.DerValue)', '2']
Removed row: ['sun.security.pkcs.PKCS7:', 'void', 'parseSignedData(sun.security.util.DerValue)', '4']
Removed row: ['sun.security.pkcs.PKCS9Attribute:', 'void', '<init>(sun.security.util.DerValue)', '11']
Removed row: ['sun.security.pkcs.SignerInfo:', 'void', '<init>(sun.security.util.DerInputStream,boolean)', '2']
Removed row: ['sun.security.provider.PolicyFile:', 'boolean', 'replacePrincipals(java.util.List,java.security.KeyStore)', '1']
Removed row: ['sun.security.provider.PolicyFile:', 'void', 'addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)', '1']
Removed row: ['sun.security.provider.PolicyFile:', 'void', 'addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)', '3']
Removed row: ['sun.security.provider.PolicyFile:', 'void', 'expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)', '2']
Removed row: ['sun.security.util.AbstractAlgorithmConstraints:', 'java.lang.String[]', 'getAlgorithms(java.lang.String)', '1']
Removed row: ['sun.security.util.AlgorithmDecomposer:', 'java.util.Set', 'decomposeImpl(java.lang.String)', '2']
Removed row: ['sun.security.util.DerIndefLenConverter:', 'void', 'parseTag()', '1']
Removed row: ['sun.security.util.DisabledAlgorithmConstraints$Constraints:', 'boolean', 'permits(java.security.Key)', '1']
Removed row: ['sun.security.util.DisabledAlgorithmConstraints$Constraints:', 'void', '<init>(java.lang.String[])', '1']
Removed row: ['sun.security.util.ManifestEntryVerifier:', 'java.security.CodeSigner[]', 'verify(java.util.Hashtable,java.util.Hashtable)', '3']
Removed row: ['sun.security.util.ManifestEntryVerifier:', 'void', 'setEntry(java.lang.String,java.util.jar.JarEntry)', '3']
Removed row: ['sun.security.util.ManifestEntryVerifier:', 'void', 'update(byte)', '1']
Removed row: ['sun.security.util.ManifestEntryVerifier:', 'void', 'update(byte[],int,int)', '1']
Removed row: ['sun.security.util.SignatureFileVerifier:', 'boolean', 'verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)', '3']
Removed row: ['sun.security.util.SignatureFileVerifier:', 'boolean', 'verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)', '3']
Removed row: ['sun.security.util.SignatureFileVerifier:', 'boolean', 'verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)', '3']
Removed row: ['sun.security.x509.AVA:', 'java.lang.String', 'getEmbeddedHexString(java.util.List)', '1']
Removed row: ['sun.security.x509.CRLExtensions:', 'void', 'encode(java.io.OutputStream,boolean)', '2']
Removed row: ['sun.security.x509.CertificateExtensions:', 'void', 'encode(java.io.OutputStream,boolean)', '2']
Removed row: ['sun.security.x509.EDIPartyName:', 'void', '<init>(sun.security.util.DerValue)', '4']
Removed row: ['sun.security.x509.X509CRLEntryImpl:', 'java.lang.String', 'toString()', '4']
Removed row: ['sun.security.x509.X509CertInfo:', 'java.lang.String', 'toString()', '4']
Removed row: ['sun.util.locale.InternalLocaleBuilder:', 'sun.util.locale.InternalLocaleBuilder', 'setExtensions(java.util.List,java.lang.String)', '2']
Removed row: ['sun.util.locale.InternalLocaleBuilder:', 'sun.util.locale.InternalLocaleBuilder', 'setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)', '1']
Removed row: ['sun.util.locale.LanguageTag:', 'sun.util.locale.LanguageTag', 'parseLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)', '2']
Removed row: ['sun.util.locale.provider.DictionaryBasedBreakIterator:', 'void', 'divideUpDictionaryRange(int,int)', '5']
Removed row: ['sun.util.locale.provider.LocaleProviderAdapter:', 'java.util.Locale[]', 'toLocaleArray(java.util.Set)', '3']
Removed row: ['sun.util.locale.provider.LocaleProviderAdapter:', 'sun.util.locale.provider.LocaleProviderAdapter', 'getAdapter(java.lang.Class,java.util.Locale)', '1']
Removed row: ['sun.util.locale.provider.LocaleProviderAdapter:', 'void', '<clinit>()', '1']
Removed row: ['sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter:', 'java.lang.String', 'examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.String,int,java.util.Map)', '1']
Total number of mock counts in vraptor-core-results/new-counts-NORMAL is 1630 
