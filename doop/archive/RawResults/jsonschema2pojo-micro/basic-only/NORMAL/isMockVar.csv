<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<org.mockito.internal.MockitoCore: org.mockito.MockingDetails mockingDetails(java.lang.Object)>/toInspect#_0
<org.jsonschema2pojo.rules.PatternRuleTest: void setUp()>/$stack4
<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/field#_0
<org.mockito.internal.MockitoCore: void assertNotStubOnlyMock(java.lang.Object)>/mock#_0
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack30
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack32
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack38
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack12
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack13
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack18
<org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoException stubPassedToVerify(java.lang.Object)>/mock#_0
<org.jsonschema2pojo.rules.FormatRule: void <init>(org.jsonschema2pojo.rules.RuleFactory)>/$stack2
<org.jsonschema2pojo.rules.FormatRule: java.util.Map getFormatTypeMapping(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.mockito.internal.debugging.InvocationsPrinter: java.lang.String printInvocations(java.lang.Object)>/mock#_0
<org.mockito.internal.util.DefaultMockingDetails: boolean isMock()>/$stack1
<org.mockito.internal.util.DefaultMockingDetails: boolean isSpy()>/$stack1
<org.mockito.internal.util.DefaultMockingDetails: org.mockito.internal.stubbing.InvocationContainerImpl getInvocationContainer()>/$stack1
<org.mockito.internal.util.DefaultMockingDetails: org.mockito.invocation.MockHandler mockHandler()>/$stack1
<org.mockito.internal.util.MockUtil: org.mockito.invocation.MockHandler getMockHandler(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: org.mockito.internal.stubbing.InvocationContainerImpl getInvocationContainer(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: boolean isSpy(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: org.mockito.mock.MockName getMockName(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: org.mockito.mock.MockCreationSettings getMockSettings(java.lang.Object)>/mock#_0
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack16
<org.junit.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>/expected#_0
<org.junit.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>/actual#_0
<org.mockito.Mockito: org.mockito.MockingDetails mockingDetails(java.lang.Object)>/toInspect#_0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<org.mockito.internal.util.DefaultMockingDetails: java.lang.String printInvocations()>/$stack2
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/mock#_0
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/result#_102
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/result#_112
<org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>/expected#_0
<org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>/expected#_0
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack27
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack9
<org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>/actual#_0
<org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>/actual#_0
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack26
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack8
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack34
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack35
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack15
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack16
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack40
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack41
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack20
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack21
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.internal.MockitoCore: void assertNotStubOnlyMock(java.lang.Object)>/@parameter0
<org.mockito.internal.MockitoCore: org.mockito.MockingDetails mockingDetails(java.lang.Object)>/@parameter0
<org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoException stubPassedToVerify(java.lang.Object)>/@parameter0
<org.jsonschema2pojo.rules.FormatRule: java.util.Map getFormatTypeMapping(org.jsonschema2pojo.GenerationConfig)>/@parameter0
<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateTimeType(org.jsonschema2pojo.GenerationConfig)>/@parameter0
<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateTimeType(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateType(org.jsonschema2pojo.GenerationConfig)>/@parameter0
<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateType(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getTimeType(org.jsonschema2pojo.GenerationConfig)>/@parameter0
<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getTimeType(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter2
<org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>/@parameter0
<org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>/@parameter1
<org.junit.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.junit.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter2
<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/@parameter1
<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/@parameter3
<org.jsonschema2pojo.rules.PatternRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/@parameter0
<org.jsonschema2pojo.rules.PatternRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/field#_0
<org.mockito.Mockito: org.mockito.MockingDetails mockingDetails(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.internal.debugging.InvocationsPrinter: java.lang.String printInvocations(java.lang.Object)>/@parameter0
<org.mockito.internal.util.DefaultMockingDetails: void <init>(java.lang.Object)>/@parameter0
<org.mockito.internal.util.DefaultMockingDetails: void <init>(java.lang.Object)>/toInspect#_0
<org.jsonschema2pojo.rules.RuleFactory: void <init>(org.jsonschema2pojo.GenerationConfig,org.jsonschema2pojo.Annotator,org.jsonschema2pojo.SchemaStore)>/@parameter0
<org.jsonschema2pojo.rules.RuleFactory: void <init>(org.jsonschema2pojo.GenerationConfig,org.jsonschema2pojo.Annotator,org.jsonschema2pojo.SchemaStore)>/generationConfig#_0
<org.mockito.internal.util.MockUtil: org.mockito.invocation.MockHandler getMockHandler(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: org.mockito.internal.stubbing.InvocationContainerImpl getInvocationContainer(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: boolean isSpy(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: org.mockito.mock.MockName getMockName(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: org.mockito.mock.MockCreationSettings getMockSettings(java.lang.Object)>/@parameter0
<org.mockito.BDDMockito$ThenImpl: java.lang.Object should()>/$stack2
<org.mockito.BDDMockito$ThenImpl: java.lang.Object should(org.mockito.verification.VerificationMode)>/$stack3
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object)>/$stack3
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/$stack21
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/$stack10
<org.jsonschema2pojo.rules.FormatRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema)>/$stack13
<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/$stack8
<org.jsonschema2pojo.rules.PatternRule: java.lang.Object apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,java.lang.Object,org.jsonschema2pojo.Schema)>/$stack7
<org.mockito.BDDMockito$ThenImpl: java.lang.Object should(org.mockito.InOrder)>/$stack3
<org.mockito.BDDMockito$ThenImpl: java.lang.Object should(org.mockito.InOrder,org.mockito.verification.VerificationMode)>/$stack4
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/$stack3
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/$stack3
<org.mockito.plugins.MockMaker: org.mockito.invocation.MockHandler getHandler(java.lang.Object)>/@parameter0
<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>/@parameter0
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack3
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack9
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack13
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack18
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack2
<org.mockito.internal.util.DefaultMockingDetails: java.lang.Object getMock()>/$stack1
<org.mockito.internal.util.DefaultMockingDetails: void assertGoodMock()>/$stack1
<org.mockito.internal.util.DefaultMockingDetails: void assertGoodMock()>/$stack6
<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>/$stack1
