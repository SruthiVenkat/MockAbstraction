<org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>/$stack12
<org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(org.w3c.dom.Node)>/node#_0
<org.apache.commons.collections4.iterators.NodeListIteratorTest: java.util.Iterator makeEmptyIterator()>/parentNode#_84
<org.apache.commons.collections4.MockTestCase: java.lang.Object createMock(java.lang.Class)>/mock#_36
<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String expectedDiff()>/$stack2
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/iterator#_1619
<org.junit.ComparisonFailure: java.lang.String getMessage()>/$stack3
<org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>/expected#_0
<org.junit.Assert: boolean equalsRegardingNull(java.lang.Object,java.lang.Object)>/expected#_0
<org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>/expected#_0
<org.junit.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>/expected#_0
<org.junit.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>/expected#_0
<org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>/collection#_0
<org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Iterable,int)>/iterable#_0
<org.apache.commons.collections4.IteratorUtilsTest: void testNodeIterator()>/parentNode#_887
<org.apache.commons.collections4.IteratorUtilsTest: void testNodeIterator()>/$stack25
<org.apache.commons.collections4.IteratorUtilsTest: void testNodeListIterator()>/$stack20
<org.apache.commons.collections4.CollectionUtilsTest: void getFromList()>/list#_819
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/c#_1620
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/iterable#_1618
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/inputIterable#_1617
<org.apache.commons.collections4.IterableUtils: java.lang.Object get(java.lang.Iterable,int)>/iterable#_0
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String compact(java.lang.String)>/$stack7
<org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>/$stack5
<org.apache.commons.collections4.functors.AbstractMockPredicateTest: org.apache.commons.collections4.Predicate createMockPredicate(java.lang.Boolean)>/mockPredicate#_93
<org.apache.commons.collections4.MockTestCase: java.lang.Object registerMock(java.lang.Object)>/mock#_0
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/inputCollection#_1616
<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.lang.Boolean[])>/$stack9
<org.apache.commons.collections4.CollectionUtilsTest: void getFromList()>/$stack3
<org.apache.commons.collections4.functors.AbstractMockPredicateTest: void verifyPredicates()>/$stack6
<org.apache.commons.collections4.functors.AbstractMockPredicateTest: void verifyPredicates()>/predicate#_70
<org.apache.commons.collections4.IteratorUtilsTest: void testNodeIterator()>/$stack10
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/$stack6
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/$stack9
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/$stack8
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/$stack7
<org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>/iterable#_0
<org.apache.commons.collections4.functors.AbstractMockPredicateTest: org.apache.commons.collections4.Predicate createMockPredicate(java.lang.Boolean)>/$stack3
<org.apache.commons.collections4.IterableUtils: java.lang.Object get(java.lang.Iterable,int)>/$stack5
<org.apache.commons.collections4.iterators.NodeListIteratorTest: java.util.Iterator makeEmptyIterator()>/$stack5
<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.Node[] createNodes()>/$stack5
<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.Node[] createNodes()>/node1#_100
<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.Node[] createNodes()>/$stack6
<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.Node[] createNodes()>/node2#_101
<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.Node[] createNodes()>/$stack7
<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.Node[] createNodes()>/node3#_102
<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.Node[] createNodes()>/$stack8
<org.apache.commons.collections4.IteratorUtilsTest: org.w3c.dom.Node[] createNodes()>/node4#_103
<org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.junit.Assert: boolean equalsRegardingNull(java.lang.Object,java.lang.Object)>/@parameter0
<org.junit.Assert: boolean isEquals(java.lang.Object,java.lang.Object)>/@parameter0
<org.junit.Assert: boolean isEquals(java.lang.Object,java.lang.Object)>/expected#_0
<org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>/@parameter0
<org.junit.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.junit.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.junit.Assert: java.lang.String formatClassAndValue(java.lang.Object,java.lang.String)>/@parameter0
<org.junit.Assert: java.lang.String formatClassAndValue(java.lang.Object,java.lang.String)>/value#_0
<org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>/@parameter0
<org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>/@parameter1
<org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.util.Iterator)>/@parameter0
<org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.util.Iterator)>/collection#_0
<org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Iterable,int)>/@parameter0
<org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(org.w3c.dom.Node)>/@parameter0
<org.apache.commons.collections4.MockTestCase: java.lang.Object registerMock(java.lang.Object)>/@parameter0
<org.apache.commons.collections4.iterators.NodeListIterator: void <init>(org.w3c.dom.Node)>/@parameter0
<org.apache.commons.collections4.iterators.NodeListIterator: void <init>(org.w3c.dom.Node)>/node#_0
<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String extractDiff(java.lang.String)>/@parameter0
<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String extractDiff(java.lang.String)>/source#_0
<org.apache.commons.collections4.CollectionUtilsTest: void next(java.util.Iterator,java.lang.Object)>/@parameter0
<org.apache.commons.collections4.CollectionUtilsTest: void next(java.util.Iterator,java.lang.Object)>/iterator#_0
<org.apache.commons.collections4.IterableUtils: java.lang.Object get(java.lang.Iterable,int)>/@parameter0
<org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>/@parameter0
<org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>/iterable#_0
<org.junit.ComparisonFailure$ComparisonCompactor: void <init>(int,java.lang.String,java.lang.String)>/@parameter1
<org.junit.ComparisonFailure$ComparisonCompactor: void <init>(int,java.lang.String,java.lang.String)>/expected#_0
<org.junit.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<org.junit.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>/expected#_0
<org.apache.commons.collections4.MockTestCase: java.lang.Object createMock(java.lang.Class)>/$stack4
<org.apache.commons.collections4.functors.AllPredicateTest: void oneTruePredicate()>/predicate#_87
<org.apache.commons.collections4.functors.AllPredicateTest: void oneFalsePredicate()>/predicate#_101
<org.apache.commons.collections4.MockTestCase: void replay()>/o#_50
<org.apache.commons.collections4.MockTestCase: void verify()>/$stack8
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String compact(java.lang.String)>/$stack5
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String compact(java.lang.String)>/$stack14
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String sharedPrefix()>/$stack3
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String sharedPrefix()>/$stack8
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String sharedPrefix()>/$stack10
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String sharedPrefix()>/$stack16
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String sharedSuffix(java.lang.String)>/$stack4
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String sharedSuffix(java.lang.String)>/$stack13
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String sharedSuffix(java.lang.String)>/$stack14
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String sharedSuffix(java.lang.String)>/$stack18
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String sharedSuffix(java.lang.String)>/$stack19
<org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String access$300(org.junit.ComparisonFailure$ComparisonCompactor)>/$stack1
<org.junit.ComparisonFailure: java.lang.String getExpected()>/$stack1
