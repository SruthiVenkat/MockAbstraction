<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String expectedDiff()>/$stack2
<org.apache.commons.collections4.functors.AbstractCompositePredicateTest: org.apache.commons.collections4.Predicate getPredicateInstance(java.lang.Boolean[])>/$stack9
<org.apache.commons.collections4.CollectionUtilsTest: void getFromList()>/$stack3
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/$stack6
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/$stack9
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/$stack8
<org.apache.commons.collections4.CollectionUtilsTest: void addAllForIterable()>/$stack7
<org.apache.commons.collections4.IteratorUtils: org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(org.w3c.dom.Node)>/@parameter0
<org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.junit.Assert: boolean equalsRegardingNull(java.lang.Object,java.lang.Object)>/@parameter0
<org.junit.Assert: boolean isEquals(java.lang.Object,java.lang.Object)>/@parameter0
<org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>/@parameter0
<org.junit.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.junit.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.junit.Assert: java.lang.String formatClassAndValue(java.lang.Object,java.lang.String)>/@parameter0
<org.apache.commons.collections4.iterators.NodeListIterator: void <init>(org.w3c.dom.Node)>/@parameter0
<org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>/@parameter0
<org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>/@parameter1
<org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.util.Iterator)>/@parameter0
<org.apache.commons.collections4.CollectionUtils: java.lang.Object get(java.lang.Iterable,int)>/@parameter0
<org.apache.commons.collections4.CollectionUtilsTest: void next(java.util.Iterator,java.lang.Object)>/@parameter0
<org.junit.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String extractDiff(java.lang.String)>/@parameter0
<org.junit.ComparisonFailure$ComparisonCompactor: void <init>(int,java.lang.String,java.lang.String)>/@parameter1
<org.apache.commons.collections4.IterableUtils: java.lang.Object get(java.lang.Iterable,int)>/@parameter0
<org.apache.commons.collections4.IterableUtils: java.util.Iterator emptyIteratorIfNull(java.lang.Iterable)>/@parameter0
<org.apache.commons.collections4.MockTestCase: java.lang.Object registerMock(java.lang.Object)>/@parameter0
<org.apache.commons.collections4.MockTestCase: java.lang.Object createMock(java.lang.Class)>/$stack4
<org.apache.commons.collections4.functors.AllPredicateTest: void oneTruePredicate()>/predicate#_87
<org.apache.commons.collections4.functors.AllPredicateTest: void oneFalsePredicate()>/predicate#_101
