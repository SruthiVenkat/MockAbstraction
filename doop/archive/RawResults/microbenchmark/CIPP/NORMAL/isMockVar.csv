<ca.liang.PayRollArrayMockTest: void init()>/$stack18
<ca.liang.PayRollArrayMockTest: void init()>/$stack17
<ca.liang.PayRollArrayMockTest: void testEmployeesPaidIntra()>/bankService_intra#_60
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/employeeDB_intra#_111
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/bankService_intra#_112
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayInter()>/$stack12
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayInter()>/$stack11
<ca.liang.PayRollArrayNoMockTest: void init()>/$stack14
<ca.liang.PayRollArrayNoMockTest: void init()>/$stack13
<ca.liang.PayRollMultipleEmployeeTest: void init()>/$stack21
<ca.liang.PayRollMultipleEmployeeTest: void init()>/$stack20
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack18
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack17
<ca.liang.PayRollAnnotationMockTest: void init()>/$stack13
<ca.liang.PayRollAnnotationMockTest: void init()>/$stack12
<ca.liang.PayRollAnnotationMockTest: void testEmployeesPaidIntra()>/$stack14
<ca.liang.PayRollAnnotationMockTest: void testEmployeeIsPaid()>/$stack3
<ca.liang.PayRollAnnotationMockTest: void testEmployeeIsPaid()>/$stack2
<ca.liang.PayRollMultipleEmployee2Test: void init()>/$stack21
<ca.liang.PayRollMultipleEmployee2Test: void init()>/$stack20
<ca.liang.DirtyTest: void init()>/$stack14
<ca.liang.DirtyTest: void init()>/$stack13
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/mock#_0
<ca.liang.PayRollMockTest: void init()>/$stack13
<ca.liang.PayRollMockTest: void init()>/$stack12
<ca.liang.PayRollMockTest: void testNoEmployeesIntra()>/employeeDB_intra#_70
<ca.liang.PayRollMockTest: void testNoEmployeesIntra()>/bankService_intra#_71
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayInter()>/$stack15
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid1()>/$stack5
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack21
<ca.liang.PayRollAnnotationMockTest: void testEmployeeIsPaid()>/$stack4
<ca.liang.PayRollMultipleEmployee2Test: void testAllEmployeesArePaid()>/$stack5
<ca.liang.PayRollMockTest: void testEmployeeIsPaid()>/$stack6
<ca.liang.PayRollMockTest: void testEmployeeIsPaid_singleVerify()>/$stack6
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object)>/mock#_0
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/mock#_0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<ca.liang.PayRollMockMarginalCollectionsTest: void init()>/e#_57
<ca.liang.PayRollMockMarginalCollectionsTest: void init()>/ee#_90
<ca.liang.PayRollMockMarginalCollectionsTest: void init()>/eee#_97
<ca.liang.PayRollMockMarginalCollectionsTest: void init()>/ee3#_104
<ca.liang.PayRollMockMarginalCollectionsTest: void testFloorCeiling()>/em#_282
<ca.liang.PayRollMockMarginalCollectionsTest: void testHigherLower()>/em#_306
<ca.liang.PayRollMockMarginalCollectionsTest: void testHeadSet()>/em#_329
<ca.liang.PayRollMockMarginalCollectionsTest: void testTailSet()>/em#_353
<ca.liang.PayRollMockMarginalCollectionsTest: void testSubSet()>/em#_377
<ca.liang.PayRollMultipleEmployeeTest: void init()>/employee1#_31
<ca.liang.PayRollMultipleEmployeeTest: void init()>/employee2#_32
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/employee1#_74
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/employee2#_75
<ca.liang.PayRollMultipleEmployee2Test: void init()>/employee1#_31
<ca.liang.PayRollMultipleEmployee2Test: void init()>/employee2#_32
<org.mockito.internal.util.MockUtil: boolean isMockitoMock(java.lang.Object)>/mock#_0
<ca.liang.PayRollMockTest: void testAddAll()>/e#_90
<ca.liang.PayRollMockTest: void testIteration()>/e#_114
<ca.liang.PayRollMockTest: void testVector()>/e0#_146
<ca.liang.PayRollMockTest: void testVector2()>/e#_162
<ca.liang.PayRollMockTest: void testVectorToArray()>/e#_191
<ca.liang.PayRollMockTest: void testArrayToVector()>/e#_212
<ca.liang.PayRollMockTest: void testSingleEmployeeMockCallout()>/e#_247
<ca.liang.PayRollMockTest: void testInteractionOrder()>/$stack11
<ca.liang.PayRollMockTest: void testInteractionOrder()>/$stack15
<ca.liang.PayRollArrayMockTest: void init()>/$stack1
<ca.liang.PayRollArrayMockTest: void init()>/$stack2
<ca.liang.PayRollArrayMockTest: void init()>/$stack3
<ca.liang.PayRollArrayMockTest: void init()>/$stack4
<ca.liang.PayRollArrayMockTest: void init()>/$stack8
<ca.liang.PayRollArrayMockTest: void init()>/$stack9
<ca.liang.PayRollArrayMockTest: void testEmployeesPaidIntra()>/$stack14
<ca.liang.PayRollArrayMockTest: void testEmployeesPaidIntra()>/$stack7
<ca.liang.PayRollArrayMockTest: void testEmployeesPaidIntra()>/$stack8
<ca.liang.PayRollArrayMockTest: void testEmployeesPaidIntra()>/$stack10
<ca.liang.PayRollArrayMockTest: void testEmployeesPaidIntra()>/$stack11
<ca.liang.PayRollArrayMockTest: void testSingleEmployeeLocalArrayMock()>/$stack7
<ca.liang.PayRollArrayMockTest: void testSingleEmployeeLocalArrayMock()>/e#_92
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/$stack11
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/$stack12
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/$stack21
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/$stack22
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/$stack8
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/employee1#_106
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/$stack9
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/employee2#_107
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayInter()>/$stack17
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayInter()>/$stack18
<ca.liang.PayRollArrayNoMockTest: void init()>/$stack2
<ca.liang.PayRollArrayNoMockTest: void init()>/$stack3
<ca.liang.PayRollArrayNoMockTest: void init()>/$stack4
<ca.liang.PayRollArrayNoMockTest: void init()>/$stack5
<ca.liang.PayRollMockMarginalCollectionsTest: void init()>/$stack13
<ca.liang.PayRollMockMarginalCollectionsTest: void init()>/$stack63
<ca.liang.PayRollMockMarginalCollectionsTest: void init()>/$stack70
<ca.liang.PayRollMockMarginalCollectionsTest: void init()>/$stack77
<ca.liang.PayRollMockMarginalCollectionsTest: void init()>/$stack84
<ca.liang.PayRollMockMarginalCollectionsTest: void init()>/ee4#_111
<ca.liang.PayRollMockMarginalCollectionsTest: void test0()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void test0()>/e#_123
<ca.liang.PayRollMockMarginalCollectionsTest: void test1()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void test1()>/e#_131
<ca.liang.PayRollMockMarginalCollectionsTest: void test2()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void test2()>/e#_139
<ca.liang.PayRollMockMarginalCollectionsTest: void test3()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void test3()>/e#_147
<ca.liang.PayRollMockMarginalCollectionsTest: void test4()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void test4()>/e#_155
<ca.liang.PayRollMockMarginalCollectionsTest: void test5()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void test5()>/e#_163
<ca.liang.PayRollMockMarginalCollectionsTest: void test6()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void test6()>/e#_171
<ca.liang.PayRollMockMarginalCollectionsTest: void testPQ1()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void testPQ1()>/e#_179
<ca.liang.PayRollMockMarginalCollectionsTest: void testPQ2()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void testPQ2()>/e#_187
<ca.liang.PayRollMockMarginalCollectionsTest: void testPQ3()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void testPQ3()>/e#_195
<ca.liang.PayRollMockMarginalCollectionsTest: void testPQ4()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void testPQ4()>/e#_203
<ca.liang.PayRollMockMarginalCollectionsTest: void testTS()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void testTS()>/e#_211
<ca.liang.PayRollMockMarginalCollectionsTest: void testTS1()>/$stack3
<ca.liang.PayRollMockMarginalCollectionsTest: void testTS1()>/e#_219
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/$stack11
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/e2#_227
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/$stack14
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/e3#_231
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/$stack17
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/e4#_235
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/$stack20
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/e5#_239
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/$stack23
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/ee3#_243
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/$stack26
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/e#_247
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/$stack29
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/e1#_251
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/$stack32
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/ee4#_255
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/$stack35
<ca.liang.PayRollMockMarginalCollectionsTest: void testDQ()>/ee5#_259
<ca.liang.PayRollMockMarginalCollectionsTest: void testDescendingSet()>/$stack5
<ca.liang.PayRollMockMarginalCollectionsTest: void testDescendingSet()>/e#_269
<ca.liang.PayRollMockMarginalCollectionsTest: void testFloorCeiling()>/$stack10
<ca.liang.PayRollMockMarginalCollectionsTest: void testFloorCeiling()>/$stack27
<ca.liang.PayRollMockMarginalCollectionsTest: void testFloorCeiling()>/e2#_289
<ca.liang.PayRollMockMarginalCollectionsTest: void testFloorCeiling()>/$stack29
<ca.liang.PayRollMockMarginalCollectionsTest: void testFloorCeiling()>/e3#_293
<ca.liang.PayRollMockMarginalCollectionsTest: void testHigherLower()>/$stack10
<ca.liang.PayRollMockMarginalCollectionsTest: void testHigherLower()>/$stack20
<ca.liang.PayRollMockMarginalCollectionsTest: void testHigherLower()>/e2#_312
<ca.liang.PayRollMockMarginalCollectionsTest: void testHigherLower()>/$stack22
<ca.liang.PayRollMockMarginalCollectionsTest: void testHigherLower()>/e3#_316
<ca.liang.PayRollMockMarginalCollectionsTest: void testHeadSet()>/$stack10
<ca.liang.PayRollMockMarginalCollectionsTest: void testHeadSet()>/$stack22
<ca.liang.PayRollMockMarginalCollectionsTest: void testHeadSet()>/$stack23
<ca.liang.PayRollMockMarginalCollectionsTest: void testHeadSet()>/$stack26
<ca.liang.PayRollMockMarginalCollectionsTest: void testHeadSet()>/$stack27
<ca.liang.PayRollMockMarginalCollectionsTest: void testTailSet()>/$stack10
<ca.liang.PayRollMockMarginalCollectionsTest: void testTailSet()>/$stack22
<ca.liang.PayRollMockMarginalCollectionsTest: void testTailSet()>/$stack23
<ca.liang.PayRollMockMarginalCollectionsTest: void testTailSet()>/$stack26
<ca.liang.PayRollMockMarginalCollectionsTest: void testTailSet()>/$stack27
<ca.liang.PayRollMockMarginalCollectionsTest: void testSubSet()>/$stack10
<ca.liang.PayRollMockMarginalCollectionsTest: void testSubSet()>/$stack23
<ca.liang.PayRollMockMarginalCollectionsTest: void testSubSet()>/$stack24
<ca.liang.PayRollMockMarginalCollectionsTest: void testSubSet()>/$stack27
<ca.liang.PayRollMockMarginalCollectionsTest: void testSubSet()>/$stack28
<ca.liang.PayRollMultipleEmployeeTest: void init()>/$stack10
<ca.liang.PayRollMultipleEmployeeTest: void init()>/$stack11
<ca.liang.PayRollMultipleEmployeeTest: void init()>/$stack12
<ca.liang.PayRollMultipleEmployeeTest: void init()>/$stack13
<ca.liang.PayRollMultipleEmployeeTest: void init()>/$stack6
<ca.liang.PayRollMultipleEmployeeTest: void init()>/$stack7
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid1()>/$stack7
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid1()>/$stack8
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid1()>/$stack15
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid1()>/$stack16
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid1()>/$stack21
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid1()>/$stack22
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid1()>/$stack27
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid1()>/$stack28
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid1()>/$stack37
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid1()>/$stack38
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack23
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack24
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack7
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack8
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack31
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack32
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack37
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack38
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack43
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack44
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack53
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack54
<ca.liang.PayRollAnnotationMockTest: void testEmployeesPaidIntra()>/$stack6
<ca.liang.PayRollAnnotationMockTest: void testEmployeesPaidIntra()>/$stack7
<ca.liang.PayRollAnnotationMockTest: void testEmployeesPaidIntra()>/$stack9
<ca.liang.PayRollAnnotationMockTest: void testEmployeesPaidIntra()>/$stack10
<ca.liang.PayRollAnnotationMockTest: void testEmployeeIsPaid()>/$stack6
<ca.liang.PayRollAnnotationMockTest: void testEmployeeIsPaid()>/$stack7
<ca.liang.PayRollMultipleEmployee2Test: void init()>/$stack10
<ca.liang.PayRollMultipleEmployee2Test: void init()>/$stack11
<ca.liang.PayRollMultipleEmployee2Test: void init()>/$stack12
<ca.liang.PayRollMultipleEmployee2Test: void init()>/$stack13
<ca.liang.PayRollMultipleEmployee2Test: void init()>/$stack6
<ca.liang.PayRollMultipleEmployee2Test: void init()>/$stack7
<ca.liang.PayRollMultipleEmployee2Test: void testAllEmployeesArePaid()>/$stack7
<ca.liang.PayRollMultipleEmployee2Test: void testAllEmployeesArePaid()>/$stack8
<ca.liang.PayRollMultipleEmployee2Test: void testAllEmployeesArePaid()>/$stack15
<ca.liang.PayRollMultipleEmployee2Test: void testAllEmployeesArePaid()>/$stack16
<ca.liang.PayRollMultipleEmployee2Test: void testAllEmployeesArePaid()>/$stack21
<ca.liang.PayRollMultipleEmployee2Test: void testAllEmployeesArePaid()>/$stack22
<ca.liang.PayRollMultipleEmployee2Test: void testAllEmployeesArePaid()>/$stack27
<ca.liang.PayRollMultipleEmployee2Test: void testAllEmployeesArePaid()>/$stack28
<ca.liang.PayRollMultipleEmployee2Test: void testAllEmployeesArePaid()>/$stack37
<ca.liang.PayRollMultipleEmployee2Test: void testAllEmployeesArePaid()>/$stack38
<ca.liang.DirtyTest: void init()>/$stack2
<ca.liang.DirtyTest: void init()>/$stack3
<ca.liang.DirtyTest: void init()>/$stack4
<ca.liang.DirtyTest: void init()>/$stack5
<ca.liang.PayRollMockTest: void init()>/$stack2
<ca.liang.PayRollMockTest: void init()>/$stack3
<ca.liang.PayRollMockTest: void init()>/$stack4
<ca.liang.PayRollMockTest: void init()>/$stack5
<ca.liang.PayRollMockTest: void testNoEmployeesIntra()>/$stack7
<ca.liang.PayRollMockTest: void testNoEmployeesIntra()>/$stack8
<ca.liang.PayRollMockTest: void testAddAll()>/$stack8
<ca.liang.PayRollMockTest: void testAddAll()>/$stack15
<ca.liang.PayRollMockTest: void testAddAll()>/e1#_99
<ca.liang.PayRollMockTest: void testAddAll()>/$stack17
<ca.liang.PayRollMockTest: void testAddAll()>/e2#_103
<ca.liang.PayRollMockTest: void testIteration()>/$stack8
<ca.liang.PayRollMockTest: void testIteration()>/$stack22
<ca.liang.PayRollMockTest: void testIteration()>/ee_$$A_5#_136
<ca.liang.PayRollMockTest: void testIteration()>/$stack25
<ca.liang.PayRollMockTest: void testIteration()>/ee_$$A_3#_128
<ca.liang.PayRollMockTest: void testIteration()>/$stack28
<ca.liang.PayRollMockTest: void testIteration()>/ee_$$A_1_$$A_1#_122
<ca.liang.PayRollMockTest: void testVector()>/$stack7
<ca.liang.PayRollMockTest: void testVector()>/$stack16
<ca.liang.PayRollMockTest: void testVector()>/ee#_153
<ca.liang.PayRollMockTest: void testVector2()>/$stack8
<ca.liang.PayRollMockTest: void testVector2()>/$stack17
<ca.liang.PayRollMockTest: void testVector2()>/ee_$$A_2#_177
<ca.liang.PayRollMockTest: void testVector2()>/$stack19
<ca.liang.PayRollMockTest: void testVector2()>/ef#_180
<ca.liang.PayRollMockTest: void testVector2()>/$stack21
<ca.liang.PayRollMockTest: void testVector2()>/eg#_183
<ca.liang.PayRollMockTest: void testVector2()>/$stack23
<ca.liang.PayRollMockTest: void testVector2()>/ee_$$A_1#_173
<ca.liang.PayRollMockTest: void testVectorToArray()>/$stack7
<ca.liang.PayRollMockTest: void testVectorToArray()>/$stack13
<ca.liang.PayRollMockTest: void testVectorToArray()>/ef#_199
<ca.liang.PayRollMockTest: void testArrayToVector()>/$stack5
<ca.liang.PayRollMockTest: void testEmployeeIsPaid()>/$stack8
<ca.liang.PayRollMockTest: void testEmployeeIsPaid()>/$stack9
<ca.liang.PayRollMockTest: void testEmployeeIsPaid_singleVerify()>/$stack7
<ca.liang.PayRollMockTest: void testEmployeeIsPaid_singleVerify()>/$stack8
<ca.liang.PayRollMockTest: void testInteractionOrder()>/$stack12
<ca.liang.PayRollMockTest: void testInteractionOrder()>/$stack13
<ca.liang.PayRollMockTest: void testInteractionOrder()>/$stack16
<ca.liang.PayRollMockTest: void testInteractionOrder()>/$stack17
<org.mockito.internal.creation.CglibMockMaker: org.mockito.invocation.MockHandler getHandler(java.lang.Object)>/mock#_0
<org.mockito.internal.creation.CglibMockMaker: org.mockito.invocation.MockHandler getHandler(java.lang.Object)>/factory#_43
<ca.liang.PayRollArrayMockTest: ca.liang.Employee[] createEmployees()>/$stack3
<ca.liang.PayRollArrayMockTest: ca.liang.Employee[] createEmployees()>/employee1#_178
<ca.liang.PayRollArrayMockTest: ca.liang.Employee[] createEmployees()>/$stack4
<ca.liang.PayRollArrayMockTest: ca.liang.Employee[] createEmployees()>/employee2#_179
<ca.liang.PayRollMockTest: ca.liang.Employee createMockEmployee()>/$stack2
<ca.liang.PayRollMockTest: ca.liang.Employee createMockEmployee()>/e#_322
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object)>/@parameter0
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.internal.verification.MockAwareVerificationMode: void <init>(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.internal.verification.MockAwareVerificationMode: void <init>(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<org.mockito.internal.creation.CglibMockMaker: org.mockito.invocation.MockHandler getHandler(java.lang.Object)>/@parameter0
<ca.liang.PayRoll: void <init>(ca.liang.EmployeeDB,ca.liang.BankService)>/@parameter0
<ca.liang.PayRoll: void <init>(ca.liang.EmployeeDB,ca.liang.BankService)>/employees#_0
<ca.liang.PayRoll: void <init>(ca.liang.EmployeeDB,ca.liang.BankService)>/@parameter1
<ca.liang.PayRoll: void <init>(ca.liang.EmployeeDB,ca.liang.BankService)>/bankService#_0
<ca.liang.PayRoll: void <init>(ca.liang.Employee[],ca.liang.BankService)>/@parameter1
<ca.liang.PayRoll: void <init>(ca.liang.Employee[],ca.liang.BankService)>/bankService#_0
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: boolean isMockitoMock(java.lang.Object)>/@parameter0
<ca.liang.PayRollMockTest: void testIteration()>/ee#_123
<ca.liang.PayRollMockTest: void testIteration()>/ee_$$A_2#_129
<ca.liang.PayRollMockTest: void testIteration()>/ee_$$A_4#_135
<ca.liang.PayRollMockTest: void testVector2()>/ee#_172
<ca.liang.PayRollMockTest: ca.liang.Employee invokedWithMockParameter(ca.liang.Employee)>/@parameter0
<ca.liang.PayRollMockTest: ca.liang.Employee invokedWithMockParameter(ca.liang.Employee)>/e#_0
<ca.liang.PayRollMockTest: void testSingleEmployeeMockInter()>/e#_239
<ca.liang.PayRollMockTest: void testMerge()>/m#_53
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object)>/$stack3
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/$stack9
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/$stack3
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/$stack3
<ca.liang.PayRollMockTest: void testSingleEmployeeMockCallout()>/ee#_248
<ca.liang.PayRollArrayMockTest: void testSingleEmployeeFieldArrayMock()>/ee#_76
<ca.liang.PayRollArrayMockTest: void testSingleEmployeeLocalArrayMock()>/ee#_97
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/$stack28
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/$stack32
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/$stack36
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayIntra()>/$stack44
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayInter()>/$stack24
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayInter()>/$stack28
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayInter()>/$stack32
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayInter()>/$stack40
<ca.liang.PayRollMockTest: void testVectorToArray()>/eg#_204
<ca.liang.PayRollMockTest: void testArrayToVector()>/ef#_222
<ca.liang.PayRollArrayMockTest: void init()>/$stack10
<ca.liang.PayRollArrayMockTest: void testAllEmployeesArePaidArrayInter()>/$stack5
<ca.liang.PayRollArrayNoMockTest: void init()>/$stack6
<ca.liang.PayRollMultipleEmployeeTest: void init()>/$stack14
<ca.liang.PayRollMultipleEmployeeTest: void testAllEmployeesArePaid2()>/$stack11
<ca.liang.PayRollAnnotationMockTest: void init()>/$stack5
<ca.liang.PayRollAnnotationMockTest: void testBankService()>/$stack1
<org.mockito.internal.verification.MockAwareVerificationMode: java.lang.Object getMock()>/$stack1
<ca.liang.PayRoll: int monthlyPayment()>/$stack4
<ca.liang.PayRoll: int monthlyPayment()>/$stack10
<ca.liang.PayRollMultipleEmployee2Test: void init()>/$stack14
<ca.liang.DirtyTest: void init()>/$stack6
<ca.liang.PayRollMockTest: void init()>/$stack6
<ca.liang.PayRollMockTest: void testInteractionOrder()>/$stack8
<ca.liang.PayRollMockTest: void testInteractionOrder()>/$stack9
