<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation privateCreateTypeInfo(java.lang.reflect.Type)>/typeHierarchy#_797	<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation privateCreateTypeInfo(java.lang.reflect.Type)>
<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfoWithTypeHierarchy(java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation,org.apache.flink.api.common.typeinfo.TypeInformation)>/typeHierarchyForSubtypes#_866	<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfoWithTypeHierarchy(java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation,org.apache.flink.api.common.typeinfo.TypeInformation)>
<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfoFromInput(java.lang.reflect.TypeVariable,java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>/inputTypeHierarchy#_0	<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfoFromInput(java.lang.reflect.TypeVariable,java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>
<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfoFromInput(java.lang.reflect.TypeVariable,java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>/factoryHierarchy#_1063	<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfoFromInput(java.lang.reflect.TypeVariable,java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>
<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfoFromInput(java.lang.reflect.TypeVariable,java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>/componentInfo#46#_1180	<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfoFromInput(java.lang.reflect.TypeVariable,java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>
<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation[] createSubTypesInfo(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.List,org.apache.flink.api.common.typeinfo.TypeInformation,org.apache.flink.api.common.typeinfo.TypeInformation,boolean)>/subTypeHierarchy#_1235	<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation[] createSubTypesInfo(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.List,org.apache.flink.api.common.typeinfo.TypeInformation,org.apache.flink.api.common.typeinfo.TypeInformation,boolean)>
<org.apache.flink.api.java.typeutils.TypeExtractor: void validateInfo(java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>/typeHierarchy#_0	<org.apache.flink.api.java.typeutils.TypeExtractor: void validateInfo(java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>
<org.apache.flink.api.java.typeutils.runtime.kryo.Serializers: void recursivelyRegisterType(java.lang.Class,org.apache.flink.api.common.ExecutionConfig,java.util.Set)>/alreadySeen#_0	<org.apache.flink.api.java.typeutils.runtime.kryo.Serializers: void recursivelyRegisterType(java.lang.Class,org.apache.flink.api.common.ExecutionConfig,java.util.Set)>
<org.apache.flink.api.java.typeutils.TypeExtractor: void validateInfo(java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>/$stack184	<org.apache.flink.api.java.typeutils.TypeExtractor: void validateInfo(java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>
<org.apache.flink.api.java.typeutils.TypeExtractor: boolean isHadoopWritable(java.lang.Class)>/alreadySeen#_2261	<org.apache.flink.api.java.typeutils.TypeExtractor: boolean isHadoopWritable(java.lang.Class)>
<org.apache.flink.api.common.ExecutionConfig: java.util.LinkedHashSet getRegisteredKryoTypes()>/$stack7	<org.apache.flink.api.common.ExecutionConfig: java.util.LinkedHashSet getRegisteredKryoTypes()>
<org.apache.flink.api.common.ExecutionConfig: boolean equals(java.lang.Object)>/$stack40	<org.apache.flink.api.common.ExecutionConfig: boolean equals(java.lang.Object)>
<org.apache.flink.api.common.ExecutionConfig: java.lang.String toString()>/$stack75	<org.apache.flink.api.common.ExecutionConfig: java.lang.String toString()>
<org.apache.flink.api.java.typeutils.TypeExtractionUtils: java.lang.reflect.Type getTypeHierarchy(java.util.List,java.lang.reflect.Type,java.lang.Class)>/typeHierarchy#_0	<org.apache.flink.api.java.typeutils.TypeExtractionUtils: java.lang.reflect.Type getTypeHierarchy(java.util.List,java.lang.reflect.Type,java.lang.Class)>
<org.apache.flink.api.common.operators.GenericDataSourceBase: java.util.List executeOnCollections(org.apache.flink.api.common.functions.RuntimeContext,org.apache.flink.api.common.ExecutionConfig)>/result#_227	<org.apache.flink.api.common.operators.GenericDataSourceBase: java.util.List executeOnCollections(org.apache.flink.api.common.functions.RuntimeContext,org.apache.flink.api.common.ExecutionConfig)>
<org.apache.flink.api.common.operators.base.MapOperatorBase: java.util.List executeOnCollections(java.util.List,org.apache.flink.api.common.functions.RuntimeContext,org.apache.flink.api.common.ExecutionConfig)>/result#_70	<org.apache.flink.api.common.operators.base.MapOperatorBase: java.util.List executeOnCollections(java.util.List,org.apache.flink.api.common.functions.RuntimeContext,org.apache.flink.api.common.ExecutionConfig)>
<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfoFromInput(java.lang.reflect.TypeVariable,java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>/$stack14	<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfoFromInput(java.lang.reflect.TypeVariable,java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>
<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfoFromInput(java.lang.reflect.TypeVariable,java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>/$stack32	<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfoFromInput(java.lang.reflect.TypeVariable,java.util.List,java.lang.reflect.Type,org.apache.flink.api.common.typeinfo.TypeInformation)>
<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInfoFactory getClosestFactory(java.util.List,java.lang.reflect.Type)>/typeHierarchy#_0	<org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInfoFactory getClosestFactory(java.util.List,java.lang.reflect.Type)>
<org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshot: void lambda$restoreSerializer$0(java.util.ArrayList,java.util.ArrayList,java.lang.String,java.lang.reflect.Field,org.apache.flink.api.common.typeutils.TypeSerializerSnapshot)>/restoredFieldSerializers#_0	<org.apache.flink.api.java.typeutils.runtime.PojoSerializerSnapshot: void lambda$restoreSerializer$0(java.util.ArrayList,java.util.ArrayList,java.lang.String,java.lang.reflect.Field,org.apache.flink.api.common.typeutils.TypeSerializerSnapshot)>
<org.apache.flink.api.common.ExecutionConfig: java.util.LinkedHashSet getRegisteredKryoTypes()>/result#_842	<org.apache.flink.api.common.ExecutionConfig: java.util.LinkedHashSet getRegisteredKryoTypes()>
<org.apache.flink.api.common.typeutils.base.ListSerializer: java.util.List copy(java.util.List)>/newList#_96	<org.apache.flink.api.common.typeutils.base.ListSerializer: java.util.List copy(java.util.List)>
<org.apache.flink.api.common.typeutils.base.ListSerializer: java.util.List deserialize(org.apache.flink.core.memory.DataInputView)>/list#_135	<org.apache.flink.api.common.typeutils.base.ListSerializer: java.util.List deserialize(org.apache.flink.core.memory.DataInputView)>
<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: void initializeTypeComparatorBuilder(int)>/$stack3	<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: void initializeTypeComparatorBuilder(int)>
<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: void addComparatorField(int,org.apache.flink.api.common.typeutils.TypeComparator)>/$stack6	<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: void addComparatorField(int,org.apache.flink.api.common.typeutils.TypeComparator)>
<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: org.apache.flink.api.common.typeutils.TypeComparator createTypeComparator(org.apache.flink.api.common.ExecutionConfig)>/$stack2	<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: org.apache.flink.api.common.typeutils.TypeComparator createTypeComparator(org.apache.flink.api.common.ExecutionConfig)>
<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: org.apache.flink.api.common.typeutils.TypeComparator createTypeComparator(org.apache.flink.api.common.ExecutionConfig)>/$stack6	<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: org.apache.flink.api.common.typeutils.TypeComparator createTypeComparator(org.apache.flink.api.common.ExecutionConfig)>
<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: org.apache.flink.api.common.typeutils.TypeComparator createTypeComparator(org.apache.flink.api.common.ExecutionConfig)>/$stack11	<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: org.apache.flink.api.common.typeutils.TypeComparator createTypeComparator(org.apache.flink.api.common.ExecutionConfig)>
<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: org.apache.flink.api.common.typeutils.TypeComparator createTypeComparator(org.apache.flink.api.common.ExecutionConfig)>/$stack12	<org.apache.flink.api.java.typeutils.PojoTypeInfo$PojoTypeComparatorBuilder: org.apache.flink.api.common.typeutils.TypeComparator createTypeComparator(org.apache.flink.api.common.ExecutionConfig)>
<org.apache.flink.api.common.functions.util.CopyingListCollector: void collect(java.lang.Object)>/$stack3	<org.apache.flink.api.common.functions.util.CopyingListCollector: void collect(java.lang.Object)>
<com.esotericsoftware.kryo.util.MapReferenceResolver: int nextReadId(java.lang.Class)>/$stack3	<com.esotericsoftware.kryo.util.MapReferenceResolver: int nextReadId(java.lang.Class)>
<com.esotericsoftware.kryo.util.MapReferenceResolver: int nextReadId(java.lang.Class)>/$stack5	<com.esotericsoftware.kryo.util.MapReferenceResolver: int nextReadId(java.lang.Class)>
<com.esotericsoftware.kryo.util.MapReferenceResolver: void setReadObject(int,java.lang.Object)>/$stack3	<com.esotericsoftware.kryo.util.MapReferenceResolver: void setReadObject(int,java.lang.Object)>
<com.esotericsoftware.kryo.util.MapReferenceResolver: java.lang.Object getReadObject(java.lang.Class,int)>/$stack3	<com.esotericsoftware.kryo.util.MapReferenceResolver: java.lang.Object getReadObject(java.lang.Class,int)>
<com.esotericsoftware.kryo.util.MapReferenceResolver: void reset()>/$stack1	<com.esotericsoftware.kryo.util.MapReferenceResolver: void reset()>
<org.apache.commons.collections.iterators.ListIteratorWrapper: java.lang.Object next()>/$stack6	<org.apache.commons.collections.iterators.ListIteratorWrapper: java.lang.Object next()>
<org.apache.commons.collections.iterators.ListIteratorWrapper: java.lang.Object next()>/$stack16	<org.apache.commons.collections.iterators.ListIteratorWrapper: java.lang.Object next()>
<org.apache.commons.collections.iterators.ListIteratorWrapper: java.lang.Object previous()>/$stack5	<org.apache.commons.collections.iterators.ListIteratorWrapper: java.lang.Object previous()>
<org.apache.flink.api.common.ExecutionConfig: void registerKryoType(java.lang.Class)>/$stack2	<org.apache.flink.api.common.ExecutionConfig: void registerKryoType(java.lang.Class)>
<org.apache.flink.api.common.ExecutionConfig: java.util.LinkedHashSet getRegisteredKryoTypes()>/$stack5	<org.apache.flink.api.common.ExecutionConfig: java.util.LinkedHashSet getRegisteredKryoTypes()>
<org.apache.flink.api.common.ExecutionConfig: boolean equals(java.lang.Object)>/$stack41	<org.apache.flink.api.common.ExecutionConfig: boolean equals(java.lang.Object)>
<org.apache.flink.api.common.ExecutionConfig: int hashCode()>/$stack29	<org.apache.flink.api.common.ExecutionConfig: int hashCode()>
