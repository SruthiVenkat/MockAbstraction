// --extra-logic, generates .csv files that mocks-core can use
// if you want to output the mock relations from here, include output-mock-relations.dl

// ./doop -a context-insensitive -i ~/hacking/MockAbstraction/Benchmarks/microbenchmark/target/payroll-test-0.0.1-SNAPSHOT.jar -i ~/hacking/MockAbstraction/Benchmarks/microbenchmark/target/payroll-test-0.0.1-SNAPSHOT-tests.jar -i ~/hacking/MockAbstraction/Benchmarks/microbenchmark/mvn_dependencies/ --id context-insensitive-with-mocks --souffle-jobs 32 --define-cpp-macro USE_CALLGRAPH --main ca.liang.RootDriver --extra-logic souffle-logic/analyses/mocks/mocks.dl

// ./doop -a basic-only -i ~/hacking/MockAbstraction/Benchmarks/microbenchmark/target/payroll-test-0.0.1-SNAPSHOT.jar -i ~/hacking/MockAbstraction/Benchmarks/microbenchmark/target/payroll-test-0.0.1-SNAPSHOT-tests.jar -i ~/hacking/MockAbstraction/Benchmarks/microbenchmark/mvn_dependencies/ --id basic-only-with-mocks --souffle-jobs 32 --define-cpp-macro USE_BASIC --main ca.liang.RootDriver --extra-logic souffle-logic/analyses/mocks/mocks.dl

// these are mostly used in isMockVar, but the places where we combine two things will have specific #ifdef tests also
// use --define-cpp-macro to actually define them
// #define NO_INTERPROC 1
// #define NO_COLLECTIONS 1
// #define NO_ARRAYS 1
// #define NO_FIELDS 1

// MainClass("ca.liang.RootDriver").

#include "mocks-source.dl"
#include "mocks-util.dl"
#include "mocks-collections.dl"
#include "mocks-callgraph.dl"

// depends on the call graph, maybe we'd better not output it
.decl callsMockSource(mi: MethodInvocation)
callsMockSource(mi) :-
  MockSourceMethod(ms),
  CallGraphEdge(_, mi, _, ms).

#include "mocks-core.dl"

#include "output-relations.dl"
