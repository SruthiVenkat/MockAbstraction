com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object) 1
com.fasterxml.jackson.databind.util.ClassUtil: boolean hasClass(java.lang.Object,java.lang.Class) 1
com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object) 1
com.github.tomakehurst.wiremock.admin.RequestSpec: boolean equals(java.lang.Object) 1
com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object) 2
com.sun.codemodel.JClass: com.sun.codemodel.JClass narrow(com.sun.codemodel.JType) 1
com.sun.codemodel.JDefinedClass: com.sun.codemodel.JDefinedClass _extends(com.sun.codemodel.JClass) 2
com.sun.codemodel.JMethod: boolean hasSignature(com.sun.codemodel.JType[]) 1
com.sun.codemodel.JNarrowedClass: boolean equals(java.lang.Object) 1
com.sun.codemodel.JNarrowedClass: com.sun.codemodel.JClass _extends() 1
com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class) 1
japa.parser.ast.visitor.EqualsVisitor: boolean nodeEquals(japa.parser.ast.Node,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.BlockComment,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.LineComment,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.TypeParameter,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node) 4
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node) 5
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.BaseParameter,japa.parser.ast.Node) 3
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node) 8
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node) 7
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node) 4
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node) 6
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node) 4
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.InitializerDeclaration,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.JavadocComment,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node) 9
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MultiTypeParameter,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.Parameter,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclarator,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclaratorId,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayAccessExpr,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node) 4
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayInitializerExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.AssignExpr,japa.parser.ast.Node) 3
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BinaryExpr,japa.parser.ast.Node) 3
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BooleanLiteralExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.CastExpr,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.CharLiteralExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ClassExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ConditionalExpr,japa.parser.ast.Node) 3
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.DoubleLiteralExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.EnclosedExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.FieldAccessExpr,japa.parser.ast.Node) 3
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.InstanceOfExpr,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.IntegerLiteralExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.IntegerLiteralMinValueExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.LongLiteralExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.LongLiteralMinValueExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MarkerAnnotationExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MemberValuePair,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node) 4
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.NameExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.NormalAnnotationExpr,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node) 5
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.QualifiedNameExpr,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.SingleMemberAnnotationExpr,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.StringLiteralExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.SuperExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ThisExpr,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.UnaryExpr,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node) 4
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.AssertStmt,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.BlockStmt,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.BreakStmt,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.CatchClause,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ContinueStmt,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.DoStmt,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,japa.parser.ast.Node) 3
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExpressionStmt,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node) 4
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForeachStmt,japa.parser.ast.Node) 3
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.IfStmt,japa.parser.ast.Node) 3
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.LabeledStmt,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ReturnStmt,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchEntryStmt,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchStmt,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SynchronizedStmt,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ThrowStmt,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TryStmt,japa.parser.ast.Node) 3
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TypeDeclarationStmt,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.WhileStmt,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ClassOrInterfaceType,japa.parser.ast.Node) 3
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.PrimitiveType,japa.parser.ast.Node) 1
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ReferenceType,japa.parser.ast.Node) 2
japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.WildcardType,japa.parser.ast.Node) 2
org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object) 2
org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object) 2
org.hamcrest.BaseDescription: void toJavaSyntax(java.lang.String) 2
org.hamcrest.TypeSafeMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description) 1
org.hamcrest.collection.IsCollectionWithSize: java.lang.Integer featureValueOf(java.util.Collection) 1
org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object) 1
org.hamcrest.core.IsEqual: boolean isArray(java.lang.Object) 1
org.hamcrest.core.IsInstanceOf: boolean matches(java.lang.Object,org.hamcrest.Description) 1
org.hamcrest.internal.ArrayIterator: void <init>(java.lang.Object) 1
org.hamcrest.number.OrderingComparison: boolean matchesSafely(java.lang.Comparable) 1
org.hamcrest.number.OrderingComparison: void describeMismatchSafely(java.lang.Comparable,org.hamcrest.Description) 1
org.jsonschema2pojo.Jackson2Annotator: void dateField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode) 1
org.jsonschema2pojo.Jackson2Annotator: void dateTimeField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode) 1
org.jsonschema2pojo.Jackson2Annotator: void propertyField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,java.lang.String,com.fasterxml.jackson.databind.JsonNode) 3
org.jsonschema2pojo.Jackson2Annotator: void timeField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode) 1
org.jsonschema2pojo.Jsonschema2Pojo: java.lang.String getNodeName(java.lang.String,org.jsonschema2pojo.GenerationConfig) 2
org.jsonschema2pojo.SchemaMapper: com.fasterxml.jackson.databind.node.ObjectNode readSchema(java.net.URL) 3
org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String) 3
org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String,java.net.URI) 1
org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.net.URL) 1
org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput() 5
org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode() 5
org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput() 3
org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject() 3
org.jsonschema2pojo.SchemaStore: boolean selfReferenceWithoutParentFile(org.jsonschema2pojo.Schema,java.lang.String) 2
org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String) 4
org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File) 5
org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File) 5
org.jsonschema2pojo.SourceSortOrderTest: java.io.File mockFile(boolean) 1
org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST() 2
org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST() 2
org.jsonschema2pojo.SourceSortOrderTest: void testTwoDirectoriesAreCompared(java.util.Comparator) 1
org.jsonschema2pojo.SourceSortOrderTest: void testTwoFilesAreCompared(java.util.Comparator) 1
org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema) 3
org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JFieldVar addAdditionalPropertiesField(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JType) 2
org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JMethod addBuilder(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JType,com.sun.codemodel.JFieldVar) 1
org.jsonschema2pojo.rules.ArrayRule: com.sun.codemodel.JClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema) 2
org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique() 2
org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes() 4
org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList() 3
org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithUniqueItemsProducesSet() 1
org.jsonschema2pojo.rules.BuilderRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema) 2
org.jsonschema2pojo.rules.BuilderRule: void generateNoArgsBaseBuilderConstructor(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass) 2
org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema) 1
org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JMethod generateFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set) 3
org.jsonschema2pojo.rules.ConstructorRule: void addCopyConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set) 2
org.jsonschema2pojo.rules.ConstructorRule: void addFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set) 2
org.jsonschema2pojo.rules.ConstructorRule: void handleMultiChoiceConstructorConfiguration(com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema) 3
org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode) 4
org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode) 4
org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultValue(com.sun.codemodel.JType,java.lang.String) 1
org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema) 2
org.jsonschema2pojo.rules.DigitsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar) 2
org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema) 6
org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable() 3
org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits() 12
org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed() 6
org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema) 7
org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JInvocation illegalArgumentInvocation(com.sun.codemodel.JDefinedClass,java.lang.String,com.sun.codemodel.JType,com.sun.codemodel.JVar) 1
org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode) 3
org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode) 3
org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode) 3
org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode) 3
org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addPublicSetMethod(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JMethod) 1
org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addPublicWithMethod(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JMethod) 1
org.jsonschema2pojo.rules.DynamicPropertiesRule: void addSetProperty(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JBlock,java.lang.String,com.sun.codemodel.JType,com.sun.codemodel.JVar,com.fasterxml.jackson.databind.JsonNode) 2
org.jsonschema2pojo.rules.EnumRule: boolean isString(com.sun.codemodel.JType) 1
org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JFieldVar addQuickLookupMap(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass) 2
org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema) 12
org.jsonschema2pojo.rules.EnumRule: java.lang.String getConstantName(java.lang.String,java.lang.String) 1
org.jsonschema2pojo.rules.EnumRule: java.lang.String getEnumName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer) 3
org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinition(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType) 3
org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinitionWithJavaEnumsExtension(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType) 2
org.jsonschema2pojo.rules.EnumRule: void addEnumConstants(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema) 3
org.jsonschema2pojo.rules.EnumRule: void addFactoryMethod(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass) 1
org.jsonschema2pojo.rules.EnumRule: void addFieldAccessors(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar) 1
org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName() 6
org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig() 4
org.jsonschema2pojo.rules.FormatRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema) 2
org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateTimeType(org.jsonschema2pojo.GenerationConfig) 2
org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateType(org.jsonschema2pojo.GenerationConfig) 2
org.jsonschema2pojo.rules.FormatRule: java.lang.Class getTimeType(org.jsonschema2pojo.GenerationConfig) 2
org.jsonschema2pojo.rules.FormatRule: java.util.Map getFormatTypeMapping(org.jsonschema2pojo.GenerationConfig) 1
org.jsonschema2pojo.rules.FormatRuleArraysTest: void <init>(java.lang.String,java.lang.Class) 1
org.jsonschema2pojo.rules.FormatRuleArraysTest: void useArraysWithCustomTypeMapping() 2
org.jsonschema2pojo.rules.FormatRuleJodaTest: void applyGeneratesTypeFromFormatValue() 1
org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig() 3
org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class) 2
org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void usePrimitivesWithCustomTypeMapping() 2
org.jsonschema2pojo.rules.FormatRuleTest: void applyGeneratesTypeFromFormatValue() 1
org.jsonschema2pojo.rules.MediaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema) 1
org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar) 4
org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema) 8
org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable() 3
org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength() 12
org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType() 12
org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength() 9
org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength() 9
org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed() 6
org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar) 4
org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema) 8
org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable() 3
org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength() 12
org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType() 12
org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength() 9
org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength() 9
org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed() 6
org.jsonschema2pojo.rules.MinimumMaximumRule: boolean isApplicableType(com.sun.codemodel.JFieldVar) 2
org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema) 7
org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable() 5
org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum() 10
org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum() 14
org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum() 10
org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed() 7
org.jsonschema2pojo.rules.NotRequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema) 2
org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JDefinedClass createClass(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage) 2
org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema) 10
org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode) 6
org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode) 9
org.jsonschema2pojo.rules.ObjectRule: void addParcelSupport(com.sun.codemodel.JDefinedClass) 1
org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass) 5
org.jsonschema2pojo.rules.PatternRule: boolean isApplicableType(com.sun.codemodel.JFieldVar) 2
org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema) 3
org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable() 3
org.jsonschema2pojo.rules.PatternRuleTest: void testRegex() 6
org.jsonschema2pojo.rules.PropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema) 3
org.jsonschema2pojo.rules.PropertyRule: boolean hasEnumerated(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String) 1
org.jsonschema2pojo.rules.PropertyRule: com.fasterxml.jackson.databind.JsonNode resolveRefs(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema) 2
org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema) 3
org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JMethod addBuilderMethod(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,java.lang.String,com.fasterxml.jackson.databind.JsonNode) 1
org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JMethod addGetter(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,java.lang.String,com.fasterxml.jackson.databind.JsonNode,boolean,boolean) 2
org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JType getReturnType(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,boolean,boolean) 2
org.jsonschema2pojo.rules.PropertyRuleTest: java.lang.String getGeneratedMethodTypeName(com.sun.codemodel.JDefinedClass) 1
org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode) 2
org.jsonschema2pojo.rules.PropertyRuleTest: void setup() 2
org.jsonschema2pojo.rules.RequiredArrayRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema) 3
org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303() 2
org.jsonschema2pojo.rules.RequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema) 3
org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema) 7
org.jsonschema2pojo.rules.SchemaRule: java.lang.String nameFromRef(java.lang.String) 1
org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly() 7
org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated() 3
org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded() 5
org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema) 7
org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getIntegerType(com.sun.codemodel.JCodeModel,com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.GenerationConfig) 2
org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getNumberType(com.sun.codemodel.JCodeModel,org.jsonschema2pojo.GenerationConfig) 2
org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType unboxIfNecessary(com.sun.codemodel.JType,org.jsonschema2pojo.GenerationConfig) 1
org.jsonschema2pojo.rules.TypeRuleTest: void applyChoosesObjectOnUnrecognizedType() 1
org.jsonschema2pojo.rules.TypeRuleTest: void applyDefaultsToTypeAnyObject() 1
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesAnyAsObject() 1
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimal() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble() 3
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigInteger() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong() 3
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBoolean() 1
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBooleanPrimitive() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesInteger() 1
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerPrimitive() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeBigInteger() 1
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeInteger() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeIntegerPrimitive() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLong() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitive() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumGreaterThanIntegerMax() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumLessThanIntegerMin() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumGreaterThanIntegerMax() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumLessThanIntegerMin() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumGreaterThanIntegerMax() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumLessThanIntegerMin() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumGreaterThanIntegerMax() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumLessThanIntegerMin() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNullAsObject() 1
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumber() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive() 3
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeBigDecimal() 1
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDouble() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDoublePrimitive() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloat() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloatPrimitive() 2
org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesString() 1
org.jsonschema2pojo.rules.TypeRuleTest: void wireUpConfig() 1
org.jsonschema2pojo.rules.ValidRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema) 1
org.jsonschema2pojo.util.LanguageFeatures: boolean canUseJava7(org.jsonschema2pojo.GenerationConfig) 1
org.jsonschema2pojo.util.LanguageFeatures: boolean canUseJava8(org.jsonschema2pojo.GenerationConfig) 1
org.jsonschema2pojo.util.LanguageFeaturesTest: org.jsonschema2pojo.GenerationConfig mockConfig(java.lang.String) 1
org.jsonschema2pojo.util.NameHelper: java.lang.String capitalizeTrailingWords(java.lang.String) 1
org.jsonschema2pojo.util.NameHelper: java.lang.String getBaseBuilderClassName(com.sun.codemodel.JClass) 1
org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode) 1
org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage) 2
org.jsonschema2pojo.util.NameHelper: java.lang.String getGetterName(java.lang.String,com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode) 2
org.jsonschema2pojo.util.NameHelperTest: org.jsonschema2pojo.util.NameHelper helper(boolean) 1
org.jsonschema2pojo.util.ParcelableHelper: boolean extendsParcelable(com.sun.codemodel.JDefinedClass) 1
org.jsonschema2pojo.util.ParcelableHelper: java.lang.String getListType(com.sun.codemodel.JType) 1
org.jsonschema2pojo.util.ParcelableHelper: void addConstructorFromParcel(com.sun.codemodel.JDefinedClass) 2
org.jsonschema2pojo.util.ParcelableHelper: void addWriteToParcel(com.sun.codemodel.JDefinedClass) 1
org.jsonschema2pojo.util.ReflectionHelper: boolean isFinal(com.sun.codemodel.JType) 1
org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass definedClassOrNullFromType(com.sun.codemodel.JType) 3
org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass getBaseBuilderClass(com.sun.codemodel.JClass) 1
org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean) 4
org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema resolveSchemaRefsRecursive(org.jsonschema2pojo.Schema) 2
org.jsonschema2pojo.util.SerializableHelper: void processDefinedClassForSerializableSupport(com.sun.codemodel.JDefinedClass,java.io.DataOutputStream) 1
org.jsonschema2pojo.util.SerializableHelper: void processFieldVarForSerializableSupport(com.sun.codemodel.JFieldVar,java.io.DataOutputStream) 1
org.jsonschema2pojo.util.SerializableHelper: void processMethodCollectionForSerializableSupport(java.util.Iterator,java.io.DataOutputStream) 2
org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode) 1
org.mockito.internal.util.DefaultMockingDetails: void assertGoodMock() 1
org.mockito.internal.util.MockUtil: org.mockito.invocation.MockHandler getMockHandler(java.lang.Object) 1
org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object) 1
