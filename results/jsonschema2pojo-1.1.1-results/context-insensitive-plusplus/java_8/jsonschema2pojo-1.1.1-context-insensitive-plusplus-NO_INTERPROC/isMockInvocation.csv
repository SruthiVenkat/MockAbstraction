<org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode)>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode)>	65	<org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode)>/schema#_63
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	93	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/schema#_91
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.rules.EnumRule.apply/0	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	99	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/enumRule#_96
<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/org.jsonschema2pojo.util.NameHelper.getClassName/0	<org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>	65	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/$stack9
<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/org.jsonschema2pojo.util.NameHelper.replaceIllegalCharacters/0	<org.jsonschema2pojo.util.NameHelper: java.lang.String replaceIllegalCharacters(java.lang.String)>	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>	66	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/$stack16
<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/org.jsonschema2pojo.util.NameHelper.normalizeName/0	<org.jsonschema2pojo.util.NameHelper: java.lang.String normalizeName(java.lang.String)>	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>	67	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/$stack21
<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/org.jsonschema2pojo.rules.TypeRule.apply/0	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>	80	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/$stack39
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	100	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack17
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	101	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack22
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	102	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack27
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	118	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack17
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	119	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack22
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	120	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack27
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	139	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack27
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	140	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack32
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	141	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack36
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	142	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack41
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	143	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack47
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	162	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack27
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	163	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack32
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	164	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack36
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	165	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack41
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	166	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack47
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>	180	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/$stack8
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>	181	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/$stack14
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate()>/org.jsonschema2pojo.rules.FormatRule.apply/0	<org.jsonschema2pojo.rules.FormatRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate()>	81	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate()>/mockFormatRule#_80
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray()>/org.jsonschema2pojo.rules.ArrayRule.apply/0	<org.jsonschema2pojo.rules.ArrayRule: com.sun.codemodel.JClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray()>	561	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray()>/mockArrayRule#_560
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject()>/org.jsonschema2pojo.rules.ObjectRule.apply/0	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject()>	579	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject()>/mockObjectRule#_578
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	100	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack17
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	101	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack22
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	102	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack27
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	118	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack17
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	119	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack22
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	120	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack27
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	139	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack27
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	140	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack32
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	141	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack36
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	142	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack41
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	143	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack47
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	162	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack27
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	163	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack32
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	164	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack36
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	165	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack41
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	166	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack47
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>	180	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/$stack8
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>	181	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/$stack14
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	103	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack16
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	104	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack21
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	105	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack26
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	122	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack16
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	123	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack21
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	124	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack26
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	144	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack25
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	145	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack30
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	146	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack34
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	147	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack39
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	148	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack44
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	149	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack50
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	164	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack8
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	165	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack14
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	105	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack26
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	106	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack31
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	107	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack36
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	108	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack41
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	109	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack47
<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>	123	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/$stack8
<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>	124	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/$stack14
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>	99	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack13
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/org.jsonschema2pojo.SchemaGenerator.schemaFromExample/0	<org.jsonschema2pojo.SchemaGenerator: com.fasterxml.jackson.databind.node.ObjectNode schemaFromExample(java.net.URL)>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>	79	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/mockSchemaGenerator#_78
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/org.jsonschema2pojo.SchemaGenerator.schemaFromExample/0	<org.jsonschema2pojo.SchemaGenerator: com.fasterxml.jackson.databind.node.ObjectNode schemaFromExample(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>	108	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/mockSchemaGenerator#_107
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithUniqueItemsProducesSet()>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithUniqueItemsProducesSet()>	61	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithUniqueItemsProducesSet()>/schema#_60
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>	86	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>/schema#_84
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>	112	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/schema#_110
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique()>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique()>	139	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique()>/schema#_137
<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/org.jsonschema2pojo.rules.TypeRule.apply/0	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>	73	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/$stack42
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.Schema.setJavaTypeIfEmpty/0	<org.jsonschema2pojo.Schema: void setJavaTypeIfEmpty(com.sun.codemodel.JType)>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	94	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/schema#_91
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.rules.EnumRule.apply/1	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	103	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/$stack34
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.Schema.setJavaTypeIfEmpty/1	<org.jsonschema2pojo.Schema: void setJavaTypeIfEmpty(com.sun.codemodel.JType)>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	104	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/$stack38
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	108	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack50
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	109	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack56
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	110	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack61
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	126	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack50
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	127	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack56
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	128	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack61
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	149	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack70
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	150	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack76
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	151	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack82
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	172	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack74
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	173	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack80
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	174	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack86
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>	187	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/$stack36
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>	188	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/$stack41
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>	197	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>/$stack16
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>	198	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>/$stack21
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	108	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack50
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	109	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack56
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	110	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack61
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	126	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack50
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	127	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack56
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	128	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack61
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	149	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack70
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	150	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack76
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	151	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack82
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	172	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack74
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	173	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack80
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	174	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack86
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>	187	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/$stack36
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>	188	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/$stack41
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>	197	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>/$stack16
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>	198	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>/$stack21
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	111	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack49
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	112	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack55
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.sun.codemodel.JFieldVar.annotate/2	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	113	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack60
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	114	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack65
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	130	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack49
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	131	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack55
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.sun.codemodel.JFieldVar.annotate/2	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	132	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack60
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	133	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack65
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JFieldVar.annotate/2	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	155	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack73
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	156	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack79
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JFieldVar.annotate/3	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	157	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack85
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	158	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack91
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	171	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack36
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	172	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack41
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	173	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack48
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>	182	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/$stack16
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>	183	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/$stack21
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>	184	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/$stack28
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>	185	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/$stack33
<org.jsonschema2pojo.SourceSortOrderTest: void testTwoFilesAreCompared(java.util.Comparator)>/java.io.File.compareTo/0	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrderTest: void testTwoFilesAreCompared(java.util.Comparator)>	56	<org.jsonschema2pojo.SourceSortOrderTest: void testTwoFilesAreCompared(java.util.Comparator)>/$stack9
<org.jsonschema2pojo.SourceSortOrderTest: void testTwoDirectoriesAreCompared(java.util.Comparator)>/java.io.File.compareTo/0	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrderTest: void testTwoDirectoriesAreCompared(java.util.Comparator)>	64	<org.jsonschema2pojo.SourceSortOrderTest: void testTwoDirectoriesAreCompared(java.util.Comparator)>/$stack9
<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST()>/java.io.File.compareTo/0	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST()>	76	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST()>/$stack18
<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST()>/java.io.File.compareTo/1	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST()>	77	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST()>/$stack24
<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST()>/java.io.File.compareTo/0	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST()>	89	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST()>/$stack18
<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST()>/java.io.File.compareTo/1	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST()>	90	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST()>/$stack24
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	115	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack70
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	116	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack76
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	117	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack82
<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>	130	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/$stack36
<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>	131	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/$stack41
<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>	140	<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>/$stack16
<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>	141	<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>/$stack21
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>	105	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack35
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>	106	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack41
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>	115	<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack16
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>	116	<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack21
<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>/org.jsonschema2pojo.rules.SchemaRule.apply/0	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>	59	<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>/$stack24
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/org.jsonschema2pojo.rules.SchemaRule.apply/0	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>	89	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/$stack34
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/org.jsonschema2pojo.rules.SchemaRule.apply/0	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>	118	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/$stack37
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>/org.jsonschema2pojo.rules.SchemaRule.apply/0	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>	139	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>/$stack25
<org.jsonschema2pojo.rules.PropertyRuleTest: void setup()>/org.jsonschema2pojo.GenerationConfig.isIncludeGetters/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeGetters()>	<org.jsonschema2pojo.rules.PropertyRuleTest: void setup()>	54	<org.jsonschema2pojo.rules.PropertyRuleTest: void setup()>/$stack2
<org.jsonschema2pojo.rules.PropertyRuleTest: void setup()>/org.jsonschema2pojo.GenerationConfig.isUseOptionalForGetters/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseOptionalForGetters()>	<org.jsonschema2pojo.rules.PropertyRuleTest: void setup()>	55	<org.jsonschema2pojo.rules.PropertyRuleTest: void setup()>/$stack8
<org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode)>/org.jsonschema2pojo.Schema.getContent/0	<org.jsonschema2pojo.Schema: com.fasterxml.jackson.databind.JsonNode getContent()>	<org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode)>	64	<org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode)>/schema#_63
<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/org.jsonschema2pojo.GenerationConfig.getRefFragmentPathDelimiters/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getRefFragmentPathDelimiters()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>	61	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/mockGenerationConfig#_60
<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/org.jsonschema2pojo.rules.RuleFactory.getTypeRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getTypeRule()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>	64	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/$stack24
<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/org.jsonschema2pojo.rules.RuleFactory.getSchemaStore/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.SchemaStore getSchemaStore()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>	65	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/$stack28
<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>	66	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/$stack33
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.Schema.getContent/0	<org.jsonschema2pojo.Schema: com.fasterxml.jackson.databind.JsonNode getContent()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	92	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/schema#_91
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.rules.RuleFactory.getEnumRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getEnumRule()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	97	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/$stack24
<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>/org.jsonschema2pojo.GenerationConfig.getRefFragmentPathDelimiters/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getRefFragmentPathDelimiters()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>	120	<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>/mockGenerationConfig#_119
<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>/org.jsonschema2pojo.rules.RuleFactory.getSchemaStore/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.SchemaStore getSchemaStore()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>	122	<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>/$stack18
<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>	123	<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>/$stack22
<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/org.jsonschema2pojo.rules.RuleFactory.getNameHelper/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.util.NameHelper getNameHelper()>	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>	55	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/$stack1
<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/org.jsonschema2pojo.rules.RuleFactory.getLogger/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.RuleLogger getLogger()>	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>	56	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/$stack6
<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/org.jsonschema2pojo.rules.RuleFactory.getAnnotator/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.Annotator getAnnotator()>	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>	57	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/$stack11
<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/org.jsonschema2pojo.rules.RuleFactory.getTypeRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getTypeRule()>	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>	58	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/$stack16
<org.jsonschema2pojo.rules.FormatRuleArraysTest: void <init>(java.lang.String,java.lang.Class)>/org.jsonschema2pojo.GenerationConfig.getFormatTypeMapping/0	<org.jsonschema2pojo.GenerationConfig: java.util.Map getFormatTypeMapping()>	<org.jsonschema2pojo.rules.FormatRuleArraysTest: void <init>(java.lang.String,java.lang.Class)>	59	<org.jsonschema2pojo.rules.FormatRuleArraysTest: void <init>(java.lang.String,java.lang.Class)>/$stack5
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	97	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack3
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	99	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack11
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	103	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack33
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	115	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack3
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	117	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack11
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	121	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack33
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	133	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack5
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	137	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack16
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/1	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	138	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/maxSubNode#_136
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	144	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack53
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	156	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack5
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	160	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack16
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.asInt/1	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	161	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/maxSubNode#_159
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	167	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack53
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>	179	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/$stack2
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>	182	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/$stack20
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>	193	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>/$stack2
<org.jsonschema2pojo.rules.TypeRuleTest: void wireUpConfig()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.TypeRuleTest: void wireUpConfig()>	52	<org.jsonschema2pojo.rules.TypeRuleTest: void wireUpConfig()>/$stack1
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate()>/org.jsonschema2pojo.rules.RuleFactory.getFormatRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getFormatRule()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate()>	82	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate()>/$stack32
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerPrimitive()>	110	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerPrimitive()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeIntegerPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeIntegerPrimitive()>	126	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeIntegerPrimitive()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigInteger()>/org.jsonschema2pojo.GenerationConfig.isUseBigIntegers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseBigIntegers()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigInteger()>	141	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigInteger()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>/org.jsonschema2pojo.GenerationConfig.isUseBigIntegers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseBigIntegers()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>	157	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>/org.jsonschema2pojo.GenerationConfig.isUseLongIntegers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseLongIntegers()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>	158	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>/$stack18
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimal()>/org.jsonschema2pojo.GenerationConfig.isUseBigDecimals/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseBigDecimals()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimal()>	173	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimal()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>/org.jsonschema2pojo.GenerationConfig.isUseDoubleNumbers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseDoubleNumbers()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>	189	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>/org.jsonschema2pojo.GenerationConfig.isUseBigDecimals/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseBigDecimals()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>	190	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>/$stack18
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeInteger()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeInteger()>	207	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeInteger()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitive()>	223	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitive()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLong()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLong()>	239	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLong()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumGreaterThanIntegerMax()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumGreaterThanIntegerMax()>	255	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumGreaterThanIntegerMax()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumGreaterThanIntegerMax()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumGreaterThanIntegerMax()>	271	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumGreaterThanIntegerMax()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumLessThanIntegerMin()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumLessThanIntegerMin()>	287	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumLessThanIntegerMin()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumLessThanIntegerMin()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumLessThanIntegerMin()>	303	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumLessThanIntegerMin()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumLessThanIntegerMin()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumLessThanIntegerMin()>	319	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumLessThanIntegerMin()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumLessThanIntegerMin()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumLessThanIntegerMin()>	335	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumLessThanIntegerMin()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumGreaterThanIntegerMax()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumGreaterThanIntegerMax()>	351	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumGreaterThanIntegerMax()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumGreaterThanIntegerMax()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumGreaterThanIntegerMax()>	367	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumGreaterThanIntegerMax()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumber()>/org.jsonschema2pojo.GenerationConfig.isUseDoubleNumbers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseDoubleNumbers()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumber()>	396	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumber()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>	411	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUseDoubleNumbers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseDoubleNumbers()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>	412	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>/$stack18
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloatPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloatPrimitive()>	428	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloatPrimitive()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloat()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloat()>	444	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloat()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDoublePrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDoublePrimitive()>	460	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDoublePrimitive()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDouble()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDouble()>	476	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDouble()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBooleanPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBooleanPrimitive()>	518	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBooleanPrimitive()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray()>/org.jsonschema2pojo.rules.RuleFactory.getArrayRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getArrayRule()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray()>	562	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray()>/$stack19
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject()>/org.jsonschema2pojo.rules.RuleFactory.getObjectRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getObjectRule()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject()>	580	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject()>/$stack19
<org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303()>/org.jsonschema2pojo.GenerationConfig.getPropertyWordDelimiters/0	<org.jsonschema2pojo.GenerationConfig: char[] getPropertyWordDelimiters()>	<org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303()>	94	<org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303()>/config#_93
<org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303()>	98	<org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303()>/config#_93
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	97	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack3
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	99	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack11
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	103	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack33
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	115	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack3
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	117	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack11
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	121	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack33
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	133	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack5
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	137	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack16
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/1	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	138	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/maxSubNode#_136
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	144	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack53
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	156	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack5
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	160	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack16
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.asInt/1	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	161	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/maxSubNode#_159
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	167	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack53
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>	179	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/$stack2
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>	182	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/$stack20
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>	193	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>/$stack2
<org.jsonschema2pojo.util.NameHelperTest: org.jsonschema2pojo.util.NameHelper helper(boolean)>/org.jsonschema2pojo.GenerationConfig.isUseTitleAsClassname/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseTitleAsClassname()>	<org.jsonschema2pojo.util.NameHelperTest: org.jsonschema2pojo.util.NameHelper helper(boolean)>	76	<org.jsonschema2pojo.util.NameHelperTest: org.jsonschema2pojo.util.NameHelper helper(boolean)>/config#_75
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	100	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack3
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.fasterxml.jackson.databind.JsonNode.asText/0	<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	102	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack12
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	106	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack32
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	119	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack3
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.fasterxml.jackson.databind.JsonNode.asText/0	<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	121	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack12
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	125	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack32
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	138	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack5
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.fasterxml.jackson.databind.JsonNode.asText/0	<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	142	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack18
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.fasterxml.jackson.databind.JsonNode.asText/1	<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	143	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/maxSubNode#_141
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	150	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack56
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	163	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack2
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	166	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack20
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>	178	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/$stack2
<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>/org.jsonschema2pojo.GenerationConfig.isUseJodaLocalTimes/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseJodaLocalTimes()>	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>	66	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>/$stack1
<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>/org.jsonschema2pojo.GenerationConfig.isUseJodaLocalDates/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseJodaLocalDates()>	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>	67	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>/$stack7
<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>/org.jsonschema2pojo.GenerationConfig.isUseJodaDates/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseJodaDates()>	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>	68	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>/$stack13
<org.jsonschema2pojo.SourceSortOrderTest: java.io.File mockFile(boolean)>/java.io.File.isDirectory/0	<java.io.File: boolean isDirectory()>	<org.jsonschema2pojo.SourceSortOrderTest: java.io.File mockFile(boolean)>	103	<org.jsonschema2pojo.SourceSortOrderTest: java.io.File mockFile(boolean)>/mockFile#_102
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	99	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack4
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	103	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack14
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.fasterxml.jackson.databind.JsonNode.asInt/1	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	104	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack20
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	110	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack53
<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>	122	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/$stack2
<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>	125	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/$stack20
<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>	136	<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>/$stack2
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>	95	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack3
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/com.fasterxml.jackson.databind.JsonNode.asText/0	<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>	98	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack9
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>	100	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack18
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>	111	<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack2
<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>/org.jsonschema2pojo.rules.RuleFactory.getSchemaRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getSchemaRule()>	<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>	49	<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>/mockRuleFactory#_48
<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>	50	<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>/mockRuleFactory#_48
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/org.jsonschema2pojo.GenerationConfig.getSourceType/0	<org.jsonschema2pojo.GenerationConfig: org.jsonschema2pojo.SourceType getSourceType()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>	76	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/mockGenerationConfig#_75
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/org.jsonschema2pojo.rules.RuleFactory.getSchemaRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getSchemaRule()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>	82	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/mockRuleFactory#_81
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>	83	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/mockRuleFactory#_81
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/org.jsonschema2pojo.GenerationConfig.getSourceType/0	<org.jsonschema2pojo.GenerationConfig: org.jsonschema2pojo.SourceType getSourceType()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>	105	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/mockGenerationConfig#_104
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/org.jsonschema2pojo.rules.RuleFactory.getSchemaRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getSchemaRule()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>	111	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/mockRuleFactory#_110
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>	112	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/mockRuleFactory#_110
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>/org.jsonschema2pojo.rules.RuleFactory.getSchemaRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getSchemaRule()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>	131	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>/mockRuleFactory#_130
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>	132	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>/mockRuleFactory#_130
<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class)>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class)>	69	<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class)>/$stack5
<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class)>/org.jsonschema2pojo.GenerationConfig.getFormatTypeMapping/0	<org.jsonschema2pojo.GenerationConfig: java.util.Map getFormatTypeMapping()>	<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class)>	70	<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class)>/$stack11
<org.jsonschema2pojo.util.LanguageFeaturesTest: org.jsonschema2pojo.GenerationConfig mockConfig(java.lang.String)>/org.jsonschema2pojo.GenerationConfig.getTargetVersion/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getTargetVersion()>	<org.jsonschema2pojo.util.LanguageFeaturesTest: org.jsonschema2pojo.GenerationConfig mockConfig(java.lang.String)>	91	<org.jsonschema2pojo.util.LanguageFeaturesTest: org.jsonschema2pojo.GenerationConfig mockConfig(java.lang.String)>/config#_90
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>/org.jsonschema2pojo.Schema.getId/0	<org.jsonschema2pojo.Schema: java.net.URI getId()>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>	85	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>/schema#_84
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>/org.jsonschema2pojo.GenerationConfig.isUseDoubleNumbers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseDoubleNumbers()>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>	87	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>/$stack30
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/org.jsonschema2pojo.Schema.getId/0	<org.jsonschema2pojo.Schema: java.net.URI getId()>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>	111	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/schema#_110
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>	113	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/$stack30
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/org.jsonschema2pojo.GenerationConfig.isUseDoubleNumbers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseDoubleNumbers()>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>	114	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/$stack36
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique()>/org.jsonschema2pojo.Schema.getId/0	<org.jsonschema2pojo.Schema: java.net.URI getId()>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique()>	138	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique()>/schema#_137
