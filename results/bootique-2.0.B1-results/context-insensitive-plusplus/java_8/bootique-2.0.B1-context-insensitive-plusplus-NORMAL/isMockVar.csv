<io.bootique.run.DefaultRunner: io.bootique.command.CommandOutcome run()>/$stack2
<io.bootique.command.CommandDecorator: io.bootique.command.CommandDecorator beforeRun(io.bootique.command.Command)>/command#_0
<io.bootique.command.CommandDecorator: io.bootique.command.CommandDecorator alsoRun(io.bootique.command.Command)>/command#_0
<io.bootique.command.CommandDecorator$Builder: io.bootique.command.CommandDecorator$Builder beforeRun(io.bootique.command.Command)>/command#_0
<io.bootique.command.CommandDecorator$Builder: io.bootique.command.CommandDecorator$Builder alsoRun(io.bootique.command.Command)>/command#_0
<io.bootique.help.config.ConfigSectionGenerator: void <init>(io.bootique.help.ConsoleAppender,java.util.Set)>/out#_0
<io.bootique.shutdown.DefaultShutdownManagerTest: void testShutdownOne()>/$stack4
<io.bootique.shutdown.DefaultShutdownManagerTest: void testShutdownAll()>/$stack7
<io.bootique.shutdown.DefaultShutdownManagerTest: void testShutdownAll()>/$stack10
<io.bootique.command.CommandRefWithArgs$NoArgsBuilder: void <init>(io.bootique.command.Command)>/command#_0
<io.bootique.command.ManagedCommand$Builder: void <init>(io.bootique.command.Command)>/command#_0
<org.mockito.internal.stubbing.StubberImpl: java.lang.Object when(java.lang.Object)>/mock#_0
<io.bootique.BQModuleMetadata$Builder: void <init>(io.bootique.di.BQModule)>/module#_0
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<org.mockito.internal.MockitoCore: void assertNotStubOnlyMock(java.lang.Object)>/mock#_0
<io.bootique.BQModuleProvider: io.bootique.BQModuleMetadata$Builder moduleBuilder()>/$stack1
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown()>/$stack8
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown()>/$stack11
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown_Unresponsive_Timeout()>/$stack11
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown_Unresponsive_Timeout()>/$stack18
<io.bootique.command.CommandDecoratorIT: void testAlsoRun_Instance()>/cmd#_66
<io.bootique.command.CommandDecoratorIT: void testBeforeRun_Instance()>/cmd#_118
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/c1#_162
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/c2#_165
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/c3#_168
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/c4#_171
<io.bootique.command.CommandDecoratorIT: void testMultipleDecoratorsForTheSameCommand()>/c2#_194
<io.bootique.command.CommandDecoratorIT: void testMultipleDecoratorsForTheSameCommand()>/c1#_191
<io.bootique.run.DefaultRunnerTest: void testRun()>/mockDefault#_71
<io.bootique.run.DefaultRunnerTest: void testRun()>/mockHelp#_72
<io.bootique.run.DefaultRunnerTest: void testRun()>/mockC1#_74
<io.bootique.run.DefaultRunnerTest: void testRun()>/mockC2#_75
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/mockDefault#_91
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/mockHelp#_92
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/mockC2#_95
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/mockC1#_94
<io.bootique.run.DefaultRunnerTest: void testRun_NoMatch()>/mockC2#_115
<io.bootique.run.DefaultRunnerTest: void testRun_NoMatch()>/mockC1#_114
<io.bootique.run.DefaultRunnerTest: void testRun_NoMatch()>/mockHelp#_112
<io.bootique.run.DefaultRunnerTest: void testRun_NoMatch()>/mockDefault#_111
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/mockDefault#_125
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/mockHelp#_126
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/mockC1#_128
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/mockC2#_129
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/mockHelp#_145
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/mockC1#_147
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/mockC2#_148
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_NoFallback()>/mockC1#_163
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_NoFallback()>/mockC2#_164
<io.bootique.log.DefaultBootLoggerTest: void testStdout()>/$stack5
<io.bootique.log.DefaultBootLoggerTest: void testStderr()>/$stack5
<io.bootique.log.DefaultBootLoggerTest: void testTrace()>/$stack6
<io.bootique.jopt.JoptCliFactoryTest: io.bootique.command.Command addMockCommand(io.bootique.meta.application.CommandMetadata$Builder)>/mock#_121
<org.mockito.internal.util.DefaultMockingDetails: boolean isMock()>/$stack1
<org.mockito.internal.util.DefaultMockingDetails: boolean isSpy()>/$stack1
<org.mockito.internal.util.DefaultMockingDetails: org.mockito.internal.stubbing.InvocationContainerImpl getInvocationContainer()>/$stack1
<org.mockito.internal.util.DefaultMockingDetails: java.lang.String printInvocations()>/$stack2
<org.mockito.internal.util.DefaultMockingDetails: org.mockito.invocation.MockHandler mockHandler()>/$stack1
<org.mockito.internal.util.MockUtil: org.mockito.invocation.MockHandler getMockHandler(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: org.mockito.invocation.MockHandler getMockHandler(java.lang.Object)>/mock#2#_73
<org.mockito.internal.util.MockUtil: org.mockito.internal.stubbing.InvocationContainerImpl getInvocationContainer(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/mock#2#_108
<org.mockito.internal.util.MockUtil: java.lang.Object resolve(java.lang.Object)>/mock_$$A_1#_118
<org.mockito.internal.util.MockUtil: org.mockito.mock.MockName getMockName(java.lang.Object)>/mock#_0
<io.bootique.jopt.JoptCliFactoryCommandNameTest: void addMockCommand(java.lang.String,java.lang.String[])>/mock#_80
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/mock#_0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoException stubPassedToVerify(java.lang.Object)>/mock#_0
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/testModuleProvider1#_50
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/metadata1#_57
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/metadata2#_62
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/metadata3#_67
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/testModuleProvider2#_51
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/testModuleProvider3#_52
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/testModuleProvider1#_91
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/metadata1#_98
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/metadata2#_103
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/metadata3#_108
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/testModuleProvider2#_92
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/testModuleProvider3#_93
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/testModuleProvider1#_132
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/metadata1#_139
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/metadata2#_144
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/metadata3#_149
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/testModuleProvider2#_133
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/testModuleProvider3#_134
<io.bootique.ConfigModuleTest: void testConfigConfig()>/f#_48
<org.mockito.internal.verification.MockAwareVerificationMode: void verify(org.mockito.internal.verification.api.VerificationData)>/$stack6
<org.mockito.internal.verification.MockAwareVerificationMode: void verify(org.mockito.internal.verification.api.VerificationData)>/$stack14
<org.mockito.internal.verification.MockAwareVerificationMode: void verify(org.mockito.internal.verification.api.VerificationData)>/$stack10
<io.bootique.terminal.SttyTerminal: void <init>(io.bootique.log.BootLogger)>/logger#_0
<io.bootique.command.CommandRefWithArgs: io.bootique.command.CommandRefWithArgs$NoArgsBuilder commandRef(io.bootique.command.Command)>/command#_0
<io.bootique.command.ManagedCommand: io.bootique.command.ManagedCommand$Builder builder(io.bootique.command.Command)>/command#_0
<io.bootique.help.config.ConfigSectionGeneratorTest: void testTypeLabel()>/$stack7
<io.bootique.BQModuleMetadata$Builder: void <init>(io.bootique.di.BQModule,io.bootique.BQModuleMetadata$1)>/x0#_0
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#2#_130
<org.mockito.internal.MockitoCore: org.mockito.MockingDetails mockingDetails(java.lang.Object)>/toInspect#_0
<io.bootique.BQModuleMetadata: io.bootique.BQModuleMetadata$Builder builder(io.bootique.di.BQModule)>/module#_0
<io.bootique.run.DefaultRunnerTest: io.bootique.command.CommandOutcome run(java.util.Optional,java.util.Optional,io.bootique.command.Command[])>/$stack21
<io.bootique.run.DefaultRunnerTest: io.bootique.command.CommandOutcome run(java.util.Optional,java.util.Optional,io.bootique.command.Command[])>/executionPlanBuilder#_203
<io.bootique.log.DefaultBootLoggerTest: void testStdout()>/$stack4
<io.bootique.log.DefaultBootLoggerTest: void testStdout()>/$stack3
<io.bootique.log.DefaultBootLoggerTest: void testStderr()>/$stack4
<io.bootique.log.DefaultBootLoggerTest: void testStderr()>/$stack3
<io.bootique.log.DefaultBootLoggerTest: void testTrace()>/$stack4
<io.bootique.log.DefaultBootLoggerTest: void testTrace()>/$stack3
<io.bootique.log.DefaultBootLoggerTest: void testNoTrace()>/$stack4
<io.bootique.log.DefaultBootLoggerTest: void testNoTrace()>/$stack3
<io.bootique.config.jackson.parser.MultiFormatJsonNodeParserTest: void <init>()>/$stack3
<io.bootique.config.jackson.parser.MultiFormatJsonNodeParserTest: void <init>()>/$stack6
<io.bootique.jopt.JoptCliTest: void testStringsFor_Missing()>/$stack9
<io.bootique.jopt.JoptCliTest: void testCommandName()>/$stack4
<io.bootique.jopt.JoptCliTest: void testCommandName()>/$stack8
<io.bootique.terminal.SttyTerminalTest: void before()>/$stack3
<io.bootique.log.DefaultBootLogger: void stderr(java.lang.String,java.lang.Throwable)>/$stack3
<io.bootique.shutdown.DefaultShutdownManagerTest: void testShutdownOne()>/$stack1
<io.bootique.shutdown.DefaultShutdownManagerTest: void testShutdownAll()>/$stack1
<io.bootique.shutdown.DefaultShutdownManagerTest: void testShutdownAll()>/$stack3
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown()>/$stack5
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown()>/$stack6
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown_Unresponsive_Timeout()>/$stack14
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack32
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack37
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack42
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack47
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack32
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack37
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack42
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack47
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack33
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack38
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack42
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack47
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/$stack28
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/$stack33
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/$stack37
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_NoFallback()>/$stack23
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_NoFallback()>/$stack28
<io.bootique.shutdown.DefaultShutdownManager: void addShutdownHook(java.lang.AutoCloseable)>/shutdownHook#_0
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides()>/$stack9
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides_Chain()>/$stack9
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides_Chain()>/$stack17
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideCycle()>/$stack8
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideCycle()>/$stack16
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideIndirectCycle()>/$stack8
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideIndirectCycle()>/$stack16
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideIndirectCycle()>/$stack24
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideDupe()>/$stack8
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideDupe()>/$stack16
<io.bootique.RuntimeModuleMergerTest: void lambda$before$0(io.bootique.di.BQModule)>/$stack4
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/builder1#_56
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/builder2#_61
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/builder3#_66
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/builder1#_97
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/builder2#_102
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/builder3#_107
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/builder1#_138
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/builder2#_143
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/builder3#_148
<io.bootique.run.DefaultRunnerTest: io.bootique.command.Command mockCommand(java.lang.String,io.bootique.command.CommandOutcome,java.lang.String[])>/$stack10
<io.bootique.run.DefaultRunnerTest: io.bootique.command.Command mockCommand(java.lang.String,io.bootique.command.CommandOutcome,java.lang.String[])>/mock#_54
<io.bootique.run.DefaultRunnerTest: io.bootique.command.CommandOutcome run(java.util.Optional,java.util.Optional,io.bootique.command.Command[])>/$stack13
<io.bootique.RuntimeModuleMergerTest: io.bootique.BQModuleMetadata createBQModule(io.bootique.di.BQModule,java.lang.Class[])>/$stack4
<io.bootique.RuntimeModuleMergerTest: io.bootique.BQModuleMetadata createBQModule(io.bootique.di.BQModule,java.lang.Class[])>/bqModuleMock#_66
<io.bootique.jopt.JoptCliFactoryTest: io.bootique.command.Command addMockCommand(io.bootique.meta.application.CommandMetadata$Builder)>/$stack3
<io.bootique.jopt.JoptCliFactoryCommandNameTest: void addMockCommand(java.lang.String,java.lang.String[])>/$stack7
<io.bootique.shutdown.DefaultShutdownManagerTest: void testShutdownOne()>/$stack5
<io.bootique.shutdown.DefaultShutdownManagerTest: void testShutdownOne()>/$stack6
<io.bootique.shutdown.DefaultShutdownManagerTest: void testShutdownAll()>/$stack8
<io.bootique.shutdown.DefaultShutdownManagerTest: void testShutdownAll()>/$stack9
<io.bootique.shutdown.DefaultShutdownManagerTest: void testShutdownAll()>/$stack11
<io.bootique.shutdown.DefaultShutdownManagerTest: void testShutdownAll()>/$stack12
<io.bootique.help.config.ConfigSectionGeneratorTest: void testTypeLabel()>/$stack5
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown()>/$stack9
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown()>/$stack10
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown()>/$stack12
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown()>/$stack13
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown_Unresponsive_Timeout()>/$stack12
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown_Unresponsive_Timeout()>/$stack13
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown_Unresponsive_Timeout()>/$stack19
<io.bootique.shutdown.DefaultShutdownManagerIT: void testShutdown_Unresponsive_Timeout()>/$stack20
<io.bootique.shutdown.DefaultShutdownManagerTest: void before()>/$stack3
<io.bootique.shutdown.DefaultShutdownManagerTest: void before()>/$stack4
<io.bootique.shutdown.DefaultShutdownManagerTest: void before()>/$stack5
<io.bootique.shutdown.DefaultShutdownManagerTest: void before()>/$stack6
<io.bootique.shutdown.DefaultShutdownManagerIT: void before()>/$stack1
<io.bootique.shutdown.DefaultShutdownManagerIT: void before()>/$stack2
<io.bootique.shutdown.DefaultShutdownManagerIT: void before()>/$stack3
<io.bootique.shutdown.DefaultShutdownManagerIT: void before()>/$stack4
<io.bootique.command.CommandDecoratorIT: void testAlsoRun_Instance()>/$stack2
<io.bootique.command.CommandDecoratorIT: void testAlsoRun_Instance()>/$stack13
<io.bootique.command.CommandDecoratorIT: void testAlsoRun_Instance()>/$stack14
<io.bootique.command.CommandDecoratorIT: void testBeforeRun_Instance()>/$stack3
<io.bootique.command.CommandDecoratorIT: void testBeforeRun_Instance()>/$stack12
<io.bootique.command.CommandDecoratorIT: void testBeforeRun_Instance()>/$stack13
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/$stack6
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/$stack13
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/$stack20
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/$stack27
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/$stack43
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/$stack44
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/$stack48
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/$stack49
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/$stack53
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/$stack54
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/$stack58
<io.bootique.command.CommandDecoratorIT: void testBeforeAndAlsoRun()>/$stack59
<io.bootique.command.CommandDecoratorIT: void testMultipleDecoratorsForTheSameCommand()>/$stack3
<io.bootique.command.CommandDecoratorIT: void testMultipleDecoratorsForTheSameCommand()>/$stack10
<io.bootique.command.CommandDecoratorIT: void testMultipleDecoratorsForTheSameCommand()>/$stack24
<io.bootique.command.CommandDecoratorIT: void testMultipleDecoratorsForTheSameCommand()>/$stack25
<io.bootique.command.CommandDecoratorIT: void testMultipleDecoratorsForTheSameCommand()>/$stack29
<io.bootique.command.CommandDecoratorIT: void testMultipleDecoratorsForTheSameCommand()>/$stack30
<io.bootique.run.DefaultRunnerTest: void before()>/$stack1
<io.bootique.run.DefaultRunnerTest: void before()>/$stack2
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack31
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack33
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack36
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack38
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack41
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack43
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack46
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack48
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack31
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack33
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack36
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack38
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack41
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack43
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack46
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack48
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack32
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack34
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack37
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack39
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack41
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack43
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack46
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack48
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/$stack27
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/$stack29
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/$stack32
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/$stack34
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/$stack36
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/$stack38
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_NoFallback()>/$stack22
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_NoFallback()>/$stack24
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_NoFallback()>/$stack27
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_NoFallback()>/$stack29
<io.bootique.log.DefaultBootLoggerTest: void before()>/$stack1
<io.bootique.log.DefaultBootLoggerTest: void before()>/$stack2
<io.bootique.log.DefaultBootLoggerTest: void before()>/$stack3
<io.bootique.log.DefaultBootLoggerTest: void before()>/$stack4
<io.bootique.log.DefaultBootLoggerTest: void testStdout()>/$stack6
<io.bootique.log.DefaultBootLoggerTest: void testStdout()>/$stack7
<io.bootique.log.DefaultBootLoggerTest: void testStderr()>/$stack6
<io.bootique.log.DefaultBootLoggerTest: void testStderr()>/$stack7
<io.bootique.log.DefaultBootLoggerTest: void testTrace()>/$stack7
<io.bootique.log.DefaultBootLoggerTest: void testTrace()>/$stack8
<io.bootique.RuntimeModuleMergerTest: void testGetModules_One()>/$stack6
<io.bootique.RuntimeModuleMergerTest: void testGetModules_One()>/$stack7
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Two()>/$stack6
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Two()>/$stack7
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Two()>/$stack10
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Two()>/$stack11
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Three_Dupes()>/$stack6
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Three_Dupes()>/$stack7
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Three_Dupes()>/$stack10
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Three_Dupes()>/$stack11
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Three_Dupes()>/$stack14
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Three_Dupes()>/$stack15
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides()>/$stack14
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides()>/$stack15
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides()>/$stack18
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides()>/$stack19
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides_Chain()>/$stack22
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides_Chain()>/$stack23
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides_Chain()>/$stack26
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides_Chain()>/$stack27
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides_Chain()>/$stack30
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides_Chain()>/$stack31
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides_Chain()>/$stack34
<io.bootique.RuntimeModuleMergerTest: void testGetModules_Overrides_Chain()>/$stack35
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideCycle()>/$stack21
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideCycle()>/$stack22
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideCycle()>/$stack25
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideCycle()>/$stack26
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideIndirectCycle()>/$stack29
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideIndirectCycle()>/$stack30
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideIndirectCycle()>/$stack33
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideIndirectCycle()>/$stack34
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideIndirectCycle()>/$stack37
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideIndirectCycle()>/$stack38
<io.bootique.jopt.JoptCliTest: void before()>/$stack1
<io.bootique.jopt.JoptCliTest: void before()>/$stack2
<io.bootique.terminal.SttyTerminalTest: void before()>/$stack2
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack11
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack12
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack13
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack51
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack52
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack55
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack56
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack59
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack60
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack63
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack64
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack67
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack68
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack71
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack72
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack19
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack27
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack35
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack20
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack28
<io.bootique.BootiqueUtilsTest: void moduleProviderDependencies()>/$stack36
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack11
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack12
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack13
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack51
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack52
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack55
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack56
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack59
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack60
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack63
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack64
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack67
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack68
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack71
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack72
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack19
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack27
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack35
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack20
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack28
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesTwoLevels()>/$stack36
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack11
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack12
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack13
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack51
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack52
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack55
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack56
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack59
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack60
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack63
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack64
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack67
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack68
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack71
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack72
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack19
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack27
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack35
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack20
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack28
<io.bootique.BootiqueUtilsTest: void moduleProviderDependenciesCircular()>/$stack36
<io.bootique.ConfigModuleTest: void testConfigConfig()>/$stack4
<io.bootique.command.CommandManagerIT$M1: void <clinit>()>/$stack0
<io.bootique.command.CommandManagerIT$M1: void <clinit>()>/$stack1
<io.bootique.meta.config.ConfigMetadataIT$3: io.bootique.di.BQModule module()>/$stack1
<io.bootique.meta.config.ConfigMetadataIT$3: io.bootique.di.BQModule module()>/$stack2
<io.bootique.meta.config.ConfigMetadataIT$4: io.bootique.di.BQModule module()>/$stack1
<io.bootique.meta.config.ConfigMetadataIT$4: io.bootique.di.BQModule module()>/$stack2
<io.bootique.meta.config.ConfigMetadataIT$1: io.bootique.di.BQModule module()>/$stack1
<io.bootique.meta.config.ConfigMetadataIT$1: io.bootique.di.BQModule module()>/$stack2
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideDupe()>/$stack21
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideDupe()>/$stack22
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideDupe()>/$stack25
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideDupe()>/$stack26
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideDupe()>/$stack29
<io.bootique.RuntimeModuleMergerTest: void testGetModules_OverrideDupe()>/$stack30
<io.bootique.config.jackson.parser.MultiFormatJsonNodeParserTest: void <init>()>/$stack2
<io.bootique.config.jackson.parser.MultiFormatJsonNodeParserTest: void <init>()>/$stack5
<io.bootique.command.CommandManagerIT$M0: void <clinit>()>/$stack0
<io.bootique.command.CommandManagerIT$M0: void <clinit>()>/$stack1
<io.bootique.run.DefaultRunner: void <init>(io.bootique.cli.Cli,io.bootique.command.CommandManager,io.bootique.command.ExecutionPlanBuilder)>/@parameter0
<io.bootique.run.DefaultRunner: void <init>(io.bootique.cli.Cli,io.bootique.command.CommandManager,io.bootique.command.ExecutionPlanBuilder)>/cli#_0
<io.bootique.run.DefaultRunner: void <init>(io.bootique.cli.Cli,io.bootique.command.CommandManager,io.bootique.command.ExecutionPlanBuilder)>/@parameter2
<io.bootique.run.DefaultRunner: void <init>(io.bootique.cli.Cli,io.bootique.command.CommandManager,io.bootique.command.ExecutionPlanBuilder)>/executionPlanBuilder#_0
<org.mockito.internal.verification.MockAwareVerificationMode: void <init>(java.lang.Object,org.mockito.verification.VerificationMode,java.util.Set)>/@parameter0
<org.mockito.internal.verification.MockAwareVerificationMode: void <init>(java.lang.Object,org.mockito.verification.VerificationMode,java.util.Set)>/mock#_0
<io.bootique.command.CommandDecorator: io.bootique.command.CommandDecorator beforeRun(io.bootique.command.Command)>/@parameter0
<io.bootique.command.CommandDecorator: io.bootique.command.CommandDecorator alsoRun(io.bootique.command.Command)>/@parameter0
<io.bootique.command.CommandDecorator$Builder: io.bootique.command.CommandDecorator$Builder beforeRun(io.bootique.command.Command)>/@parameter0
<io.bootique.command.CommandDecorator$Builder: io.bootique.command.CommandDecorator$Builder alsoRun(io.bootique.command.Command)>/@parameter0
<io.bootique.terminal.SttyTerminal: void <init>(io.bootique.log.BootLogger)>/@parameter0
<io.bootique.log.DefaultBootLogger: void <init>(boolean,java.io.PrintStream,java.io.PrintStream)>/@parameter1
<io.bootique.log.DefaultBootLogger: void <init>(boolean,java.io.PrintStream,java.io.PrintStream)>/stdout#_0
<io.bootique.log.DefaultBootLogger: void <init>(boolean,java.io.PrintStream,java.io.PrintStream)>/@parameter2
<io.bootique.log.DefaultBootLogger: void <init>(boolean,java.io.PrintStream,java.io.PrintStream)>/stderr#_0
<io.bootique.help.config.ConfigSectionGenerator: void <init>(io.bootique.help.ConsoleAppender,java.util.Set)>/@parameter0
<io.bootique.config.jackson.parser.YamlConfigurationFormatParser: void <init>(io.bootique.jackson.JacksonService)>/@parameter0
<io.bootique.config.jackson.parser.YamlConfigurationFormatParser: void <init>(io.bootique.jackson.JacksonService)>/jackson#_0
<io.bootique.command.CommandRefWithArgs: io.bootique.command.CommandRefWithArgs$NoArgsBuilder commandRef(io.bootique.command.Command)>/@parameter0
<io.bootique.config.jackson.parser.JsonConfigurationFormatParser: void <init>(io.bootique.jackson.JacksonService)>/@parameter0
<io.bootique.config.jackson.parser.JsonConfigurationFormatParser: void <init>(io.bootique.jackson.JacksonService)>/jackson#_0
<io.bootique.command.CommandRefWithArgs$NoArgsBuilder: void <init>(io.bootique.command.Command)>/@parameter0
<io.bootique.command.ManagedCommand: io.bootique.command.ManagedCommand$Builder builder(io.bootique.command.Command)>/@parameter0
<io.bootique.terminal.ExternalCommandTerminal: void <init>(io.bootique.log.BootLogger)>/@parameter0
<io.bootique.terminal.ExternalCommandTerminal: void <init>(io.bootique.log.BootLogger)>/logger#_0
<io.bootique.command.ManagedCommand$Builder: void <init>(io.bootique.command.Command)>/@parameter0
<org.mockito.internal.stubbing.StubberImpl: java.lang.Object when(java.lang.Object)>/@parameter0
<io.bootique.BQModuleMetadata$Builder: void <init>(io.bootique.di.BQModule)>/@parameter0
<io.bootique.BQModuleMetadata$Builder: void <init>(io.bootique.di.BQModule,io.bootique.BQModuleMetadata$1)>/@parameter0
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.internal.MockitoCore: void assertNotStubOnlyMock(java.lang.Object)>/@parameter0
<org.mockito.internal.MockitoCore: org.mockito.MockingDetails mockingDetails(java.lang.Object)>/@parameter0
<io.bootique.BQModuleId: io.bootique.BQModuleId of(io.bootique.di.BQModule)>/@parameter0
<io.bootique.BQModuleId: io.bootique.BQModuleId of(io.bootique.di.BQModule)>/module#_0
<io.bootique.BQModuleMetadata: io.bootique.BQModuleMetadata$Builder builder(io.bootique.di.BQModule)>/@parameter0
<io.bootique.shutdown.DefaultShutdownManager: void addShutdownHook(java.lang.AutoCloseable)>/@parameter0
<io.bootique.shutdown.DefaultShutdownManager: java.util.Optional shutdownOne(java.lang.AutoCloseable)>/@parameter0
<io.bootique.shutdown.DefaultShutdownManager: java.util.Optional shutdownOne(java.lang.AutoCloseable)>/closeable#_0
<org.mockito.internal.util.DefaultMockingDetails: void <init>(java.lang.Object)>/@parameter0
<org.mockito.internal.util.DefaultMockingDetails: void <init>(java.lang.Object)>/toInspect#_0
<org.mockito.internal.util.MockUtil: org.mockito.invocation.MockHandler getMockHandler(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: org.mockito.internal.stubbing.InvocationContainerImpl getInvocationContainer(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: java.lang.Object resolve(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: java.lang.Object resolve(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: org.mockito.mock.MockName getMockName(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<io.bootique.jopt.JoptCli: void <init>(joptsimple.OptionSet,java.lang.String)>/@parameter0
<io.bootique.jopt.JoptCli: void <init>(joptsimple.OptionSet,java.lang.String)>/parsed#_0
<io.bootique.ConfigModule: java.lang.Object config(java.lang.Class,io.bootique.config.ConfigurationFactory)>/@parameter1
<io.bootique.ConfigModule: java.lang.Object config(java.lang.Class,io.bootique.config.ConfigurationFactory)>/configurationFactory#_0
<org.mockito.internal.exceptions.Reporter: org.mockito.exceptions.base.MockitoException stubPassedToVerify(java.lang.Object)>/@parameter0
<io.bootique.run.DefaultRunnerTest: void testRun_Failure()>/mockC1#_178
<io.bootique.run.DefaultRunnerTest: void testRun_Failure()>/mockC2#_179
<org.mockito.internal.listeners.VerificationStartedNotifier$Event: void <init>(org.mockito.MockingDetails)>/$stack2
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/$stack3
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/$stack3
<org.mockito.internal.listeners.VerificationStartedNotifier: java.lang.Object notifyVerificationStarted(java.util.List,org.mockito.MockingDetails)>/$stack12
<org.mockito.internal.listeners.VerificationStartedNotifier: java.lang.Object notifyVerificationStarted(java.util.List,org.mockito.MockingDetails)>/$stack9
<io.bootique.run.DefaultRunner: io.bootique.command.Command prepareForExecution(io.bootique.command.Command)>/$stack2
<io.bootique.run.DefaultRunner: io.bootique.command.Command bareCommand()>/$stack2
<io.bootique.run.DefaultRunner: io.bootique.command.Command bareCommand()>/$stack15
<io.bootique.run.DefaultRunner: io.bootique.command.Command bareCommand()>/$stack21
<org.mockito.internal.verification.MockAwareVerificationMode: java.lang.Object getMock()>/$stack1
<io.bootique.terminal.SttyTerminal: java.lang.Integer parseColumns(java.io.BufferedReader)>/$stack7
<io.bootique.terminal.SttyTerminal: java.lang.Integer parseLine(java.lang.String,java.util.regex.Pattern[])>/$stack9
<io.bootique.terminal.SttyTerminal: java.lang.Integer parseLine(java.lang.String,java.util.regex.Pattern[])>/$stack19
<io.bootique.log.DefaultBootLogger: void stdout(java.lang.String)>/$stack2
<io.bootique.log.DefaultBootLogger: void stderr(java.lang.String)>/$stack2
<io.bootique.terminal.ExternalCommandTerminal: java.lang.Object runCommand(java.lang.String[],java.util.function.Function)>/$stack6
<io.bootique.terminal.ExternalCommandTerminal: java.lang.Object runCommandWithExceptions(java.lang.String[],java.util.function.Function)>/$stack18
<io.bootique.terminal.ExternalCommandTerminal: java.lang.Object runCommandWithExceptions(java.lang.String[],java.util.function.Function)>/$stack20
<io.bootique.run.DefaultRunnerTest: void testRun()>/$stack6
<io.bootique.run.DefaultRunnerTest: void testRun_ReverseOrder()>/$stack6
<io.bootique.run.DefaultRunnerTest: void testRun_NoMatch()>/$stack5
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Default()>/$stack6
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_Help()>/$stack5
<io.bootique.run.DefaultRunnerTest: void testRun_NullName_NoFallback()>/$stack4
<io.bootique.run.DefaultRunnerTest: void testRun_Failure()>/$stack4
<io.bootique.log.DefaultBootLoggerTest: void testStdout()>/$stack9
<io.bootique.log.DefaultBootLoggerTest: void testStderr()>/$stack9
<io.bootique.log.DefaultBootLoggerTest: void testTrace()>/$stack10
<io.bootique.log.DefaultBootLoggerTest: void testNoTrace()>/$stack9
<io.bootique.log.DefaultBootLoggerTest: void testNoTrace()>/$stack7
<org.mockito.internal.listeners.VerificationStartedNotifier$Event: java.lang.Object getMock()>/$stack1
<org.mockito.internal.util.DefaultMockingDetails: java.lang.Object getMock()>/$stack1
<org.mockito.internal.util.DefaultMockingDetails: void assertGoodMock()>/$stack1
<org.mockito.internal.util.DefaultMockingDetails: void assertGoodMock()>/$stack6
<io.bootique.jopt.JoptCli: boolean hasOption(java.lang.String)>/$stack2
<io.bootique.jopt.JoptCli: java.util.List optionStrings(java.lang.String)>/$stack2
<io.bootique.jopt.JoptCli: java.util.List standaloneArguments()>/$stack1
<io.bootique.jopt.JoptCli: java.util.List detectedOptions()>/$stack1
<io.bootique.jopt.JoptCli: java.util.List detectedOptions()>/$stack3
<io.bootique.jopt.JoptCliTest: void testStringsFor_Missing()>/$stack2
