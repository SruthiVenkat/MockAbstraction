<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack25
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack31
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack35
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack29
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForCollectionInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForListInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateLinkedListForQueueInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateHashSetListForSetInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateTreeSetListForSortedSetInterface()>/$stack10
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack21
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack27
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack33
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack16
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack11
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack15
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack12
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldPutParametersOnFlashScopeOnRedirect()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotPutParametersOnFlashScopeOnRedirectIfThereAreNoParameters()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack19
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsNotAnnotatedWithHttpMethods()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsAnnotatedWithHttpGetMethod()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void cannotRedirectWhenLogicMethodIsAnnotatedWithAnyHttpMethodButGet()>/$stack8
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack35
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack38
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack35
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack38
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack32
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack36
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldAddAllowHeader()>/$stack7
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldSendErrorMethodNotAllowed()>/$stack7
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldNotSendMethodNotAllowedIfTheRequestMethodIsOptions()>/$stack12
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack7
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack11
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack13
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandlerTest: void shouldRegisterInterceptorsOnRegistry()>/$stack4
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack52
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack18
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatusWhenMovingToLogic()>/$stack10
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendError()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack12
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendErrorWithMessage()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack13
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSetStatusCode()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/$stack9
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldNotCallDeserializerIfItDoesntAcceptGivenContentType()>/$stack7
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentType()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfVendorized()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfAtomizedAlike()>/$stack6
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack28
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack27
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void shouldRegisterTypesOnDeserializers()>/$stack3
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldInstantiateAListOfStrings()>/$stack6
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack10
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack15
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithoutAlias()>/$stack5
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithAlias()>/$stack5
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithoutAlias()>/$stack10
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithAlias()>/$stack6
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack5
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack17
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack16
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack16
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack19
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack23
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack25
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack14
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack22
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack18
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack29
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack32
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack35
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack38
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack31
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack34
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack37
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack37
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack40
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack43
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack46
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack49
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack52
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack22
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack16
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack25
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack22
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldRedirectIncludingContext()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack9
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPage()>/$stack12
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void shouldSend404IfNothingIsRendered()>/$stack11
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPageWithAlias()>/$stack13
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack17
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack20
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack9
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack14
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack33
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack22
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack29
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack6
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack8
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack39
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack19
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack39
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack13
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack59
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack65
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack51
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack55
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack20
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack7
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack16
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack7
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack16
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack21
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack25
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack23
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack27
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack8
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack12
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack19
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack9
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack15
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetNotFoundStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetHeader()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetOkStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetConflictStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetAcceptedStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack9
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack24
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack27
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack11
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack16
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack14
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack11
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldOnlySetBundleOnI18nMessagesThatHasNotBeenSetBefore()>/$stack10
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack7
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack11
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack19
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack13
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack17
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack20
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack12
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack21
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack27
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack22
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldIncludeExtractedNameWhenSimplyIncluding()>/$stack10
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldNotIncludeTheAttributeWhenTheValueIsNull()>/$stack5
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack9
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack12
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack39
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack17
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack8
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack20
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack9
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack14
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsCacheableAddMaxAge()>/$stack5
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack15
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack18
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack5
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack8
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withRootException()>/$stack8
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withNestedException()>/$stack9
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldConfigureAllClasses()>/$stack10
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldNotDoAnythingIfHasNoClasses()>/$stack7
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack3
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack6
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack3
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack6
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack9
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack12
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack15
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack18
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack21
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack24
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack27
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack30
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void doesNothingIfResultWasAlreadyUsed()>/$stack10
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack14
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack5
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack24
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack29
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack29
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack18
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack13
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void outjectsTheRequestParameters()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void addsTheErrorsOnTheResult()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack14
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldNotRedirectIfHasNotErrors()>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack19
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldSetRequestAttribute()>/$stack4
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: org.joda.time.LocalDateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter1
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter3
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/@parameter1
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/@parameter0
<br.com.caelum.vraptor.config.BasicConfiguration: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouter: void <init>(br.com.caelum.vraptor.http.route.RoutesConfiguration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter3
<br.com.caelum.vraptor.http.route.DefaultRouter: void add(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/@parameter1
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void <init>(br.com.caelum.vraptor.core.Converters)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter1
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter2
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void <init>(br.com.caelum.vraptor.core.InterceptorHandlerFactory)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter1
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter3
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter1
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter2
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter4
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter5
<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/@parameter2
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$SomeProxy: void <init>(org.hibernate.proxy.LazyInitializer)>/@parameter0
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter0
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter1
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter2
<br.com.caelum.vraptor.VRaptor: void init(javax.servlet.FilterConfig)>/@parameter0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/@parameter0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/@parameter1
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/@parameter0
<br.com.caelum.vraptor.http.DefaultResourceTranslator: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter2
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.config.ApplicationConfiguration: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter1
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter2
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter3
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter1
<br.com.caelum.vraptor.ioc.spring.SpringProvider: void start(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.VRaptorResponse: void <init>(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter4
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ForwardToDefaultViewInterceptor: void <init>(br.com.caelum.vraptor.Result)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.Mockito: org.mockito.stubbing.Stubber doReturn(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.GenericNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/@parameter0
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/@parameter1
<br.com.caelum.vraptor.http.ognl.AbstractOgnlTestSupport: void configOgnl(br.com.caelum.vraptor.core.Converters)>/@parameter0
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter3
<org.hamcrest.Matchers: org.hamcrest.Matcher equalTo(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher sameInstance(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.Iogi: void <init>(br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.iogi.spi.LocaleProvider)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter1
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.view.DefaultLogicResultTest$TheComponent: void <init>(br.com.caelum.vraptor.view.DefaultLogicResultTest,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.deserialization.DefaultDeserializers: br.com.caelum.vraptor.deserialization.Deserializer deserializerFor(java.lang.String,br.com.caelum.vraptor.ioc.Container)>/@parameter1
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: void <init>(br.com.caelum.vraptor.core.Converters,java.util.ResourceBundle)>/@parameter0
<br.com.caelum.vraptor.validator.DIConstraintValidatorFactory: void <init>(br.com.caelum.vraptor.ioc.Container)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter3
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter1
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter2
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$Bazinga: void <init>(org.hibernate.proxy.HibernateProxy)>/@parameter0
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider: void <init>(br.com.caelum.vraptor.core.StaticContentHandler)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/@parameter1
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactory: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<ognl.Ognl: void setTypeConverter(java.util.Map,ognl.TypeConverter)>/@parameter1
<br.com.caelum.vraptor.validator.DefaultBeanValidator: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.Validator,javax.validation.MessageInterpolator)>/@parameter0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter1
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter2
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter3
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter4
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: org.joda.time.DateMidnight convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.http.EncodingHandlerFactory: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter2
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter3
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter4
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter5
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter2
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: java.util.Date convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/@parameter0
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/@parameter1
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: org.joda.time.DateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.MessageInterpolator,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.MethodInfo,javax.validation.Validator,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.core.DefaultConverters: void <init>(br.com.caelum.vraptor.ioc.Container)>/@parameter0
<br.com.caelum.vraptor.serialization.I18nMessageSerialization: void <init>(br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.Localization)>/@parameter0
<com.thoughtworks.xstream.XStream: java.lang.String toXML(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: void start(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParser: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter2
<br.com.caelum.vraptor.interceptor.OutjectResult: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,java.util.Map,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter2
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void fillIntoRequest(java.lang.String,br.com.caelum.vraptor.http.MutableRequest)>/@parameter1
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandler: void <init>(br.com.caelum.vraptor.interceptor.InterceptorRegistry)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: java.sql.Time convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: org.joda.time.LocalDate convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.view.DefaultPathResolver: void <init>(br.com.caelum.vraptor.http.FormatResolver)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPathResolver: java.lang.String pathFor(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: boolean requestingStaticFile(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.route.RulesTest$1: void <init>(br.com.caelum.vraptor.http.route.RulesTest,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.resource.HttpMethod: br.com.caelum.vraptor.resource.HttpMethod of(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.test.HttpServletRequestMock: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.http.MutableRequest)>/@parameter1
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter1
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter2
<br.com.caelum.vraptor.scan.JavassistBootstrapGenerator: java.lang.Class generate(java.util.Collection,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter1
<br.com.caelum.vraptor.scan.NullWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/@parameter0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter1
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter2
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter3
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter4
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter5
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter6
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter7
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: void <init>(java.lang.String,br.com.caelum.vraptor.resource.ResourceMethod,java.util.Set,br.com.caelum.vraptor.http.route.ParametersControl,int,java.lang.String[])>/@parameter3
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: br.com.caelum.vraptor.resource.ResourceMethod resourceMethod(br.com.caelum.vraptor.http.MutableRequest,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder: void <init>(br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder,br.com.caelum.vraptor.serialization.xstream.Serializee)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.FileDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void registerDestroyListener(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void start(javax.servlet.http.HttpSession)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(javax.servlet.http.HttpSession)>/@parameter0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter2
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter4
<br.com.caelum.vraptor.deserialization.DeserializesHandler: void <init>(br.com.caelum.vraptor.deserialization.Deserializers)>/@parameter0
<br.com.caelum.vraptor.http.VRaptorRequest: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.DefaultSpringLocator: org.springframework.web.context.ConfigurableWebApplicationContext getApplicationContext(javax.servlet.ServletContext)>/@parameter0
<org.mockito.internal.stubbing.StubberImpl: java.lang.Object when(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter1
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter2
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter3
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter4
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter1
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter2
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest$AnyController: void <init>(br.com.caelum.vraptor.Validator)>/@parameter0
<com.google.inject.util.Providers: com.google.inject.Provider of(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.test.HttpSessionMock: void <init>(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter1
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Collection scan(br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter0
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack10
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest$1: void register(java.lang.Class,java.lang.Class)>/$stack4
