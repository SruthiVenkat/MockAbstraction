<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandOne#_39
<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandTwo#_40
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/key_$$A_1#_173
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/value_$$A_1#_174
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/key_$$A_3#_186
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/value_$$A_3#_187
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack58
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack41
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.String keyToString(com.google.gson.JsonElement)>/$stack14
<com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>/$stack2
<com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>/$stack3
<net.vidageek.mirror.list.BackedMirrorList: net.vidageek.mirror.list.dsl.MirrorList matching(net.vidageek.mirror.list.dsl.Matcher)>/element#_30
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/listHolder#_68
<org.picocontainer.injectors.ConstructorInjector$1: java.lang.Object run(java.lang.Object)>/$stack12
<org.picocontainer.injectors.ConstructorInjector$1: java.lang.Object run(java.lang.Object)>/ctor#_323
<org.picocontainer.injectors.ConstructorInjector$1: java.lang.Object run(java.lang.Object)>/ctor_$$A_1#_326
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/$stack5
<ognl.ASTProperty: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/property#_112
<ognl.ASTProperty: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack7
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack5
<com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/$stack3
<ognl.ASTGreaterEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_50
<ognl.ASTGreaterEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_51
<org.springframework.expression.spel.ast.OpGE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_36
<org.springframework.expression.spel.ast.OpGE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_37
<com.google.common.collect.Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>/first#_297
<com.google.common.collect.Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>/$stack24
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/genericType#_79
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/type#_81
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/origin#_116
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Class)>/typedResultValue#_97
<org.mockito.asm.ClassWriter: int getMergedType(int,int)>/$stack24
<ognl.ASTLess: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_50
<ognl.ASTLess: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_52
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack25
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack31
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack35
<br.com.caelum.vraptor.serialization.iso8601.gson.CalendarISO8601Deserializer: java.util.Calendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>/value#_29
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack67
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandOne#_49
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandOne_$$A_1#_62
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandTwo#_63
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack66
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/ref#2_$$A_1#_110
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack61
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/elementType#33#_182
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack65
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/$stack6
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack57
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/refName_$$A_1#_311
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/i#55#_172
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack29
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>/$stack11
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>/$stack10
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>/m#_364
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/$stack14
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/$stack18
<org.springframework.core.convert.support.ObjectToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceClass#_45
<br.com.caelum.vraptor.interceptor.Graph: java.util.List findCycle()>/$stack10
<br.com.caelum.iogi.reflection.Target: java.lang.Object cast(java.lang.Object)>/$stack6
<br.com.caelum.iogi.reflection.Target: br.com.caelum.iogi.reflection.Target arrayElementTarget()>/$stack2
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/root#_84
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/args#_81
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack16
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack16
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack11
<ognl.ASTBitNegate: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack5
<org.picocontainer.injectors.MethodInjector: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack6
<br.com.caelum.iogi.collections.ParametersByIndex$1: java.lang.Integer apply(br.com.caelum.iogi.parameters.Parameter)>/$stack4
<org.springframework.core.convert.support.ArrayToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack10
<com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack7
<br.com.caelum.vraptor.http.route.DefaultTypeFinderTest: void shouldGetTypesCorrectly()>/method#_70
<br.com.caelum.vraptor.http.route.DefaultTypeFinderTest: void shouldGetTypesCorrectlyOnInheritance()>/method#_81
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/origin#_60
<ognl.ASTGreater: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_50
<ognl.ASTGreater: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_51
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>/$stack8
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>/$stack8
<java.util.AbstractMap: boolean equals(java.lang.Object)>/l5#_489
<java.util.AbstractMap: boolean equals(java.lang.Object)>/$stack16
<br.com.caelum.vraptor.serialization.xstream.Serializee: java.util.Set getParentTypes(java.lang.String,java.lang.Class)>/$stack26
<com.google.common.collect.LinkedListMultimap: boolean remove(java.lang.Object,java.lang.Object)>/$stack6
<org.springframework.beans.factory.support.ConstructorResolver: void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)>/factoryClass_$$A_3#_305
<java.beans.FeatureDescriptor: java.lang.String toString()>/$stack37
<org.springframework.core.convert.ConversionFailedException: void <init>(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.lang.Object,java.lang.Throwable)>/$stack6
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/$stack3
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.Class resolveBeanClass(java.lang.ClassLoader)>/className#_404
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack31
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack51
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/originalValue#_675
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/$stack112
<org.springframework.beans.factory.support.AbstractBeanDefinition: void prepareMethodOverride(org.springframework.beans.factory.support.MethodOverride)>/$stack3
<org.springframework.beans.factory.support.AbstractBeanDefinition: void prepareMethodOverride(org.springframework.beans.factory.support.MethodOverride)>/$stack11
<org.springframework.beans.factory.support.AbstractBeanDefinition: boolean equals(java.lang.Object)>/$stack4
<org.springframework.beans.factory.support.AbstractBeanDefinition: boolean equals(java.lang.Object)>/$stack5
<org.springframework.beans.factory.support.AbstractBeanDefinition: int hashCode()>/$stack2
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String toString()>/$stack3
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState,java.lang.Class)>/result#_135
<ognl.ASTInstanceof: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/value#_55
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/componentClass#_194
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack47
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack13
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/contextObjectClass#_179
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack30
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack37
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack34
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack14
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/contextObjectClass#_233
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack31
<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.spel.ExpressionState)>/contextObject#_261
<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.spel.ExpressionState)>/$stack11
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/parameterName#_389
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack25
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/$stack13
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addAdapterInternal(org.picocontainer.ComponentAdapter)>/componentKey#_436
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/$stack25
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/typedComponentAdapter#_586
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack21
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/node#_89
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/componentAdapter#_642
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/componentAdapter_$$A_1#_645
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Class[] getTypes(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack6
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Class)>/o#_671
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack23
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack17
<org.codehaus.jettison.json.JSONArray: java.lang.String join(java.lang.String)>/$stack9
<org.codehaus.jettison.json.JSONArray: java.io.Writer write(java.io.Writer)>/v#_846
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/$stack6
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/$stack10
<com.google.inject.internal.util.$AbstractMapEntry: boolean equals(java.lang.Object)>/$stack5
<com.google.inject.internal.util.$AbstractMapEntry: boolean equals(java.lang.Object)>/$stack8
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String getAttribute(java.lang.String)>/$stack4
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String getAttributeName(int)>/$stack3
<com.thoughtworks.xstream.converters.collections.SingletonMapConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/key#_50
<com.thoughtworks.xstream.converters.collections.SingletonMapConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value#_54
<org.springframework.beans.BeanWrapperImpl$4: java.lang.Object run()>/$stack3
<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: void <init>(java.util.Map$Entry[])>/key#_579
<br.com.caelum.vraptor.http.DefaultResourceTranslator: br.com.caelum.vraptor.resource.ResourceMethod translate(br.com.caelum.vraptor.core.RequestInfo)>/request#_48
<ognl.ASTSubtract: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_49
<ognl.ASTSubtract: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_50
<br.com.caelum.vraptor.http.ParametersProviderTest: void requestParameterIs(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.String,java.lang.String[])>/$stack19
<com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>/$stack7
<com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/item#_51
<ognl.ASTEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_50
<ognl.ASTEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_51
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/parentReferenceKey#_44
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/$stack22
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/t#_137
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalOrExpression()>/t#_173
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalAndExpression()>/t#_185
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatRelationalExpression()>/t#_198
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatSumExpression()>/t#_235
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatProductExpression()>/t#_252
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPowerExpression()>/t#_271
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatUnaryExpression()>/t#_282
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatDottedNode()>/$stack17
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void eatConstructorArgs(java.util.List)>/$stack9
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatTypeReference()>/typeName#_492
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatNullReference()>/nullToken#_509
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatProjection(boolean)>/t#_522
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatIndexer()>/t#_556
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatSelection(boolean)>/t#_567
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPossiblyQualifiedId()>/startnode#_590
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPossiblyQualifiedId()>/node#_593
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatMethodOrProperty(boolean)>/methodOrPropertyName#_603
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatConstructorReference()>/newToken#_624
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatLiteral()>/t#_672
<ognl.ASTBitAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack12
<br.com.caelum.iogi.conversion.EnumConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack3
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/enumClass#_15
<br.com.caelum.iogi.conversion.EnumConverter: void ensureTargetIsAnEnum(br.com.caelum.iogi.reflection.Target)>/$stack3
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>/$stack11
<com.google.gson.internal.bind.TypeAdapters$2: java.util.BitSet read(com.google.gson.stream.JsonReader)>/stringValue#_105
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack32
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack3
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/$stack91
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack16
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#2#_58
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack16
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object resolveBeforeInstantiation(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack15
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper createBeanInstance(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/beanClass#_871
<com.google.gson.internal.bind.TypeAdapters$3: java.lang.Boolean read(com.google.gson.stream.JsonReader)>/$stack8
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/$stack57
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/$stack32
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByType(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/$stack24
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.String[] unsatisfiedNonSimpleProperties(org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/$stack19
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack42
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: boolean isExcludedFromDependencyCheck(java.beans.PropertyDescriptor)>/$stack4
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void checkDependencies(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,java.beans.PropertyDescriptor[],org.springframework.beans.PropertyValues)>/$stack18
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/originalValue#_1324
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/propertyName#_1323
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/resolvedValue#_1325
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object convertForProperty(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapper,org.springframework.beans.TypeConverter)>/$stack10
<org.springframework.core.convert.support.ArrayToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack5
<com.thoughtworks.xstream.converters.basic.CharConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack5
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/element#_116
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldNotInstantiateIfLastTerm()>/$stack12
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldFoundASetter()>/foundMethod#_131
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldFoundAGetter()>/foundMethod#_142
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldFoundASetterEvenWithAProxyObject()>/foundMethod#_172
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldFoundAGetterWithAProxyObject()>/foundMethod#_184
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operand#_57
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack19
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack27
<java.util.AbstractCollection: boolean contains(java.lang.Object)>/$stack5
<java.util.AbstractCollection: boolean remove(java.lang.Object)>/$stack5
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>/l3#_317
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>/l4#_343
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_37
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_38
<com.thoughtworks.xstream.core.util.HierarchicalStreams: java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)>/$stack6
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/array#_100
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack39
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/array#_172
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack44
<org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)>/$stack29
<org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)>/$stack39
<javassist.compiler.MemberCodeGen: void atFieldAssign(javassist.compiler.ast.Expr,int,javassist.compiler.ast.ASTree,javassist.compiler.ast.ASTree,boolean)>/finfo#_784
<javassist.compiler.MemberCodeGen: void atFieldAssignCore(javassist.CtField,boolean,int,boolean)>/finfo#_839
<javassist.compiler.MemberCodeGen: int atFieldRead(javassist.CtField,boolean)>/finfo#_885
<ognl.ASTNotEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_50
<ognl.ASTNotEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_51
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACat()>/$stack9
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatWhenMethodHasMoreThanOneArgument()>/$stack9
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack9
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatNamedDifferently()>/$stack9
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatWhenAliasConfiguredByAnnotations()>/$stack9
<org.springframework.core.convert.support.IdToEntityConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack4
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack6
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>/$stack17
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)>/$stack23
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/$stack23
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack11
<com.google.common.collect.AbstractMultimap$WrappedList: java.util.List subList(int,int)>/$stack4
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/strVal#9_$$A_1#_737
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/strVal#9_$$A_2#_758
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/bd#18#_766
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/autowiringValue_$$A_2#_835
<org.springframework.core.convert.support.StringToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack13
<ognl.ASTAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_2#_61
<ognl.ASTAnd: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/v#_77
<java.util.HashMap$Node: boolean equals(java.lang.Object)>/$stack5
<java.util.HashMap$Node: boolean equals(java.lang.Object)>/$stack9
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.String getClassName()>/$stack3
<org.springframework.expression.spel.ast.OperatorNot: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue#_43
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.Object create(java.lang.Object)>/loader#_192
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.Object create(java.lang.Object)>/className#_218
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class)>/object#_841
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/name#_167
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack17
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack21
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack25
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack30
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack44
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack49
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void settingShouldNullifyUpToIndexAndIgnoreRemoval()>/$stack3
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void settingShouldNullifyUpToIndexAndIgnoreRemoval()>/$stack16
<br.com.caelum.iogi.Iogi: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/object#_82
<org.springframework.context.annotation.AnnotationBeanNameGenerator: java.lang.String buildDefaultBeanName(org.springframework.beans.factory.config.BeanDefinition)>/$stack3
<org.springframework.core.convert.support.ArrayToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack5
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack10
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/next#_65
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack15
<com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>/key#_61
<com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>/$stack21
<com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>/$stack27
<org.junit.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>/actualString#_655
<org.junit.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>/expectedString#_654
<com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>/candidateKey#_150
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>/$stack2
<com.google.common.collect.SingletonImmutableList: boolean equals(java.lang.Object)>/$stack6
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(org.springframework.expression.TypedValue,org.springframework.core.convert.TypeDescriptor)>/$stack6
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(org.springframework.expression.TypedValue,org.springframework.core.convert.TypeDescriptor)>/$stack5
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>/l6#_512
<org.springframework.expression.spel.ast.OpModulus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandOne#_38
<org.springframework.expression.spel.ast.OpModulus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandTwo#_39
<ognl.ASTMap: java.lang.String toString()>/$stack18
<ognl.ASTMap: java.lang.String toString()>/$stack21
<ognl.ASTLessEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_50
<ognl.ASTLessEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_51
<org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatMethodForMessage(java.lang.String,java.util.List)>/$stack10
<com.google.gson.internal.bind.TypeAdapters$18: java.net.URL read(com.google.gson.stream.JsonReader)>/nextString#_447
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack10
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/next#_60
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack15
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceElement#_61
<com.thoughtworks.xstream.io.xml.StaxWriter: void startNode(java.lang.String)>/$stack10
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack55
<org.picocontainer.injectors.ConstructorInjector: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack7
<org.picocontainer.injectors.IterativeInjector: org.picocontainer.Parameter[] getMatchingParameterListForSetters(org.picocontainer.PicoContainer)>/$stack27
<org.picocontainer.injectors.IterativeInjector: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack8
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/toInject#_171
<com.google.gson.internal.bind.SqlDateTypeAdapter: java.sql.Date read(com.google.gson.stream.JsonReader)>/$stack7
<org.picocontainer.injectors.IterativeInjector: java.lang.Object makeInstance(org.picocontainer.PicoContainer,java.lang.reflect.Constructor,org.picocontainer.ComponentMonitor)>/constructorToUse#_197
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADog()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack10
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithoutRoot()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithDeserializerAdapter()>/$stack17
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/elem#_120
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgument()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndHasNotRoot()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogNamedDifferently()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAttribute()>/$stack10
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAttribute()>/$stack17
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsISO8601Attribute()>/$stack11
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsObjectAttribute()>/$stack10
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldHonorRequestHeaderAcceptCharset()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void whenNoCharsetHeaderIsFoundThanAssumeItIsUTF8()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldByPassDeserializationWhenHasNoContent()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeOneParam()>/$stack18
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeTwoParams()>/$stack19
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.Resource[] findPathMatchingResources(java.lang.String)>/rootDirResource_$$A_2#_341
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeWithoutGenericType()>/$stack19
<com.google.gson.internal.bind.TypeAdapters$19: java.net.URI read(com.google.gson.stream.JsonReader)>/nextString#_466
<ognl.ASTUnsignedShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_49
<ognl.ASTUnsignedShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_50
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/$stack12
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/$stack3
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/$stack4
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/$stack7
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/$stack8
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>/$stack5
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>/$stack6
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>/$stack9
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>/$stack10
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>/$stack13
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack133
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/targetObject#_67
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack99
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/reference#43#_144
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack91
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack90
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack94
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/index#_188
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack70
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack30
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/map#9#_233
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack42
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: boolean checkCandidate(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack15
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: boolean checkCandidate(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack19
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: boolean isCompatible(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/$stack5
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack109
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/target#_48
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_47
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetClass#_58
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceClass#_57
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/root#_78
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/o#_104
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/args#_80
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/declaringClassName#_106
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/parameterTypeName#_121
<br.com.caelum.iogi.parameters.Parameters: java.util.List forTarget(br.com.caelum.iogi.reflection.Target)>/$stack3
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameter namedAfter(br.com.caelum.iogi.reflection.Target)>/$stack4
<org.springframework.core.SimpleAliasRegistry: void checkForAliasCircle(java.lang.String,java.lang.String)>/$stack3
<ognl.ASTShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_49
<ognl.ASTShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_50
<ognl.ASTXor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack12
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getObjectType()>/type#_223
<org.springframework.core.convert.TypeDescriptor: java.lang.String getName()>/type#_231
<org.springframework.core.convert.TypeDescriptor: boolean isCollection()>/$stack2
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor()>/$stack3
<org.springframework.core.convert.TypeDescriptor: boolean isMap()>/$stack2
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor()>/$stack3
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor()>/$stack3
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/$stack26
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/$stack14
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/$stack8
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack7
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack18
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack19
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack11
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack12
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack15
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack16
<org.springframework.core.convert.TypeDescriptor: java.lang.String toString()>/$stack17
<br.com.caelum.vraptor.deserialization.JsonDeserializer: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/javaMethod#_53
<org.springframework.expression.common.ExpressionUtils: java.lang.Object convertTypedValue(org.springframework.expression.EvaluationContext,org.springframework.expression.TypedValue,java.lang.Class)>/value#_62
<org.springframework.expression.common.ExpressionUtils: int toInt(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.expression.common.ExpressionUtils: boolean toBoolean(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.expression.common.ExpressionUtils: double toDouble(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.expression.common.ExpressionUtils: long toLong(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.expression.common.ExpressionUtils: char toChar(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.expression.common.ExpressionUtils: short toShort(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.expression.common.ExpressionUtils: float toFloat(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.expression.common.ExpressionUtils: byte toByte(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<java.util.concurrent.ConcurrentHashMap$KeySetView: boolean addAll(java.util.Collection)>/l5#_4614
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack4
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack11
<org.springframework.core.convert.support.ObjectToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack6
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: java.util.Calendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>/value#_37
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: java.util.Calendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>/locale#5#_49
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>/l3#_4491
<br.com.caelum.iogi.EmptyObjectsProvider: boolean selfCanProvide(br.com.caelum.iogi.reflection.Target)>/targetType#_41
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/$stack7
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/$stack28
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/rawType#3#_196
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack14
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceKey#_68
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceValue#_69
<ognl.ASTBitOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack12
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>/l4#_739
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>/l6#_742
<org.mockito.internal.configuration.DefaultInjectionEngine: java.util.List selectMockCandidateOnName(java.util.Collection,java.lang.String)>/mock#_79
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/firstElement#_57
<com.google.gson.internal.bind.TypeAdapters$21: java.util.UUID read(com.google.gson.stream.JsonReader)>/$stack4
<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>/$stack4
<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>/$stack5
<org.picocontainer.behaviors.Stored: boolean hasLifecycle(org.picocontainer.ComponentAdapter)>/$stack3
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/reflectionMethod#_57
<java.beans.PropertyDescriptor: void setWriteMethod(java.lang.reflect.Method)>/$stack3
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/$stack20
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/$stack22
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>/$stack9
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>/l3#_469
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>/$stack11
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>/l4#_470
<java.beans.PropertyDescriptor: void <init>(java.beans.PropertyDescriptor,java.beans.PropertyDescriptor)>/l3#_548
<java.beans.PropertyDescriptor: void <init>(java.beans.PropertyDescriptor,java.beans.PropertyDescriptor)>/l4#_549
<org.springframework.core.convert.support.ObjectToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack6
<org.springframework.core.convert.support.ObjectToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack10
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/value#_107
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createArray(org.springframework.expression.spel.ExpressionState)>/o#7#_250
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createArray(org.springframework.expression.spel.ExpressionState)>/o#7_$$A_2#_258
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createArray(org.springframework.expression.spel.ExpressionState)>/arraySize#15#_276
<org.springframework.expression.spel.ast.ConstructorReference: void populateReferenceTypeArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList,java.lang.Class)>/arrayEntry#_325
<org.springframework.expression.spel.ast.ConstructorReference: void populateByteArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_335
<org.springframework.expression.spel.ast.ConstructorReference: void populateFloatArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_344
<org.springframework.expression.spel.ast.ConstructorReference: void populateDoubleArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_353
<org.springframework.expression.spel.ast.ConstructorReference: void populateShortArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_362
<org.springframework.expression.spel.ast.ConstructorReference: void populateLongArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_371
<org.springframework.expression.spel.ast.ConstructorReference: void populateCharArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_380
<org.springframework.expression.spel.ast.ConstructorReference: void populateBooleanArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_389
<org.springframework.expression.spel.ast.ConstructorReference: void populateIntArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_398
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$1: void defaultWriteObject()>/defaultType#_206
<java.util.Hashtable: boolean equals(java.lang.Object)>/l5#_807
<java.util.Hashtable: boolean equals(java.lang.Object)>/$stack16
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/$stack55
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/beanType#_218
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/$stack51
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String constantPlaceholder(java.lang.Object)>/$stack26
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operand#_67
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack21
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack53
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/lastValue#26#_146
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack10
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/next#_60
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack15
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>/l1#_104
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>/$stack2
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>/$stack3
<org.springframework.core.convert.support.GenericConversionService: void addConverter(org.springframework.core.convert.converter.GenericConverter)>/$stack9
<org.springframework.core.convert.support.GenericConversionService: void addConverter(org.springframework.core.convert.converter.GenericConverter)>/$stack10
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack50
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack39
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/result_$$A_1_$$A_1#_184
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack16
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack10
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceElement#_62
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/type#3#_54
<br.com.caelum.vraptor.serialization.gson.GsonSerializer: void serialize()>/root#_139
<java.text.AttributedString: java.lang.Object getAttributeCheckRange(java.text.AttributedCharacterIterator$Attribute,int,int,int)>/l5#_628
<java.text.AttributedString: java.lang.Object getAttributeCheckRange(java.text.AttributedCharacterIterator$Attribute,int,int,int)>/$stack35
<java.text.AttributedString: java.lang.Object getAttributeCheckRange(java.text.AttributedCharacterIterator$Attribute,int,int,int)>/$stack16
<org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerOrEscalateApcAsRequired(java.lang.Class,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>/$stack14
<org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerOrEscalateApcAsRequired(java.lang.Class,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>/$stack16
<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandOne#_41
<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandTwo#_42
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack11
<com.google.inject.internal.util.$Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>/first#_134
<com.google.inject.internal.util.$Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>/$stack24
<org.springframework.expression.spel.ast.StringLiteral: java.lang.String toString()>/$stack3
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findGetterForProperty(java.lang.String,java.lang.Class,boolean)>/$stack12
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findGetterForProperty(java.lang.String,java.lang.Class,boolean)>/$stack25
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findSetterForProperty(java.lang.String,java.lang.Class,boolean)>/$stack12
<com.google.common.collect.AbstractMultimap$EntryIterator: java.util.Map$Entry next()>/$stack5
<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String getShortDescription()>/$stack11
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class)>/trimmed#_146
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class,java.text.NumberFormat)>/$stack10
<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>/$stack11
<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>/$stack11
<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>/$stack9
<com.thoughtworks.xstream.converters.collections.CollectionConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack4
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_51
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/low#_58
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/high#_59
<ognl.ASTKeyValue: java.lang.String toString()>/$stack2
<ognl.ASTKeyValue: java.lang.String toString()>/$stack5
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void addHeaderParametersToAttribute(br.com.caelum.vraptor.resource.ResourceMethod)>/trueMethod#_100
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/$stack4
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/$stack5
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/$stack7
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/$stack8
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>/$stack2
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>/$stack5
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/$stack30
<java.text.AttributedString$AttributedStringIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)>/l2#_881
<java.text.AttributedString$AttributedStringIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)>/$stack15
<java.text.AttributedString$AttributedStringIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)>/l2#_922
<java.text.AttributedString$AttributedStringIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)>/$stack15
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>/canonicalName#_366
<com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: java.lang.Enum read(com.google.gson.stream.JsonReader)>/$stack5
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/$stack20
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/fieldName#_403
<com.google.gson.internal.bind.TimeTypeAdapter: java.sql.Time read(com.google.gson.stream.JsonReader)>/$stack6
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String retrieveDisplayName(java.lang.String,boolean,int,java.util.Locale)>/l4#_137
<net.vidageek.mirror.dsl.Mirror: net.vidageek.mirror.dsl.ClassController on(java.lang.String)>/$stack2
<com.thoughtworks.xstream.converters.extended.ColorConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack20
<ognl.ASTAdd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack12
<br.com.caelum.iogi.parameters.Parameter: java.lang.String getFirstNameComponent()>/first#_45
<br.com.caelum.iogi.parameters.Parameter: boolean isDecorated()>/$stack2
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack11
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack15
<com.thoughtworks.xstream.converters.collections.MapConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack4
<com.google.gson.internal.bind.DateTypeAdapter: java.util.Date read(com.google.gson.stream.JsonReader)>/$stack4
<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject: void addText(java.lang.String)>/$stack7
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: void register(java.lang.Class,java.lang.Class)>/$stack9
<com.thoughtworks.xstream.io.xml.XppReader: java.lang.String getAttribute(java.lang.String)>/$stack4
<ognl.ASTNot: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack5
<com.google.common.collect.SingletonImmutableMap: com.google.common.collect.ImmutableSet entrySet()>/$stack2
<com.google.gson.DefaultDateTypeAdapter: java.util.Date deserializeToDate(com.google.gson.JsonElement)>/$stack7
<com.google.gson.DefaultDateTypeAdapter: java.util.Date deserializeToDate(com.google.gson.JsonElement)>/$stack22
<com.google.gson.DefaultDateTypeAdapter: java.util.Date deserializeToDate(com.google.gson.JsonElement)>/$stack17
<br.com.caelum.vraptor.ioc.spring.UniqueBeanNameGenerator: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)>/$stack9
<org.springframework.expression.spel.ast.OpNE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_37
<org.springframework.expression.spel.ast.OpNE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_38
<br.com.caelum.vraptor.serialization.I18nMessageSerializationTest: void setup()>/$stack25
<br.com.caelum.vraptor.serialization.I18nMessageSerializationTest: void setup()>/$stack28
<ognl.ASTNotIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_51
<ognl.ASTNotIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_52
<java.util.logging.Level: java.lang.String computeLocalizedLevelName(java.util.Locale)>/l5#_274
<ognl.ASTIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_52
<ognl.ASTIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_53
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/actualArgs#_1180
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/method#_1183
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/actualArgs_$$A_1#_1355
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/m#_1436
<ognl.ASTMultiply: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack12
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack28
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseInclude(com.google.common.collect.Multimap,java.util.Map$Entry)>/fieldName#_56
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack44
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack50
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack54
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack28
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack37
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack41
<ognl.OgnlRuntime: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack5
<java.lang.ClassLoader$NativeLibrary: void finalize()>/$stack21
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/args#_2260
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/parent#_244
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/$stack29
<org.picocontainer.parameters.CollectionComponentParameter: java.lang.Object[] getArrayInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map)>/$stack16
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Collection getCollectionInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map,org.picocontainer.NameBinding,boolean)>/$stack16
<com.thoughtworks.xstream.mapper.AttributeMapper: boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class)>/field#_110
<java.text.DateFormatSymbols: void initializeData(java.util.Locale)>/l7#114#_747
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operand#_50
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operand_$$A_1#_63
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/n#4#_64
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeAPersonWithDog()>/$stack9
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADog()>/$stack9
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgument()>/$stack9
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack9
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogNamedDifferently()>/$stack9
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogWhenAliasConfiguredByAnnotations()>/$stack9
<ognl.ASTOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_2#_61
<ognl.ASTOr: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/v#_72
<org.springframework.core.convert.support.ArrayToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack5
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void guardNotInstantiated()>/$stack10
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void guardStartState(boolean,java.lang.String)>/$stack12
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void guardAlreadyDisposed()>/$stack10
<ognl.ASTDivide: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_49
<ognl.ASTDivide: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_50
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>/$stack9
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue mergeIfRequired(org.springframework.beans.PropertyValue,org.springframework.beans.PropertyValue)>/$stack10
<org.springframework.expression.spel.ast.OpLE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_37
<org.springframework.expression.spel.ast.OpLE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_38
<org.springframework.expression.spel.ast.OpEQ: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_37
<org.springframework.expression.spel.ast.OpEQ: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_38
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue#_46
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue_$$A_1#_60
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/stringValue#_13
<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/$stack25
<com.google.gson.JsonPrimitive: boolean getAsBoolean()>/$stack2
<com.google.gson.JsonPrimitive: double getAsDouble()>/$stack2
<com.google.gson.JsonPrimitive: long getAsLong()>/$stack2
<com.google.gson.JsonPrimitive: int getAsInt()>/$stack2
<java.util.AbstractList: boolean equals(java.lang.Object)>/l5#_522
<java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)>/$stack39
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack26
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack22
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.MethodExecutor findAccessorForMethod(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/contextObject#_167
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/$stack34
<org.picocontainer.adapters.AbstractAdapter: java.lang.String toString()>/$stack4
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack9
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack12
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/sourceTypeDesc#7#_149
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/$stack38
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/element#_515
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/key#_599
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/value#_600
<org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)>/$stack105
<com.google.gson.internal.bind.TypeAdapters$20: java.net.InetAddress read(com.google.gson.stream.JsonReader)>/$stack4
<org.springframework.aop.scope.ScopedProxyUtils: org.springframework.beans.factory.config.BeanDefinitionHolder createScopedProxy(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry,boolean)>/originalBeanName#_51
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/nodeName#_441
<java.util.Collections: void swap(java.util.List,int,int)>/$stack4
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>/$stack5
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>/$stack8
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: boolean canHandle(java.lang.Class,java.lang.reflect.Method)>/$stack8
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: java.lang.String toString()>/$stack6
<org.springframework.beans.BeanWrapperImpl$2: java.lang.Object run()>/$stack3
<java.text.AttributeEntry: java.lang.String toString()>/$stack7
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/$stack40
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/$stack37
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/$stack16
<org.picocontainer.parameters.BasicComponentParameter: boolean areCompatible(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.ComponentAdapter)>/foundImpl#_265
<org.springframework.core.convert.support.StringToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack11
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack13
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/$stack52
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/$stack48
<com.google.gson.internal.bind.TypeAdapters$4: java.lang.Boolean read(com.google.gson.stream.JsonReader)>/$stack4
<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>/$stack5
<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>/$stack12
<ognl.OgnlOps: long longValue(java.lang.Object)>/$stack10
<ognl.OgnlOps: double doubleValue(java.lang.Object)>/s#_240
<com.google.gson.internal.bind.TypeAdapters$12: java.lang.Character read(com.google.gson.stream.JsonReader)>/str#_331
<ognl.OgnlOps: java.lang.Object binaryOr(java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlOps: java.lang.Object binaryXor(java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlOps: java.lang.Object binaryAnd(java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlOps: boolean in(java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlOps: boolean in(java.lang.Object,java.lang.Object)>/o#_819
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/beanNameToRegister#_267
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/$stack36
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/$stack21
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/$stack37
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/$stack30
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/$stack9
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/$stack11
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/$stack12
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/$stack12
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/$stack12
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlOps: java.lang.Object remainder(java.lang.Object,java.lang.Object)>/$stack5
<ognl.ObjectPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/name#_145
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/name#_160
<java.beans.Introspector: void processPropertyDescriptors()>/$stack90
<java.beans.Introspector: void processPropertyDescriptors()>/$stack91
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack31
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack10
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceElement#_65
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor getPropertyDescriptorInternal(java.lang.String)>/$stack5
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.String,java.lang.Object,java.lang.Object,java.beans.PropertyDescriptor)>/$stack5
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.PropertyValue createDefaultPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/type#_599
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(java.lang.String)>/$stack5
<com.thoughtworks.xstream.io.json.JettisonStaxWriter: void startNode(java.lang.String,java.lang.Class)>/$stack15
<com.thoughtworks.xstream.io.json.JettisonStaxWriter: void startNode(java.lang.String,java.lang.Class)>/$stack20
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_7#_764
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack54
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/list#17#_793
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/it#18#_796
<org.springframework.beans.BeanWrapperImpl: void growCollectionIfNecessary(java.util.Collection,int,java.lang.String,java.beans.PropertyDescriptor,int)>/$stack10
<org.springframework.beans.BeanWrapperImpl: void growCollectionIfNecessary(java.util.Collection,int,java.lang.String,java.beans.PropertyDescriptor,int)>/elementType#_860
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(java.lang.String,java.lang.Object)>/$stack6
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.PropertyValue)>/propertyName#_887
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.PropertyValue)>/$stack9
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>/$stack6
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>/$stack10
<java.util.Hashtable$Entry: java.lang.String toString()>/$stack3
<java.util.Hashtable$Entry: java.lang.String toString()>/$stack7
<javassist.bytecode.stackmap.MapMaker: javassist.bytecode.StackMapTable make(javassist.ClassPool,javassist.bytecode.MethodInfo)>/ca#_87
<javassist.bytecode.stackmap.MapMaker: javassist.bytecode.StackMap make2(javassist.ClassPool,javassist.bytecode.MethodInfo)>/ca#_108
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/propValue#_921
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack223
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack185
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack191
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType_$$A_1#_955
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack146
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack150
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType_$$A_2#_985
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue_$$A_6#_992
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack161
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/arrayIndex#56#_987
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack140
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/ex#64#_1034
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/$stack36
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/beanName#_230
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/sharedInstance#_234
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/nameToLookup#_259
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/sharedInstance_$$A_1#_288
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/dependsOnBean#22#_310
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/scopedInstance#26#_325
<ognl.ASTShiftLeft: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_49
<ognl.ASTShiftLeft: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_50
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean containsBean(java.lang.String)>/beanName#_355
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean containsBean(java.lang.String)>/$stack11
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/javaMethod#_48
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/beanName#_365
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/$stack26
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>/$stack21
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>/$stack22
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/beanName#_451
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/$stack53
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/targetClass#_492
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/tbd#40#_498
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: boolean hasDefaultConverter()>/$stack8
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/beanName#_522
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/$stack43
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/targetClass#_554
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/tbd#20#_560
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: java.util.Set findElementTypes(java.util.Collection)>/element#_125
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)>/beanName#_580
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean containsLocalBean(java.lang.String)>/beanName#_616
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.config.BeanDefinition getMergedBeanDefinition(java.lang.String)>/beanName#_857
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isFactoryBean(java.lang.String)>/beanName#_868
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>/$stack5
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>/$stack8
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String transformedBeanName(java.lang.String)>/$stack2
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String originalBeanName(java.lang.String)>/beanName#_1002
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/parentBeanName#_1136
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class doResolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/dcl#3#_1267
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/beanClass#_1319
<ognl.ASTRemainder: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_49
<ognl.ASTRemainder: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_50
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack13
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeIndexedArgumentValue(java.lang.Integer,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack16
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack21
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getGenericArgumentValue(java.lang.Class,java.lang.String,java.util.Set)>/$stack15
<org.mockito.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.mockito.cglib.core.Transformer)>/value#_31
<org.mockito.cglib.core.CollectionUtils: java.util.Collection filter(java.util.Collection,org.mockito.cglib.core.Predicate)>/$stack5
<org.mockito.cglib.core.CollectionUtils: java.util.List transform(java.util.Collection,org.mockito.cglib.core.Transformer)>/$stack8
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack171
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/attrName_$$A_1#_278
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/field_$$A_1#_280
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/attrName_$$A_3#_312
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/converter#17#_317
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack131
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/classAttribute#30#_366
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/v#_370
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack56
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>/fieldType#_506
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack11
<ognl.ASTTest: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/test#_51
<ognl.ASTTest: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/test#_58
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/defaultType#_205
<com.google.gson.internal.bind.TypeAdapters$23: java.util.Calendar read(com.google.gson.stream.JsonReader)>/name#_559
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/data#_47
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack11
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue#_45
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue_$$A_1#_59
<org.springframework.expression.spel.ast.OpMultiply: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandOne#_57
<org.springframework.expression.spel.ast.OpMultiply: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandTwo#_58
<net.vidageek.mirror.get.DefaultGetterHandler: java.lang.Object field(java.lang.String)>/$stack5
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_37
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_38
<org.hamcrest.core.IsCollectionContaining: boolean matchesSafely(java.lang.Iterable,org.hamcrest.Description)>/item#_24
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider$1: java.lang.Object instanceFor(java.lang.Class)>/$stack3
<ognl.ASTNegate: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack5
<org.hamcrest.collection.IsIterableContainingInOrder: boolean matchesSafely(java.lang.Iterable,org.hamcrest.Description)>/item#_24
<ognl.ASTStaticMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/root#_71
<ognl.ASTStaticMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/args#_70
<com.google.common.collect.RegularImmutableList: boolean equals(java.lang.Object)>/i#5#_158
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/$stack68
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/$stack77
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>/$stack5
<com.google.gson.internal.bind.ArrayTypeAdapter$1: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/componentTypeAdapter#_48
<org.springframework.expression.spel.standard.Tokenizer: void <init>(java.lang.String)>/$stack4
<org.springframework.context.expression.BeanExpressionContextAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack6
<org.springframework.context.expression.MapAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/value#_43
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.String adaptInnerBeanName(java.lang.String)>/$stack7
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/$stack17
<br.com.caelum.iogi.reflection.Target: br.com.caelum.iogi.reflection.Target typeArgument(int)>/$stack8
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/resolvedValue#_615
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/index#13#_629
<java.security.Provider: void putId()>/$stack3
<java.security.Provider: void putId()>/$stack11
<org.springframework.web.context.request.ServletRequestAttributes: void <clinit>()>/$stack3
<org.springframework.web.context.request.ServletRequestAttributes: void registerSessionDestructionCallback(java.lang.String,java.lang.Runnable)>/$stack7
<org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()>/$stack9
<org.springframework.core.io.ClassPathResource: java.net.URL getURL()>/$stack9
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Object)>/$stack15
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.String getContentOfStream(java.io.InputStream)>/charset#_191
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/ast#_116
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalOrExpression()>/rhExpr#_174
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalAndExpression()>/rhExpr#_186
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatRelationalExpression()>/rhExpr#_199
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatSumExpression()>/rhExpr#_236
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatProductExpression()>/rhExpr#_253
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPowerExpression()>/rhExpr#_272
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatUnaryExpression()>/expr#_283
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatProjection(boolean)>/expr#_526
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatIndexer()>/expr#_560
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatSelection(boolean)>/expr#_572
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatParenExpression()>/expr#_705
<org.springframework.util.StringUtils: java.lang.String applyRelativePath(java.lang.String,java.lang.String)>/$stack12
<org.springframework.util.StringUtils: java.lang.String applyRelativePath(java.lang.String,java.lang.String)>/$stack8
<org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>/$stack28
<org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>/$stack23
<br.com.caelum.vraptor.scan.WebAppBootstrapFactory: br.com.caelum.vraptor.scan.WebAppBootstrap scannerFor(br.com.caelum.vraptor.config.BasicConfiguration)>/$stack7
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/classAlias#11#_123
<org.springframework.beans.factory.support.DisposableBeanAdapter: void destroy()>/$stack44
<org.springframework.beans.factory.support.DisposableBeanAdapter: void invokeCustomDestroyMethod(java.lang.reflect.Method)>/$stack52
<org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>/$stack50
<org.springframework.util.ClassUtils: java.lang.String getClassFileName(java.lang.Class)>/$stack8
<com.google.gson.internal.bind.TypeAdapters$22: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/dateTypeAdapter#_523
<org.springframework.expression.spel.standard.TokenKind: java.lang.String toString()>/$stack3
<org.picocontainer.injectors.SingleMemberInjector: void nullCheck(java.lang.reflect.AccessibleObject,int,org.picocontainer.injectors.ParameterNameBinding,java.lang.Object)>/$stack7
<java.nio.charset.IllegalCharsetNameException: void <init>(java.lang.String)>/$stack2
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/element#11_$$A_1#_86
<com.google.gson.internal.bind.TypeAdapters$14: java.math.BigDecimal read(com.google.gson.stream.JsonReader)>/$stack6
<javassist.compiler.MemberCodeGen: void atFieldRead(javassist.compiler.ast.ASTree)>/$stack7
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/$stack12
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String determinePrimaryCandidate(java.util.Map,org.springframework.beans.factory.config.DependencyDescriptor)>/$stack29
<com.google.gson.internal.bind.TypeAdapters$16: java.lang.StringBuilder read(com.google.gson.stream.JsonReader)>/$stack5
<org.springframework.util.ResourceUtils: java.io.File getFile(java.net.URL,java.lang.String)>/$stack10
<org.springframework.util.ResourceUtils: java.io.File getFile(java.net.URI,java.lang.String)>/$stack9
<com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/keyAdapter#_125
<com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/valueAdapter#_126
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$3: boolean add(java.lang.Object)>/$stack5
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue executeFunctionJLRMethod(org.springframework.expression.spel.ExpressionState,java.lang.reflect.Method)>/$stack35
<com.google.inject.internal.util.$Preconditions: void checkArgument(boolean,java.lang.Object)>/$stack3
<com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeOneParam()>/method#_423
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeTwoParams()>/method#_439
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeWithoutGenericType()>/method#_458
<org.springframework.web.context.ConfigurableWebApplicationContext: void <clinit>()>/$stack3
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set doFindPathMatchingJarResources(org.springframework.core.io.Resource,java.lang.String)>/$stack44
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set retrieveMatchingFiles(java.io.File,java.lang.String)>/$stack20
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set retrieveMatchingFiles(java.io.File,java.lang.String)>/$stack13
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: void doRetrieveMatchingFiles(java.lang.String,java.io.File,java.util.Set)>/$stack24
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/$stack22
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/$stack5
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o#_101
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o_$$A_2#_126
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack86
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack87
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameter namedAfter(br.com.caelum.iogi.reflection.Target)>/$stack11
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>/$stack23
<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>/$stack18
<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>/$stack24
<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>/$stack28
<br.com.caelum.vraptor.deserialization.JsonDeserializer: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack12
<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: void <init>(java.lang.String,java.lang.String,org.springframework.util.PathMatcher)>/$stack8
<org.springframework.beans.CachedIntrospectionResults: org.springframework.beans.CachedIntrospectionResults forClass(java.lang.Class)>/$stack16
<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>/$stack14
<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>/$stack23
<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor buildGenericTypeAwarePropertyDescriptor(java.lang.Class,java.beans.PropertyDescriptor)>/$stack6
<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor buildGenericTypeAwarePropertyDescriptor(java.lang.Class,java.beans.PropertyDescriptor)>/$stack7
<com.google.gson.internal.bind.TypeAdapters$11: java.lang.Number read(com.google.gson.stream.JsonReader)>/$stack8
<org.mockito.internal.configuration.DefaultInjectionEngine: void injectMockCandidate(java.lang.Class,java.util.Set,java.lang.Object)>/$stack16
<org.springframework.context.expression.StandardBeanExpressionResolver: java.lang.Object evaluate(java.lang.String,org.springframework.beans.factory.config.BeanExpressionContext)>/conversionService#_131
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/lastValue#15_$$A_2#_114
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack68
<java.lang.AssertionError: void <init>(java.lang.Object)>/$stack2
<org.springframework.util.NumberUtils: java.lang.Number convertNumberToTargetClass(java.lang.Number,java.lang.Class)>/$stack26
<org.springframework.core.Conventions: java.lang.String getQualifiedAttributeName(java.lang.Class,java.lang.String)>/$stack4
<org.picocontainer.injectors.AbstractInjector: void checkConcrete()>/$stack8
<org.springframework.context.expression.BeanFactoryAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack6
<com.google.common.collect.LinkedListMultimap$AsMapEntries$1: java.util.Map$Entry next()>/key#_1011
<org.springframework.web.util.WebUtils: void <clinit>()>/$stack4
<org.springframework.web.context.support.ServletContextResource: java.net.URL getURL()>/$stack8
<org.springframework.web.context.support.ServletContextResourcePatternResolver: java.util.Set doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)>/$stack12
<com.thoughtworks.xstream.converters.collections.BitSetConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack8
<com.google.gson.internal.bind.TypeAdapters$17: java.lang.StringBuffer read(com.google.gson.stream.JsonReader)>/$stack5
<com.google.gson.DefaultDateTypeAdapter: java.util.Date deserializeToDate(com.google.gson.JsonElement)>/$stack14
<org.springframework.util.ObjectUtils: java.lang.String identityToString(java.lang.Object)>/$stack4
<com.google.gson.internal.bind.CollectionTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/elementTypeAdapter#_52
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue mergeIfRequired(org.springframework.beans.PropertyValue,org.springframework.beans.PropertyValue)>/$stack13
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setValue(java.lang.Object)>/$stack5
<org.springframework.beans.PropertyBatchUpdateException: void printStackTrace(java.io.PrintStream)>/$stack8
<org.springframework.core.OverridingClassLoader: java.io.InputStream openStreamForClass(java.lang.String)>/$stack5
<org.springframework.web.context.WebApplicationContext: void <clinit>()>/$stack3
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/clazz#_52
<org.springframework.expression.spel.ast.BeanReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack9
<org.springframework.util.Assert: void isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)>/$stack6
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildIndexedPropertyName(java.lang.String,int)>/$stack4
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildKeyedPropertyName(java.lang.String,java.lang.Object)>/$stack4
<org.springframework.beans.BeanUtils: java.beans.PropertyEditor findEditorByConvention(java.lang.Class)>/$stack11
<org.springframework.beans.BeanUtils: org.springframework.core.MethodParameter getWriteMethodParameter(java.beans.PropertyDescriptor)>/$stack3
<sun.security.pkcs.PKCS7: void parse(sun.security.util.DerInputStream,boolean)>/l3#_183
<net.vidageek.mirror.invoke.MethodHandlerByName: java.lang.Object withArgs(java.lang.Object[])>/$stack6
<com.google.gson.internal.bind.TypeAdapters$25: com.google.gson.JsonElement read(com.google.gson.stream.JsonReader)>/$stack20
<com.google.gson.internal.bind.TypeAdapters$25: com.google.gson.JsonElement read(com.google.gson.stream.JsonReader)>/number#_648
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.injectors.InjectInto makeInjectInto(org.picocontainer.ComponentAdapter)>/$stack2
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.injectors.InjectInto makeInjectInto(org.picocontainer.ComponentAdapter)>/$stack3
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/excludeKey#_186
<org.springframework.web.context.request.RequestContextListener: void <clinit>()>/$stack3
<org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>/$stack5
<java.lang.invoke.LambdaForm$Name: java.lang.String exprString()>/$stack10
<ognl.OgnlOps: java.math.BigInteger bigIntValue(java.lang.Object)>/$stack15
<ognl.OgnlOps: java.math.BigDecimal bigDecValue(java.lang.Object)>/$stack12
<org.springframework.core.io.VfsUtils: void <clinit>()>/$stack22
<org.springframework.core.io.VfsUtils: void <clinit>()>/$stack41
<org.springframework.core.io.VfsUtils: void <clinit>()>/$stack50
<org.springframework.core.io.VfsUtils: void <clinit>()>/$stack58
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>/$stack8
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack42
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack46
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack33
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack24
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack15
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.Object,java.lang.String)>/$stack11
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)>/$stack54
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)>/$stack15
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.PropertyValue createDefaultPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack14
<org.springframework.beans.BeanWrapperImpl: java.lang.Object newValue(java.lang.Class,java.lang.String)>/$stack25
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder getPropertyNameTokens(java.lang.String)>/$stack53
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.ParametersControl build()>/$stack6
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack21
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/readMethod#_709
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack131
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack118
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack77
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack61
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack45
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack65
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack207
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack195
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack183
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack171
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack159
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(java.lang.String,java.lang.Object)>/$stack14
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.PropertyValue)>/$stack20
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack328
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack245
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack226
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack316
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack194
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack299
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack158
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack164
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack134
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack25
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType#66#_1042
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack267
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack270
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack276
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack257
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack260
<com.google.gson.internal.bind.TypeAdapters$24: java.util.Locale read(com.google.gson.stream.JsonReader)>/locale#_612
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack12
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)>/$stack18
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>/$stack2
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Class[])>/$stack26
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Class[])>/$stack21
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Class[])>/$stack17
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack29
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>/$stack2
<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>/$stack3
<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>/$stack3
<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>/$stack3
<com.google.gson.internal.bind.TypeAdapters$15: java.math.BigInteger read(com.google.gson.stream.JsonReader)>/$stack6
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/comparator#_75
<ognl.ASTProperty: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack4
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void gettingShouldReturnNullIfIndexNotFound()>/value#_62
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void gettingShouldReturnValueIfIndexFound()>/value#_70
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void settingShouldNullifyUpToIndex()>/$stack6
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void settingShouldNullifyUpToIndex()>/$stack10
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>/$stack12
<br.com.caelum.vraptor.serialization.xstream.Serializee: java.util.Set getParentTypes(java.lang.String,java.lang.Class)>/$stack15
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void usesAsteriskBothWays()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void canTranslateAInheritedResourceBothWays()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void canTranslateAnnotatedMethodBothWays()>/$stack12
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack48
<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack16
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerAndTheMethodAreAnnotatedWithRelativePath()>/route#_179
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerEndsWithSlashAndTheMethodAreAnnotatedWithRelativePath()>/route#_188
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerEndsWithSlashAndTheMethodAreAnnotatedWithAbsolutePath()>/route#_196
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerEndsWithSlashAndTheMethodAreAnnotatedWithEmptyPath()>/route#_204
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerAndTheMethodAreAnnotatedWithAbsolutePath()>/route#_219
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerAndTheMethodAreAnnotatedWithEmptyPath()>/route#_228
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerIsAnnotatedWithPath()>/route#_237
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void findsTheCorrectAnnotatedMethodIfThereIsNoWebMethodAnnotationPresent()>/route#_245
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void suportsTheDefaultNameForANonAnnotatedMethod()>/route#_257
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void ignoresTheControllerSuffixForANonAnnotatedMethod()>/route#_268
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsASlashWhenUserForgotIt()>/route#_277
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void matchesWhenUsingAWildcard()>/route#_287
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void dontRegisterRouteIfMethodIsNotPublic()>/route#_296
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void dontRegisterRouteIfMethodIsStatic()>/route#_304
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldFindNonAnnotatedNonStaticPublicMethodWithComponentNameInVariableCamelCaseConventionAsURI()>/route#_383
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldFindSeveralPathsForMethodWithManyValue()>/route#_395
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldFindSeveralPathsForMethodWithManyValue()>/route2#_397
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void supportMethodOverriding()>/route#_459
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheGetControllerAndTheMethodAreAnnotatedWithRelativePath()>/route#_520
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheGetControllerEndsWithSlashAndTheMethodAreAnnotatedWithRelativePath()>/route#_536
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheGetControllerEndsWithSlashAndTheMethodAreAnnotatedWithAbsolutePath()>/route#_545
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheGetControllerAndTheMethodAreAnnotatedWithAbsolutePath()>/route#_554
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheGetControllerIsAnnotatedWithPath()>/route#_562
<com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack13
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack41
<org.springframework.core.convert.support.ObjectToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_55
<org.picocontainer.behaviors.Stored: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/instance_$$A_1#_91
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_63
<ognl.Ognl: void setValue(java.lang.String,java.util.Map,java.lang.Object,java.lang.Object)>/$stack4
<javassist.CtClassType: void modifyConstructors(javassist.bytecode.ClassFile)>/codeAttr#_1530
<br.com.caelum.iogi.collections.ArrayInstantiator$ArrayFactory: java.lang.Object getArray()>/$stack19
<br.com.caelum.vraptor.http.iogi.IogiGenericTypesSupportTest: void canInstantiatingStringsInAListSettingItsInternalValueWithoutInvokingConverters1()>/$stack15
<br.com.caelum.vraptor.http.iogi.IogiGenericTypesSupportTest: void canInstantiateAndPopulateAListOfWrappers1()>/$stack15
<br.com.caelum.vraptor.http.iogi.IogiGenericTypesSupportTest: void canInstantiateAndPopulateAListOfWrappers1()>/$stack19
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/args#_1450
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/args#_2291
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/value#_427
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/it#8#_442
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/result_$$A_2#_451
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void shouldComplainIfThereIsNothingRegistered()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void shouldReturnHtmlWhenRequestingAnyContentType()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void shouldReturnHtmlWhenAcceptsIsBlankContentType()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void shouldReturnHtmlWhenRequestingUnknownAsFirstAndAnyContentType()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testHtml()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testJson()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testJsonWithQualifier()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testNull()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testJsonInAComplexAcceptHeader()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testPrecendenceInAComplexAcceptHeaderHtmlShouldPrevailWhenTied()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testPrecendenceInABizzarreMSIE8AcceptHeader()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testPrecendenceInABizzarreMSIE8AcceptHeaderWithHtml()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testPrecendenceInAComplexAcceptHeaderHtmlShouldPrevailWhenTied2()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testJsonInAComplexAcceptHeaderWithParameters()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testXMLInAComplexAcceptHeaderWithParametersNotOrdered()>/$stack3
<org.springframework.core.convert.support.StringToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_59
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/$stack148
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue#_944
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack35
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/convertedValue#_112
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack59
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack62
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack44
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack35
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack22
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack25
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/type#_78
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/prevType#_79
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withAnyArgs()>/$stack18
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack29
<org.codehaus.jettison.mapped.MappedNamespaceConvention: void processAttributesAndNamespaces(org.codehaus.jettison.Node,org.codehaus.jettison.json.JSONObject)>/uri#_108
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/field#_147
<java.lang.invoke.MemberName: java.lang.String toString()>/$stack32
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>/$stack11
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>/$stack14
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/resolvedKey#_377
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/resolvedValue#_378
<br.com.caelum.vraptor.interceptor.Graph: void addDummies()>/node#_95
<br.com.caelum.vraptor.interceptor.Graph: void removeRoots(java.util.Set)>/root#_101
<com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Iterable)>/$stack8
<com.thoughtworks.xstream.io.xml.AbstractPullReader: void move()>/event#_118
<com.thoughtworks.xstream.io.xml.AbstractPullReader: void move()>/$stack9
<com.thoughtworks.xstream.io.xml.AbstractPullReader: void reset()>/$stack5
<com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack22
<com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack16
<com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack17
<org.picocontainer.injectors.MethodInjector: java.lang.reflect.Method getInjectorMethod()>/$stack14
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/evaluation#_232
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/result#_236
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/eval#_246
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/eval_$$A_1_$$A_1#_246
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/evaluation#_275
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/eval#_290
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/eval_$$A_1_$$A_1#_290
<org.springframework.core.convert.support.ArrayToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_64
<java.util.AbstractMap: void putAll(java.util.Map)>/$stack8
<java.util.AbstractMap: void putAll(java.util.Map)>/$stack9
<org.springframework.beans.factory.support.BeanDefinitionReaderUtils: void registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry)>/beanName#_147
<org.springframework.beans.factory.support.AbstractBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/$stack6
<org.springframework.beans.factory.support.AbstractBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/$stack17
<org.springframework.beans.factory.support.AbstractBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/$stack36
<org.springframework.beans.factory.support.AbstractBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/$stack35
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/$stack87
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/$stack19
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/$stack49
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/$stack37
<br.com.caelum.iogi.reflection.NewObject: void setProperty(br.com.caelum.iogi.reflection.NewObject$Setter)>/propertyValue#_58
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/$stack18
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/$stack17
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/$stack16
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/$stack9
<org.mockito.cglib.core.TypeUtils: org.mockito.cglib.core.Signature parseSignature(java.lang.String)>/$stack25
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack37
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack34
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/$stack17
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/componentInstance#_587
<org.codehaus.jettison.json.JSONArray: java.lang.String join(java.lang.String)>/$stack10
<org.codehaus.jettison.json.JSONArray: java.io.Writer write(java.io.Writer)>/$stack11
<com.thoughtworks.xstream.io.path.PathTrackingReader: void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.path.PathTracker)>/$stack3
<com.thoughtworks.xstream.io.path.PathTrackingReader: void moveDown()>/$stack2
<com.thoughtworks.xstream.io.path.PathTrackingReader: void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)>/$stack5
<java.util.AbstractSequentialList: boolean addAll(int,java.util.Collection)>/$stack9
<com.google.common.collect.Sets: java.util.HashSet newHashSet(java.util.Iterator)>/$stack4
<ognl.ASTAssign: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_52
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.util.List argumentValues(br.com.caelum.iogi.Instantiator)>/$stack11
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPrimaryExpression()>/start#_300
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPrimaryExpression()>/$stack7
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void consumeArguments(java.util.List)>/$stack19
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatInlineList()>/$stack12
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatConstructorReference()>/$stack28
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatConstructorReference()>/$stack43
<com.thoughtworks.xstream.converters.collections.TreeSetConverter$1: void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)>/key#_121
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/ea#_172
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack4
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack32
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack6
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/previousRoot#_55
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#2#_75
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/previousRoot#_72
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByName(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/bean#_1104
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByType(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/autowiredArgument#_1152
<com.thoughtworks.xstream.converters.basic.CharConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack4
<org.picocontainer.injectors.SingleMemberInjector: java.lang.Object getParameter(org.picocontainer.PicoContainer,java.lang.reflect.AccessibleObject,int,java.lang.reflect.Type,java.lang.annotation.Annotation,org.picocontainer.Parameter,org.picocontainer.ComponentAdapter)>/result#_76
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack86
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/value#_90
<com.thoughtworks.xstream.core.util.PresortedMap: java.util.Set keySet()>/$stack9
<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/item_$$A_1#_55
<br.com.caelum.iogi.collections.CyclingListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/listElement#_36
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: java.util.Collection read(com.google.gson.stream.JsonReader)>/instance#_81
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Collection)>/element#_95
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)>/$stack16
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/$stack32
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String toString()>/$stack7
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void read(com.google.gson.stream.JsonReader,java.lang.Object)>/fieldValue#_93
<com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>/$stack5
<org.springframework.core.convert.support.StringToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_60
<ognl.EvaluationPool: void recycleAll(ognl.Evaluation)>/$stack2
<ognl.EvaluationPool: void recycleAll(ognl.Evaluation)>/$stack3
<java.io.PrintWriter: void println(java.lang.Object)>/l2#_754
<com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)>/candidate#_356
<java.util.Arrays: java.lang.String toString(java.lang.Object[])>/$stack8
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>/l7#_513
<com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/instance_$$A_1#_72
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack17
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_65
<com.thoughtworks.xstream.io.xml.StaxWriter: void addAttribute(java.lang.String,java.lang.String)>/$stack5
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer,java.lang.Class)>/$stack11
<com.thoughtworks.xstream.io.xml.StaxWriter: void startNode(java.lang.String)>/$stack15
<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>/$stack26
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/$stack29
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/$stack19
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/$stack13
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>/$stack14
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>/$stack17
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>/$stack31
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedValue_$$A_3#_221
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/targetObject#_186
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack45
<org.apache.log4j.Category: void removeAllAppenders()>/$stack16
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)>/string#_496
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetKey#_70
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetValue#_73
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/$stack21
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/$stack23
<java.beans.PropertyDescriptor: void <init>(java.beans.PropertyDescriptor,java.beans.PropertyDescriptor)>/l6#_578
<java.beans.PropertyDescriptor: void <init>(java.beans.PropertyDescriptor,java.beans.PropertyDescriptor)>/l5#19#_577
<org.springframework.core.convert.support.ObjectToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack14
<java.util.Hashtable: void putAll(java.util.Map)>/$stack8
<java.util.Hashtable: void putAll(java.util.Map)>/$stack9
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack18
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack21
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack119
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack120
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack114
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack115
<ognl.OgnlParser: void primaryExpression()>/$stack157
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceObjectType#_330
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/targetObjectType#_399
<org.springframework.beans.BeanWrapperImpl$6: java.lang.Object run()>/$stack3
<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>/$stack33
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>/$stack7
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/$stack7
<java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator,int,int,java.text.AttributedCharacterIterator$Attribute[])>/l13#_277
<java.text.AttributedString: void setAttributes(java.util.Map,int)>/$stack20
<java.text.AttributedString: void setAttributes(java.util.Map,int)>/$stack22
<com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/$stack3
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>/l6_$$A_1#_2545
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>/l6_$$A_2#_2554
<org.springframework.context.support.AbstractRefreshableApplicationContext: void refreshBeanFactory()>/$stack5
<org.mockito.internal.creation.jmock.ClassImposterizer: java.lang.Class createProxyClass(java.lang.Class,java.lang.Class[])>/$stack7
<javassist.CtClassType: void addConstructor(javassist.CtConstructor)>/$stack5
<javassist.CtClassType: void addMethod(javassist.CtMethod)>/$stack9
<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>/$stack17
<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>/$stack15
<com.thoughtworks.xstream.converters.collections.CollectionConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/item#_73
<com.thoughtworks.xstream.converters.collections.CollectionConverter: void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)>/item#_98
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void startNode(java.lang.String)>/escapedName#_193
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void addAttribute(java.lang.String,java.lang.String)>/$stack5
<sun.font.AttributeValues: sun.font.AttributeValues merge(java.util.Map,int)>/$stack19
<org.springframework.expression.spel.ast.Assign: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<br.com.caelum.iogi.collections.IndexedListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/newElement#_34
<java.text.AttributedString$AttributedStringIterator: java.util.Set getAllAttributeKeys()>/$stack27
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,boolean)>/singletonObject_$$A_2#_185
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/singletonObject_$$A_1#_222
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/value#_413
<org.springframework.web.context.request.AbstractRequestAttributesScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/scopedObject_$$A_1#_43
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/l7#_90
<com.thoughtworks.xstream.converters.extended.ColorConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack19
<org.springframework.web.context.support.ServletContextResourcePatternResolver: java.util.Set doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)>/sc#_85
<java.io.PrintStream: void println(java.lang.Object)>/l2#_821
<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack15
<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack16
<com.thoughtworks.xstream.converters.collections.MapConverter: void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)>/key#_106
<com.thoughtworks.xstream.converters.collections.MapConverter: void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)>/value#_110
<org.springframework.web.context.support.ServletContextScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/scopedObject_$$A_1#_68
<ognl.ASTList: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack10
<org.mockito.asm.util.AbstractVisitor: void printList(java.io.PrintWriter,java.util.List)>/$stack7
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object[])>/$stack7
<br.com.caelum.vraptor.resource.DefaultResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/$stack5
<br.com.caelum.vraptor.resource.DefaultResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/$stack6
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseExclude(java.util.Map$Entry)>/$stack7
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack55
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack42
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack86
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack65
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack169
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack118
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack141
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/$stack34
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/key#_254
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Collection getCollectionInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map,org.picocontainer.NameBinding,boolean)>/$stack17
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMapInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map)>/$stack16
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void start(org.picocontainer.PicoContainer)>/$stack5
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void stop(org.picocontainer.PicoContainer)>/$stack8
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void dispose(org.picocontainer.PicoContainer)>/$stack9
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setAsText(java.lang.String)>/$stack8
<com.thoughtworks.xstream.converters.collections.TreeSetConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/unmarshalledComparator#_61
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>/l8#_362
<java.util.AbstractList: boolean addAll(int,java.util.Collection)>/l5#_259
<org.springframework.beans.factory.support.DisposableBeanAdapter$4: java.lang.Object run()>/$stack3
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuffer,java.lang.Object)>/oAsString#_304
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,int)>/c#_90
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,boolean)>/c#_110
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedElement#_520
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedKey#_606
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue#_610
<org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)>/$stack101
<org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)>/$stack102
<com.thoughtworks.xstream.core.util.OrderRetainingMap: void putAll(java.util.Map)>/$stack8
<com.thoughtworks.xstream.core.util.OrderRetainingMap: void putAll(java.util.Map)>/$stack9
<org.springframework.aop.scope.ScopedProxyUtils: org.springframework.beans.factory.config.BeanDefinitionHolder createScopedProxy(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry,boolean)>/$stack11
<java.util.Collections: void reverse(java.util.List)>/$stack15
<java.util.Collections: void reverse(java.util.List)>/l6#_386
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibSubclassCreator: java.lang.Object instantiate(java.lang.reflect.Constructor,java.lang.Object[])>/$stack6
<java.util.Collections: void swap(java.util.List,int,int)>/$stack5
<org.picocontainer.PicoBuilder: void addContainerComponents(org.picocontainer.DefaultPicoContainer)>/containerComp#_223
<org.picocontainer.PicoBuilder: org.picocontainer.ComponentFactory buildComponentFactory(org.picocontainer.DefaultPicoContainer,org.picocontainer.ComponentFactory,java.util.Stack)>/componentFactory#_230
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>/$stack3
<org.springframework.expression.spel.ast.InlineList: void checkIfConstant()>/$stack25
<org.springframework.expression.spel.ast.InlineList: void checkIfConstant()>/$stack21
<org.springframework.expression.spel.ast.InlineList: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack9
<org.mockito.cglib.core.EmitUtils$4: void processCase(int,org.mockito.asm.Label)>/$stack18
<com.google.gson.internal.bind.TypeAdapters$25: com.google.gson.JsonElement read(com.google.gson.stream.JsonReader)>/$stack11
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/$stack43
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/$stack39
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException: void <init>(java.lang.Object,com.thoughtworks.xstream.io.path.Path)>/$stack6
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack14
<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>/$stack6
<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>/$stack13
<com.thoughtworks.xstream.core.ReferenceByIdMarshaller: void fireValidReference(java.lang.Object)>/$stack6
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack33
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_66
<org.springframework.beans.BeanWrapperImpl: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapperImpl)>/$stack4
<org.springframework.beans.BeanWrapperImpl: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapperImpl)>/$stack7
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/$stack43
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue_$$A_5#_963
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/i#60#_1000
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usePatternMatchinForPrimitiveParameters()>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usePatternMatchingForRegexParameters()>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usingRegexesWithCurlyBraces()>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usingRegexesWithCurlyBracesNotOnTheEnd()>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usingRegexesWithCurlyBracesNotOnTheEndAndOtherVar()>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usingRegexesWithCurlyBracesNotOnTheEndAndOtherVarAndManyOtherThings()>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usingRegexesWithAsterisksAtTheEnd()>/$stack6
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack70
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack61
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/value#_46
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>/field_$$A_1#_638
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void setRoot(java.lang.Object)>/$stack6
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void serialize()>/$stack9
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.TypeConverter getTypeConverter()>/$stack5
<org.springframework.beans.factory.support.AbstractBeanFactory: void initBeanWrapper(org.springframework.beans.BeanWrapper)>/$stack2
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1: void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/$stack50
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1: void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/str#_123
<org.mockito.cglib.core.CollectionUtils: java.util.Map getIndexMap(java.util.List)>/$stack7
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_71
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_1#_292
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/attributeName#43#_225
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void addWebInfClassesStereotypes(java.util.Map,java.util.HashSet)>/myStereotypes#_152
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void findComponentsFromWebInfClasses(java.util.Map,java.util.Set,java.util.Set)>/classes#_164
<ognl.OgnlContext: void setValues(java.util.Map)>/$stack9
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)>/$stack13
<java.lang.ClassLoader: long findNative(java.lang.ClassLoader,java.lang.String)>/$stack13
<org.apache.log4j.helpers.AppenderAttachableImpl: int appendLoopOnAppenders(org.apache.log4j.spi.LoggingEvent)>/$stack10
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack21
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack32
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack39
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack57
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/$stack13
<sun.util.resources.LocaleData$LocaleDataResourceBundleControl: java.util.List getCandidateLocales(java.lang.String,java.util.Locale)>/$stack28
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/property#_84
<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>/$stack3
<com.google.common.collect.Multimaps$UnmodifiableMultimap: void <init>(com.google.common.collect.Multimap)>/$stack2
<sun.invoke.util.BytecodeDescriptor: java.lang.String unparseMethod(java.lang.Class,java.util.List)>/$stack11
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.ClassLoader combine(java.util.List)>/$stack5
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.ClassLoader combine(java.util.List)>/$stack8
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack21
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/$stack11
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/$stack17
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: java.util.List instantiateParameters(br.com.caelum.iogi.parameters.Parameters,java.util.List,java.util.List)>/$stack12
<br.com.caelum.iogi.DependenciesInjector: boolean canObtainDependenciesFor(java.util.Collection)>/$stack6
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack73
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack17
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)>/$stack10
<org.mockito.cglib.core.EmitUtils$6: void processCase(int,org.mockito.asm.Label)>/$stack13
<org.mockito.cglib.core.EmitUtils$6: void processCase(int,org.mockito.asm.Label)>/$stack46
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/propKey_$$A_1#_167
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/propValue_$$A_1#_168
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArguments(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack15
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArguments(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack21
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArguments(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack22
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/dependsOnBean#5#_270
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack45
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack19
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack24
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack53
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack66
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack67
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack11
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/$stack13
<com.google.common.base.Predicates: com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate)>/$stack3
<com.google.common.base.Predicates: com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate)>/$stack5
<javassist.compiler.MemberResolver: javassist.compiler.MemberResolver$Method lookupMethod(javassist.CtClass,java.lang.String,int[],int[],java.lang.String[],boolean)>/$stack40
<br.com.caelum.iogi.reflection.Target: br.com.caelum.iogi.reflection.Target typeArgument(int)>/$stack5
<javassist.compiler.MemberResolver: javassist.CtClass searchImports(java.lang.String)>/$stack17
<br.com.caelum.iogi.MultiInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack14
<java.text.CharacterIteratorFieldDelegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>/$stack33
<java.text.CharacterIteratorFieldDelegate: java.text.AttributedCharacterIterator getIterator(java.lang.String)>/$stack12
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack36
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack26
<java.util.AbstractMap: void putAll(java.util.Map)>/$stack7
<java.util.AbstractMap: boolean equals(java.lang.Object)>/$stack13
<br.com.caelum.vraptor.serialization.xstream.Serializee: java.util.Set getParentTypes(java.lang.String,java.lang.Class)>/$stack27
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getAdapter(java.lang.Class,java.util.Locale)>/$stack21
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter findAdapter(java.lang.Class,java.util.Locale)>/$stack9
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>/$stack13
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/$stack161
<sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>/$stack21
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack25
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack28
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack48
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/$stack53
<org.apache.log4j.SortedKeyEnumeration: void <init>(java.util.Hashtable)>/$stack15
<br.com.caelum.vraptor.validator.DefaultValidator: void addAll(java.util.Collection)>/$stack6
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveParameterType(org.springframework.core.MethodParameter,java.lang.Class)>/rawType#_83
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveReturnType(java.lang.reflect.Method,java.lang.Class)>/rawType#_101
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/$stack11
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveType(java.lang.reflect.Type,java.util.Map)>/rawType#_218
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getRawType(java.lang.reflect.Type,java.util.Map)>/$stack8
<org.hamcrest.BaseDescription: org.hamcrest.Description appendList(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator)>/$stack7
<org.springframework.ui.context.support.UiApplicationContextUtils: org.springframework.ui.context.ThemeSource initThemeSource(org.springframework.context.ApplicationContext)>/$stack18
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack29
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack30
<java.net.InetAddress: java.lang.String getHostFromNameService(java.net.InetAddress,boolean)>/$stack11
<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.spel.ExpressionState)>/$stack15
<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/$stack18
<java.net.InetAddress: java.net.InetAddress[] getAddressesFromNameService(java.lang.String,java.net.InetAddress)>/$stack33
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack15
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack31
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/$stack11
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/k#_424
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/$stack20
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/$stack24
<org.codehaus.jettison.json.JSONArray: org.codehaus.jettison.json.JSONObject getJSONObject(int)>/o#_254
<java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>/$stack13
<java.io.FilePermissionCollection: boolean implies(java.security.Permission)>/$stack18
<com.google.common.collect.AbstractMapBasedMultiset: void <init>(java.util.Map)>/$stack2
<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>/$stack27
<java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.SecureRandom)>/$stack14
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void registerRulesFor(java.lang.Class)>/$stack13
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.util.List argumentValues(br.com.caelum.iogi.Instantiator)>/$stack10
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/$stack15
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack23
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack33
<org.mockito.cglib.proxy.FixedValueGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack9
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack31
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack39
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack59
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack25
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack32
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack40
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack49
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.util.List filterPostProcessors(java.util.List)>/$stack11
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(java.util.Collection,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack7
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack35
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack44
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack28
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack36
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack45
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List)>/$stack7
<org.springframework.context.support.AbstractApplicationContext: void finishBeanFactoryInitialization(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack8
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/$stack22
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/$stack18
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/value_$$A_1#_114
<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>/$stack56
<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>/$stack67
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/$stack9
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/$stack9
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/expr#_55
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack17
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class predictBeanType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/$stack17
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/expr#_72
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack17
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/$stack14
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack26
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyMergedBeanDefinitionPostProcessors(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)>/$stack10
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInstantiation(java.lang.Class,java.lang.String)>/$stack10
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.reflect.Constructor[] determineConstructorsFromBeanPostProcessors(java.lang.Class,java.lang.String)>/$stack12
<com.google.common.base.Predicates$InstanceOfPredicate: void <init>(java.lang.Class)>/$stack2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/$stack29
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/$stack54
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack13
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/$stack29
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack80
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getCryptoPermission(java.lang.String)>/$stack31
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getCryptoPermission(java.lang.String)>/$stack51
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getDefaultPermission(java.lang.String)>/$stack6
<com.google.gson.internal.bind.TypeAdapters$22$1: java.sql.Timestamp read(com.google.gson.stream.JsonReader)>/$stack4
<br.com.caelum.iogi.collections.ListInstantiator: boolean firstParameterIsDecorated(java.util.List)>/$stack2
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/index_$$A_1#_96
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/index_$$A_1#_166
<br.com.caelum.iogi.collections.CyclingListInstantiator: int countToFirstRepeatedParameterName(java.util.List)>/$stack6
<br.com.caelum.iogi.collections.CyclingListInstantiator: int countToFirstRepeatedParameterName(java.util.List)>/$stack10
<br.com.caelum.vraptor.http.VRaptorResponse: void sendRedirect(java.lang.String)>/$stack7
<javassist.compiler.MemberCodeGen: void addFinally(java.util.ArrayList,javassist.compiler.ast.Stmnt)>/$stack10
<java.lang.String: java.lang.String[] split(java.lang.String,int)>/$stack46
<javassist.bytecode.CodeAttribute: void <init>(javassist.bytecode.ConstPool,javassist.bytecode.CodeAttribute,java.util.Map)>/$stack17
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void resetBeanDefinition(java.lang.String)>/$stack10
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: br.com.caelum.vraptor.http.route.Route getRouteMatching(java.util.List,java.lang.String)>/$stack7
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void <init>(java.util.List,java.util.List)>/$stack4
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void <init>(java.util.List,java.util.List)>/$stack7
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void registerComponents(com.thoughtworks.xstream.XStream)>/$stack16
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void registerComponents(com.thoughtworks.xstream.XStream)>/$stack10
<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>/$stack27
<sun.security.x509.AVA: java.lang.String getEmbeddedHexString(java.util.List)>/$stack6
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack15
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack16
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack18
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack17
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack14
<javassist.bytecode.CodeIterator: void addLdcW(javassist.bytecode.CodeAttribute$LdcEntry,java.util.ArrayList)>/$stack10
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack16
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack20
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack24
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack29
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack34
<javassist.bytecode.CodeIterator: byte[] makeExapndedCode(byte[],java.util.ArrayList,int,int)>/$stack21
<javassist.bytecode.CodeIterator: byte[] makeExapndedCode(byte[],java.util.ArrayList,int,int)>/$stack30
<javassist.bytecode.CodeIterator: byte[] makeExapndedCode(byte[],java.util.ArrayList,int,int)>/$stack31
<com.google.common.collect.Collections2$TransformedCollection: void <init>(java.util.Collection,com.google.common.base.Function)>/$stack3
<com.google.common.collect.Collections2$TransformedCollection: void <init>(java.util.Collection,com.google.common.base.Function)>/$stack5
<java.lang.invoke.MethodType: java.lang.invoke.MethodType fromMethodDescriptorString(java.lang.String,java.lang.ClassLoader)>/$stack18
<org.springframework.expression.spel.ast.OperatorNot: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<java.net.SocketPermissionCollection: boolean implies(java.security.Permission)>/$stack18
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object,boolean)>/$stack12
<com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)>/$stack27
<com.google.gson.Gson: com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)>/$stack15
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack16
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/$stack31
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack35
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack48
<java.security.Signature: java.security.Signature getInstance(java.lang.String)>/$stack10
<org.mockito.cglib.core.MethodWrapper: java.util.Set createSet(java.util.Collection)>/$stack6
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>/$stack14
<br.com.caelum.iogi.reflection.ClassConstructor: java.util.Collection notFulfilledBy(br.com.caelum.iogi.parameters.Parameters)>/$stack10
<org.mockito.cglib.proxy.DispatcherGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack9
<org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatMethodForMessage(java.lang.String,java.util.List)>/$stack8
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack8
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/$stack19
<com.google.inject.internal.util.$ImmutableMap$Builder: com.google.inject.internal.util.$ImmutableMap fromEntryList(java.util.List)>/$stack5
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack65
<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>/$stack16
<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>/$stack28
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack20
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack29
<br.com.caelum.iogi.reflection.NewObject$Setter: java.util.Collection settersIn(java.lang.Object)>/$stack12
<br.com.caelum.iogi.reflection.NewObject$Setter: java.util.Collection settersIn(java.lang.Object)>/$stack16
<java.lang.invoke.LambdaForm: java.lang.String basicTypeSignature(java.lang.invoke.MethodType)>/$stack19
<br.com.caelum.vraptor.http.route.Rules: void <init>(br.com.caelum.vraptor.http.route.Router)>/$stack8
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/$stack43
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack41
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack25
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack50
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>/$stack13
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack32
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack56
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack83
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack41
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack51
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack21
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack36
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack46
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack56
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack41
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack26
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack31
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack36
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack39
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack59
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack75
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack85
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack100
<javassist.util.proxy.ProxyFactory: void computeSignature(javassist.util.proxy.MethodFilter)>/$stack14
<javassist.util.proxy.ProxyFactory: void computeSignature(javassist.util.proxy.MethodFilter)>/$stack13
<javassist.util.proxy.ProxyFactory: int overrideMethods(javassist.bytecode.ClassFile,javassist.bytecode.ConstPool,java.lang.String)>/$stack17
<javassist.util.proxy.ProxyFactory: int overrideMethods(javassist.bytecode.ClassFile,javassist.bytecode.ConstPool,java.lang.String)>/$stack18
<javassist.util.proxy.ProxyFactory: int overrideMethods(javassist.bytecode.ClassFile,javassist.bytecode.ConstPool,java.lang.String)>/$stack16
<javassist.util.proxy.ProxyFactory: boolean makeUniqueName0(java.lang.String,java.util.Iterator)>/$stack6
<javassist.util.proxy.ProxyFactory: boolean makeUniqueName0(java.lang.String,java.util.Iterator)>/$stack5
<br.com.caelum.iogi.parameters.Parameters: com.google.common.collect.ListMultimap groupByFirstNameComponent(java.util.List)>/$stack9
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameter namedAfter(br.com.caelum.iogi.reflection.Target)>/$stack8
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameters focusedOn(br.com.caelum.iogi.reflection.Target)>/$stack12
<org.springframework.expression.common.ExpressionUtils: int toInt(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: boolean toBoolean(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: double toDouble(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: long toLong(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: char toChar(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: short toShort(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: float toFloat(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: byte toByte(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack7
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack11
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack4
<org.springframework.expression.common.TemplateAwareExpressionParser: int skipToCorrectEndSuffix(java.lang.String,java.lang.String,java.lang.String,int)>/$stack18
<org.springframework.expression.common.TemplateAwareExpressionParser: int skipToCorrectEndSuffix(java.lang.String,java.lang.String,java.lang.String,int)>/$stack58
<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>/$stack35
<java.util.logging.Logger: void removeChildLogger(java.util.logging.LogManager$LoggerWeakRef)>/$stack11
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/$stack8
<sun.security.provider.PolicyFile: boolean init(java.net.URL,sun.security.provider.PolicyFile$PolicyInfo)>/$stack25
<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/$stack23
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>/$stack17
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchCandidates(java.util.List,java.lang.reflect.Method)>/$stack12
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchCandidates(java.util.List,java.lang.reflect.Method)>/$stack20
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/rawType#_186
<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/$stack15
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/$stack31
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/$stack33
<sun.security.provider.PolicyFile: void addPerms(java.security.Permissions,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>/$stack9
<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>/$stack141
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/entry#_66
<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])>/$stack33
<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>/$stack13
<br.com.caelum.iogi.reflection.Target$Primitives: java.lang.Object primitiveCast(java.lang.Object,java.lang.Class)>/$stack3
<br.com.caelum.iogi.collections.ParametersByIndex: com.google.common.collect.ListMultimap groupByIndex(br.com.caelum.iogi.parameters.Parameters,br.com.caelum.iogi.reflection.Target)>/$stack18
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/$stack19
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/$stack27
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/$stack60
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.ConstructorExecutor findExecutorForConstructor(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/$stack19
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createArray(org.springframework.expression.spel.ExpressionState)>/intendedArrayType#_222
<com.thoughtworks.xstream.io.path.Path: com.thoughtworks.xstream.io.path.Path apply(com.thoughtworks.xstream.io.path.Path)>/$stack13
<java.util.Hashtable: void putAll(java.util.Map)>/$stack7
<org.springframework.expression.spel.ast.TypeReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o_$$A_1#_79
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o_$$A_4#_118
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack100
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.String,int,java.util.Map)>/$stack14
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.String,int,java.util.Map)>/$stack18
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack7
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack11
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack4
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.support.GenericConversionService$MatchableConverters getMatchableConverters(java.lang.Class,java.lang.Class)>/$stack6
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/$stack21
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/$stack56
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/$stack78
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)>/$stack13
<sun.util.locale.LanguageTag: sun.util.locale.LanguageTag parseLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/$stack50
<ognl.OgnlParser: void jj_add_error_token(int,int)>/$stack17
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/$stack26
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerComponents(java.util.Collection)>/$stack6
<org.springframework.aop.config.AopConfigUtils: int findPriorityForClass(java.lang.String)>/$stack6
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void <init>(java.util.List)>/$stack16
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void <init>(java.util.List)>/$stack21
<java.io.FileDescriptor: void closeAll(java.io.Closeable)>/$stack18
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>/$stack33
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getNextLoader(int[],int)>/$stack9
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>/$stack25
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>/$stack12
<javassist.CtClassType: void makeFieldCache(javassist.CtMember$Cache)>/$stack10
<javassist.CtClassType: void makeBehaviorCache(javassist.CtMember$Cache)>/$stack10
<javassist.CtClassType: void modifyConstructors(javassist.bytecode.ClassFile)>/$stack15
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>/$stack22
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_52
<org.scannotation.AnnotationDB: void scanClass(javassist.bytecode.ClassFile)>/$stack6
<org.scannotation.AnnotationDB: void scanClass(javassist.bytecode.ClassFile)>/$stack7
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/obj#_353
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/$stack19
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/$stack20
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/$stack32
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/$stack33
<org.scannotation.AnnotationDB: void scanFields(javassist.bytecode.ClassFile)>/obj#_391
<org.scannotation.AnnotationDB: void scanFields(javassist.bytecode.ClassFile)>/$stack12
<org.scannotation.AnnotationDB: void scanFields(javassist.bytecode.ClassFile)>/$stack13
<sun.font.AttributeValues: sun.font.AttributeValues merge(java.util.Map,int)>/$stack12
<sun.font.AttributeValues: sun.font.AttributeValues merge(java.util.Map,int)>/$stack13
<br.com.caelum.iogi.collections.IndexedListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack17
<org.mockito.cglib.proxy.Enhancer: void emitConstructors(org.mockito.cglib.core.ClassEmitter,java.util.List)>/$stack13
<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>/$stack76
<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>/$stack40
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByName(java.lang.String)>/$stack4
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByValue(int)>/$stack5
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>/$stack14
<com.google.common.base.Predicates$InPredicate: void <init>(java.util.Collection)>/$stack2
<org.mockito.cglib.proxy.LazyLoaderGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack30
<com.google.common.collect.ByFunctionOrdering: void <init>(com.google.common.base.Function,com.google.common.collect.Ordering)>/$stack3
<com.google.common.collect.ByFunctionOrdering: void <init>(com.google.common.base.Function,com.google.common.collect.Ordering)>/$stack5
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroyBean(java.lang.String,org.springframework.beans.factory.DisposableBean)>/$stack28
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroyBean(java.lang.String,org.springframework.beans.factory.DisposableBean)>/$stack40
<com.google.gson.internal.Excluder: boolean excludeField(java.lang.reflect.Field,boolean)>/$stack22
<com.google.gson.internal.Excluder: boolean excludeClass(java.lang.Class,boolean)>/$stack12
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/$stack20
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/$stack53
<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap fromEntryList(java.util.List)>/$stack5
<javax.crypto.JceSecurity: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>/$stack17
<sun.security.util.ManifestEntryVerifier: void update(byte)>/$stack7
<sun.security.util.ManifestEntryVerifier: void update(byte[],int,int)>/$stack9
<sun.security.util.ManifestEntryVerifier: java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable)>/$stack23
<sun.security.util.ManifestEntryVerifier: java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable)>/$stack21
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,java.lang.String)>/$stack3
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,java.lang.String)>/$stack5
<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack13
<javax.crypto.CryptoPermissionCollection: boolean implies(java.security.Permission)>/$stack9
<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.Class findType(java.lang.String)>/$stack9
<br.com.caelum.vraptor.serialization.I18nMessageSerialization: void as(java.lang.Class)>/$stack4
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>/$stack8
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)>/$stack8
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Field reflectField(java.lang.String)>/$stack7
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Method reflectMethod(java.lang.String,java.lang.Class[])>/$stack12
<org.joda.time.format.DateTimeFormatterBuilder$TextField: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)>/$stack21
<sun.util.locale.provider.LocaleServiceProviderPool: void <init>(java.lang.Class)>/$stack11
<br.com.caelum.vraptor.http.route.DefaultParametersControl: java.lang.String fillUri(java.lang.String[],java.lang.Object[])>/$stack19
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>/$stack19
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>/$stack25
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>/$stack19
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void fillIntoRequest(java.lang.String,br.com.caelum.vraptor.http.MutableRequest)>/$stack13
<org.springframework.expression.spel.ast.OperatorMatches: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_52
<org.springframework.expression.spel.ast.OperatorMatches: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_53
<org.mockito.asm.util.AbstractVisitor: void printList(java.io.PrintWriter,java.util.List)>/o#_185
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/$stack15
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/$stack20
<ognl.OgnlRuntime: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/$stack18
<javassist.compiler.CodeGen: void patchGoto(java.util.ArrayList,int)>/$stack7
<ognl.OgnlRuntime: java.lang.reflect.Method getGetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/$stack12
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/$stack12
<ognl.OgnlRuntime: boolean indexMethodCheck(java.util.List)>/$stack13
<ognl.OgnlRuntime: boolean indexMethodCheck(java.util.List)>/$stack18
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack27
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack28
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack54
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack23
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack21
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack36
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseExclude(java.util.Map$Entry)>/$stack5
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseExclude(java.util.Map$Entry)>/$stack3
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseInclude(com.google.common.collect.Multimap,java.util.Map$Entry)>/$stack9
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseInclude(com.google.common.collect.Multimap,java.util.Map$Entry)>/$stack8
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void excludeNonPrimitiveFields(com.google.common.collect.Multimap,java.lang.Class)>/$stack11
<ognl.OgnlRuntime: java.lang.reflect.Method findClosestMatchingMethod(java.lang.Class,java.lang.reflect.Method,java.lang.String,java.lang.Class,boolean)>/$stack10
<com.google.common.base.Joiner$MapJoiner: void <init>(com.google.common.base.Joiner,java.lang.String)>/$stack3
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void startNode(java.lang.String,java.lang.Class)>/$stack6
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void setValue(java.lang.String)>/$stack4
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void handleCheckedStateTransition(int,java.lang.String,java.lang.String)>/$stack7
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack14
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack236
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/$stack22
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/$stack33
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverterFromItemType(java.lang.Class)>/converter#_74
<com.google.gson.internal.bind.JsonTreeWriter: void put(com.google.gson.JsonElement)>/$stack11
<com.google.gson.internal.bind.JsonTreeWriter: void put(com.google.gson.JsonElement)>/object#6#_85
<javassist.bytecode.ExceptionTable: int startPc(int)>/$stack4
<javassist.bytecode.ExceptionTable: int endPc(int)>/$stack4
<javassist.bytecode.ExceptionTable: int handlerPc(int)>/$stack4
<javassist.bytecode.ExceptionTable: int catchType(int)>/$stack4
<javassist.bytecode.ExceptionTable: void add(int,javassist.bytecode.ExceptionTable,int)>/$stack8
<javassist.bytecode.ExceptionTable: javassist.bytecode.ExceptionTable copy(javassist.bytecode.ConstPool,java.util.Map)>/$stack12
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>/$stack7
<javassist.bytecode.ExceptionTable: void shiftPc(int,int,boolean)>/$stack9
<javassist.bytecode.ExceptionTable: void write(java.io.DataOutputStream)>/$stack7
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue mergeIfRequired(org.springframework.beans.PropertyValue,org.springframework.beans.PropertyValue)>/value#_217
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)>/$stack7
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack8
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack14
<javassist.bytecode.ClassFile: void testExistingField(java.lang.String,java.lang.String)>/$stack8
<javassist.bytecode.ClassFile: javassist.bytecode.MethodInfo getMethod(java.lang.String)>/$stack7
<javassist.bytecode.ClassFile: void testExistingMethod(javassist.bytecode.MethodInfo)>/$stack10
<javassist.bytecode.ClassFile: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>/$stack7
<javassist.bytecode.ClassFile: void write(java.io.DataOutputStream)>/$stack22
<javassist.bytecode.ClassFile: void write(java.io.DataOutputStream)>/$stack19
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest$1: boolean matchesSafely(br.com.caelum.vraptor.restfulie.relation.RelationBuilder)>/$stack6
<com.google.common.collect.Collections2: java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate)>/$stack4
<com.google.common.collect.Collections2: java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate)>/$stack6
<sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>/$stack25
<java.util.ResourceBundle: java.util.ResourceBundle$Control getDefaultControl(java.lang.String)>/$stack9
<java.util.ResourceBundle: java.util.ResourceBundle findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle)>/$stack14
<java.util.ResourceBundle: java.util.ResourceBundle loadBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.ResourceBundle$Control,boolean)>/$stack12
<java.awt.Font: java.awt.Font getFont(java.util.Map)>/$stack5
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractType(org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class,int,int,int)>/$stack19
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/$stack53
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.MethodExecutor findAccessorForMethod(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/$stack27
<com.google.common.base.Predicates$OrPredicate: boolean apply(java.lang.Object)>/$stack6
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack15
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack21
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/componentKey#_48
<ognl.JJTOgnlParserState: void clearNodeScope(ognl.Node)>/$stack8
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,int)>/$stack8
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,boolean)>/$stack9
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,boolean)>/$stack17
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack25
<org.springframework.expression.common.CompositeStringExpression: java.lang.String getValue(org.springframework.expression.EvaluationContext)>/$stack10
<org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)>/$stack28
<org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)>/$stack62
<com.thoughtworks.xstream.core.util.OrderRetainingMap: void putAll(java.util.Map)>/$stack7
<org.mockito.cglib.core.EmitUtils: void stringSwitchHelper(org.mockito.cglib.core.CodeEmitter,java.util.List,org.mockito.cglib.core.ObjectSwitchCallback,org.mockito.asm.Label,org.mockito.asm.Label,int)>/$stack8
<org.mockito.cglib.core.EmitUtils: void member_helper_type(org.mockito.cglib.core.CodeEmitter,java.util.List,org.mockito.cglib.core.ObjectSwitchCallback,org.mockito.cglib.core.EmitUtils$ParameterTyper,org.mockito.asm.Label,org.mockito.asm.Label,java.util.BitSet)>/$stack14
<org.mockito.cglib.core.EmitUtils: void member_helper_type(org.mockito.cglib.core.CodeEmitter,java.util.List,org.mockito.cglib.core.ObjectSwitchCallback,org.mockito.cglib.core.EmitUtils$ParameterTyper,org.mockito.asm.Label,org.mockito.asm.Label,java.util.BitSet)>/$stack38
<javassist.bytecode.stackmap.TypeData$TypeName: void merge(javassist.bytecode.stackmap.TypeData)>/$stack10
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/$stack11
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/$stack16
<javassist.bytecode.stackmap.TypeData$TypeName: java.lang.String evalExpectedType2(java.util.ArrayList,int)>/$stack6
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: boolean isSerializable(java.lang.Class)>/$stack13
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack20
<org.picocontainer.PicoBuilder: org.picocontainer.ComponentFactory buildComponentFactory(org.picocontainer.DefaultPicoContainer,org.picocontainer.ComponentFactory,java.util.Stack)>/$stack11
<com.thoughtworks.xstream.mapper.SecurityMapper: java.lang.Class realClass(java.lang.String)>/$stack10
<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/rightValue#_51
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void start(javax.servlet.ServletContext)>/$stack29
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerAll(br.com.caelum.vraptor.ComponentRegistry,java.util.Map)>/$stack9
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerAll(br.com.caelum.vraptor.ComponentRegistry,java.util.Map)>/$stack11
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerAll(br.com.caelum.vraptor.ComponentRegistry,java.util.Map)>/$stack13
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerAll(br.com.caelum.vraptor.ComponentRegistry,java.util.Map)>/$stack15
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/$stack23
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/$stack26
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/$stack34
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack8
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack10
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack14
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack12
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack6
<org.mockito.cglib.proxy.InvocationHandlerGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack11
<org.mockito.cglib.proxy.InvocationHandlerGenerator: void generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack8
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/$stack28
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException tooManyMatchingAdaptersFound(java.lang.Class,java.util.List)>/$stack8
<org.picocontainer.parameters.BasicComponentParameter: void removeExcludedAdapterIfApplicable(java.lang.Object,java.util.List)>/$stack9
<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] basicTypes(java.util.List)>/$stack5
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/$stack9
<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)>/$stack15
<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/$stack17
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>/$stack9
<org.springframework.expression.spel.ast.Elvis: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean isMatched(java.lang.Object)>/$stack5
<com.google.common.base.Joiner: void <init>(java.lang.String)>/$stack2
<org.springframework.context.support.DefaultLifecycleProcessor: void startBeans(boolean)>/$stack44
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void registerDestroyListener(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/$stack4
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(javax.servlet.http.HttpSession)>/$stack9
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/$stack21
<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/$stack37
<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/$stack58
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/beanInstance#_367
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/$stack20
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/beanInstance#_455
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/beanInstance#_525
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry$AttributeSetterComponentMonitor: void instantiated(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Object,java.lang.Object[],long)>/object#_75
<org.mockito.cglib.proxy.NoOpGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack9
<javassist.util.proxy.ProxyFactory$2: int compare(java.lang.Object,java.lang.Object)>/$stack7
<javassist.util.proxy.ProxyFactory$2: int compare(java.lang.Object,java.lang.Object)>/$stack8
<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>/$stack62
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack8
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String)>/$stack27
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguageTag(sun.util.locale.LanguageTag)>/$stack19
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguageTag(sun.util.locale.LanguageTag)>/$stack28
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguageTag(sun.util.locale.LanguageTag)>/$stack40
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/$stack50
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/$stack62
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/$stack30
<org.apache.log4j.Hierarchy: void fireAddAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)>/$stack10
<org.apache.log4j.Hierarchy: void fireRemoveAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)>/$stack10
<org.springframework.expression.spel.ast.Ternary: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack5
<org.apache.log4j.Hierarchy: void updateChildren(org.apache.log4j.ProvisionNode,org.apache.log4j.Logger)>/$stack7
<org.springframework.beans.AbstractPropertyAccessor: void setPropertyValues(org.springframework.beans.PropertyValues,boolean,boolean)>/$stack14
<javassist.bytecode.AttributeInfo: int getLength(java.util.ArrayList)>/$stack6
<javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo lookup(java.util.ArrayList,java.lang.String)>/$stack6
<javassist.bytecode.AttributeInfo: void remove(java.util.ArrayList,java.lang.String)>/$stack6
<javassist.bytecode.AttributeInfo: void writeAll(java.util.ArrayList,java.io.DataOutputStream)>/$stack6
<javassist.bytecode.AttributeInfo: java.util.ArrayList copyAll(java.util.ArrayList,javassist.bytecode.ConstPool)>/$stack8
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeIndexedArgumentValue(java.lang.Integer,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack14
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack18
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack168
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack32
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)>/$stack23
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack19
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Map scanBasePackages(java.util.List,br.com.caelum.vraptor.scan.ClasspathResolver)>/$stack10
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void addBasePackagesStereotypes(java.util.Map,java.util.List,java.util.HashSet)>/$stack14
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: boolean packagesContains(java.util.List,java.lang.String)>/$stack7
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void findComponentsFromBasePackages(java.util.Map,java.util.List,java.util.Set)>/$stack20
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Set nullToEmpty(java.util.Set)>/$stack3
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack8
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack14
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermissions getMinimum(javax.crypto.CryptoPermissions)>/$stack25
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermissions getMinimum(javax.crypto.CryptoPermissions)>/$stack56
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)>/$stack12
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)>/$stack16
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>/$stack10
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>/$stack13
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>/$stack30
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>/$stack78
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)>/$stack7
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>/$stack34
<com.google.common.base.Predicates$NotPredicate: void <init>(com.google.common.base.Predicate)>/$stack2
<org.hamcrest.core.AllOf: boolean matches(java.lang.Object,org.hamcrest.Description)>/$stack8
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)>/$stack15
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/$stack8
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForCollectionInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForListInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateLinkedListForQueueInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateHashSetListForSetInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateTreeSetListForSortedSetInterface()>/$stack10
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack21
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack27
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack33
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack16
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack11
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack15
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack12
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldPutParametersOnFlashScopeOnRedirect()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotPutParametersOnFlashScopeOnRedirectIfThereAreNoParameters()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack19
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsNotAnnotatedWithHttpMethods()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsAnnotatedWithHttpGetMethod()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void cannotRedirectWhenLogicMethodIsAnnotatedWithAnyHttpMethodButGet()>/$stack8
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack39
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack22
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack22
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack35
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack38
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack35
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack38
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack32
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack36
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldAddAllowHeader()>/$stack7
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldSendErrorMethodNotAllowed()>/$stack7
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldNotSendMethodNotAllowedIfTheRequestMethodIsOptions()>/$stack12
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack4
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack7
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack11
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack13
<java.util.logging.LogManager: void reset()>/$stack12
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandlerTest: void shouldRegisterInterceptorsOnRegistry()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void twoClassesWithSameNameButDifferentPackages()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void twoClassesWithSameNameButDifferentPackages()>/$stack6
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack52
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack18
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatusWhenMovingToLogic()>/$stack10
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendError()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack5
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack12
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendErrorWithMessage()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack5
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack13
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSetStatusCode()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/$stack9
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteStringBody()>/$stack5
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteInputStreamBody()>/$stack6
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteReaderBody()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldNotCallDeserializerIfItDoesntAcceptGivenContentType()>/$stack7
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentType()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfVendorized()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfAtomizedAlike()>/$stack6
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack28
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack27
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void shouldRegisterTypesOnDeserializers()>/$stack3
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldInstantiateAListOfStrings()>/$stack6
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack10
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack15
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack16
<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>/$stack15
<org.springframework.beans.factory.support.DisposableBeanAdapter$1: java.lang.Object run()>/$stack2
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithoutAlias()>/$stack5
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithAlias()>/$stack5
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithoutAlias()>/$stack10
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithAlias()>/$stack6
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void preInstantiateSingletons()>/$stack13
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void preInstantiateSingletons()>/$stack24
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack5
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack4
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfServletExceptionOccurs()>/$stack4
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack17
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack16
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotCrashWhenSessionIsInvalid()>/$stack12
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack16
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack19
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack23
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack25
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack14
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack22
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack18
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack29
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack32
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack35
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack38
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack31
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack34
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack37
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack37
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack40
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack43
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack46
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack49
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack52
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack22
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack16
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowMethodExceptionIfThereIsAnInvocationException()>/$stack13
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack25
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack22
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack19
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUseGuiceAs1stAlternative()>/$stack10
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUseGuiceAs1stAlternative()>/$stack17
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUsePicoAs2ndAlternative()>/$stack10
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUsePicoAs2ndAlternative()>/$stack17
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUsePicoAs2ndAlternative()>/$stack24
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldThrowIllegalArgumentExceptionWhenProvidersWasNotFound()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldRedirectIncludingContext()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileRedirect()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack10
<br.com.caelum.vraptor.validator.MethodValidatorTest: void setup()>/$stack10
<br.com.caelum.vraptor.validator.MethodValidatorTest: void setup()>/$stack18
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithConstraint()>/$stack27
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldUseDefaultLocale()>/$stack22
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldUseDefaultLocale()>/$stack28
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPage()>/$stack12
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void shouldSend404IfNothingIsRendered()>/$stack11
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPageWithAlias()>/$stack13
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack17
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack20
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack29
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack33
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack38
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack42
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack29
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack33
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack38
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack42
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack30
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack34
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack39
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack43
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack17
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack25
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack28
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack40
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack46
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack22
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack56
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack64
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack9
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack14
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack33
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack22
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack29
<com.google.gson.internal.bind.JsonTreeReader: void beginArray()>/$stack3
<com.google.gson.internal.bind.JsonTreeReader: void beginObject()>/$stack3
<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>/o#_91
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>/$stack9
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>/$stack4
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>/$stack5
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextString()>/$stack4
<com.google.gson.internal.bind.JsonTreeReader: boolean nextBoolean()>/$stack2
<com.google.gson.internal.bind.JsonTreeReader: double nextDouble()>/$stack6
<com.google.gson.internal.bind.JsonTreeReader: long nextLong()>/$stack6
<com.google.gson.internal.bind.JsonTreeReader: int nextInt()>/$stack5
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/$stack11
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/$stack4
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/$stack5
<sun.security.util.DerIndefLenConverter: void parseTag()>/l2_$$A_2#_102
<sun.security.util.DerIndefLenConverter: void writeLengthAndValue()>/$stack28
<javassist.CtClassType: javassist.CtClass getDeclaringClass()>/$stack17
<javassist.CtClassType: javassist.CtClass getDeclaringClass()>/$stack9
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack6
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack8
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack39
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack19
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack39
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack13
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack59
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack65
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack51
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack55
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack14
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack20
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeEndElement()>/$stack4
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack7
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack16
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack7
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack16
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack21
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack25
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack23
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack27
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack8
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack12
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack19
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack9
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack15
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetNotFoundStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetHeader()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetOkStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetConflictStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetAcceptedStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack9
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack24
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack27
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack11
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack16
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack14
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack11
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldSetBundleOnI18nMessagesLazily()>/$stack15
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldOnlySetBundleOnI18nMessagesThatHasNotBeenSetBefore()>/$stack10
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack7
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack11
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack19
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack13
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack17
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack20
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack12
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack21
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack27
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack22
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldIncludeExtractedNameWhenSimplyIncluding()>/$stack10
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldNotIncludeTheAttributeWhenTheValueIsNull()>/$stack5
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack9
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack12
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldThrowExceptionWhenAnUnsupportedEncodingExceptionOccurs()>/$stack4
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack39
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack17
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack8
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack11
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack20
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack11
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldScanAndRegisterAnnotatedBeans()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldSupportOtherStereotypeAnnotations()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldSupportConstructorInjection()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldProvideCurrentHttpRequest()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldProvideCurrentVRaptorRequest()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldProvideServletContext()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldProvideTheContainer()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldSupportManualRegistration()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shoudSupportCustomImplementationsForAlreadyRegisteredComponents()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shoudRegisterResourcesInRouter()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shoudRegisterConvertersInConverters()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shoudRegisterInterceptorsInInterceptorRegistry()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack9
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack14
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsCacheableAddMaxAge()>/$stack5
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack15
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack18
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack5
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack8
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withRootException()>/$stack8
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withNestedException()>/$stack9
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldConfigureAllClasses()>/$stack10
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldNotDoAnythingIfHasNoClasses()>/$stack7
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack3
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack6
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack3
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack6
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack9
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack12
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack15
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack18
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack21
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack24
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack27
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack30
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void doesNothingIfResultWasAlreadyUsed()>/$stack10
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack14
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shoudThrowProxyInvocationExceptionIfAndExceptionOccursWhenUsingResultOf()>/$stack4
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack5
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack24
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack29
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack29
<com.google.common.collect.GenericMapMaker: com.google.common.collect.MapMaker$RemovalListener getRemovalListener()>/$stack3
<br.com.caelum.vraptor.validator.ValidationsTest: void shouldUseTheConstructorResourceBundle()>/$stack7
<br.com.caelum.vraptor.validator.ValidationsTest: void shouldUseTheConstructorResourceBundleFirst()>/$stack9
<br.com.caelum.vraptor.validator.ValidationsTest: void shouldFallbackToGivenResourceBundle()>/$stack9
<br.com.caelum.vraptor.validator.ValidationsTest: void shouldFallbackToDefaultMessage()>/$stack9
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeParametersUsingConstructorBundle()>/$stack7
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeParametersUsingGivenBundle()>/$stack7
<br.com.caelum.vraptor.validator.ValidationsTest: void formatsParameterizedValidationMessagesWhenUsingMatchers()>/$stack14
<br.com.caelum.vraptor.validator.ValidationsTest: void formatsParameterizedValidationMessagesWithSeveralParametersI18ningStringParameters()>/$stack23
<br.com.caelum.vraptor.validator.ValidationsTest: void formatsParameterizedValidationMessagesWithI18nedStringParameters()>/$stack22
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeTheCategoryParameterUsingGivenBundle()>/$stack6
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeTheCategoryParameterUsingMatchersWithReasonGivenBundle()>/$stack6
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeTheCategoryParameterUsingMatchersWithoutReasonGivenBundle()>/$stack6
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack18
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack13
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void outjectsTheRequestParameters()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void addsTheErrorsOnTheResult()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack14
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldNotRedirectIfHasNotErrors()>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack19
<br.com.caelum.vraptor.serialization.PackageComparatorTest: void shouldSortBasedOnPackageNamesLessPriorityToCaelumInitialList3rdPartyFirst()>/$stack15
<br.com.caelum.vraptor.serialization.PackageComparatorTest: void shouldSortBasedOnPackageNamesLessPriorityToCaelumInitialList3rdPartyLast()>/$stack15
<br.com.caelum.vraptor.serialization.PackageComparatorTest: void shouldSortBasedOnPackageNamesLessPriorityToCaelumMoreToRestfulieInitialList3rdPartyLast()>/$stack15
<br.com.caelum.vraptor.serialization.PackageComparatorTest: void shouldSortBasedOnPackageNamesLessPriorityToCaelumMoreToRestfulieInitialList3rdPartyLast()>/$stack21
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldSetRequestAttribute()>/$stack4
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/$stack21
<org.apache.log4j.helpers.AppenderAttachableImpl: void removeAllAppenders()>/$stack9
<br.com.caelum.vraptor.ioc.spring.ComponentFactoryBean: java.lang.Object getObject()>/$stack3
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withAnyArgs()>/$stack15
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withAnyArgs()>/$stack33
<javassist.bytecode.FieldInfo: int getConstantValue()>/$stack4
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack6
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack12
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack17
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()>/$stack12
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getNodeName()>/$stack2
<ognl.ObjectArrayPool$SizePool: java.lang.Object[] create()>/$stack9
<javax.crypto.PermissionsEnumerator: java.security.Permission nextElement()>/$stack4
<java.util.logging.LogManager: void setLevelsOnExistingLoggers()>/$stack21
<br.com.caelum.vraptor.serialization.xstream.Serializee: void excludeAll()>/$stack21
<java.util.AbstractMap: int hashCode()>/$stack6
<java.util.AbstractMap: java.lang.String toString()>/$stack11
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getResourceBundleBased()>/$stack6
<java.beans.FeatureDescriptor: java.lang.String toString()>/$stack33
<br.com.caelum.iogi.reflection.NewObject: void populateProperties()>/$stack7
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback popCallback()>/$stack2
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback peekCallback()>/$stack2
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: com.google.gson.Gson getGson()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.String getRequestCharset()>/$stack4
<com.google.common.collect.Iterators$5: boolean hasNext()>/$stack3
<org.picocontainer.DefaultPicoContainer: void startAdapters()>/$stack12
<org.picocontainer.DefaultPicoContainer: void startAdapters()>/$stack14
<org.picocontainer.DefaultPicoContainer: void stopAdapters()>/$stack7
<org.picocontainer.DefaultPicoContainer: void disposeAdapters()>/$stack7
<java.security.Signature$Delegate: void chooseFirstProvider()>/$stack13
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPrimaryExpression()>/$stack15
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPrimaryExpression()>/$stack23
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPossiblyQualifiedId()>/$stack25
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl pop()>/$stack2
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.Token nextToken()>/$stack6
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.Token peekToken()>/$stack5
<javassist.bytecode.MethodInfo: javassist.bytecode.ExceptionsAttribute getExceptionsAttribute()>/info#_323
<javassist.bytecode.MethodInfo: javassist.bytecode.CodeAttribute getCodeAttribute()>/info#_334
<org.springframework.beans.factory.support.DisposableBeanAdapter: void destroy()>/$stack30
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack16
<org.springframework.context.support.AbstractApplicationContext: void initApplicationEventMulticaster()>/$stack14
<org.springframework.context.support.AbstractApplicationContext: void initLifecycleProcessor()>/$stack15
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.ListMultimap delegate()>/$stack1
<java.util.ServiceLoader$LazyIterator: boolean hasNextService()>/$stack17
<com.thoughtworks.xstream.core.util.PresortedMap: java.util.Set keySet()>/$stack8
<org.mockito.internal.progress.ArgumentMatcherStorageImpl: void validateState()>/$stack5
<javax.servlet.http.HttpServletResponseWrapper: javax.servlet.http.HttpServletResponse _getHttpServletResponse()>/$stack1
<sun.reflect.Label: void bind()>/$stack8
<br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder: com.google.gson.Gson create()>/$stack15
<java.beans.MethodDescriptor: java.lang.Class[] getParams()>/$stack10
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>/$stack6
<br.com.caelum.iogi.reflection.ClassConstructor: java.util.List argumentTargets()>/$stack18
<br.com.caelum.iogi.reflection.ClassConstructor: java.util.List argumentTargets()>/$stack16
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup: void start()>/$stack12
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup: void stop()>/$stack19
<com.google.gson.JsonArray: java.lang.String getAsString()>/$stack5
<com.google.gson.JsonArray: long getAsLong()>/$stack5
<sun.util.locale.provider.LocaleResources: java.lang.String[][] getZoneStrings()>/$stack27
<sun.util.locale.provider.LocaleResources: java.lang.String[][] getZoneStrings()>/$stack34
<java.lang.invoke.LambdaForm: void computeInitialPreparedForms()>/$stack9
<org.apache.log4j.Category: void closeNestedAppenders()>/$stack5
<org.apache.log4j.Category: void removeAllAppenders()>/$stack10
<java.util.logging.Logger: void updateEffectiveLevel()>/$stack14
<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback popCallback()>/$stack2
<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback peekCallback()>/$stack2
<org.slf4j.LoggerFactory: void emitSubstituteLoggerWarning()>/$stack7
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Class getRequiredType()>/$stack2
<ognl.OgnlParser: ognl.ParseException generateParseException()>/$stack14
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerPrototypeScopedComponentsOn()>/$stack7
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerCachedComponentsOn()>/$stack7
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpServletRequest _getHttpServletRequest()>/$stack1
<sun.misc.URLClassPath: java.util.List closeLoaders()>/$stack10
<java.lang.invoke.LambdaFormBuffer: void clearDuplicatesAndNulls()>/$stack35
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void endNode()>/$stack8
<com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>/$stack13
<java.security.SecureRandom: java.lang.String getPrngAlgorithm()>/$stack13
<br.com.caelum.iogi.parameters.Parameter: java.lang.String getFirstNameComponentWithDecoration()>/$stack2
<br.com.caelum.vraptor.validator.Validations: java.util.List getErrors()>/$stack7
<javax.validation.Validation$GenericBootstrapImpl: javax.validation.Configuration configure()>/$stack9
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void endNode()>/$stack8
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement peek()>/$stack5
<javassist.bytecode.ClassFile: void compact()>/$stack11
<javassist.bytecode.ClassFile: void compact()>/$stack14
<javassist.bytecode.ClassFile: void prune()>/$stack17
<javassist.bytecode.ClassFile: void prune()>/$stack20
<javassist.bytecode.ClassFile: int getInnerAccessFlags()>/$stack5
<java.security.PermissionCollection: java.lang.String toString()>/$stack16
<sun.security.provider.PolicyFile$PolicyEntry: java.lang.String toString()>/$stack18
<ognl.JJTOgnlParserState: ognl.Node rootNode()>/$stack2
<ognl.JJTOgnlParserState: ognl.Node popNode()>/$stack14
<ognl.JJTOgnlParserState: ognl.Node popNode()>/$stack8
<org.picocontainer.PicoBuilder: org.picocontainer.MutablePicoContainer build()>/$stack52
<org.picocontainer.PicoBuilder: org.picocontainer.MutablePicoContainer build()>/$stack32
<java.lang.invoke.LambdaForm$NamedFunction: void initializeInvokers()>/$stack11
<org.springframework.expression.spel.ast.InlineList: java.util.List getConstantValue()>/$stack2
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerCacheComponents()>/$stack13
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerCacheComponents()>/$stack15
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean isFinished()>/$stack8
<org.springframework.context.support.DefaultLifecycleProcessor: void stopBeans()>/$stack35
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/$stack26
<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/$stack11
<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/$stack15
<java.beans.Introspector: void processPropertyDescriptors()>/$stack27
<java.beans.Introspector: void processPropertyDescriptors()>/$stack84
<java.beans.Introspector: void processPropertyDescriptors()>/$stack100
<java.security.PermissionsEnumerator: java.security.Permission nextElement()>/$stack4
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack26
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack31
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack41
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack47
<org.apache.log4j.Hierarchy: void resetConfiguration()>/$stack14
<org.apache.log4j.Hierarchy: void shutdown()>/$stack13
<org.apache.log4j.Hierarchy: void shutdown()>/$stack15
<org.scannotation.archiveiterator.FileIterator: java.io.InputStream next()>/$stack9
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/$stack21
<java.util.Locale: java.lang.String toLanguageTag()>/$stack44
<java.util.Locale: java.lang.String toLanguageTag()>/$stack49
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getKeyEquivalence()>/$stack4
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getValueEquivalence()>/$stack4
<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength()>/$stack3
<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getValueStrength()>/$stack3
<com.google.common.collect.MapMaker: com.google.common.base.Ticker getTicker()>/$stack3
<ognl.OgnlContext: java.lang.Class getCurrentType()>/$stack7
<ognl.OgnlContext: java.lang.Class getPreviousType()>/$stack9
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: org.joda.time.LocalDateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter1
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter3
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/@parameter0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.ClassReflectionProvider getClassReflectionProvider(java.lang.Class)>/@parameter0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.FieldReflectionProvider getFieldReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.FieldReflectionProvider getFieldReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter2
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.ConstructorReflectionProvider getConstructorReflectionProvider(java.lang.Class,java.lang.reflect.Constructor)>/@parameter0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.MethodReflectionProvider getMethodReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.MethodReflectionProvider getMethodReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter1
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.MethodReflectionProvider getMethodReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter2
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyProviderFactory: java.lang.Object createDependencyProvider(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>/@parameter1
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)>/@parameter3
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)>/@parameter5
<com.google.common.collect.LinkedListMultimap$2: boolean contains(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/@parameter1
<org.mockito.cglib.core.ReflectUtils: org.mockito.asm.Type[] getExceptionTypes(java.lang.reflect.Member)>/@parameter0
<org.mockito.cglib.core.ReflectUtils: org.mockito.cglib.core.Signature getSignature(java.lang.reflect.Member)>/@parameter0
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.String keyToString(com.google.gson.JsonElement)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver$3: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter2
<org.springframework.beans.factory.support.ConstructorResolver$3: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter3
<org.springframework.beans.factory.support.ConstructorResolver$3: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter4
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.basic.IntConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.IntConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$6: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$6: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.mockito.cglib.core.ReflectUtils: java.lang.Class defineClass(java.lang.String,byte[],java.lang.ClassLoader)>/@parameter0
<org.mockito.cglib.core.ReflectUtils: java.lang.Class defineClass(java.lang.String,byte[],java.lang.ClassLoader)>/@parameter2
<org.mockito.cglib.core.ReflectUtils: org.mockito.cglib.core.MethodInfo getMethodInfo(java.lang.reflect.Member,int)>/@parameter0
<org.mockito.cglib.core.ReflectUtils: org.mockito.cglib.core.MethodInfo getMethodInfo(java.lang.reflect.Member)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: void <init>(java.lang.Class)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: void push(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.route.PriorityRoutesList: java.util.Set getSetFor(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.http.route.PriorityRoutesList: boolean add(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.http.route.PriorityRoutesList: boolean add(java.lang.Object)>/@parameter0
<org.hamcrest.TypeSafeMatcher: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.TypeSafeMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider$1: void <init>(com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider,java.io.InputStream,java.lang.Class)>/@parameter2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$3: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/@parameter2
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport$2: void <init>(org.springframework.beans.factory.support.FactoryBeanRegistrySupport,org.springframework.beans.factory.FactoryBean)>/@parameter1
<org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.iogi.conversion.LongWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LongWrapperConverter: java.lang.Long convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LongWrapperConverter: java.lang.Long convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.LongWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LongWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: java.lang.Long convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: java.lang.Long convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/@parameter2
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/@parameter1
<com.thoughtworks.xstream.converters.extended.LocaleConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.LocaleConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.joda.time.field.BaseDurationField: int compareTo(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.extended.LocaleConverter: int[] underscorePositions(java.lang.String)>/@parameter0
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String attributeForAlias(java.lang.String)>/@parameter0
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/@parameter1
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTProperty: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTProperty: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTProperty: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.mapper.DefaultMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<org.mockito.cglib.core.EmitUtils$12: void processCase(java.lang.Object,org.mockito.asm.Label)>/@parameter0
<org.picocontainer.injectors.MethodInjection$MethodInjectionByName: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.MethodInjection$MethodInjectionByName: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/@parameter0
<org.springframework.core.convert.support.PropertyTypeDescriptor: void <init>(java.beans.PropertyDescriptor,org.springframework.core.MethodParameter,java.lang.Class)>/@parameter2
<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>/@parameter0
<org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.PropertyTypeDescriptor: org.springframework.core.convert.TypeDescriptor forElementType(java.lang.Class)>/@parameter0
<com.google.gson.JsonObject: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.Class,java.lang.String,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.config.BasicConfiguration: void <init>(javax.servlet.ServletContext)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object callWriteReplace(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: boolean supportsReadObject(java.lang.Class,boolean)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: void callReadObject(java.lang.Class,java.lang.Object,java.io.ObjectInputStream)>/@parameter0
<org.hamcrest.core.IsSame: void <init>(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: boolean supportsWriteObject(java.lang.Class,boolean)>/@parameter0
<org.hamcrest.core.IsSame: boolean matches(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream)>/@parameter1
<org.hamcrest.core.IsSame: org.hamcrest.Matcher sameInstance(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/@parameter0
<com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/@parameter1
<org.mockito.internal.matchers.InstanceOf: boolean matches(java.lang.Object)>/@parameter0
<ognl.ASTGreaterEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultRouter: void <init>(br.com.caelum.vraptor.http.route.RoutesConfiguration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter3
<br.com.caelum.vraptor.http.route.DefaultRouter: void add(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/@parameter1
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object)>/@parameter0
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ObjectArrayPool: void recycle(java.lang.Object[])>/@parameter0
<org.springframework.expression.spel.standard.Tokenizer: void <init>(java.lang.String)>/@parameter0
<org.picocontainer.paranamer.DefaultParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<org.springframework.expression.ParseException: void <init>(java.lang.String,int,java.lang.String)>/@parameter0
<org.picocontainer.lifecycle.NullLifecycleStrategy: void start(java.lang.Object)>/@parameter0
<org.picocontainer.lifecycle.NullLifecycleStrategy: void stop(java.lang.Object)>/@parameter0
<org.picocontainer.lifecycle.NullLifecycleStrategy: void dispose(java.lang.Object)>/@parameter0
<org.picocontainer.lifecycle.NullLifecycleStrategy: boolean hasLifecycle(java.lang.Class)>/@parameter0
<org.picocontainer.lifecycle.NullLifecycleStrategy: boolean isLazy(org.picocontainer.ComponentAdapter)>/@parameter0
<net.vidageek.mirror.reflect.DefaultMethodReflector: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String,java.lang.Class)>/@parameter1
<net.vidageek.mirror.reflect.DefaultMethodReflector: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String,java.lang.Class)>/@parameter2
<br.com.caelum.vraptor.ioc.spring.ComponentFactoryBean: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/@parameter1
<org.mockito.internal.creation.jmock.SearchingClassLoader: void <init>(java.lang.ClassLoader,java.lang.ClassLoader)>/@parameter0
<org.mockito.internal.creation.jmock.SearchingClassLoader: void <init>(java.lang.ClassLoader,java.lang.ClassLoader)>/@parameter1
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String attributeForAlias(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/@parameter2
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.MapperWrapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>/@parameter0
<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,com.google.common.base.Predicate)>/@parameter1
<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>/@parameter1
<com.google.common.collect.Iterators: boolean any(java.util.Iterator,com.google.common.base.Predicate)>/@parameter1
<com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: java.lang.Boolean convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: java.lang.Boolean convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.google.common.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function)>/@parameter1
<org.hamcrest.internal.ArrayIterator: void <init>(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void <init>(br.com.caelum.vraptor.core.Converters)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: void describeMismatchSafely(byte[],org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: boolean matchesSafely(byte[])>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Class getActualType(java.lang.reflect.Type)>/@parameter0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: boolean matchesSafely(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.standard.SpelExpression: void <init>(java.lang.String,org.springframework.expression.spel.ast.SpelNodeImpl,org.springframework.expression.spel.SpelParserConfiguration)>/@parameter0
<org.springframework.expression.spel.standard.SpelExpression: void <init>(java.lang.String,org.springframework.expression.spel.ast.SpelNodeImpl,org.springframework.expression.spel.SpelParserConfiguration)>/@parameter1
<com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/@parameter1
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/@parameter0
<org.mockito.asm.ClassWriter: int newUTF8(java.lang.String)>/@parameter0
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newClassItem(java.lang.String)>/@parameter0
<org.mockito.asm.ClassWriter: int newClass(java.lang.String)>/@parameter0
<org.codehaus.jettison.json.JSONObject$Null: boolean equals(java.lang.Object)>/@parameter0
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newString(java.lang.String)>/@parameter0
<org.mockito.internal.matchers.LocalizedMatcher: boolean matches(java.lang.Object)>/@parameter0
<org.mockito.asm.ClassWriter: int addType(java.lang.String)>/@parameter0
<org.mockito.asm.ClassWriter: int addUninitializedType(java.lang.String,int)>/@parameter0
<org.mockito.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>/@parameter0
<org.mockito.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>/@parameter1
<org.apache.commons.fileupload.servlet.ServletFileUpload: boolean isMultipartContent(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter1
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter2
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: java.lang.Object instantiateOrAddError(br.com.caelum.iogi.parameters.Parameters,java.util.List,br.com.caelum.iogi.reflection.Target)>/@parameter2
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: br.com.caelum.iogi.parameters.Parameters parseParameters(javax.servlet.http.HttpServletRequest)>/@parameter0
<ognl.ASTLess: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.mockito.asm.Type: java.lang.String getMethodDescriptor(java.lang.reflect.Method)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1: void <init>(org.springframework.beans.factory.support.FactoryBeanRegistrySupport,org.springframework.beans.factory.FactoryBean)>/@parameter1
<org.mockito.asm.Type: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.BeanExpressionContextAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanExpressionContextAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.picocontainer.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<org.springframework.context.expression.BeanExpressionContextAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.context.expression.BeanExpressionContextAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.context.expression.BeanExpressionContextAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: void setBeanName(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.Object newInstance(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter2
<ognl.ASTRootVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTRootVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTRootVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.expression.spel.support.StandardOperatorOverloader: boolean overridesOperation(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.support.StandardOperatorOverloader: boolean overridesOperation(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.expression.spel.support.StandardOperatorOverloader: java.lang.Object operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.support.StandardOperatorOverloader: java.lang.Object operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/@parameter2
<org.picocontainer.PicoLifecycleException: void <init>(java.lang.reflect.Method,java.lang.Object,java.lang.Throwable)>/@parameter1
<br.com.caelum.iogi.DependenciesInjector: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: void <init>(br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<org.codehaus.jettison.mapped.MappedNamespaceConvention: void processAttributesAndNamespaces(org.codehaus.jettison.Node,org.codehaus.jettison.json.JSONObject)>/@parameter0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: void processAttributesAndNamespaces(org.codehaus.jettison.Node,org.codehaus.jettison.json.JSONObject)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findGetter(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findSetter(java.lang.Object,java.lang.String,java.lang.Class)>/@parameter0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: javax.xml.namespace.QName createQName(java.lang.String,org.codehaus.jettison.Node)>/@parameter0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: javax.xml.namespace.QName createQName(java.lang.String,org.codehaus.jettison.Node)>/@parameter1
<org.codehaus.jettison.mapped.MappedNamespaceConvention: javax.xml.namespace.QName createQName(java.lang.String)>/@parameter0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: java.lang.String createAttributeKey(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<ognl.NumberElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: java.lang.String createKey(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<org.codehaus.jettison.mapped.MappedNamespaceConvention: boolean isElement(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<org.springframework.beans.BeanWrapperImpl$1: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver$KeyedArgName: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver$KeyedArgName: void <init>(java.lang.Object,java.lang.Object)>/@parameter1
<org.picocontainer.injectors.PrimitiveMemberChecker: boolean isPrimitiveArgument(java.lang.reflect.AccessibleObject,int)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.Object newInstance(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.Object instantiateUsingSerialization(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.DynamicProxyMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.DynamicProxyMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: boolean fieldModifiersSupported(java.lang.reflect.Field)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void validateFieldAccess(java.lang.reflect.Field)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.context.expression.MapAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.MapAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.MapAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.MapAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.MapAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.MapAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.MapAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.context.expression.MapAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.context.expression.MapAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarSerializer: com.google.gson.JsonElement serialize(java.util.Calendar,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarSerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<br.com.caelum.iogi.util.NullDependencyProvider: boolean canProvide(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.util.NullDependencyProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/@parameter0
<com.thoughtworks.xstream.converters.basic.ByteConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.ByteConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: void <init>(org.springframework.beans.factory.support.AbstractBeanFactory,java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.TypeConverter)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object evaluate(org.springframework.beans.factory.config.TypedStringValue)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object evaluate(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Class resolveTargetType(org.springframework.beans.factory.config.TypedStringValue)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/@parameter2
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.String adaptInnerBeanName(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: boolean matchesSafely(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>/@parameter1
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: void describeMismatchSafely(br.com.caelum.vraptor.resource.ResourceMethod,org.hamcrest.Description)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/@parameter1
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: boolean matchesSafely(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.ObjectToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ObjectToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.expression.spel.support.ReflectionHelper: void convertAllArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.reflect.Method)>/@parameter2
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.google.common.base.Predicates: com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate)>/@parameter0
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void <init>(br.com.caelum.vraptor.core.InterceptorHandlerFactory)>/@parameter0
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void next(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void next(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<javassist.compiler.MemberResolver: javassist.compiler.MemberResolver$Method lookupMethod(javassist.CtClass,javassist.CtClass,javassist.bytecode.MethodInfo,java.lang.String,int[],int[],java.lang.String[])>/@parameter2
<com.google.common.base.Predicates: java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate)>/@parameter0
<com.google.common.base.Predicates: java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate)>/@parameter1
<org.mockito.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy$3: void <init>(org.springframework.beans.factory.support.SimpleInstantiationStrategy,java.lang.reflect.Method)>/@parameter1
<br.com.caelum.iogi.reflection.Target: br.com.caelum.iogi.reflection.Target create(java.lang.Class,java.lang.String)>/@parameter1
<br.com.caelum.iogi.reflection.Target: void <init>(java.lang.reflect.Type,java.lang.String)>/@parameter0
<br.com.caelum.iogi.reflection.Target: void <init>(java.lang.reflect.Type,java.lang.String)>/@parameter1
<br.com.caelum.iogi.reflection.Target: java.lang.Class findRawClassType(java.lang.reflect.Type)>/@parameter0
<br.com.caelum.iogi.reflection.Target: java.lang.Object cast(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.reflection.Target: boolean equals(java.lang.Object)>/@parameter0
<org.hamcrest.core.Is: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.core.Is: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.springframework.beans.factory.config.BeanExpressionContext: boolean containsObject(java.lang.String)>/@parameter0
<org.springframework.beans.factory.config.BeanExpressionContext: java.lang.Object getObject(java.lang.String)>/@parameter0
<org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>/@parameter0
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.google.gson.internal.bind.ObjectTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<ognl.ASTBitNegate: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ObjectArrayPool$SizePool: void recycle(java.lang.Object[])>/@parameter0
<br.com.caelum.iogi.MultiInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<org.picocontainer.injectors.MethodInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.String,boolean)>/@parameter0
<org.picocontainer.injectors.MethodInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.String,boolean)>/@parameter1
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: void <init>(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Number convert(java.lang.Number)>/@parameter0
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Object convert(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.MethodInjector: boolean isNullParamAllowed(java.lang.reflect.AccessibleObject,int)>/@parameter0
<ognl.SimpleNode: void jjtAddChild(ognl.Node,int)>/@parameter0
<ognl.SimpleNode: java.lang.Object evaluateGetValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.SimpleNode: void evaluateSetValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.SimpleNode: void evaluateSetValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.SimpleNode: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.SimpleNode: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.io.xml.AbstractXmlReader: java.lang.String unescapeXmlName(java.lang.String)>/@parameter0
<br.com.caelum.iogi.collections.ParametersByIndex$1: java.lang.Integer apply(br.com.caelum.iogi.parameters.Parameter)>/@parameter0
<br.com.caelum.iogi.collections.ParametersByIndex$1: java.lang.Object apply(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: void <init>(java.lang.Object)>/@parameter0
<org.mockito.asm.ByteVector: org.mockito.asm.ByteVector putUTF8(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.ArrayToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ArrayToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.ArrayToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.io.ReaderWrapper: java.lang.String getAttribute(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: java.lang.Object copyOf(java.lang.Object,int,int)>/@parameter0
<org.springframework.expression.spel.support.StandardEvaluationContext: void setVariable(java.lang.String,java.lang.Object)>/@parameter1
<org.picocontainer.lifecycle.AbstractMonitoringLifecycleStrategy: boolean isLazy(org.picocontainer.ComponentAdapter)>/@parameter0
<com.thoughtworks.xstream.converters.basic.NullConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.NullConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.basic.DateConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.DateConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.basic.DateConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: void <init>(br.com.caelum.iogi.spi.LocaleProvider)>/@parameter0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>/@parameter0
<ognl.ASTGreater: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.util.CollectionUtils: java.lang.Class findCommonElementType(java.util.Collection)>/@parameter0
<com.google.gson.Gson$FutureTypeAdapter: void setDelegate(com.google.gson.TypeAdapter)>/@parameter0
<com.google.gson.Gson$FutureTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.Serializee: void setRoot(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.BeanDefinitionStoreException: void <init>(java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<org.springframework.beans.factory.BeanDefinitionStoreException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>/@parameter1
<br.com.caelum.iogi.ObjectInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.ObjectInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<br.com.caelum.iogi.ObjectInstantiator: void expectingAConcreteTarget(br.com.caelum.iogi.reflection.Target)>/@parameter0
<com.google.common.collect.LinkedListMultimap$AsMapEntries$1$1: void <init>(com.google.common.collect.LinkedListMultimap$AsMapEntries$1,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.extended.FileConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.FileConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.extended.FileConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsInstanceOf: boolean matches(java.lang.Object,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentAdapter: void <init>(java.lang.Class,java.lang.Class)>/@parameter1
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/@parameter0
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter1
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter3
<br.com.caelum.vraptor.util.extjs.DefaultExtJson$1$1: void addAttribute(java.lang.String,java.lang.String)>/@parameter1
<org.springframework.core.convert.support.NumberToNumberConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)>/@parameter0
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/@parameter0
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/@parameter1
<com.google.common.collect.LinkedListMultimap: boolean containsKey(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedListMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.common.collect.LinkedListMultimap: boolean remove(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedListMultimap: boolean remove(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.common.collect.LinkedListMultimap: java.util.List get(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedListMultimap: java.util.Collection get(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node access$800(com.google.common.collect.LinkedListMultimap,java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/@parameter1
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node access$800(com.google.common.collect.LinkedListMultimap,java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/@parameter2
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter0
<org.mockito.cglib.core.VisibilityPredicate: boolean evaluate(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: void describeMismatchSafely(br.com.caelum.vraptor.http.route.Route,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: boolean matchesSafely(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: boolean matchesSafely(java.lang.Object)>/@parameter0
<org.springframework.core.convert.ConversionFailedException: void <init>(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.lang.Object,java.lang.Throwable)>/@parameter2
<org.springframework.beans.factory.support.AbstractBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClass(java.lang.Class)>/@parameter0
<net.vidageek.mirror.bean.Bean: java.lang.String capitalize(java.lang.String)>/@parameter0
<net.vidageek.mirror.bean.Bean: java.util.List getter(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClassName(java.lang.String)>/@parameter0
<ognl.ObjectElementsAccessor$1: void <init>(ognl.ObjectElementsAccessor,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/@parameter5
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/@parameter6
<org.springframework.beans.factory.support.AbstractBeanDefinition: void copyQualifiersFrom(org.springframework.beans.factory.support.AbstractBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setResource(org.springframework.core.io.Resource)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/@parameter3
<org.springframework.beans.factory.support.AbstractBeanDefinition: boolean equals(java.lang.Object)>/@parameter0
<net.vidageek.mirror.DefaultAccessorsController: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<org.springframework.beans.propertyeditors.ClassArrayEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object resolveAutowiredArgument(org.springframework.core.MethodParameter,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/@parameter1
<org.hamcrest.core.IsNull: boolean matches(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.conversion.StringConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.StringConverter: java.lang.String convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.StringConverter: java.lang.String convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.StringConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.StringConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.thoughtworks.xstream.io.json.JsonWriter: void addLabel(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.json.JsonWriter: void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type)>/@parameter0
<org.springframework.expression.spel.ast.SpelNodeImpl: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Class getObjectClass(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.io.json.JsonWriter: void writeText(java.lang.String)>/@parameter0
<org.picocontainer.converters.BuiltInConverters: java.lang.Object convert(java.lang.String,java.lang.reflect.Type)>/@parameter0
<org.picocontainer.converters.BooleanConverter: java.lang.Boolean convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.BooleanConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>/@parameter0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>/@parameter1
<ognl.NoSuchPropertyException: java.lang.String getReason(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.NoSuchPropertyException: java.lang.String getReason(java.lang.Object,java.lang.Object)>/@parameter1
<org.picocontainer.injectors.AnnotatedFieldInjector$1: void <init>(org.picocontainer.injectors.AnnotatedFieldInjector,java.lang.Class)>/@parameter1
<org.springframework.beans.factory.support.SimpleInstantiationStrategy$1: void <init>(org.springframework.beans.factory.support.SimpleInstantiationStrategy,java.lang.Class)>/@parameter1
<br.com.caelum.iogi.reflection.NewObject: void setProperty(br.com.caelum.iogi.reflection.NewObject$Setter)>/@parameter0
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<com.google.common.collect.ForwardingCollection: boolean contains(java.lang.Object)>/@parameter0
<com.google.common.collect.ForwardingCollection: boolean add(java.lang.Object)>/@parameter0
<com.google.common.collect.ForwardingCollection: boolean addAll(java.util.Collection)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/@parameter1
<org.springframework.web.context.request.FacesRequestAttributes: void registerDestructionCallback(java.lang.String,java.lang.Runnable,int)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes: java.lang.Object resolveReference(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.LocaleEditor: void setAsText(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.PackageAliasingMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<org.mockito.cglib.core.EmitUtils$1: java.lang.Object transform(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.InjectInto: void <init>(java.lang.reflect.Type,java.lang.Object)>/@parameter0
<org.picocontainer.injectors.InjectInto: void <init>(java.lang.reflect.Type,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.mapper.PackageAliasingMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: java.lang.Double convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: java.lang.Double convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter1
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter2
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter4
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter5
<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>/@parameter0
<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Method,int)>/@parameter0
<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Method,int,int)>/@parameter0
<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Constructor,int)>/@parameter0
<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Constructor,int,int)>/@parameter0
<org.springframework.core.MethodParameter: void setParameterType(java.lang.Class)>/@parameter0
<ognl.ASTInstanceof: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveReturnType(java.lang.reflect.Method,java.lang.Class)>/@parameter0
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/@parameter1
<org.hamcrest.BaseDescription: org.hamcrest.Description appendText(java.lang.String)>/@parameter0
<org.hamcrest.BaseDescription: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>/@parameter0
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/@parameter0
<org.springframework.core.MethodParameter: org.springframework.core.MethodParameter forMethodOrConstructor(java.lang.Object,int)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void setServletContext(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void writeDetails(javax.servlet.http.HttpServletResponse)>/@parameter0
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type extractBoundForTypeVariable(java.lang.reflect.TypeVariable)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/@parameter0
<org.hamcrest.BaseDescription: void toJavaSyntax(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<ognl.IteratorPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.IteratorPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.IteratorPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.IteratorPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.IteratorPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectFactory: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>/@parameter2
<com.thoughtworks.xstream.XStream$1: com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<com.google.gson.internal.LazilyParsedNumber: void <init>(java.lang.String)>/@parameter0
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>/@parameter0
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/@parameter0
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/@parameter1
<org.springframework.web.context.request.ServletRequestAttributes: void registerDestructionCallback(java.lang.String,java.lang.Runnable,int)>/@parameter0
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object resolveReference(java.lang.String)>/@parameter0
<javassist.CtField: void <init>(javassist.bytecode.FieldInfo,javassist.CtClass)>/@parameter0
<org.springframework.web.context.request.ServletRequestAttributes: void registerSessionDestructionCallback(java.lang.String,java.lang.Runnable)>/@parameter0
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/@parameter2
<ognl.SetPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.SetPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/@parameter0
<org.mockito.cglib.proxy.Enhancer$6: int getOriginalModifiers(org.mockito.cglib.core.MethodInfo)>/@parameter0
<org.mockito.cglib.proxy.Enhancer$6: int getIndex(org.mockito.cglib.core.MethodInfo)>/@parameter0
<org.mockito.cglib.proxy.Enhancer$6: org.mockito.cglib.core.Signature getImplSignature(org.mockito.cglib.core.MethodInfo)>/@parameter0
<org.mockito.cglib.proxy.Enhancer$6: org.mockito.cglib.core.CodeEmitter beginMethod(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.core.MethodInfo)>/@parameter1
<org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.DefaultPicoContainer: void <init>(org.picocontainer.ComponentFactory,org.picocontainer.LifecycleStrategy,org.picocontainer.PicoContainer,org.picocontainer.ComponentMonitor)>/@parameter2
<com.google.gson.internal.LinkedTreeMap$KeySet: boolean contains(java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap$KeySet: boolean remove(java.lang.Object)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Object)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.util.Properties)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,org.picocontainer.Parameter[])>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,org.picocontainer.Parameter[])>/@parameter1
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,java.util.Properties,org.picocontainer.Parameter[])>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,java.util.Properties,org.picocontainer.Parameter[])>/@parameter1
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/@parameter2
<org.picocontainer.DefaultPicoContainer: void addOrderedComponentAdapter(org.picocontainer.ComponentAdapter)>/@parameter0
<org.hamcrest.number.OrderingComparison: boolean matchesSafely(java.lang.Comparable)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getLocalInstance(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter typeComponentAdapter(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.reflect.Type)>/@parameter0
<org.hamcrest.number.OrderingComparison: boolean matchesSafely(java.lang.Object)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object decorateComponent(java.lang.Object,org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object decorateComponent(java.lang.Object,org.picocontainer.ComponentAdapter)>/@parameter1
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Class[] parseGenericParameters(java.lang.reflect.Method,java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Class getAdapterType(com.google.gson.JsonDeserializer)>/@parameter0
<org.picocontainer.DefaultPicoContainer: void potentiallyStartAdapter(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.DefaultPicoContainer: void addAdapterIfStartable(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.DefaultPicoContainer: void instantiateComponentAsIsStartable(org.picocontainer.ComponentAdapter)>/@parameter0
<com.google.common.collect.Iterators$7: void <init>(java.util.Iterator,com.google.common.base.Predicate)>/@parameter1
<org.slf4j.helpers.NOPLogger: void trace(java.lang.String,java.lang.Object)>/@parameter1
<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>/@parameter1
<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<com.google.gson.internal.LinkedTreeMap$Node: void <init>(com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)>/@parameter1
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/@parameter0
<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>/@parameter1
<com.google.inject.internal.util.$AbstractMapEntry: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$SomeProxy: void <init>(org.hibernate.proxy.LazyInitializer)>/@parameter0
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter0
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter1
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter2
<br.com.caelum.vraptor.VRaptor: void init(javax.servlet.FilterConfig)>/@parameter0
<org.mockito.internal.matchers.Equality: boolean areEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.mockito.internal.matchers.Equality: boolean areArraysEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.mockito.internal.matchers.Equality: boolean areArrayLengthsEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.mockito.internal.matchers.Equality: boolean areArrayElementsEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.mockito.internal.matchers.Equality: boolean isArray(java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyValue: void <init>(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyValue: void <init>(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue)>/@parameter0
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue,java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue,java.lang.Object)>/@parameter1
<org.springframework.beans.PropertyValue: void setConvertedValue(java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String getAttribute(java.lang.String)>/@parameter0
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: java.lang.Double convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: java.lang.Double convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.thoughtworks.xstream.converters.collections.SingletonMapConverter: boolean canConvert(java.lang.Class)>/@parameter0
<org.springframework.beans.BeanWrapperImpl$4: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/@parameter1
<org.springframework.beans.propertyeditors.UUIDEditor: void setAsText(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.XStream$2: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>/@parameter0
<com.google.common.collect.AbstractMapBasedMultiset: int count(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMapBasedMultiset: int add(java.lang.Object,int)>/@parameter0
<com.google.common.collect.AbstractMapBasedMultiset: int remove(java.lang.Object,int)>/@parameter0
<com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: boolean add(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/@parameter0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/@parameter1
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/@parameter0
<org.springframework.beans.factory.BeanCreationNotAllowedException: void <init>(java.lang.String,java.lang.String)>/@parameter0
<ognl.IteratorEnumeration: void <init>(java.util.Iterator)>/@parameter0
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/@parameter0
<org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>/@parameter1
<ognl.ObjectMethodAccessor: java.lang.Object callStaticMethod(java.util.Map,java.lang.Class,java.lang.String,java.lang.Object[])>/@parameter3
<ognl.ObjectMethodAccessor: java.lang.Object callMethod(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])>/@parameter1
<ognl.ObjectMethodAccessor: java.lang.Object callMethod(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])>/@parameter3
<org.mockito.cglib.core.MethodInfoTransformer: java.lang.Object transform(java.lang.Object)>/@parameter0
<org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Method)>/@parameter0
<org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Constructor)>/@parameter0
<org.springframework.util.ReflectionUtils: void doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback)>/@parameter0
<org.springframework.util.ReflectionUtils: void doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback,org.springframework.util.ReflectionUtils$MethodFilter)>/@parameter0
<br.com.caelum.vraptor.http.DefaultResourceTranslator: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType: void <init>(java.lang.String,double)>/@parameter0
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType: int compareTo(br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType)>/@parameter0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType: int compareTo(java.lang.Object)>/@parameter0
<ognl.ASTSubtract: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService$2: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<ognl.ASTAssign: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.core.io.ResourceEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.core.io.ResourceEditor: java.lang.String resolvePath(java.lang.String)>/@parameter0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: java.lang.Short convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: java.lang.Short convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.thoughtworks.xstream.core.util.FastField: void <init>(java.lang.String,java.lang.String)>/@parameter1
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.thoughtworks.xstream.core.util.FastField: void <init>(java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.core.util.FastField: void <init>(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.context.support.DefaultLifecycleProcessor$1: void <init>(org.springframework.context.support.DefaultLifecycleProcessor,java.util.concurrent.CountDownLatch,java.util.Set,java.lang.String)>/@parameter3
<com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter: boolean canConvert(java.lang.Class)>/@parameter0
<javassist.CtBehavior: void <init>(javassist.CtClass,javassist.bytecode.MethodInfo)>/@parameter1
<com.google.common.collect.MapMakerInternalMap$EntryFactory: com.google.common.collect.MapMakerInternalMap$EntryFactory getFactory(com.google.common.collect.MapMakerInternalMap$Strength,boolean,boolean)>/@parameter0
<ognl.ASTEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.beans.ConversionNotSupportedException: void <init>(java.beans.PropertyChangeEvent,java.lang.Class,java.lang.Throwable)>/@parameter1
<org.springframework.beans.ConversionNotSupportedException: void <init>(java.lang.Object,java.lang.Class,java.lang.Throwable)>/@parameter0
<org.springframework.beans.ConversionNotSupportedException: void <init>(java.lang.Object,java.lang.Class,java.lang.Throwable)>/@parameter1
<com.google.common.collect.EmptyImmutableMap: java.lang.Object get(java.lang.Object)>/@parameter0
<com.google.common.collect.EmptyImmutableMap: boolean containsKey(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/@parameter1
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/@parameter2
<com.google.common.collect.ForwardingSet: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.ImmutableFieldKeySorter: java.util.Map sort(java.lang.Class,java.util.Map)>/@parameter0
<com.google.common.collect.Iterators$13: void <init>(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/@parameter0
<org.picocontainer.injectors.AdaptingInjection$1: void <init>(org.picocontainer.injectors.AdaptingInjection,java.lang.Class)>/@parameter1
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.lang.Object argumentValue(br.com.caelum.iogi.Instantiator,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: boolean needsDependency(br.com.caelum.iogi.reflection.Target)>/@parameter0
<org.picocontainer.converters.FloatConverter: java.lang.Float convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.FloatConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: int positionOf(org.springframework.expression.spel.standard.Token)>/@parameter0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void push(org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter0
<br.com.caelum.vraptor.interceptor.TopologicalSortedInterceptorRegistryTest$1: boolean matchesSafely(java.util.List)>/@parameter0
<br.com.caelum.vraptor.interceptor.TopologicalSortedInterceptorRegistryTest$1: boolean matchesSafely(java.lang.Object)>/@parameter0
<org.springframework.util.StringUtils: boolean hasLength(java.lang.CharSequence)>/@parameter0
<ognl.ASTBitAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: boolean hasText(java.lang.CharSequence)>/@parameter0
<org.springframework.util.StringUtils: boolean hasText(java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String trimAllWhitespace(java.lang.String)>/@parameter0
<org.mockito.cglib.core.EmitUtils$3: java.lang.Object transform(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: java.lang.String toString(org.springframework.expression.spel.standard.Token)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter2
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void checkRightOperand(org.springframework.expression.spel.standard.Token,org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void checkRightOperand(org.springframework.expression.spel.standard.Token,org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter1
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: int toPos(org.springframework.expression.spel.standard.Token)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<org.springframework.beans.propertyeditors.InputSourceEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String capitalize(java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String changeFirstCharacterCase(java.lang.String,boolean)>/@parameter0
<org.springframework.core.type.StandardClassMetadata: void <init>(java.lang.Class)>/@parameter0
<net.vidageek.mirror.invoke.ConstructorHandlerByArgs: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/@parameter1
<org.springframework.util.StringUtils: java.util.Locale parseLocaleString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.security.AnyTypePermission: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.EnumConverter: void ensureTargetIsAnEnum(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: boolean isNumber(java.lang.String)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromOrdinal(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromOrdinal(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromOrdinal(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter2
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromName(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromName(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromName(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter2
<br.com.caelum.vraptor.util.Stringnifier: java.lang.String simpleNameFor(java.lang.reflect.AccessibleObject)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String,boolean,boolean)>/@parameter0
<org.springframework.core.AttributeAccessorSupport: void setAttribute(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.core.AttributeAccessorSupport: java.lang.Object getAttribute(java.lang.String)>/@parameter0
<org.springframework.core.AttributeAccessorSupport: java.lang.Object removeAttribute(java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String[] delimitedListToStringArray(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String[] delimitedListToStringArray(java.lang.String,java.lang.String,java.lang.String)>/@parameter0
<org.springframework.core.AttributeAccessorSupport: void copyAttributesFrom(org.springframework.core.AttributeAccessor)>/@parameter0
<org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String[] commaDelimitedListToStringArray(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.config.ApplicationConfiguration: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String arrayToDelimitedString(java.lang.Object[],java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String arrayToCommaDelimitedString(java.lang.Object[])>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$2: void write(com.google.gson.stream.JsonWriter,java.util.BitSet)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$2: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.extended.FontConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.FontConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: void setId(java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: void addApplicationListener(org.springframework.context.ApplicationListener)>/@parameter0
<org.springframework.beans.factory.support.DisposableBeanAdapter: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.util.List,java.security.AccessControlContext)>/@parameter0
<org.springframework.beans.factory.support.DisposableBeanAdapter: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.util.List,java.security.AccessControlContext)>/@parameter1
<org.mockito.internal.creation.jmock.ClassImposterizer$2: int accept(java.lang.reflect.Method)>/@parameter0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void <init>(com.thoughtworks.xstream.converters.SingleValueConverter)>/@parameter0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.String toString(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: boolean containsBean(java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: boolean isTypeMatch(java.lang.String,java.lang.Class)>/@parameter0
<net.vidageek.mirror.reflect.DefaultFieldReflector: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String)>/@parameter1
<org.springframework.context.support.AbstractApplicationContext: java.util.Map getBeansOfType(java.lang.Class)>/@parameter0
<net.vidageek.mirror.reflect.DefaultFieldReflector: java.lang.reflect.Field onClass(java.lang.Class)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: boolean containsLocalBean(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest$MegaConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest$MegaConverter: boolean canConvert(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$ScalaSetter$1: boolean accepts(java.lang.reflect.Method)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$ScalaSetter$1: boolean accepts(java.lang.Object)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.Class resolvePrimitiveClassName(java.lang.String)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.String)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.String getQualifiedName(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.String getQualifiedNameForArray(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.String getDescriptiveType(java.lang.Object)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.reflect.Constructor getConstructorIfAvailable(java.lang.Class,java.lang.Class[])>/@parameter0
<org.springframework.util.ClassUtils: int getMethodCountForName(java.lang.Class,java.lang.String)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: java.lang.Integer convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: java.lang.Integer convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<ognl.MapPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.MapPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.util.ClassUtils: java.lang.reflect.Method getStaticMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/@parameter0
<org.springframework.util.ClassUtils: boolean isPrimitiveWrapper(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: boolean isPrimitiveOrWrapper(java.lang.Class)>/@parameter0
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>/@parameter0
<ognl.MapPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.MapPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.MapPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<org.springframework.util.ClassUtils: java.lang.Class resolvePrimitiveIfNecessary(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: boolean isAssignable(java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: boolean isAssignable(java.lang.Class,java.lang.Class)>/@parameter1
<org.springframework.util.ClassUtils: boolean isAssignableValue(java.lang.Class,java.lang.Object)>/@parameter0
<org.springframework.util.ClassUtils: boolean isAssignableValue(java.lang.Class,java.lang.Object)>/@parameter1
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class,com.google.gson.TreeTypeAdapter$1)>/@parameter0
<com.thoughtworks.xstream.core.util.Base64Encoder: java.lang.String encode(byte[])>/@parameter0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter1
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter2
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter3
<com.thoughtworks.xstream.core.util.Base64Encoder: byte[] decode(java.lang.String)>/@parameter0
<ognl.DefaultMemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter0
<ognl.DefaultMemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter1
<ognl.DefaultMemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter3
<ognl.DefaultMemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/@parameter0
<ognl.DefaultMemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/@parameter1
<ognl.DefaultMemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/@parameter3
<ognl.DefaultMemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter0
<ognl.DefaultMemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter1
<ognl.DefaultMemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter2
<ognl.DefaultMemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter3
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/@parameter1
<ognl.IteratorElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object createBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter0
<ognl.ExpressionSyntaxException: void <init>(java.lang.String,java.lang.Throwable)>/@parameter0
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class predictBeanType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/@parameter0
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/@parameter2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getNonSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyMergedBeanDefinitionPostProcessors(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)>/@parameter2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object resolveBeforeInstantiation(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInstantiation(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInstantiation(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper createBeanInstance(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.reflect.Constructor[] determineConstructorsFromBeanPostProcessors(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.reflect.Constructor[] determineConstructorsFromBeanPostProcessors(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper instantiateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$3: void write(com.google.gson.stream.JsonWriter,java.lang.Boolean)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$3: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/@parameter0
<com.google.common.base.Predicates$InstanceOfPredicate: boolean equals(java.lang.Object)>/@parameter0
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: java.util.List get(java.lang.Object)>/@parameter0
<org.springframework.web.context.request.AbstractRequestAttributes: void registerRequestDestructionCallback(java.lang.String,java.lang.Runnable)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByName(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/@parameter0
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<com.thoughtworks.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: java.lang.Byte convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: java.lang.Byte convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByType(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/@parameter0
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void checkDependencies(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,java.beans.PropertyDescriptor[],org.springframework.beans.PropertyValues)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object convertForProperty(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapper,org.springframework.beans.TypeConverter)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object convertForProperty(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapper,org.springframework.beans.TypeConverter)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter1
<org.hamcrest.DiagnosingMatcher: boolean matches(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeAwareMethods(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeAwareMethods(java.lang.String,java.lang.Object)>/@parameter1
<org.hamcrest.DiagnosingMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeInitMethods(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeInitMethods(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeCustomInitMethod(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeCustomInitMethod(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter1
<br.com.caelum.vraptor.ioc.spring.SpringProvider: void start(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringProvider: org.springframework.web.context.ConfigurableWebApplicationContext getParentApplicationContext(javax.servlet.ServletContext)>/@parameter0
<org.springframework.expression.ExpressionException: void <init>(java.lang.String,int,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object postProcessObjectFromFactoryBean(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void removeSingleton(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void access$0(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void access$0(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.core.convert.support.ArrayToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ArrayToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.ArrayToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.thoughtworks.xstream.converters.basic.CharConverter: boolean canConvert(java.lang.Class)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: void <init>(java.lang.Class,java.lang.Object[])>/@parameter0
<com.thoughtworks.xstream.converters.basic.CharConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.basic.CharConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: void setComponent(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.CharConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: void setMember(java.lang.reflect.AccessibleObject)>/@parameter0
<org.picocontainer.injectors.SingleMemberInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/@parameter0
<org.picocontainer.injectors.SingleMemberInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/@parameter1
<org.picocontainer.injectors.SingleMemberInjector: java.lang.Object getParameter(org.picocontainer.PicoContainer,java.lang.reflect.AccessibleObject,int,java.lang.reflect.Type,java.lang.annotation.Annotation,org.picocontainer.Parameter,org.picocontainer.ComponentAdapter)>/@parameter1
<org.picocontainer.injectors.SingleMemberInjector: void nullCheck(java.lang.reflect.AccessibleObject,int,org.picocontainer.injectors.ParameterNameBinding,java.lang.Object)>/@parameter0
<org.picocontainer.injectors.SingleMemberInjector: void nullCheck(java.lang.reflect.AccessibleObject,int,org.picocontainer.injectors.ParameterNameBinding,java.lang.Object)>/@parameter3
<org.picocontainer.injectors.SingleMemberInjector: boolean isNullParamAllowed(java.lang.reflect.AccessibleObject,int)>/@parameter0
<org.springframework.beans.BeanMetadataAttributeAccessor: void setSource(java.lang.Object)>/@parameter0
<org.springframework.beans.BeanMetadataAttributeAccessor: void setAttribute(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.BeanMetadataAttributeAccessor: java.lang.Object getAttribute(java.lang.String)>/@parameter0
<org.springframework.beans.BeanMetadataAttributeAccessor: java.lang.Object removeAttribute(java.lang.String)>/@parameter0
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/@parameter0
<org.springframework.core.io.support.ResourceArrayPropertyEditor: java.lang.String resolvePath(java.lang.String)>/@parameter0
<org.springframework.beans.factory.BeanIsAbstractException: void <init>(java.lang.String)>/@parameter0
<com.google.gson.TreeTypeAdapter: void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)>/@parameter0
<com.google.gson.TreeTypeAdapter: void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)>/@parameter1
<com.google.gson.TreeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.google.gson.TreeTypeAdapter: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object)>/@parameter1
<com.google.gson.TreeTypeAdapter: void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory,com.google.gson.TreeTypeAdapter$1)>/@parameter0
<com.google.gson.TreeTypeAdapter: void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory,com.google.gson.TreeTypeAdapter$1)>/@parameter1
<br.com.caelum.vraptor.VRaptorMatchers$2: void describeMismatchSafely(br.com.caelum.vraptor.http.route.Route,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.VRaptorMatchers$2: boolean matchesSafely(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.VRaptorMatchers$2: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.VRaptorMatchers$2: boolean matchesSafely(java.lang.Object)>/@parameter0
<junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>/@parameter1
<junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.expression.spel.ast.Projection: void <init>(boolean,int,org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter2
<org.springframework.expression.spel.ast.Projection: java.lang.Class determineCommonType(java.lang.Class,java.lang.Class)>/@parameter0
<com.google.common.collect.LinkedListMultimap$1: void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object)>/@parameter1
<com.google.common.collect.AbstractMultimap$WrappedSortedSet: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMultimap$WrappedCollection)>/@parameter1
<com.thoughtworks.xstream.mapper.CachingMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.basic.ShortConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.ShortConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.hamcrest.FeatureMatcher: boolean matchesSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: void storeCache(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$22$1: void <init>(com.google.gson.internal.bind.TypeAdapters$22,com.google.gson.TypeAdapter)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$22$1: void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$22$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.picocontainer.converters.CharacterConverter: java.lang.Character convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.CharacterConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.naming.NoNameCoder: java.lang.String decodeAttribute(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.naming.NoNameCoder: java.lang.String decodeNode(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.naming.NoNameCoder: java.lang.String encodeAttribute(java.lang.String)>/@parameter0
<br.com.caelum.iogi.collections.ListInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<com.thoughtworks.xstream.core.util.PresortedMap: void <init>(java.util.Comparator)>/@parameter0
<br.com.caelum.iogi.collections.ListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<com.thoughtworks.xstream.core.util.PresortedMap: void <init>(java.util.Comparator,com.thoughtworks.xstream.core.util.PresortedMap$ArraySet)>/@parameter0
<br.com.caelum.iogi.collections.ListInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.util.PresortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.PresortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.util.Primitives: boolean isBoxed(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.core.util.Primitives: java.lang.Class primitiveType(java.lang.String)>/@parameter0
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>/@parameter0
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>/@parameter1
<org.mockito.cglib.core.EmitUtils$11: java.lang.Object transform(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.StringToLocaleConverter: java.util.Locale convert(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.StringToLocaleConverter: java.lang.Object convert(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.collections.ArrayConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.ArrayConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: int compareTo(org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember)>/@parameter0
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: int compareTo(java.lang.Object)>/@parameter0
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: java.lang.String access$1(org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$14: void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal)>/@parameter1
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: org.springframework.context.Lifecycle access$2(org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$14: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.collections.CyclingListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<org.hamcrest.collection.IsEmptyCollection: boolean matchesSafely(java.util.Collection)>/@parameter0
<org.hamcrest.collection.IsEmptyCollection: boolean matchesSafely(java.lang.Object)>/@parameter0
<org.picocontainer.behaviors.Caching: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.behaviors.Caching: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.VRaptorResponse: void <init>(javax.servlet.http.HttpServletResponse)>/@parameter0
<org.hamcrest.ResourceBundleDescription: void append(java.lang.String)>/@parameter0
<org.hamcrest.ResourceBundleDescription: void directAppend(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter4
<org.springframework.beans.factory.support.DefaultListableBeanFactory$2: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.beans.factory.FactoryBean)>/@parameter1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<com.google.common.collect.RegularImmutableMap$TerminalEntry: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.RegularImmutableMap$TerminalEntry: void <init>(java.lang.Object,java.lang.Object)>/@parameter1
<javassist.compiler.MemberCodeGen: java.lang.String getAccessiblePrivate(java.lang.String,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo,javassist.CtClass)>/@parameter3
<javassist.compiler.MemberCodeGen: java.lang.String getAccessibleConstructor(java.lang.String,javassist.CtClass,javassist.bytecode.MethodInfo)>/@parameter2
<org.mockito.internal.matchers.Any: boolean matches(java.lang.Object)>/@parameter0
<javassist.compiler.MemberCodeGen: javassist.compiler.AccessorMaker isAccessibleField(javassist.CtField,javassist.bytecode.FieldInfo)>/@parameter1
<javassist.compiler.MemberCodeGen: boolean setFieldType(javassist.bytecode.FieldInfo)>/@parameter0
<javassist.compiler.MemberCodeGen: int addFieldrefInfo(javassist.CtField,javassist.bytecode.FieldInfo)>/@parameter1
<com.thoughtworks.xstream.converters.basic.URLConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.URLConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<ognl.ASTNotEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: java.lang.Character convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: java.lang.Character convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: void start(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: void stop(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: void dispose(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: boolean hasLifecycle(java.lang.Class)>/@parameter0
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void <init>(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)>/@parameter2
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Collection)>/@parameter1
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.IdToEntityConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.IdToEntityConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.reflect.Method getFinder(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.String getEntityName(java.lang.Class)>/@parameter0
<org.springframework.beans.propertyeditors.CharsetEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setSerializationId(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: java.lang.String getName(java.text.AttributedCharacterIterator$Attribute)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean containsBeanDefinition(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)>/@parameter0
<javax.servlet.jsp.jstl.core.Config: java.lang.Object get(javax.servlet.ServletRequest,java.lang.String)>/@parameter0
<javax.servlet.jsp.jstl.core.Config: java.lang.Object get(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.DependencyDescriptor)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isBeanEligibleForMetadataCaching(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.interceptor.ForwardToDefaultViewInterceptor: void <init>(br.com.caelum.vraptor.Result)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void resetBeanDefinition(java.lang.String)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedList: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection)>/@parameter1
<org.mockito.internal.util.reflection.FieldSetter: void set(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/@parameter1
<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/@parameter1
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/@parameter2
<org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.springframework.beans.factory.support.AutowireUtils: java.lang.Object resolveAutowiringValue(java.lang.Object,java.lang.Class)>/@parameter1
<org.mockito.Mockito: org.mockito.stubbing.Stubber doReturn(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/@parameter1
<org.springframework.beans.propertyeditors.ClassEditor: void setAsText(java.lang.String)>/@parameter0
<javax.servlet.http.HttpServletResponseWrapper: void <init>(javax.servlet.http.HttpServletResponse)>/@parameter0
<com.google.common.collect.ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void raiseNoSuchBeanDefinitionException(java.lang.Class,java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/@parameter0
<javassist.compiler.MemberCodeGen$JsrHook2: void <init>(javassist.compiler.CodeGen,int[])>/@parameter1
<org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.ioc.ComponentFactoryIntrospector: java.lang.Class targetTypeForComponentFactory(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.ComponentFactoryIntrospector: java.lang.Class targetTypeForComponentFactory0(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.ognl.GenericNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.MissingFieldException: void <init>(java.lang.String,java.lang.String)>/@parameter1
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.paranamer.CachingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject)>/@parameter0
<com.thoughtworks.paranamer.CachingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/@parameter0
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/@parameter1
<com.google.inject.internal.MoreTypes: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/@parameter1
<org.springframework.beans.factory.support.ConstructorResolver$2: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class)>/@parameter2
<org.springframework.core.convert.support.StringToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.StringToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.StringToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$31: void <init>(java.lang.Class,com.google.gson.TypeAdapter)>/@parameter1
<ognl.ASTAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTAnd: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTAnd: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<org.mockito.cglib.core.EmitUtils$15: java.lang.Object transform(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedSet: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.Set)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.ReflectionConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException: void <init>(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.TimeZoneEditor: void setAsText(java.lang.String)>/@parameter0
<javassist.util.proxy.RuntimeSupport: java.lang.String makeDescriptor(java.lang.reflect.Method)>/@parameter0
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.String getClassName(java.lang.ClassLoader)>/@parameter0
<org.mockito.cglib.core.AbstractClassGenerator: java.util.Set getClassNameCache(java.lang.ClassLoader)>/@parameter0
<org.mockito.cglib.core.AbstractClassGenerator: void setClassLoader(java.lang.ClassLoader)>/@parameter0
<org.springframework.expression.spel.ast.OperatorNot: void <init>(int,org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$16: void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$16: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.mockito.internal.util.MockUtil: org.mockito.internal.MockHandlerInterface getMockHandler(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.extended.LookAndFeelConverter: boolean canConvert(java.lang.Class)>/@parameter0
<org.mockito.internal.util.MockUtil: boolean isMockitoMock(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: org.mockito.internal.creation.MethodInterceptorFilter getInterceptor(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: org.mockito.internal.util.MockName getMockName(java.lang.Object)>/@parameter0
<org.picocontainer.adapters.InstanceAdapter: void <init>(java.lang.Object,java.lang.Object,org.picocontainer.LifecycleStrategy,org.picocontainer.ComponentMonitor)>/@parameter0
<org.picocontainer.adapters.InstanceAdapter: void <init>(java.lang.Object,java.lang.Object,org.picocontainer.LifecycleStrategy,org.picocontainer.ComponentMonitor)>/@parameter1
<org.picocontainer.adapters.InstanceAdapter: java.lang.Class getInstanceClass(java.lang.Object)>/@parameter0
<org.picocontainer.adapters.InstanceAdapter: void start(java.lang.Object)>/@parameter0
<org.picocontainer.adapters.InstanceAdapter: void stop(java.lang.Object)>/@parameter0
<org.picocontainer.adapters.InstanceAdapter: void dispose(java.lang.Object)>/@parameter0
<org.picocontainer.adapters.InstanceAdapter: boolean hasLifecycle(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.view.DefaultLogicResultTest$1: boolean matchesSafely(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.view.DefaultLogicResultTest$1: boolean matchesSafely(java.lang.Object)>/@parameter0
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object)>/@parameter1
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object,boolean)>/@parameter1
<ognl.EvaluationPool: void recycle(ognl.Evaluation)>/@parameter0
<ognl.EvaluationPool: void recycleAll(ognl.Evaluation)>/@parameter0
<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>/@parameter0
<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>/@parameter0
<com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)>/@parameter0
<com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService$MatchableConverters: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService$MatchableConverters: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.beans.propertyeditors.PropertiesEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.PropertiesEditor: void setValue(java.lang.Object)>/@parameter0
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class)>/@parameter0
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)>/@parameter0
<org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber: void <init>(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber: java.lang.Number convert(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber: java.lang.Object convert(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.BeanCurrentlyInCreationException: void <init>(java.lang.String)>/@parameter0
<org.springframework.beans.factory.BeanCurrentlyInCreationException: void <init>(java.lang.String,java.lang.String)>/@parameter0
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void superHelper(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.core.MethodInfo)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder: java.lang.Class getAdapterType(com.google.gson.JsonSerializer)>/@parameter0
<com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: java.lang.Character convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: java.lang.Character convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: boolean equals(java.lang.Object)>/@parameter0
<org.mockito.cglib.core.RejectModifierPredicate: boolean evaluate(java.lang.Object)>/@parameter0
<org.picocontainer.paranamer.AdaptiveParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: void postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)>/@parameter2
<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.Node,java.lang.String,org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.Convention)>/@parameter0
<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.Node,java.lang.String,org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.Convention)>/@parameter1
<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.Node,java.lang.String,org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.Convention)>/@parameter2
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.codehaus.jettison.Node: void <init>(java.lang.String,org.codehaus.jettison.Convention)>/@parameter0
<org.codehaus.jettison.Node: void setNamespace(java.lang.String,java.lang.String)>/@parameter1
<org.codehaus.jettison.Node: void setArray(org.codehaus.jettison.json.JSONArray)>/@parameter0
<br.com.caelum.vraptor.http.ognl.AbstractOgnlTestSupport: void configOgnl(br.com.caelum.vraptor.core.Converters)>/@parameter0
<org.mockito.cglib.core.MethodWrapper: java.lang.Object create(java.lang.reflect.Method)>/@parameter0
<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.io.WriterWrapper: void addAttribute(java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.io.WriterWrapper: void setValue(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter3
<org.hamcrest.Matchers: org.hamcrest.Matcher hasItem(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher equalTo(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher sameInstance(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.Iogi: void <init>(br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.iogi.spi.LocaleProvider)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$9: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$9: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<ognl.EnumerationElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<org.springframework.util.ResourceUtils: boolean isUrl(java.lang.String)>/@parameter0
<org.picocontainer.injectors.ProviderAdapter: java.lang.reflect.Method getProvideMethod(java.lang.Class)>/@parameter0
<org.springframework.beans.propertyeditors.URLEditor: void setAsText(java.lang.String)>/@parameter0
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: void <init>(java.lang.reflect.Type,java.lang.String,boolean,java.lang.annotation.Annotation,org.picocontainer.Parameter)>/@parameter1
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: void <init>(java.lang.reflect.Type,java.lang.String,boolean,java.lang.annotation.Annotation,org.picocontainer.Parameter,org.picocontainer.injectors.ConstructorInjector$1)>/@parameter1
<org.springframework.core.convert.support.ArrayToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ArrayToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.ArrayToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.thoughtworks.xstream.converters.basic.FloatConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.FloatConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.serialization.iso8601.gson.CalendarISO8601Serializer: com.google.gson.JsonElement serialize(java.util.Calendar,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<br.com.caelum.vraptor.serialization.iso8601.gson.CalendarISO8601Serializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<org.junit.Assert: void assertNotNull(java.lang.String,java.lang.Object)>/@parameter1
<org.junit.Assert: void assertNotNull(java.lang.Object)>/@parameter0
<org.junit.Assert: void assertNull(java.lang.String,java.lang.Object)>/@parameter1
<org.junit.Assert: void assertNull(java.lang.Object)>/@parameter0
<org.junit.Assert: java.lang.String formatClassAndValue(java.lang.Object,java.lang.String)>/@parameter1
<com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap$LinkedEntry newLinkedEntry(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>/@parameter0
<com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap$LinkedEntry newLinkedEntry(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>/@parameter1
<br.com.caelum.vraptor.ioc.pico.DefaultComponentFactoryRegistry: void register(java.lang.Class)>/@parameter0
<com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>/@parameter0
<org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>/@parameter0
<org.junit.Assert: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>/@parameter1
<com.thoughtworks.xstream.mapper.OuterClassMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectiveMethodResolver: org.springframework.expression.MethodExecutor resolve(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.util.List)>/@parameter1
<org.springframework.expression.TypedValue: void <init>(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AdaptingInjection$2: void <init>(org.picocontainer.injectors.AdaptingInjection,java.lang.Class)>/@parameter1
<org.springframework.expression.TypedValue: void <init>(java.lang.Object,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<javassist.bytecode.stackmap.TypedBlock: javassist.bytecode.stackmap.TypedBlock[] makeBlocks(javassist.bytecode.MethodInfo,javassist.bytecode.CodeAttribute,boolean)>/@parameter1
<org.springframework.expression.spel.ExpressionState: void pushActiveContextObject(org.springframework.expression.TypedValue)>/@parameter0
<org.springframework.expression.spel.ExpressionState: void setVariable(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.ExpressionState: java.lang.Class findType(java.lang.String)>/@parameter0
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(java.lang.Object,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(org.springframework.expression.TypedValue,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/@parameter2
<org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard: java.lang.Object observe(java.lang.Class,java.lang.Object)>/@parameter0
<ognl.ArrayElementsAccessor$1: void <init>(ognl.ArrayElementsAccessor,java.lang.Object)>/@parameter1
<org.mockito.asm.MethodAdapter: void visitLdcInsn(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException: void <init>(java.lang.String,java.lang.String)>/@parameter1
<com.google.gson.internal.bind.ArrayTypeAdapter: void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)>/@parameter1
<com.google.gson.internal.bind.ArrayTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.ConstructorResolver$1: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.reflect.Constructor,java.lang.Object[])>/@parameter2
<org.springframework.beans.factory.support.ConstructorResolver$1: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.reflect.Constructor,java.lang.Object[])>/@parameter3
<ognl.internal.Entry: void <init>(java.lang.Class,java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.CharacterToNumberFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.core.SequenceGenerator: java.lang.String next(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.context.expression.MapAccessor$MapAccessException: void <init>(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void associateId(java.lang.Object,java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.lang.Object lookupId(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary: boolean containsId(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void removeId(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$1: boolean matchesSafely(br.com.caelum.vraptor.interceptor.Interceptor)>/@parameter0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$1: boolean matchesSafely(java.lang.Object)>/@parameter0
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter1
<org.mockito.internal.stubbing.answers.Returns: void <init>(java.lang.Object)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$1: java.lang.String getSystemAttribute(java.lang.String)>/@parameter0
<org.mockito.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AnnotatedMethodInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Class,boolean)>/@parameter0
<org.picocontainer.injectors.AnnotatedMethodInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Class,boolean)>/@parameter1
<org.picocontainer.injectors.AnnotatedMethodInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AnnotatedMethodInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/@parameter2
<org.picocontainer.injectors.AnnotatedMethodInjector: boolean isInjectorMethod(java.lang.reflect.Method)>/@parameter0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1: void convertAnother(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1: void replace(java.lang.Object,java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1: void replace(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$5: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.Object)>/@parameter1
<ognl.ASTVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.Evaluation: void <init>(ognl.SimpleNode,java.lang.Object)>/@parameter1
<ognl.Evaluation: void <init>(ognl.SimpleNode,java.lang.Object,boolean)>/@parameter1
<ognl.Evaluation: void setResult(java.lang.Object)>/@parameter0
<ognl.Evaluation: void addChild(ognl.Evaluation)>/@parameter0
<ognl.Evaluation: void init(ognl.SimpleNode,java.lang.Object,boolean)>/@parameter1
<ognl.ASTLessEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.picocontainer.converters.LongConverter: java.lang.Long convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.LongConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl$5: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/@parameter1
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue executeFunctionJLRMethod(org.springframework.expression.spel.ExpressionState,java.lang.reflect.Method)>/@parameter1
<org.mockito.internal.matchers.Equals: boolean matches(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: java.util.Map getParameterTypes(java.lang.reflect.Method,java.lang.String[])>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: java.lang.String upperFirst(java.lang.String)>/@parameter0
<org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>/@parameter0
<org.hamcrest.MatcherAssert: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>/@parameter1
<com.thoughtworks.xstream.io.path.PathTracker: void pushElement(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedCollection: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMultimap$WrappedCollection)>/@parameter1
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean equals(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean add(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService$1: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.google.gson.JsonArray: boolean equals(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean addAll(java.util.Collection)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$18: void write(com.google.gson.stream.JsonWriter,java.net.URL)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$18: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.view.DefaultLogicResultTest$TheComponent: void <init>(br.com.caelum.vraptor.view.DefaultLogicResultTest,br.com.caelum.vraptor.Result)>/@parameter1
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.CollectionToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.CollectionToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter1
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter2
<org.springframework.beans.factory.support.AbstractBeanFactory$2: void <init>(org.springframework.beans.factory.support.AbstractBeanFactory,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter1
<ognl.CollectionElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.ConstructorInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean,boolean)>/@parameter0
<org.picocontainer.injectors.ConstructorInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean,boolean)>/@parameter1
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.io.xml.StaxWriter: void addAttribute(java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.io.xml.StaxWriter: void setValue(java.lang.String)>/@parameter0
<org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.ConstructorInjector: void fixGenericParameterTypes(java.lang.reflect.Constructor,java.lang.reflect.Type[])>/@parameter0
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters access$100(org.picocontainer.injectors.ConstructorInjector,org.picocontainer.PicoContainer,java.lang.Class)>/@parameter2
<org.picocontainer.injectors.IterativeInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/@parameter0
<org.picocontainer.injectors.IterativeInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/@parameter1
<com.thoughtworks.xstream.converters.extended.SqlTimestampConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.SqlTimestampConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.IterativeInjector: org.picocontainer.NameBinding makeParameterNameImpl(java.lang.reflect.AccessibleObject)>/@parameter0
<com.thoughtworks.xstream.converters.extended.SqlTimestampConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Date)>/@parameter1
<br.com.caelum.iogi.reflection.NewObject$Setter: void <init>(java.lang.reflect.Method,java.lang.Object)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$Setter: void set(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.reflection.NewObject$Setter: br.com.caelum.iogi.reflection.Target access$100(br.com.caelum.iogi.reflection.NewObject$Setter)>/@parameter0
<br.com.caelum.vraptor.deserialization.DefaultDeserializers: br.com.caelum.vraptor.deserialization.Deserializer deserializerFor(java.lang.String,br.com.caelum.vraptor.ioc.Container)>/@parameter1
<br.com.caelum.vraptor.deserialization.DefaultDeserializers: br.com.caelum.vraptor.deserialization.Deserializer subpathDeserializerFor(java.lang.String,br.com.caelum.vraptor.ioc.Container)>/@parameter1
<org.picocontainer.injectors.IterativeInjector: java.lang.String getName(java.lang.reflect.Method)>/@parameter0
<org.picocontainer.injectors.IterativeInjector: void fixGenericParameterTypes(java.lang.reflect.Method,java.lang.reflect.Type[])>/@parameter0
<br.com.caelum.vraptor.deserialization.DefaultDeserializers: br.com.caelum.vraptor.deserialization.Deserializer subpathDeserializerForPlus(java.lang.String,br.com.caelum.vraptor.ioc.Container)>/@parameter1
<org.picocontainer.injectors.IterativeInjector: java.lang.annotation.Annotation getBindings(java.lang.reflect.Method,int)>/@parameter0
<br.com.caelum.vraptor.serialization.NullProxyInitializer: java.lang.Class getActualClass(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.NullProxyInitializer: void initialize(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.NullProxyInitializer: boolean isProxy(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: void <init>(br.com.caelum.vraptor.core.Converters,java.util.ResourceBundle)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter2
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter3
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter4
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convert(java.lang.Object,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type genericTypeToConvert(java.lang.Object,java.lang.reflect.Member)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type genericTypeToConvert(java.lang.Object,java.lang.reflect.Member)>/@parameter1
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractArrayType(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractFieldType(java.lang.reflect.Member)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractSetterMethodType(java.lang.Object,java.lang.reflect.Member)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractSetterMethodType(java.lang.Object,java.lang.reflect.Member)>/@parameter1
<org.hamcrest.core.StringContains: boolean evalSubstringOf(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.StringToPropertiesConverter: java.util.Properties convert(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CustomCollectionEditor: java.lang.Object convertElement(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.StringToPropertiesConverter: java.lang.Object convert(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat: java.lang.String format(java.util.Date)>/@parameter0
<com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat: java.util.Date parse(java.lang.String)>/@parameter0
<org.joda.time.LocalTime: boolean equals(java.lang.Object)>/@parameter0
<javassist.compiler.MemberResolver$Method: void <init>(javassist.CtClass,javassist.bytecode.MethodInfo,int)>/@parameter1
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.Resource resolveRootDirResource(org.springframework.core.io.Resource)>/@parameter0
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: boolean isJarResource(org.springframework.core.io.Resource)>/@parameter0
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set doFindPathMatchingJarResources(org.springframework.core.io.Resource,java.lang.String)>/@parameter0
<com.google.common.base.Predicates$AndPredicate: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.validator.DIConstraintValidatorFactory: void <init>(br.com.caelum.vraptor.ioc.Container)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$19: void write(com.google.gson.stream.JsonWriter,java.net.URI)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$19: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider: void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)>/@parameter0
<ognl.ASTUnsignedShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.mockito.cglib.proxy.Enhancer$2: java.lang.Object transform(java.lang.Object)>/@parameter0
<org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>/@parameter0
<com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter3
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void is(java.lang.Class,java.lang.reflect.Method)>/@parameter1
<br.com.caelum.vraptor.http.route.Rules: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void addParametersInfo(java.lang.reflect.Method)>/@parameter0
<org.springframework.beans.factory.CannotLoadBeanClassException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassNotFoundException)>/@parameter1
<org.springframework.beans.factory.CannotLoadBeanClassException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassNotFoundException)>/@parameter2
<org.springframework.beans.factory.CannotLoadBeanClassException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.LinkageError)>/@parameter1
<org.springframework.beans.factory.CannotLoadBeanClassException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.LinkageError)>/@parameter2
<org.springframework.context.event.AbstractApplicationEventMulticaster: void addApplicationListener(org.springframework.context.ApplicationListener)>/@parameter0
<org.springframework.context.event.AbstractApplicationEventMulticaster: void addApplicationListenerBean(java.lang.String)>/@parameter0
<org.springframework.context.event.AbstractApplicationEventMulticaster: boolean supportsEvent(org.springframework.context.ApplicationListener,java.lang.Class,java.lang.Class)>/@parameter0
<org.mockito.internal.MockitoCore: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>/@parameter0
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.ast.Indexer: void <init>(int,org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter1
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>/@parameter0
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/@parameter0
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>/@parameter0
<org.springframework.core.style.DefaultValueStyler: java.lang.String getCollectionTypeString(java.util.Collection)>/@parameter0
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>/@parameter0
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.BeanFactoryUtils: boolean isFactoryDereference(java.lang.String)>/@parameter0
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String transformedBeanName(java.lang.String)>/@parameter0
<org.springframework.expression.spel.ast.Indexer: boolean growCollection(org.springframework.expression.spel.ExpressionState,java.lang.Class,int,java.util.Collection)>/@parameter1
<org.springframework.expression.spel.ast.Indexer: boolean growCollection(org.springframework.expression.spel.ExpressionState,java.lang.Class,int,java.util.Collection)>/@parameter3
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class,boolean,boolean)>/@parameter1
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/@parameter1
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/@parameter3
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/@parameter4
<org.apache.log4j.Category: void fireRemoveAppenderEvent(org.apache.log4j.Appender)>/@parameter0
<org.picocontainer.injectors.ParameterNameBinding: void <init>(org.picocontainer.paranamer.Paranamer,java.lang.reflect.AccessibleObject,int)>/@parameter1
<net.vidageek.mirror.reflect.DefaultAllReflectionHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/@parameter1
<org.springframework.expression.spel.ast.Indexer: java.lang.Object accessArrayElement(java.lang.Object,int)>/@parameter0
<org.slf4j.impl.Log4jLoggerAdapter: void trace(java.lang.String,java.lang.Object)>/@parameter1
<org.picocontainer.converters.DoubleConverter: java.lang.Double convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.DoubleConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<org.slf4j.impl.Log4jLoggerAdapter: void debug(java.lang.String,java.lang.Object)>/@parameter1
<org.slf4j.impl.Log4jLoggerAdapter: void debug(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.slf4j.impl.Log4jLoggerAdapter: void error(java.lang.String,java.lang.Object)>/@parameter1
<org.mockito.cglib.core.CodeEmitter: void push(java.lang.String)>/@parameter0
<org.springframework.util.AntPathStringMatcher: void <init>(java.lang.String,java.lang.String,java.util.Map)>/@parameter0
<org.springframework.util.AntPathStringMatcher: void <init>(java.lang.String,java.lang.String,java.util.Map)>/@parameter1
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.util.AntPathStringMatcher: java.util.regex.Pattern createPattern(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.util.AntPathStringMatcher: java.lang.String quote(java.lang.String,int,int)>/@parameter0
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean hasValueOfMethodOrConstructor(java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean hasValueOfMethodOrConstructor(java.lang.Class,java.lang.Class)>/@parameter1
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Method getValueOfMethodOn(java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Method getValueOfMethodOn(java.lang.Class,java.lang.Class)>/@parameter1
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class)>/@parameter1
<javassist.util.proxy.ProxyFactory: void override(java.lang.String,java.lang.reflect.Method,java.lang.String,int,java.lang.String,javassist.bytecode.ClassFile,javassist.bytecode.ConstPool)>/@parameter1
<javassist.util.proxy.ProxyFactory: boolean isVisible(int,java.lang.String,java.lang.reflect.Member)>/@parameter2
<javassist.util.proxy.ProxyFactory: java.lang.String keyToDesc(java.lang.String)>/@parameter0
<javassist.util.proxy.ProxyFactory: javassist.bytecode.MethodInfo makeConstructor(java.lang.String,java.lang.reflect.Constructor,javassist.bytecode.ConstPool,java.lang.Class,boolean)>/@parameter1
<org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>/@parameter2
<javassist.util.proxy.ProxyFactory: javassist.bytecode.MethodInfo makeDelegator(java.lang.reflect.Method,java.lang.String,javassist.bytecode.ConstPool,java.lang.Class,java.lang.String)>/@parameter0
<javassist.util.proxy.ProxyFactory: javassist.bytecode.MethodInfo makeForwarder(java.lang.String,java.lang.reflect.Method,java.lang.String,javassist.bytecode.ConstPool,java.lang.Class,java.lang.String,int)>/@parameter1
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<javassist.util.proxy.ProxyFactory: void setThrows(javassist.bytecode.MethodInfo,javassist.bytecode.ConstPool,java.lang.reflect.Method)>/@parameter2
<org.mockito.cglib.core.CodeEmitter: void invoke(org.mockito.cglib.core.MethodInfo,org.mockito.asm.Type)>/@parameter0
<org.mockito.cglib.core.CodeEmitter: void invoke(org.mockito.cglib.core.MethodInfo)>/@parameter0
<br.com.caelum.iogi.parameters.Parameters: java.util.List forTarget(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameter namedAfter(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.parameters.Parameters: void assertFoundAtMostOneTarget(br.com.caelum.iogi.reflection.Target,java.util.Collection)>/@parameter0
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameters focusedOn(br.com.caelum.iogi.reflection.Target)>/@parameter0
<org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.parameters.Parameters: boolean hasRelatedTo(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.parameters.Parameters: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: void setConversionService(org.springframework.core.convert.ConversionService)>/@parameter0
<org.springframework.core.SimpleAliasRegistry: void registerAlias(java.lang.String,java.lang.String)>/@parameter0
<org.picocontainer.injectors.ConstructorInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.ConstructorInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getDefaultEditor(java.lang.Class)>/@parameter0
<org.springframework.core.SimpleAliasRegistry: boolean isAlias(java.lang.String)>/@parameter0
<org.springframework.core.SimpleAliasRegistry: java.lang.String[] getAliases(java.lang.String)>/@parameter0
<org.springframework.core.SimpleAliasRegistry: void retrieveAliases(java.lang.String,java.util.List)>/@parameter0
<org.springframework.core.SimpleAliasRegistry: java.lang.String canonicalName(java.lang.String)>/@parameter0
<net.vidageek.mirror.reflect.DefaultConstructorReflector: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/@parameter1
<org.springframework.core.SimpleAliasRegistry: void checkForAliasCircle(java.lang.String,java.lang.String)>/@parameter0
<org.mockito.cglib.core.EmitUtils$16: void processCase(java.lang.Object,org.mockito.asm.Label)>/@parameter0
<org.picocontainer.behaviors.Stored$Instance: java.lang.Object access$202(org.picocontainer.behaviors.Stored$Instance,java.lang.Object)>/@parameter1
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>/@parameter1
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry)>/@parameter0
<ognl.ASTShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.beans.PropertyEditorRegistrySupport: boolean hasCustomEditorForElement(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.beans.PropertyEditorRegistrySupport: java.lang.Class getPropertyType(java.lang.String)>/@parameter0
<org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.String,java.lang.Class)>/@parameter1
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.Class)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: java.lang.Class guessPropertyTypeFromEditors(java.lang.String)>/@parameter0
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry,com.google.inject.internal.util.$ImmutableMap$1)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: void copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry,java.lang.String)>/@parameter1
<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>/@parameter2
<ognl.ASTXor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum: void <init>(org.springframework.core.convert.support.StringToEnumConverterFactory,java.lang.Class)>/@parameter1
<org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum: java.lang.Enum convert(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum: java.lang.Object convert(java.lang.Object)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: void <init>(org.springframework.core.MethodParameter,java.lang.Class)>/@parameter1
<org.springframework.core.convert.TypeDescriptor: void <init>(java.lang.reflect.Field,int,java.lang.Class)>/@parameter2
<org.springframework.core.convert.TypeDescriptor: void <init>(java.lang.Object)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: void <init>(java.lang.Class)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor(java.lang.Object)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor(java.lang.Object)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor(java.lang.Object)>/@parameter0
<org.joda.time.LocalDate: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor forElementType(java.lang.Class)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.deserialization.JsonDeserializer: com.thoughtworks.xstream.XStream getConfiguredXStream(java.lang.reflect.Method,java.lang.Class[])>/@parameter0
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void chooseParam(java.lang.Class[],java.lang.Object[],java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void aliasParams(java.lang.reflect.Method,java.lang.Class[],com.thoughtworks.xstream.XStream)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor forObject(java.lang.Object)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor valueOf(java.lang.Class)>/@parameter0
<org.springframework.expression.common.ExpressionUtils: java.lang.Object convert(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: java.lang.Object convertTypedValue(org.springframework.expression.EvaluationContext,org.springframework.expression.TypedValue,java.lang.Class)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: int toInt(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: boolean toBoolean(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: double toDouble(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: long toLong(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: char toChar(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: short toShort(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: float toFloat(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: byte toByte(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<com.thoughtworks.xstream.converters.basic.DoubleConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.DoubleConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression parseExpression(java.lang.String,org.springframework.expression.ParserContext)>/@parameter0
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression parseTemplate(java.lang.String,org.springframework.expression.ParserContext)>/@parameter0
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression[] parseExpressions(java.lang.String,org.springframework.expression.ParserContext)>/@parameter0
<org.springframework.expression.common.TemplateAwareExpressionParser: boolean isSuffixHere(java.lang.String,int,java.lang.String)>/@parameter0
<org.springframework.expression.common.TemplateAwareExpressionParser: int skipToCorrectEndSuffix(java.lang.String,java.lang.String,java.lang.String,int)>/@parameter2
<org.springframework.core.convert.support.ObjectToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ObjectToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.ObjectToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<br.com.caelum.vraptor.resource.DefaultResourceMethod: void <init>(br.com.caelum.vraptor.resource.ResourceClass,java.lang.reflect.Method)>/@parameter1
<br.com.caelum.vraptor.resource.DefaultResourceMethod: br.com.caelum.vraptor.resource.ResourceMethod instanceFor(java.lang.Class,java.lang.reflect.Method)>/@parameter1
<org.springframework.core.convert.support.ConversionUtils: java.lang.Object invokeConverter(org.springframework.core.convert.converter.GenericConverter,java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<br.com.caelum.vraptor.resource.DefaultResourceMethod: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog: java.lang.String access$000(br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog: java.lang.Integer access$100(br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog: java.util.Calendar access$300(br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog)>/@parameter0
<com.thoughtworks.xstream.core.TreeMarshaller: void convertAnother(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.TreeMarshaller: void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter1
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter2
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.core.TreeMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/@parameter0
<com.thoughtworks.xstream.core.TreeMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/@parameter1
<com.thoughtworks.xstream.core.TreeMarshaller: void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.google.common.collect.LinkedHashMultiset: int remove(java.lang.Object,int)>/@parameter0
<com.google.common.collect.LinkedHashMultiset: int add(java.lang.Object,int)>/@parameter0
<com.google.common.collect.LinkedHashMultiset: int count(java.lang.Object)>/@parameter0
<org.springframework.core.type.classreading.SimpleMetadataReader: void <init>(org.springframework.core.io.Resource,java.lang.ClassLoader)>/@parameter0
<com.google.common.collect.LinkedHashMultiset: boolean remove(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedHashMultiset: boolean add(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedHashMultiset: boolean contains(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.EmptyObjectsProvider: boolean canProvide(br.com.caelum.iogi.reflection.Target)>/@parameter0
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>/@parameter0
<br.com.caelum.iogi.EmptyObjectsProvider: boolean selfCanProvide(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/@parameter0
<org.springframework.expression.spel.ast.TypeCode: org.springframework.expression.spel.ast.TypeCode forName(java.lang.String)>/@parameter0
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>/@parameter0
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object emptyArrayFor(br.com.caelum.iogi.reflection.Target)>/@parameter0
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)>/@parameter0
<com.google.gson.stream.JsonWriter: void string(java.lang.String)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$ScalaSetter: void <init>(java.lang.reflect.Method,java.lang.Object)>/@parameter0
<org.hamcrest.BaseMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.springframework.core.convert.support.PropertiesToStringConverter: java.lang.String convert(java.util.Properties)>/@parameter0
<org.springframework.core.convert.support.PropertiesToStringConverter: java.lang.Object convert(java.lang.Object)>/@parameter0
<org.springframework.beans.CachedIntrospectionResults: boolean isUnderneathClassLoader(java.lang.ClassLoader,java.lang.ClassLoader)>/@parameter1
<ognl.ASTConst: void setValue(java.lang.Object)>/@parameter0
<ognl.ASTConst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>/@parameter0
<com.google.inject.internal.util.$Objects: boolean equal(java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$Bazinga: void <init>(org.hibernate.proxy.HibernateProxy)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$8: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$8: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>/@parameter0
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchCandidates(java.util.List,java.lang.reflect.Method)>/@parameter1
<org.springframework.core.BridgeMethodResolver: boolean isBridgedCandidateFor(java.lang.reflect.Method,java.lang.reflect.Method)>/@parameter0
<org.springframework.core.BridgeMethodResolver: boolean isBridgedCandidateFor(java.lang.reflect.Method,java.lang.reflect.Method)>/@parameter1
<org.springframework.core.BridgeMethodResolver: boolean isBridgeMethodFor(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/@parameter0
<org.springframework.core.BridgeMethodResolver: boolean isBridgeMethodFor(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/@parameter1
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findGenericDeclaration(java.lang.reflect.Method)>/@parameter0
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/@parameter0
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/@parameter1
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchForMatch(java.lang.Class,java.lang.reflect.Method)>/@parameter0
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchForMatch(java.lang.Class,java.lang.reflect.Method)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$11: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$11: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.MapToMapConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.MapToMapConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<ognl.ASTBitOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeAttribute(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeNode(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String encodeAttribute(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String encodeName(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeName(java.lang.String)>/@parameter0
<org.mockito.internal.configuration.DefaultInjectionEngine: void inject(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>/@parameter2
<com.google.common.collect.LinkedHashMultimap$SetDecorator: void <init>(com.google.common.collect.LinkedHashMultimap,java.lang.Object,java.util.Set)>/@parameter1
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider: void <init>(br.com.caelum.vraptor.core.StaticContentHandler)>/@parameter0
<com.google.common.collect.LinkedHashMultimap$SetDecorator: java.util.Map$Entry createEntry(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean add(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean addAll(java.util.Collection)>/@parameter0
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean remove(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.reflection.Target$Primitives: java.lang.Object primitiveCast(java.lang.Object,java.lang.Class)>/@parameter0
<br.com.caelum.iogi.reflection.Target$Primitives: java.lang.Object primitiveCast(java.lang.Object,java.lang.Class)>/@parameter1
<org.springframework.core.convert.support.CollectionToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.CollectionToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.mockito.cglib.core.ReflectUtils$3: void <init>(java.lang.reflect.Member,int,org.mockito.cglib.core.Signature)>/@parameter0
<br.com.caelum.iogi.collections.ParametersByIndex: void <init>(br.com.caelum.iogi.parameters.Parameters,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.collections.ParametersByIndex: com.google.common.collect.ListMultimap groupByIndex(br.com.caelum.iogi.parameters.Parameters,br.com.caelum.iogi.reflection.Target)>/@parameter1
<ognl.NumberElementsAccessor$1: void <init>(ognl.NumberElementsAccessor,java.lang.Object)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$21: void write(com.google.gson.stream.JsonWriter,java.util.UUID)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$21: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.basic.LongConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.LongConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/@parameter1
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<org.springframework.beans.propertyeditors.CustomMapEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/@parameter0
<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.Object convertKey(java.lang.Object)>/@parameter0
<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.Object convertValue(java.lang.Object)>/@parameter0
<org.hamcrest.StringDescription: void append(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.ObjectToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ObjectToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.ObjectToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.picocontainer.DefaultPicoContainer$LateInstance: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<org.picocontainer.DefaultPicoContainer$LateInstance: void <init>(java.lang.Object,java.lang.Object,org.picocontainer.DefaultPicoContainer$1)>/@parameter0
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.ConstructorExecutor findExecutorForConstructor(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/@parameter0
<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.path.Path: java.lang.String normalize(java.lang.String,int,int)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>/@parameter0
<junit.framework.ComparisonCompactor: void <init>(int,java.lang.String,java.lang.String)>/@parameter2
<junit.framework.ComparisonCompactor: java.lang.String compactString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$1: void <init>(com.thoughtworks.xstream.converters.reflection.SerializableConverter,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Class[],java.lang.Object,boolean[])>/@parameter4
<org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.beans.PropertyEditor getPropertyEditor(java.lang.Class)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.beans.PropertyEditor access$1(org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder,java.lang.Class)>/@parameter1
<org.springframework.context.expression.StandardBeanExpressionResolver: java.lang.Object evaluate(java.lang.String,org.springframework.beans.factory.config.BeanExpressionContext)>/@parameter0
<org.springframework.beans.BeanWrapperImpl$3: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/@parameter1
<com.google.inject.internal.MoreTypes$GenericArrayTypeImpl: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.expression.spel.ast.Selection: void <init>(boolean,int,int,org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter3
<org.picocontainer.injectors.MethodInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.MethodInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.StringToCharacterConverter: java.lang.Character convert(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.StringToCharacterConverter: java.lang.Object convert(java.lang.Object)>/@parameter0
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.internal.ClassCacheImpl: java.lang.Object get(java.lang.Class)>/@parameter0
<ognl.internal.ClassCacheImpl: java.lang.Object put(java.lang.Class,java.lang.Object)>/@parameter0
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/@parameter0
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/@parameter1
<br.com.caelum.vraptor.view.DefaultValidationViewsFactory: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.hamcrest.core.IsNot: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsNot: org.hamcrest.Matcher not(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<com.google.common.collect.AbstractMultiset: boolean contains(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.support.GenericConversionService$MatchableConverters getMatchableConverters(java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.support.GenericConversionService$MatchableConverters getMatchableConverters(java.lang.Class,java.lang.Class)>/@parameter1
<com.google.common.collect.AbstractMultiset: boolean add(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultiset: boolean remove(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: java.util.Map getSourceConverterMap(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: void assertNotNull(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: void assertNotNull(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<com.google.gson.TypeAdapter: com.google.gson.JsonElement toJsonTree(java.lang.Object)>/@parameter0
<org.joda.time.format.DateTimeFormatterBuilder: boolean isPrinter(java.lang.Object)>/@parameter0
<org.joda.time.format.DateTimeFormatterBuilder: boolean isParser(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.StringToNumberConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: java.util.Map getTargetConvertersForSource(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/@parameter1
<org.springframework.core.convert.support.CollectionToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.CollectionToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.hamcrest.core.StringEndsWith: boolean evalSubstringOf(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.support.GenericConversionService$MatchableConverters,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.support.GenericConversionService$MatchableConverters,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.support.GenericConversionService$MatchableConverters,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter2
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/@parameter1
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/@parameter1
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/@parameter2
<com.thoughtworks.xstream.core.TreeUnmarshaller: void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.TreeUnmarshaller: void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)>/@parameter2
<org.mockito.cglib.proxy.Enhancer$1: int accept(java.lang.reflect.Method)>/@parameter0
<org.springframework.beans.BeanWrapperImpl$6: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method,java.lang.Object)>/@parameter1
<org.springframework.beans.BeanWrapperImpl$6: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method,java.lang.Object)>/@parameter2
<com.google.gson.internal.bind.JsonTreeReader: void <init>(com.google.gson.JsonElement)>/@parameter0
<org.mockito.internal.verification.MockAwareVerificationMode: void <init>(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<ognl.Ognl: java.lang.Object parseExpression(java.lang.String)>/@parameter0
<ognl.Ognl: void setTypeConverter(java.util.Map,ognl.TypeConverter)>/@parameter1
<ognl.Ognl: void setValue(java.lang.Object,java.util.Map,java.lang.Object,java.lang.Object)>/@parameter0
<org.picocontainer.DefaultPicoContainer$KnowsContainerAdapter: void <init>(org.picocontainer.ComponentAdapter,org.picocontainer.PicoContainer)>/@parameter1
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerOn(java.lang.Class,boolean)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerOn(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerFactory(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void register(java.lang.Class,boolean)>/@parameter0
<org.springframework.aop.config.AopConfigUtils: int findPriorityForClass(java.lang.String)>/@parameter0
<com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: java.lang.Integer convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: java.lang.Integer convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<javax.servlet.http.HttpServletRequestWrapper: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.codehaus.jettison.util.FastStack: void push(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: java.lang.Boolean convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: java.lang.Boolean convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.proxy.JavassistProxifier$1: boolean isHandled(java.lang.reflect.Method)>/@parameter0
<br.com.caelum.vraptor.validator.DefaultBeanValidator: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.Validator,javax.validation.MessageInterpolator)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.core.convert.TypeDescriptor getTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.core.convert.TypeDescriptor getTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findGetterForProperty(java.lang.String,java.lang.Class,boolean)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findGetterForProperty(java.lang.String,java.lang.Class,boolean)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findSetterForProperty(java.lang.String,java.lang.Class,boolean)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findSetterForProperty(java.lang.String,java.lang.Class,boolean)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Field findField(java.lang.String,java.lang.Class,boolean)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Field findField(java.lang.String,java.lang.Class,boolean)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.picocontainer.injectors.AnnotatedFieldInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Class,boolean)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Class,boolean)>/@parameter1
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.annotation.Annotation getBinding(java.lang.reflect.Field)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: boolean isAnnotatedForInjection(java.lang.reflect.Field)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.reflect.Field[] getFields(java.lang.Class)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/@parameter2
<org.picocontainer.injectors.AnnotatedFieldInjector: org.picocontainer.NameBinding makeParameterNameImpl(java.lang.reflect.AccessibleObject)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.Object memberInvocationReturn(java.lang.Object,java.lang.reflect.AccessibleObject,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.conversion.BigDecimalConverter: java.math.BigDecimal convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BigDecimalConverter: java.math.BigDecimal convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.BigDecimalConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BigDecimalConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BigDecimalConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<ognl.MethodFailedException: void <init>(java.lang.Object,java.lang.String,java.lang.Throwable)>/@parameter0
<javassist.CtClassType: void insertAuxInitializer(javassist.bytecode.CodeAttribute,javassist.bytecode.Bytecode,int)>/@parameter0
<org.springframework.beans.factory.config.BeanDefinitionHolder: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String,java.lang.String[])>/@parameter1
<org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.util.NumberUtils: java.lang.Number convertNumberToTargetClass(java.lang.Number,java.lang.Class)>/@parameter0
<org.springframework.util.NumberUtils: java.lang.Number convertNumberToTargetClass(java.lang.Number,java.lang.Class)>/@parameter1
<org.springframework.util.NumberUtils: void raiseOverflowException(java.lang.Number,java.lang.Class)>/@parameter0
<org.springframework.util.NumberUtils: void raiseOverflowException(java.lang.Number,java.lang.Class)>/@parameter1
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class)>/@parameter1
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class,java.text.NumberFormat)>/@parameter0
<com.thoughtworks.xstream.XStreamException: void <init>(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.XStreamException: void <init>(java.lang.String,java.lang.Throwable)>/@parameter0
<org.springframework.util.NumberUtils: boolean isHexNumber(java.lang.String)>/@parameter0
<org.springframework.util.NumberUtils: java.math.BigInteger decodeBigInteger(java.lang.String)>/@parameter0
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.Class)>/@parameter0
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.Class)>/@parameter1
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter0
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter2
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter3
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter4
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType convertToMimeType(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: double extractQualifier(java.lang.String)>/@parameter0
<org.springframework.beans.TypeMismatchException: void <init>(java.beans.PropertyChangeEvent,java.lang.Class,java.lang.Throwable)>/@parameter1
<org.springframework.beans.TypeMismatchException: void <init>(java.lang.Object,java.lang.Class,java.lang.Throwable)>/@parameter0
<org.springframework.beans.TypeMismatchException: void <init>(java.lang.Object,java.lang.Class,java.lang.Throwable)>/@parameter1
<org.codehaus.jettison.json.JSONObject: java.lang.String numberToString(java.lang.Number)>/@parameter0
<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject put(java.lang.String,java.lang.Object)>/@parameter1
<org.codehaus.jettison.json.JSONObject: java.lang.String quote(java.lang.String)>/@parameter0
<org.codehaus.jettison.json.JSONObject: void testValidity(java.lang.Object)>/@parameter0
<com.google.gson.internal.Excluder$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>/@parameter0
<org.picocontainer.converters.UrlConverter: java.net.URL convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.UrlConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.collections.CollectionConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.CollectionConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.collections.CollectionConverter: java.lang.Object createCollection(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.io.xml.QNameMap: javax.xml.namespace.QName getQName(java.lang.String)>/@parameter0
<org.springframework.expression.spel.support.ReflectiveConstructorResolver: org.springframework.expression.ConstructorExecutor resolve(org.springframework.expression.EvaluationContext,java.lang.String,java.util.List)>/@parameter1
<com.google.gson.Gson$3: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.Gson$3: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter0
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter2
<ognl.ASTKeyValue: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.thoughtworks.paranamer.BytecodeReadingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void setValue(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void addAttribute(java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void writeAttributeValue(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void writeText(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void writeText(java.lang.String,boolean)>/@parameter0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter1
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter2
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter3
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter4
<com.thoughtworks.xstream.converters.ConversionException: java.lang.String get(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.ConversionException: void add(java.lang.String,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: org.joda.time.DateMidnight convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.http.EncodingHandlerFactory: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter2
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter3
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter4
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter5
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$7: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$7: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.basic.URIConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.URIConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.joda.time.format.DateTimeParserBucket$SavedField: int compareTo(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.collections.IndexedListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter2
<br.com.caelum.iogi.collections.IndexedListInstantiator: br.com.caelum.iogi.reflection.Target elementTarget(br.com.caelum.iogi.reflection.Target)>/@parameter0
<org.picocontainer.monitors.NullComponentMonitor: java.lang.reflect.Constructor instantiating(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor)>/@parameter2
<org.picocontainer.monitors.NullComponentMonitor: void instantiationFailed(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Exception)>/@parameter2
<org.picocontainer.monitors.NullComponentMonitor: void instantiated(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Object,java.lang.Object[],long)>/@parameter2
<org.picocontainer.monitors.NullComponentMonitor: java.lang.Object invoking(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,java.lang.Object[])>/@parameter2
<org.picocontainer.monitors.NullComponentMonitor: java.lang.Object invoking(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,java.lang.Object[])>/@parameter3
<org.picocontainer.monitors.NullComponentMonitor: void invoked(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,long,java.lang.Object[],java.lang.Object)>/@parameter2
<org.picocontainer.monitors.NullComponentMonitor: void invoked(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,long,java.lang.Object[],java.lang.Object)>/@parameter3
<org.picocontainer.monitors.NullComponentMonitor: void invocationFailed(java.lang.reflect.Member,java.lang.Object,java.lang.Exception)>/@parameter0
<org.picocontainer.monitors.NullComponentMonitor: java.lang.Object noComponentFound(org.picocontainer.MutablePicoContainer,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Class getTypeForFactoryBean(org.springframework.beans.factory.FactoryBean)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getCachedObjectForFactoryBean(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/@parameter1
<org.mockito.internal.matchers.AnyVararg: boolean matches(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/@parameter1
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: org.springframework.beans.factory.FactoryBean getFactoryBean(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: org.springframework.beans.factory.FactoryBean getFactoryBean(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: void removeSingleton(java.lang.String)>/@parameter0
<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: void <init>(com.google.common.collect.AbstractMapBasedMultiset,java.util.Map)>/@parameter1
<com.thoughtworks.xstream.core.util.PresortedMap$1: void <init>(com.thoughtworks.xstream.core.util.PresortedMap,java.lang.Object,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.util.PresortedMap$1: void <init>(com.thoughtworks.xstream.core.util.PresortedMap,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.beans.propertyeditors.ByteArrayPropertyEditor: void setAsText(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: java.util.Date convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<org.hamcrest.collection.IsCollectionWithSize: java.lang.Integer featureValueOf(java.util.Collection)>/@parameter0
<org.hamcrest.collection.IsCollectionWithSize: java.lang.Object featureValueOf(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.ReferenceByXPathMarshaller: java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: void <init>(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: void <init>(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: boolean equals(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AbstractInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/@parameter0
<org.picocontainer.injectors.AbstractInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/@parameter1
<org.picocontainer.injectors.AbstractInjector: java.lang.Object newInstance(java.lang.reflect.Constructor,java.lang.Object[])>/@parameter0
<org.picocontainer.injectors.AbstractInjector: java.lang.Object caughtInstantiationException(org.picocontainer.ComponentMonitor,java.lang.reflect.Constructor,java.lang.InstantiationException,org.picocontainer.PicoContainer)>/@parameter1
<org.picocontainer.injectors.AbstractInjector: java.lang.Object caughtIllegalAccessException(org.picocontainer.ComponentMonitor,java.lang.reflect.Constructor,java.lang.IllegalAccessException,org.picocontainer.PicoContainer)>/@parameter1
<org.picocontainer.injectors.AbstractInjector: java.lang.Object caughtInvocationTargetException(org.picocontainer.ComponentMonitor,java.lang.reflect.Member,java.lang.Object,java.lang.reflect.InvocationTargetException)>/@parameter1
<org.picocontainer.injectors.AbstractInjector: java.lang.Object caughtIllegalAccessException(org.picocontainer.ComponentMonitor,java.lang.reflect.Member,java.lang.Object,java.lang.IllegalAccessException)>/@parameter1
<org.springframework.expression.spel.support.ReflectiveMethodExecutor: org.springframework.expression.TypedValue execute(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object[])>/@parameter1
<com.thoughtworks.xstream.converters.basic.StringConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.StringConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.collections.CharArrayConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.CharArrayConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getMapper(java.lang.Class)>/@parameter0
<org.springframework.context.expression.BeanFactoryAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanFactoryAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.BeanFactoryAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanFactoryAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/@parameter2
<org.springframework.context.expression.BeanFactoryAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanFactoryAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanFactoryAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<org.joda.time.format.DateTimeFormatter: void <init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/@parameter0
<org.joda.time.format.DateTimeFormatter: void <init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/@parameter1
<org.springframework.context.expression.BeanFactoryAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.context.expression.BeanFactoryAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>/@parameter1
<org.joda.time.format.DateTimeFormatter: void <init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser,java.util.Locale,boolean,org.joda.time.Chronology,org.joda.time.DateTimeZone,java.lang.Integer)>/@parameter0
<org.joda.time.format.DateTimeFormatter: void <init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser,java.util.Locale,boolean,org.joda.time.Chronology,org.joda.time.DateTimeZone,java.lang.Integer)>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory$1: void <init>(org.springframework.beans.factory.support.AbstractBeanFactory,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter1
<com.thoughtworks.xstream.mapper.CannotResolveClassException: void <init>(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerSingleton(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingleton(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingleton(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingletonFactory(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,boolean)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainer: void <init>(org.picocontainer.MutablePicoContainer)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void removeSingleton(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean containsSingleton(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void beforeSingletonCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void afterSingletonCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isSingletonCurrentlyInCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDisposableBean(java.lang.String,org.springframework.beans.factory.DisposableBean)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerContainedBean(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerContainedBean(java.lang.String,java.lang.String)>/@parameter1
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>/@parameter1
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean hasDependentBean(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.String[] getDependentBeans(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.String[] getDependenciesForBean(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Enum)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroySingleton(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroyBean(java.lang.String,org.springframework.beans.factory.DisposableBean)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$NotConcreteRegistrationException: void <init>(java.lang.Class)>/@parameter0
<com.google.gson.JsonNull: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/@parameter0
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/@parameter1
<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>/@parameter0
<javassist.compiler.TypeChecker: void setThisMethod(javassist.bytecode.MethodInfo)>/@parameter0
<com.google.gson.internal.Streams: void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)>/@parameter0
<com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Time)>/@parameter1
<com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.joda.time.field.UnsupportedDurationField: int compareTo(java.lang.Object)>/@parameter0
<org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap$RandomAccessWrappedList: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection)>/@parameter1
<org.springframework.web.context.request.AbstractRequestAttributesScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/@parameter0
<org.springframework.web.context.request.AbstractRequestAttributesScope: void registerDestructionCallback(java.lang.String,java.lang.Runnable)>/@parameter0
<org.springframework.web.context.request.AbstractRequestAttributesScope: java.lang.Object resolveContextualObject(java.lang.String)>/@parameter0
<org.springframework.web.util.WebUtils: java.lang.String getRealPath(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: boolean equals(java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap: java.lang.Object get(java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap: boolean containsKey(java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>/@parameter0
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object)>/@parameter0
<net.vidageek.mirror.dsl.Mirror: net.vidageek.mirror.dsl.ClassController on(java.lang.Class)>/@parameter0
<net.vidageek.mirror.dsl.Mirror: net.vidageek.mirror.dsl.AccessorsController on(java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object)>/@parameter0
<ognl.ObjectElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.extended.ColorConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.ColorConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.beans.BeanInstantiationException: void <init>(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.beans.BeanInstantiationException: void <init>(java.lang.Class,java.lang.String,java.lang.Throwable)>/@parameter0
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: void <init>(javax.servlet.ServletContext)>/@parameter0
<org.springframework.web.context.support.ServletContextResource: void <init>(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.propertyeditors.FileEditor: void setAsText(java.lang.String)>/@parameter0
<com.google.common.collect.AbstractMultimap: java.util.Collection createCollection(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.common.collect.AbstractMultimap: java.util.Collection getOrCreateCollection(java.lang.Object)>/@parameter0
<org.picocontainer.converters.ShortConverter: java.lang.Short convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.ShortConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: org.joda.time.DateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.iogi.collections.ArrayInstantiator$ArrayFactory: void <init>(br.com.caelum.iogi.collections.ArrayInstantiator,br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.collections.ParametersByIndex)>/@parameter1
<com.google.common.collect.AbstractMultimap: java.util.Collection removeAll(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap: java.util.Collection get(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.google.common.collect.AbstractMultimap: java.util.Collection wrapCollection(java.lang.Object,java.util.Collection)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.google.common.collect.AbstractMultimap: java.util.List wrapList(java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection)>/@parameter0
<com.google.common.collect.AbstractMultimap: java.util.List access$300(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection)>/@parameter1
<ognl.ASTAdd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,java.lang.String)>/@parameter0
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,java.lang.String)>/@parameter1
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,com.google.common.collect.ImmutableList)>/@parameter0
<br.com.caelum.iogi.parameters.Parameter: java.lang.Object notNull(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.iogi.parameters.Parameter: com.google.common.collect.ImmutableList computeNameComponents(java.lang.String)>/@parameter0
<br.com.caelum.iogi.parameters.Parameter: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.MessageInterpolator,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.MethodInfo,javax.validation.Validator,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedListMultimap$Node: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedListMultimap$Node: void <init>(java.lang.Object,java.lang.Object)>/@parameter1
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.converters.extended.JavaClassConverter: boolean canConvert(java.lang.Class)>/@parameter0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter3
<com.thoughtworks.xstream.converters.extended.JavaClassConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.extended.JavaClassConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<org.springframework.beans.factory.annotation.AnnotatedGenericBeanDefinition: void <init>(java.lang.Class)>/@parameter0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>/@parameter0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>/@parameter1
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeCharacters(java.lang.String)>/@parameter0
<org.springframework.web.context.support.ServletContextResourcePatternResolver: java.util.Set doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)>/@parameter0
<org.springframework.web.context.support.ServletContextResourcePatternResolver: void doRetrieveMatchingServletContextResources(javax.servlet.ServletContext,java.lang.String,java.lang.String,java.util.Set)>/@parameter0
<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.conversion.BigIntegerConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BigIntegerConverter: java.math.BigInteger convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BigIntegerConverter: java.math.BigInteger convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.BigIntegerConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BigIntegerConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.thoughtworks.xstream.converters.collections.MapConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.BitSetConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.BitSetConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.collections.MapConverter: java.lang.Object createCollection(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.DefaultConverters: void <init>(br.com.caelum.vraptor.ioc.Container)>/@parameter0
<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.Class findType(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.DateTypeAdapter: java.util.Date deserializeToDate(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.Date)>/@parameter1
<com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.Object[] getArgs(java.lang.reflect.Method)>/@parameter0
<br.com.caelum.vraptor.serialization.I18nMessageSerialization: void <init>(br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.Localization)>/@parameter0
<com.thoughtworks.xstream.XStream: java.lang.String toXML(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.XStream: void toXML(java.lang.Object,java.io.Writer)>/@parameter0
<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>/@parameter0
<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder)>/@parameter0
<org.springframework.asm.Type: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.core.CollectionFactory: boolean isApproximableCollectionType(java.lang.Class)>/@parameter0
<org.springframework.core.CollectionFactory: java.util.Collection createApproximateCollection(java.lang.Object,int)>/@parameter0
<com.google.common.collect.LinkedHashMultimap: java.util.Collection createCollection(java.lang.Object)>/@parameter0
<org.springframework.core.CollectionFactory: java.util.Collection createCollection(java.lang.Class,int)>/@parameter0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject: void addText(java.lang.String)>/@parameter0
<com.google.common.collect.LinkedHashMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter0
<org.springframework.core.CollectionFactory: boolean isApproximableMapType(java.lang.Class)>/@parameter0
<com.google.common.collect.LinkedHashMultimap: java.util.Set removeAll(java.lang.Object)>/@parameter0
<org.springframework.core.CollectionFactory: java.util.Map createApproximateMap(java.lang.Object,int)>/@parameter0
<com.google.common.collect.LinkedHashMultimap: java.util.Set get(java.lang.Object)>/@parameter0
<org.springframework.core.CollectionFactory: java.util.Map createMap(java.lang.Class,int)>/@parameter0
<org.apache.log4j.CategoryKey: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>/@parameter0
<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter)>/@parameter0
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)>/@parameter0
<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>/@parameter0
<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter)>/@parameter0
<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter,int)>/@parameter0
<com.google.common.collect.ArrayListMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.common.collect.ArrayListMultimap: java.util.List get(java.lang.Object)>/@parameter0
<org.hamcrest.core.StringStartsWith: boolean evalSubstringOf(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.XStream: void omitField(java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.XStream: void omitField(java.lang.Class,java.lang.String)>/@parameter1
<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: java.lang.Object instanceFor(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: void start(javax.servlet.ServletContext)>/@parameter0
<org.springframework.beans.propertyeditors.CharArrayPropertyEditor: void setAsText(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$17: void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer)>/@parameter1
<com.thoughtworks.xstream.io.xml.XppReader: java.lang.String getAttribute(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$17: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: void <init>(java.lang.Class)>/@parameter0
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Field reflectField(java.lang.String)>/@parameter0
<ognl.ASTNot: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.web.context.support.ServletContextScope: void <init>(javax.servlet.ServletContext)>/@parameter0
<org.springframework.web.context.support.ServletContextScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/@parameter0
<org.springframework.web.context.support.ServletContextScope: void registerDestructionCallback(java.lang.String,java.lang.Runnable)>/@parameter0
<org.springframework.web.context.support.ServletContextScope: java.lang.Object resolveContextualObject(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParser: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter2
<br.com.caelum.vraptor.interceptor.OutjectResult: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: void <init>(java.lang.Object,int,int)>/@parameter0
<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int compareTo(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>/@parameter0
<com.google.common.collect.SingletonImmutableMap: void <init>(java.util.Map$Entry)>/@parameter0
<com.google.common.collect.SingletonImmutableMap: java.lang.Object get(java.lang.Object)>/@parameter0
<com.google.common.collect.SingletonImmutableMap: boolean containsKey(java.lang.Object)>/@parameter0
<com.google.gson.DefaultDateTypeAdapter: com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<com.google.gson.DefaultDateTypeAdapter: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String unescapeClassName(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String unescapeFieldName(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: boolean stringFoundAt(java.lang.String,int,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,java.util.Map,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter2
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultParametersControl: java.lang.Object selectParam(java.lang.String,java.lang.String[],java.lang.Object[])>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void fillIntoRequest(java.lang.String,br.com.caelum.vraptor.http.MutableRequest)>/@parameter1
<ognl.ASTList: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTStaticField: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandler: void <init>(br.com.caelum.vraptor.interceptor.InterceptorRegistry)>/@parameter0
<ognl.ASTNotIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.conversion.FallbackConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FallbackConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.FallbackConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<com.thoughtworks.xstream.converters.basic.BooleanConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.BooleanConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.basic.BooleanConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<org.picocontainer.containers.ImmutablePicoContainer: void <init>(org.picocontainer.PicoContainer)>/@parameter0
<org.picocontainer.containers.ImmutablePicoContainer: java.lang.Object getComponent(java.lang.Object)>/@parameter0
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Object)>/@parameter0
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/@parameter0
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/@parameter1
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding)>/@parameter0
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/@parameter0
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/@parameter1
<javassist.CtConstructor: void <init>(javassist.bytecode.MethodInfo,javassist.CtClass)>/@parameter0
<ognl.OgnlRuntime: java.lang.Class getTargetClass(java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: java.lang.Class[] getParameterTypes(java.lang.reflect.Method)>/@parameter0
<ognl.OgnlRuntime: java.lang.Class[] findParameterTypes(java.lang.Class,java.lang.reflect.Method)>/@parameter0
<ognl.OgnlRuntime: java.lang.Class[] findParameterTypes(java.lang.Class,java.lang.reflect.Method)>/@parameter1
<org.mockito.asm.util.AbstractVisitor: void printList(java.io.PrintWriter,java.util.List)>/@parameter1
<org.springframework.expression.spel.ast.VariableReference: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: java.security.Permission getPermission(java.lang.reflect.Method)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: java.lang.Class getArgClass(java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: boolean isTypeCompatible(java.lang.Object,java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: boolean areArgsCompatible(java.lang.Object[],java.lang.Class[])>/@parameter0
<ognl.OgnlRuntime: boolean areArgsCompatible(java.lang.Object[],java.lang.Class[],java.lang.reflect.Method)>/@parameter0
<ognl.OgnlRuntime: boolean areArgsCompatible(java.lang.Object[],java.lang.Class[],java.lang.reflect.Method)>/@parameter2
<junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<org.springframework.context.support.ApplicationContextAwareProcessor$1: void <init>(org.springframework.context.support.ApplicationContextAwareProcessor,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: boolean isInstance(ognl.OgnlContext,java.lang.Object,java.lang.String)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter2
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter3
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter4
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter3
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter5
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter6
<org.springframework.util.ObjectUtils: boolean isArray(java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter4
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter5
<org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Constructor getConvertedConstructorAndArgs(ognl.OgnlContext,java.lang.Object,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter3
<ognl.OgnlRuntime: java.lang.reflect.Constructor getConvertedConstructorAndArgs(ognl.OgnlContext,java.lang.Object,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter4
<org.springframework.util.ObjectUtils: java.lang.Object[] toObjectArray(java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter3
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter5
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter6
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>/@parameter0
<ognl.ASTIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter4
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter6
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(boolean[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(byte[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(char[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(double[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(float[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(int[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(long[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(short[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String identityToString(java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String getIdentityHexString(java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeClassName(java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(boolean[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(byte[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(char[])>/@parameter0
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: java.lang.Float convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: java.lang.Float convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(double[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(float[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(int[])>/@parameter0
<ognl.OgnlRuntime: java.lang.Object callStaticMethod(ognl.OgnlContext,java.lang.String,java.lang.String,java.lang.Object[])>/@parameter3
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(long[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(short[])>/@parameter0
<ognl.OgnlRuntime: java.lang.Object callMethod(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.Object callMethod(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object[])>/@parameter3
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/@parameter2
<br.com.caelum.iogi.reflection.NewObject$JavaSetter: void <init>(java.lang.reflect.Method,java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/@parameter2
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/@parameter0
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/@parameter1
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/@parameter2
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/@parameter3
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$7: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.reflect.Method,java.lang.Object)>/@parameter2
<ognl.OgnlRuntime: java.util.Map getFields(java.lang.Class)>/@parameter0
<org.hamcrest.core.SubstringMatcher: boolean matchesSafely(java.lang.String)>/@parameter0
<org.hamcrest.core.SubstringMatcher: void describeMismatchSafely(java.lang.String,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<org.hamcrest.core.SubstringMatcher: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: java.sql.Time convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<org.hamcrest.core.SubstringMatcher: boolean matchesSafely(java.lang.Object)>/@parameter0
<org.springframework.context.support.DelegatingMessageSource: void setParentMessageSource(org.springframework.context.MessageSource)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/@parameter2
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)>/@parameter1
<org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: java.util.List getDeclaredMethods(java.lang.Class,java.lang.String,boolean)>/@parameter1
<ognl.ASTMultiply: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: boolean isMethodCallable(java.lang.reflect.Method)>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getGetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/@parameter2
<com.google.inject.TypeLiteral: boolean equals(java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/@parameter0
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/@parameter1
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/@parameter2
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/@parameter3
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: org.joda.time.LocalDate convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.view.DefaultPathResolver: void <init>(br.com.caelum.vraptor.http.FormatResolver)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPathResolver: java.lang.String pathFor(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<org.hamcrest.object.IsCompatibleType: boolean matchesSafely(java.lang.Class)>/@parameter0
<org.hamcrest.object.IsCompatibleType: void describeMismatchSafely(java.lang.Class,org.hamcrest.Description)>/@parameter0
<org.hamcrest.object.IsCompatibleType: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.hamcrest.object.IsCompatibleType: boolean matchesSafely(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: java.lang.String getNameFor(java.lang.String)>/@parameter0
<org.picocontainer.converters.FileConverter: java.io.File convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.FileConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<ognl.OgnlRuntime: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.Class,java.lang.String)>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method findClosestMatchingMethod(java.lang.Class,java.lang.reflect.Method,java.lang.String,java.lang.Class,boolean)>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method findClosestMatchingMethod(java.lang.Class,java.lang.reflect.Method,java.lang.String,java.lang.Class,boolean)>/@parameter3
<org.mockito.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<ognl.OgnlRuntime: ognl.PropertyAccessor getPropertyAccessor(java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: ognl.ElementsAccessor getElementsAccessor(java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: ognl.NullHandler getNullHandler(java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/@parameter0
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: void <init>(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Number convert(java.lang.Character)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Object convert(java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<ognl.OgnlRuntime: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Class,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.util.ISO8601Util: java.lang.String fromCalendar(java.util.Calendar)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<br.com.caelum.vraptor.util.ISO8601Util: java.util.Calendar toCalendar(java.lang.String)>/@parameter0
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/@parameter3
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/@parameter4
<org.springframework.beans.factory.BeanNotOfRequiredTypeException: void <init>(java.lang.String,java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.beans.factory.BeanNotOfRequiredTypeException: void <init>(java.lang.String,java.lang.Class,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void addAttribute(java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void setValue(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void handleCheckedStateTransition(int,java.lang.String,java.lang.String)>/@parameter2
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/@parameter3
<ognl.OgnlRuntime: java.lang.reflect.Method getReadMethod(java.lang.Class,java.lang.String,int)>/@parameter1
<com.google.common.collect.Count: boolean equals(java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getWriteMethod(java.lang.Class,java.lang.String)>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getWriteMethod(java.lang.Class,java.lang.String,int)>/@parameter1
<org.picocontainer.parameters.CollectionComponentParameter: boolean evaluate(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.expression.spel.SpelParseException: void <init>(java.lang.String,int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>/@parameter0
<com.thoughtworks.xstream.mapper.AttributeMapper: boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$1: void write(com.google.gson.stream.JsonWriter,java.lang.Class)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<org.mockito.cglib.core.DuplicatesPredicate: boolean evaluate(java.lang.Object)>/@parameter0
<org.codehaus.jettison.AbstractXMLStreamReader: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>/@parameter1
<ognl.ASTOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTOr: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTOr: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.core.convert.support.ArrayToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)>/@parameter0
<com.google.gson.JsonSyntaxException: void <init>(java.lang.String,java.lang.Throwable)>/@parameter0
<ognl.ASTDivide: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.StringToBooleanConverter: java.lang.Boolean convert(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.StringToBooleanConverter: java.lang.Object convert(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>/@parameter0
<javassist.bytecode.stackmap.BasicBlock$Mark: int compareTo(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.RootBeanDefinition: boolean isFactoryMethod(java.lang.reflect.Method)>/@parameter0
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue mergeIfRequired(org.springframework.beans.PropertyValue,org.springframework.beans.PropertyValue)>/@parameter1
<org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.MutablePropertyValues: boolean equals(java.lang.Object)>/@parameter0
<org.mockito.cglib.core.EmitUtils$10: org.mockito.asm.Type[] getParameterTypes(org.mockito.cglib.core.MethodInfo)>/@parameter0
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setValue(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$10: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$10: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.resource.DefaultResourceClass: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.ast.OpAnd: void assertTypedValueNotNull(org.springframework.expression.TypedValue)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: boolean requestingStaticFile(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: java.lang.String uriRelativeToContextRoot(javax.servlet.http.HttpServletRequest)>/@parameter0
<javassist.bytecode.ClassFile: void addMethod(javassist.bytecode.MethodInfo)>/@parameter0
<javassist.bytecode.ClassFile: void testExistingMethod(javassist.bytecode.MethodInfo)>/@parameter0
<javassist.bytecode.ClassFile: boolean isDuplicated(javassist.bytecode.MethodInfo,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo,java.util.ListIterator)>/@parameter0
<javassist.bytecode.ClassFile: boolean isDuplicated(javassist.bytecode.MethodInfo,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo,java.util.ListIterator)>/@parameter3
<javassist.bytecode.ClassFile: boolean notBridgeMethod(javassist.bytecode.MethodInfo)>/@parameter0
<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.String boxedTypeName(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.SqlDateConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.SqlDateConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.collections.TreeSetConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest$1: boolean matchesSafely(br.com.caelum.vraptor.restfulie.relation.RelationBuilder)>/@parameter0
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest$1: boolean matchesSafely(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper: void <init>(com.thoughtworks.xstream.core.util.ObjectIdDictionary,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.reflection.NewObject$JavaSetter$1: boolean accepts(java.lang.reflect.Method)>/@parameter0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$JavaSetter$1: boolean accepts(java.lang.Object)>/@parameter0
<org.mockito.asm.MethodWriter: void visitLdcInsn(java.lang.Object)>/@parameter0
<org.picocontainer.converters.ByteConverter: java.lang.Byte convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.ByteConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<org.springframework.beans.propertyeditors.URIEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.util.AntPathMatcher: boolean matchStrings(java.lang.String,java.lang.String,java.util.Map)>/@parameter0
<org.springframework.util.AntPathMatcher: boolean matchStrings(java.lang.String,java.lang.String,java.util.Map)>/@parameter1
<com.thoughtworks.xstream.core.util.PrioritizedList: void add(java.lang.Object,int)>/@parameter0
<com.google.gson.JsonPrimitive: void <init>(java.lang.Number)>/@parameter0
<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>/@parameter0
<com.google.gson.JsonPrimitive: void setValue(java.lang.Object)>/@parameter0
<com.google.gson.JsonPrimitive: boolean isPrimitiveOrString(java.lang.Object)>/@parameter0
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/@parameter0
<com.google.gson.JsonPrimitive: boolean isIntegral(com.google.gson.JsonPrimitive)>/@parameter0
<com.google.common.collect.RegularImmutableMap$NonTerminalEntry: void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>/@parameter0
<com.google.common.collect.RegularImmutableMap$NonTerminalEntry: void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>/@parameter1
<org.mockito.cglib.proxy.MethodInterceptorGenerator$1: java.lang.Object transform(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.adapters.HibernateProxySerializer: com.google.gson.JsonElement serialize(org.hibernate.proxy.HibernateProxy,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.adapters.HibernateProxySerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters: void <init>(org.picocontainer.injectors.ConstructorInjector,java.lang.reflect.Constructor,org.picocontainer.Parameter[],org.picocontainer.ComponentAdapter[])>/@parameter1
<br.com.caelum.vraptor.http.route.RulesTest$1: void <init>(br.com.caelum.vraptor.http.route.RulesTest,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.resource.HttpMethod: br.com.caelum.vraptor.resource.HttpMethod of(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest$MegaConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest$MegaConverter: boolean canConvert(java.lang.Class)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionType(java.lang.Class)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyType(java.lang.Class)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueType(java.lang.Class)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionReturnType(java.lang.reflect.Method,int)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyReturnType(java.lang.reflect.Method,int)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueReturnType(java.lang.reflect.Method,int)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getGenericReturnType(java.lang.reflect.Method,java.lang.Class,int,int)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/@parameter1
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/@parameter1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromClass(java.lang.Class,java.lang.Class,int)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromClass(org.springframework.core.MethodParameter,java.lang.Class,java.lang.Class,int,int,int)>/@parameter1
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>/@parameter1
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>/@parameter3
<javax.xml.namespace.QName: void <init>(java.lang.String)>/@parameter0
<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>/@parameter1
<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter1
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter3
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter4
<javax.xml.namespace.QName: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentFactory wrap(org.picocontainer.ComponentFactory)>/@parameter0
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<com.google.common.base.Predicates$OrPredicate: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.converters.ConvertsNothing: java.lang.Object convert(java.lang.String,java.lang.reflect.Type)>/@parameter0
<org.picocontainer.adapters.AbstractAdapter: void <init>(java.lang.Object,java.lang.Class)>/@parameter0
<org.picocontainer.adapters.AbstractAdapter: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.ComponentMonitor)>/@parameter0
<org.picocontainer.adapters.AbstractAdapter: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.ComponentMonitor)>/@parameter1
<org.picocontainer.adapters.AbstractAdapter: java.lang.ClassCastException newCCE(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.DefaultParameterNameProvider: java.lang.String[] parameterNamesFor(java.lang.reflect.AccessibleObject)>/@parameter0
<br.com.caelum.vraptor.http.DefaultParameterNameProvider: java.lang.reflect.Type[] parameterTypes(java.lang.reflect.AccessibleObject)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$MyColConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: void <init>(org.springframework.beans.PropertyEditorRegistrySupport,java.lang.Object)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$MyColConverter: boolean canConvert(java.lang.Class)>/@parameter0
<org.picocontainer.parameters.BasicComponentParameter$1: void <init>(org.picocontainer.parameters.BasicComponentParameter,org.picocontainer.ComponentAdapter,org.picocontainer.PicoContainer,java.lang.reflect.Type,org.picocontainer.ComponentAdapter)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class)>/@parameter2
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter2
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter3
<org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.util.Assert: void hasLength(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.util.Assert: void hasText(java.lang.String,java.lang.String)>/@parameter0
<org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object)>/@parameter1
<org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.context.support.ApplicationContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.support.ApplicationContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.beans.PropertyEditor findDefaultEditor(java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<javax.servlet.ServletResponseWrapper: void <init>(javax.servlet.ServletResponse)>/@parameter0
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/@parameter2
<org.springframework.context.support.ApplicationContextAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.support.ApplicationContextAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.support.ApplicationContextAwareProcessor: void access$0(org.springframework.context.support.ApplicationContextAwareProcessor,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.test.HttpServletRequestMock: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.http.MutableRequest)>/@parameter1
<br.com.caelum.vraptor.test.HttpServletRequestMock: java.lang.Object getAttribute(java.lang.String)>/@parameter0
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object createProxy(java.lang.Class[],org.picocontainer.PicoContainer,java.lang.ClassLoader)>/@parameter0
<br.com.caelum.vraptor.test.HttpServletRequestMock: void setAttribute(java.lang.String,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.test.HttpServletRequestMock: void setAttribute(java.lang.String,java.lang.Object)>/@parameter1
<org.picocontainer.behaviors.HiddenImplementation: void verifyInterfacesOnly(java.lang.Class[])>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertTextValue(java.lang.Object,java.lang.String,java.beans.PropertyEditor)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertTextValue(java.lang.Object,java.lang.String,java.beans.PropertyEditor)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.http.route.JavaEvaluator: java.lang.Object get(java.lang.Object,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.http.route.JavaEvaluator: java.lang.Object navigate(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter2
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter2
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildIndexedPropertyName(java.lang.String,int)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildKeyedPropertyName(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildKeyedPropertyName(java.lang.String,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ParanamerNameProvider: java.lang.String[] parameterNamesFor(java.lang.reflect.AccessibleObject)>/@parameter0
<ognl.MapElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<org.joda.time.field.MillisDurationField: int compareTo(java.lang.Object)>/@parameter0
<org.mockito.asm.Frame: void push(org.mockito.asm.ClassWriter,java.lang.String)>/@parameter1
<org.mockito.asm.Frame: int type(org.mockito.asm.ClassWriter,java.lang.String)>/@parameter1
<org.springframework.expression.common.CompositeStringExpression: void <init>(java.lang.String,org.springframework.expression.Expression[])>/@parameter0
<org.springframework.core.type.classreading.CachingMetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(org.springframework.core.io.Resource)>/@parameter0
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter1
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter2
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.Iogi$DelegateToAllInstantatiors: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<org.mockito.cglib.core.MethodInfo: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.NumberToCharacterConverter: java.lang.Character convert(java.lang.Number)>/@parameter0
<org.springframework.core.convert.support.NumberToCharacterConverter: java.lang.Object convert(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractSetMultimap: java.util.Set get(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractSetMultimap: java.util.Set removeAll(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractSetMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractSetMultimap: java.util.Collection get(java.lang.Object)>/@parameter0
<org.mockito.cglib.core.EmitUtils: void load_method(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.core.MethodInfo)>/@parameter1
<com.google.common.collect.AbstractSetMultimap: java.util.Collection removeAll(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.scan.JavassistBootstrapGenerator: java.lang.Class generate(java.util.Collection,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter1
<org.mockito.cglib.core.EmitUtils: org.mockito.cglib.core.CodeEmitter begin_method(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.core.MethodInfo)>/@parameter1
<org.mockito.cglib.core.EmitUtils: org.mockito.cglib.core.CodeEmitter begin_method(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.core.MethodInfo,int)>/@parameter1
<org.picocontainer.injectors.SetterInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.SetterInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<com.thoughtworks.xstream.converters.extended.SqlTimeConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.SqlTimeConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.springframework.core.type.classreading.SimpleMetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(org.springframework.core.io.Resource)>/@parameter0
<javassist.bytecode.stackmap.TypeData$TypeName: void add(java.util.ArrayList,javassist.bytecode.stackmap.TypeData)>/@parameter1
<javassist.bytecode.stackmap.TypeData$TypeName: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.reflect.Constructor,java.lang.Object[])>/@parameter0
<com.google.common.collect.Collections2$FilteredCollection: void <init>(java.util.Collection,com.google.common.base.Predicate)>/@parameter0
<com.google.common.collect.Collections2$FilteredCollection: void <init>(java.util.Collection,com.google.common.base.Predicate)>/@parameter1
<org.springframework.beans.BeanUtils: java.beans.PropertyEditor findEditorByConvention(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.scan.NullWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/@parameter0
<org.springframework.beans.BeanUtils: boolean isSimpleProperty(java.lang.Class)>/@parameter0
<org.springframework.beans.BeanUtils: boolean isSimpleValueType(java.lang.Class)>/@parameter0
<com.google.inject.util.Providers$1: void <init>(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy$2: void <init>(org.springframework.beans.factory.support.SimpleInstantiationStrategy,java.lang.reflect.Constructor)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: boolean isSerializable(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$20: void write(com.google.gson.stream.JsonWriter,java.net.InetAddress)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$20: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object readField(java.io.ObjectStreamField,java.lang.Class,java.lang.Object)>/@parameter2
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Comparable,java.lang.Comparable)>/@parameter0
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Comparable,java.lang.Comparable)>/@parameter1
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.aop.scope.ScopedProxyUtils: java.lang.String getTargetBeanName(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.util.List hierarchyFor(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object access$000(com.thoughtworks.xstream.converters.reflection.SerializableConverter,java.io.ObjectStreamField,java.lang.Class,java.lang.Object)>/@parameter3
<org.springframework.web.context.support.ServletContextAwareProcessor: void <init>(javax.servlet.ServletContext,javax.servlet.ServletConfig)>/@parameter0
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter1
<javassist.bytecode.stackmap.BasicBlock$Maker: javassist.bytecode.stackmap.BasicBlock getBBlock(javassist.bytecode.stackmap.BasicBlock$Mark)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: void <init>(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: void <init>(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.util.Assert: void isNotARawType(br.com.caelum.iogi.reflection.Target)>/@parameter0
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibSubclassCreator: java.lang.Object instantiate(java.lang.reflect.Constructor,java.lang.Object[])>/@parameter0
<org.picocontainer.PicoBuilder: void addChildToParent(org.picocontainer.MutablePicoContainer)>/@parameter0
<org.picocontainer.PicoBuilder: org.picocontainer.ComponentFactory buildComponentFactory(org.picocontainer.DefaultPicoContainer,org.picocontainer.ComponentFactory,java.util.Stack)>/@parameter1
<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/@parameter0
<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.Expression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/@parameter0
<com.thoughtworks.xstream.converters.basic.BigDecimalConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.BigDecimalConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<br.com.caelum.iogi.conversion.ByteWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ByteWrapperConverter: java.lang.Byte convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ByteWrapperConverter: java.lang.Byte convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.ByteWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ByteWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.vraptor.VRaptor$1: void <init>(br.com.caelum.vraptor.VRaptor,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<br.com.caelum.vraptor.VRaptor$1: void <init>(br.com.caelum.vraptor.VRaptor,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter2
<com.thoughtworks.xstream.core.util.PresortedSet: void <init>(java.util.Comparator)>/@parameter0
<com.thoughtworks.xstream.core.util.PresortedSet: void <init>(java.util.Comparator,java.util.Collection)>/@parameter0
<com.thoughtworks.xstream.core.util.PresortedSet: boolean add(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter1
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter2
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter3
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter4
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter5
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter6
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter7
<javassist.compiler.AccessorMaker: java.lang.String getConstructor(javassist.CtClass,java.lang.String,javassist.bytecode.MethodInfo)>/@parameter2
<org.springframework.core.style.StylerUtils: java.lang.String style(java.lang.Object)>/@parameter0
<javassist.compiler.AccessorMaker: java.lang.String getMethodAccessor(java.lang.String,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo)>/@parameter3
<org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>/@parameter0
<org.mockito.cglib.core.ClassInfo: boolean equals(java.lang.Object)>/@parameter0
<javassist.compiler.AccessorMaker: javassist.bytecode.MethodInfo getFieldGetter(javassist.bytecode.FieldInfo,boolean)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void <init>(java.lang.Object,java.lang.String,java.lang.String)>/@parameter0
<net.vidageek.mirror.invoke.MethodHandlerByName: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.String)>/@parameter1
<net.vidageek.mirror.invoke.MethodHandlerByName: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.String)>/@parameter2
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void setSource(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean contentEquals(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter0
<javassist.compiler.AccessorMaker: javassist.bytecode.MethodInfo getFieldSetter(javassist.bytecode.FieldInfo,boolean)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean access$0(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean access$0(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter1
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: int access$1(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter0
<com.thoughtworks.xstream.mapper.SecurityMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$5: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$CollectionSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$MyCollection,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$5: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$CollectionSerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval,java.lang.Object,java.lang.reflect.Method)>/@parameter1
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.SetterInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.String,java.lang.String,boolean,boolean)>/@parameter0
<org.picocontainer.injectors.SetterInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.String,java.lang.String,boolean,boolean)>/@parameter1
<org.picocontainer.injectors.SetterInjector: java.lang.Object memberInvocationReturn(java.lang.Object,java.lang.reflect.AccessibleObject,java.lang.Object)>/@parameter1
<org.picocontainer.injectors.SetterInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/@parameter0
<org.picocontainer.injectors.SetterInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/@parameter2
<org.picocontainer.injectors.SetterInjector: boolean isInjectorMethod(java.lang.reflect.Method)>/@parameter0
<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>/@parameter1
<ognl.EnumerationPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.EnumerationPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.EnumerationPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.EnumerationPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.EnumerationPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$2: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$2: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/@parameter3
<org.picocontainer.behaviors.AbstractBehavior: void start(java.lang.Object)>/@parameter0
<org.picocontainer.behaviors.AbstractBehavior: void stop(java.lang.Object)>/@parameter0
<org.picocontainer.behaviors.AbstractBehavior: void dispose(java.lang.Object)>/@parameter0
<org.picocontainer.behaviors.AbstractBehavior: boolean hasLifecycle(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: void <init>(java.lang.String,br.com.caelum.vraptor.resource.ResourceMethod,java.util.Set,br.com.caelum.vraptor.http.route.ParametersControl,int,java.lang.String[])>/@parameter3
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy: java.lang.Object instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/@parameter1
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy: java.lang.Object instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>/@parameter1
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy: java.lang.Object instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>/@parameter3
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: br.com.caelum.vraptor.resource.ResourceMethod resourceMethod(br.com.caelum.vraptor.http.MutableRequest,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: boolean equals(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/@parameter1
<com.thoughtworks.xstream.mapper.AttributeAliasingMapper: java.lang.String attributeForAlias(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl$2: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.beans.propertyeditors.PatternEditor: void setAsText(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder: void <init>(br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder,br.com.caelum.vraptor.serialization.xstream.Serializee)>/@parameter0
<ognl.ASTSequence: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTSequence: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTSequence: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.beans.propertyeditors.CurrencyEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.PropertyAccessorUtils: java.lang.String getPropertyName(java.lang.String)>/@parameter0
<org.springframework.beans.PropertyAccessorUtils: boolean isNestedOrIndexedProperty(java.lang.String)>/@parameter0
<org.springframework.beans.PropertyAccessorUtils: int getFirstNestedPropertySeparatorIndex(java.lang.String)>/@parameter0
<org.springframework.beans.PropertyAccessorUtils: int getLastNestedPropertySeparatorIndex(java.lang.String)>/@parameter0
<org.springframework.beans.PropertyAccessorUtils: int getNestedPropertySeparatorIndex(java.lang.String,boolean)>/@parameter0
<org.springframework.beans.PropertyAccessorUtils: boolean matchesProperty(java.lang.String,java.lang.String)>/@parameter1
<org.picocontainer.converters.IntegerConverter: java.lang.Integer convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.IntegerConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<org.picocontainer.parameters.BasicComponentParameter: java.lang.Object convert(org.picocontainer.Converters,java.lang.Object,java.lang.reflect.Type)>/@parameter1
<org.picocontainer.parameters.BasicComponentParameter: void removeExcludedAdapterIfApplicable(java.lang.Object,java.util.List)>/@parameter0
<org.picocontainer.parameters.BasicComponentParameter: java.lang.Object access$100(org.picocontainer.Converters,java.lang.Object,java.lang.reflect.Type)>/@parameter1
<org.springframework.core.convert.support.StringToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.StringToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.StringToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,java.lang.String,org.springframework.beans.BeansException)>/@parameter1
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,java.lang.String,org.springframework.beans.BeansException)>/@parameter2
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,int,java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,int,java.lang.Class,org.springframework.beans.BeansException)>/@parameter1
<br.com.caelum.iogi.conversion.ShortWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ShortWrapperConverter: java.lang.Short convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ShortWrapperConverter: java.lang.Short convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.ShortWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ShortWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.google.gson.Gson$4: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.Gson$4: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.interceptor.download.FileDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<org.springframework.context.event.GenericApplicationListenerAdapter: void <init>(org.springframework.context.ApplicationListener)>/@parameter0
<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.core.DefaultConverterLookup: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>/@parameter0
<ognl.OgnlException: void <init>(java.lang.String,java.lang.Throwable)>/@parameter0
<ognl.OgnlException: void setEvaluation(ognl.Evaluation)>/@parameter0
<org.springframework.expression.spel.ast.CompoundExpression: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/@parameter1
<org.springframework.core.type.StandardAnnotationMetadata: void <init>(java.lang.Class)>/@parameter0
<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/@parameter0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void start(java.lang.Object)>/@parameter0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void stop(java.lang.Object)>/@parameter0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void dispose(java.lang.Object)>/@parameter0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void doLifecycleMethod(java.lang.Object,java.lang.Class,boolean)>/@parameter0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void doLifecycleMethod(java.lang.Object,java.lang.Class,java.lang.Class,boolean,java.util.Set)>/@parameter0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: boolean hasLifecycle(java.lang.Class)>/@parameter0
<org.springframework.context.support.ReadOnlySystemAttributesMap: boolean containsKey(java.lang.Object)>/@parameter0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.String get(java.lang.Object)>/@parameter0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.String put(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.String put(java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<br.com.caelum.iogi.conversion.FloatWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FloatWrapperConverter: java.lang.Float convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.conversion.FloatWrapperConverter: java.lang.Float convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.FloatWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FloatWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.SingleValueConverter getLocalSingleValueConverter(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean matches(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.other.pack4ge.DumbSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.other.pack4ge.DumbSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean isMatched(java.lang.Object)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean isNotSurplus(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.BeanIsNotAFactoryException: void <init>(java.lang.String,java.lang.Class)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: void describeMismatch(org.hamcrest.Matcher,java.lang.Object)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: void describeMismatch(org.hamcrest.Matcher,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.google.common.collect.AbstractListMultimap: java.util.List get(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractListMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter1
<org.picocontainer.paranamer.BytecodeReadingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<ognl.ObjectNullHandler: java.lang.Object nullMethodResult(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])>/@parameter1
<ognl.ObjectNullHandler: java.lang.Object nullMethodResult(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])>/@parameter3
<ognl.ObjectNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ObjectNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ASTThisVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTThisVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTThisVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<net.vidageek.mirror.provider.java.PureJavaConstructorReflectionProvider: void <init>(java.lang.Class,java.lang.reflect.Constructor)>/@parameter0
<com.google.common.collect.HashMultiset: int add(java.lang.Object,int)>/@parameter0
<com.google.common.collect.HashMultiset: int count(java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyMatches: org.springframework.beans.PropertyMatches forProperty(java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.beans.PropertyMatches: org.springframework.beans.PropertyMatches forProperty(java.lang.String,java.lang.Class,int)>/@parameter0
<org.springframework.beans.PropertyMatches: void <init>(java.lang.String,java.lang.Class,int)>/@parameter0
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.beans.PropertyMatches: int calculateStringDistance(java.lang.String,java.lang.String)>/@parameter0
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: boolean isEqual(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: boolean isEqual(java.lang.Object,java.lang.Object)>/@parameter1
<net.vidageek.mirror.list.SameNameMatcher: boolean accepts(java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.list.SameNameMatcher: boolean accepts(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$4: void write(com.google.gson.stream.JsonWriter,java.lang.Boolean)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$4: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<ognl.OgnlOps: boolean booleanValue(java.lang.Object)>/@parameter0
<ognl.OgnlOps: long longValue(java.lang.Object)>/@parameter0
<ognl.OgnlOps: double doubleValue(java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.math.BigInteger bigIntValue(java.lang.Object)>/@parameter0
<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.math.BigDecimal bigDecValue(java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.String stringValue(java.lang.Object,boolean)>/@parameter0
<ognl.OgnlOps: java.lang.String stringValue(java.lang.Object)>/@parameter0
<ognl.OgnlOps: int getNumericType(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.MethodOverrides: boolean equals(java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Character)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/@parameter0
<net.vidageek.mirror.list.EqualMethodRemover: void <init>(java.lang.reflect.Method)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<net.vidageek.mirror.list.EqualMethodRemover: boolean accepts(java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.list.EqualMethodRemover: boolean sameArgs(java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.list.EqualMethodRemover: boolean sameMethodName(java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.list.EqualMethodRemover: boolean accepts(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.ReferenceByIdMarshaller: java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.StringToEnumConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)>/@parameter0
<org.springframework.context.support.DefaultLifecycleProcessor: void doStart(java.util.Map,java.lang.String)>/@parameter1
<ognl.OgnlOps: int getNumericType(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: int getNumericType(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: int getNumericType(java.lang.Object,java.lang.Object,boolean)>/@parameter0
<ognl.OgnlOps: int getNumericType(java.lang.Object,java.lang.Object,boolean)>/@parameter1
<org.springframework.context.support.DefaultLifecycleProcessor: void doStop(java.util.Map,java.lang.String,java.util.concurrent.CountDownLatch,java.util.Set)>/@parameter1
<ognl.OgnlOps: java.lang.Object binaryOr(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object binaryOr(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object binaryXor(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object binaryXor(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object binaryAnd(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object binaryAnd(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: boolean equal(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: boolean equal(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: boolean less(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: boolean less(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: boolean greater(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: boolean greater(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: boolean in(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: boolean in(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object shiftLeft(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object shiftLeft(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object shiftRight(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object shiftRight(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object unsignedShiftRight(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object unsignedShiftRight(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object remainder(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object remainder(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object negate(java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object bitNegate(java.lang.Object)>/@parameter0
<ognl.ObjectPropertyAccessor: java.lang.Object getPossibleProperty(java.util.Map,java.lang.Object,java.lang.String)>/@parameter1
<ognl.ObjectPropertyAccessor: java.lang.Object getPossibleProperty(java.util.Map,java.lang.Object,java.lang.String)>/@parameter2
<org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>/@parameter0
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter0
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<ognl.ObjectPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ObjectPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void <init>(org.picocontainer.MutablePicoContainer,br.com.caelum.vraptor.ioc.pico.ComponentFactoryRegistry)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void register(java.lang.Class,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void register(java.lang.Class,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerOnScope(java.lang.Class,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerOnScope(java.lang.Class,java.lang.Class)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$4: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$4: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void checkInitialization(java.lang.Class,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void checkInitialization(java.lang.Class,java.lang.Class)>/@parameter1
<org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: java.lang.Object getAttribute(java.lang.String,javax.faces.context.ExternalContext)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: void setAttribute(java.lang.String,java.lang.Object,javax.faces.context.ExternalContext)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: void setAttribute(java.lang.String,java.lang.Object,javax.faces.context.ExternalContext)>/@parameter1
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerComponentFactory(java.lang.Class,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerComponentFactory(java.lang.Class,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: boolean isComponentFactory(java.lang.Class,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: boolean isComponentFactory(java.lang.Class,java.lang.Class)>/@parameter1
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter defaultInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter defaultInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter setterInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter setterInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter4
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter methodInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter methodInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter4
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter methodAnnotatedInjectionAdapter(java.lang.Class,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter methodAnnotatedInjectionAdapter(java.lang.Class,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter4
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: boolean alreadyRegistered(java.lang.Class)>/@parameter0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter fieldAnnotatedInjectionAdapter(java.lang.Class,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter fieldAnnotatedInjectionAdapter(java.lang.Class,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter4
<org.picocontainer.injectors.AdaptingInjection: boolean injectionMethodAnnotated(java.lang.Class)>/@parameter0
<org.picocontainer.injectors.AdaptingInjection: boolean injectionFieldAnnotated(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerComponentFactories(org.picocontainer.MutablePicoContainer,java.util.Map)>/@parameter0
<net.vidageek.mirror.reflect.DefaultReflectionHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/@parameter1
<net.vidageek.mirror.reflect.DefaultReflectionHandler: java.lang.reflect.Field field(java.lang.String)>/@parameter0
<net.vidageek.mirror.reflect.DefaultReflectionHandler: net.vidageek.mirror.reflect.dsl.MethodReflector method(java.lang.String)>/@parameter0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: void addText(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void registerDestroyListener(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$2: java.lang.String getSystemAttribute(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void start(javax.servlet.http.HttpSession)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(javax.servlet.http.HttpSession)>/@parameter0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter2
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter4
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/@parameter0
<br.com.caelum.vraptor.deserialization.DeserializesHandler: void <init>(br.com.caelum.vraptor.deserialization.Deserializers)>/@parameter0
<org.springframework.core.convert.support.CollectionToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.CollectionToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void add(java.util.Collection)>/@parameter0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void add(java.lang.Object,java.lang.reflect.Method,java.lang.Object)>/@parameter2
<org.mockito.cglib.proxy.MethodInterceptorGenerator$2: void processCase(java.lang.Object,org.mockito.asm.Label)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyProvider: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.util.StringUtils: java.lang.String capitalize(java.lang.String)>/@parameter0
<org.mockito.cglib.core.EmitUtils$13: java.lang.Object transform(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>/@parameter0
<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: java.lang.Object createCollection(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.Object key(java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.Object key(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapperImpl)>/@parameter0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.String getMember(java.lang.Class,java.lang.String,java.util.Map)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object,java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.http.route.NoTypeFinder: java.util.Map getParameterTypes(java.lang.reflect.Method,java.lang.String[])>/@parameter0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: void omitField(java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: void omitField(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor getPropertyDescriptorInternal(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getPropertyType(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/@parameter0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: boolean isWritableProperty(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter2
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter3
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.String,java.lang.Object,java.lang.Object,java.beans.PropertyDescriptor)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.String,java.lang.Object,java.lang.Object,java.beans.PropertyDescriptor)>/@parameter2
<org.springframework.beans.BeanWrapperImpl: java.lang.String getFinalPath(org.springframework.beans.BeanWrapper,java.lang.String)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getBeanWrapperForPropertyPath(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object setDefaultValue(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object newValue(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object newValue(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl newNestedBeanWrapper(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder getPropertyNameTokens(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(java.lang.String)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector$2: void <init>(org.picocontainer.injectors.AnnotatedFieldInjector,java.lang.reflect.AccessibleObject)>/@parameter1
<org.springframework.beans.propertyeditors.CharacterEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CharacterEditor: boolean isUnicodeCharacterSequence(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CharacterEditor: void setAsUnicode(java.lang.String)>/@parameter0
<net.vidageek.mirror.invoke.DefaultInvocationHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<net.vidageek.mirror.invoke.DefaultInvocationHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy: void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder)>/@parameter1
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.MethodHandler method(java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder withParameter(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.DefaultRouteBuilder matching(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder access$300(br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder,java.lang.String)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: java.lang.Object growArrayIfNecessary(java.lang.Object,int,java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object growArrayIfNecessary(java.lang.Object,int,java.lang.String)>/@parameter2
<org.springframework.beans.BeanMetadataAttribute: void <init>(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: void growCollectionIfNecessary(java.util.Collection,int,java.lang.String,java.beans.PropertyDescriptor,int)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: void growCollectionIfNecessary(java.util.Collection,int,java.lang.String,java.beans.PropertyDescriptor,int)>/@parameter2
<org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.PropertyValue)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$13: void write(com.google.gson.stream.JsonWriter,java.lang.String)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$13: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/@parameter1
<javassist.bytecode.stackmap.MapMaker: void <init>(javassist.ClassPool,javassist.bytecode.MethodInfo,javassist.bytecode.CodeAttribute)>/@parameter2
<ognl.ArrayElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.VRaptorRequest: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.VRaptorRequest: void setParameter(java.lang.String,java.lang.String[])>/@parameter0
<ognl.ObjectIndexedPropertyDescriptor: void <init>(java.lang.String,java.lang.Class,java.lang.reflect.Method,java.lang.reflect.Method)>/@parameter2
<ognl.ObjectIndexedPropertyDescriptor: void <init>(java.lang.String,java.lang.Class,java.lang.reflect.Method,java.lang.reflect.Method)>/@parameter3
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.support.StandardTypeConverter: void <init>(org.springframework.core.convert.ConversionService)>/@parameter0
<org.springframework.expression.spel.support.StandardTypeConverter: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.expression.spel.support.StandardTypeConverter: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.expression.spel.support.StandardTypeConverter: java.lang.Object convertValue(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.FieldKey: void <init>(java.lang.String,java.lang.Class,int)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.FieldKey: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/@parameter2
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/@parameter3
<br.com.caelum.iogi.collections.ArrayInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.collections.ArrayInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$24: void write(com.google.gson.stream.JsonWriter,java.util.Locale)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$24: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/@parameter1
<ognl.ASTShiftLeft: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean containsBean(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: com.thoughtworks.xstream.XStream getConfiguredXStream(java.lang.reflect.Method,java.lang.Class[])>/@parameter0
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void chooseParam(java.lang.Class[],java.lang.Object[],java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void aliasParams(java.lang.reflect.Method,java.lang.Class[],com.thoughtworks.xstream.XStream)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.DefaultSpringLocator: org.springframework.web.context.ConfigurableWebApplicationContext getApplicationContext(javax.servlet.ServletContext)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void <init>(com.thoughtworks.xstream.XStream,java.io.Writer,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter2
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void preConfigure(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void setRoot(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: java.util.Collection normalizeList(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void setAlias(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: java.util.Set findElementTypes(java.util.Collection)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry$AttributeSetterComponentMonitor: void instantiated(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Object,java.lang.Object[],long)>/@parameter2
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean containsLocalBean(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: void setConversionService(org.springframework.core.convert.ConversionService)>/@parameter0
<com.google.common.collect.LinkedListMultimap$ValueForKeyIterator: void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: void addBeanPostProcessor(org.springframework.beans.factory.config.BeanPostProcessor)>/@parameter0
<com.google.common.collect.LinkedListMultimap$ValueForKeyIterator: void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object,int)>/@parameter1
<com.google.common.collect.LinkedListMultimap$ValueForKeyIterator: void add(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.config.BeanDefinition getMergedBeanDefinition(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isFactoryBean(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isCurrentlyInCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String transformedBeanName(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String originalBeanName(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedLocalBeanDefinition(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: void checkMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object[])>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: void clearMergedBeanDefinition(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Class[])>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object evaluateBeanDefinitionString(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<ognl.ASTRemainder: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.mockito.internal.stubbing.StubberImpl: java.lang.Object when(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: void markBeanAsCreated(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isBeanEligibleForMetadataCaching(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean removeSingletonIfCreatedForTypeCheckOnly(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter2
<org.springframework.core.io.support.PathMatchingResourcePatternResolver$VfsResourceMatchingDelegate: java.util.Set findMatchingResources(org.springframework.core.io.Resource,java.lang.String,org.springframework.util.PathMatcher)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isBeanNameInUse(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean requiresDestruction(java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: void registerDisposableBeanIfNecessary(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: void registerDisposableBeanIfNecessary(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter1
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter1
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter2
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter3
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter4
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.basic.BigIntegerConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.BigIntegerConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.apache.log4j.Hierarchy: void fireRemoveAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)>/@parameter1
<org.mockito.internal.matchers.CapturingMatcher: boolean matches(java.lang.Object)>/@parameter0
<org.springframework.context.support.ContextTypeMatchClassLoader: java.lang.Class loadClass(java.lang.String)>/@parameter0
<org.springframework.web.context.request.SessionScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter1
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter2
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: boolean canConvert(java.lang.Class)>/@parameter0
<org.springframework.beans.BeansException: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.propertyeditors.InputStreamEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.AbstractPropertyAccessor: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/@parameter0
<org.springframework.beans.AbstractPropertyAccessor: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/@parameter1
<org.springframework.util.PropertyPlaceholderHelper: java.lang.String replacePlaceholders(java.lang.String,org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver)>/@parameter0
<org.springframework.util.PropertyPlaceholderHelper: java.lang.String parseStringValue(java.lang.String,org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver,java.util.Set)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest$AnyController: void <init>(br.com.caelum.vraptor.Validator)>/@parameter0
<org.picocontainer.injectors.AnnotatedMethodInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.AnnotatedMethodInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<com.google.inject.util.Providers: com.google.inject.Provider of(java.lang.Object)>/@parameter0
<javassist.CtMethod: void <init>(javassist.bytecode.MethodInfo,javassist.CtClass)>/@parameter0
<ognl.ArrayPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ArrayPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>/@parameter0
<net.vidageek.mirror.DefaultClassController: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.basic.StringBufferConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.basic.StringBufferConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.Map,java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.List)>/@parameter2
<com.google.common.collect.Iterators$8: void <init>(java.util.Iterator,com.google.common.base.Function)>/@parameter1
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addIndexedArgumentValue(int,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter1
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeIndexedArgumentValue(java.lang.Integer,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter1
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter0
<br.com.caelum.vraptor.test.HttpSessionMock: void <init>(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.test.HttpSessionMock: java.lang.Object getAttribute(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.test.HttpSessionMock: void setAttribute(java.lang.String,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.test.HttpSessionMock: void setAttribute(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: boolean canAccess(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)>/@parameter2
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: void <init>(int,java.lang.reflect.AccessibleObject,java.lang.String)>/@parameter1
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: void <init>(int,java.lang.reflect.AccessibleObject,java.lang.String)>/@parameter2
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: void <init>(int,java.lang.reflect.AccessibleObject,java.lang.String,org.picocontainer.injectors.SingleMemberInjector$1)>/@parameter1
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: void <init>(int,java.lang.reflect.AccessibleObject,java.lang.String,org.picocontainer.injectors.SingleMemberInjector$1)>/@parameter2
<javax.servlet.ServletRequestWrapper: void <init>(javax.servlet.ServletRequest)>/@parameter0
<org.springframework.aop.support.AopUtils: boolean isCglibProxy(java.lang.Object)>/@parameter0
<org.springframework.aop.support.AopUtils: java.lang.Class getTargetClass(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)>/@parameter1
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter3
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: boolean shouldUnmarshalField(java.lang.reflect.Field)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void handleUnknownField(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.util.SystemPropertyUtils$SystemPropertyPlaceholderResolver: void <init>(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void handleUnknownField(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)>/@parameter3
<org.springframework.core.annotation.AnnotationUtils: java.util.Map getAnnotationAttributes(java.lang.annotation.Annotation,boolean)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter1
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>/@parameter0
<ognl.ASTTest: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.picocontainer.paranamer.CachingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<ognl.ASTTest: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTTest: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)>/@parameter2
<org.hamcrest.Description$NullDescription: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>/@parameter0
<org.hamcrest.Description$NullDescription: org.hamcrest.Description appendValue(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.Type)>/@parameter0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.TypeVariable)>/@parameter0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.WildcardType)>/@parameter0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.ParameterizedType)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$23: void write(com.google.gson.stream.JsonWriter,java.util.Calendar)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$23: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Collection scan(br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Map scanBasePackages(java.util.List,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter1
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void scanPackage(java.lang.String,org.scannotation.AnnotationDB,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void scanPackage(java.lang.String,org.scannotation.AnnotationDB,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter2
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: boolean packagesContains(java.util.List,java.lang.String)>/@parameter1
<org.springframework.expression.spel.ast.OpOr: void assertTypedValueNotNull(org.springframework.expression.TypedValue)>/@parameter0
<net.vidageek.mirror.invoke.ConstructorHandlerByConstructor: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class,java.lang.reflect.Constructor)>/@parameter1
<br.com.caelum.vraptor.restfulie.serialization.MethodValueSupportConverter: boolean canConvert(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.MethodValueSupportConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.MethodValueSupportConverter: void writeTag(java.lang.Object,java.lang.reflect.Method,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.util.SystemPropertyUtils: java.lang.String resolvePlaceholders(java.lang.String,boolean)>/@parameter0
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>/@parameter0
<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>/@parameter0
<net.vidageek.mirror.get.DefaultGetterHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<net.vidageek.mirror.get.DefaultGetterHandler: java.lang.Object field(java.lang.reflect.Field)>/@parameter0
<org.hamcrest.core.IsEqual: void <init>(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean areArraysEqual(java.lang.Object,java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean areArraysEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean areArrayLengthsEqual(java.lang.Object,java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean areArrayLengthsEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean areArrayElementsEqual(java.lang.Object,java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean areArrayElementsEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean isArray(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>/@parameter0
<org.hamcrest.core.AllOf: boolean matches(java.lang.Object,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.proxy.JavassistProxifier: boolean isProxy(java.lang.Object)>/@parameter0
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)>/@parameter0
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<org.springframework.web.context.support.WebApplicationContextUtils: void registerWebApplicationScopes(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,javax.servlet.ServletContext)>/@parameter1
<org.springframework.web.context.support.WebApplicationContextUtils: void registerEnvironmentBeans(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,javax.servlet.ServletContext,javax.servlet.ServletConfig)>/@parameter1
<org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>/@parameter0
<net.vidageek.mirror.invoke.MethodHandlerByMethod: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter1
<net.vidageek.mirror.invoke.MethodHandlerByMethod: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter2
<net.vidageek.mirror.invoke.MethodHandlerByMethod: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter3
<org.hamcrest.core.IsCollectionContaining: boolean matchesSafely(java.lang.Iterable,org.hamcrest.Description)>/@parameter0
<org.hamcrest.core.IsCollectionContaining: org.hamcrest.Matcher hasItem(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsCollectionContaining: boolean matchesSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.springframework.beans.propertyeditors.CustomBooleanEditor: void setAsText(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.core.util.Fields: void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.core.util.Fields: java.lang.Object read(java.lang.reflect.Field,java.lang.Object)>/@parameter1
<org.apache.commons.fileupload.servlet.ServletRequestContext: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<org.hamcrest.TypeSafeDiagnosingMatcher: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.TypeSafeDiagnosingMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.ProxyConverter: boolean canConvert(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.ProxyConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<ognl.OgnlContext: void setClassResolver(ognl.ClassResolver)>/@parameter0
<ognl.OgnlContext: void setTypeConverter(ognl.TypeConverter)>/@parameter0
<ognl.OgnlContext: void setMemberAccess(ognl.MemberAccess)>/@parameter0
<ognl.OgnlContext: void setRoot(java.lang.Object)>/@parameter0
<ognl.OgnlContext: void setLastEvaluation(ognl.Evaluation)>/@parameter0
<ognl.OgnlContext: void setCurrentObject(java.lang.Object)>/@parameter0
<ognl.OgnlContext: void setCurrentType(java.lang.Class)>/@parameter0
<ognl.OgnlContext: void setPreviousType(java.lang.Class)>/@parameter0
<ognl.OgnlContext: void setCurrentEvaluation(ognl.Evaluation)>/@parameter0
<ognl.OgnlContext: void setRootEvaluation(ognl.Evaluation)>/@parameter0
<ognl.OgnlContext: void pushEvaluation(ognl.Evaluation)>/@parameter0
<ognl.OgnlContext: boolean containsKey(java.lang.Object)>/@parameter0
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/@parameter0
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTNegate: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.OgnlContext: boolean equals(java.lang.Object)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder: boolean matchesSafely(java.lang.Iterable,org.hamcrest.Description)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder: boolean matchesSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$15: void write(com.google.gson.stream.JsonWriter,java.math.BigInteger)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$15: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: boolean isProxy(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: void initialize(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: org.hibernate.proxy.LazyInitializer getInitializer(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: java.lang.Class getActualClass(java.lang.Object)>/@parameter0
<org.springframework.beans.propertyeditors.StringArrayPropertyEditor: void setAsText(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.validator.MessageConverter: boolean canConvert(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.validator.MessageConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<ognl.ASTStaticMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)>/@parameter3
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String decodeNode(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String decodeAttribute(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String encodeAttribute(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/@parameter0
<org.mockito.cglib.proxy.Enhancer$5: void processCase(java.lang.Object,org.mockito.asm.Label)>/@parameter0
<org.slf4j.helpers.Util: void report(java.lang.String)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.AnnotatedFieldInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<com.google.inject.internal.MoreTypes$WildcardTypeImpl: boolean equals(java.lang.Object)>/@parameter0
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/l6_$$A_1#_1073
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/l6_$$A_2#_1075
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/replaced_$$A_1#_175
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/replaced_$$A_3#_188
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack18
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack17
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack15
<ognl.ASTProperty: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_114
<javassist.bytecode.FieldInfo: void prune(javassist.bytecode.ConstPool)>/invisibleAnnotations#_89
<javassist.bytecode.FieldInfo: void prune(javassist.bytecode.ConstPool)>/visibleAnnotations#_96
<javassist.bytecode.FieldInfo: void prune(javassist.bytecode.ConstPool)>/signature#_103
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack31_$$A_1
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack21_$$A_1
<java.lang.invoke.MemberName: java.lang.String toString()>/$stack24_$$A_1
<java.lang.invoke.MemberName: java.lang.String toString()>/$stack12_$$A_1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/propKey_$$A_2#_170
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/propValue_$$A_2#_173
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/actualInnerBeanName_$$A_1#_260
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack4
<br.com.caelum.vraptor.interceptor.Graph: java.util.List findCycle()>/node#_117
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getValue()>/event#_180
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getValue()>/event_$$A_2#_197
<ognl.SimpleNode: java.lang.Object evaluateGetValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6_$$A_1
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/result_$$A_4#_258
<com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/timeZone#_56
<java.util.AbstractMap: java.lang.String toString()>/l4#_555
<java.util.AbstractMap: java.lang.String toString()>/l5#_556
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/paramNames_$$A_4#_193
<org.springframework.beans.factory.support.ConstructorResolver: void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)>/factoryClass#_300
<org.springframework.beans.factory.support.ConstructorResolver: void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)>/factoryClass_$$A_1#_303
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryBean#_353
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryClass_$$A_1#_368
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryClass_$$A_3#_399
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/paramNames_$$A_2#_459
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/valueHolder_$$A_1#_663
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/valueHolder_$$A_2#_669
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/convertedValue_$$A_2#_686
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/convertedValue_$$A_5#_723
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/argValue_$$A_2#_765
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/argValue_$$A_3#_768
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/argValue_$$A_4#_771
<sun.misc.URLClassPath$1: boolean next()>/$stack7
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveParameterType(org.springframework.core.MethodParameter,java.lang.Class)>/$stack10_$$A_1
<org.springframework.core.MethodParameter: java.lang.String getParameterName()>/$stack7
<org.springframework.core.MethodParameter: java.lang.String getParameterName()>/$stack7_$$A_1
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/arg_$$A_2#_204
<ognl.IteratorPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/result#_51
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack19_$$A_1
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack16_$$A_1
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack7_$$A_1
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/instance_$$A_1#_692
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/instance_$$A_4#_696
<org.codehaus.jettison.json.JSONArray: java.lang.Object opt(int)>/$stack4
<javassist.CtBehavior: void setExceptionTypes(javassist.CtClass[])>/i#2#_352
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/parentReferenceKey_$$A_3#_65
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/expr#_135
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/assignedValue_$$A_1#_150
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalOrExpression()>/expr#_171
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalAndExpression()>/expr#_183
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatSumExpression()>/expr#_233
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatProductExpression()>/expr#_250
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatNode()>/expr#_316
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatNode()>/expr_$$A_1#_318
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatBeanReference()>/beanNameToken_$$A_1#_473
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatBeanReference()>/beanNameToken_$$A_2#_476
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatInlineList()>/closingCurly#_539
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatInlineList()>/closingCurly_$$A_1#_548
<ognl.ASTBitAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_53
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/invisibleAnnotations#_139
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/visibleAnnotations#_146
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/parameterInvisibleAnnotations#_153
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/parameterVisibleAnnotations#_160
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/signature#_176
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack34_$$A_2
<ognl.MapPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/result_$$A_3#_76
<ognl.MapPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/result_$$A_5#_82
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/result_$$A_2#_394
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/result_$$A_2#_407
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object createBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ex#2#_446
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/$stack76
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ex#25#_532
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/exposedObject_$$A_1#_519
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class predictBeanType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/beanClass_$$A_1#_576
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/factoryClass#_619
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/factoryClass_$$A_1#_624
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack6
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack6_$$A_1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance#_733
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance_$$A_1#_736
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getNonSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance#_769
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getNonSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance_$$A_1#_772
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object resolveBeforeInstantiation(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/bean_$$A_2#_822
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()>/$stack3_$$A_1
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getCollectionType()>/$stack3
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getCollectionType()>/$stack3_$$A_1
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getMapKeyType()>/$stack3
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getMapKeyType()>/$stack3_$$A_1
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getMapValueType()>/$stack3
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getMapValueType()>/$stack3_$$A_1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/convertedValue_$$A_2#_1330
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/wrappedBean_$$A_1#_1413
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/wrappedBean_$$A_3#_1426
<com.thoughtworks.xstream.converters.basic.CharConverter: java.lang.String toString(java.lang.Object)>/$stack5_$$A_1
<com.google.gson.TreeTypeAdapter: com.google.gson.TypeAdapter delegate()>/$stack5_$$A_1
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/arrayElementType#10_$$A_2#_92
<java.util.AbstractCollection: java.lang.String toString()>/l3#_461
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_7#_141
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target_$$A_3#_222
<sun.misc.URLClassPath$2: boolean next()>/$stack7
<java.lang.String: java.lang.String valueOf(java.lang.Object)>/$stack1_$$A_1
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/beanName_$$A_1#_479
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/value_$$A_1#_715
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)>/object#_803
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/l10#_2560
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/l11#_2561
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/l10_$$A_1#_2563
<com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter: java.lang.String toString(java.lang.Object)>/$stack2_$$A_1
<com.thoughtworks.xstream.io.path.PathTrackingWriter: void startNode(java.lang.String)>/$stack7
<com.thoughtworks.xstream.io.path.PathTrackingWriter: void startNode(java.lang.String,java.lang.Class)>/$stack8
<com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)>/$stack4
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: com.thoughtworks.xstream.converters.Converter getConverter()>/$stack3_$$A_1
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack18_$$A_2
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/$stack20
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/$stack21
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/l8_$$A_1#_1350
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack89_$$A_2
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/indexValue_$$A_1#_83
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/index_$$A_1#_84
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/reference#7_$$A_1#_99
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedKey_$$A_1#_199
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedValue_$$A_1#_200
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/methodName_$$A_1#_113
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>/requiredTypeToUse_$$A_1#_341
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/newObj#_125
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/nextKey#_126
<org.springframework.beans.PropertyEditorRegistrySupport: void copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry,java.lang.String)>/$stack46
<ognl.ASTXor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_53
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getObjectType()>/$stack3
<com.thoughtworks.xstream.core.TreeMarshaller: void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/converter_$$A_1#_48
<ognl.ASTBitOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_53
<org.picocontainer.behaviors.Stored: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/instance#_89
<org.picocontainer.parameters.ComponentParameter$1: java.lang.Object resolveInstance()>/result_$$A_1#_136
<org.picocontainer.parameters.ComponentParameter$1: java.lang.Object resolveInstance()>/result_$$A_2#_138
<java.util.Hashtable: java.lang.String toString()>/$stack16_$$A_2
<java.util.Hashtable: java.lang.String toString()>/$stack19_$$A_2
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/actualValue_$$A_8#_258
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/lastKey_$$A_2#_87
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/l2#_1012
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/l3#_1013
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/converter_$$A_1#_56
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/methodName_$$A_2#_88
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/declaringClassName_$$A_2#_90
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/possiblyConvertedNewValue_$$A_1#_221
<sun.misc.URLClassPath: java.net.URL findResource(java.lang.String,boolean)>/$stack8
<sun.misc.URLClassPath: sun.misc.Resource getResource(java.lang.String,boolean)>/$stack9
<org.picocontainer.injectors.AnnotatedFieldInjector: void initializeInjectionMembersAndTypeLists()>/drillInto#_51
<javassist.CtClassType: void modifyClassConstructor(javassist.bytecode.ClassFile,javassist.bytecode.Bytecode,int,int)>/m#_1475
<org.codehaus.jettison.json.JSONObject: java.lang.String numberToString(java.lang.Number)>/s#_563
<com.google.gson.internal.Excluder$1: com.google.gson.TypeAdapter delegate()>/$stack5_$$A_1
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/object_$$A_1#_102
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/object_$$A_4#_162
<com.thoughtworks.xstream.core.ReferenceByXPathMarshaller: java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>/$stack12_$$A_1
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/type_$$A_2#_410
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>/l10_$$A_6#_1280
<ognl.ASTAdd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_62
<com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller: java.lang.Object getReferenceKey(java.lang.String)>/$stack12
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.String toString()>/method#_124
<java.util.logging.Level: java.util.logging.Level findLevel(java.lang.String)>/l1#_351
<java.util.logging.Level: java.util.logging.Level findLevel(java.lang.String)>/l1_$$A_1#_361
<java.util.logging.Level: java.util.logging.Level findLevel(java.lang.String)>/l1_$$A_2#_365
<ognl.OgnlRuntime: java.lang.Class classForName(ognl.OgnlContext,java.lang.String)>/$stack13
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/result_$$A_5#_1169
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/str#_560
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/m#_1400
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack18
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>/$stack7
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>/$stack9
<ognl.ASTMultiply: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_54
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/m_$$A_1#_2270
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/m_$$A_1#_2301
<javassist.bytecode.ClassFile: void prune()>/invisibleAnnotations#_212
<javassist.bytecode.ClassFile: void prune()>/visibleAnnotations#_219
<javassist.bytecode.ClassFile: void prune()>/signature#_226
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper: java.lang.String toString()>/$stack3_$$A_1
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_3#_157
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_7#_173
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_8#_178
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_12#_212
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/convertedValue_$$A_3#_370
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/elementType_$$A_1#_470
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/keyType_$$A_1#_553
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/valueType_$$A_1#_554
<org.picocontainer.PicoBuilder: org.picocontainer.MutablePicoContainer build()>/componentFactory_$$A_5#_183
<br.com.caelum.vraptor.ioc.pico.PicoProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/picoContainer#_189
<br.com.caelum.vraptor.ioc.pico.PicoProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/picoContainer_$$A_2#_189
<com.thoughtworks.xstream.mapper.AttributeAliasingMapper: java.lang.String attributeForAlias(java.lang.String)>/$stack5
<ognl.ASTSequence: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_2#_63
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.Parameter$Resolver resolve(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,org.picocontainer.ComponentAdapter,java.lang.reflect.Type,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/componentAdapter0#_87
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/expectedTypeName#12_$$A_2#_184
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/expectedTypeName#12_$$A_7#_204
<org.springframework.context.event.GenericApplicationListenerAdapter: boolean supportsEventType(java.lang.Class)>/typeArg#_55
<org.springframework.context.event.GenericApplicationListenerAdapter: boolean supportsEventType(java.lang.Class)>/typeArg_$$A_1#_59
<org.springframework.expression.spel.ast.CompoundExpression: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/result#_52
<org.springframework.expression.spel.ast.CompoundExpression: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/result_$$A_2#_57
<org.springframework.expression.spel.ast.CompoundExpression: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/ctx#_76
<org.springframework.expression.spel.ast.CompoundExpression: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/ctx_$$A_2#_80
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/$stack6
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)>/$stack6
<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>/$stack4_$$A_1
<ognl.OgnlOps: java.lang.String stringValue(java.lang.Object,boolean)>/result_$$A_1#_303
<com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Character)>/$stack3_$$A_1
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/result_$$A_19#_589
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/result_$$A_21#_590
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/result_$$A_23#_591
<java.beans.Introspector: java.beans.PropertyDescriptor mergePropertyDescriptor(java.beans.IndexedPropertyDescriptor,java.beans.PropertyDescriptor)>/l6#_882
<java.beans.Introspector: java.beans.PropertyDescriptor mergePropertyDescriptor(java.beans.IndexedPropertyDescriptor,java.beans.PropertyDescriptor)>/l7#_883
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>/object_$$A_2#_76
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)>/propertyValue#_555
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)>/propertyValue_$$A_1#_558
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/method_$$A_2#_76
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/elem#_784
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_4#_745
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_9#_771
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_11#_798
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack46
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue_$$A_3#_961
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue#59_$$A_1#_996
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/pd#65_$$A_1#_1038
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/pd#65_$$A_2#_1079
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack46_$$A_1
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/writeMethodToUse#_67
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/bean#_245
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/bean_$$A_1#_302
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/bean_$$A_2#_315
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/bean_$$A_3#_336
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/object_$$A_3#_1429
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getArgumentValue(int,java.lang.Class,java.lang.String,java.util.Set)>/valueHolder_$$A_1#_347
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/field_$$A_4#_326
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_6#_377
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/field_$$A_6#_389
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/type_$$A_16#_403
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_8#_406
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_11#_426
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/runtimeTypeAdapter#_55
<com.google.common.base.Objects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>/$stack2_$$A_1
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result#_493
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_1#_496
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_4#_505
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_6#_511
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_7#_514
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_8#_517
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result#_541
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_1#_545
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_3#_557
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_5#_565
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_6#_569
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_7#_573
<java.text.AttributedString$AttributeMap: java.lang.Object get(java.lang.Object)>/$stack7
<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.String keyToString(com.google.gson.JsonElement)>/$stack15
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.String keyToString(com.google.gson.JsonElement)>/$stack11
<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>/$stack2
<net.vidageek.mirror.list.BackedMirrorList: java.lang.Object get(int)>/$stack3
<br.com.caelum.iogi.conversion.LongWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/listSetter#_72
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack23
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTProperty: java.lang.String toString()>/$stack6
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/$stack54
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/clazz#16#_96
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/field#23#_97
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/$stack46
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/$stack36
<java.util.Collections$3: java.lang.Object nextElement()>/$stack2
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack7
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>/$stack3
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>/$stack8
<org.springframework.expression.spel.ast.OpGE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpGE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<ognl.ObjectArrayPool: java.lang.Object[] create(int)>/$stack3
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object)>/result#_161
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object,java.lang.Object)>/result#_169
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withoutArgs()>/$stack2
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.ClassLoader combineLoadersOf(java.lang.Class[])>/$stack2
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withArgs(java.lang.Class[])>/$stack6
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.ClassLoader combineLoadersOf(java.lang.Class,java.lang.Class[])>/$stack13
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/$stack4
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/$stack3
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String attributeForAlias(java.lang.String)>/$stack3
<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)>/$stack5
<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/$stack5
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<com.google.common.collect.Iterators: java.lang.Object get(java.util.Iterator,int)>/t#_836
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack5
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/$stack10
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/eval#_113
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/previous#_114
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/getter#_119
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext)>/$stack5
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Class)>/$stack8
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack10
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/$stack4
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/$stack4
<ognl.ASTRootVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack3
<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>/$stack3
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack19
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack20
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack21
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack24
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack66
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/getter#_78
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findGetter(java.lang.Object,java.lang.String)>/$stack15
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findSetter(java.lang.Object,java.lang.String,java.lang.Class)>/$stack17
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack70
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<java.util.AbstractMap$2$1: java.lang.Object next()>/$stack4
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>/$stack6
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/$stack4
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/$stack4
<javassist.CtNewWrappedConstructor: javassist.CtConstructor wrapped(javassist.CtClass[],javassist.CtClass[],int,javassist.CtMethod,javassist.CtMethod$ConstParameter,javassist.CtClass)>/$stack11
<java.lang.invoke.MemberName: java.lang.String getName(java.lang.Object)>/$stack2
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack76
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack63
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack60
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack23
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack19
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object evaluate(org.springframework.beans.factory.config.TypedStringValue)>/result#_210
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object evaluate(java.lang.Object)>/$stack6
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack23
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack59
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack25
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/bean#_322
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: boolean matchesSafely(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack2
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: void describeMismatchSafely(br.com.caelum.vraptor.resource.ResourceMethod,org.hamcrest.Description)>/$stack5
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: void describeMismatchSafely(br.com.caelum.vraptor.resource.ResourceMethod,org.hamcrest.Description)>/$stack9
<org.springframework.expression.spel.support.ReflectionHelper: void convertArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.Object,int[],java.lang.Integer)>/$stack33
<org.springframework.expression.spel.support.ReflectionHelper: void convertArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.Object,int[],java.lang.Integer)>/$stack16
<org.springframework.expression.spel.support.ReflectionHelper: void convertAllArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.reflect.Method)>/$stack33
<org.springframework.expression.spel.support.ReflectionHelper: void convertAllArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.reflect.Method)>/$stack13
<org.springframework.expression.spel.support.ReflectionHelper: void convertAllArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.reflect.Method)>/$stack16
<br.com.caelum.iogi.reflection.Target: java.lang.Class getClassType()>/$stack2
<br.com.caelum.iogi.reflection.Target: java.lang.Class findRawClassType(java.lang.reflect.Type)>/$stack6
<br.com.caelum.iogi.reflection.Target: java.lang.Object cast(java.lang.Object)>/$stack2
<br.com.caelum.iogi.reflection.Target: java.lang.Object cast(java.lang.Object)>/$stack4
<br.com.caelum.iogi.reflection.Target: boolean isInstantiable()>/$stack1
<br.com.caelum.iogi.reflection.Target: boolean isInstantiable()>/$stack3
<br.com.caelum.iogi.reflection.Target: boolean isInstantiable()>/$stack7
<br.com.caelum.iogi.reflection.Target: java.lang.Class arrayElementType()>/$stack1
<br.com.caelum.iogi.reflection.Target: java.lang.String toString()>/$stack5
<br.com.caelum.iogi.reflection.Target: br.com.caelum.iogi.reflection.Constructors constructors(br.com.caelum.iogi.spi.ParameterNamesProvider,br.com.caelum.iogi.DependenciesInjector)>/$stack9
<br.com.caelum.iogi.reflection.Target: boolean isParameterized()>/$stack1
<org.springframework.beans.factory.config.BeanExpressionContext: java.lang.Object getObject(java.lang.String)>/$stack8
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack25
<com.thoughtworks.xstream.io.xml.AbstractPullReader: boolean hasMoreChildren()>/$stack1
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack4
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()>/$stack10
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()>/$stack8
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getNodeName()>/$stack4
<com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack13
<com.google.gson.internal.bind.ObjectTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/typeAdapter#_100
<br.com.caelum.iogi.MultiInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack17
<org.picocontainer.injectors.MethodInjector: java.lang.reflect.Method getInjectorMethod()>/$stack6
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Number convert(java.lang.Number)>/$stack3
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Object convert(java.lang.Object)>/$stack3
<ognl.SimpleNode: int getIndexInParent()>/$stack9
<ognl.SimpleNode: java.lang.Object evaluateGetValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/$stack17
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/$stack22
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack14
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack19
<com.thoughtworks.xstream.io.xml.AbstractXmlReader: java.lang.String unescapeXmlName(java.lang.String)>/$stack2
<java.util.ArrayList: java.lang.Object get(int)>/$stack2
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>/l3#_446
<java.util.ArrayList: java.lang.Object remove(int)>/l2#_495
<ognl.SimpleNode: void flattenTree()>/$stack27
<com.thoughtworks.xstream.io.ReaderWrapper: java.lang.String getNodeName()>/$stack2
<com.thoughtworks.xstream.io.ReaderWrapper: java.lang.String getValue()>/$stack2
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack18
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack19
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack20
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack23
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack24
<javax.crypto.PermissionsEnumerator: java.lang.Object nextElement()>/$stack1
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.util.CollectionUtils: java.lang.Class findCommonElementType(java.util.Collection)>/val#_290
<com.google.gson.Gson$FutureTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack4
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>/$stack14
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>/$stack14
<java.util.AbstractMap: boolean equals(java.lang.Object)>/l6#_490
<java.util.AbstractMap: boolean equals(java.lang.Object)>/$stack19
<br.com.caelum.iogi.ObjectInstantiator: void expectingAConcreteTarget(br.com.caelum.iogi.reflection.Target)>/$stack7
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/beanClass#_154
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/$stack163
<org.springframework.beans.factory.support.AbstractBeanDefinition: int getResolvedAutowireMode()>/$stack8
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/sourceValue#_684
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/$stack31
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object resolveAutowiredArgument(org.springframework.core.MethodParameter,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack7
<br.com.caelum.iogi.conversion.StringConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.iogi.conversion.StringConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/$stack3
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState)>/$stack5
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState)>/$stack6
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState)>/$stack4
<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.TypedValue getTypedValue(org.springframework.expression.spel.ExpressionState)>/$stack5
<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.TypedValue getTypedValue(org.springframework.expression.spel.ExpressionState)>/$stack4
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState,java.lang.Class)>/$stack5
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState,java.lang.Class)>/$stack11
<java.util.Collections$UnmodifiableList: java.lang.Object get(int)>/$stack3
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/$stack4
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/$stack9
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/$stack12
<org.apache.log4j.SortedKeyEnumeration: java.lang.Object nextElement()>/$stack2
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getTargetType(org.springframework.core.MethodParameter)>/$stack1
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getTargetType(org.springframework.core.MethodParameter)>/$stack9
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getTargetType(org.springframework.core.MethodParameter)>/$stack5
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getTargetType(org.springframework.core.MethodParameter)>/$stack3
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: void close()>/$stack1
<org.springframework.core.GenericTypeResolver: java.lang.Class[] doResolveTypeArguments(java.lang.Class,java.lang.reflect.Type,java.lang.Class)>/$stack24
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/$stack21
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void onRefresh()>/$stack1
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectFactory: java.lang.Object getObject()>/$stack5
<com.thoughtworks.xstream.XStream$1: com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)>/$stack3
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack14
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack30
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack16
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack34
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack56
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack48
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/contextObject#_160
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/targetObject#_161
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack17
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/contextObject#_213
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack13
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack17
<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.spel.ExpressionState)>/$stack8
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Object)>/$stack12
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding)>/$stack3
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack36
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack29
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack30
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack27
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack17
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,java.lang.Class)>/$stack3
<org.picocontainer.DefaultPicoContainer: java.lang.Object getLocalInstance(org.picocontainer.ComponentAdapter)>/componentInstance#_606
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack54
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack59
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.reflect.Type)>/l3#2#_632
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack33
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack39
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack42
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: boolean isWithoutRoot(java.lang.String[],com.google.gson.JsonObject)>/$stack7
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Class[] getTypes(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack4
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack22
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack16
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack18
<com.google.common.collect.Iterators$5: java.lang.Object next()>/$stack4
<org.codehaus.jettison.json.JSONArray: java.lang.Object get(int)>/o#_160
<org.joda.time.format.DateTimeFormat$StyleFormatter: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)>/l4#_813
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/$stack14
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/$stack13
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue)>/$stack2
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue)>/$stack3
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue)>/$stack4
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue,java.lang.Object)>/$stack3
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String pullElementName()>/$stack5
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String pullText()>/$stack2
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String getAttributeName(int)>/$stack4
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<java.util.AbstractSequentialList: java.lang.Object get(int)>/$stack4
<java.util.AbstractSequentialList: java.lang.Object set(int,java.lang.Object)>/l4#_116
<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: void <init>(java.util.Map$Entry[])>/value#_585
<ognl.IteratorEnumeration: java.lang.Object nextElement()>/$stack2
<java.util.SubList$1: java.lang.Object next()>/$stack4
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack5
<javassist.CtBehavior: javassist.CtClass[] getExceptionTypes()>/ea#_329
<java.util.ArrayList$SubList: java.lang.Object set(int,java.lang.Object)>/l3#_1028
<java.util.ArrayList$SubList: java.lang.Object get(int)>/$stack5
<java.util.ArrayList$SubList: java.lang.Object remove(int)>/l2#_1055
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/$stack17
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/assignedValue#_143
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/assignedValue_$$A_4#_160
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/ifFalseExprValue#_162
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.lang.Object argumentValue(br.com.caelum.iogi.Instantiator,br.com.caelum.iogi.reflection.Target)>/$stack5
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatRelationalExpression()>/expr#_195
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatRelationalExpression()>/relationalOperatorToken#_196
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPowerExpression()>/expr#_269
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatUnaryExpression()>/$stack7
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl maybeEatNonDottedNode()>/$stack5
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatDottedNode()>/t#_348
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatDottedNode()>/$stack7
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatDottedNode()>/$stack12
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatFunctionOrVar()>/t#_372
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatFunctionOrVar()>/functionOrVariableName#_373
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void consumeArguments(java.util.List)>/$stack5
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void consumeArguments(java.util.List)>/t#_411
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void consumeArguments(java.util.List)>/next#_418
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatStartNode()>/$stack20
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatStartNode()>/$stack19
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatStartNode()>/$stack4
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatStartNode()>/$stack18
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatStartNode()>/$stack12
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatStartNode()>/$stack17
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatBeanReference()>/beanRefToken#_469
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatInlineList()>/t#_534
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.Token maybeEatRelationalOperator()>/t#_718
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.Token eatToken(org.springframework.expression.spel.standard.TokenKind)>/t#_739
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean peekToken(org.springframework.expression.spel.standard.TokenKind,boolean)>/t#_757
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean peekToken(org.springframework.expression.spel.standard.TokenKind,org.springframework.expression.spel.standard.TokenKind)>/t#_770
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean peekToken(org.springframework.expression.spel.standard.TokenKind,org.springframework.expression.spel.standard.TokenKind,org.springframework.expression.spel.standard.TokenKind)>/t#_776
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean peekIdentifierToken(java.lang.String)>/t#_784
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean peekSelectToken()>/t#_790
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack3
<org.springframework.util.StringUtils: java.lang.String capitalize(java.lang.String)>/$stack1
<org.springframework.util.StringUtils: java.lang.String arrayToDelimitedString(java.lang.Object[],java.lang.String)>/$stack18
<org.springframework.util.StringUtils: java.lang.String arrayToCommaDelimitedString(java.lang.Object[])>/$stack1
<javassist.bytecode.MethodInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>/$stack3
<javassist.bytecode.MethodInfo: void rebuildStackMap(javassist.ClassPool)>/ca#_414
<javassist.bytecode.MethodInfo: void rebuildStackMapForME(javassist.ClassPool)>/ca#_431
<org.springframework.context.support.AbstractApplicationContext: void publishEvent(org.springframework.context.ApplicationEvent)>/$stack4
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack21
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack19
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack11
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.String toString(java.lang.Object)>/$stack3
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.Object fromString(java.lang.String)>/$stack3
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack4
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack31
<org.springframework.context.support.AbstractApplicationContext: void registerListeners()>/$stack10
<org.springframework.context.support.AbstractApplicationContext: void registerListeners()>/$stack13
<org.springframework.context.support.AbstractApplicationContext: void finishRefresh()>/$stack1
<org.springframework.context.support.AbstractApplicationContext: void doClose()>/$stack9
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String)>/$stack3
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Class)>/$stack4
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>/$stack3
<net.vidageek.mirror.reflect.DefaultFieldReflector: java.lang.reflect.Field onClass(java.lang.Class)>/$stack5
<org.springframework.context.support.AbstractApplicationContext: void start()>/$stack1
<org.springframework.context.support.AbstractApplicationContext: void stop()>/$stack1
<org.springframework.context.support.AbstractApplicationContext: boolean isRunning()>/$stack1
<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/$stack4
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object createBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ex#2_$$A_1#_456
<com.google.common.collect.Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>/$stack2
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_62
<com.google.common.collect.Iterables: java.lang.Object get(java.lang.Iterable,int)>/$stack7
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/fb#5#_743
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getNonSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack8
<org.springframework.beans.factory.config.DependencyDescriptor: void <init>(org.springframework.core.MethodParameter,boolean,boolean)>/$stack6
<org.springframework.beans.factory.config.DependencyDescriptor: void <init>(org.springframework.core.MethodParameter,boolean,boolean)>/$stack10
<org.springframework.beans.factory.config.DependencyDescriptor: void <init>(org.springframework.core.MethodParameter,boolean,boolean)>/$stack12
<org.springframework.beans.factory.config.DependencyDescriptor: void <init>(org.springframework.core.MethodParameter,boolean,boolean)>/$stack7
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: java.util.List get(java.lang.Object)>/$stack2
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.Multimap delegate()>/$stack1
<org.springframework.expression.spel.ast.Literal: java.lang.String toString()>/$stack2
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.String[] unsatisfiedNonSimpleProperties(org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/$stack13
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/elementName#_106
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void checkDependencies(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,java.beans.PropertyDescriptor[],org.springframework.beans.PropertyValues)>/$stack13
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object convertForProperty(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapper,org.springframework.beans.TypeConverter)>/$stack13
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object convertForProperty(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapper,org.springframework.beans.TypeConverter)>/$stack11
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object postProcessObjectFromFactoryBean(java.lang.Object,java.lang.String)>/$stack3
<org.picocontainer.injectors.SingleMemberInjector: java.lang.Object[] getMemberArguments(org.picocontainer.PicoContainer,java.lang.reflect.AccessibleObject,java.lang.reflect.Type[],java.lang.annotation.Annotation[])>/$stack15
<java.util.Collections$UnmodifiableList$1: java.lang.Object next()>/$stack2
<com.google.gson.TreeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack12
<com.google.gson.TreeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack13
<com.google.gson.TreeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack12
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op#_55
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack85
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack33
<java.util.AbstractCollection: boolean contains(java.lang.Object)>/$stack10
<java.util.AbstractCollection: java.lang.Object[] toArray()>/$stack10
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>/$stack17
<java.util.AbstractCollection: java.lang.Object[] finishToArray(java.lang.Object[],java.util.Iterator)>/$stack9
<java.util.AbstractCollection: boolean remove(java.lang.Object)>/$stack10
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getCryptoPermission(java.lang.String)>/l2#_92
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<br.com.caelum.iogi.collections.ListInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack38
<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>/$stack2
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack47
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack43
<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack9
<org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)>/$stack34
<org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)>/$stack47
<org.apache.log4j.config.PropertySetter: void setProperty(java.beans.PropertyDescriptor,java.lang.String,java.lang.String)>/setter#_223
<javassist.compiler.MemberCodeGen: void setThisMethod(javassist.CtMethod)>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack11
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: java.lang.Object getComponentKey()>/$stack2
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: java.lang.Class getComponentImplementation()>/$stack2
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/id#_62
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>/$stack29
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: java.lang.Object fromString(java.lang.String)>/$stack14
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/$stack19
<javassist.bytecode.CodeAttribute: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>/$stack3
<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object get(int)>/$stack3
<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)>/$stack4
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack6
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack8
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack12
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack131
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack115
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/$stack3
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/$stack3
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack89
<org.springframework.beans.factory.support.AutowireUtils: boolean isExcludedFromDependencyCheck(java.beans.PropertyDescriptor)>/wm#_96
<org.springframework.beans.factory.support.AutowireUtils: boolean isSetterDefinedInInterface(java.beans.PropertyDescriptor,java.util.Set)>/setter#_118
<org.springframework.beans.factory.support.AutowireUtils: java.lang.Object resolveAutowiringValue(java.lang.Object,java.lang.Class)>/$stack7
<javax.servlet.http.HttpServletResponseWrapper: void sendRedirect(java.lang.String)>/$stack2
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.reflect.Field,boolean)>/$stack11
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldNotMatchIfAResourceHasTheWrongWebMethod()>/route#_409
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldAcceptAResultWithASpecificWebMethod()>/route#_418
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldAcceptAResultWithOptionsWebMethod()>/route#_428
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldAcceptAResultWithPatchWebMethod()>/route#_436
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void findsInheritedMethodsWithDefaultNames()>/route#_452
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void supportTypeHttpMethodAnnotation()>/route#_475
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void supportOverrideTypeHttpMethodAnnotation()>/route#_482
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void priorityForGetAnnotationShouldBeDefault()>/route#_528
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$1: java.lang.String apply(br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType)>/$stack2
<com.google.common.collect.Multimaps$Values$1: java.lang.Object next()>/$stack4
<java.util.TreeMap: void putAll(java.util.Map)>/l3#_315
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object)>/$stack3
<com.google.gson.Gson: com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)>/candidate#_430
<com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(java.lang.Class)>/$stack3
<com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)>/adapter#_585
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)>/typeAdapter#_802
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)>/$stack4
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.codehaus.jettison.Node: java.lang.String toString()>/$stack4
<org.springframework.core.convert.support.ArrayToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack7
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/e#_64
<com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>/$stack13
<br.com.caelum.vraptor.view.LinkToHandlerTest: void setUp()>/$stack14
<br.com.caelum.vraptor.view.LinkToHandlerTest: void setUp()>/$stack20
<br.com.caelum.vraptor.view.LinkToHandlerTest: void setUp()>/$stack27
<com.thoughtworks.xstream.mapper.OuterClassMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/$stack5
<com.google.common.collect.SingletonImmutableList: void <init>(java.lang.Object)>/$stack2
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(java.lang.Object,org.springframework.core.convert.TypeDescriptor)>/$stack6
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(org.springframework.expression.TypedValue,org.springframework.core.convert.TypeDescriptor)>/$stack8
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest: void shouldReturnAnXStreamInstanceWithSupportToLinkConvertersBasedOnReflection()>/converter#_34
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest: void shouldUseTheDefaultConverterForTypesThatAreNotHypermediaAware()>/converter#_46
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest: void shouldAllowCustomXStreamRetrieval()>/converter#_79
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest: void shouldAllowCustomXStreamRetrieval()>/converter_$$A_1#_81
<com.google.common.collect.ForwardingMultimap: boolean equals(java.lang.Object)>/$stack2
<org.picocontainer.injectors.MethodInjector$1: java.lang.Object run(java.lang.Object)>/$stack18
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack5
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack3
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack4
<org.springframework.expression.spel.ast.OpModulus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpModulus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/k#_95
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v#_95
<ognl.ASTVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack4
<java.util.Vector$1: java.lang.Object nextElement()>/$stack12
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack6
<org.springframework.expression.spel.ast.FunctionReference: java.lang.Object[] getArguments(org.springframework.expression.spel.ExpressionState)>/$stack8
<org.springframework.expression.spel.ast.FunctionReference: java.lang.Object[] getArguments(org.springframework.expression.spel.ExpressionState)>/$stack9
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: java.util.Map getParameterTypes(java.lang.reflect.Method,java.lang.String[])>/$stack42
<org.springframework.context.expression.BeanFactoryResolver: java.lang.Object resolve(org.springframework.expression.EvaluationContext,java.lang.String)>/$stack5
<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path getPath()>/name#_169
<com.google.gson.JsonArray: java.lang.String getAsString()>/$stack7
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/e#_59
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>/$stack2
<org.springframework.beans.factory.support.AbstractBeanFactory$2: java.lang.Object getObject()>/l2#_329
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack100
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack59
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack39
<org.picocontainer.injectors.IterativeInjector: org.picocontainer.Parameter[] getMatchingParameterListForSetters(org.picocontainer.PicoContainer)>/$stack35
<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>/o#_120
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/$stack11
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>/$stack2
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>/$stack2
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/context#_66
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack33
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/contextObject#_185
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack23
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: boolean isCompatible(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/$stack4
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack18
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack52
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/converter#_101
<java.util.Vector: java.lang.Object elementAt(int)>/$stack3
<java.util.Vector: java.lang.Object lastElement()>/$stack4
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack9
<java.util.Vector: java.lang.Object get(int)>/$stack3
<java.util.Vector: java.lang.Object set(int,java.lang.Object)>/l3#_768
<java.util.Vector: java.lang.Object remove(int)>/l2#_832
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>/$stack30
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>/$stack15
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry)>/$stack2
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry)>/$stack3
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack10
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack21
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack5
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack42
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack62
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack45
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack10
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack19
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>/$stack5
<org.springframework.core.convert.TypeDescriptor: boolean isPrimitive()>/type#_239
<org.springframework.core.convert.TypeDescriptor: boolean isArray()>/type#_247
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getElementType()>/$stack2
<org.springframework.core.convert.TypeDescriptor: boolean isMapEntryTypeKnown()>/$stack2
<org.springframework.core.convert.TypeDescriptor: boolean isMapEntryTypeKnown()>/$stack4
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getMapKeyType()>/$stack2
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getMapValueType()>/$stack2
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/$stack25
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/$stack13
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/$stack7
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack6
<org.springframework.core.convert.TypeDescriptor: int hashCode()>/$stack2
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveElementType()>/$stack4
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveElementType()>/$stack3
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveCollectionElementType()>/$stack17
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveCollectionElementType()>/$stack14
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveCollectionElementType()>/$stack8
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapKeyType()>/$stack19
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapKeyType()>/$stack17
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapKeyType()>/$stack10
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapValueType()>/$stack18
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapValueType()>/$stack16
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapValueType()>/$stack10
<org.springframework.expression.common.ExpressionUtils: java.lang.Object convert(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class)>/$stack5
<org.springframework.expression.common.ExpressionUtils: java.lang.Object convertTypedValue(org.springframework.expression.EvaluationContext,org.springframework.expression.TypedValue,java.lang.Class)>/$stack17
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean shouldSkipField(com.google.gson.FieldAttributes)>/$stack23
<br.com.caelum.vraptor.core.JstlLocalization: java.util.Locale localeFor(java.lang.String)>/$stack7
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack7
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack14
<org.springframework.core.convert.support.ConversionUtils: java.lang.Object invokeConverter(org.springframework.core.convert.converter.GenericConverter,java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack5
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: java.util.Calendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>/$stack12
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: java.util.Calendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>/$stack14
<br.com.caelum.iogi.EmptyObjectsProvider: boolean canProvide(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.beans.CachedIntrospectionResults: void <init>(java.lang.Class,boolean)>/$stack39
<org.springframework.beans.CachedIntrospectionResults: void <init>(java.lang.Class,boolean)>/$stack52
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>/candidateMethod_$$A_2#_77
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeAttribute(java.lang.String)>/$stack2
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeNode(java.lang.String)>/$stack2
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String encodeAttribute(java.lang.String)>/$stack2
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String encodeNode(java.lang.String)>/$stack2
<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: void close()>/$stack1
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack11
<org.picocontainer.parameters.ComponentParameter$1: org.picocontainer.ComponentAdapter getComponentAdapter()>/$stack2
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>/$stack13
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>/$stack14
<java.beans.PropertyDescriptor: int hashCode()>/$stack3
<java.beans.PropertyDescriptor: int hashCode()>/$stack4
<java.beans.PropertyDescriptor: int hashCode()>/$stack7
<java.beans.PropertyDescriptor: int hashCode()>/$stack8
<java.beans.PropertyDescriptor: int hashCode()>/$stack11
<java.beans.PropertyDescriptor: int hashCode()>/$stack12
<javax.servlet.jsp.jstl.fmt.LocalizationContext: void <init>(java.util.ResourceBundle)>/$stack2
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack3
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/childValue#_106
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/$stack59
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/$stack26
<org.springframework.expression.spel.ast.ConstructorReference: void populateReferenceTypeArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList,java.lang.Class)>/$stack16
<ognl.OgnlParser: ognl.Node topLevelExpression()>/$stack3
<java.util.Hashtable: java.lang.String toString()>/l6#_584
<java.util.Hashtable: java.lang.String toString()>/l7#_585
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean isAutowireCandidate(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.config.DependencyDescriptor)>/method#_158
<java.util.Hashtable: boolean equals(java.lang.Object)>/l6#_808
<java.util.Hashtable: boolean equals(java.lang.Object)>/$stack19
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/$stack44
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/$stack60
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/$stack58
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/$stack52
<org.springframework.context.expression.StandardBeanExpressionResolver: java.lang.Object evaluate(java.lang.String,org.springframework.beans.factory.config.BeanExpressionContext)>/$stack11
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack17
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack20
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack10
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>/$stack4
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op#_66
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack103
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack33
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/$stack22
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/e#_59
<org.springframework.core.convert.support.GenericConversionService: void addConverter(org.springframework.core.convert.converter.GenericConverter)>/$stack11
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack26
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack21
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/interfaces#15#_366
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/interfaces#14#_437
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>/$stack3
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/$stack8
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/result#_72
<com.thoughtworks.xstream.core.TreeUnmarshaller: void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)>/$stack8
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)>/result#_134
<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>/$stack29
<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>/$stack5
<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()>/$stack5
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextString()>/$stack6
<com.google.common.collect.AbstractMapBasedMultiset$1$1: int getCount()>/$stack9
<java.text.AttributedString: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute,int)>/$stack9
<ognl.Ognl: java.lang.Object parseExpression(java.lang.String)>/$stack4
<javax.crypto.Cipher: void initCryptoPermission()>/$stack4
<java.text.AttributedString: java.lang.Object access$100(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute,int)>/$stack3
<java.text.AttributedString: java.lang.Object access$400(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute,int,int,int)>/$stack5
<org.picocontainer.DefaultPicoContainer$KnowsContainerAdapter: java.lang.Object getComponentKey()>/$stack2
<org.picocontainer.DefaultPicoContainer$KnowsContainerAdapter: java.lang.Class getComponentImplementation()>/$stack2
<org.picocontainer.DefaultPicoContainer$KnowsContainerAdapter: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack4
<javax.crypto.Cipher: javax.crypto.CryptoPermission getConfiguredPermission(java.lang.String)>/$stack5
<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack14
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack13
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack15
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack12
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack13
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack14
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack15
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack23
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack24
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getMethod()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getContextPath()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRemoteUser()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRequestURI()>/$stack1
<org.codehaus.jettison.util.FastStack: java.lang.Object pop()>/$stack4
<org.codehaus.jettison.util.FastStack: java.lang.Object peek()>/$stack4
<org.picocontainer.injectors.AbstractInjector$UnsatisfiableDependenciesException: void <init>(org.picocontainer.ComponentAdapter,java.lang.reflect.Type,java.util.Set,org.picocontainer.PicoContainer)>/$stack6
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service access$200(sun.security.jca.ProviderList$ServiceList,int)>/$stack2
<sun.misc.URLClassPath: boolean ensureLoaderOpened(int)>/$stack4
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getNextLoader(int[],int)>/$stack5
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader access$100(sun.misc.URLClassPath,int[],int)>/$stack3
<br.com.caelum.vraptor.validator.DefaultValidator$LocalizationSupplier: java.util.ResourceBundle get()>/$stack2
<br.com.caelum.iogi.conversion.BigDecimalConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<javassist.CtClassType: void modifyClassConstructor(javassist.bytecode.ClassFile,javassist.bytecode.Bytecode,int,int)>/cache#3#_1489
<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.Object getSource()>/$stack2
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class,java.text.NumberFormat)>/l7#_208
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest: void shouldReturnAnXStreamInstanceWithSupportToLinkConvertersBasedOnReflection()>/converter#_34
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest: void shouldUseTheDefaultConverterForTypesThatAreNotHypermediaAware()>/converter#_46
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest: void shouldAllowCustomXStreamRetrieval()>/converter#_79
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest: void shouldAllowCustomXStreamRetrieval()>/converter_$$A_1#_81
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.Class)>/$stack4
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/$stack7
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: java.lang.String getFormat(java.lang.String)>/$stack7
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest$1: void register(java.lang.Class,java.lang.Class)>/$stack4
<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>/$stack3
<com.google.gson.internal.Excluder$1: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack3
<com.google.gson.internal.Excluder$1: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack4
<com.google.gson.internal.Excluder$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack4
<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>/$stack14
<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>/$stack7
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>/l3#_698
<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>/l3#_713
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack13
<com.thoughtworks.xstream.io.xml.QNameMap: java.lang.String getJavaClassName(javax.xml.namespace.QName)>/$stack4
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack2
<org.springframework.expression.spel.ast.Assign: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/newValue#_39
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/$stack7
<com.google.common.collect.AbstractMapEntry: int hashCode()>/k#_56
<com.google.common.collect.AbstractMapEntry: int hashCode()>/v#_57
<org.picocontainer.injectors.AbstractInjector: void checkConcrete()>/$stack2
<org.picocontainer.injectors.AbstractInjector: void checkConcrete()>/$stack5
<com.thoughtworks.xstream.converters.collections.CharArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack3
<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial)>/l3#_438
<org.joda.time.format.DateTimeFormatter: java.lang.String print(org.joda.time.ReadableInstant)>/$stack4
<org.springframework.beans.factory.support.AbstractBeanFactory$1: java.lang.Object getObject()>/$stack6
<org.joda.time.format.DateTimeFormatter: java.lang.String print(org.joda.time.ReadablePartial)>/$stack4
<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology)>/l5#_509
<org.joda.time.format.DateTimeFormatter: long parseMillis(java.lang.String)>/l2#_622
<org.joda.time.format.DateTimeFormatter: org.joda.time.DateTime parseDateTime(java.lang.String)>/l2#_655
<java.text.AttributedString$AttributedStringIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>/$stack6
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String)>/$stack2
<org.picocontainer.injectors.ConstructorInjector$3: java.lang.reflect.Constructor[] run()>/$stack2
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/$stack9
<javassist.compiler.TypeChecker: void atFieldRead(javassist.CtField)>/finfo#_774
<net.vidageek.mirror.dsl.Mirror: java.lang.Class reflectClass(java.lang.String)>/$stack7
<br.com.caelum.iogi.collections.ArrayInstantiator$ArrayFactory: java.lang.Object instantiateArrayElement(br.com.caelum.iogi.parameters.Parameters)>/$stack7
<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/type#_116
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>/l6#_124
<br.com.caelum.iogi.parameters.Parameter: java.lang.String toString()>/$stack6
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack8
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack10
<javassist.compiler.Javac: javassist.CtMember compile(java.lang.String)>/$stack14
<javassist.compiler.Javac: javassist.CtBehavior compileMethod(javassist.compiler.Parser,javassist.compiler.ast.MethodDecl)>/$stack44
<javassist.compiler.Javac: javassist.CtBehavior compileMethod(javassist.compiler.Parser,javassist.compiler.ast.MethodDecl)>/$stack34
<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object)>/$stack2
<br.com.caelum.iogi.conversion.BigIntegerConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.String toString()>/$stack8
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.String toString()>/$stack12
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.Class[] getClasses(java.util.List)>/$stack6
<com.thoughtworks.xstream.XStream: java.lang.Object fromXML(java.io.InputStream)>/$stack4
<com.thoughtworks.xstream.XStream: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object)>/$stack3
<com.thoughtworks.xstream.XStream: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)>/$stack10
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: java.lang.Object instanceFor(java.lang.Class)>/$stack8
<com.thoughtworks.xstream.io.xml.XppReader: java.lang.String getAttributeName(int)>/$stack4
<com.google.common.collect.SingletonImmutableMap: void <init>(java.util.Map$Entry)>/$stack2
<com.google.common.collect.SingletonImmutableMap: void <init>(java.util.Map$Entry)>/$stack3
<br.com.caelum.vraptor.ioc.spring.UniqueBeanNameGenerator: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)>/$stack8
<org.springframework.expression.spel.ast.OpNE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpNE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<br.com.caelum.iogi.conversion.FallbackConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/$stack5
<org.springframework.expression.spel.ast.OperatorMatches: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<org.picocontainer.containers.ImmutablePicoContainer: java.lang.Object getComponent(java.lang.Object)>/$stack3
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.PicoContainer getParent()>/$stack2
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/$stack3
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding)>/$stack4
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,java.lang.Class)>/$stack4
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/$stack6
<org.springframework.expression.spel.ast.VariableReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<java.util.logging.Level: java.util.logging.Level findLevel(java.lang.String)>/l1_$$A_5#_373
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/$stack6
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/$stack7
<java.util.Collections$SynchronizedList: java.lang.Object get(int)>/$stack6
<java.util.Collections$SynchronizedList: java.lang.Object set(int,java.lang.Object)>/$stack7
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/v#_1057
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/converter#_1074
<ognl.OgnlRuntime: java.lang.reflect.Constructor getConvertedConstructorAndArgs(ognl.OgnlContext,java.lang.Object,java.util.List,java.lang.Object[],java.lang.Object[])>/converter#_1096
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/$stack31
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/$stack17
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack14
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/$stack19
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack19
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack12
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack15
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack12
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack16
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack34
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/$stack4
<br.com.caelum.vraptor.resource.DefaultResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/chain#_39
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseInclude(com.google.common.collect.Multimap,java.util.Map$Entry)>/field#_57
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack18
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack20
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Number convert(java.lang.Character)>/$stack6
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Object convert(java.lang.Object)>/$stack3
<ognl.OgnlRuntime: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack10
<ognl.OgnlRuntime: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack6
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack10
<java.util.TreeSet: boolean addAll(java.util.Collection)>/l4#_305
<org.picocontainer.parameters.CollectionComponentParameter: java.lang.Object[] getArrayInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map)>/$stack17
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Collection getCollectionInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map,org.picocontainer.NameBinding,boolean)>/$stack20
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)>/converter#_96
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)>/$stack6
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/converter#_149
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/$stack6
<sun.util.logging.PlatformLogger$JavaLoggerProxy: void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String,java.lang.Object[])>/$stack11
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack55
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<org.codehaus.jettison.AbstractXMLStreamReader: java.lang.String getAttributeLocalName(int)>/$stack3
<org.picocontainer.injectors.IterativeInjector$5: java.lang.Object run()>/$stack2
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endArray()>/element#_105
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endObject()>/element#_124
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>/element#_136
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void dispose(org.picocontainer.PicoContainer)>/$stack7
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void guardNotInstantiated()>/$stack5
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>/$stack8
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)>/$stack8
<org.springframework.expression.spel.ast.OpLE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpLE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.beans.MutablePropertyValues: boolean contains(java.lang.String)>/$stack2
<org.springframework.expression.spel.ast.OpEQ: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpEQ: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.expression.common.LiteralExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Class)>/$stack5
<javassist.bytecode.ClassFile: javassist.bytecode.MethodInfo getStaticInitializer()>/$stack1
<br.com.caelum.vraptor.http.VRaptorRequestTest: void returnsAllNamesOnlyOnce()>/value#_96
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack5
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack7
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack13
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack15
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>/l7#_406
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>/l8#_481
<com.google.gson.JsonPrimitive: boolean getAsBoolean()>/$stack4
<com.google.gson.JsonPrimitive: java.lang.String getAsString()>/$stack7
<com.google.gson.JsonPrimitive: java.lang.String getAsString()>/$stack8
<com.google.gson.JsonPrimitive: java.lang.String getAsString()>/$stack5
<com.google.gson.JsonPrimitive: double getAsDouble()>/$stack4
<com.google.gson.JsonPrimitive: long getAsLong()>/$stack4
<com.google.gson.JsonPrimitive: int getAsInt()>/$stack4
<com.google.gson.JsonPrimitive: int hashCode()>/$stack15
<com.google.gson.JsonPrimitive: int hashCode()>/$stack9
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack30
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack32
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack20
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack22
<org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters: java.lang.Object[] getParameterArguments(org.picocontainer.PicoContainer)>/$stack26
<java.util.AbstractList: boolean equals(java.lang.Object)>/l4#_521
<java.util.AbstractList: int hashCode()>/l3#_540
<java.util.ResourceBundle: boolean checkList(java.util.List)>/$stack6
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionType(java.lang.Class)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyType(java.lang.Class)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueType(java.lang.Class)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionFieldType(java.lang.reflect.Field)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionFieldType(java.lang.reflect.Field,int)>/$stack2
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyFieldType(java.lang.reflect.Field)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueFieldType(java.lang.reflect.Field)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionParameterType(org.springframework.core.MethodParameter)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyParameterType(org.springframework.core.MethodParameter)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueParameterType(org.springframework.core.MethodParameter)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionReturnType(java.lang.reflect.Method,int)>/$stack2
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyReturnType(java.lang.reflect.Method,int)>/$stack2
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueReturnType(java.lang.reflect.Method,int)>/$stack2
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/currentContext#_57
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack13
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getGenericParameterType(org.springframework.core.MethodParameter,java.lang.Class,int)>/$stack5
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack16
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getGenericFieldType(java.lang.reflect.Field,java.lang.Class,int,int)>/$stack6
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack25
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack21
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getGenericReturnType(java.lang.reflect.Method,java.lang.Class,int,int)>/$stack6
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack45
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack46
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractType(org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class,int,int,int)>/$stack14
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractType(org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class,int,int,int)>/$stack12
<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(org.springframework.expression.spel.ExpressionState,org.springframework.expression.AccessException)>/$stack14
<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(org.springframework.expression.spel.ExpressionState,org.springframework.expression.AccessException)>/$stack15
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/$stack64
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/nextLevel#7#_328
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.MethodExecutor findAccessorForMethod(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/context#_166
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromClass(java.lang.Class,java.lang.Class,int)>/$stack3
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromClass(org.springframework.core.MethodParameter,java.lang.Class,java.lang.Class,int,int,int)>/$stack32
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromClass(org.springframework.core.MethodParameter,java.lang.Class,java.lang.Class,int,int,int)>/$stack22
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/$stack7
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class)>/$stack6
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack22
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack14
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/conversionService#_136
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack83
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack72
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack12
<com.google.inject.internal.util.$Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>/$stack2
<org.picocontainer.injectors.IterativeInjector$1: java.lang.Object run()>/$stack3
<org.springframework.expression.common.CompositeStringExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Class)>/$stack5
<br.com.caelum.iogi.Iogi$DelegateToAllInstantatiors: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack5
<javassist.bytecode.stackmap.TypeData$TypeName: void add(java.util.ArrayList,javassist.bytecode.stackmap.TypeData)>/$stack6
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack52
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack39
<javassist.bytecode.stackmap.BasicBlock$Maker: javassist.bytecode.stackmap.BasicBlock[] make(javassist.bytecode.MethodInfo)>/ca#_148
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack35
<br.com.caelum.iogi.util.Assert: void isNotARawType(br.com.caelum.iogi.reflection.Target)>/$stack6
<br.com.caelum.iogi.conversion.ByteWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<javassist.CtNewWrappedMethod: java.lang.String addBodyMethod(javassist.CtClassType,javassist.bytecode.ClassFile,javassist.CtMethod)>/$stack16
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.String toString()>/$stack13
<org.springframework.core.style.StylerUtils: java.lang.String style(java.lang.Object)>/$stack2
<javassist.compiler.AccessorMaker: java.lang.String getConstructor(javassist.CtClass,java.lang.String,javassist.bytecode.MethodInfo)>/ea#_56
<javassist.compiler.AccessorMaker: java.lang.String getMethodAccessor(java.lang.String,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo)>/ea#_115
<net.vidageek.mirror.invoke.MethodHandlerByName: java.lang.reflect.Method getMethod(java.lang.Object[])>/i#7#_61
<javassist.compiler.AccessorMaker: java.lang.String findAccessorName(javassist.bytecode.ClassFile)>/$stack9
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry$1: void setAttribute(java.lang.String,java.lang.Object)>/$stack4
<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_48
<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_49
<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/leftValue#_50
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$2: java.lang.Object getObject()>/$stack5
<org.picocontainer.behaviors.AbstractBehavior: java.lang.Object getComponentKey()>/$stack2
<org.picocontainer.behaviors.AbstractBehavior: java.lang.Class getComponentImplementation()>/$stack2
<org.picocontainer.behaviors.AbstractBehavior: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack4
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerCacheComponents()>/$stack6
<br.com.caelum.vraptor.ioc.pico.PicoProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/$stack10
<java.util.Stack: java.lang.Object pop()>/l1#_84
<java.util.Stack: java.lang.Object peek()>/$stack4
<com.thoughtworks.xstream.io.AbstractWriter: java.lang.String encodeNode(java.lang.String)>/$stack3
<com.thoughtworks.xstream.io.AbstractWriter: java.lang.String encodeAttribute(java.lang.String)>/$stack3
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainerTest: void setup()>/$stack3
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/$stack18
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter noMatchingAdaptersFound(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.NameBinding,java.lang.annotation.Annotation)>/$stack5
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter noMatchingAdaptersFound(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.NameBinding,java.lang.annotation.Annotation)>/$stack8
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter noMatchingAdaptersFound(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.NameBinding,java.lang.annotation.Annotation)>/$stack10
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter noMatchingAdaptersFound(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.NameBinding,java.lang.annotation.Annotation)>/$stack6
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter noMatchingAdaptersFound(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.NameBinding,java.lang.annotation.Annotation)>/$stack7
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException tooManyMatchingAdaptersFound(java.lang.Class,java.util.List)>/$stack10
<org.picocontainer.parameters.BasicComponentParameter: void removeExcludedAdapterIfApplicable(java.lang.Object,java.util.List)>/$stack10
<org.picocontainer.parameters.BasicComponentParameter: java.lang.Object access$100(org.picocontainer.Converters,java.lang.Object,java.lang.reflect.Type)>/$stack3
<br.com.caelum.iogi.conversion.ShortWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.vraptor.interceptor.FlashInterceptor$1: void beforeRedirect()>/$stack4
<br.com.caelum.vraptor.interceptor.FlashInterceptor$1: void beforeRedirect()>/$stack8
<org.springframework.core.type.StandardAnnotationMetadata: java.util.Set getAnnotationTypes()>/$stack8
<org.springframework.core.type.StandardAnnotationMetadata: java.util.Set getMetaAnnotationTypes(java.lang.String)>/$stack17
<org.springframework.core.type.StandardAnnotationMetadata: boolean hasAnnotation(java.lang.String)>/$stack7
<org.springframework.core.type.StandardAnnotationMetadata: boolean isAnnotated(java.lang.String)>/$stack11
<org.springframework.core.type.StandardAnnotationMetadata: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/$stack12
<br.com.caelum.iogi.conversion.FloatWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.expression.spel.ast.Elvis: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/value#_44
<org.springframework.expression.spel.ast.Elvis: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack6
<org.springframework.expression.spel.ast.Elvis: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.expression.spel.ast.Elvis: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack9
<org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>/$stack3
<org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>/$stack8
<ognl.ASTThisVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack3
<java.util.SubList: java.lang.Object set(int,java.lang.Object)>/$stack6
<java.util.SubList: java.lang.Object get(int)>/$stack5
<org.springframework.beans.PropertyMatches: java.lang.String[] calculateMatches(java.beans.PropertyDescriptor[],int)>/$stack10
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/e#_64
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/$stack51
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/$stack47
<ognl.OgnlOps: java.lang.String stringValue(java.lang.Object)>/$stack1
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>/$stack2
<com.thoughtworks.xstream.core.ReferenceByIdMarshaller: java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>/$stack3
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/$stack140
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/$stack135
<com.google.common.collect.Iterators$3: java.lang.Object next()>/$stack2
<ognl.OgnlOps: java.lang.Object binaryOr(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object binaryXor(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object binaryAnd(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: boolean in(java.lang.Object,java.lang.Object)>/e#_818
<ognl.OgnlOps: java.lang.Object shiftLeft(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object shiftRight(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object unsignedShiftRight(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/$stack36
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/$stack29
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/$stack11
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/$stack11
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/$stack11
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object remainder(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object negate(java.lang.Object)>/$stack8
<ognl.OgnlOps: java.lang.Object negate(java.lang.Object)>/$stack3
<ognl.OgnlOps: java.lang.Object bitNegate(java.lang.Object)>/$stack3
<java.beans.Introspector: void addPropertyDescriptor(java.beans.PropertyDescriptor)>/l4#_587
<java.beans.Introspector: void addPropertyDescriptor(java.beans.PropertyDescriptor)>/l5#_588
<java.beans.Introspector: void processPropertyDescriptors()>/$stack102
<java.beans.Introspector: void processPropertyDescriptors()>/$stack105
<java.beans.Introspector: void processPropertyDescriptors()>/$stack107
<java.beans.Introspector: void processPropertyDescriptors()>/$stack86
<java.beans.Introspector: void processPropertyDescriptors()>/l9#32#_751
<java.beans.Introspector: java.beans.PropertyDescriptor mergePropertyWithIndexedProperty(java.beans.PropertyDescriptor,java.beans.IndexedPropertyDescriptor)>/l3#_839
<java.beans.Introspector: java.beans.PropertyDescriptor mergePropertyDescriptor(java.beans.IndexedPropertyDescriptor,java.beans.PropertyDescriptor)>/l4#_858
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack18
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: org.picocontainer.MutablePicoContainer getSessionContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack4
<net.vidageek.mirror.reflect.DefaultReflectionHandler: java.lang.reflect.Field field(java.lang.String)>/$stack8
<com.google.common.collect.MapMaker$NullConcurrentMap: void <init>(com.google.common.collect.MapMaker)>/$stack2
<java.util.Vector$Itr: java.lang.Object next()>/$stack9
<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)>/$stack7
<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: java.lang.Object createCollection(java.lang.Class)>/defaultType#_75
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/$stack6
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getPropertyType(java.lang.String)>/$stack9
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getPropertyType(java.lang.String)>/value#_347
<org.springframework.beans.BeanWrapperImpl: boolean isWritableProperty(java.lang.String)>/$stack5
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/$stack6
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack9
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.Object,java.lang.String)>/$stack6
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.String,java.lang.Object,java.lang.Object,java.beans.PropertyDescriptor)>/$stack8
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)>/$stack40
<org.springframework.beans.BeanWrapperImpl: java.lang.Object setDefaultValue(java.lang.String)>/$stack4
<org.springframework.beans.BeanWrapperImpl: java.lang.Object setDefaultValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack4
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(java.lang.String)>/$stack7
<com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy: java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper)>/$stack8
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack24
<com.google.gson.internal.bind.TypeAdapters$13: java.lang.String read(com.google.gson.stream.JsonReader)>/$stack6
<com.google.gson.internal.bind.TypeAdapters$13: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack2
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.PropertyValue)>/$stack11
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>/$stack14
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>/$stack13
<java.security.PermissionsEnumerator: java.lang.Object nextElement()>/$stack1
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack98
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack39
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack40
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack72
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack68
<org.springframework.expression.spel.support.StandardTypeConverter: java.lang.Object convertValue(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack6
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/readMethodToUse#_66
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class getPropertyType()>/$stack11
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class getPropertyType()>/$stack8
<br.com.caelum.iogi.collections.ArrayInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String)>/$stack2
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>/$stack3
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack11
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack16
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: boolean hasDefaultConverter()>/$stack5
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isFactoryBean(java.lang.String)>/beanInstance#_870
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String transformedBeanName(java.lang.String)>/$stack3
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Class[])>/$stack13
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object evaluateBeanDefinitionString(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack7
<org.springframework.expression.spel.ast.Ternary: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<org.springframework.expression.spel.ast.Ternary: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack9
<org.springframework.web.context.request.SessionScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/$stack8
<org.springframework.beans.AbstractPropertyAccessor: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/$stack3
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/converter#_109
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1: void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/lookupType#41#_111
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeIndexedArgumentValue(java.lang.Integer,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack9
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack16
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/converter#_288
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack3
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/$stack9
<ognl.ASTTest: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack11
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void addBasePackagesStereotypes(java.util.Map,java.util.List,java.util.HashSet)>/libStereotypes#_133
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void findComponentsFromBasePackages(java.util.Map,java.util.List,java.util.Set)>/classes#_171
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getKeyEquivalence()>/$stack2
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getValueEquivalence()>/$stack2
<org.springframework.expression.spel.ast.OpMultiply: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack8
<org.springframework.expression.spel.ast.OpMultiply: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack11
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class)>/field#_92
<com.google.common.base.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>/template#2#_414
<net.vidageek.mirror.get.DefaultGetterHandler: java.lang.reflect.Field getField(java.lang.String)>/field#_76
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<br.com.caelum.vraptor.serialization.xstream.ProxyConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/converter#_31
<com.thoughtworks.xstream.io.AttributeNameIterator: java.lang.Object next()>/$stack4
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: void initialize(java.lang.Object)>/$stack4
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: org.hibernate.proxy.LazyInitializer getInitializer(java.lang.Object)>/$stack3
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: java.lang.Class getActualClass(java.lang.Object)>/$stack5
<sun.security.jca.ProviderList$ServiceList$1: boolean hasNext()>/$stack3
<sun.security.jca.ProviderList$ServiceList$1: java.security.Provider$Service next()>/l1#_490
<sun.security.jca.ProviderList$ServiceList$1: java.lang.Object next()>/$stack1
<java.util.AbstractSet: int hashCode()>/l3#_124
<ognl.ASTStaticMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack18
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)>/$stack7
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)>/$stack9
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String decodeNode(java.lang.String)>/$stack3
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String decodeAttribute(java.lang.String)>/$stack3
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String encodeAttribute(java.lang.String)>/$stack3
