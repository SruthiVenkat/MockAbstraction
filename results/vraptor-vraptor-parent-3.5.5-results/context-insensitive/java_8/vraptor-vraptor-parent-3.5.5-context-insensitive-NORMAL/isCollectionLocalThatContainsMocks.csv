<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>/$stack1	<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.util.Collection values()>/$stack1	<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.util.Collection values()>
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.util.Set keySet()>/$stack1	<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.util.Set keySet()>
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)>/aliases#_581	<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)>
<javassist.bytecode.ClassFile: void testExistingMethod(javassist.bytecode.MethodInfo)>/it#_634	<javassist.bytecode.ClassFile: void testExistingMethod(javassist.bytecode.MethodInfo)>
<com.google.common.collect.Collections2$FilteredCollection: boolean isEmpty()>/$stack2	<com.google.common.collect.Collections2$FilteredCollection: boolean isEmpty()>
<com.google.common.collect.Collections2$FilteredCollection: java.util.Iterator iterator()>/$stack2	<com.google.common.collect.Collections2$FilteredCollection: java.util.Iterator iterator()>
<com.google.common.collect.Collections2$FilteredCollection: boolean removeAll(java.util.Collection)>/$stack5	<com.google.common.collect.Collections2$FilteredCollection: boolean removeAll(java.util.Collection)>
<com.google.common.collect.Collections2$FilteredCollection: boolean retainAll(java.util.Collection)>/$stack5	<com.google.common.collect.Collections2$FilteredCollection: boolean retainAll(java.util.Collection)>
<org.springframework.expression.spel.ast.InlineList: void checkIfConstant()>/c#14#_65	<org.springframework.expression.spel.ast.InlineList: void checkIfConstant()>
<br.com.caelum.iogi.reflection.ClassConstructor: java.util.Collection notFulfilledBy(br.com.caelum.iogi.parameters.Parameters)>/unfulfilledParameterTargets#_59	<br.com.caelum.iogi.reflection.ClassConstructor: java.util.Collection notFulfilledBy(br.com.caelum.iogi.parameters.Parameters)>
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/actualDependentBeans#_539	<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withAnyArgs()>/list#_62	<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withAnyArgs()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanDefinitionNames()>/$stack4	<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanDefinitionNames()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/result#_300	<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void freezeConfiguration()>/$stack3	<org.springframework.beans.factory.support.DefaultListableBeanFactory: void freezeConfiguration()>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/ex#25_$$A_1#_171	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ambiguousFactoryMethods_$$A_1#_447	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/usedValueHolders#_655	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.String[] getSingletonNames()>/$stack3	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.String[] getSingletonNames()>
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>/candidateMethods#_65	<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>
<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.View onErrorUse(java.lang.Class)>/$stack9	<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.View onErrorUse(java.lang.Class)>
<br.com.caelum.vraptor.validator.DefaultValidator: java.util.List getErrors()>/$stack1	<br.com.caelum.vraptor.validator.DefaultValidator: java.util.List getErrors()>
<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void <init>(com.google.common.collect.AbstractMultimap$WrappedCollection)>/$stack4	<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void <init>(com.google.common.collect.AbstractMultimap$WrappedCollection)>
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>/resultList#_148	<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class,boolean,boolean)>/resultList#_191	<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class,boolean,boolean)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>/l2_$$A_6#_334	<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>
<javassist.bytecode.MethodInfo: void compact(javassist.bytecode.ConstPool)>/$stack6	<javassist.bytecode.MethodInfo: void compact(javassist.bytecode.ConstPool)>
<br.com.caelum.vraptor.http.route.DefaultRouter: java.util.Collection routesMatchingUri(java.lang.String)>/$stack3	<br.com.caelum.vraptor.http.route.DefaultRouter: java.util.Collection routesMatchingUri(java.lang.String)>
<br.com.caelum.vraptor.http.route.DefaultRouter: java.lang.String urlFor(java.lang.Class,java.lang.reflect.Method,java.lang.Object[])>/$stack7	<br.com.caelum.vraptor.http.route.DefaultRouter: java.lang.String urlFor(java.lang.Class,java.lang.reflect.Method,java.lang.Object[])>
<br.com.caelum.vraptor.http.route.DefaultRouter: java.util.List allRoutes()>/$stack1	<br.com.caelum.vraptor.http.route.DefaultRouter: java.util.List allRoutes()>
<javassist.bytecode.MethodInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>/$stack2	<javassist.bytecode.MethodInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>
<javassist.bytecode.MethodInfo: javassist.bytecode.ExceptionsAttribute getExceptionsAttribute()>/$stack2	<javassist.bytecode.MethodInfo: javassist.bytecode.ExceptionsAttribute getExceptionsAttribute()>
<javassist.bytecode.MethodInfo: javassist.bytecode.CodeAttribute getCodeAttribute()>/$stack2	<javassist.bytecode.MethodInfo: javassist.bytecode.CodeAttribute getCodeAttribute()>
<org.springframework.beans.factory.config.ConstructorArgumentValues: java.util.List getGenericArgumentValues()>/$stack1	<org.springframework.beans.factory.config.ConstructorArgumentValues: java.util.List getGenericArgumentValues()>
<org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>/pathElements#_603	<org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>
<com.google.common.collect.Collections2$FilteredCollection: com.google.common.collect.Collections2$FilteredCollection createCombined(com.google.common.base.Predicate)>/$stack4	<com.google.common.collect.Collections2$FilteredCollection: com.google.common.collect.Collections2$FilteredCollection createCombined(com.google.common.base.Predicate)>
<org.springframework.expression.spel.ast.InlineList: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/returnValue#_85	<org.springframework.expression.spel.ast.InlineList: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/result#_68	<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/result_$$A_1#_83	<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/lastKey#19#_112	<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>/l2#_0	<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>/l3#_0	<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/deepCopy#_1316	<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatConstructorReference()>/nodes#_626	<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatConstructorReference()>
<org.springframework.context.support.DefaultLifecycleProcessor: void doStop(java.util.Map,java.lang.String,java.util.concurrent.CountDownLatch,java.util.Set)>/countDownBeanNames#_0	<org.springframework.context.support.DefaultLifecycleProcessor: void doStop(java.util.Map,java.lang.String,java.util.concurrent.CountDownLatch,java.util.Set)>
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/registryPostProcessors#_580	<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/regularPostProcessors#_579	<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/regularPostProcessors#16#_618	<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/registryPostProcessorBeans#12_$$A_2#_641	<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/registryPostProcessor#34#_649	<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/priorityOrderedPostProcessors#_683	<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/ppName#14#_708	<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/ppName#14_$$A_1#_720	<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/internalPostProcessors#_684	<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/classQueue_$$A_1#_353	<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/classQueue_$$A_1#_424	<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>
<net.vidageek.mirror.list.BackedMirrorList: net.vidageek.mirror.list.dsl.MirrorList matching(net.vidageek.mirror.list.dsl.Matcher)>/filteredList#_29	<net.vidageek.mirror.list.BackedMirrorList: net.vidageek.mirror.list.dsl.MirrorList matching(net.vidageek.mirror.list.dsl.Matcher)>
<br.com.caelum.vraptor.http.route.DefaultRouter: java.util.List allRoutes()>/$stack2	<br.com.caelum.vraptor.http.route.DefaultRouter: java.util.List allRoutes()>
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/$stack8	<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/target#_119	<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/target_$$A_1#_128	<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/source_$$A_1#_136	<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>
<com.google.common.collect.LinkedHashMultimap$SetDecorator: java.util.Iterator iterator()>/delegateIterator#_221	<com.google.common.collect.LinkedHashMultimap$SetDecorator: java.util.Iterator iterator()>
<com.google.common.collect.Iterables: boolean removeIfFromRandomAccessList(java.util.List,com.google.common.base.Predicate)>/list#_0	<com.google.common.collect.Iterables: boolean removeIfFromRandomAccessList(java.util.List,com.google.common.base.Predicate)>
<com.google.common.collect.Collections2$FilteredCollection: void clear()>/$stack2	<com.google.common.collect.Collections2$FilteredCollection: void clear()>
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/allListeners#_137	<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.util.List hierarchyFor(java.lang.Class)>/result#_315	<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.util.List hierarchyFor(java.lang.Class)>
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/allListeners#_233	<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>
<javassist.bytecode.MethodInfo: void addAttribute(javassist.bytecode.AttributeInfo)>/$stack3	<javassist.bytecode.MethodInfo: void addAttribute(javassist.bytecode.AttributeInfo)>
<javassist.bytecode.MethodInfo: void removeExceptionsAttribute()>/$stack1	<javassist.bytecode.MethodInfo: void removeExceptionsAttribute()>
<javassist.bytecode.MethodInfo: void removeCodeAttribute()>/$stack1	<javassist.bytecode.MethodInfo: void removeCodeAttribute()>
<javassist.bytecode.MethodInfo: void write(java.io.DataOutputStream)>/$stack8	<javassist.bytecode.MethodInfo: void write(java.io.DataOutputStream)>
<org.picocontainer.injectors.ConstructorInjector: java.util.List getSortedMatchingConstructors()>/matchingConstructors#_366	<org.picocontainer.injectors.ConstructorInjector: java.util.List getSortedMatchingConstructors()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void copyConfigurationFrom(org.springframework.beans.factory.config.ConfigurableBeanFactory)>/$stack13	<org.springframework.beans.factory.support.AbstractBeanFactory: void copyConfigurationFrom(org.springframework.beans.factory.config.ConfigurableBeanFactory)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>/beanNameSet#_901	<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>
<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/specificAccessors#_45	<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>
<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/generalAccessors#_46	<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.lang.Class loadClass(java.lang.String)>/$stack11	<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.lang.Class loadClass(java.lang.String)>
<com.google.common.collect.AbstractMultimap$WrappedCollection: void addToMap()>/$stack4	<com.google.common.collect.AbstractMultimap$WrappedCollection: void addToMap()>
<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/specificAccessors#_292	<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>
<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/generalAccessors#_293	<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>
<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.View onErrorUse(java.lang.Class)>/$stack12	<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.View onErrorUse(java.lang.Class)>
<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.View onErrorUse(java.lang.Class)>/$stack5	<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.View onErrorUse(java.lang.Class)>
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: java.util.Collection read(com.google.gson.stream.JsonReader)>/collection#_78	<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: java.util.Collection read(com.google.gson.stream.JsonReader)>
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/arrayIndex#13#_957	<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>/beanNameSet#2#_907	<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Collection getCollectionInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map,org.picocontainer.NameBinding,boolean)>/result#_339	<org.picocontainer.parameters.CollectionComponentParameter: java.util.Collection getCollectionInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map,org.picocontainer.NameBinding,boolean)>
<com.google.common.collect.Sets: java.util.Set filter(java.util.Set,com.google.common.base.Predicate)>/$stack14	<com.google.common.collect.Sets: java.util.Set filter(java.util.Set,com.google.common.base.Predicate)>
<com.google.common.collect.Sets: java.util.SortedSet filter(java.util.SortedSet,com.google.common.base.Predicate)>/$stack13	<com.google.common.collect.Sets: java.util.SortedSet filter(java.util.SortedSet,com.google.common.base.Predicate)>
<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>/$stack4	<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet headSet(java.lang.Object)>/$stack3	<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet headSet(java.lang.Object)>
<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet tailSet(java.lang.Object)>/$stack3	<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet tailSet(java.lang.Object)>
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/list#_99	<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedValue#7#_220	<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>
<com.google.common.collect.Sets$FilteredSortedSet: java.util.Comparator comparator()>/$stack1	<com.google.common.collect.Sets$FilteredSortedSet: java.util.Comparator comparator()>
<com.google.common.collect.Sets$FilteredSortedSet: java.lang.Object last()>/$stack3	<com.google.common.collect.Sets$FilteredSortedSet: java.lang.Object last()>
<javassist.bytecode.stackmap.TypeData$TypeName: void add(java.util.ArrayList,javassist.bytecode.stackmap.TypeData)>/list#_0	<javassist.bytecode.stackmap.TypeData$TypeName: void add(java.util.ArrayList,javassist.bytecode.stackmap.TypeData)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>/l3#_0	<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void consumeArguments(java.util.List)>/accumulatedArguments#_0	<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void consumeArguments(java.util.List)>
<com.thoughtworks.xstream.converters.collections.CollectionConverter: void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)>/target#_0	<com.thoughtworks.xstream.converters.collections.CollectionConverter: void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)>
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void addBasePackagesStereotypes(java.util.Map,java.util.List,java.util.HashSet)>/results#_0	<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void addBasePackagesStereotypes(java.util.Map,java.util.List,java.util.HashSet)>
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void findComponentsFromBasePackages(java.util.Map,java.util.List,java.util.Set)>/results#_0	<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void findComponentsFromBasePackages(java.util.Map,java.util.List,java.util.Set)>
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: int loadBeanDefinitions(java.lang.String,java.util.Set)>/actualResources#_0	<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: int loadBeanDefinitions(java.lang.String,java.util.Set)>
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/l8#_369	<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>
<java.util.AbstractList: boolean addAll(int,java.util.Collection)>/l0#_0	<java.util.AbstractList: boolean addAll(int,java.util.Collection)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>/resolved#_350	<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>/resolved#_362	<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/answer#_56	<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>/this#_0	<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>/l0#_0	<java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Iterable)>/list#_614	<com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Iterable)>
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.util.List filterPostProcessors(java.util.List)>/filteredPostProcessors_$$A_1#_148	<org.springframework.beans.factory.support.DisposableBeanAdapter: java.util.List filterPostProcessors(java.util.List)>
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.util.List filterPostProcessors(java.util.List)>/filteredPostProcessors_$$A_2#_150	<org.springframework.beans.factory.support.DisposableBeanAdapter: java.util.List filterPostProcessors(java.util.List)>
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)>/l3#_297	<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)>
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>/l3#_353	<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/pair#_1902	<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/pair_$$A_4#_1926	<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/pair_$$A_8#_1934	<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/pair_$$A_3#_1924	<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/pair_$$A_7#_1932	<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/answer#_60	<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>
<sun.security.util.AlgorithmDecomposer: java.util.Set decomposeImpl(java.lang.String)>/l2#_46	<sun.security.util.AlgorithmDecomposer: java.util.Set decomposeImpl(java.lang.String)>
<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>/group#_883	<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>
<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>/group_$$A_3#_896	<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>
<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/resolver#16#_67	<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>/l9#_2393	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>
<com.thoughtworks.xstream.core.util.PresortedMap: java.util.Set keySet()>/keySet#_58	<com.thoughtworks.xstream.core.util.PresortedMap: java.util.Set keySet()>
<org.mockito.internal.configuration.DefaultInjectionEngine: java.util.List selectMockCandidateOnName(java.util.Collection,java.lang.String)>/mockNameMatches#_78	<org.mockito.internal.configuration.DefaultInjectionEngine: java.util.List selectMockCandidateOnName(java.util.Collection,java.lang.String)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.lang.Class loadClass(java.lang.String)>/copy#_105	<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.lang.Class loadClass(java.lang.String)>
<ognl.ASTList: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/answer#_58	<ognl.ASTList: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPrimaryExpression()>/nodes#_299	<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPrimaryExpression()>
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatInlineList()>/listElements#_544	<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatInlineList()>
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatConstructorReference()>/dimensions#_630	<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatConstructorReference()>
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/values#_217	<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>
<org.apache.log4j.Category: void removeAllAppenders()>/appenders#_887	<org.apache.log4j.Category: void removeAllAppenders()>
<org.apache.log4j.Category: void removeAllAppenders()>/iter_$$A_2#_896	<org.apache.log4j.Category: void removeAllAppenders()>
<org.apache.log4j.Category: void removeAllAppenders()>/iter_$$A_1#_892	<org.apache.log4j.Category: void removeAllAppenders()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>/autowireCandidates#_252	<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/ex#25_$$A_3#_242	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/ex#25_$$A_6#_263	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/ex#25_$$A_7#_136	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/ex#25_$$A_4#_244	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/ex#25_$$A_5#_246	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ambiguousFactoryMethods_$$A_3#_508	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/candidateSet#_416	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ambiguousFactoryMethods_$$A_6#_552	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ambiguousFactoryMethods_$$A_7#_351	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ambiguousFactoryMethods_$$A_4#_510	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ambiguousFactoryMethods_$$A_5#_512	<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerContainedBean(java.lang.String,java.lang.String)>/containedBeans_$$A_2#_353	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerContainedBean(java.lang.String,java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerContainedBean(java.lang.String,java.lang.String)>/containedBeans_$$A_3#_349	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerContainedBean(java.lang.String,java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>/dependentBeans_$$A_2#_372	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>/dependentBeans_$$A_7#_368	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>/dependentBeans_$$A_6#_368	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>/dependentBeans_$$A_5#_380	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/answer#_60	<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>
<org.codehaus.jettison.util.FastStack: void push(java.lang.Object)>/this#_0	<org.codehaus.jettison.util.FastStack: void push(java.lang.Object)>
<com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/list#_58	<com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>
<java.util.Collections: void swap(java.util.List,int,int)>/l3#_496	<java.util.Collections: void swap(java.util.List,int,int)>
<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/resolver#16#_314	<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>
<java.util.ResourceBundle: java.util.Set handleKeySet()>/l2#_1851	<java.util.ResourceBundle: java.util.Set handleKeySet()>
<org.mockito.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.mockito.cglib.core.Transformer)>/bucket#_31	<org.mockito.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.mockito.cglib.core.Transformer)>
<org.mockito.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.mockito.cglib.core.Transformer)>/bucket_$$A_3#_36	<org.mockito.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.mockito.cglib.core.Transformer)>
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/registryPostProcessors#17#_619	<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/postProcessor#18#_620	<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/orderedPostProcessorNames#_685	<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/nonOrderedPostProcessorNames#_686	<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/classQueue#_332	<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/classQueue#_401	<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/answer#_56	<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/found#_422	<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>/l2_$$A_1#_321	<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>/l2_$$A_8#_338	<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>/l2_$$A_3#_326	<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>/l2_$$A_4#_328	<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/merged#_115	<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedValue#7_$$A_2#_192	<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedValue#7_$$A_3#_257	<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/l4#_88	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/newAttributes#_137	<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>
<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/items#_52	<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)>/l3_$$A_2#_78	<org.springframework.beans.factory.config.ConstructorArgumentValues: void addArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)>/l3_$$A_1#_77	<org.springframework.beans.factory.config.ConstructorArgumentValues: void addArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)>
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/ex_$$A_1_$$A_2#_511	<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack36_$$A_2	<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack36_$$A_1	<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>
<java.text.AttributedString$AttributedStringIterator: java.util.Set getAllAttributeKeys()>/l2#_974	<java.text.AttributedString$AttributedStringIterator: java.util.Set getAllAttributeKeys()>
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/source_$$A_2#_139	<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/target_$$A_2#_139	<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>
<com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/list#_69	<com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>
<java.text.AttributedString: void setAttributes(java.util.Map,int)>/l5#_714	<java.text.AttributedString: void setAttributes(java.util.Map,int)>
<java.text.AttributedString: void setAttributes(java.util.Map,int)>/l6#_715	<java.text.AttributedString: void setAttributes(java.util.Map,int)>
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>/superClasses#_124	<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/conflicts#_129	<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/i$#26#_198	<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/l6#_388	<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/l7#_389	<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>/collection_$$A_6#_532	<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>
<br.com.caelum.vraptor.http.route.PriorityRoutesList: boolean add(br.com.caelum.vraptor.http.route.Route)>/$stack2	<br.com.caelum.vraptor.http.route.PriorityRoutesList: boolean add(br.com.caelum.vraptor.http.route.Route)>
<com.google.common.collect.AbstractMultimap: boolean put(java.lang.Object,java.lang.Object)>/collection#_201	<com.google.common.collect.AbstractMultimap: boolean put(java.lang.Object,java.lang.Object)>
<org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>/l3#_152	<org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>
<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintStream)>/l4#_165	<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintStream)>
<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintWriter)>/l4#_178	<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintWriter)>
<org.springframework.beans.factory.BeanCreationException: boolean contains(java.lang.Class)>/l3#_192	<org.springframework.beans.factory.BeanCreationException: boolean contains(java.lang.Class)>
<com.google.common.collect.ForwardingCollection: boolean add(java.lang.Object)>/$stack2	<com.google.common.collect.ForwardingCollection: boolean add(java.lang.Object)>
<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>/l4#_2054	<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>
<java.util.logging.Logger: void removeChildLogger(java.util.logging.LogManager$LoggerWeakRef)>/l3#_2092	<java.util.logging.Logger: void removeChildLogger(java.util.logging.LogManager$LoggerWeakRef)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/target#_64	<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>
<org.springframework.core.convert.support.ObjectToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/target#_57	<org.springframework.core.convert.support.ObjectToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>
<br.com.caelum.vraptor.interceptor.Graph: java.util.List findCycle()>/cycle#_118	<br.com.caelum.vraptor.interceptor.Graph: java.util.List findCycle()>
<br.com.caelum.vraptor.interceptor.Graph: java.util.List findCycle()>/$stack20	<br.com.caelum.vraptor.interceptor.Graph: java.util.List findCycle()>
<com.google.common.collect.Iterables: boolean removeIfFromRandomAccessList(java.util.List,com.google.common.base.Predicate)>/$stack8	<com.google.common.collect.Iterables: boolean removeIfFromRandomAccessList(java.util.List,com.google.common.base.Predicate)>
<br.com.caelum.iogi.collections.CyclingListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/newList#_34	<br.com.caelum.iogi.collections.CyclingListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>
<com.google.common.collect.Sets: java.util.HashSet newHashSet(java.util.Iterator)>/set#_230	<com.google.common.collect.Sets: java.util.HashSet newHashSet(java.util.Iterator)>
<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)>/$stack3	<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)>
<com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>/list#_137	<com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>
<org.springframework.core.convert.support.StringToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/target#_58	<org.springframework.core.convert.support.StringToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>/iterator#_91	<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.lang.Class loadClass(java.lang.String)>/iterator#4#_130	<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.lang.Class loadClass(java.lang.String)>
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.util.List argumentValues(br.com.caelum.iogi.Instantiator)>/argumentValues#_92	<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.util.List argumentValues(br.com.caelum.iogi.Instantiator)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void preInstantiateSingletons()>/l3#_559	<org.springframework.beans.factory.support.DefaultListableBeanFactory: void preInstantiateSingletons()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void resetBeanDefinition(java.lang.String)>/l3#_669	<org.springframework.beans.factory.support.DefaultListableBeanFactory: void resetBeanDefinition(java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/l8#_226	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>
<br.com.caelum.iogi.collections.IndexedListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/newList#_31	<br.com.caelum.iogi.collections.IndexedListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>/l1#_74	<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.Object create(java.lang.Object)>/$stack37	<org.mockito.cglib.core.AbstractClassGenerator: java.lang.Object create(java.lang.Object)>
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/postProcessorName_$$A_2#_642	<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/l10#35#_650	<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/ppName#15#_709	<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/pp#23#_721	<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>
<org.picocontainer.DefaultPicoContainer: void addOrderedComponentAdapter(org.picocontainer.ComponentAdapter)>/$stack4	<org.picocontainer.DefaultPicoContainer: void addOrderedComponentAdapter(org.picocontainer.ComponentAdapter)>
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/listenerBeanName#_139	<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/l10#_147	<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/listenerBeanName#_234	<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/l4#_239	<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>
<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/iterator#_64	<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/it#_229	<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getGenericArgumentValue(java.lang.Class,java.lang.String,java.util.Set)>/l5#_277	<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getGenericArgumentValue(java.lang.Class,java.lang.String,java.util.Set)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/it1#_390	<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/it2#_391	<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: int hashCode()>/l3#_412	<org.springframework.beans.factory.config.ConstructorArgumentValues: int hashCode()>
<org.springframework.core.convert.support.ArrayToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/target#_61	<org.springframework.core.convert.support.ArrayToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>/iter#_131	<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>
<com.thoughtworks.xstream.core.util.PresortedSet: java.util.Iterator iterator()>/$stack2	<com.thoughtworks.xstream.core.util.PresortedSet: java.util.Iterator iterator()>
<com.thoughtworks.xstream.core.util.PresortedSet: java.util.List subList(int,int)>/$stack4	<com.thoughtworks.xstream.core.util.PresortedSet: java.util.List subList(int,int)>
<com.google.common.collect.LinkedHashMultimap$SetDecorator: void clear()>/i$#_214	<com.google.common.collect.LinkedHashMultimap$SetDecorator: void clear()>
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean retainAll(java.util.Collection)>/iterator#_268	<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean retainAll(java.util.Collection)>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>/$stack2	<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>/$stack5	<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>/$stack6	<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object[])>/$stack2	<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object[])>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object[])>/$stack3	<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object[])>
<org.picocontainer.injectors.IterativeInjector: org.picocontainer.Parameter[] getMatchingParameterListForSetters(org.picocontainer.PicoContainer)>/$stack7	<org.picocontainer.injectors.IterativeInjector: org.picocontainer.Parameter[] getMatchingParameterListForSetters(org.picocontainer.PicoContainer)>
<org.picocontainer.injectors.IterativeInjector: org.picocontainer.Parameter[] getMatchingParameterListForSetters(org.picocontainer.PicoContainer)>/$stack9	<org.picocontainer.injectors.IterativeInjector: org.picocontainer.Parameter[] getMatchingParameterListForSetters(org.picocontainer.PicoContainer)>
<org.picocontainer.injectors.IterativeInjector: org.picocontainer.Parameter[] getMatchingParameterListForSetters(org.picocontainer.PicoContainer)>/$stack47	<org.picocontainer.injectors.IterativeInjector: org.picocontainer.Parameter[] getMatchingParameterListForSetters(org.picocontainer.PicoContainer)>
<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>/$stack13	<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>
<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>/$stack27	<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack14	<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack16	<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack19	<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack25	<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>
<org.picocontainer.injectors.IterativeInjector: void initializeInjectionMembersAndTypeLists()>/$stack27	<org.picocontainer.injectors.IterativeInjector: void initializeInjectionMembersAndTypeLists()>
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack4	<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack9	<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack6	<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack11	<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object remove(java.lang.Object)>/$stack3	<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object remove(java.lang.Object)>
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object remove(java.lang.Object)>/$stack6	<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object remove(java.lang.Object)>
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object remove(java.lang.Object)>/$stack8	<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object remove(java.lang.Object)>
<com.thoughtworks.xstream.core.util.OrderRetainingMap: void clear()>/$stack1	<com.thoughtworks.xstream.core.util.OrderRetainingMap: void clear()>
<com.thoughtworks.xstream.core.util.OrderRetainingMap: void clear()>/$stack2	<com.thoughtworks.xstream.core.util.OrderRetainingMap: void clear()>
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.util.Set entrySet()>/$stack13	<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.util.Set entrySet()>
<org.springframework.beans.factory.BeanCreationException: void addRelatedCause(java.lang.Throwable)>/$stack2	<org.springframework.beans.factory.BeanCreationException: void addRelatedCause(java.lang.Throwable)>
<org.springframework.beans.factory.BeanCreationException: void addRelatedCause(java.lang.Throwable)>/$stack3	<org.springframework.beans.factory.BeanCreationException: void addRelatedCause(java.lang.Throwable)>
<org.springframework.beans.factory.BeanCreationException: java.lang.Throwable[] getRelatedCauses()>/$stack1	<org.springframework.beans.factory.BeanCreationException: java.lang.Throwable[] getRelatedCauses()>
<org.springframework.beans.factory.BeanCreationException: java.lang.Throwable[] getRelatedCauses()>/$stack2	<org.springframework.beans.factory.BeanCreationException: java.lang.Throwable[] getRelatedCauses()>
<org.springframework.beans.factory.BeanCreationException: java.lang.Throwable[] getRelatedCauses()>/$stack3	<org.springframework.beans.factory.BeanCreationException: java.lang.Throwable[] getRelatedCauses()>
<org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>/$stack6	<org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>
<org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>/$stack8	<org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>
<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintStream)>/$stack6	<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintStream)>
<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintStream)>/$stack8	<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintStream)>
<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintWriter)>/$stack6	<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintWriter)>
<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintWriter)>/$stack8	<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintWriter)>
<org.springframework.beans.factory.BeanCreationException: boolean contains(java.lang.Class)>/$stack5	<org.springframework.beans.factory.BeanCreationException: boolean contains(java.lang.Class)>
<org.springframework.beans.factory.BeanCreationException: boolean contains(java.lang.Class)>/$stack6	<org.springframework.beans.factory.BeanCreationException: boolean contains(java.lang.Class)>
<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>/$stack14	<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>
<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>/$stack29	<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>
<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>/$stack10	<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>
<java.util.logging.Logger: void removeChildLogger(java.util.logging.LogManager$LoggerWeakRef)>/$stack7	<java.util.logging.Logger: void removeChildLogger(java.util.logging.LogManager$LoggerWeakRef)>
<java.util.logging.Logger: void updateEffectiveLevel()>/$stack10	<java.util.logging.Logger: void updateEffectiveLevel()>
<java.util.logging.Logger: void updateEffectiveLevel()>/$stack11	<java.util.logging.Logger: void updateEffectiveLevel()>
<java.util.logging.Logger: void updateEffectiveLevel()>/$stack13	<java.util.logging.Logger: void updateEffectiveLevel()>
<ognl.EvaluationPool: void <init>(int)>/$stack5	<ognl.EvaluationPool: void <init>(int)>
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object,boolean)>/$stack11	<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object,boolean)>
<ognl.EvaluationPool: void recycle(ognl.Evaluation)>/$stack2	<ognl.EvaluationPool: void recycle(ognl.Evaluation)>
<com.google.gson.internal.bind.JsonTreeReader: void <init>(com.google.gson.JsonElement)>/$stack4	<com.google.gson.internal.bind.JsonTreeReader: void <init>(com.google.gson.JsonElement)>
<com.google.gson.internal.bind.JsonTreeReader: void beginArray()>/$stack4	<com.google.gson.internal.bind.JsonTreeReader: void beginArray()>
<com.google.gson.internal.bind.JsonTreeReader: void beginObject()>/$stack4	<com.google.gson.internal.bind.JsonTreeReader: void beginObject()>
<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>/$stack4	<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>
<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>/$stack25	<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>
<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>/$stack26	<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>
<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>/$stack32	<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>
<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>/$stack1	<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>
<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>/$stack2	<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>
<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()>/$stack1	<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()>
<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()>/$stack2	<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()>
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>/$stack6	<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>
<com.google.gson.internal.bind.JsonTreeReader: void close()>/$stack1	<com.google.gson.internal.bind.JsonTreeReader: void close()>
<com.google.gson.internal.bind.JsonTreeReader: void close()>/$stack3	<com.google.gson.internal.bind.JsonTreeReader: void close()>
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/$stack6	<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/$stack10	<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void addBeanPostProcessor(org.springframework.beans.factory.config.BeanPostProcessor)>/$stack2	<org.springframework.beans.factory.support.AbstractBeanFactory: void addBeanPostProcessor(org.springframework.beans.factory.config.BeanPostProcessor)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void addBeanPostProcessor(org.springframework.beans.factory.config.BeanPostProcessor)>/$stack4	<org.springframework.beans.factory.support.AbstractBeanFactory: void addBeanPostProcessor(org.springframework.beans.factory.config.BeanPostProcessor)>
<org.springframework.beans.factory.support.AbstractBeanFactory: int getBeanPostProcessorCount()>/$stack1	<org.springframework.beans.factory.support.AbstractBeanFactory: int getBeanPostProcessorCount()>
<org.springframework.beans.factory.support.AbstractBeanFactory: java.util.List getBeanPostProcessors()>/$stack1	<org.springframework.beans.factory.support.AbstractBeanFactory: java.util.List getBeanPostProcessors()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void copyConfigurationFrom(org.springframework.beans.factory.config.ConfigurableBeanFactory)>/$stack14	<org.springframework.beans.factory.support.AbstractBeanFactory: void copyConfigurationFrom(org.springframework.beans.factory.config.ConfigurableBeanFactory)>
<javassist.bytecode.ClassFile: void compact()>/list#_168	<javassist.bytecode.ClassFile: void compact()>
<javassist.bytecode.ClassFile: void prune()>/list#_233	<javassist.bytecode.ClassFile: void prune()>
<javassist.bytecode.ClassFile: void setSuperclass(java.lang.String)>/list#_370	<javassist.bytecode.ClassFile: void setSuperclass(java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void markBeanAsCreated(java.lang.String)>/$stack2	<org.springframework.beans.factory.support.AbstractBeanFactory: void markBeanAsCreated(java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isBeanEligibleForMetadataCaching(java.lang.String)>/$stack2	<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isBeanEligibleForMetadataCaching(java.lang.String)>
<javassist.bytecode.ClassFile: void renameClass(java.lang.String,java.lang.String)>/list#_412	<javassist.bytecode.ClassFile: void renameClass(java.lang.String,java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean removeSingletonIfCreatedForTypeCheckOnly(java.lang.String)>/$stack2	<org.springframework.beans.factory.support.AbstractBeanFactory: boolean removeSingletonIfCreatedForTypeCheckOnly(java.lang.String)>
<javassist.bytecode.ClassFile: void renameClass(java.util.Map)>/list#_449	<javassist.bytecode.ClassFile: void renameClass(java.util.Map)>
<javassist.bytecode.ClassFile: java.util.List getMethods()>/$stack1	<javassist.bytecode.ClassFile: java.util.List getMethods()>
<javassist.bytecode.ClassFile: javassist.bytecode.MethodInfo getMethod(java.lang.String)>/list#_586	<javassist.bytecode.ClassFile: javassist.bytecode.MethodInfo getMethod(java.lang.String)>
<javassist.bytecode.ClassFile: void addMethod(javassist.bytecode.MethodInfo)>/$stack2	<javassist.bytecode.ClassFile: void addMethod(javassist.bytecode.MethodInfo)>
<javassist.bytecode.ClassFile: void addMethod2(javassist.bytecode.MethodInfo)>/$stack2	<javassist.bytecode.ClassFile: void addMethod2(javassist.bytecode.MethodInfo)>
<javassist.bytecode.ClassFile: void testExistingMethod(javassist.bytecode.MethodInfo)>/$stack7	<javassist.bytecode.ClassFile: void testExistingMethod(javassist.bytecode.MethodInfo)>
<javassist.bytecode.ClassFile: void write(java.io.DataOutputStream)>/list_$$A_1#_801	<javassist.bytecode.ClassFile: void write(java.io.DataOutputStream)>
<com.google.common.collect.Collections2$FilteredCollection: boolean add(java.lang.Object)>/$stack4	<com.google.common.collect.Collections2$FilteredCollection: boolean add(java.lang.Object)>
<com.google.common.collect.Collections2$FilteredCollection: boolean addAll(java.util.Collection)>/$stack6	<com.google.common.collect.Collections2$FilteredCollection: boolean addAll(java.util.Collection)>
<com.google.common.collect.Collections2$FilteredCollection: boolean contains(java.lang.Object)>/$stack5	<com.google.common.collect.Collections2$FilteredCollection: boolean contains(java.lang.Object)>
<com.google.common.collect.Collections2$FilteredCollection: boolean isEmpty()>/$stack1	<com.google.common.collect.Collections2$FilteredCollection: boolean isEmpty()>
<com.google.common.collect.Collections2$FilteredCollection: java.util.Iterator iterator()>/$stack1	<com.google.common.collect.Collections2$FilteredCollection: java.util.Iterator iterator()>
<com.google.common.collect.Collections2$FilteredCollection: boolean remove(java.lang.Object)>/$stack5	<com.google.common.collect.Collections2$FilteredCollection: boolean remove(java.lang.Object)>
<org.picocontainer.injectors.IterativeInjector$4: java.lang.Object run(java.lang.Object)>/$stack11	<org.picocontainer.injectors.IterativeInjector$4: java.lang.Object run(java.lang.Object)>
<ognl.OgnlContext: void setRoot(java.lang.Object)>/$stack3	<ognl.OgnlContext: void setRoot(java.lang.Object)>
<ognl.OgnlContext: java.lang.Class getCurrentType()>/$stack1	<ognl.OgnlContext: java.lang.Class getCurrentType()>
<ognl.OgnlContext: java.lang.Class getCurrentType()>/$stack3	<ognl.OgnlContext: java.lang.Class getCurrentType()>
<ognl.OgnlContext: java.lang.Class getCurrentType()>/$stack4	<ognl.OgnlContext: java.lang.Class getCurrentType()>
<ognl.OgnlContext: void setCurrentType(java.lang.Class)>/$stack2	<ognl.OgnlContext: void setCurrentType(java.lang.Class)>
<ognl.OgnlContext: java.lang.Class getPreviousType()>/$stack1	<ognl.OgnlContext: java.lang.Class getPreviousType()>
<ognl.OgnlContext: java.lang.Class getPreviousType()>/$stack3	<ognl.OgnlContext: java.lang.Class getPreviousType()>
<ognl.OgnlContext: java.lang.Class getPreviousType()>/$stack5	<ognl.OgnlContext: java.lang.Class getPreviousType()>
<ognl.OgnlContext: java.lang.Class getPreviousType()>/$stack6	<ognl.OgnlContext: java.lang.Class getPreviousType()>
<ognl.OgnlContext: void setPreviousType(java.lang.Class)>/$stack2	<ognl.OgnlContext: void setPreviousType(java.lang.Class)>
<ognl.OgnlContext: void setPreviousType(java.lang.Class)>/$stack4	<ognl.OgnlContext: void setPreviousType(java.lang.Class)>
<ognl.OgnlContext: void setPreviousType(java.lang.Class)>/$stack6	<ognl.OgnlContext: void setPreviousType(java.lang.Class)>
<ognl.OgnlContext: void setPreviousType(java.lang.Class)>/$stack7	<ognl.OgnlContext: void setPreviousType(java.lang.Class)>
<ognl.OgnlContext: java.lang.Class getFirstType()>/$stack1	<ognl.OgnlContext: java.lang.Class getFirstType()>
<ognl.OgnlContext: java.lang.Class getFirstType()>/$stack3	<ognl.OgnlContext: java.lang.Class getFirstType()>
<ognl.OgnlContext: void clear()>/$stack2	<ognl.OgnlContext: void clear()>
<com.google.common.collect.LinkedListMultimap$DistinctKeyIterator: java.lang.Object next()>/$stack5	<com.google.common.collect.LinkedListMultimap$DistinctKeyIterator: java.lang.Object next()>
<com.google.common.collect.LinkedListMultimap$DistinctKeyIterator: java.lang.Object next()>/$stack14	<com.google.common.collect.LinkedListMultimap$DistinctKeyIterator: java.lang.Object next()>
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/$stack14	<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>
<com.google.common.collect.LinkedListMultimap: void removeNode(com.google.common.collect.LinkedListMultimap$Node)>/$stack17	<com.google.common.collect.LinkedListMultimap: void removeNode(com.google.common.collect.LinkedListMultimap$Node)>
<com.google.common.collect.LinkedListMultimap: int size()>/$stack1	<com.google.common.collect.LinkedListMultimap: int size()>
<com.google.common.collect.LinkedListMultimap: void clear()>/$stack1	<com.google.common.collect.LinkedListMultimap: void clear()>
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.Multiset access$600(com.google.common.collect.LinkedListMultimap)>/$stack1	<com.google.common.collect.LinkedListMultimap: com.google.common.collect.Multiset access$600(com.google.common.collect.LinkedListMultimap)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>/$stack6	<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>/$stack11	<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.lang.Class loadClass(java.lang.String)>/$stack8	<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.lang.Class loadClass(java.lang.String)>
<com.thoughtworks.xstream.core.util.CompositeClassLoader: void cleanup()>/$stack5	<com.thoughtworks.xstream.core.util.CompositeClassLoader: void cleanup()>
<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: void push(java.lang.Class)>/$stack2	<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: void push(java.lang.Class)>
<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: java.lang.Class[] getDependencies()>/$stack1	<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: java.lang.Class[] getDependencies()>
<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: java.lang.Class[] getDependencies()>/$stack2	<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: java.lang.Class[] getDependencies()>
<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: java.lang.String getMessage()>/$stack3	<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: java.lang.String getMessage()>
<com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>/$stack3	<com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>
<com.google.common.collect.AbstractMultimap$WrappedCollection: void removeIfEmpty()>/$stack2	<com.google.common.collect.AbstractMultimap$WrappedCollection: void removeIfEmpty()>
<com.google.common.collect.AbstractMultimap$WrappedCollection: int size()>/$stack1	<com.google.common.collect.AbstractMultimap$WrappedCollection: int size()>
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean equals(java.lang.Object)>/$stack2	<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMultimap$WrappedCollection: int hashCode()>/$stack1	<com.google.common.collect.AbstractMultimap$WrappedCollection: int hashCode()>
<com.google.common.collect.AbstractMultimap$WrappedCollection: java.lang.String toString()>/$stack1	<com.google.common.collect.AbstractMultimap$WrappedCollection: java.lang.String toString()>
<com.google.common.collect.AbstractMultimap$WrappedCollection: java.util.Collection getDelegate()>/$stack1	<com.google.common.collect.AbstractMultimap$WrappedCollection: java.util.Collection getDelegate()>
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean add(java.lang.Object)>/$stack4	<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean add(java.lang.Object)>
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean add(java.lang.Object)>/$stack6	<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean add(java.lang.Object)>
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean addAll(java.util.Collection)>/$stack7	<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean addAll(java.util.Collection)>
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean addAll(java.util.Collection)>/$stack9	<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean addAll(java.util.Collection)>
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean contains(java.lang.Object)>/$stack2	<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean contains(java.lang.Object)>
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean containsAll(java.util.Collection)>/$stack2	<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean containsAll(java.util.Collection)>
<com.google.common.collect.AbstractMultimap$WrappedCollection: void clear()>/$stack3	<com.google.common.collect.AbstractMultimap$WrappedCollection: void clear()>
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean remove(java.lang.Object)>/$stack3	<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean remove(java.lang.Object)>
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean removeAll(java.util.Collection)>/$stack7	<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean removeAll(java.util.Collection)>
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean removeAll(java.util.Collection)>/$stack9	<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean removeAll(java.util.Collection)>
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean retainAll(java.util.Collection)>/$stack7	<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean retainAll(java.util.Collection)>
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean retainAll(java.util.Collection)>/$stack9	<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean retainAll(java.util.Collection)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void preInstantiateSingletons()>/$stack10	<org.springframework.beans.factory.support.DefaultListableBeanFactory: void preInstantiateSingletons()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack9	<org.springframework.beans.factory.support.DefaultListableBeanFactory: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void removeBeanDefinition(java.lang.String)>/$stack7	<org.springframework.beans.factory.support.DefaultListableBeanFactory: void removeBeanDefinition(java.lang.String)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void resetBeanDefinition(java.lang.String)>/$stack7	<org.springframework.beans.factory.support.DefaultListableBeanFactory: void resetBeanDefinition(java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingleton(java.lang.String,java.lang.Object)>/$stack12	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingleton(java.lang.String,java.lang.Object)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingletonFactory(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/$stack12	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingletonFactory(java.lang.String,org.springframework.beans.factory.ObjectFactory)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/$stack19	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/$stack47	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void onSuppressedException(java.lang.Exception)>/$stack4	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void onSuppressedException(java.lang.Exception)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void onSuppressedException(java.lang.Exception)>/$stack6	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void onSuppressedException(java.lang.Exception)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void removeSingleton(java.lang.String)>/$stack10	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void removeSingleton(java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: int getSingletonCount()>/$stack3	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: int getSingletonCount()>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void beforeSingletonCreation(java.lang.String)>/$stack2	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void beforeSingletonCreation(java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void afterSingletonCreation(java.lang.String)>/$stack2	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void afterSingletonCreation(java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isSingletonCurrentlyInCreation(java.lang.String)>/$stack2	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isSingletonCurrentlyInCreation(java.lang.String)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroySingletons()>/$stack24	<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroySingletons()>
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>/$stack6	<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>/$stack9	<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void add(java.util.Collection)>/$stack2	<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void add(java.util.Collection)>
<java.util.ResourceBundle: java.util.Set handleKeySet()>/$stack6	<java.util.ResourceBundle: java.util.Set handleKeySet()>
<java.util.ResourceBundle: java.util.Set handleKeySet()>/$stack7	<java.util.ResourceBundle: java.util.Set handleKeySet()>
<java.util.ResourceBundle: java.util.Set handleKeySet()>/$stack9	<java.util.ResourceBundle: java.util.Set handleKeySet()>
<ognl.ObjectArrayPool$SizePool: void <init>(int,int)>/$stack6	<ognl.ObjectArrayPool$SizePool: void <init>(int,int)>
<ognl.ObjectArrayPool$SizePool: java.lang.Object[] create()>/$stack8	<ognl.ObjectArrayPool$SizePool: java.lang.Object[] create()>
<ognl.ObjectArrayPool$SizePool: void recycle(java.lang.Object[])>/$stack5	<ognl.ObjectArrayPool$SizePool: void recycle(java.lang.Object[])>
<org.springframework.context.support.AbstractApplicationContext: void addApplicationListener(org.springframework.context.ApplicationListener)>/$stack3	<org.springframework.context.support.AbstractApplicationContext: void addApplicationListener(org.springframework.context.ApplicationListener)>
<org.springframework.context.support.AbstractApplicationContext: java.util.Collection getApplicationListeners()>/$stack1	<org.springframework.context.support.AbstractApplicationContext: java.util.Collection getApplicationListeners()>
<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>/$stack3	<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>
<br.com.caelum.vraptor.validator.DefaultValidator: boolean hasErrors()>/$stack1	<br.com.caelum.vraptor.validator.DefaultValidator: boolean hasErrors()>
<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void <init>(com.google.common.collect.AbstractMultimap$WrappedCollection)>/$stack3	<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void <init>(com.google.common.collect.AbstractMultimap$WrappedCollection)>
<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void <init>(com.google.common.collect.AbstractMultimap$WrappedCollection,java.util.Iterator)>/$stack4	<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void <init>(com.google.common.collect.AbstractMultimap$WrappedCollection,java.util.Iterator)>
<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void validateIterator()>/$stack3	<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void validateIterator()>
<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void validateIterator()>/$stack4	<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void validateIterator()>
<org.springframework.context.event.AbstractApplicationEventMulticaster: void addApplicationListener(org.springframework.context.ApplicationListener)>/$stack5	<org.springframework.context.event.AbstractApplicationEventMulticaster: void addApplicationListener(org.springframework.context.ApplicationListener)>
<org.springframework.context.event.AbstractApplicationEventMulticaster: void addApplicationListenerBean(java.lang.String)>/$stack5	<org.springframework.context.event.AbstractApplicationEventMulticaster: void addApplicationListenerBean(java.lang.String)>
<org.springframework.context.event.AbstractApplicationEventMulticaster: void removeApplicationListener(org.springframework.context.ApplicationListener)>/$stack5	<org.springframework.context.event.AbstractApplicationEventMulticaster: void removeApplicationListener(org.springframework.context.ApplicationListener)>
<org.springframework.context.event.AbstractApplicationEventMulticaster: void removeApplicationListenerBean(java.lang.String)>/$stack5	<org.springframework.context.event.AbstractApplicationEventMulticaster: void removeApplicationListenerBean(java.lang.String)>
<org.springframework.context.event.AbstractApplicationEventMulticaster: void removeAllListeners()>/$stack4	<org.springframework.context.event.AbstractApplicationEventMulticaster: void removeAllListeners()>
<org.springframework.context.event.AbstractApplicationEventMulticaster: void removeAllListeners()>/$stack6	<org.springframework.context.event.AbstractApplicationEventMulticaster: void removeAllListeners()>
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/$stack22	<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/$stack32	<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/$stack39	<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/$stack28	<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/$stack47	<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>
<org.picocontainer.injectors.NamedFieldInjector: void initializeInjectionMembersAndTypeLists()>/$stack21	<org.picocontainer.injectors.NamedFieldInjector: void initializeInjectionMembersAndTypeLists()>
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/$stack7	<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/$stack13	<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/$stack17	<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>
<br.com.caelum.vraptor.http.route.DefaultRouter: void add(br.com.caelum.vraptor.http.route.Route)>/$stack2	<br.com.caelum.vraptor.http.route.DefaultRouter: void add(br.com.caelum.vraptor.http.route.Route)>
<br.com.caelum.vraptor.http.route.DefaultRouter: java.lang.String urlFor(java.lang.Class,java.lang.reflect.Method,java.lang.Object[])>/$stack6	<br.com.caelum.vraptor.http.route.DefaultRouter: java.lang.String urlFor(java.lang.Class,java.lang.reflect.Method,java.lang.Object[])>
<javassist.bytecode.MethodInfo: java.util.List getAttributes()>/$stack1	<javassist.bytecode.MethodInfo: java.util.List getAttributes()>
<javassist.bytecode.MethodInfo: java.util.List getAttributes()>/$stack2	<javassist.bytecode.MethodInfo: java.util.List getAttributes()>
<javassist.bytecode.MethodInfo: void addAttribute(javassist.bytecode.AttributeInfo)>/$stack2	<javassist.bytecode.MethodInfo: void addAttribute(javassist.bytecode.AttributeInfo)>
<javassist.bytecode.MethodInfo: void addAttribute(javassist.bytecode.AttributeInfo)>/$stack5	<javassist.bytecode.MethodInfo: void addAttribute(javassist.bytecode.AttributeInfo)>
<javassist.bytecode.MethodInfo: void setExceptionsAttribute(javassist.bytecode.ExceptionsAttribute)>/$stack2	<javassist.bytecode.MethodInfo: void setExceptionsAttribute(javassist.bytecode.ExceptionsAttribute)>
<javassist.bytecode.MethodInfo: void setExceptionsAttribute(javassist.bytecode.ExceptionsAttribute)>/$stack3	<javassist.bytecode.MethodInfo: void setExceptionsAttribute(javassist.bytecode.ExceptionsAttribute)>
<javassist.bytecode.MethodInfo: void setCodeAttribute(javassist.bytecode.CodeAttribute)>/$stack2	<javassist.bytecode.MethodInfo: void setCodeAttribute(javassist.bytecode.CodeAttribute)>
<javassist.bytecode.MethodInfo: void setCodeAttribute(javassist.bytecode.CodeAttribute)>/$stack3	<javassist.bytecode.MethodInfo: void setCodeAttribute(javassist.bytecode.CodeAttribute)>
<javassist.bytecode.MethodInfo: void read(javassist.bytecode.MethodInfo,java.lang.String,java.util.Map)>/$stack19	<javassist.bytecode.MethodInfo: void read(javassist.bytecode.MethodInfo,java.lang.String,java.util.Map)>
<javassist.bytecode.MethodInfo: void read(javassist.bytecode.MethodInfo,java.lang.String,java.util.Map)>/$stack22	<javassist.bytecode.MethodInfo: void read(javassist.bytecode.MethodInfo,java.lang.String,java.util.Map)>
<javassist.bytecode.MethodInfo: void read(java.io.DataInputStream)>/$stack10	<javassist.bytecode.MethodInfo: void read(java.io.DataInputStream)>
<javassist.bytecode.MethodInfo: void write(java.io.DataOutputStream)>/$stack5	<javassist.bytecode.MethodInfo: void write(java.io.DataOutputStream)>
<javassist.bytecode.MethodInfo: void write(java.io.DataOutputStream)>/$stack6	<javassist.bytecode.MethodInfo: void write(java.io.DataOutputStream)>
<org.picocontainer.injectors.TypedFieldInjector: void initializeInjectionMembersAndTypeLists()>/$stack21	<org.picocontainer.injectors.TypedFieldInjector: void initializeInjectionMembersAndTypeLists()>
<org.joda.time.format.DateTimeFormatterBuilder: void clear()>/$stack1	<org.joda.time.format.DateTimeFormatterBuilder: void clear()>
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)>/$stack2	<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)>
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)>/$stack4	<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(java.lang.Object)>
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/$stack3	<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/$stack5	<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/$stack4	<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/$stack11	<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/$stack13	<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>
<org.picocontainer.injectors.AnnotatedFieldInjector: void initializeInjectionMembersAndTypeLists()>/$stack26	<org.picocontainer.injectors.AnnotatedFieldInjector: void initializeInjectionMembersAndTypeLists()>
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack15	<org.springframework.beans.factory.config.ConstructorArgumentValues: void addArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack19	<org.springframework.beans.factory.config.ConstructorArgumentValues: void addArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(java.lang.Object)>/$stack3	<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(java.lang.Object)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(java.lang.Object,java.lang.String)>/$stack4	<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(java.lang.Object,java.lang.String)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack2	<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack6	<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack8	<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getGenericArgumentValue(java.lang.Class,java.lang.String,java.util.Set)>/$stack6	<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getGenericArgumentValue(java.lang.Class,java.lang.String,java.util.Set)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: int getArgumentCount()>/$stack3	<org.springframework.beans.factory.config.ConstructorArgumentValues: int getArgumentCount()>
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean isEmpty()>/$stack3	<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean isEmpty()>
<org.springframework.beans.factory.config.ConstructorArgumentValues: void clear()>/$stack2	<org.springframework.beans.factory.config.ConstructorArgumentValues: void clear()>
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/$stack10	<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/$stack18	<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/$stack12	<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/$stack20	<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.ConstructorArgumentValues: int hashCode()>/$stack4	<org.springframework.beans.factory.config.ConstructorArgumentValues: int hashCode()>
<com.thoughtworks.xstream.core.util.PresortedSet: boolean add(java.lang.Object)>/$stack2	<com.thoughtworks.xstream.core.util.PresortedSet: boolean add(java.lang.Object)>
<com.thoughtworks.xstream.core.util.PresortedSet: boolean addAll(java.util.Collection)>/$stack2	<com.thoughtworks.xstream.core.util.PresortedSet: boolean addAll(java.util.Collection)>
<com.thoughtworks.xstream.core.util.PresortedSet: void clear()>/$stack1	<com.thoughtworks.xstream.core.util.PresortedSet: void clear()>
<com.thoughtworks.xstream.core.util.PresortedSet: boolean contains(java.lang.Object)>/$stack2	<com.thoughtworks.xstream.core.util.PresortedSet: boolean contains(java.lang.Object)>
<com.thoughtworks.xstream.core.util.PresortedSet: boolean containsAll(java.util.Collection)>/$stack2	<com.thoughtworks.xstream.core.util.PresortedSet: boolean containsAll(java.util.Collection)>
<com.thoughtworks.xstream.core.util.PresortedSet: boolean equals(java.lang.Object)>/$stack2	<com.thoughtworks.xstream.core.util.PresortedSet: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.PresortedSet: int hashCode()>/$stack1	<com.thoughtworks.xstream.core.util.PresortedSet: int hashCode()>
<com.thoughtworks.xstream.core.util.PresortedSet: boolean isEmpty()>/$stack1	<com.thoughtworks.xstream.core.util.PresortedSet: boolean isEmpty()>
<com.thoughtworks.xstream.core.util.PresortedSet: java.util.Iterator iterator()>/$stack1	<com.thoughtworks.xstream.core.util.PresortedSet: java.util.Iterator iterator()>
<com.thoughtworks.xstream.core.util.PresortedSet: boolean remove(java.lang.Object)>/$stack2	<com.thoughtworks.xstream.core.util.PresortedSet: boolean remove(java.lang.Object)>
<com.thoughtworks.xstream.core.util.PresortedSet: boolean removeAll(java.util.Collection)>/$stack2	<com.thoughtworks.xstream.core.util.PresortedSet: boolean removeAll(java.util.Collection)>
<com.thoughtworks.xstream.core.util.PresortedSet: boolean retainAll(java.util.Collection)>/$stack2	<com.thoughtworks.xstream.core.util.PresortedSet: boolean retainAll(java.util.Collection)>
<com.thoughtworks.xstream.core.util.PresortedSet: int size()>/$stack1	<com.thoughtworks.xstream.core.util.PresortedSet: int size()>
<com.thoughtworks.xstream.core.util.PresortedSet: java.util.List subList(int,int)>/$stack3	<com.thoughtworks.xstream.core.util.PresortedSet: java.util.List subList(int,int)>
<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object[] toArray()>/$stack1	<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object[] toArray()>
<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object[] toArray(java.lang.Object[])>/$stack2	<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object[] toArray(java.lang.Object[])>
<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object first()>/$stack1	<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object first()>
<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object first()>/$stack3	<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object first()>
<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object last()>/$stack1	<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object last()>
<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object last()>/$stack3	<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object last()>
<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object last()>/$stack4	<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object last()>
<com.google.common.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate()>/$stack1	<com.google.common.collect.LinkedHashMultimap$SetDecorator: java.util.Set delegate()>
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean add(java.lang.Object)>/$stack3	<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean add(java.lang.Object)>
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean addAll(java.util.Collection)>/$stack3	<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean addAll(java.util.Collection)>
<com.google.common.collect.LinkedHashMultimap$SetDecorator: void clear()>/$stack3	<com.google.common.collect.LinkedHashMultimap$SetDecorator: void clear()>
<com.google.common.collect.LinkedHashMultimap$SetDecorator: void clear()>/$stack6	<com.google.common.collect.LinkedHashMultimap$SetDecorator: void clear()>
<com.google.common.collect.LinkedHashMultimap$SetDecorator: java.util.Iterator iterator()>/$stack2	<com.google.common.collect.LinkedHashMultimap$SetDecorator: java.util.Iterator iterator()>
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean remove(java.lang.Object)>/$stack3	<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean remove(java.lang.Object)>
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean removeAll(java.util.Collection)>/$stack3	<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean removeAll(java.util.Collection)>
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean retainAll(java.util.Collection)>/$stack5	<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean retainAll(java.util.Collection)>
