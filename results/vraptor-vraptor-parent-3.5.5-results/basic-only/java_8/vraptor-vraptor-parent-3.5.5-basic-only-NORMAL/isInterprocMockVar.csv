<br.com.caelum.vraptor.http.DefaultResourceTranslator: br.com.caelum.vraptor.resource.ResourceMethod translate(br.com.caelum.vraptor.core.RequestInfo)>/request#_48
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack31
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack33
<ognl.ASTAnd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack11
<org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory: org.springframework.web.context.request.WebRequest getObject()>/$stack3
<org.springframework.web.context.request.RequestContextListener: void requestInitialized(javax.servlet.ServletRequestEvent)>/$stack12
<br.com.caelum.vraptor.ioc.spring.SpringProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/context#_54
<br.com.caelum.vraptor.scan.WebAppBootstrapFactory: br.com.caelum.vraptor.scan.WebAppBootstrap scannerFor(br.com.caelum.vraptor.config.BasicConfiguration)>/$stack7
<ognl.NumericExpression: java.lang.String coerceToNumeric(java.lang.String,ognl.OgnlContext,ognl.Node)>/$stack63
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack41
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack4
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack11
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack109
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack29
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack31
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack35
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldNotSupportNonGenericLists()>/$stack11
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack11
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider$1: java.lang.Object instanceFor(java.lang.Class)>/$stack3
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/previousRoot#_55
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/previousRoot#_72
<ognl.ListPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack77
<ognl.ListPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack74
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/genericType#_79
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/type#_81
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/origin#_116
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack60
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack263
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/currObj#_215
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack225
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack63
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/currObj_$$A_1#_337
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack49
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack271
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/lastChild#24#_462
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack216
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack64
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/lastChild#24_$$A_1#_593
<ognl.ASTVarRef: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/value#_104
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/origin#_60
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack3
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack8
<br.com.caelum.vraptor.restfulie.controller.ResourceControllerInterceptor: java.util.EnumSet allowedMethods()>/$stack7
<br.com.caelum.vraptor.resource.DefaultResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack15
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/listHolder#_68
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack17
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack21
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack44
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack49
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void settingShouldNullifyUpToIndexAndIgnoreRemoval()>/$stack3
<ognl.ObjectPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack16
<ognl.OgnlRuntime: java.lang.reflect.Method getMethod(ognl.OgnlContext,java.lang.Class,java.lang.String,ognl.Node[],boolean)>/$stack69
<ognl.enhance.ExpressionCompiler: java.lang.Class getRootExpressionClass(ognl.Node,ognl.OgnlContext)>/$stack9
<br.com.caelum.vraptor.http.ognl.OgnlFacade: void setValue(java.lang.String,java.lang.String,java.lang.String[])>/$stack11
<br.com.caelum.vraptor.http.ognl.OgnlFacade: java.lang.Object get(java.lang.String)>/root#_124
<ognl.enhance.ExpressionCompiler: ognl.enhance.EnhancedClassLoader getClassLoader(ognl.OgnlContext)>/$stack5
<ognl.enhance.ExpressionCompiler: ognl.enhance.EnhancedClassLoader getClassLoader(ognl.OgnlContext)>/$stack13
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack17
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack32
<br.com.caelum.vraptor.ioc.spring.SpringProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/webRequest#_55
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack43
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#_136
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack359
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack330
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack271
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack46
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack27
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack31
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack25
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack16
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack32
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/root#_84
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/$stack5
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack64
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack68
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack78
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack180
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack189
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack194
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack25
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack294
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack147
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack30
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack51
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack58
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack53
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack57
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack94
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack169
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack173
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack178
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack25
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack300
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack135
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack89
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack47
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack58
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack55
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack56
<ognl.ASTStaticMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/root#_71
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack65
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack69
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack79
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/root#_78
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack179
<br.com.caelum.vraptor.resource.DefaultResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/$stack6
<br.com.caelum.vraptor.view.DefaultPageResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack17
<ognl.OgnlRuntime: java.lang.reflect.Method getMethod(ognl.OgnlContext,java.lang.Class,java.lang.String,ognl.Node[],boolean)>/$stack74
<ognl.OgnlRuntime: java.lang.reflect.Method getMethod(ognl.OgnlContext,java.lang.Class,java.lang.String,ognl.Node[],boolean)>/cast#_2361
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/$stack32
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack69
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$1: br.com.caelum.vraptor.http.route.DefaultRouteBuilder answer(org.mockito.invocation.InvocationOnMock)>/$stack8
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.ParametersControl build()>/$stack6
<br.com.caelum.vraptor.http.ognl.OgnlFacade: void setValue(java.lang.String,java.lang.String,java.lang.String[])>/$stack8
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$1: br.com.caelum.vraptor.http.route.DefaultRouteBuilder answer(org.mockito.invocation.InvocationOnMock)>/$stack10
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack327
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack285
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack208
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack10
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack55
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack223
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack277
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack44
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack230
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack285
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack73
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack51
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack220
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack216
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/$stack7
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/$stack21
<ognl.enhance.ExpressionCompiler: void addCastString(ognl.OgnlContext,java.lang.String)>/$stack3
<ognl.enhance.ExpressionCompiler: java.lang.String castExpression(ognl.OgnlContext,ognl.Node,java.lang.String)>/$stack61
<ognl.enhance.ExpressionCompiler: java.lang.String generateGetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack17
<ognl.enhance.ExpressionCompiler: java.lang.String generateGetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack28
<ognl.enhance.ExpressionCompiler: java.lang.String generateSetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack22
<ognl.enhance.ExpressionCompiler: java.lang.String generateSetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack27
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack65
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldPutParametersOnFlashScopeOnRedirect()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotPutParametersOnFlashScopeOnRedirectIfThereAreNoParameters()>/$stack6
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack19
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack13
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack5
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack39
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack9
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldSetRequestAttribute()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldIncludeExtractedNameWhenSimplyIncluding()>/$stack10
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldNotIncludeTheAttributeWhenTheValueIsNull()>/$stack5
<org.springframework.web.context.request.RequestContextListener: void requestInitialized(javax.servlet.ServletRequestEvent)>/$stack6
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpServletRequest _getHttpServletRequest()>/$stack1
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack18
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack13
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack59
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack65
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack35
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/$stack6
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack35
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack35
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack16
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack25
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack29
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack37
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack40
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack43
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack13
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack17
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack20
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack51
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack55
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack43
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack10
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/$stack6
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithoutAlias()>/$stack5
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithAlias()>/$stack5
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack27
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack21
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack27
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack33
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void doesNothingIfResultWasAlreadyUsed()>/$stack10
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack14
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack21
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack23
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void addsTheErrorsOnTheResult()>/$stack8
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withRootException()>/$stack8
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withNestedException()>/$stack9
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithoutAlias()>/$stack10
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithAlias()>/$stack6
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack11
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldNotCallDeserializerIfItDoesntAcceptGivenContentType()>/$stack7
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentType()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfVendorized()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfAtomizedAlike()>/$stack6
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack8
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack9
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForCollectionInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForListInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateLinkedListForQueueInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateHashSetListForSetInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateTreeSetListForSortedSetInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldInstantiateAListOfStrings()>/$stack6
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack39
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack28
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack27
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack17
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack8
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack11
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack19
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack22
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack35
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack34
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack49
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack27
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack25
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack27
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack15
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack15
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack29
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack29
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack33
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack22
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack29
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack22
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack24
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack52
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldOnlySetBundleOnI18nMessagesThatHasNotBeenSetBefore()>/$stack10
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack11
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack19
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack17
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack16
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack6
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack8
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack21
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack22
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack12
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack19
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack16
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack19
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsNotAnnotatedWithHttpMethods()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsAnnotatedWithHttpGetMethod()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void cannotRedirectWhenLogicMethodIsAnnotatedWithAnyHttpMethodButGet()>/$stack8
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldAddAllowHeader()>/$stack7
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldSendErrorMethodNotAllowed()>/$stack7
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldNotSendMethodNotAllowedIfTheRequestMethodIsOptions()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldRedirectIncludingContext()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack9
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack38
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack38
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack18
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack5
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack26
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack11
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack15
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack12
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack13
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack9
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack20
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack23
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack18
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack38
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack37
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack52
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack20
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack14
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack16
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack14
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack32
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack31
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack46
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack22
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack25
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack3
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack6
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack3
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack6
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack9
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack12
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack15
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack18
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack21
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack24
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack27
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack30
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack32
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack36
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldConfigureAllClasses()>/$stack10
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldNotDoAnythingIfHasNoClasses()>/$stack7
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack13
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack17
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack16
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack14
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack19
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/$stack6
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatusWhenMovingToLogic()>/$stack10
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack9
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack14
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPage()>/$stack12
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void shouldSend404IfNothingIsRendered()>/$stack11
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPageWithAlias()>/$stack13
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void outjectsTheRequestParameters()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldNotRedirectIfHasNotErrors()>/$stack10
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack11
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack16
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack19
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack7
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack16
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack7
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack16
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack13
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack17
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandlerTest: void shouldRegisterInterceptorsOnRegistry()>/$stack4
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/$stack17
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/$stack13
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack12
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsCacheableAddMaxAge()>/$stack5
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack15
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack18
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack5
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack8
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack7
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack11
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetNotFoundStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetHeader()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetOkStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetConflictStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetAcceptedStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack9
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack24
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack27
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack9
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack14
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendError()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack12
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendErrorWithMessage()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack13
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSetStatusCode()>/$stack3
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack6
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack7
<javax.servlet.http.HttpServletResponseWrapper: javax.servlet.http.HttpServletResponse _getHttpServletResponse()>/$stack1
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void shouldRegisterTypesOnDeserializers()>/$stack3
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack244
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack228
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack71
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack229
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/$stack9
<org.mockito.internal.util.MockUtil: boolean isMockitoMock(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: org.mockito.internal.creation.MethodInterceptorFilter getInterceptor(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.scan.NullWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/@parameter0
<br.com.caelum.vraptor.http.iogi.VRaptorDependencyProvider: void <init>(br.com.caelum.vraptor.ioc.Container)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter3
<org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.Mockito: org.mockito.stubbing.Stubber doReturn(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: org.joda.time.DateMidnight convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<org.mockito.internal.stubbing.answers.Returns: void <init>(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.route.RulesTest$1: void <init>(br.com.caelum.vraptor.http.route.RulesTest,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator: void <init>(br.com.caelum.vraptor.core.Converters,br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.vraptor.core.Localization,br.com.caelum.iogi.spi.ParameterNamesProvider,javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator: void <init>(br.com.caelum.vraptor.core.Converters,br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.vraptor.core.Localization,br.com.caelum.iogi.spi.ParameterNamesProvider,javax.servlet.http.HttpServletRequest)>/@parameter2
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator: void <init>(br.com.caelum.vraptor.core.Converters,br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.vraptor.core.Localization,br.com.caelum.iogi.spi.ParameterNamesProvider,javax.servlet.http.HttpServletRequest)>/@parameter4
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter0
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter1
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter2
<br.com.caelum.vraptor.VRaptor: void init(javax.servlet.FilterConfig)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void writeDetails(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void <init>(com.thoughtworks.xstream.XStream,java.io.Writer,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter2
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: org.joda.time.DateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParser: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.MessageInterpolator,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.MethodInfo,javax.validation.Validator,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<org.hamcrest.core.IsSame: void <init>(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsSame: org.hamcrest.Matcher sameInstance(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.DefaultResourceTranslator: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>/@parameter0
<ognl.NoSuchPropertyException: java.lang.String getReason(java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: void <init>(br.com.caelum.vraptor.core.Converters,java.util.ResourceBundle)>/@parameter0
<br.com.caelum.vraptor.serialization.I18nMessageSerialization: void <init>(br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.Localization)>/@parameter0
<net.vidageek.mirror.dsl.Mirror: net.vidageek.mirror.dsl.AccessorsController on(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder,br.com.caelum.vraptor.serialization.xstream.Serializee)>/@parameter0
<org.mockito.internal.verification.MockAwareVerificationMode: void <init>(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringProvider: void start(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringProvider: org.springframework.web.context.ConfigurableWebApplicationContext getParentApplicationContext(javax.servlet.ServletContext)>/@parameter0
<javax.servlet.http.HttpServletRequestWrapper: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object)>/@parameter1
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object,boolean)>/@parameter1
<ognl.EvaluationPool: void recycle(ognl.Evaluation)>/@parameter0
<ognl.EvaluationPool: void recycleAll(ognl.Evaluation)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter1
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter1
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter2
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: void <init>(br.com.caelum.iogi.spi.LocaleProvider)>/@parameter0
<org.hamcrest.core.IsEqual: void <init>(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean areArraysEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean areArrayLengthsEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean areArrayElementsEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean isArray(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.config.ApplicationConfiguration: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandler: void <init>(br.com.caelum.vraptor.interceptor.InterceptorRegistry)>/@parameter0
<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeRequest(java.lang.Class)>/request#_90
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeRequest(java.lang.Class)>/request_$$A_2#_96
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeResponse(java.lang.Class)>/response_$$A_2#_115
<br.com.caelum.vraptor.scan.JavassistBootstrapGenerator: java.lang.Class generate(java.util.Collection,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter1
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: void <init>(java.lang.String,br.com.caelum.vraptor.resource.ResourceMethod,java.util.Set,br.com.caelum.vraptor.http.route.ParametersControl,int,java.lang.String[])>/@parameter3
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: br.com.caelum.vraptor.resource.ResourceMethod resourceMethod(br.com.caelum.vraptor.http.MutableRequest,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,java.util.Map,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter2
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter1
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)>/@parameter0
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void fillIntoRequest(java.lang.String,br.com.caelum.vraptor.http.MutableRequest)>/@parameter1
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter1
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter2
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter4
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter5
<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>/@parameter0
<ognl.SimpleNode: java.lang.Object evaluateGetValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/@parameter0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval,java.lang.Object,java.lang.reflect.Method)>/@parameter1
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: java.lang.Object removeNullsFromArray(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void add(java.lang.Object,java.lang.reflect.Method,java.lang.Object)>/@parameter2
<com.google.inject.util.Providers: com.google.inject.Provider of(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.deserialization.DeserializesHandler: void <init>(br.com.caelum.vraptor.deserialization.Deserializers)>/@parameter0
<br.com.caelum.vraptor.test.HttpServletRequestMock: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.http.MutableRequest)>/@parameter1
<ognl.OgnlContext: void setClassResolver(ognl.ClassResolver)>/@parameter0
<ognl.OgnlContext: void setTypeConverter(ognl.TypeConverter)>/@parameter0
<ognl.OgnlContext: void setMemberAccess(ognl.MemberAccess)>/@parameter0
<ognl.OgnlContext: void setRoot(java.lang.Object)>/@parameter0
<ognl.OgnlContext: void setCurrentObject(java.lang.Object)>/@parameter0
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result#_493
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_1#_496
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_4#_505
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_6#_511
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_7#_514
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_8#_517
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result#_541
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_1#_545
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_3#_557
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_5#_565
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_6#_569
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_7#_573
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result#_599
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result_$$A_1#_603
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result_$$A_3#_623
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result_$$A_4#_627
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result_$$A_5#_631
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter1
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter2
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter3
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter4
<br.com.caelum.vraptor.http.iogi.RequestAttributeInstantiator: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.VRaptorResponse: void <init>(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<net.vidageek.mirror.invoke.DefaultSetterMethodHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.core.DefaultConverters: void <init>(br.com.caelum.vraptor.ioc.Container)>/@parameter0
<org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>/@parameter0
<ognl.OgnlOps: boolean booleanValue(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/@parameter0
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/@parameter1
<br.com.caelum.vraptor.interceptor.ForwardToDefaultViewInterceptor: void <init>(br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.interceptor.download.FileDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.http.ognl.GenericNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: org.joda.time.LocalDate convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter1
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter2
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter3
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter4
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<net.vidageek.mirror.set.DefaultSetterHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.route.Rules: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.http.EncodingHandlerFactory: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter2
<br.com.caelum.vraptor.interceptor.OutjectResult: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: java.sql.Time convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: void <init>(javax.servlet.ServletContext)>/@parameter0
<javax.servlet.ServletRequestWrapper: void <init>(javax.servlet.ServletRequest)>/@parameter0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter2
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter3
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter4
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter5
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter6
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: java.util.Date convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter1
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/@parameter0
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/@parameter1
<net.vidageek.mirror.set.FieldSetterByName: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter2
<org.hamcrest.core.IsNot: org.hamcrest.Matcher not(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.Iogi: void <init>(br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.iogi.spi.LocaleProvider)>/@parameter1
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter1
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter2
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/@parameter2
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: br.com.caelum.iogi.parameters.Parameters parseParameters(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: void <init>(br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findGetter(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findSetter(java.lang.Object,java.lang.String,java.lang.Class)>/@parameter0
<org.apache.commons.fileupload.servlet.ServletRequestContext: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest$AnyController: void <init>(br.com.caelum.vraptor.Validator)>/@parameter0
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultRouter: void <init>(br.com.caelum.vraptor.http.route.RoutesConfiguration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter3
<br.com.caelum.vraptor.http.route.DefaultRouter: void add(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<net.vidageek.mirror.DefaultAccessorsController: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/@parameter1
<net.vidageek.mirror.set.FieldSetterByField: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void <init>(br.com.caelum.vraptor.core.Converters)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Class getActualType(java.lang.reflect.Type)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTProperty: java.lang.reflect.Method getIndexedWriteMethod(java.beans.PropertyDescriptor)>/@parameter0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/@parameter1
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: boolean requestingStaticFile(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: java.lang.String uriRelativeToContextRoot(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<javax.servlet.ServletResponseWrapper: void <init>(javax.servlet.ServletResponse)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.view.DefaultValidationViewsFactory: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<ognl.Ognl: java.util.Map addDefaultContext(java.lang.Object,java.util.Map)>/@parameter0
<ognl.Ognl: java.util.Map addDefaultContext(java.lang.Object,ognl.ClassResolver,ognl.TypeConverter,ognl.MemberAccess,java.util.Map)>/@parameter0
<ognl.Ognl: void setTypeConverter(java.util.Map,ognl.TypeConverter)>/@parameter1
<ognl.Ognl: void setValue(java.lang.Object,java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.Ognl: void setValue(java.lang.String,java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.iogi.VRaptorParameterNamesProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.view.DefaultPathResolver: void <init>(br.com.caelum.vraptor.http.FormatResolver)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPathResolver: java.lang.String pathFor(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Collection scan(br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Map scanBasePackages(java.util.List,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter1
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void scanPackage(java.lang.String,org.scannotation.AnnotationDB,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter2
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter2
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<javax.servlet.ServletRequestEvent: void <init>(javax.servlet.ServletContext,javax.servlet.ServletRequest)>/@parameter0
<javax.servlet.ServletRequestEvent: void <init>(javax.servlet.ServletContext,javax.servlet.ServletRequest)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$SomeProxy: void <init>(org.hibernate.proxy.LazyInitializer)>/@parameter0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter1
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter3
<net.vidageek.mirror.invoke.DefaultInvocationHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<net.vidageek.mirror.invoke.MethodHandlerByName: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter1
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter2
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter3
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void <init>(br.com.caelum.vraptor.core.InterceptorHandlerFactory)>/@parameter0
<br.com.caelum.vraptor.http.VRaptorRequest: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.validator.DefaultBeanValidator: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.Validator,javax.validation.MessageInterpolator)>/@parameter0
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder: void <init>(br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<javax.servlet.http.HttpServletResponseWrapper: void <init>(javax.servlet.http.HttpServletResponse)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher equalTo(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher sameInstance(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.resource.HttpMethod: br.com.caelum.vraptor.resource.HttpMethod of(javax.servlet.http.HttpServletRequest)>/@parameter0
<org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter1
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter2
<org.mockito.internal.MockitoCore: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>/@parameter0
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.http.ognl.OgnlFacade)>/@parameter0
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.http.ognl.OgnlFacade)>/@parameter1
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.http.ognl.OgnlFacade)>/@parameter2
<ognl.Evaluation: void <init>(ognl.SimpleNode,java.lang.Object)>/@parameter1
<ognl.Evaluation: void <init>(ognl.SimpleNode,java.lang.Object,boolean)>/@parameter1
<ognl.Evaluation: void init(ognl.SimpleNode,java.lang.Object,boolean)>/@parameter1
<ognl.MethodFailedException: void <init>(java.lang.Object,java.lang.String,java.lang.Throwable)>/@parameter0
<org.springframework.web.context.request.ServletRequestAttributes: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter3
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<net.vidageek.mirror.invoke.MethodHandlerByMethod: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter1
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider: void <init>(br.com.caelum.vraptor.core.StaticContentHandler)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/@parameter1
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter1
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter3
<ognl.ObjectPropertyAccessor: java.lang.Object getPossibleProperty(java.util.Map,java.lang.Object,java.lang.String)>/@parameter1
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter0
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<ognl.ObjectPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: java.lang.Class getPrimitiveWrapperClass(java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: java.lang.Class[] findParameterTypes(java.lang.Class,java.lang.reflect.Method)>/@parameter0
<br.com.caelum.vraptor.validator.DIConstraintValidatorFactory: void <init>(br.com.caelum.vraptor.ioc.Container)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.Class classForName(ognl.OgnlContext,java.lang.String)>/$stack13
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter1
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/@parameter1
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/@parameter0
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/@parameter1
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: org.joda.time.LocalDateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter2
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter4
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter4
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/@parameter1
<br.com.caelum.vraptor.http.ognl.AbstractOgnlTestSupport: void configOgnl(br.com.caelum.vraptor.core.Converters)>/@parameter0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/@parameter0
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.XStream: java.lang.String toXML(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.XStream: void toXML(java.lang.Object,java.io.Writer)>/@parameter0
<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>/@parameter0
<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder)>/@parameter0
<net.vidageek.mirror.get.DefaultGetterHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<ognl.enhance.ExpressionCompiler: java.lang.String getCastString(java.lang.Class)>/@parameter0
<ognl.enhance.ExpressionCompiler: java.lang.String getRootExpression(ognl.Node,java.lang.Object,ognl.OgnlContext)>/@parameter1
<br.com.caelum.vraptor.ioc.spring.DefaultSpringLocator: org.springframework.web.context.ConfigurableWebApplicationContext getApplicationContext(javax.servlet.ServletContext)>/@parameter0
<org.apache.commons.fileupload.servlet.ServletFileUpload: boolean isMultipartContent(javax.servlet.http.HttpServletRequest)>/@parameter0
<org.apache.commons.fileupload.servlet.ServletFileUpload: java.util.List parseRequest(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.ognl.OgnlFacade: void <init>(br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter1
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter2
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter3
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter4
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter5
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter6
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter7
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter1
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter2
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator$VRaptorTypeConverter: void <init>(br.com.caelum.vraptor.http.iogi.VRaptorInstantiator,br.com.caelum.vraptor.core.Converters)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter2
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter1
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/@parameter0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/@parameter1
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/@parameter0
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.VRaptor$1: void <init>(br.com.caelum.vraptor.VRaptor,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<br.com.caelum.vraptor.VRaptor$1: void <init>(br.com.caelum.vraptor.VRaptor,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter2
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void registerDestroyListener(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void start(javax.servlet.http.HttpSession)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(javax.servlet.http.HttpSession)>/@parameter0
<com.google.inject.util.Providers$1: void <init>(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: void start(javax.servlet.ServletContext)>/@parameter0
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.config.BasicConfiguration: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.test.HttpSessionMock: void <init>(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$Bazinga: void <init>(org.hibernate.proxy.HibernateProxy)>/@parameter0
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<javax.servlet.jsp.jstl.core.Config: java.lang.Object get(javax.servlet.ServletRequest,java.lang.String)>/@parameter0
<javax.servlet.jsp.jstl.core.Config: java.lang.Object get(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.view.DefaultLogicResultTest$TheComponent: void <init>(br.com.caelum.vraptor.view.DefaultLogicResultTest,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.view.DefaultLogicResult$2: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack10
<br.com.caelum.vraptor.view.DefaultLogicResult$2: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResult$2: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack24
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/$stack3
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/$stack3
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack20
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack46
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack48
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack29
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack32
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack38
<ognl.SimpleNode: boolean lastChild(ognl.OgnlContext)>/$stack3
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder$WithNameImpl$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack13
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object)>/$stack3
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/$stack9
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack107
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatus$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack7
<br.com.caelum.vraptor.validator.DefaultValidator$LocalizationSupplier: java.util.ResourceBundle get()>/$stack2
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest$1: void register(java.lang.Class,java.lang.Class)>/$stack4
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack209
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack193
<ognl.ASTVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack4
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod,java.util.List,java.util.ResourceBundle)>/$stack25
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: java.lang.Object createParameter(br.com.caelum.vraptor.http.ognl.OgnlParametersProvider$Parameter,java.util.Map,java.util.ResourceBundle,java.util.List)>/$stack25
<br.com.caelum.vraptor.view.DefaultPageResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack9
<ognl.enhance.ExpressionCompiler: java.lang.String castExpression(ognl.OgnlContext,ognl.Node,java.lang.String)>/$stack26
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator$VRaptorTypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack9
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator$VRaptorTypeConverter: java.lang.Object setPropertiesAfterConversions(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack12
<br.com.caelum.vraptor.interceptor.FlashInterceptor$1: void beforeRedirect()>/$stack4
<br.com.caelum.vraptor.interceptor.FlashInterceptor$1: void beforeRedirect()>/$stack8
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.String toString()>/$stack8
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.String toString()>/$stack12
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getAuthType()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.Cookie[] getCookies()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: long getDateHeader(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.util.Enumeration getHeaders(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.util.Enumeration getHeaderNames()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: int getIntHeader(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getMethod()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getPathInfo()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getPathTranslated()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getContextPath()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getQueryString()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRemoteUser()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: boolean isUserInRole(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.security.Principal getUserPrincipal()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRequestedSessionId()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRequestURI()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.StringBuffer getRequestURL()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getServletPath()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession(boolean)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: boolean isRequestedSessionIdValid()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: boolean isRequestedSessionIdFromCookie()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: boolean isRequestedSessionIdFromURL()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: boolean isRequestedSessionIdFromUrl()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: boolean authenticate(javax.servlet.http.HttpServletResponse)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: void login(java.lang.String,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletRequestWrapper: void logout()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.util.Collection getParts()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.Part getPart(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: void addCookie(javax.servlet.http.Cookie)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: boolean containsHeader(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: java.lang.String encodeURL(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: java.lang.String encodeRedirectURL(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: java.lang.String encodeUrl(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: java.lang.String encodeRedirectUrl(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: void sendError(int,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void sendError(int)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: void sendRedirect(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: void setDateHeader(java.lang.String,long)>/$stack4
<javax.servlet.http.HttpServletResponseWrapper: void addDateHeader(java.lang.String,long)>/$stack4
<javax.servlet.http.HttpServletResponseWrapper: void setHeader(java.lang.String,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void addHeader(java.lang.String,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void setIntHeader(java.lang.String,int)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void addIntHeader(java.lang.String,int)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void setStatus(int)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: void setStatus(int,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: int getStatus()>/$stack1
<javax.servlet.http.HttpServletResponseWrapper: java.lang.String getHeader(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: java.util.Collection getHeaders(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: java.util.Collection getHeaderNames()>/$stack1
<ognl.ASTRootVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.ioc.spring.HttpServletResponseProvider: javax.servlet.http.HttpServletResponse getObject()>/$stack2
<br.com.caelum.vraptor.ioc.spring.HttpServletResponseProvider: java.lang.Object getObject()>/$stack1
<org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory: javax.servlet.http.HttpSession getObject()>/$stack2
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack18
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: org.picocontainer.MutablePicoContainer getSessionContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack4
<br.com.caelum.vraptor.ioc.spring.HttpSessionProvider: javax.servlet.http.HttpSession getObject()>/$stack2
<br.com.caelum.vraptor.ioc.spring.HttpServletRequestProvider: javax.servlet.http.HttpServletRequest getObject()>/$stack2
<br.com.caelum.vraptor.ioc.spring.HttpServletRequestProvider: java.lang.Object getObject()>/$stack1
<org.springframework.web.context.request.RequestContextListener: void requestInitialized(javax.servlet.ServletRequestEvent)>/$stack4
<org.springframework.web.context.request.RequestContextListener: void requestDestroyed(javax.servlet.ServletRequestEvent)>/$stack4
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry$1: void setAttribute(java.lang.String,java.lang.Object)>/$stack4
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeRequest()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getHeader(java.lang.String)>/$stack2
<org.springframework.web.context.request.ServletWebRequest: java.lang.String[] getHeaderValues(java.lang.String)>/$stack3
<org.springframework.web.context.request.ServletWebRequest: java.util.Iterator getHeaderNames()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getParameter(java.lang.String)>/$stack2
<org.springframework.web.context.request.ServletWebRequest: java.lang.String[] getParameterValues(java.lang.String)>/$stack2
<org.springframework.web.context.request.ServletWebRequest: java.util.Iterator getParameterNames()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.util.Map getParameterMap()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.util.Locale getLocale()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getContextPath()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getRemoteUser()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.security.Principal getUserPrincipal()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: boolean isUserInRole(java.lang.String)>/$stack2
<org.springframework.web.context.request.ServletWebRequest: boolean isSecure()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>/$stack10
<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>/$stack19
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getDescription(boolean)>/request#_205
<ognl.NumericExpression: java.lang.String coerceToNumeric(java.lang.String,ognl.OgnlContext,ognl.Node)>/value#_70
<ognl.NumericExpression: java.lang.String coerceToNumeric(java.lang.String,ognl.OgnlContext,ognl.Node)>/$stack60
<ognl.NumericExpression: java.lang.String coerceToNumeric(java.lang.String,ognl.OgnlContext,ognl.Node)>/$stack67
<ognl.NumericExpression: java.lang.String coerceToNumeric(java.lang.String,ognl.OgnlContext,ognl.Node)>/$stack78
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack364
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack338
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack283
<br.com.caelum.vraptor.core.JstlLocalization: java.util.Locale localeFor(java.lang.String)>/$stack7
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack7
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack14
<br.com.caelum.vraptor.ioc.guice.VRaptorAbstractModule$1: br.com.caelum.vraptor.http.MutableRequest get()>/$stack2
<br.com.caelum.vraptor.ioc.guice.VRaptorAbstractModule$1: java.lang.Object get()>/$stack1
<br.com.caelum.vraptor.VRaptorTest$MyProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/$stack4
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/$stack4
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/$stack9
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/$stack12
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack19
<ognl.ListPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack11
<ognl.ListPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack16
<ognl.ListPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack31
<ognl.ListPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack8
<ognl.ListPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack13
<ognl.ListPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack28
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/$stack10
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack61
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack239
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack13
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack236
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack22
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack161
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack27
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack146
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack155
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack130
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack32
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack35
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack96
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack100
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack50
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack258
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack13
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack220
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack22
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack150
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack28
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack134
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack142
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack106
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack32
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack36
<br.com.caelum.vraptor.ioc.guice.VRaptorAbstractModule$4: br.com.caelum.vraptor.http.MutableResponse get()>/$stack2
<br.com.caelum.vraptor.ioc.guice.VRaptorAbstractModule$4: java.lang.Object get()>/$stack1
<ognl.ASTVarRef: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack10
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack18
<br.com.caelum.vraptor.ioc.guice.VRaptorAbstractModule$3: javax.servlet.http.HttpSession get()>/$stack2
<ognl.ASTThisVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack3
<org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory: javax.servlet.ServletRequest getObject()>/$stack2
<org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory: java.lang.Object getObject()>/$stack1
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack36
<br.com.caelum.vraptor.http.VRaptorRequest: java.lang.String toString()>/$stack4
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/converter#_101
<br.com.caelum.vraptor.restfulie.controller.ResourceControllerInterceptor: br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource retrieveResource(java.lang.Class)>/$stack12
<br.com.caelum.vraptor.resource.DefaultResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/chain#_39
<ognl.enhance.ContextClassLoader: java.lang.Class findClass(java.lang.String)>/$stack5
<ognl.enhance.ContextClassLoader: java.lang.Class findClass(java.lang.String)>/$stack9
<ognl.ObjectPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack38
<ognl.ObjectPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack41
<ognl.ObjectPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack93
<ognl.ObjectPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack95
<ognl.ObjectPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack98
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/$stack6
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/converter#_1074
<ognl.OgnlRuntime: java.lang.reflect.Constructor getConvertedConstructorAndArgs(ognl.OgnlContext,java.lang.Object,java.util.List,java.lang.Object[],java.lang.Object[])>/converter#_1096
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/$stack17
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack14
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/$stack19
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack19
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack12
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack15
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack12
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack16
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack34
<ognl.OgnlRuntime: boolean isFieldAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Field,java.lang.String)>/$stack4
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/$stack4
<ognl.OgnlRuntime: java.lang.reflect.Method getMethod(ognl.OgnlContext,java.lang.Class,java.lang.String,ognl.Node[],boolean)>/$stack70
<ognl.OgnlRuntime: java.lang.reflect.Method getMethod(ognl.OgnlContext,java.lang.Class,java.lang.String,ognl.Node[],boolean)>/$stack79
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/$stack44
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/$stack13
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/$stack37
<ognl.enhance.ExpressionCompiler: java.lang.String castExpression(ognl.OgnlContext,ognl.Node,java.lang.String)>/$stack78
<ognl.enhance.ExpressionCompiler: java.lang.String castExpression(ognl.OgnlContext,ognl.Node,java.lang.String)>/$stack81
<ognl.enhance.ExpressionCompiler: java.lang.Class getRootExpressionClass(ognl.Node,ognl.OgnlContext)>/$stack4
<ognl.enhance.ExpressionCompiler: java.lang.Class getRootExpressionClass(ognl.Node,ognl.OgnlContext)>/$stack5
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/converter#_109
<ognl.ArrayPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack8
<ognl.ArrayPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack19
<ognl.ArrayPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack9
<ognl.ArrayPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack48
<org.mockito.internal.MockHandler: java.lang.Object handle(org.mockito.internal.invocation.Invocation)>/$stack28
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack75
<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/@parameter0
<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>/@parameter0
<org.picocontainer.MutablePicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object)>/@parameter0
<org.mockito.stubbing.Stubber: java.lang.Object when(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.scan.WebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/@parameter0
<br.com.caelum.vraptor.core.Converters: br.com.caelum.vraptor.Converter to(java.lang.Class)>/@parameter0
<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.restfulie.headers.RestDefaults: java.util.Calendar getLastModifiedFor(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/@parameter0
<br.com.caelum.vraptor.restfulie.headers.RestDefaults: java.lang.String getEtagFor(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/@parameter0
<br.com.caelum.vraptor.core.StaticContentHandler: boolean requestingStaticFile(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.core.StaticContentHandler: void deferProcessingToContainer(javax.servlet.FilterChain,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.core.InterceptorStack: void next(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.NoRootSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.MethodInfo: void setResourceMethod(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<ognl.TypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource: void configureRelations(br.com.caelum.vraptor.restfulie.relation.RelationBuilder)>/@parameter0
<br.com.caelum.vraptor.http.UrlToResourceTranslator: br.com.caelum.vraptor.resource.ResourceMethod translate(br.com.caelum.vraptor.core.RequestInfo)>/@parameter0
<br.com.caelum.vraptor.resource.ResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/@parameter0
<br.com.caelum.vraptor.resource.MethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/@parameter0
<javax.servlet.RequestDispatcher: void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/@parameter0
<br.com.caelum.vraptor.serialization.RepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.Interceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.Interceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<javax.servlet.RequestDispatcher: void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/@parameter0
<br.com.caelum.vraptor.proxy.Proxifier: boolean isProxy(java.lang.Object)>/@parameter0
<net.vidageek.mirror.provider.ReflectionProvider: net.vidageek.mirror.provider.FieldReflectionProvider getFieldReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter0
<ognl.enhance.OgnlExpressionCompiler: java.lang.Class getSuperOrInterfaceClass(java.lang.reflect.Method,java.lang.Class)>/@parameter0
<ognl.MemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.Download: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.restfulie.RestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/@parameter0
<org.springframework.web.context.ConfigurableWebApplicationContext: void setServletContext(javax.servlet.ServletContext)>/@parameter0
<net.vidageek.mirror.provider.ReflectionProvider: net.vidageek.mirror.provider.MethodReflectionProvider getMethodReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter0
<ognl.MemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter0
<ognl.MemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.EncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter0
<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/@parameter1
<ognl.Node: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.JavaSource: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.SimpleNode: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.core.StaticContentHandler: void deferProcessingToContainer(javax.servlet.FilterChain,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.core.InterceptorStack: void next(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<ognl.Node: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.JavaSource: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.Converter: java.lang.Object convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter1
<ognl.TypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.http.route.ParametersControl: void fillIntoRequest(java.lang.String,br.com.caelum.vraptor.http.MutableRequest)>/@parameter1
<javax.servlet.RequestDispatcher: void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/@parameter1
<br.com.caelum.vraptor.interceptor.Interceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<javax.servlet.RequestDispatcher: void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/@parameter1
<br.com.caelum.vraptor.deserialization.Deserializers: br.com.caelum.vraptor.deserialization.Deserializer deserializerFor(java.lang.String,br.com.caelum.vraptor.ioc.Container)>/@parameter1
<ognl.PropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.MemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter1
<ognl.PropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.enhance.ExpressionAccessor: void set(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.MemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter1
<ognl.MemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.MarshallingStrategy: void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder)>/@parameter1
<br.com.caelum.vraptor.http.EncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<br.com.caelum.vraptor.core.StaticContentHandler: void deferProcessingToContainer(javax.servlet.FilterChain,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter2
<br.com.caelum.vraptor.http.route.Router: br.com.caelum.vraptor.resource.ResourceMethod parse(java.lang.String,br.com.caelum.vraptor.resource.HttpMethod,br.com.caelum.vraptor.http.MutableRequest)>/@parameter2
<ognl.enhance.OgnlExpressionCompiler: java.lang.String createLocalReference(ognl.OgnlContext,java.lang.String,java.lang.Class)>/@parameter2
<br.com.caelum.vraptor.http.ParametersProvider: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod,java.util.List,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.interceptor.Interceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
