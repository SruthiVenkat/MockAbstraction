<org.hamcrest.core.IsEqual: void describeTo(org.hamcrest.Description)>/$stack2
<org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object)>/o2#_0
<org.hamcrest.core.IsEqual: boolean areArrayLengthsEqual(java.lang.Object,java.lang.Object)>/o2#_0
<org.hamcrest.core.IsEqual: boolean areArrayElementsEqual(java.lang.Object,java.lang.Object)>/o2#_0
<org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>/operand#_0
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void setUp()>/$stack6
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/page#_69
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack21
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/page#_83
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack21
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/logic#_103
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack26
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/controller#_104
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/logic#_122
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack26
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/controller#_123
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack2
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack5
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack2
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack5
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack8
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack11
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack14
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack17
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack20
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack23
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack26
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack29
<br.com.caelum.vraptor.http.route.DefaultTypeFinderTest: void shouldGetTypesCorrectly()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultTypeFinderTest: void shouldGetTypesCorrectlyOnInheritance()>/$stack16
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack9
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack15
<org.apache.commons.fileupload.servlet.ServletFileUpload: boolean isMultipartContent(javax.servlet.http.HttpServletRequest)>/request#_0
<org.apache.commons.fileupload.servlet.ServletFileUpload: java.util.List parseRequest(javax.servlet.http.HttpServletRequest)>/request#_0
<br.com.caelum.vraptor.http.route.RulesTest$1: void <init>(br.com.caelum.vraptor.http.route.RulesTest,br.com.caelum.vraptor.http.route.Router)>/x0#_0
<br.com.caelum.vraptor.http.route.DefaultRouter: void add(br.com.caelum.vraptor.http.route.Route)>/r#_0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void start(javax.servlet.http.HttpSession)>/session#_0
<br.com.caelum.vraptor.resource.DefaultResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/$stack5
<br.com.caelum.vraptor.validator.BeanValidatorTest: void setup()>/$stack11
<ognl.SimpleNode: java.lang.Object evaluateGetValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandlerTest: void setUp()>/$stack2
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandlerTest: void shouldRegisterInterceptorsOnRegistry()>/$stack2
<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest)>/request#_0
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeRequest(java.lang.Class)>/request_$$A_1#_100
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeResponse(java.lang.Class)>/response_$$A_1#_119
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void setUp()>/$stack4
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void shouldRegisterTypesOnDeserializers()>/$stack2
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack17
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack21
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithDeserializerAdapter()>/$stack10
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsISO8601Attribute()>/$stack22
<br.com.caelum.vraptor.http.VRaptorRequestTest: void setup()>/$stack25
<org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>/value#_0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void setup()>/$stack15
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void setup()>/$stack4
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldInvokePrimitiveConverter()>/$stack6
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldInvokeCustomTypeConverter()>/$stack5
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/initializer#_412
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/proxy#_413
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void setup()>/$stack16
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization serializationWithAdapter(com.google.gson.JsonSerializer)>/$stack4
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest: void setup()>/response#_35
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/initializer#_396
<br.com.caelum.vraptor.config.BasicConfigurationTest: void config()>/$stack2
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/resourceInstance#_0
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/$stack8
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack1
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack4
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack6
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeNoLinksIfThereIsNoTransition()>/$stack2
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeOneLinkIfThereIsATransition()>/$stack16
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack24
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack31
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack33
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void setUp()>/$stack2
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void setUp()>/$stack6
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldDoNothingWhenThereIsNoFlashParameters()>/$stack5
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack8
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack10
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack8
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack10
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack13
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack16
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack14
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotCrashWhenSessionIsInvalid()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotCrashWhenSessionIsInvalid()>/$stack18
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void setup()>/$stack4
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void doesNothingIfResultWasAlreadyUsed()>/$stack8
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack13
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void setup()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void setup()>/$stack4
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void handlesInclude()>/$stack15
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void handlesInclude()>/$stack20
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleTheCorrectMethod()>/$stack15
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleTheCorrectMethod()>/$stack20
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveRequestMethods()>/$stack15
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveRequestMethods()>/$stack20
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveGetRequestUsingThe_methodParameter()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveGetRequestUsingThe_methodParameter()>/$stack24
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldThrowExceptionWhenRequestANotKnownMethod()>/$stack17
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldOverrideTheHttpMethodByUsingThe_methodParameter()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldOverrideTheHttpMethodByUsingThe_methodParameter()>/$stack24
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfRootContext()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfRootContext()>/$stack24
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContext()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContext()>/$stack24
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfPlainRootContext()>/$stack15
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfPlainRootContext()>/$stack20
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfPlainRootContext()>/$stack15
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void setUp()>/$stack7
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfPlainRootContext()>/$stack20
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfNonRootContext()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfNonRootContext()>/$stack24
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack24
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack30
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack36
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldNotThrowExceptionsOnHeaders()>/httpResult#_102
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContextButPlainRequest()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContextButPlainRequest()>/$stack24
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSendError()>/httpResult#_115
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSendErrorWithMessage()>/httpResult#_123
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSetStatus()>/httpResult#_131
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldBeAbleToChainMethodsOnHttpResult()>/httpResult#_139
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnMoved()>/httpResult#_148
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnMovedToLogic()>/httpResult#_164
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onRefererResultShouldThrowExceptionsOnForward()>/referer#_173
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onRefererResultShouldThrowExceptionsOnRedirect()>/referer#_182
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnNotFound()>/status#_191
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnHeader()>/status#_200
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnCreated()>/status#_209
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnCreatedWithLocation()>/status#_217
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnOk()>/status#_226
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnConflict()>/status#_235
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMethodNotAllowed()>/status#_243
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMovedPermanentlyTo()>/status#_251
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMovedPermanentlyToLogic()>/status#_259
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onXMLSerializationResultShouldThrowExceptionOnlyOnSerializeMethod()>/serialization#_273
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: void start(javax.servlet.ServletContext)>/context#_0
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onSerializerResultsShouldBeAbleToCreateValidationInstancesEvenIfChildClassesUsesCovariantType()>/serialization#_326
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack1
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack42
<net.vidageek.mirror.invoke.MethodHandlerByMethod: java.lang.Object withArgs(java.lang.Object[])>/$stack6
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void setup()>/$stack9
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack10
<br.com.caelum.vraptor.validator.MethodValidatorTest: void setup()>/$stack9
<br.com.caelum.vraptor.validator.MethodValidatorTest: void setup()>/$stack17
<br.com.caelum.vraptor.validator.MethodValidatorTest: void setup()>/$stack22
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithConstraint()>/$stack8
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithConstraint()>/$stack20
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldUseDefaultLocale()>/$stack8
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldUseDefaultLocale()>/$stack15
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithTwoConstraints()>/$stack11
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithTwoConstraints()>/$stack23
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest: void setup()>/response#_42
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/i#2#_76
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/genericType#_79
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/type#_81
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/context#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/proxifier#_118
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/origin#_116
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void setup()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void setup()>/$stack10
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: boolean replay(java.lang.Exception)>/$stack8
<ognl.MethodFailedException: void <init>(java.lang.Object,java.lang.String,java.lang.Throwable)>/source#_0
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack7
<br.com.caelum.vraptor.util.extjs.DefaultExtJsonTest: void setUp()>/$stack14
<br.com.caelum.vraptor.view.DefaultPageResult: void defaultView()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResult: void include()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResult: void forwardTo(java.lang.String)>/$stack7
<br.com.caelum.vraptor.http.VRaptorResponse: void <init>(javax.servlet.http.HttpServletResponse)>/response#_0
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void setup()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void setup()>/$stack10
<com.google.inject.util.Providers$1: java.lang.String toString()>/$stack3
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void setup()>/$stack4
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack18
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack20
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack24
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack27
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack20
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack22
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack26
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack29
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldNotOutjectIfThereIsNoReturnType()>/$stack8
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldNotOutjectIfReturnIsVoid()>/$stack8
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void setUp()>/$stack16
<br.com.caelum.vraptor.view.DefaultPageResultTest: void setup()>/$stack17
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldRedirectIncludingContext()>/$stack6
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack2
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileRedirect()>/$stack3
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shoudNotExecuteLogicWhenUsingResultOf()>/$stack6
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shoudThrowProxyInvocationExceptionIfAndExceptionOccursWhenUsingResultOf()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void setUp()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatus()>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatusWhenMovingToLogic()>/$stack9
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack8
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack13
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendError()>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack10
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendErrorWithMessage()>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack11
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSetStatusCode()>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/writer#_135
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteStringBody()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteInputStreamBody()>/$stack5
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteReaderBody()>/$stack5
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownload: void write(javax.servlet.http.HttpServletResponse)>/response#_0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod,java.util.List,java.util.ResourceBundle)>/$stack7
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: org.joda.time.LocalDate convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldNotCallDeserializerIfItDoesntAcceptGivenContentType()>/$stack5
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentType()>/$stack5
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfVendorized()>/$stack5
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfAtomizedAlike()>/$stack5
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void setUp()>/$stack7
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack6
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack8
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack11
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack13
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/deserializer#_93
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack20
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack28
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/deserializer#_110
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack20
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack28
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/deserializer#_130
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack24
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack32
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack13
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack21
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/deserializer#_159
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack20
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack28
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/deserializer#_176
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack20
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: java.lang.Object removeNullsFromArray(java.lang.Object)>/array#_0
<org.springframework.web.context.request.RequestContextListener: void requestInitialized(javax.servlet.ServletRequestEvent)>/$stack12
<org.springframework.web.context.request.RequestContextListener: void requestInitialized(javax.servlet.ServletRequestEvent)>/request#_57
<ognl.Ognl: java.util.Map addDefaultContext(java.lang.Object,java.util.Map)>/root#_0
<ognl.Ognl: java.util.Map addDefaultContext(java.lang.Object,ognl.ClassResolver,ognl.TypeConverter,ognl.MemberAccess,java.util.Map)>/root#_0
<ognl.Ognl: void setValue(java.lang.Object,java.util.Map,java.lang.Object,java.lang.Object)>/root#_0
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_3#_124
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/pre_$$A_5#_120
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/$stack8
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeNoLinksIfThereIsNoTransition()>/$stack2
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeOneLinkIfThereIsATransition()>/$stack17
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack25
<br.com.caelum.vraptor.validator.ValidatorAcceptanceTest: void setup()>/$stack8
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void setup()>/$stack9
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack1
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack11
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack21
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldInstantiateAListOfStrings()>/$stack5
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/removal#_53
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findGetter(java.lang.Object,java.lang.String)>/target#_0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findSetter(java.lang.Object,java.lang.String,java.lang.Class)>/target#_0
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldFlushWholeStreamToHttpResponse()>/$stack4
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack4
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack5
<org.springframework.web.context.request.ServletRequestAttributes: void <init>(javax.servlet.http.HttpServletRequest)>/request#_0
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/context#_0
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack10
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack15
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack14
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack17
<br.com.caelum.vraptor.view.DefaultLogicResultTest: br.com.caelum.vraptor.view.DefaultLogicResultTest$MyComponent givenDispatcherWillBeReturnedWhenRequested()>/$stack16
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack11
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack14
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack11
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack15
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldPutParametersOnFlashScopeOnRedirect()>/$stack4
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotPutParametersOnFlashScopeOnRedirectIfThereAreNoParameters()>/$stack4
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack18
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsNotAnnotatedWithHttpMethods()>/$stack4
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsAnnotatedWithHttpGetMethod()>/$stack4
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void cannotRedirectWhenLogicMethodIsAnnotatedWithAnyHttpMethodButGet()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack9
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack36
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack38
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack4
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack19
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack13
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack18
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack22
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack14
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack16
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack20
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack24
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldThrowExceptionWhenThereIsAParameterContainingDotClass()>/$stack14
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack11
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack13
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack16
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack20
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack24
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack25
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldThrowException()>/$stack12
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack28
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack31
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack34
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack37
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack22
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack24
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack30
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack33
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack36
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack34
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack36
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack39
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack42
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack45
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack48
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack51
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldFlushWholeStreamToHttpResponse()>/$stack4
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack4
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack5
<br.com.caelum.vraptor.http.EncodingHandlerFactoryTest: void shouldReturnANullHandlerWhenThereIsNoEncodingInitParameter()>/$stack7
<br.com.caelum.vraptor.http.EncodingHandlerFactoryTest: void shouldReturnAWebXmlHandlerWhenThereIsAnEncodingInitParameter()>/$stack7
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void setUp()>/$stack3
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack17
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack12
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: org.joda.time.DateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack6
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/previousRoot#_55
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/previousRoot#_72
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack109
<br.com.caelum.vraptor.VRaptor$1: java.lang.Object insideRequest(br.com.caelum.vraptor.ioc.Container)>/$stack4
<org.mockito.internal.stubbing.answers.Returns: java.lang.String toString()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack6
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack5
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack6
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack13
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack8
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldUseConverterIfItExists()>/$stack11
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack11
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack15
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack19
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack15
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack11
<br.com.caelum.vraptor.http.EncodingHandlerFactory: void <init>(javax.servlet.ServletContext)>/context#_0
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack41
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void setUp()>/$stack3
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsSimpleDoNothing()>/$stack3
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsCacheableAddMaxAge()>/$stack4
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack14
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack17
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withRootException()>/$stack6
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withRootException()>/$stack7
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack4
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack7
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withNestedException()>/$stack7
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withNestedException()>/$stack8
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/pre_$$A_3#_137
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void setUp()>/$stack4
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void setUp()>/$stack8
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithoutAlias()>/$stack4
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithAlias()>/$stack4
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithoutAlias()>/$stack9
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithAlias()>/$stack5
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: org.joda.time.DateMidnight convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: org.joda.time.LocalDateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack6
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack4
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack9
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack14
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPage()>/$stack11
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void shouldSend404IfNothingIsRendered()>/$stack10
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPageWithAlias()>/$stack12
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack15
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack15
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack15
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/object#_117
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack15
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack19
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void setup()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void setup()>/$stack10
<ognl.OgnlRuntime: java.lang.Class getPrimitiveWrapperClass(java.lang.Class)>/primitiveClass#_0
<org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>/l0#_0
<org.hamcrest.Matchers: org.hamcrest.Matcher equalTo(java.lang.Object)>/l0#_0
<org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>/l0#_0
<org.hamcrest.Matchers: org.hamcrest.Matcher sameInstance(java.lang.Object)>/l0#_0
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/target#_0
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/context#_0
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/context#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/context#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/source#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/typeClass_$$A_3#_1143
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/context#_0
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/context#_0
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/target#_0
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/source#_0
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/target#_0
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/context#_0
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/target#_0
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/context#_0
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/target#_0
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/context#_0
<br.com.caelum.vraptor.scan.WebBasedClasspathResolverTest: void callerContextDifferentFromRequestedClassLoaderReturnsCurrentClassLoader()>/context#_15
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack16
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack22
<ognl.OgnlRuntime: java.lang.reflect.Method getMethod(ognl.OgnlContext,java.lang.Class,java.lang.String,ognl.Node[],boolean)>/$stack69
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/pre_$$A_6#_2705
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/t#16_$$A_2#_2737
<br.com.caelum.vraptor.http.VRaptorRequest: void <init>(javax.servlet.http.HttpServletRequest)>/request#_0
<br.com.caelum.vraptor.test.HttpServletRequestMock: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.http.MutableRequest)>/mock#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/source#_0
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanWEBINFClasses()>/$stack21
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanBasePackages()>/$stack25
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldReturnEmptyCollectionIfWebinfClassesNotFound()>/$stack9
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldThrowScannerExceptionIfHasExceptionWhenProcessWebinfClasses()>/$stack9
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#_186
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack263
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/m_$$A_1#_198
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/currObj#_215
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack225
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack63
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/currObj_$$A_1#_337
<ognl.ASTProperty: java.lang.reflect.Method getIndexedWriteMethod(java.beans.PropertyDescriptor)>/pd#_0
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void setup()>/$stack6
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#_416
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack271
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#20#_431
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/m_$$A_3#_440
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack7
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/lastChild#24#_462
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack216
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack64
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/lastChild#24_$$A_1#_593
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest: void setUp()>/$stack4
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/pre_$$A_2#_144
<br.com.caelum.vraptor.view.DefaultStatusTest: void setUp()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetNotFoundStatus()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetHeader()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatus()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void setup()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack9
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldSetRequestAttribute()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetOkStatus()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetConflictStatus()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/pageResult#_83
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetAcceptedStatus()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/pageResult#_93
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack5
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack8
<br.com.caelum.vraptor.core.DefaultResultTest: br.com.caelum.vraptor.View mockResult(java.lang.Class)>/pageResult#_101
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/pageResult#_110
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack9
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/logicResult#_119
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/logicResult#_129
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/logicResult#_139
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/logicResult#_150
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack23
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/pageResult#_160
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack26
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/status#_171
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/status#_182
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/status#_193
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSerializeErrorMessages()>/$stack18
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/status#_204
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldIncludeExtractedNameWhenSimplyIncluding()>/$stack9
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldNotIncludeTheAttributeWhenTheValueIsNull()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSerializeErrorMessagesInJSON()>/$stack18
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void setUp()>/$stack4
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void setUp()>/$stack9
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack20
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack26
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack32
<ognl.NumericExpression: java.lang.String coerceToNumeric(java.lang.String,ognl.OgnlContext,ognl.Node)>/$stack63
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void setup()>/$stack4
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void setup()>/$stack9
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/download#_83
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack8
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack11
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack10
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack9
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack11
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack10
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack14
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack16
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasNotUsedShouldThrowNPE()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/download#_153
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack21
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack4
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack11
<com.google.inject.util.Providers: com.google.inject.Provider of(java.lang.Object)>/instance#_0
<br.com.caelum.vraptor.http.ognl.OgnlFacade: void <init>(br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval,br.com.caelum.vraptor.proxy.Proxifier)>/converters#_0
<br.com.caelum.vraptor.http.ognl.OgnlFacade: br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter createAdapter(java.util.ResourceBundle)>/$stack3
<br.com.caelum.vraptor.http.ognl.OgnlFacade: void setValue(java.lang.String,java.lang.String,java.lang.String[])>/$stack11
<br.com.caelum.vraptor.http.ognl.OgnlFacade: java.lang.Object get(java.lang.String)>/root#_124
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void setup()>/$stack11
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldNotAcceptFormURLEncoded()>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldNotAcceptFormURLEncoded()>/$stack14
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldAcceptMultipart()>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldAcceptMultipart()>/$stack14
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack25
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack32
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack34
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack38
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack25
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack32
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack34
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack38
<br.com.caelum.vraptor.ioc.spring.SpringProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/context#_54
<br.com.caelum.vraptor.ioc.spring.SpringProvider: void start(javax.servlet.ServletContext)>/context#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack24
<br.com.caelum.vraptor.ioc.spring.SpringProvider: org.springframework.web.context.ConfigurableWebApplicationContext getParentApplicationContext(javax.servlet.ServletContext)>/context#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack33
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack40
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack42
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack46
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack50
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack54
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack58
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack64
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack27
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack8
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack27
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack34
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack29
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack36
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack38
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack42
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack46
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack52
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack29
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack36
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack38
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack42
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack46
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack52
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack17
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack17
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack19
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack14
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack30
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack37
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack15
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack24
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack31
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack34
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack17
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack19
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldComplainWhenUnableToInstantiateAnInterceptor()>/$stack7
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack7
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack9
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack17
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack19
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack20
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack23
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack7
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack9
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack17
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack19
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack20
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack24
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack26
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack28
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void setup()>/$stack9
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack4
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack4
<net.vidageek.mirror.get.DefaultGetterHandler: java.lang.Object field(java.lang.reflect.Field)>/$stack8
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object)>/target#_0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>/target#_0
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/list#_49
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/context#_0
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/target#_0
<com.thoughtworks.xstream.XStream: java.lang.String toXML(java.lang.Object)>/obj#_0
<com.thoughtworks.xstream.XStream: void toXML(java.lang.Object,java.io.Writer)>/obj#_0
<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>/obj#_0
<ognl.ListPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack77
<ognl.ListPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack74
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldAddAllowHeader()>/$stack6
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldSendErrorMethodNotAllowed()>/$stack6
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldNotSendMethodNotAllowedIfTheRequestMethodIsOptions()>/$stack10
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.view.LinkToHandlerTest: void setUp()>/$stack3
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack29
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack31
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack35
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#27_$$A_3#_194
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/i#28_$$A_4#_217
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/$stack11
<br.com.caelum.vraptor.interceptor.download.FileDownload: void write(javax.servlet.http.HttpServletResponse)>/response#_0
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldFlushWholeFileToHttpResponse()>/$stack4
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack4
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack5
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack9
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldThrowIllegalArgumentExceptionIfFileDoesntExists()>/$stack5
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider$1: java.lang.Object instanceFor(java.lang.Class)>/$stack3
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack7
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack8
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack11
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldThrowExceptionWhenAnUnsupportedEncodingExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldThrowExceptionWhenAnUnsupportedEncodingExceptionOccurs()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldThrowResourceNotFoundExceptionWhenNoRoutesMatchTheURI()>/route#_82
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldThrowMethodNotAllowedExceptionWhenNoRoutesMatchTheURIWithGivenHttpMethod()>/route#_97
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldObeyPriorityOfRoutes()>/second#_114
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldObeyPriorityOfRoutes()>/first#_113
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack17
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/route#_137
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack24
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack17
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/route#_154
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack23
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void usesTheFirstRegisteredRuleMatchingThePattern()>/$stack27
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void usesTheFirstRegisteredRuleMatchingThePattern()>/route#_168
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void usesTheFirstRegisteredRuleMatchingThePattern()>/$stack45
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void throwsExceptionIfMoreThanOneUriMatchesWithSamePriority()>/route#_191
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverter: org.joda.time.LocalTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack6
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder,java.lang.String)>/response#_0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/origin#_60
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/context#_0
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack60
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_5#_240
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void setUp()>/$stack2
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack49
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_5#_410
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void setUp()>/$stack2
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldClearAllListenersFromSessionOnStart()>/$stack1
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldClearAllListenersFromSessionOnStart()>/$stack5
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldClearAllListenersFromSessionOnStart()>/$stack7
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack1
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack3
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack5
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack1
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack3
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack5
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack7
<br.com.caelum.vraptor.VRaptorTest: void shoudlComplainIfNotInAServletEnviroment()>/request#_70
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack19
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack35
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack41
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack49
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/request#_79
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack50
<br.com.caelum.vraptor.VRaptorTest: void shouldStopContainer()>/$stack5
<br.com.caelum.vraptor.VRaptorTest: void shouldStopContainer()>/$stack17
<br.com.caelum.vraptor.VRaptorTest: void shouldStopContainer()>/$stack20
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/request#_175
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/handler#_177
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/chain#_178
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/x0#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerializationTest: void setup()>/response#_32
<br.com.caelum.vraptor.scan.NullWebAppBootstrapTest: void shouldNotDoAnything()>/$stack2
<br.com.caelum.vraptor.restfulie.controller.ResourceControllerInterceptor: java.util.EnumSet allowedMethods()>/$stack7
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack39
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack50
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack54
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack57
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack62
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/resource#_0
<javax.servlet.http.HttpServletRequestWrapper: void <init>(javax.servlet.http.HttpServletRequest)>/request#_0
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void setup()>/$stack2
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForCollectionInterface()>/$stack8
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForListInterface()>/$stack8
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateLinkedListForQueueInterface()>/$stack8
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateHashSetListForSetInterface()>/$stack8
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateTreeSetListForSortedSetInterface()>/$stack8
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void setup()>/$stack3
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack14
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/auau#_71
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack18
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack21
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowMethodExceptionIfThereIsAnInvocationException()>/auau#_85
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowMethodExceptionIfThereIsAnInvocationException()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/auau#_103
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack21
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack24
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack14
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack16
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack14
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack16
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack14
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack16
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack18
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack29
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowExceptionIfYouHaventSpecifiedWhereToGoOnValidationError()>/$stack10
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowExceptionIfYouHaventSpecifiedWhereToGoOnValidationError()>/$stack22
<net.vidageek.mirror.set.FieldSetterByField: void withValue(java.lang.Object)>/$stack6
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void setup()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void setup()>/$stack10
<br.com.caelum.vraptor.ioc.spring.DefaultSpringLocator: org.springframework.web.context.ConfigurableWebApplicationContext getApplicationContext(javax.servlet.ServletContext)>/servletContext#_0
<br.com.caelum.vraptor.http.DefaultResourceTranslator: br.com.caelum.vraptor.resource.ResourceMethod translate(br.com.caelum.vraptor.core.RequestInfo)>/request#_48
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResources()>/$stack25
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResources()>/$stack26
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithQueryString()>/$stack26
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithQueryString()>/$stack27
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void config()>/$stack2
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithJSessionId()>/$stack26
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithJSessionId()>/$stack27
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void config()>/$stack6
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void shouldUseResourceTypeAndMethodNameToResolveJsp()>/$stack6
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void shouldUseTheFormatIfSupplied()>/$stack6
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsFalseForNonStaticResources()>/$stack23
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsFalseForNonStaticResources()>/$stack24
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void shouldIgnoreHtmlFormat()>/$stack6
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack3
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack7
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack6
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfServletExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfServletExceptionOccurs()>/$stack6
<br.com.caelum.vraptor.http.route.RulesTest: void setup()>/$stack3
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>/message#_0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void setup()>/$stack11
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack10
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack15
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack13
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack11
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack16
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/mockInstantiator#_109
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack9
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/mockInstantiator#_125
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/result#_184
<org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory: org.springframework.web.context.request.WebRequest getObject()>/$stack3
<ognl.ASTVarRef: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/value#_104
<org.mockito.internal.util.MockUtil: boolean isMockitoMock(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/mock#_0
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/current_$$A_1#_81
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_5#_162
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldConvertGETStringToGetMethodForRequestParameter()>/$stack9
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowExceptionForNotKnowHttpMethodsForRequestParameter()>/$stack9
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowIllegalArgumentExceptionIf_methodIsUsedInGETRequests()>/$stack9
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldConvertGETStringToGetMethod()>/$stack9
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowExceptionForNotKnowHttpMethods()>/$stack9
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldUseParameterNameBeforeTryingHttpRealMethod()>/$stack9
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack14
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack16
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack18
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack6
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack7
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack9
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void write(javax.servlet.http.HttpServletResponse)>/response#_0
<javax.servlet.ServletRequestEvent: void <init>(javax.servlet.ServletContext,javax.servlet.ServletRequest)>/sc#_0
<org.hamcrest.core.IsSame: void describeTo(org.hamcrest.Description)>/$stack3
<org.hamcrest.core.IsSame: org.hamcrest.Matcher sameInstance(java.lang.Object)>/object#_0
<org.hamcrest.core.IsNot: org.hamcrest.Matcher not(java.lang.Object)>/value#_0
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void setUp()>/$stack6
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack3
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack6
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack7
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack11
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack15
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack17
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack3
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack6
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack7
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack14
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack17
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnConstructor()>/$stack3
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnConstructor()>/$stack6
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnAcceptsMethod()>/$stack3
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnAcceptsMethod()>/$stack6
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void setup()>/$stack9
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack10
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/ognlContext#_82
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/target#_0
<ognl.ObjectPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/context#_0
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ObjectPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack3
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack5
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack8
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack18
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void settingShouldNullifyUpToIndex()>/$stack2
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void setUp()>/$stack7
<ognl.enhance.ExpressionCompiler: void addCastString(ognl.OgnlContext,java.lang.String)>/value#_55
<ognl.ASTAnd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/pre_$$A_2#_150
<javax.servlet.http.HttpServletResponseWrapper: void <init>(javax.servlet.http.HttpServletResponse)>/response#_0
<ognl.enhance.ExpressionCompiler: java.lang.Class getRootExpressionClass(ognl.Node,ognl.OgnlContext)>/$stack9
<ognl.enhance.ExpressionCompiler: java.lang.String generateGetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack79_$$A_2
<ognl.enhance.ExpressionCompiler: java.lang.String generateGetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack43_$$A_2
<br.com.caelum.vraptor.http.ParametersProviderTest: void returnsDependenciesIfContainerCanProvide()>/result#_291
<br.com.caelum.vraptor.http.ParametersProviderTest: void returnsDependenciesIfRequestCanProvide()>/result#_304
<ognl.enhance.ExpressionCompiler: java.lang.String generateSetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack37_$$A_2
<br.com.caelum.vraptor.http.ParametersProviderTest: void doesntReturnDependenciesIfItIsNotAnInterface()>/result#_327
<ognl.enhance.ExpressionCompiler: ognl.enhance.EnhancedClassLoader getClassLoader(ognl.OgnlContext)>/$stack5
<ognl.enhance.ExpressionCompiler: ognl.enhance.EnhancedClassLoader getClassLoader(ognl.OgnlContext)>/$stack13
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator: void <init>(br.com.caelum.vraptor.core.Converters,br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.vraptor.core.Localization,br.com.caelum.iogi.spi.ParameterNamesProvider,javax.servlet.http.HttpServletRequest)>/request#_0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void setup()>/$stack3
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack6
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack10
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack13
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack17
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack19
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack21
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack10
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack13
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack17
<br.com.caelum.vraptor.http.ognl.AbstractOgnlTestSupport: void configOgnl(br.com.caelum.vraptor.core.Converters)>/converters#_0
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack17
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack21
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack27
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack32
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack37
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack44
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack49
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack51
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void settingShouldNullifyUpToIndexAndIgnoreRemoval()>/$stack3
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void settingShouldNullifyUpToIndexAndIgnoreRemoval()>/$stack21
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack9
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack1
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack10
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack12
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack4
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack15
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack17
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack5
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/method#_89
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/stack#_90
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack13
<br.com.caelum.vraptor.http.ognl.OgnlParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack8
<br.com.caelum.vraptor.http.ognl.OgnlParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack9
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void setup()>/$stack9
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack11
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/baseRequest#_78
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/chain#_0
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/baseResponse#_79
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)>/sc#_0
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext,java.lang.String)>/sc#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void init()>/$stack5
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack9
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack10
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/ctx#_86
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack16
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack17
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldLoadInitParameterForBasePackages()>/$stack9
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void setup()>/$stack1
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void setup()>/$stack8
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void setup()>/$stack15
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/proxifier#_71
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/listHolder#_68
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: boolean requestingStaticFile(javax.servlet.http.HttpServletRequest)>/request#_0
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldConfigureAllClasses()>/$stack8
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldConfigureAllClasses()>/$stack9
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldNotDoAnythingIfHasNoClasses()>/$stack4
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldNotDoAnythingIfHasNoClasses()>/$stack5
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldThrowScannerExceptionIfClassNotExists()>/$stack5
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: void set(java.lang.Object)>/$stack3
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: boolean equals(java.lang.Object)>/$stack7
<br.com.caelum.vraptor.scan.WebAppBootstrapFactory: br.com.caelum.vraptor.scan.WebAppBootstrap scannerFor(br.com.caelum.vraptor.config.BasicConfiguration)>/$stack7
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void setup()>/$stack3
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldNotSupportNonGenericLists()>/node#_86
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldNotSupportNonGenericLists()>/$stack11
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/node#_98
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack11
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack38
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void setUp()>/$stack2
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void setUp()>/$stack6
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void setUp()>/$stack11
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack6
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack15
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack6
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack15
<br.com.caelum.iogi.Iogi: void <init>(br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.iogi.spi.LocaleProvider)>/localeProvider#_0
<br.com.caelum.vraptor.serialization.I18nMessageSerializationTest: void setup()>/response#_37
<br.com.caelum.vraptor.serialization.I18nMessageSerializationTest: void setup()>/container#_45
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack6
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack7
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack14
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack19
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack24
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack29
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void outjectsTheRequestParameters()>/$stack7
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void addsTheErrorsOnTheResult()>/$stack7
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack5
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack13
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldNotRedirectIfHasNotErrors()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack12
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack18
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldSetBundleOnI18nMessagesLazily()>/$stack14
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldOnlySetBundleOnI18nMessagesThatHasNotBeenSetBefore()>/message#_210
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_5#_230
<br.com.caelum.vraptor.core.DefaultConvertersTest: void setup()>/$stack2
<br.com.caelum.vraptor.core.DefaultConvertersTest: void shouldRegisterConvertersForAllDefaultTypes()>/expected#_97
<br.com.caelum.vraptor.view.DefaultPageResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack15
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_5#_138
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/ctorClass#_142
<org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>/methodCall#_0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/mock#_0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<org.mockito.Mockito: org.mockito.stubbing.Stubber doReturn(java.lang.Object)>/toBeReturned#_0
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void setUp()>/$stack7
<net.vidageek.mirror.invoke.DefaultSetterMethodHandler: void withValue(java.lang.Object)>/$stack4
<br.com.caelum.vraptor.core.JstlLocalizationTest: void setUp()>/$stack5
<br.com.caelum.vraptor.core.JstlLocalizationTest: void setUp()>/$stack16
<ognl.EvaluationPool: void recycle(ognl.Evaluation)>/value#_0
<ognl.EvaluationPool: void recycleAll(ognl.Evaluation)>/value#_0
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack7
<ognl.OgnlContext: void recycleLastEvaluation()>/$stack2
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/value#_0
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack29
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack27
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack24
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest: void shouldThrowScannerExceptionIfAnErrorOccurs()>/$stack13
<org.hamcrest.core.IsEqual: boolean matches(java.lang.Object)>/$stack2
<org.hamcrest.core.IsEqual: boolean areArraysEqual(java.lang.Object,java.lang.Object)>/o2#_0
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: br.com.caelum.vraptor.resource.ResourceMethod resourceMethod(br.com.caelum.vraptor.http.MutableRequest,java.lang.String)>/request#_0
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void setUp()>/$stack5
<net.vidageek.mirror.DefaultAccessorsController: net.vidageek.mirror.invoke.dsl.InvocationHandler invoke()>/$stack2
<net.vidageek.mirror.DefaultAccessorsController: net.vidageek.mirror.set.dsl.SetterHandler set()>/$stack2
<net.vidageek.mirror.DefaultAccessorsController: net.vidageek.mirror.get.dsl.GetterHandler get()>/$stack2
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Collection scan(br.com.caelum.vraptor.scan.ClasspathResolver)>/resolver#_0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void registerDestroyListener(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/listener#_0
<br.com.caelum.vraptor.resource.DefaultResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/$stack6
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.Evaluation: void <init>(ognl.SimpleNode,java.lang.Object,boolean)>/source#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldUseCollectionConverterWhenItExists()>/$stack7
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/$stack21
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void setUp()>/$stack5
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack29
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void setup()>/chain#_63
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/target#_0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void setup()>/chain#_42
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void setup()>/chain#_62
<br.com.caelum.vraptor.util.extjs.DefaultExtJsonTest: void setUp()>/$stack15
<br.com.caelum.vraptor.view.DefaultPageResult: void defaultView()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResult: void include()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResult: void forwardTo(java.lang.String)>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void setup()>/chain#_42
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void setup()>/$stack3
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack17
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack26
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack19
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack28
<br.com.caelum.vraptor.view.DefaultPageResultTest: void setup()>/$stack16
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack11
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void setUp()>/$stack2
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldThrowExceptionWhenThereIsNoDeserializerRegisteredForGivenContentType()>/$stack1
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldNotCallDeserializerIfItDoesntAcceptGivenContentType()>/$stack2
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentType()>/$stack2
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfVendorized()>/$stack2
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfAtomizedAlike()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void setUp()>/$stack6
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack5
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack14
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack14
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack19
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack14
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack14
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void add(java.lang.Object,java.lang.reflect.Method,java.lang.Object)>/instance#_0
<ognl.Ognl: void setTypeConverter(java.util.Map,ognl.TypeConverter)>/converter#_0
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack56
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/$stack22
<br.com.caelum.vraptor.validator.ValidatorAcceptanceTest: void setup()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void setup()>/chain#_41
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack21
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldNotInstantiateIfLastTerm()>/typeConverter#_115
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack12
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack12
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack16
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack14
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack8
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/result#_250
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack18
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/resourceInstance#_0
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void setUp()>/$stack2
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack27
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/prevChain#_278
<br.com.caelum.vraptor.VRaptor$1: java.lang.Object insideRequest(br.com.caelum.vraptor.ioc.Container)>/$stack3
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack31
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/prevChild#_379
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/prevChain#_378
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void worksAsRegexWhenUsingParameters()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void worksWithBasicRegexEvaluation()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldTranslateAsteriskAsEmpty()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldTranslatePatternArgs()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldTranslatePatternArgsWithRegex()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldTranslatePatternArgsWithMultipleRegexes()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldTranslatePatternArgNullAsEmpty()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldUseConverterIfItExists()>/$stack20
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldTranslatePatternArgInternalNullAsEmpty()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldMatchPatternLazily()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldMatchPatternLazily()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldMatchMoreThanOneVariable()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldBeGreedyWhenIPutAnAsteriskOnExpression()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack10
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void fillURLWithGreedyParameters()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void fillURLWithoutGreedyParameters()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack14
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack10
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack43
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void setUp()>/$stack2
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack69
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void setUp()>/$stack7
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void setup()>/chain#_58
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack15
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void setup()>/chain#_42
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/target#_0
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/target#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/target#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/target#_0
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/target#_0
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/target#_0
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack25
<ognl.OgnlRuntime: java.lang.reflect.Method getMethod(ognl.OgnlContext,java.lang.Class,java.lang.String,ognl.Node[],boolean)>/$stack74
<ognl.OgnlRuntime: java.lang.reflect.Method getMethod(ognl.OgnlContext,java.lang.Class,java.lang.String,ognl.Node[],boolean)>/cast#_2361
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/$stack32
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/$stack5
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack180
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack189
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack194
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack25
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack294
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack147
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack30
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack51
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack58
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void setup()>/chain#_63
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack169
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack173
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack178
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack25
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack300
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack135
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack89
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack47
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack58
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack55
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack16
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack32
<br.com.caelum.vraptor.view.DefaultStatusTest: void setUp()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void setup()>/$stack3
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void setUp()>/$stack8
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void setup()>/$stack8
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack7
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack9
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack8
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack9
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack11
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasNotUsedShouldThrowNPE()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldNotAcceptFormURLEncoded()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldAcceptMultipart()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack31
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack31
<br.com.caelum.vraptor.ioc.spring.SpringProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/webRequest#_55
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack23
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack26
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack33
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack16
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack16
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack13
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack36
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack14
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack30
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack16
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack18
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack22
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack18
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack23
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void setup()>/chain#_40
<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder)>/obj#_0
<br.com.caelum.vraptor.view.LinkToHandlerTest: void setUp()>/$stack2
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization: br.com.caelum.vraptor.serialization.JSONSerialization withCallback(java.lang.String)>/$stack6
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack25
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#_136
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack359
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack330
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack271
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.MethodHandler method(java.lang.String)>/$stack4
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.MethodHandler method(java.lang.reflect.Method)>/$stack4
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.SetterMethodHandler setterFor(java.lang.String)>/$stack3
<net.vidageek.mirror.invoke.MethodHandlerByName: java.lang.Object withArgs(java.lang.Object[])>/$stack4
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack6
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldThrowExceptionWhenAnUnsupportedEncodingExceptionOccurs()>/$stack8
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/root#_84
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack64
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack68
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack78
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/prevCast#_200
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack53
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack57
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack94
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/prevCast#_363
<br.com.caelum.vraptor.VRaptorTest: void shoudlComplainIfNotInAServletEnviroment()>/response#_71
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/response#_80
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/response#_176
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack43
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/chain#_110
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void setup()>/$stack2
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void setup()>/chain#_42
<br.com.caelum.vraptor.http.iogi.MiscIogiSupportTest: void setup()>/$stack3
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void setUp()>/$stack4
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack6
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfServletExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.http.route.RulesTest: void allowsAdditionOfRouteBuildersByDefaultWithNoStrategy()>/$stack2
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void setup()>/chain#_61
<net.vidageek.mirror.set.DefaultSetterHandler: net.vidageek.mirror.set.dsl.FieldSetter field(java.lang.reflect.Field)>/$stack4
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack12
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack15
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack8
<ognl.ASTStaticMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/root#_71
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack65
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack69
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack79
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack13
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack5
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack5
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack14
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack5
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack16
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnConstructor()>/$stack5
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnAcceptsMethod()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void setup()>/chain#_62
<ognl.ObjectPropertyAccessor: java.lang.Object getPossibleProperty(java.util.Map,java.lang.Object,java.lang.String)>/target#_0
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void gettingShouldReturnNullIfIndexNotFound()>/$stack4
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void gettingShouldReturnValueIfIndexFound()>/$stack8
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void settingShouldNullifyUpToIndex()>/$stack3
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack17
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack32
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator: void <init>(br.com.caelum.vraptor.core.Converters,br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.vraptor.core.Localization,br.com.caelum.iogi.spi.ParameterNamesProvider,javax.servlet.http.HttpServletRequest)>/converters#_0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void setup()>/$stack2
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack16
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack16
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack8
<br.com.caelum.vraptor.http.ognl.OgnlParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack10
<net.vidageek.mirror.set.FieldSetterByName: void withValue(java.lang.Object)>/$stack12
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void setup()>/chain#_64
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/req#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/resourceInstance#_0
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void init()>/$stack9
<net.vidageek.mirror.dsl.Mirror: net.vidageek.mirror.dsl.AccessorsController on(java.lang.Object)>/object#_0
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldNotSupportNonGenericLists()>/$stack23
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack23
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/root#_78
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack179
<br.com.caelum.vraptor.view.DefaultPageResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack17
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack46
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializerTest: void shouldSerializeI18nMessage()>/$stack9
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object)>/source#_0
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object,boolean)>/source#_0
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void setup()>/chain#_62
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void setUp()>/$stack4
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack11
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack11
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack19
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack19
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Map scanBasePackages(java.util.List,br.com.caelum.vraptor.scan.ClasspathResolver)>/resolver#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack25
<br.com.caelum.vraptor.http.route.DefaultRouter: br.com.caelum.vraptor.http.route.RouteBuilder builderFor(java.lang.String)>/$stack5
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack22
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithDeserializerAdapter()>/$stack11
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsISO8601Attribute()>/$stack23
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/config#_59
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldBeAbleToConvert()>/$stack8
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldBeAbleToConvert()>/$stack13
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack32
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void shouldBeAbleToConvert()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.ParametersControl build()>/$stack6
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void shouldBeAbleToConvert()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void setup()>/$stack2
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack16
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack18
<br.com.caelum.vraptor.http.route.RouteBuilderTest: br.com.caelum.vraptor.http.route.DefaultRouteBuilder newBuilder(java.lang.String)>/$stack6
<ognl.Ognl: void setValue(java.lang.String,java.util.Map,java.lang.Object,java.lang.Object)>/root#_0
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/config#_64
<br.com.caelum.vraptor.validator.ValidatorAcceptanceTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/converters#_0
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack11
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack5
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack27
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack5
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldThrowException()>/$stack1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack11
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack23
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void whenNoParameterPatternsAreGivenShouldMatchAnything()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void whenParameterPatternsAreGivenShouldMatchAccordingToGivenPatterns()>/$stack8
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack9
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void shouldBeAbleToConvert()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/extractor#_0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$1: br.com.caelum.vraptor.http.route.DefaultRouteBuilder answer(org.mockito.invocation.InvocationOnMock)>/$stack8
<br.com.caelum.vraptor.view.DefaultStatusTest: void setUp()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSerializeErrorMessages()>/$stack19
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSerializeErrorMessagesInJSON()>/$stack19
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void setUp()>/$stack7
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.ognl.OgnlFacade: void setValue(java.lang.String,java.lang.String,java.lang.String[])>/$stack8
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void setUp()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void shouldBeAbleToConvert()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void setUp()>/$stack3
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void setup()>/$stack5
<net.vidageek.mirror.set.DefaultSetterHandler: net.vidageek.mirror.set.dsl.FieldSetter field(java.lang.String)>/$stack7
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack16
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/emptyBundle#_185
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack4
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack13
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack4
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnConstructor()>/$stack4
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnAcceptsMethod()>/$stack4
<br.com.caelum.vraptor.view.DefaultRefererResult: void forward()>/$stack4
<br.com.caelum.vraptor.view.DefaultRefererResult: void redirect()>/$stack4
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldBeAbleToConvert()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack32
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack3
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack7
<br.com.caelum.vraptor.http.ognl.OgnlParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack11
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldBeAbleToConvert()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack34
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void isCapableOfDealingWithEmptyParameterForInternalValueWhichNeedsAConverter()>/request#_142
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack10
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializerTest: void shouldSerializeI18nMessage()>/$stack11
<br.com.caelum.vraptor.core.JstlLocalizationTest: void setUp()>/$stack4
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void setUp()>/$stack3
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack27
<br.com.caelum.vraptor.http.route.RouteBuilderTest: br.com.caelum.vraptor.http.route.DefaultRouteBuilder newBuilder(java.lang.String)>/$stack7
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void setUp()>/$stack4
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack10
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack17
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack9
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void areEquals()>/$stack11
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void areEquals()>/$stack18
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void areEquals()>/$stack25
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void areEquals()>/$stack32
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$1: br.com.caelum.vraptor.http.route.DefaultRouteBuilder answer(org.mockito.invocation.InvocationOnMock)>/$stack10
<br.com.caelum.vraptor.core.DefaultResultTest: void setup()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldNotAcceptFormURLEncoded()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldAcceptMultipart()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack12
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack12
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void setUp()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack17
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack48
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void setUp()>/$stack2
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack2
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack6
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void setUp()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void setUp()>/$stack3
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack9
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack15
<br.com.caelum.vraptor.view.DefaultStatusTest: void setUp()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSerializeErrorMessages()>/$stack20
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSerializeErrorMessagesInJSON()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack11
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack11
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack2
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack17
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack5
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack9
<br.com.caelum.vraptor.validator.ValidatorAcceptanceTest: void setup()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack8
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack14
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack8
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack7
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack6
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack73
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/pre_$$A_2#_115
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack51
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_1#_121
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack10
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack65
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/pre_$$A_1#_134
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/$stack7
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/pre#_2688
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/$stack21
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/t#16#_2734
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack277
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack285
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/pre#_141
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack327
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#27_$$A_1#_185
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack285
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/i#28_$$A_2#_214
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack55
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack223
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_2#_236
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack44
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack230
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_2#_405
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack220
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_2#_157
<ognl.enhance.ExpressionCompiler: void addCastString(ognl.OgnlContext,java.lang.String)>/$stack3
<ognl.enhance.ExpressionCompiler: java.lang.String castExpression(ognl.OgnlContext,ognl.Node,java.lang.String)>/$stack61
<ognl.enhance.ExpressionCompiler: java.lang.String castExpression(ognl.OgnlContext,ognl.Node,java.lang.String)>/$stack62
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/pre#_147
<ognl.enhance.ExpressionCompiler: java.lang.String generateGetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack17
<ognl.enhance.ExpressionCompiler: java.lang.String generateGetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/castExpression#_493
<ognl.enhance.ExpressionCompiler: java.lang.String generateGetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack28
<ognl.enhance.ExpressionCompiler: java.lang.String generateGetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/noRoot#_506
<ognl.enhance.ExpressionCompiler: java.lang.String generateSetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack22
<ognl.enhance.ExpressionCompiler: java.lang.String generateSetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/castExpression#_600
<ognl.enhance.ExpressionCompiler: java.lang.String generateSetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack27
<ognl.enhance.ExpressionCompiler: java.lang.String generateSetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/noRoot#_610
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack216
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_2#_226
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack208
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_2#_134
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void setup()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void setup()>/$stack5
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack25
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack28
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack27
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack30
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack29
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack31
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack29
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack31
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack33
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack34
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack22
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack23
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack29
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack31
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack19
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack19
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack22
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack24
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack35
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack36
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack34
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack35
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack49
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack50
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack15
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack17
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack27
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack29
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack22
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack23
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack18
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack18
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack18
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack17
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack19
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack8
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack10
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack15
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack18
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack4
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack11
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack12
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack8
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldNotSupportNonGenericLists()>/$stack2
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack2
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldNotInstantiateIfLastTerm()>/$stack5
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack10
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack11
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void setup()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void setup()>/$stack3
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void setUp()>/$stack1
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void setUp()>/$stack2
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void shouldRegisterTypesOnDeserializers()>/$stack3
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void shouldRegisterTypesOnDeserializers()>/$stack4
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack6
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack7
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack8
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack9
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack36
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack5
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack6
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack52
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack53
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack14
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack15
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack19
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack20
<br.com.caelum.vraptor.core.DefaultConvertersTest: void shouldRegisterConvertersForAllDefaultTypes()>/$stack23
<br.com.caelum.vraptor.http.EncodingHandlerFactoryTest: void setUp()>/$stack1
<br.com.caelum.vraptor.http.EncodingHandlerFactoryTest: void setUp()>/$stack2
<br.com.caelum.vraptor.scan.WebBasedClasspathResolverTest: void callerContextDifferentFromRequestedClassLoaderReturnsCurrentClassLoader()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack5
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void init()>/$stack2
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void init()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack11
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack13
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack19
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack21
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack5
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack7
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsSimpleDoNothing()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack7
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack3
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack5
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/$stack10
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/$stack10
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack7
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack11
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack16
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack20
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack7
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack11
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack16
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack20
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldInstantiateAListOfStrings()>/$stack6
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldInstantiateAListOfStrings()>/$stack7
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForCollectionInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForCollectionInterface()>/$stack12
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForListInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForListInterface()>/$stack12
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateLinkedListForQueueInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateLinkedListForQueueInterface()>/$stack12
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateHashSetListForSetInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateHashSetListForSetInterface()>/$stack12
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateTreeSetListForSortedSetInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateTreeSetListForSortedSetInterface()>/$stack12
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack39
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack41
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/$stack17
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/$stack13
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack9
<org.springframework.web.context.request.RequestContextListener: void requestInitialized(javax.servlet.ServletRequestEvent)>/$stack6
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack18
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack19
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack13
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack14
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldSetRequestAttribute()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldSetRequestAttribute()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldIncludeExtractedNameWhenSimplyIncluding()>/$stack10
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldIncludeExtractedNameWhenSimplyIncluding()>/$stack11
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldNotIncludeTheAttributeWhenTheValueIsNull()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldNotIncludeTheAttributeWhenTheValueIsNull()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack59
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack60
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack65
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack66
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack48
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack54
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack48
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack54
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack36
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack9
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack10
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack2
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack4
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack7
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpServletRequest _getHttpServletRequest()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpServletRequest _getHttpServletRequest()>/$stack2
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack17
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/nullHandler#_55
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnNotFound()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnHeader()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnCreated()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnCreatedWithLocation()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnOk()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnConflict()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMethodNotAllowed()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMovedPermanentlyTo()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMovedPermanentlyToLogic()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatus()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatusWhenMovingToLogic()>/$stack10
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatusWhenMovingToLogic()>/$stack11
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack9
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack10
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack14
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack15
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPage()>/$stack12
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPage()>/$stack13
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void shouldSend404IfNothingIsRendered()>/$stack11
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void shouldSend404IfNothingIsRendered()>/$stack12
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPageWithAlias()>/$stack13
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPageWithAlias()>/$stack14
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/$stack7
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack14
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack15
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack12
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack17
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack18
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack16
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack17
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack12
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void setup()>/$stack1
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void setup()>/$stack2
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void doesNothingIfResultWasAlreadyUsed()>/$stack10
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void doesNothingIfResultWasAlreadyUsed()>/$stack11
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack14
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack15
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void setUp()>/$stack1
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void setUp()>/$stack2
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack21
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack22
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack23
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack24
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack3
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withRootException()>/$stack8
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withRootException()>/$stack9
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withNestedException()>/$stack9
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withNestedException()>/$stack10
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithoutAlias()>/$stack10
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithoutAlias()>/$stack11
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithAlias()>/$stack6
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithAlias()>/$stack7
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack21
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack22
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack27
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack28
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack33
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack34
<br.com.caelum.vraptor.http.ParametersProviderTest: void returnsDependenciesIfContainerCanProvide()>/$stack3
<br.com.caelum.vraptor.http.ParametersProviderTest: void returnsDependenciesIfRequestCanProvide()>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void addsTheErrorsOnTheResult()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void addsTheErrorsOnTheResult()>/$stack9
<br.com.caelum.vraptor.VRaptorTest: void shoudlComplainIfNotInAServletEnviroment()>/$stack4
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeOneLinkIfThereIsATransition()>/$stack3
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeOneLinkIfThereIsATransition()>/kill#_82
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack4
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeAllLinksIfThereAreTransitions()>/kill#_93
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack11
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeAllLinksIfThereAreTransitions()>/ressurect#_97
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeOneLinkIfThereIsATransition()>/$stack4
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeOneLinkIfThereIsATransition()>/kill#_81
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack5
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeAllLinksIfThereAreTransitions()>/kill#_93
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack12
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeAllLinksIfThereAreTransitions()>/ressurect#_97
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack6
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack6
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack14
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack6
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack13
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void outjectsTheRequestParameters()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void outjectsTheRequestParameters()>/$stack9
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldNotRedirectIfHasNotErrors()>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldNotRedirectIfHasNotErrors()>/$stack11
<ognl.ASTProperty: java.lang.reflect.Method getIndexedWriteMethod(java.beans.PropertyDescriptor)>/$stack8
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void setup()>/$stack4
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void setup()>/$stack4
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void setup()>/$stack4
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack10
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack46
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void setup()>/$stack4
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack5
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack8
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onXMLSerializationResultShouldThrowExceptionOnlyOnSerializeMethod()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onSerializerResultsShouldBeAbleToCreateValidationInstancesEvenIfChildClassesUsesCovariantType()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldNotThrowExceptionsOnHeaders()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSendError()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSendErrorWithMessage()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSetStatus()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldBeAbleToChainMethodsOnHttpResult()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnMoved()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnMovedToLogic()>/$stack2
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandlerTest: void shouldRegisterInterceptorsOnRegistry()>/$stack4
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandlerTest: void shouldRegisterInterceptorsOnRegistry()>/$stack6
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeResponse(java.lang.Class)>/$stack7
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(javax.servlet.ServletResponse)>/$stack5
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(javax.servlet.ServletResponse)>/$stack6
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(java.lang.Class)>/$stack9
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(java.lang.Class)>/$stack10
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack26
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldRedirectIncludingContext()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldRedirectIncludingContext()>/$stack8
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack10
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack19
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack20
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsNotAnnotatedWithHttpMethods()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsNotAnnotatedWithHttpMethods()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsAnnotatedWithHttpGetMethod()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsAnnotatedWithHttpGetMethod()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void cannotRedirectWhenLogicMethodIsAnnotatedWithAnyHttpMethodButGet()>/$stack8
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void cannotRedirectWhenLogicMethodIsAnnotatedWithAnyHttpMethodButGet()>/$stack9
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void setUp()>/$stack1
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void setUp()>/$stack2
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldAddAllowHeader()>/$stack7
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldAddAllowHeader()>/$stack8
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldSendErrorMethodNotAllowed()>/$stack7
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldSendErrorMethodNotAllowed()>/$stack8
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldNotSendMethodNotAllowedIfTheRequestMethodIsOptions()>/$stack12
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldNotSendMethodNotAllowedIfTheRequestMethodIsOptions()>/$stack13
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack44
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack45
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/cache#_44
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack3
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack4
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack6
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack7
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack3
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack4
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack6
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack7
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack9
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack10
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack12
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack13
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack15
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack16
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack18
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack19
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack21
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack22
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack24
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack25
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack27
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack28
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack30
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack31
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack32
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack33
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack36
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack37
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldConfigureAllClasses()>/$stack10
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldConfigureAllClasses()>/$stack11
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldNotDoAnythingIfHasNoClasses()>/$stack7
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldNotDoAnythingIfHasNoClasses()>/$stack8
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack6
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack19
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack20
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack6
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack13
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack14
<br.com.caelum.vraptor.http.ParametersProviderTest: void doesntReturnDependenciesIfItIsNotAnInterface()>/$stack3
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack5
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack35
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack36
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack5
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack35
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack36
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/$stack7
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/$stack7
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack8
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack16
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowMethodExceptionIfThereIsAnInvocationException()>/$stack10
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack20
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializerTest: void shouldSerializeI18nMessage()>/$stack10
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack40
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack16
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack18
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onRefererResultShouldThrowExceptionsOnForward()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onRefererResultShouldThrowExceptionsOnRedirect()>/$stack2
<br.com.caelum.vraptor.util.test.MockValidatorTest: void containsMessageShouldReturnTrueWhenExpectedMessageExists()>/$stack2
<br.com.caelum.vraptor.util.test.MockValidatorTest: void containsMessageShouldReturnTrueWhenExpectedMessageExists()>/message#_35
<br.com.caelum.vraptor.util.test.MockValidatorTest: void containsMessageShouldReturnTrueWhenExpectedMessageWithParamsExists()>/$stack2
<br.com.caelum.vraptor.util.test.MockValidatorTest: void containsMessageShouldReturnTrueWhenExpectedMessageWithParamsExists()>/message#_45
<br.com.caelum.vraptor.VRaptorTest: void shoudlComplainIfNotInAServletEnviroment()>/$stack3
<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>/$stack5
<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldOnlySetBundleOnI18nMessagesThatHasNotBeenSetBefore()>/$stack2
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldOnlySetBundleOnI18nMessagesThatHasNotBeenSetBefore()>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldOnlySetBundleOnI18nMessagesThatHasNotBeenSetBefore()>/$stack11
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack2
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack28
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack2
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack28
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithoutAlias()>/$stack5
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithoutAlias()>/$stack6
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithAlias()>/$stack5
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithAlias()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/$stack7
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack3
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldPutParametersOnFlashScopeOnRedirect()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldPutParametersOnFlashScopeOnRedirect()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotPutParametersOnFlashScopeOnRedirectIfThereAreNoParameters()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotPutParametersOnFlashScopeOnRedirectIfThereAreNoParameters()>/$stack7
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeRequest(java.lang.Class)>/$stack7
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(javax.servlet.ServletRequest)>/$stack5
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(javax.servlet.ServletRequest)>/$stack6
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(java.lang.Class)>/$stack9
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(java.lang.Class)>/$stack10
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/cache#2#_48
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/$stack4
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/$stack3
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/$stack4
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack6
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack7
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack9
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack18
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack19
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack20
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack22
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldNotCallDeserializerIfItDoesntAcceptGivenContentType()>/$stack7
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldNotCallDeserializerIfItDoesntAcceptGivenContentType()>/$stack8
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentType()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentType()>/$stack7
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfVendorized()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfVendorized()>/$stack7
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfAtomizedAlike()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfAtomizedAlike()>/$stack7
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack8
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack9
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack9
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack10
<br.com.caelum.vraptor.serialization.I18nMessageSerializationTest: void setup()>/$stack24
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack2
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack10
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack30
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack16
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack14
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack27
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack32
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack33
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack31
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack32
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack46
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack47
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack22
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack23
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack25
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack26
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack21
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack21
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack21
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack14
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack15
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack8
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack9
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void setup()>/$stack2
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void setup()>/$stack3
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void setup()>/$stack2
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void setup()>/$stack3
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest: void setup()>/$stack4
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest: void setup()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack5
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack9
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack10
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack14
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack15
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendError()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendError()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack12
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack13
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendErrorWithMessage()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendErrorWithMessage()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack13
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack14
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSetStatusCode()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSetStatusCode()>/$stack4
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack6
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack7
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack7
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack8
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsCacheableAddMaxAge()>/$stack5
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsCacheableAddMaxAge()>/$stack6
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack15
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack16
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack18
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack19
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack5
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack6
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack8
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack9
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetNotFoundStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetNotFoundStatus()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetHeader()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetHeader()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatus()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack8
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack11
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetOkStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetOkStatus()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetConflictStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetConflictStatus()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetAcceptedStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetAcceptedStatus()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack9
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack8
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack11
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack24
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack25
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack27
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack28
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack7
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack8
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack11
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack12
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack12
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack13
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack5
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack8
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerializationTest: void setup()>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: javax.servlet.http.HttpServletResponse _getHttpServletResponse()>/$stack1
<javax.servlet.http.HttpServletResponseWrapper: javax.servlet.http.HttpServletResponse _getHttpServletResponse()>/$stack2
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/res#_0
<br.com.caelum.vraptor.serialization.I18nMessageSerializationTest: void setup()>/$stack10
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack6
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack38
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack39
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack6
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack38
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack39
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack4
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack3
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack13
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack14
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack23
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack24
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack22
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack18
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack20
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack38
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack39
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack37
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack38
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack52
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack21
<br.com.caelum.vraptor.core.DefaultResultTest: br.com.caelum.vraptor.View mockResult(java.lang.Class)>/$stack3
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack17
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack17
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack17
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack18
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack17
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack20
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack21
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack16
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack19
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack23
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack25
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack27
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack29
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack30
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack27
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack37
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack38
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack40
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack41
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack43
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack44
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack11
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack13
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack15
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack17
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack19
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack14
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack18
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack20
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack22
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack18
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack14
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack37
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack41
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack37
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack41
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack45
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack49
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack51
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack55
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack57
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack41
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack45
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack41
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack45
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void setUp()>/$stack3
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void setUp()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack42
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void init()>/$stack8
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void isCapableOfDealingWithEmptyParameterForInternalValueWhichNeedsAConverter()>/$stack4
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack11
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack13
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack4
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack5
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void setUp()>/$stack2
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void setUp()>/$stack3
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void setUp()>/$stack3
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void setUp()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldThrowResourceNotFoundExceptionWhenNoRoutesMatchTheURI()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldThrowMethodNotAllowedExceptionWhenNoRoutesMatchTheURIWithGivenHttpMethod()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldObeyPriorityOfRoutes()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldObeyPriorityOfRoutes()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack28
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack29
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack27
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack28
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void usesTheFirstRegisteredRuleMatchingThePattern()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void throwsExceptionIfMoreThanOneUriMatchesWithSamePriority()>/$stack5
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack10
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/ctx#_55
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/context#_0
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack3
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack12
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack11
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack14
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack15
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack18
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack12
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack15
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack16
<org.mockito.internal.util.MockUtil: org.mockito.internal.creation.MethodInterceptorFilter getInterceptor(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: org.mockito.internal.creation.MethodInterceptorFilter getInterceptor(java.lang.Object)>/factory#_92
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack24
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack26
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack21
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack24
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack22
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack25
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack12
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack16
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack19
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack20
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/typeClass_$$A_2#_1142
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Class getActualType(java.lang.reflect.Type)>/genericType#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Class getActualType(java.lang.reflect.Type)>/type_$$A_1#_104
<ognl.NoSuchPropertyException: java.lang.String getReason(java.lang.Object,java.lang.Object)>/target#_0
<ognl.NoSuchPropertyException: java.lang.String getReason(java.lang.Object,java.lang.Object)>/$stack11
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack71
<ognl.OgnlOps: boolean booleanValue(java.lang.Object)>/value#_0
<ognl.OgnlOps: boolean booleanValue(java.lang.Object)>/$stack17
<ognl.ASTProperty: java.lang.reflect.Method getIndexedWriteMethod(java.beans.PropertyDescriptor)>/$stack12
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/list#_67
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/list#_99
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack244
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack228
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/m_$$A_1#_430
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Class getActualType(java.lang.reflect.Type)>/$stack4
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/$stack11
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/genericType_$$A_1#_123
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializerTest: void shouldSerializeI18nMessage()>/$stack8
<ognl.OgnlOps: boolean booleanValue(java.lang.Object)>/$stack12
<ognl.OgnlOps: boolean booleanValue(java.lang.Object)>/$stack8
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/$stack7
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack229
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/$stack9
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/$stack10
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeRequest(java.lang.Class)>/request_$$A_4#_92
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeResponse(java.lang.Class)>/response_$$A_4#_111
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_4#_126
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/pre_$$A_6#_126
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/pre_$$A_4#_140
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/typeClass#_1136
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/pre_$$A_7#_2706
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/t#16_$$A_3#_2739
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/m_$$A_9#_164
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/currObj_$$A_2#_354
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/currObj_$$A_3#_164
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/m_$$A_10#_398
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/lastChild#24_$$A_2#_617
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/lastChild#24_$$A_3#_398
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/i#28_$$A_5#_219
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/i#28_$$A_7#_143
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#27_$$A_5#_219
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#27_$$A_7#_143
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#_206
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_7#_309
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#_366
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_7#_488
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#_132
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_7#_120
<ognl.enhance.ExpressionCompiler: java.lang.String generateGetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack79_$$A_3
<ognl.enhance.ExpressionCompiler: java.lang.String generateGetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack43_$$A_3
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#_214
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_8#_175
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#_114
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_6#_93
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Class getActualType(java.lang.reflect.Type)>/type_$$A_2#_105
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/genericType_$$A_2#_124
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/pre_$$A_3#_116
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/pre_$$A_2#_2691
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/pre_$$A_3#_2702
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/pre_$$A_4#_2705
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/pre_$$A_5#_2716
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_3#_237
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_3#_406
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_3#_158
<ognl.enhance.ExpressionCompiler: java.lang.String generateGetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack79
<ognl.enhance.ExpressionCompiler: java.lang.String generateGetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack43
<ognl.enhance.ExpressionCompiler: java.lang.String generateSetter(ognl.OgnlContext,javassist.CtClass,javassist.CtClass,javassist.ClassPool,javassist.CtMethod,ognl.Node,java.lang.Object)>/$stack37
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_3#_227
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_3#_135
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void <init>(com.thoughtworks.xstream.XStream,java.io.Writer,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter2
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void <init>(com.thoughtworks.xstream.XStream,java.io.Writer,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/extractor#_0
<org.hamcrest.core.IsEqual: void <init>(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: void <init>(java.lang.Object)>/equalArg#_0
<org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean areArraysEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean areArrayLengthsEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean areArrayElementsEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean isArray(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean isArray(java.lang.Object)>/o#_0
<org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: void <init>(java.lang.String,br.com.caelum.vraptor.resource.ResourceMethod,java.util.Set,br.com.caelum.vraptor.http.route.ParametersControl,int,java.lang.String[])>/@parameter3
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: void <init>(java.lang.String,br.com.caelum.vraptor.resource.ResourceMethod,java.util.Set,br.com.caelum.vraptor.http.route.ParametersControl,int,java.lang.String[])>/control#_0
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: br.com.caelum.vraptor.resource.ResourceMethod resourceMethod(br.com.caelum.vraptor.http.MutableRequest,java.lang.String)>/@parameter0
<net.vidageek.mirror.DefaultAccessorsController: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<net.vidageek.mirror.DefaultAccessorsController: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/target#_0
<br.com.caelum.vraptor.validator.DefaultBeanValidator: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.Validator,javax.validation.MessageInterpolator)>/@parameter0
<br.com.caelum.vraptor.validator.DefaultBeanValidator: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.Validator,javax.validation.MessageInterpolator)>/localization#_0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Collection scan(br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Map scanBasePackages(java.util.List,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter1
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void scanPackage(java.lang.String,org.scannotation.AnnotationDB,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter2
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void scanPackage(java.lang.String,org.scannotation.AnnotationDB,br.com.caelum.vraptor.scan.ClasspathResolver)>/resolver#_0
<org.mockito.internal.MockitoCore: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>/@parameter0
<org.mockito.internal.MockitoCore: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>/methodCall#_0
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.apache.commons.fileupload.servlet.ServletFileUpload: boolean isMultipartContent(javax.servlet.http.HttpServletRequest)>/@parameter0
<org.apache.commons.fileupload.servlet.ServletFileUpload: java.util.List parseRequest(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.route.RulesTest$1: void <init>(br.com.caelum.vraptor.http.route.RulesTest,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultRouter: void <init>(br.com.caelum.vraptor.http.route.RoutesConfiguration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter3
<br.com.caelum.vraptor.http.route.DefaultRouter: void <init>(br.com.caelum.vraptor.http.route.RoutesConfiguration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator)>/converters#_0
<br.com.caelum.vraptor.http.route.DefaultRouter: void add(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void registerDestroyListener(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void start(javax.servlet.http.HttpSession)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(javax.servlet.http.HttpSession)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(javax.servlet.http.HttpSession)>/session#_0
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/context#_0
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/router#_0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/servletContext#_0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter1
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/chain#_0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter2
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/request#_0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter3
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/response#_0
<ognl.SimpleNode: java.lang.Object evaluateGetValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/@parameter0
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/request#_0
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/@parameter1
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/acceptHeaderToFormat#_0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder,br.com.caelum.vraptor.serialization.xstream.Serializee)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder,br.com.caelum.vraptor.serialization.xstream.Serializee)>/response#_0
<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeRequest(java.lang.Class)>/request#_90
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeRequest(java.lang.Class)>/request_$$A_2#_96
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeResponse(java.lang.Class)>/response_$$A_2#_115
<ognl.OgnlOps: boolean booleanValue(java.lang.Object)>/@parameter0
<ognl.Evaluation: void <init>(ognl.SimpleNode,java.lang.Object)>/@parameter1
<ognl.Evaluation: void <init>(ognl.SimpleNode,java.lang.Object)>/source#_0
<ognl.Evaluation: void <init>(ognl.SimpleNode,java.lang.Object,boolean)>/@parameter1
<ognl.Evaluation: void init(ognl.SimpleNode,java.lang.Object,boolean)>/@parameter1
<ognl.Evaluation: void init(ognl.SimpleNode,java.lang.Object,boolean)>/source#_0
<org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider)>/provider#_0
<br.com.caelum.vraptor.http.iogi.VRaptorParameterNamesProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.http.iogi.VRaptorParameterNamesProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider)>/parameterNameProvider#_0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/info#_0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/@parameter1
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/validator#_0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/response#_0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/result#_0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter2
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/config#_0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter4
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/router#_0
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/invocation#_0
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/response#_0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/info#_0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter2
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/result#_0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: void start(javax.servlet.ServletContext)>/@parameter0
<net.vidageek.mirror.invoke.MethodHandlerByMethod: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter1
<net.vidageek.mirror.invoke.MethodHandlerByMethod: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/target#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/response#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/provider#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/parameterNameProvider#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter2
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/parameters#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter3
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/validator#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter4
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/localization#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter5
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/request#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/flash#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/proxifier#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/converters#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter3
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/nameProvider#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void <init>(br.com.caelum.vraptor.core.Converters)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void <init>(br.com.caelum.vraptor.core.Converters)>/converters#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Class getActualType(java.lang.reflect.Type)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/ctx#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/target#_0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/exceptions#_0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/result#_0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<ognl.MethodFailedException: void <init>(java.lang.Object,java.lang.String,java.lang.Throwable)>/@parameter0
<br.com.caelum.vraptor.scan.NullWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/@parameter0
<br.com.caelum.vraptor.scan.NullWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/registry#_0
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/req#_0
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter1
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/res#_0
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter3
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/resolver#_0
<br.com.caelum.vraptor.http.VRaptorResponse: void <init>(javax.servlet.http.HttpServletResponse)>/@parameter0
<com.google.inject.util.Providers$1: void <init>(java.lang.Object)>/@parameter0
<com.google.inject.util.Providers$1: void <init>(java.lang.Object)>/l1#_0
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void <init>(br.com.caelum.vraptor.core.InterceptorHandlerFactory)>/@parameter0
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void <init>(br.com.caelum.vraptor.core.InterceptorHandlerFactory)>/handlerFactory#_0
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: void <init>(javax.servlet.ServletContext)>/servletContext#_0
<br.com.caelum.vraptor.config.ApplicationConfiguration: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.config.ApplicationConfiguration: void <init>(javax.servlet.http.HttpServletRequest)>/request#_0
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/provider#_0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter1
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/parameters#_0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter2
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/instantiator#_0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: br.com.caelum.iogi.parameters.Parameters parseParameters(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: br.com.caelum.iogi.parameters.Parameters parseParameters(javax.servlet.http.HttpServletRequest)>/request#_0
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: org.joda.time.LocalDate convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: org.joda.time.LocalDate convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: java.lang.Object removeNullsFromArray(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void add(java.lang.Object,java.lang.reflect.Method,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/request#_0
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/container#_0
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter3
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/extractor#_0
<ognl.Ognl: java.util.Map addDefaultContext(java.lang.Object,java.util.Map)>/@parameter0
<ognl.Ognl: java.util.Map addDefaultContext(java.lang.Object,ognl.ClassResolver,ognl.TypeConverter,ognl.MemberAccess,java.util.Map)>/@parameter0
<ognl.Ognl: void setTypeConverter(java.util.Map,ognl.TypeConverter)>/@parameter1
<ognl.Ognl: void setValue(java.lang.Object,java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.Ognl: void setValue(java.lang.String,java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#_102
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_5#_102
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/pre#_102
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/pre_$$A_7#_102
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/servletRequest#_0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/deserializers#_0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/container#_0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter4
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/status#_0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/request#_0
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/response#_0
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,java.util.Map,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter2
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,java.util.Map,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/converters#_0
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void fillIntoRequest(java.lang.String,br.com.caelum.vraptor.http.MutableRequest)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void fillIntoRequest(java.lang.String,br.com.caelum.vraptor.http.MutableRequest)>/request#_0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: void <init>(br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: void <init>(br.com.caelum.vraptor.proxy.Proxifier)>/proxifier#_0
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/provider#_0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findGetter(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findSetter(java.lang.Object,java.lang.String,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.iogi.VRaptorDependencyProvider: void <init>(br.com.caelum.vraptor.ioc.Container)>/@parameter0
<br.com.caelum.vraptor.http.iogi.VRaptorDependencyProvider: void <init>(br.com.caelum.vraptor.ioc.Container)>/container#_0
<org.springframework.web.context.request.ServletRequestAttributes: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/container#_0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/@parameter0
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/response#_0
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/@parameter1
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/status#_0
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: org.joda.time.DateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: org.joda.time.DateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<br.com.caelum.vraptor.VRaptor$1: void <init>(br.com.caelum.vraptor.VRaptor,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<br.com.caelum.vraptor.VRaptor$1: void <init>(br.com.caelum.vraptor.VRaptor,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/l2#_0
<br.com.caelum.vraptor.VRaptor$1: void <init>(br.com.caelum.vraptor.VRaptor,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter2
<br.com.caelum.vraptor.VRaptor$1: void <init>(br.com.caelum.vraptor.VRaptor,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/l3#_0
<org.mockito.internal.stubbing.answers.Returns: void <init>(java.lang.Object)>/@parameter0
<org.mockito.internal.stubbing.answers.Returns: void <init>(java.lang.Object)>/value#_0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/translator#_0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter1
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/methodInfo#_0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter2
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/resourceNotFoundHandler#_0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter3
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/methodNotAllowedHandler#_0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter4
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/requestInfo#_0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.http.EncodingHandlerFactory: void <init>(javax.servlet.ServletContext)>/@parameter0
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/pre#_122
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/result#_0
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/extractor#_0
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: org.joda.time.DateMidnight convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: org.joda.time.DateMidnight convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: org.joda.time.LocalDateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: org.joda.time.LocalDateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/container#_0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/formatResolver#_0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter1
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/result#_0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter3
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/headersHandler#_0
<ognl.OgnlRuntime: java.lang.Class getPrimitiveWrapperClass(java.lang.Class)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: java.lang.Class[] findParameterTypes(java.lang.Class,java.lang.reflect.Method)>/@parameter0
<ognl.OgnlRuntime: java.lang.Class[] findParameterTypes(java.lang.Class,java.lang.reflect.Method)>/type#_0
<org.hamcrest.Matchers: org.hamcrest.Matcher equalTo(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher sameInstance(java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.Class classForName(ognl.OgnlContext,java.lang.String)>/$stack13
<ognl.OgnlRuntime: java.lang.Class classForName(ognl.OgnlContext,java.lang.String)>/resolver#_1004
<ognl.OgnlRuntime: java.lang.Class classForName(ognl.OgnlContext,java.lang.String)>/resolver_$$A_1#_1005
<ognl.OgnlRuntime: java.lang.Class classForName(ognl.OgnlContext,java.lang.String)>/resolver_$$A_3#_1006
<ognl.OgnlRuntime: java.lang.Class classForName(ognl.OgnlContext,java.lang.String)>/resolver_$$A_4#_1008
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/typeClass_$$A_4#_1136
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/@parameter1
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/@parameter0
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/@parameter1
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/@parameter0
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/context#_0
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.MessageInterpolator,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.MethodInfo,javax.validation.Validator,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.MessageInterpolator,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.MethodInfo,javax.validation.Validator,br.com.caelum.vraptor.http.ParameterNameProvider)>/localization#_0
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.http.VRaptorRequest: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.test.HttpServletRequestMock: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.http.MutableRequest)>/@parameter1
<br.com.caelum.vraptor.scan.JavassistBootstrapGenerator: java.lang.Class generate(java.util.Collection,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter1
<br.com.caelum.vraptor.scan.JavassistBootstrapGenerator: java.lang.Class generate(java.util.Collection,br.com.caelum.vraptor.scan.ClasspathResolver)>/resolver#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/request#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter1
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/parameters#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/validator#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/fileUploadCreator#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/method#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder: void <init>(br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder: void <init>(br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.proxy.Proxifier)>/router#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter1
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/router#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter2
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/request#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter3
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/response#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter4
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/container#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter5
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/resolver#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter6
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/extractor#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter7
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/flash#_0
<br.com.caelum.vraptor.serialization.I18nMessageSerialization: void <init>(br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.serialization.I18nMessageSerialization: void <init>(br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.Localization)>/container#_0
<br.com.caelum.vraptor.http.route.Rules: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.http.route.Rules: void <init>(br.com.caelum.vraptor.http.route.Router)>/router#_0
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTProperty: java.lang.reflect.Method getIndexedWriteMethod(java.beans.PropertyDescriptor)>/@parameter0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParser: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParser: void <init>(br.com.caelum.vraptor.http.route.Router)>/router#_0
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/result#_0
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter1
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/method#_0
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter2
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/provider#_0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/response#_0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter1
<javax.servlet.ServletResponseWrapper: void <init>(javax.servlet.ServletResponse)>/@parameter0
<javax.servlet.ServletResponseWrapper: void <init>(javax.servlet.ServletResponse)>/response#_0
<br.com.caelum.vraptor.deserialization.DeserializesHandler: void <init>(br.com.caelum.vraptor.deserialization.Deserializers)>/@parameter0
<br.com.caelum.vraptor.deserialization.DeserializesHandler: void <init>(br.com.caelum.vraptor.deserialization.Deserializers)>/deserializers#_0
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: java.util.Date convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: java.util.Date convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<com.google.inject.util.Providers: com.google.inject.Provider of(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: void <init>(br.com.caelum.iogi.spi.LocaleProvider)>/@parameter0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: void <init>(br.com.caelum.iogi.spi.LocaleProvider)>/localeProvider#_0
<br.com.caelum.vraptor.http.ognl.OgnlFacade: void <init>(br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringProvider: void start(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringProvider: org.springframework.web.context.ConfigurableWebApplicationContext getParentApplicationContext(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.http.ognl.GenericNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/@parameter0
<br.com.caelum.vraptor.http.ognl.GenericNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/removal#_0
<net.vidageek.mirror.get.DefaultGetterHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<net.vidageek.mirror.get.DefaultGetterHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/target#_0
<br.com.caelum.vraptor.view.DefaultValidationViewsFactory: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.view.DefaultValidationViewsFactory: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.proxy.Proxifier)>/result#_0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter1
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/restfulie#_0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter2
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/config#_0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>/@parameter0
<ognl.NoSuchPropertyException: java.lang.String getReason(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.XStream: java.lang.String toXML(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.XStream: void toXML(java.lang.Object,java.io.Writer)>/@parameter0
<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>/@parameter0
<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder)>/@parameter0
<br.com.caelum.vraptor.validator.DIConstraintValidatorFactory: void <init>(br.com.caelum.vraptor.ioc.Container)>/@parameter0
<br.com.caelum.vraptor.validator.DIConstraintValidatorFactory: void <init>(br.com.caelum.vraptor.ioc.Container)>/container#_0
<br.com.caelum.vraptor.http.iogi.RequestAttributeInstantiator: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.iogi.RequestAttributeInstantiator: void <init>(javax.servlet.http.HttpServletRequest)>/request#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/response#_0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$Bazinga: void <init>(org.hibernate.proxy.HibernateProxy)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$Bazinga: void <init>(org.hibernate.proxy.HibernateProxy)>/value#_0
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/i#28#_164
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/i#28_$$A_6#_164
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#27#_164
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast#27_$$A_6#_164
<net.vidageek.mirror.invoke.DefaultInvocationHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<net.vidageek.mirror.invoke.DefaultInvocationHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/target#_0
<net.vidageek.mirror.invoke.MethodHandlerByName: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.String)>/@parameter1
<net.vidageek.mirror.invoke.MethodHandlerByName: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.String)>/target#_0
<br.com.caelum.vraptor.config.BasicConfiguration: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.config.BasicConfiguration: void <init>(javax.servlet.ServletContext)>/servletContext#_0
<br.com.caelum.vraptor.interceptor.download.FileDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandler: void <init>(br.com.caelum.vraptor.interceptor.InterceptorRegistry)>/@parameter0
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandler: void <init>(br.com.caelum.vraptor.interceptor.InterceptorRegistry)>/registry#_0
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_6#_294
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_6#_467
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter1
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: java.sql.Time convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: java.sql.Time convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/type#_0
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter2
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/context#_0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/@parameter0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/response#_0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/@parameter1
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/defaults#_0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/@parameter0
<javax.servlet.http.HttpServletRequestWrapper: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.interceptor.ForwardToDefaultViewInterceptor: void <init>(br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.interceptor.ForwardToDefaultViewInterceptor: void <init>(br.com.caelum.vraptor.Result)>/result#_0
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/@parameter0
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/registry#_0
<javax.servlet.ServletRequestWrapper: void <init>(javax.servlet.ServletRequest)>/@parameter0
<javax.servlet.ServletRequestWrapper: void <init>(javax.servlet.ServletRequest)>/request#_0
<org.apache.commons.fileupload.servlet.ServletRequestContext: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<org.apache.commons.fileupload.servlet.ServletRequestContext: void <init>(javax.servlet.http.HttpServletRequest)>/request#_0
<net.vidageek.mirror.set.FieldSetterByField: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter1
<net.vidageek.mirror.set.FieldSetterByField: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/target#_0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter1
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/restfulie#_0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter2
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/config#_0
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.http.ognl.OgnlFacade)>/@parameter0
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.http.ognl.OgnlFacade)>/provider#_0
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.http.ognl.OgnlFacade)>/@parameter1
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.http.ognl.OgnlFacade)>/request#_0
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.http.ognl.OgnlFacade)>/@parameter2
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.http.ognl.OgnlFacade)>/container#_0
<br.com.caelum.vraptor.ioc.spring.DefaultSpringLocator: org.springframework.web.context.ConfigurableWebApplicationContext getApplicationContext(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.http.DefaultResourceTranslator: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.http.DefaultResourceTranslator: void <init>(br.com.caelum.vraptor.http.route.Router)>/router#_0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/result#_0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter1
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/factory#_0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter2
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/outjector#_0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter4
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/beanValidator#_0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter5
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>/@parameter0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/session#_0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/@parameter1
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/result#_0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<net.vidageek.mirror.set.DefaultSetterHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<net.vidageek.mirror.set.DefaultSetterHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/target#_0
<br.com.caelum.vraptor.view.DefaultPathResolver: void <init>(br.com.caelum.vraptor.http.FormatResolver)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPathResolver: void <init>(br.com.caelum.vraptor.http.FormatResolver)>/resolver#_0
<br.com.caelum.vraptor.view.DefaultPathResolver: java.lang.String pathFor(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPathResolver: java.lang.String pathFor(br.com.caelum.vraptor.resource.ResourceMethod)>/method#_0
<org.mockito.internal.util.MockUtil: boolean isMockitoMock(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: org.mockito.internal.creation.MethodInterceptorFilter getInterceptor(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/result#_0
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/current#_79
<br.com.caelum.vraptor.view.DefaultLogicResultTest$TheComponent: void <init>(br.com.caelum.vraptor.view.DefaultLogicResultTest,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.view.DefaultLogicResultTest$TheComponent: void <init>(br.com.caelum.vraptor.view.DefaultLogicResultTest,br.com.caelum.vraptor.Result)>/result#_0
<br.com.caelum.vraptor.core.DefaultConverters: void <init>(br.com.caelum.vraptor.ioc.Container)>/@parameter0
<br.com.caelum.vraptor.core.DefaultConverters: void <init>(br.com.caelum.vraptor.ioc.Container)>/container#_0
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator$VRaptorTypeConverter: void <init>(br.com.caelum.vraptor.http.iogi.VRaptorInstantiator,br.com.caelum.vraptor.core.Converters)>/@parameter1
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator$VRaptorTypeConverter: void <init>(br.com.caelum.vraptor.http.iogi.VRaptorInstantiator,br.com.caelum.vraptor.core.Converters)>/converters#_0
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/provider#_0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest$AnyController: void <init>(br.com.caelum.vraptor.Validator)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest$AnyController: void <init>(br.com.caelum.vraptor.Validator)>/validator#_0
<org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>/object#_0
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_6#_132
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void writeDetails(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void writeDetails(javax.servlet.http.HttpServletResponse)>/response#_0
<javax.servlet.ServletRequestEvent: void <init>(javax.servlet.ServletContext,javax.servlet.ServletRequest)>/@parameter0
<javax.servlet.ServletRequestEvent: void <init>(javax.servlet.ServletContext,javax.servlet.ServletRequest)>/@parameter1
<javax.servlet.ServletRequestEvent: void <init>(javax.servlet.ServletContext,javax.servlet.ServletRequest)>/request#_0
<org.hamcrest.core.IsSame: void <init>(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsSame: void <init>(java.lang.Object)>/object#_0
<org.hamcrest.core.IsSame: org.hamcrest.Matcher sameInstance(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsNot: org.hamcrest.Matcher not(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/result#_0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter1
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/request#_0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter2
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/router#_0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter3
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/provider#_0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter4
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/localization#_0
<ognl.ObjectPropertyAccessor: java.lang.Object getPossibleProperty(java.util.Map,java.lang.Object,java.lang.String)>/@parameter1
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter0
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<ognl.ObjectPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.enhance.ExpressionCompiler: java.lang.String getCastString(java.lang.Class)>/@parameter0
<ognl.enhance.ExpressionCompiler: java.lang.String getCastString(java.lang.Class)>/type#_0
<ognl.enhance.ExpressionCompiler: java.lang.String getRootExpression(ognl.Node,java.lang.Object,ognl.OgnlContext)>/@parameter1
<ognl.enhance.ExpressionCompiler: java.lang.String getRootExpression(ognl.Node,java.lang.Object,ognl.OgnlContext)>/root#_0
<javax.servlet.http.HttpServletResponseWrapper: void <init>(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator: void <init>(br.com.caelum.vraptor.core.Converters,br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.vraptor.core.Localization,br.com.caelum.iogi.spi.ParameterNamesProvider,javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator: void <init>(br.com.caelum.vraptor.core.Converters,br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.vraptor.core.Localization,br.com.caelum.iogi.spi.ParameterNamesProvider,javax.servlet.http.HttpServletRequest)>/@parameter2
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator: void <init>(br.com.caelum.vraptor.core.Converters,br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.vraptor.core.Localization,br.com.caelum.iogi.spi.ParameterNamesProvider,javax.servlet.http.HttpServletRequest)>/localization#_0
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator: void <init>(br.com.caelum.vraptor.core.Converters,br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.vraptor.core.Localization,br.com.caelum.iogi.spi.ParameterNamesProvider,javax.servlet.http.HttpServletRequest)>/@parameter4
<javax.servlet.jsp.jstl.core.Config: java.lang.Object get(javax.servlet.ServletRequest,java.lang.String)>/@parameter0
<javax.servlet.jsp.jstl.core.Config: java.lang.Object get(javax.servlet.ServletRequest,java.lang.String)>/request#_0
<javax.servlet.jsp.jstl.core.Config: java.lang.Object get(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<javax.servlet.jsp.jstl.core.Config: java.lang.Object get(javax.servlet.ServletContext,java.lang.String)>/context#_0
<org.mockito.internal.verification.MockAwareVerificationMode: void <init>(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.internal.verification.MockAwareVerificationMode: void <init>(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<br.com.caelum.vraptor.http.ognl.AbstractOgnlTestSupport: void configOgnl(br.com.caelum.vraptor.core.Converters)>/@parameter0
<net.vidageek.mirror.set.FieldSetterByName: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter2
<net.vidageek.mirror.set.FieldSetterByName: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String,java.lang.Object,java.lang.Class)>/target#_0
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter0
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter1
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter2
<br.com.caelum.vraptor.VRaptor: void init(javax.servlet.FilterConfig)>/@parameter0
<br.com.caelum.vraptor.VRaptor: void init(javax.servlet.FilterConfig)>/cfg#_0
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)>/@parameter0
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: void <init>(br.com.caelum.vraptor.core.Converters,java.util.ResourceBundle)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: void <init>(br.com.caelum.vraptor.core.Converters,java.util.ResourceBundle)>/converters#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/result#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/info#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter2
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/extractor#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/method#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.http.ognl.ListNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/removal#_0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/evaluation#_0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: void <init>(javax.servlet.ServletContext)>/context#_0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: boolean requestingStaticFile(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: java.lang.String uriRelativeToContextRoot(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: java.lang.String uriRelativeToContextRoot(javax.servlet.http.HttpServletRequest)>/request#_0
<net.vidageek.mirror.dsl.Mirror: net.vidageek.mirror.dsl.AccessorsController on(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval,java.lang.Object,java.lang.reflect.Method)>/@parameter1
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval,java.lang.Object,java.lang.reflect.Method)>/instance#_0
<br.com.caelum.iogi.Iogi: void <init>(br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.iogi.spi.LocaleProvider)>/@parameter1
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_6#_267
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/cast_$$A_7#_302
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/response#_0
<org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.Mockito: org.mockito.stubbing.Stubber doReturn(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$SomeProxy: void <init>(org.hibernate.proxy.LazyInitializer)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$SomeProxy: void <init>(org.hibernate.proxy.LazyInitializer)>/initializer#_0
<net.vidageek.mirror.invoke.DefaultSetterMethodHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.String)>/@parameter1
<net.vidageek.mirror.invoke.DefaultSetterMethodHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.String)>/target#_0
<br.com.caelum.vraptor.resource.HttpMethod: br.com.caelum.vraptor.resource.HttpMethod of(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.resource.HttpMethod: br.com.caelum.vraptor.resource.HttpMethod of(javax.servlet.http.HttpServletRequest)>/request#_0
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object)>/@parameter1
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object,boolean)>/@parameter1
<ognl.EvaluationPool: void recycle(ognl.Evaluation)>/@parameter0
<ognl.EvaluationPool: void recycleAll(ognl.Evaluation)>/@parameter0
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider: void <init>(br.com.caelum.vraptor.core.StaticContentHandler)>/@parameter0
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider: void <init>(br.com.caelum.vraptor.core.StaticContentHandler)>/handler#_0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/paramNameProvider#_0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/@parameter2
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/request#_0
<br.com.caelum.vraptor.test.HttpSessionMock: void <init>(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.test.HttpSessionMock: void <init>(javax.servlet.ServletContext,java.lang.String)>/context#_0
<ognl.OgnlContext: void setClassResolver(ognl.ClassResolver)>/@parameter0
<ognl.OgnlContext: void setClassResolver(ognl.ClassResolver)>/value#_0
<ognl.OgnlContext: void setTypeConverter(ognl.TypeConverter)>/@parameter0
<ognl.OgnlContext: void setTypeConverter(ognl.TypeConverter)>/value#_0
<ognl.OgnlContext: void setMemberAccess(ognl.MemberAccess)>/@parameter0
<ognl.OgnlContext: void setMemberAccess(ognl.MemberAccess)>/value#_0
<ognl.OgnlContext: void setRoot(java.lang.Object)>/@parameter0
<ognl.OgnlContext: void setRoot(java.lang.Object)>/value#_0
<ognl.OgnlContext: void setCurrentObject(java.lang.Object)>/@parameter0
<ognl.OgnlContext: void setCurrentObject(java.lang.Object)>/value#_0
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_10#_531
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result#_493
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_1#_496
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_4#_505
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_6#_511
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_7#_514
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_8#_517
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_9#_588
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result#_541
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_1#_545
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_3#_557
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_5#_565
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_6#_569
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_7#_573
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result#_599
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result_$$A_7#_646
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result_$$A_1#_603
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result_$$A_2#_615
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result_$$A_3#_623
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result_$$A_4#_627
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result_$$A_5#_631
<ognl.SimpleNode: boolean lastChild(ognl.OgnlContext)>/$stack3
<br.com.caelum.vraptor.view.DefaultLogicResult$2: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack10
<br.com.caelum.vraptor.view.DefaultLogicResult$2: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResult$2: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack24
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack107
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack20
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack46
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack48
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack29
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack32
<br.com.caelum.vraptor.view.DefaultLogicResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack38
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.String toString()>/$stack8
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.String toString()>/$stack12
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack209
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack193
<br.com.caelum.vraptor.validator.DefaultValidator$LocalizationSupplier: java.util.ResourceBundle get()>/$stack2
<br.com.caelum.vraptor.interceptor.FlashInterceptor$1: void beforeRedirect()>/$stack4
<br.com.caelum.vraptor.interceptor.FlashInterceptor$1: void beforeRedirect()>/$stack8
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder$WithNameImpl$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack13
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack10
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object)>/$stack3
<org.mockito.internal.InOrderImpl: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/$stack9
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod,java.util.List,java.util.ResourceBundle)>/$stack25
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: java.lang.Object createParameter(br.com.caelum.vraptor.http.ognl.OgnlParametersProvider$Parameter,java.util.Map,java.util.ResourceBundle,java.util.List)>/$stack25
<ognl.ASTVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack4
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator$VRaptorTypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack9
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator$VRaptorTypeConverter: java.lang.Object setPropertiesAfterConversions(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack12
<ognl.enhance.ExpressionCompiler: java.lang.String castExpression(ognl.OgnlContext,ognl.Node,java.lang.String)>/$stack26
<br.com.caelum.vraptor.view.DefaultStatus$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResult$1: java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],br.com.caelum.vraptor.proxy.SuperMethod)>/$stack9
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/$stack3
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/$stack3
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest$1: void register(java.lang.Class,java.lang.Class)>/$stack4
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getAuthType()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.Cookie[] getCookies()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: long getDateHeader(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.util.Enumeration getHeaders(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.util.Enumeration getHeaderNames()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: int getIntHeader(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getMethod()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getPathInfo()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getPathTranslated()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getContextPath()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getQueryString()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRemoteUser()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: boolean isUserInRole(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.security.Principal getUserPrincipal()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRequestedSessionId()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRequestURI()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.StringBuffer getRequestURL()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getServletPath()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession(boolean)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: boolean isRequestedSessionIdValid()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: boolean isRequestedSessionIdFromCookie()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: boolean isRequestedSessionIdFromURL()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: boolean isRequestedSessionIdFromUrl()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: boolean authenticate(javax.servlet.http.HttpServletResponse)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: void login(java.lang.String,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletRequestWrapper: void logout()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.util.Collection getParts()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.Part getPart(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: void addCookie(javax.servlet.http.Cookie)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: boolean containsHeader(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: java.lang.String encodeURL(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: java.lang.String encodeRedirectURL(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: java.lang.String encodeUrl(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: java.lang.String encodeRedirectUrl(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: void sendError(int,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void sendError(int)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: void sendRedirect(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: void setDateHeader(java.lang.String,long)>/$stack4
<javax.servlet.http.HttpServletResponseWrapper: void addDateHeader(java.lang.String,long)>/$stack4
<javax.servlet.http.HttpServletResponseWrapper: void setHeader(java.lang.String,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void addHeader(java.lang.String,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void setIntHeader(java.lang.String,int)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void addIntHeader(java.lang.String,int)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void setStatus(int)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: void setStatus(int,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: int getStatus()>/$stack1
<javax.servlet.http.HttpServletResponseWrapper: java.lang.String getHeader(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: java.util.Collection getHeaders(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: java.util.Collection getHeaderNames()>/$stack1
<br.com.caelum.vraptor.ioc.spring.HttpServletRequestProvider: javax.servlet.http.HttpServletRequest getObject()>/$stack2
<br.com.caelum.vraptor.ioc.spring.HttpServletRequestProvider: java.lang.Object getObject()>/$stack1
<br.com.caelum.vraptor.resource.DefaultResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/chain#_39
<org.mockito.internal.MockHandler: java.lang.Object handle(org.mockito.internal.invocation.Invocation)>/$stack28
<org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory: javax.servlet.http.HttpSession getObject()>/$stack2
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeRequest()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getHeader(java.lang.String)>/$stack2
<org.springframework.web.context.request.ServletWebRequest: java.lang.String[] getHeaderValues(java.lang.String)>/$stack3
<org.springframework.web.context.request.ServletWebRequest: java.util.Iterator getHeaderNames()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getParameter(java.lang.String)>/$stack2
<org.springframework.web.context.request.ServletWebRequest: java.lang.String[] getParameterValues(java.lang.String)>/$stack2
<org.springframework.web.context.request.ServletWebRequest: java.util.Iterator getParameterNames()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.util.Map getParameterMap()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.util.Locale getLocale()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getContextPath()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getRemoteUser()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: java.security.Principal getUserPrincipal()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: boolean isUserInRole(java.lang.String)>/$stack2
<org.springframework.web.context.request.ServletWebRequest: boolean isSecure()>/$stack1
<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>/$stack10
<org.springframework.web.context.request.ServletWebRequest: boolean checkNotModified(long)>/$stack19
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getDescription(boolean)>/request#_205
<ognl.ASTRootVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack18
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: org.picocontainer.MutablePicoContainer getSessionContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack4
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/$stack4
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/$stack9
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/$stack12
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/$stack10
<br.com.caelum.vraptor.ioc.guice.VRaptorAbstractModule$4: br.com.caelum.vraptor.http.MutableResponse get()>/$stack2
<br.com.caelum.vraptor.ioc.guice.VRaptorAbstractModule$4: java.lang.Object get()>/$stack1
<org.springframework.web.context.request.RequestContextListener: void requestInitialized(javax.servlet.ServletRequestEvent)>/$stack4
<org.springframework.web.context.request.RequestContextListener: void requestDestroyed(javax.servlet.ServletRequestEvent)>/$stack4
<br.com.caelum.vraptor.ioc.spring.HttpServletResponseProvider: javax.servlet.http.HttpServletResponse getObject()>/$stack2
<br.com.caelum.vraptor.ioc.spring.HttpServletResponseProvider: java.lang.Object getObject()>/$stack1
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack19
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/converter#_109
<ognl.ArrayPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack8
<ognl.ArrayPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack19
<ognl.ArrayPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack9
<ognl.ArrayPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack48
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack75
<br.com.caelum.vraptor.ioc.guice.VRaptorAbstractModule$3: javax.servlet.http.HttpSession get()>/$stack2
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/$stack6
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/converter#_1074
<ognl.OgnlRuntime: java.lang.reflect.Constructor getConvertedConstructorAndArgs(ognl.OgnlContext,java.lang.Object,java.util.List,java.lang.Object[],java.lang.Object[])>/converter#_1096
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/$stack17
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack14
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/$stack19
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack19
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack12
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack15
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack12
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack16
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack34
<ognl.OgnlRuntime: boolean isFieldAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Field,java.lang.String)>/$stack4
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/$stack4
<ognl.OgnlRuntime: java.lang.reflect.Method getMethod(ognl.OgnlContext,java.lang.Class,java.lang.String,ognl.Node[],boolean)>/$stack70
<ognl.OgnlRuntime: java.lang.reflect.Method getMethod(ognl.OgnlContext,java.lang.Class,java.lang.String,ognl.Node[],boolean)>/$stack79
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/$stack44
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/$stack13
<ognl.OgnlRuntime: java.lang.String getChildSource(ognl.OgnlContext,java.lang.Object,ognl.Node,boolean)>/$stack37
<br.com.caelum.vraptor.http.VRaptorRequest: java.lang.String toString()>/$stack4
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack13
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack236
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack22
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack161
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack27
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack146
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack155
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack130
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack32
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack35
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack96
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack100
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack13
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack220
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack22
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack150
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack28
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack134
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack142
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack106
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack32
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack36
<ognl.enhance.ContextClassLoader: java.lang.Class findClass(java.lang.String)>/$stack5
<ognl.enhance.ContextClassLoader: java.lang.Class findClass(java.lang.String)>/$stack9
<ognl.NumericExpression: java.lang.String coerceToNumeric(java.lang.String,ognl.OgnlContext,ognl.Node)>/value#_70
<ognl.NumericExpression: java.lang.String coerceToNumeric(java.lang.String,ognl.OgnlContext,ognl.Node)>/$stack60
<ognl.NumericExpression: java.lang.String coerceToNumeric(java.lang.String,ognl.OgnlContext,ognl.Node)>/$stack67
<ognl.NumericExpression: java.lang.String coerceToNumeric(java.lang.String,ognl.OgnlContext,ognl.Node)>/$stack78
<br.com.caelum.vraptor.core.JstlLocalization: java.util.Locale localeFor(java.lang.String)>/$stack7
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack7
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack14
<br.com.caelum.vraptor.ioc.spring.HttpSessionProvider: javax.servlet.http.HttpSession getObject()>/$stack2
<ognl.ListPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack11
<ognl.ListPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack16
<ognl.ListPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack31
<ognl.ListPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack8
<ognl.ListPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack13
<ognl.ListPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack28
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack364
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack338
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack283
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack18
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack61
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack239
<ognl.ASTThisVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack3
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack50
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack258
<br.com.caelum.vraptor.restfulie.controller.ResourceControllerInterceptor: br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource retrieveResource(java.lang.Class)>/$stack12
<br.com.caelum.vraptor.VRaptorTest$MyProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/$stack4
<ognl.ASTVarRef: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack10
<br.com.caelum.vraptor.ioc.guice.VRaptorAbstractModule$1: br.com.caelum.vraptor.http.MutableRequest get()>/$stack2
<br.com.caelum.vraptor.ioc.guice.VRaptorAbstractModule$1: java.lang.Object get()>/$stack1
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack36
<ognl.ObjectPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack38
<ognl.ObjectPropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack41
<ognl.ObjectPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack93
<ognl.ObjectPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack95
<ognl.ObjectPropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack98
<ognl.enhance.ExpressionCompiler: java.lang.String castExpression(ognl.OgnlContext,ognl.Node,java.lang.String)>/$stack78
<ognl.enhance.ExpressionCompiler: java.lang.String castExpression(ognl.OgnlContext,ognl.Node,java.lang.String)>/$stack81
<ognl.enhance.ExpressionCompiler: java.lang.Class getRootExpressionClass(ognl.Node,ognl.OgnlContext)>/$stack4
<ognl.enhance.ExpressionCompiler: java.lang.Class getRootExpressionClass(ognl.Node,ognl.OgnlContext)>/$stack5
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry$1: void setAttribute(java.lang.String,java.lang.Object)>/$stack4
<org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory: javax.servlet.ServletRequest getObject()>/$stack2
<org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory: java.lang.Object getObject()>/$stack1
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/converter#_101
<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>/@parameter0
<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>/@parameter0
<org.picocontainer.MutablePicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object)>/@parameter0
<org.mockito.stubbing.Stubber: java.lang.Object when(java.lang.Object)>/@parameter0
<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/@parameter0
<br.com.caelum.vraptor.core.MethodInfo: void setResourceMethod(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.serialization.NoRootSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.Converters: br.com.caelum.vraptor.Converter to(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.InterceptorStack: void next(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource: void configureRelations(br.com.caelum.vraptor.restfulie.relation.RelationBuilder)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.Download: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.scan.WebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/@parameter0
<org.springframework.web.context.ConfigurableWebApplicationContext: void setServletContext(javax.servlet.ServletContext)>/@parameter0
<net.vidageek.mirror.provider.ReflectionProvider: net.vidageek.mirror.provider.MethodReflectionProvider getMethodReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter0
<br.com.caelum.vraptor.proxy.Proxifier: boolean isProxy(java.lang.Object)>/@parameter0
<javax.servlet.RequestDispatcher: void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/@parameter0
<javax.servlet.RequestDispatcher: void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/@parameter0
<ognl.TypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.interceptor.Interceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.Interceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.EncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.http.UrlToResourceTranslator: br.com.caelum.vraptor.resource.ResourceMethod translate(br.com.caelum.vraptor.core.RequestInfo)>/@parameter0
<br.com.caelum.vraptor.resource.ResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/@parameter0
<br.com.caelum.vraptor.resource.MethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/@parameter0
<br.com.caelum.vraptor.restfulie.headers.RestDefaults: java.util.Calendar getLastModifiedFor(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/@parameter0
<br.com.caelum.vraptor.restfulie.headers.RestDefaults: java.lang.String getEtagFor(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/@parameter0
<br.com.caelum.vraptor.serialization.RepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.restfulie.RestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/@parameter0
<ognl.MemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter0
<ognl.MemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter0
<ognl.MemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/@parameter0
<ognl.enhance.OgnlExpressionCompiler: java.lang.Class getSuperOrInterfaceClass(java.lang.reflect.Method,java.lang.Class)>/@parameter0
<net.vidageek.mirror.provider.ReflectionProvider: net.vidageek.mirror.provider.FieldReflectionProvider getFieldReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter0
<br.com.caelum.vraptor.core.StaticContentHandler: boolean requestingStaticFile(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.core.StaticContentHandler: void deferProcessingToContainer(javax.servlet.FilterChain,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter0
<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.route.ParametersControl: void fillIntoRequest(java.lang.String,br.com.caelum.vraptor.http.MutableRequest)>/@parameter1
<ognl.Node: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter1
<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/@parameter1
<ognl.SimpleNode: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.Converter: java.lang.Object convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter1
<br.com.caelum.vraptor.core.InterceptorStack: void next(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<javax.servlet.RequestDispatcher: void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/@parameter1
<javax.servlet.RequestDispatcher: void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/@parameter1
<ognl.JavaSource: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.deserialization.Deserializers: br.com.caelum.vraptor.deserialization.Deserializer deserializerFor(java.lang.String,br.com.caelum.vraptor.ioc.Container)>/@parameter1
<ognl.TypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<ognl.enhance.ExpressionAccessor: void set(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.Node: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.JavaSource: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.interceptor.Interceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.EncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<ognl.MemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter1
<ognl.MemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter1
<ognl.MemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/@parameter1
<ognl.PropertyAccessor: java.lang.String getSourceAccessor(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.PropertyAccessor: java.lang.String getSourceSetter(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.MarshallingStrategy: void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder)>/@parameter1
<br.com.caelum.vraptor.core.StaticContentHandler: void deferProcessingToContainer(javax.servlet.FilterChain,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<br.com.caelum.vraptor.http.route.Router: br.com.caelum.vraptor.resource.ResourceMethod parse(java.lang.String,br.com.caelum.vraptor.resource.HttpMethod,br.com.caelum.vraptor.http.MutableRequest)>/@parameter2
<br.com.caelum.vraptor.http.ParametersProvider: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod,java.util.List,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.interceptor.Interceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<ognl.enhance.OgnlExpressionCompiler: java.lang.String createLocalReference(ognl.OgnlContext,java.lang.String,java.lang.Class)>/@parameter2
<br.com.caelum.vraptor.core.StaticContentHandler: void deferProcessingToContainer(javax.servlet.FilterChain,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter2
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack12
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack17
<br.com.caelum.vraptor.validator.BeanValidatorTest: void shouldValidateWithMyLocale()>/$stack3
<br.com.caelum.vraptor.validator.BeanValidatorTest: void shouldValidateWithDefaultLocale()>/$stack3
<br.com.caelum.vraptor.view.LinkToHandler: void start()>/$stack2
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithDeserializerAdapter()>/$stack16
<br.com.caelum.vraptor.http.VRaptorRequestTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.VRaptorRequestTest: void setup()>/$stack12
<br.com.caelum.vraptor.http.VRaptorRequestTest: void setup()>/$stack16
<br.com.caelum.vraptor.http.VRaptorRequestTest: void setup()>/$stack20
<ognl.Evaluation: java.lang.String toString(boolean,boolean,java.lang.String)>/$stack7
<ognl.Evaluation: java.lang.String toString(boolean,boolean,java.lang.String)>/$stack60
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void setup()>/$stack7
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onXMLSerializationResultShouldThrowExceptionOnlyOnSerializeMethod()>/$stack8
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack9
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack14
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack4
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack19
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithConstraint()>/$stack13
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithTwoConstraints()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: java.lang.Object is(java.lang.Class)>/$stack4
<br.com.caelum.vraptor.util.extjs.DefaultExtJsonTest: void setUp()>/$stack2
<br.com.caelum.vraptor.util.extjs.DefaultExtJsonTest: void setUp()>/$stack8
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void setUp()>/$stack1
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/$stack5
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack23
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack28
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack18
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void setUp()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack28
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack20
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack6
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void setUp()>/$stack4
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack5
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack9
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void setUp()>/$stack1
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack1
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack6
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack13
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldIncludeExtractedNameWhenSimplyIncluding()>/$stack3
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void setUp()>/$stack1
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void setup()>/$stack1
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void setup()>/$stack6
<br.com.caelum.vraptor.view.LinkToHandlerTest: void setUp()>/$stack4
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void setUp()>/$stack9
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization$1: br.com.caelum.vraptor.serialization.SerializerBuilder getSerializer()>/$stack3
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void setUp()>/$stack5
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void config()>/$stack3
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void config()>/$stack8
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void config()>/$stack15
<br.com.caelum.vraptor.http.route.RulesTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void setup()>/$stack4
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack7
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack21
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void setUp()>/$stack1
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack2
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack12
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack38
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack3
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack10
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack16
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack22
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack28
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack33
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack27
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack3
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack13
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack17
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack22
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack34
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack40
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack16
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack20
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack24
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack48
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack29
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack34
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack43
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack39
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void setup()>/$stack17
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void setup()>/$stack22
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void setUp()>/$stack3
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void setUp()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldDoNothingWhenYouDontSpecifyTheValidationPage()>/$stack4
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldDoNothingWhenYouDontSpecifyTheValidationPage()>/$stack5
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldDoNothingWhenYouDontSpecifyTheValidationPage()>/$stack6
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack9
<br.com.caelum.vraptor.core.DefaultConvertersTest: void shouldRegisterConvertersForAllDefaultTypes()>/$stack24
<br.com.caelum.vraptor.core.DefaultConvertersTest: void registersAndUsesTheConverterInstaceForTheSpecifiedType()>/$stack3
<br.com.caelum.vraptor.core.DefaultConvertersTest: void usesTheLastConverterInstanceRegisteredForTheSpecifiedType()>/$stack4
<br.com.caelum.vraptor.core.DefaultConvertersTest: void existsForWillReturnTrueForRegisteredConverters()>/$stack2
<br.com.caelum.vraptor.core.JstlLocalizationTest: void setUp()>/$stack9
<br.com.caelum.vraptor.core.JstlLocalizationTest: void setUp()>/$stack13
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void preConfigure(java.lang.Object,java.lang.String)>/$stack18
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest: void shouldThrowScannerExceptionIfAnErrorOccurs()>/$stack7
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest: br.com.caelum.vraptor.scan.ClasspathResolver access$000(br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest)>/$stack1
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest: br.com.caelum.vraptor.ComponentRegistry access$200(br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest)>/$stack1
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: br.com.caelum.vraptor.resource.ResourceMethod resourceMethod(br.com.caelum.vraptor.http.MutableRequest,java.lang.String)>/$stack3
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: boolean canHandle(java.lang.String)>/$stack2
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: java.lang.String urlFor(java.lang.Class,java.lang.reflect.Method,java.lang.Object[])>/$stack5
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenThereIsNoRefererShouldThrowExceptionOnForward()>/$stack2
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenThereIsNoRefererShouldThrowExceptionOnRedirect()>/$stack2
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack3
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack7
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack13
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack3
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack7
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack13
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack11
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack15
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack21
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack11
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack15
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack21
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: br.com.caelum.vraptor.ComponentRegistry access$000(br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest)>/$stack1
<br.com.caelum.vraptor.validator.DefaultBeanValidator: java.util.Locale getLocale()>/$stack1
<br.com.caelum.vraptor.validator.DefaultBeanValidator: java.util.Locale getLocale()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultTypeFinderTest: void shouldGetTypesCorrectly()>/$stack10
<br.com.caelum.vraptor.http.route.DefaultTypeFinderTest: void shouldGetTypesCorrectlyOnInheritance()>/$stack10
<br.com.caelum.vraptor.view.LinkToHandler: javax.servlet.ServletContext access$000(br.com.caelum.vraptor.view.LinkToHandler)>/$stack1
<br.com.caelum.vraptor.view.LinkToHandler: br.com.caelum.vraptor.http.route.Router access$100(br.com.caelum.vraptor.view.LinkToHandler)>/$stack1
<br.com.caelum.vraptor.core.RequestInfo: javax.servlet.FilterChain getChain()>/$stack1
<br.com.caelum.vraptor.core.RequestInfo: javax.servlet.ServletContext getServletContext()>/$stack1
<br.com.caelum.vraptor.core.RequestInfo: br.com.caelum.vraptor.http.MutableRequest getRequest()>/$stack1
<br.com.caelum.vraptor.core.RequestInfo: br.com.caelum.vraptor.http.MutableResponse getResponse()>/$stack1
<br.com.caelum.vraptor.core.RequestInfo: java.lang.String getRequestedUri()>/$stack3
<br.com.caelum.vraptor.core.RequestInfo: java.lang.String getRequestedUri()>/$stack11
<br.com.caelum.vraptor.core.RequestInfo: java.lang.String getRequestedUri()>/$stack5
<br.com.caelum.vraptor.core.RequestInfo: java.lang.String getRequestedUri()>/$stack8
<br.com.caelum.vraptor.http.DefaultFormatResolver: java.lang.String getAcceptFormat()>/$stack2
<br.com.caelum.vraptor.http.DefaultFormatResolver: java.lang.String getAcceptFormat()>/$stack4
<br.com.caelum.vraptor.http.DefaultFormatResolver: java.lang.String getAcceptFormat()>/$stack6
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack3
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization: br.com.caelum.vraptor.serialization.SerializerBuilder getSerializer()>/$stack3
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverter: java.util.Locale getLocale()>/$stack2
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack10
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADog()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithoutRoot()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgument()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndHasNotRoot()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogNamedDifferently()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAttribute()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAttribute()>/$stack16
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsISO8601Attribute()>/$stack10
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsObjectAttribute()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldHonorRequestHeaderAcceptCharset()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldHonorRequestHeaderAcceptCharset()>/$stack14
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void whenNoCharsetHeaderIsFoundThanAssumeItIsUTF8()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void whenNoCharsetHeaderIsFoundThanAssumeItIsUTF8()>/$stack14
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldByPassDeserializationWhenHasNoContent()>/$stack7
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeOneParam()>/$stack17
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeTwoParams()>/$stack18
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeWithoutGenericType()>/$stack18
<ognl.Evaluation: java.lang.Object getSource()>/$stack1
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: java.util.Map getParameterTypes(java.lang.reflect.Method,java.lang.String[])>/$stack17
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void setup()>/$stack4
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldInvokePrimitiveConverter()>/$stack3
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldInvokePrimitiveConverter()>/$stack10
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldInvokeCustomTypeConverter()>/$stack2
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldInvokeCustomTypeConverter()>/$stack8
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldThrowExceptionIfNoConverterIsFound()>/$stack3
<br.com.caelum.vraptor.http.iogi.VRaptorParameterNamesProvider: java.util.List lookupParameterNames(java.lang.reflect.AccessibleObject)>/$stack2
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void setup()>/$stack4
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldReadRootDirectoryAsWebinfClasses()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUseSpringContainerAsDefaultProvider()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUseGuiceAs1stAlternative()>/$stack4
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUsePicoAs2ndAlternative()>/$stack4
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldThrowExceptionWhenProviderClassWasNotFound()>/$stack2
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldThrowIllegalArgumentExceptionWhenProvidersWasNotFound()>/$stack5
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldReturnThatHasNoBasePackageWhenInitParamNull()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldThrowMissingConfigurationExceptionIfHasNoBasePackages()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void testIfClasspathScanningIsEnabled()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void testIfHasBasePackages()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldReturnBasePackagesWhenInitParamNotNull()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldReturnBasePackagesArrayWhenInitParamNotNullAndHasComas()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldReturnBasePackagesArrayWhenInitParamNotNullAndHasComasAndSpaces()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldReturnBasePackagesArrayWhenInitParamHasLeadingAndTrailingSpaces()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldAllowProviderOverriding()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldThrowInstantiationExceptionCauseIfThereIsSuchException()>/$stack2
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack21
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack15
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack28
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeOneLinkIfThereIsATransition()>/$stack10
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack18
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldDoNothingWhenThereIsNoFlashParameters()>/$stack1
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldDoNothingWhenThereIsNoFlashParameters()>/$stack8
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack1
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack1
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack9
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack5
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack7
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack3
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotCrashWhenSessionIsInvalid()>/$stack14
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotCrashWhenSessionIsInvalid()>/$stack5
<br.com.caelum.vraptor.view.DefaultStatus: void sendError(int)>/$stack3
<br.com.caelum.vraptor.view.DefaultStatus: void sendError(int,java.lang.String)>/$stack4
<br.com.caelum.vraptor.view.DefaultStatus: void header(java.lang.String,java.lang.String)>/$stack3
<br.com.caelum.vraptor.view.DefaultStatus: void created()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatus: void created()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatus: void ok()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatus: void ok()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatus: void movedPermanentlyTo(java.lang.String)>/$stack2
<br.com.caelum.vraptor.view.DefaultStatus: void movedPermanentlyTo(java.lang.String)>/$stack5
<br.com.caelum.vraptor.view.DefaultStatus: void movedPermanentlyTo(java.lang.String)>/$stack6
<br.com.caelum.vraptor.view.DefaultStatus: java.lang.String fixLocation(java.lang.String)>/$stack4
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void doesNothingIfResultWasAlreadyUsed()>/$stack1
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack1
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatus: void badRequest(java.util.List)>/$stack2
<br.com.caelum.vraptor.view.DefaultStatus: void badRequest(java.util.List)>/$stack3
<br.com.caelum.vraptor.view.DefaultStatus: void noContent()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatus: void accepted()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatus: void accepted()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatus: void notModified()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatus: br.com.caelum.vraptor.http.route.Router access$000(br.com.caelum.vraptor.view.DefaultStatus)>/$stack1
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack8
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack26
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack14
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void handlesInclude()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void handlesInclude()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void handlesInclude()>/$stack12
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleTheCorrectMethod()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleTheCorrectMethod()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleTheCorrectMethod()>/$stack12
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveRequestMethods()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveRequestMethods()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveRequestMethods()>/$stack12
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveGetRequestUsingThe_methodParameter()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveGetRequestUsingThe_methodParameter()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveGetRequestUsingThe_methodParameter()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveGetRequestUsingThe_methodParameter()>/$stack16
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldThrowExceptionWhenRequestANotKnownMethod()>/$stack1
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldThrowExceptionWhenRequestANotKnownMethod()>/$stack5
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldThrowExceptionWhenRequestANotKnownMethod()>/$stack9
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldOverrideTheHttpMethodByUsingThe_methodParameter()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldOverrideTheHttpMethodByUsingThe_methodParameter()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldOverrideTheHttpMethodByUsingThe_methodParameter()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldOverrideTheHttpMethodByUsingThe_methodParameter()>/$stack16
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfRootContext()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfRootContext()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfRootContext()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfRootContext()>/$stack16
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContext()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContext()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContext()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContext()>/$stack16
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfPlainRootContext()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfPlainRootContext()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfPlainRootContext()>/$stack12
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfPlainRootContext()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfPlainRootContext()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfPlainRootContext()>/$stack12
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldUseValidationVersionOfLogicResult()>/$stack1
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfNonRootContext()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfNonRootContext()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfNonRootContext()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfNonRootContext()>/$stack16
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldThrowExceptionOnlyAtTheEndOfValidationCall()>/$stack1
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldThrowExceptionOnlyAtTheEndOfValidationCall()>/$stack6
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldUseValidationVersionOfPageResult()>/$stack1
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack1
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack16
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldUseValidationVersionOfEmptyResult()>/$stack1
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldNotThrowExceptionsOnHeaders()>/$stack3
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContextButPlainRequest()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContextButPlainRequest()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContextButPlainRequest()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContextButPlainRequest()>/$stack16
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSendError()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSendErrorWithMessage()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSetStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldBeAbleToChainMethodsOnHttpResult()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnMoved()>/$stack4
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnMovedToLogic()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onRefererResultShouldThrowExceptionsOnForward()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onRefererResultShouldThrowExceptionsOnRedirect()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnNotFound()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnHeader()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnCreated()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnCreatedWithLocation()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnOk()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnConflict()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMethodNotAllowed()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMovedPermanentlyTo()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMovedPermanentlyToLogic()>/$stack4
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onSerializerResultsShouldBeAbleToCreateValidationInstancesEvenIfChildClassesUsesCovariantType()>/$stack5
<net.vidageek.mirror.invoke.MethodHandlerByMethod: java.lang.Object withArgs(java.lang.Object[])>/$stack3
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldBeAbleToConvert()>/$stack2
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack16
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack20
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack3
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack7
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack24
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack12
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: br.com.caelum.vraptor.serialization.SerializerBuilder getSerializer()>/$stack4
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack3
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack11
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void addHeaderParametersToAttribute(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack22
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void addHeaderParametersToAttribute(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void addHeaderParametersToAttribute(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack13
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void fixParameter(java.lang.String)>/$stack6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void fixParameter(java.lang.String)>/$stack10
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack3
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack5
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void is(java.lang.Class,java.lang.reflect.Method)>/$stack6
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack19
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: br.com.caelum.vraptor.core.Converters access$100(br.com.caelum.vraptor.http.route.DefaultRouteBuilder)>/$stack1
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void reportException(java.lang.Exception)>/$stack2
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: boolean replay(java.lang.Exception)>/$stack3
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldBeAbleToConvertWithPTBR()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldBeAbleToConvertWithENUS()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack17
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack21
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack4
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack9
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack25
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack13
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.view.DefaultPageResult: void defaultView()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResult: void defaultView()>/$stack8
<br.com.caelum.vraptor.view.DefaultPageResult: void include()>/$stack3
<br.com.caelum.vraptor.view.DefaultPageResult: void include()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResult: void redirectTo(java.lang.String)>/$stack8
<br.com.caelum.vraptor.view.DefaultPageResult: void redirectTo(java.lang.String)>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResult: void redirectTo(java.lang.String)>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResult: void forwardTo(java.lang.String)>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResult: br.com.caelum.vraptor.http.MutableRequest access$000(br.com.caelum.vraptor.view.DefaultPageResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResult: br.com.caelum.vraptor.http.MutableResponse access$100(br.com.caelum.vraptor.view.DefaultPageResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResult: br.com.caelum.vraptor.view.PathResolver access$200(br.com.caelum.vraptor.view.DefaultPageResult)>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<com.google.inject.util.Providers$1: java.lang.Object get()>/$stack1
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack8
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack12
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack1
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack9
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack13
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack5
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldNotOutjectIfThereIsNoReturnType()>/$stack1
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldNotOutjectIfReturnIsVoid()>/$stack1
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void add(java.lang.Class)>/$stack2
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void addAsNext(java.lang.Class)>/$stack6
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: java.lang.ClassLoader getClassLoader()>/$stack2
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: java.lang.ClassLoader getClassLoader()>/$stack6
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: java.net.URL findWebInfClassesLocation()>/$stack2
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: java.util.List findBasePackages()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldRedirectIncludingContext()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shoudNotExecuteLogicWhenUsingResultOf()>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatusWhenMovingToLogic()>/$stack1
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/$stack3
<br.com.caelum.vraptor.config.ApplicationConfiguration: java.lang.String getApplicationPath()>/$stack2
<br.com.caelum.vraptor.config.ApplicationConfiguration: java.lang.String getApplicationPath()>/$stack6
<br.com.caelum.vraptor.config.ApplicationConfiguration: java.lang.String getApplicationPath()>/$stack9
<br.com.caelum.vraptor.config.ApplicationConfiguration: java.lang.String getApplicationPath()>/$stack18
<br.com.caelum.vraptor.config.ApplicationConfiguration: java.lang.String getApplicationPath()>/$stack12
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: java.lang.Object instantiateOrAddError(br.com.caelum.iogi.parameters.Parameters,java.util.List,br.com.caelum.iogi.reflection.Target)>/$stack4
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: java.util.List createTargets(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack11
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack12
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack6
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack17
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack15
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack15
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack20
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack15
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack9
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack15
<br.com.caelum.vraptor.core.DefaultResult: br.com.caelum.vraptor.View use(java.lang.Class)>/$stack2
<br.com.caelum.vraptor.core.DefaultResult: br.com.caelum.vraptor.Result include(java.lang.String,java.lang.Object)>/$stack7
<br.com.caelum.vraptor.core.DefaultResult: br.com.caelum.vraptor.Result include(java.lang.Object)>/$stack3
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeOneLinkIfThereIsATransition()>/$stack11
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack19
<br.com.caelum.vraptor.validator.ValidatorAcceptanceTest: void setup()>/$stack9
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack15
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack17
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack24
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack22
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void unsupported(java.lang.String)>/$stack2
<br.com.caelum.vraptor.http.route.DefaultParametersControl: java.lang.String fillUri(java.lang.String[],java.lang.Object[])>/$stack35
<br.com.caelum.vraptor.http.route.DefaultParametersControl: java.lang.String fillUri(java.lang.String[],java.lang.Object[])>/$stack42
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void aliasParams(java.lang.reflect.Method,java.lang.Class[],com.thoughtworks.xstream.XStream)>/$stack6
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findGetter(java.lang.Object,java.lang.String)>/$stack5
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findSetter(java.lang.Object,java.lang.String,java.lang.Class)>/$stack6
<br.com.caelum.vraptor.http.iogi.VRaptorDependencyProvider: boolean canProvide(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.vraptor.http.iogi.VRaptorDependencyProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpServletRequest getRequest()>/$stack1
<org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession getSession(boolean)>/$stack7
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>/$stack14
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/$stack12
<org.springframework.web.context.request.ServletRequestAttributes: void removeAttribute(java.lang.String,int)>/$stack16
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.String[] getAttributeNames(int)>/$stack8
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object resolveReference(java.lang.String)>/$stack7
<org.springframework.web.context.request.ServletRequestAttributes: void updateAccessedSessionAttributes()>/$stack7
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack2
<br.com.caelum.vraptor.view.DefaultLogicResultTest: br.com.caelum.vraptor.view.DefaultLogicResultTest$MyComponent givenDispatcherWillBeReturnedWhenRequested()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: br.com.caelum.vraptor.view.DefaultLogicResultTest$MyComponent givenDispatcherWillBeReturnedWhenRequested()>/$stack3
<br.com.caelum.vraptor.view.DefaultLogicResultTest: br.com.caelum.vraptor.view.DefaultLogicResultTest$MyComponent givenDispatcherWillBeReturnedWhenRequested()>/$stack7
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack2
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack2
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack8
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack2
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotWrapValidationExceptionWhenForwarding()>/$stack2
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack8
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack8
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldThrowExceptionWhenThereIsAParameterContainingDotClass()>/$stack1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldThrowExceptionWhenThereIsAParameterContainingDotClass()>/$stack8
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack8
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldThrowException()>/$stack4
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack11
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack13
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack11
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack19
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack25
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack29
<br.com.caelum.vraptor.http.EncodingHandlerFactoryTest: void shouldReturnANullHandlerWhenThereIsNoEncodingInitParameter()>/$stack2
<br.com.caelum.vraptor.http.EncodingHandlerFactoryTest: void shouldReturnAWebXmlHandlerWhenThereIsAnEncodingInitParameter()>/$stack2
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack9
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatIsSpecifiedReturnIt()>/$stack2
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatIsSpecifiedReturnItEvenIfAcceptsHtml()>/$stack2
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatIsSpecifiedReturnItEvenIfAcceptsHtml()>/$stack6
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack2
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack6
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack10
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack2
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack6
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void ifAcceptHeaderIsNullShouldReturnDefault()>/$stack2
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void ifAcceptHeaderIsNullShouldReturnDefault()>/$stack6
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void ifAcceptHeaderIsNullShouldReturnDefault()>/$stack10
<br.com.caelum.vraptor.view.DefaultHttpResult: br.com.caelum.vraptor.view.HttpResult addDateHeader(java.lang.String,long)>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResult: br.com.caelum.vraptor.view.HttpResult addHeader(java.lang.String,java.lang.String)>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResult: br.com.caelum.vraptor.view.HttpResult addIntHeader(java.lang.String,int)>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResult: void sendError(int)>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResult: void sendError(int,java.lang.String)>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResult: void setStatusCode(int)>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResult: void movedPermanentlyTo(java.lang.String)>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResult: java.lang.Object movedPermanentlyTo(java.lang.Class)>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResult: br.com.caelum.vraptor.view.HttpResult body(java.lang.String)>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResult: br.com.caelum.vraptor.view.HttpResult body(java.io.InputStream)>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResult: br.com.caelum.vraptor.view.HttpResult body(java.io.Reader)>/$stack3
<org.mockito.internal.stubbing.answers.Returns: java.lang.Object answer(org.mockito.invocation.InvocationOnMock)>/$stack2
<org.mockito.internal.stubbing.answers.Returns: java.lang.String printReturnType()>/$stack1
<org.mockito.internal.stubbing.answers.Returns: java.lang.Class getReturnType()>/$stack1
<org.mockito.internal.stubbing.answers.Returns: boolean returnsNull()>/$stack1
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack6
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack8
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack17
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack12
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldUseConverterIfItExists()>/$stack2
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldUseConverterIfItExists()>/$stack8
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldUseConverterIfItExists()>/$stack13
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithoutAlias()>/$stack3
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldBeAbleToConvertWithPTBR()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldBeAbleToConvertWithENUS()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack17
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack21
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack4
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack9
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack25
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack13
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack3
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack5
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/$stack7
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/$stack3
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack6
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPage()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void shouldSend404IfNothingIsRendered()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPageWithAlias()>/$stack3
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack6
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack6
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack6
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack6
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack31
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack14
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack25
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack9
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack10
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: java.util.Calendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>/$stack20
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: java.util.Locale getLocale()>/$stack1
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: java.util.Locale getLocale()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack34
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void reportFileUploadException(org.apache.commons.fileupload.FileUploadException)>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void reportSizeLimitExceeded(org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException)>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void processFile(org.apache.commons.fileupload.FileItem,java.lang.String)>/$stack11
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void processFile(org.apache.commons.fileupload.FileItem,java.lang.String)>/$stack10
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: java.lang.String getValue(org.apache.commons.fileupload.FileItem)>/$stack4
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder: br.com.caelum.vraptor.http.route.Router access$200(br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder)>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResult: void includeParametersInFlash(java.lang.Class,java.lang.reflect.Method,java.lang.Object[])>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResult: br.com.caelum.vraptor.ioc.Container access$200(br.com.caelum.vraptor.view.DefaultLogicResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResult: br.com.caelum.vraptor.interceptor.TypeNameExtractor access$300(br.com.caelum.vraptor.view.DefaultLogicResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResult: br.com.caelum.vraptor.http.MutableRequest access$400(br.com.caelum.vraptor.view.DefaultLogicResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResult: br.com.caelum.vraptor.http.MutableResponse access$500(br.com.caelum.vraptor.view.DefaultLogicResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResult: br.com.caelum.vraptor.view.PathResolver access$600(br.com.caelum.vraptor.view.DefaultLogicResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResult: br.com.caelum.vraptor.http.route.Router access$800(br.com.caelum.vraptor.view.DefaultLogicResult)>/$stack1
<br.com.caelum.vraptor.serialization.I18nMessageSerialization: void as(java.lang.Class)>/$stack3
<br.com.caelum.vraptor.http.route.Rules: br.com.caelum.vraptor.http.route.RouteBuilder routeFor(java.lang.String)>/$stack3
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanWEBINFClasses()>/$stack3
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanWEBINFClasses()>/$stack11
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanWEBINFClasses()>/$stack15
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanBasePackages()>/$stack9
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanBasePackages()>/$stack15
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanBasePackages()>/$stack19
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldReturnEmptyCollectionIfWebinfClassesNotFound()>/$stack4
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldThrowScannerExceptionIfHasExceptionWhenProcessWebinfClasses()>/$stack4
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParser: java.util.List registerRulesFor(java.lang.Class)>/$stack22
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldBeAbleToConvertWithPTBR()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldBeAbleToConvertWithENUS()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack17
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack21
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack4
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack9
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack25
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack13
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest: void shouldBuildRelationsOfControllersUsingMethodNameByDefault()>/$stack3
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest: void shouldBuildRelationsOfControllersUsingGivenName()>/$stack3
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void outjectRequestMap()>/$stack4
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void outjectRequestMap()>/$stack3
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void outjectRequestMap()>/$stack9
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void outjectRequestMap()>/$stack10
<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse getResponse()>/$stack1
<javax.servlet.ServletResponseWrapper: void setCharacterEncoding(java.lang.String)>/$stack2
<javax.servlet.ServletResponseWrapper: java.lang.String getCharacterEncoding()>/$stack1
<javax.servlet.ServletResponseWrapper: javax.servlet.ServletOutputStream getOutputStream()>/$stack1
<javax.servlet.ServletResponseWrapper: java.io.PrintWriter getWriter()>/$stack1
<javax.servlet.ServletResponseWrapper: void setContentLength(int)>/$stack2
<javax.servlet.ServletResponseWrapper: void setContentType(java.lang.String)>/$stack2
<javax.servlet.ServletResponseWrapper: java.lang.String getContentType()>/$stack1
<javax.servlet.ServletResponseWrapper: void setBufferSize(int)>/$stack2
<javax.servlet.ServletResponseWrapper: int getBufferSize()>/$stack1
<javax.servlet.ServletResponseWrapper: void flushBuffer()>/$stack1
<javax.servlet.ServletResponseWrapper: boolean isCommitted()>/$stack1
<javax.servlet.ServletResponseWrapper: void reset()>/$stack1
<javax.servlet.ServletResponseWrapper: void resetBuffer()>/$stack1
<javax.servlet.ServletResponseWrapper: void setLocale(java.util.Locale)>/$stack2
<javax.servlet.ServletResponseWrapper: java.util.Locale getLocale()>/$stack1
<br.com.caelum.vraptor.deserialization.DeserializesHandler: void handle(java.lang.Class)>/$stack6
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(javax.servlet.ServletResponse)>/$stack3
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(javax.servlet.ServletResponse)>/$stack2
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(java.lang.Class)>/$stack7
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(java.lang.Class)>/$stack4
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack9
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack1
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldUseContainerForNewView()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: br.com.caelum.vraptor.View mockResult(java.lang.Class)>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack9
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack8
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: java.util.Date convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack10
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack3
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack4
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack4
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack5
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack19
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack1
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack5
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasNotUsedShouldThrowNPE()>/$stack17
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasNotUsedShouldThrowNPE()>/$stack2
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasNotUsedShouldThrowNPE()>/$stack6
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack4
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack8
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.util.Locale providedOrDefault()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldNotAcceptFormURLEncoded()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldNotAcceptFormURLEncoded()>/$stack10
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldAcceptMultipart()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldAcceptMultipart()>/$stack10
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack26
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack13
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack17
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack26
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack13
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack17
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack34
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack25
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack29
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack12
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack16
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack28
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack17
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack30
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack25
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack30
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack25
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack8
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack8
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack31
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack22
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack26
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack25
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack16
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack8
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldComplainWhenUnableToInstantiateAnInterceptor()>/$stack2
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack4
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack10
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack4
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandler: java.lang.Object instantiate(java.lang.Class)>/$stack19
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack14
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack18
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack22
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack10
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack14
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack18
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack22
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack10
<net.vidageek.mirror.get.DefaultGetterHandler: java.lang.Object field(java.lang.reflect.Field)>/$stack6
<br.com.caelum.vraptor.view.DefaultValidationViewsFactory: br.com.caelum.vraptor.View instanceFor(java.lang.Class,java.util.List)>/$stack4
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack11
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack22
<ognl.NoSuchPropertyException: java.lang.Object getTarget()>/$stack1
<br.com.caelum.vraptor.validator.DIConstraintValidatorFactory: javax.validation.ConstraintValidator getInstance(java.lang.Class)>/$stack2
<br.com.caelum.vraptor.validator.DIConstraintValidatorFactory: javax.validation.ConstraintValidator getInstance(java.lang.Class)>/$stack8
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldNotSendMethodNotAllowedIfTheRequestMethodIsOptions()>/$stack1
<br.com.caelum.vraptor.http.iogi.RequestAttributeInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack3
<br.com.caelum.vraptor.http.iogi.RequestAttributeInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack3
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlWithoutArgs()>/$stack4
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlWithParamArgs()>/$stack5
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlWithPartialParamArgs()>/$stack5
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlForOverrideMethodWithParamArgs()>/$stack5
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlForOverrideMethodWithParialParamArgs()>/$stack5
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldUseExactlyMatchedMethodIfTheMethodIsOverloaded()>/$stack5
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$Bazinga: org.hibernate.proxy.HibernateProxy getValue()>/$stack1
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.ConstructorHandler constructor()>/$stack1
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/$stack24
<br.com.caelum.vraptor.config.BasicConfiguration: java.lang.Class getProviderType()>/$stack3
<br.com.caelum.vraptor.config.BasicConfiguration: boolean hasBasePackages()>/$stack1
<br.com.caelum.vraptor.config.BasicConfiguration: java.lang.String[] getBasePackages()>/$stack2
<br.com.caelum.vraptor.config.BasicConfiguration: java.lang.String getEncoding()>/$stack1
<br.com.caelum.vraptor.config.BasicConfiguration: java.lang.String getWebinfClassesDirectory()>/$stack1
<br.com.caelum.vraptor.config.BasicConfiguration: javax.servlet.ServletContext getServletContext()>/$stack1
<br.com.caelum.vraptor.config.BasicConfiguration: boolean isClasspathScanningEnabled()>/$stack2
<br.com.caelum.vraptor.config.BasicConfiguration: boolean isClasspathScanningEnabled()>/$stack4
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandler: void registerInterceptor(java.lang.Class)>/$stack5
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack1
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldNotUsePortWhenPortIs80()>/$stack1
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldNotUsePortWhenPortIs80()>/$stack5
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldNotUsePortWhenPortIs80()>/$stack9
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldNotUsePortWhenPortIs80()>/$stack15
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldGiveFullUrlWithPortWhenPortIsNot80()>/$stack1
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldGiveFullUrlWithPortWhenPortIsNot80()>/$stack5
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldGiveFullUrlWithPortWhenPortIsNot80()>/$stack9
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldGiveFullUrlWithPortWhenPortIsNot80()>/$stack15
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldClearAllListenersFromSessionOnStart()>/$stack4
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack12
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack21
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack27
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack16
<br.com.caelum.vraptor.VRaptorTest: void shouldStopContainer()>/$stack7
<br.com.caelum.vraptor.VRaptorTest: void shouldStopContainer()>/$stack2
<br.com.caelum.vraptor.scan.NullWebAppBootstrapTest: void shouldNotDoAnything()>/$stack4
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: java.sql.Time convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack8
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack6
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack10
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack18
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack22
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack30
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack34
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/$stack15
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/$stack8
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/$stack10
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void restfulHeadersFor(java.lang.String,java.util.Calendar)>/$stack3
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void restfulHeadersFor(java.lang.String,java.util.Calendar)>/$stack4
<br.com.caelum.vraptor.interceptor.ForwardToDefaultViewInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack4
<br.com.caelum.vraptor.interceptor.ForwardToDefaultViewInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack7
<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest getRequest()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.Object getAttribute(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: java.util.Enumeration getAttributeNames()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getCharacterEncoding()>/$stack1
<javax.servlet.ServletRequestWrapper: void setCharacterEncoding(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: int getContentLength()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getContentType()>/$stack1
<javax.servlet.ServletRequestWrapper: javax.servlet.ServletInputStream getInputStream()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getParameter(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: java.util.Map getParameterMap()>/$stack1
<javax.servlet.ServletRequestWrapper: java.util.Enumeration getParameterNames()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String[] getParameterValues(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: java.lang.String getProtocol()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getScheme()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getServerName()>/$stack1
<javax.servlet.ServletRequestWrapper: int getServerPort()>/$stack1
<javax.servlet.ServletRequestWrapper: java.io.BufferedReader getReader()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getRemoteAddr()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getRemoteHost()>/$stack1
<javax.servlet.ServletRequestWrapper: void setAttribute(java.lang.String,java.lang.Object)>/$stack3
<javax.servlet.ServletRequestWrapper: void removeAttribute(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: java.util.Locale getLocale()>/$stack1
<javax.servlet.ServletRequestWrapper: java.util.Enumeration getLocales()>/$stack1
<javax.servlet.ServletRequestWrapper: boolean isSecure()>/$stack1
<javax.servlet.ServletRequestWrapper: javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: java.lang.String getRealPath(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: int getRemotePort()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getLocalName()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getLocalAddr()>/$stack1
<javax.servlet.ServletRequestWrapper: int getLocalPort()>/$stack1
<javax.servlet.ServletRequestWrapper: javax.servlet.ServletContext getServletContext()>/$stack1
<javax.servlet.ServletRequestWrapper: javax.servlet.AsyncContext startAsync()>/$stack1
<javax.servlet.ServletRequestWrapper: javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/$stack3
<javax.servlet.ServletRequestWrapper: boolean isAsyncStarted()>/$stack1
<javax.servlet.ServletRequestWrapper: boolean isAsyncSupported()>/$stack1
<javax.servlet.ServletRequestWrapper: javax.servlet.AsyncContext getAsyncContext()>/$stack1
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(javax.servlet.ServletRequest)>/$stack3
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(javax.servlet.ServletRequest)>/$stack2
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(java.lang.Class)>/$stack7
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(java.lang.Class)>/$stack4
<javax.servlet.ServletRequestWrapper: javax.servlet.DispatcherType getDispatcherType()>/$stack1
<org.apache.commons.fileupload.servlet.ServletRequestContext: java.lang.String getCharacterEncoding()>/$stack1
<org.apache.commons.fileupload.servlet.ServletRequestContext: java.lang.String getContentType()>/$stack1
<org.apache.commons.fileupload.servlet.ServletRequestContext: int getContentLength()>/$stack1
<org.apache.commons.fileupload.servlet.ServletRequestContext: long contentLength()>/$stack4
<org.apache.commons.fileupload.servlet.ServletRequestContext: long contentLength()>/$stack8
<org.apache.commons.fileupload.servlet.ServletRequestContext: java.io.InputStream getInputStream()>/$stack1
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowMethodExceptionIfThereIsAnInvocationException()>/$stack15
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack10
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack10
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack23
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowExceptionIfYouHaventSpecifiedWhereToGoOnValidationError()>/$stack11
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowExceptionIfYouHaventSpecifiedWhereToGoOnValidationError()>/$stack16
<net.vidageek.mirror.set.FieldSetterByField: void withValue(java.lang.Object)>/$stack3
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack10
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack20
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod,java.util.List,java.util.ResourceBundle)>/$stack10
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: java.lang.Object createParameter(br.com.caelum.vraptor.http.ognl.OgnlParametersProvider$Parameter,java.util.Map,java.util.ResourceBundle,java.util.List)>/$stack11
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: java.lang.Object createParameter(br.com.caelum.vraptor.http.ognl.OgnlParametersProvider$Parameter,java.util.Map,java.util.ResourceBundle,java.util.List)>/$stack49
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: java.lang.Object createParameter(br.com.caelum.vraptor.http.ognl.OgnlParametersProvider$Parameter,java.util.Map,java.util.ResourceBundle,java.util.List)>/$stack42
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: java.lang.Object createParameter(br.com.caelum.vraptor.http.ognl.OgnlParametersProvider$Parameter,java.util.Map,java.util.ResourceBundle,java.util.List)>/$stack46
<br.com.caelum.vraptor.http.ognl.OgnlParametersProvider: java.util.Map parametersThatStartWith(java.lang.String)>/$stack3
<br.com.caelum.vraptor.http.DefaultResourceTranslator: br.com.caelum.vraptor.resource.ResourceMethod translate(br.com.caelum.vraptor.core.RequestInfo)>/$stack15
<br.com.caelum.vraptor.http.DefaultResourceTranslator: br.com.caelum.vraptor.resource.ResourceMethod translate(br.com.caelum.vraptor.core.RequestInfo)>/$stack10
<br.com.caelum.vraptor.http.iogi.MiscIogiSupportTest: void isCapableOfDealingWithEmptyParameterForInternalValueWhichNeedsAConverter()>/$stack6
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResources()>/$stack6
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResources()>/$stack14
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResources()>/$stack18
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithQueryString()>/$stack6
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithQueryString()>/$stack15
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithQueryString()>/$stack19
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithJSessionId()>/$stack6
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithJSessionId()>/$stack15
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithJSessionId()>/$stack19
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void shouldUseResourceTypeAndMethodNameToResolveJsp()>/$stack2
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void shouldUseTheFormatIfSupplied()>/$stack2
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsFalseForNonStaticResources()>/$stack6
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsFalseForNonStaticResources()>/$stack14
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsFalseForNonStaticResources()>/$stack18
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void shouldIgnoreHtmlFormat()>/$stack2
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldBeAbleToConvertWithPTBR()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldBeAbleToConvertWithENUS()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack18
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack22
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack5
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack10
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack26
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack14
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.validator.DefaultValidator: void validate(java.lang.Object,java.lang.Class[])>/$stack3
<br.com.caelum.vraptor.validator.DefaultValidator: void validateProperties(java.lang.Object,java.lang.String[])>/$stack3
<br.com.caelum.vraptor.validator.DefaultValidator: void validateProperty(java.lang.Object,java.lang.String,java.lang.Class[])>/$stack4
<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.View onErrorUse(java.lang.Class)>/$stack6
<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.View onErrorUse(java.lang.Class)>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.View onErrorUse(java.lang.Class)>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.core.Localization access$000(br.com.caelum.vraptor.validator.DefaultValidator)>/$stack1
<br.com.caelum.vraptor.interceptor.FlashInterceptor: br.com.caelum.vraptor.Result access$000(br.com.caelum.vraptor.interceptor.FlashInterceptor)>/$stack1
<br.com.caelum.vraptor.interceptor.FlashInterceptor: javax.servlet.http.HttpSession access$100(br.com.caelum.vraptor.interceptor.FlashInterceptor)>/$stack1
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: br.com.caelum.vraptor.core.Converters access$200(br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest)>/$stack1
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: br.com.caelum.vraptor.http.ParameterNameProvider access$300(br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest)>/$stack1
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack1
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void canInjectADependencyProvidedByVraptor()>/$stack10
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void canInjectADependencyProvidedByVraptor()>/$stack16
<br.com.caelum.vraptor.view.DefaultPathResolver: java.lang.String pathFor(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack6
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void isCapableOfDealingWithSets()>/$stack3
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void isCapableOfDealingWithSetsOfObjects()>/$stack3
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/$stack29
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/$stack13
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/$stack17
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/$stack22
<br.com.caelum.vraptor.view.DefaultLogicResultTest$TheComponent: void method()>/$stack1
<br.com.caelum.vraptor.core.DefaultConverters: br.com.caelum.vraptor.Converter to(java.lang.Class)>/$stack3
<br.com.caelum.vraptor.core.DefaultConverters: br.com.caelum.vraptor.TwoWayConverter twoWayConverterFor(java.lang.Class)>/$stack3
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator$VRaptorTypeConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack5
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator$VRaptorTypeConverter: br.com.caelum.vraptor.Converter converterForTarget(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest$AnyController: void specifiedWhereToGo()>/$stack1
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void aliasParams(java.lang.reflect.Method,java.lang.Class[],com.thoughtworks.xstream.XStream)>/$stack6
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldConvertGETStringToGetMethodForRequestParameter()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldConvertGETStringToGetMethodForRequestParameter()>/$stack5
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowExceptionForNotKnowHttpMethodsForRequestParameter()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowExceptionForNotKnowHttpMethodsForRequestParameter()>/$stack5
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowIllegalArgumentExceptionIf_methodIsUsedInGETRequests()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowIllegalArgumentExceptionIf_methodIsUsedInGETRequests()>/$stack5
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldConvertGETStringToGetMethod()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldConvertGETStringToGetMethod()>/$stack5
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowExceptionForNotKnowHttpMethods()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowExceptionForNotKnowHttpMethods()>/$stack5
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldUseParameterNameBeforeTryingHttpRealMethod()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldUseParameterNameBeforeTryingHttpRealMethod()>/$stack5
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack8
<javax.servlet.ServletRequestEvent: javax.servlet.ServletRequest getServletRequest()>/$stack1
<org.hamcrest.core.IsSame: boolean matches(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.view.DefaultRefererResult: void forward()>/$stack6
<br.com.caelum.vraptor.view.DefaultRefererResult: void forward()>/$stack8
<br.com.caelum.vraptor.view.DefaultRefererResult: void forward()>/$stack21
<br.com.caelum.vraptor.view.DefaultRefererResult: void forward()>/$stack16
<br.com.caelum.vraptor.view.DefaultRefererResult: void executeMethod(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack9
<br.com.caelum.vraptor.view.DefaultRefererResult: void executeMethod(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack10
<br.com.caelum.vraptor.view.DefaultRefererResult: void redirect()>/$stack6
<br.com.caelum.vraptor.view.DefaultRefererResult: void redirect()>/$stack8
<br.com.caelum.vraptor.view.DefaultRefererResult: void redirect()>/$stack21
<br.com.caelum.vraptor.view.DefaultRefererResult: void redirect()>/$stack16
<br.com.caelum.vraptor.view.DefaultRefererResult: java.lang.String getReferer()>/$stack3
<br.com.caelum.vraptor.view.DefaultRefererResult: java.lang.String getReferer()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack16
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack20
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack3
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack7
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack24
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack12
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void gettingShouldReturnValueIfIndexFound()>/$stack2
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void gettingShouldReturnValueIfIndexFound()>/$stack4
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void settingShouldNullifyUpToIndex()>/$stack5
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void settingShouldNullifyUpToIndex()>/$stack9
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACat()>/$stack8
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatWhenMethodHasMoreThanOneArgument()>/$stack8
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack8
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatNamedDifferently()>/$stack8
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatWhenAliasConfiguredByAnnotations()>/$stack8
<br.com.caelum.vraptor.http.ParametersProviderTest: void returnsDependenciesIfContainerCanProvide()>/$stack4
<br.com.caelum.vraptor.http.ParametersProviderTest: void returnsDependenciesIfContainerCanProvide()>/$stack10
<br.com.caelum.vraptor.http.ParametersProviderTest: void returnsDependenciesIfRequestCanProvide()>/$stack4
<br.com.caelum.vraptor.http.ParametersProviderTest: void returnsDependenciesIfRequestCanProvide()>/$stack11
<br.com.caelum.vraptor.http.ParametersProviderTest: void ignoresPopulationIfIfRequestCanProvide()>/$stack7
<br.com.caelum.vraptor.http.ParametersProviderTest: void doesntReturnDependenciesIfItIsNotAnInterface()>/$stack4
<br.com.caelum.vraptor.http.ParametersProviderTest: void doesntReturnDependenciesIfItIsNotAnInterface()>/$stack10
<br.com.caelum.vraptor.http.ParametersProviderTest: void thereAreNoParameters()>/$stack12
<br.com.caelum.vraptor.http.ParametersProviderTest: void thereAreNoParameters()>/$stack1
<br.com.caelum.vraptor.http.ParametersProviderTest: void thereAreNoParameters()>/$stack7
<br.com.caelum.vraptor.http.ParametersProviderTest: void requestParameterIs(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.String,java.lang.String[])>/$stack18
<br.com.caelum.vraptor.http.ParametersProviderTest: void requestParameterIs(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.String,java.lang.String[])>/$stack7
<br.com.caelum.vraptor.http.ParametersProviderTest: void requestParameterIs(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.String,java.lang.String[])>/$stack12
<br.com.caelum.vraptor.http.ParametersProviderTest: void requestParameterIs(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.String,java.lang.String[])>/$stack24
<br.com.caelum.vraptor.http.iogi.VRaptorInstantiator: br.com.caelum.vraptor.core.Localization access$100(br.com.caelum.vraptor.http.iogi.VRaptorInstantiator)>/$stack1
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack3
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack4
<org.mockito.internal.verification.MockAwareVerificationMode: java.lang.Object getMock()>/$stack1
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void settingShouldNullifyUpToIndexAndIgnoreRemoval()>/$stack2
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void settingShouldNullifyUpToIndexAndIgnoreRemoval()>/$stack7
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack2
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack5
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack6
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack17
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack21
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack4
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack8
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack25
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack13
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convert(java.lang.Object,java.lang.Class)>/$stack4
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack9
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack11
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack14
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack2
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack11
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldLoadInitParameterForBasePackages()>/$stack2
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void defaultExpectations()>/$stack1
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void defaultExpectations()>/$stack5
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void defaultExpectations()>/$stack12
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void defaultExpectations()>/$stack16
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void defaultExpectations()>/$stack22
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void isCapableOfDealingWithEmptyParameterForInternalWrapperValue()>/$stack1
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void isCapableOfDealingWithEmptyParameterForInternalValueWhichNeedsAConverter()>/$stack10
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/$stack20
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: boolean requestingStaticFile(javax.servlet.http.HttpServletRequest)>/$stack3
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: boolean equals(java.lang.Object)>/$stack8
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldNotSupportNonGenericLists()>/$stack6
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldNotSupportNonGenericLists()>/$stack10
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack6
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack11
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack16
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack31
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack21
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack26
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack2
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldAddBeanValidatorErrorsIfPossible()>/$stack3
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldAddBeanValidatorErrorsIfPossible()>/$stack17
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldAddBeanValidatorErrorsIfPossibleForSpecificProperties()>/$stack3
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldAddBeanValidatorErrorsIfPossibleForSpecificProperties()>/$stack17
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldSetBundleOnI18nMessagesLazily()>/$stack4
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack3
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: br.com.caelum.vraptor.serialization.SerializerBuilder getSerializer()>/$stack4
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeAPersonWithDog()>/$stack8
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADog()>/$stack8
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgument()>/$stack8
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack8
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogNamedDifferently()>/$stack8
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogWhenAliasConfiguredByAnnotations()>/$stack8
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$SomeProxy: org.hibernate.proxy.LazyInitializer getHibernateLazyInitializer()>/$stack1
<br.com.caelum.vraptor.core.JstlLocalizationTest: void findLocaleFromRequest()>/$stack1
<br.com.caelum.vraptor.core.JstlLocalizationTest: void findLocaleFromSession()>/$stack1
<br.com.caelum.vraptor.core.JstlLocalizationTest: void findLocaleFromServletContext()>/$stack1
<br.com.caelum.vraptor.core.JstlLocalizationTest: void findLocaleFromRequestLocale()>/$stack1
<br.com.caelum.vraptor.core.JstlLocalizationTest: void testLocaleWithSessionNotRequest()>/$stack1
<br.com.caelum.vraptor.core.JstlLocalizationTest: void testLocaleWithSessionNotRequest()>/$stack6
<br.com.caelum.vraptor.core.JstlLocalizationTest: void testFallbackLocale()>/$stack1
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider: br.com.caelum.vraptor.core.StaticContentHandler access$300(br.com.caelum.vraptor.VRaptorTest$DoNothingProvider)>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldBeAbleToConvertWithPTBR()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldBeAbleToConvertWithENUS()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack17
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack21
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack4
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack9
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack25
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack13
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack20
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.String getRequestCharset()>/$stack2
<br.com.caelum.vraptor.test.HttpSessionMock: javax.servlet.ServletContext getServletContext()>/$stack1
<ognl.OgnlContext: ognl.ClassResolver getClassResolver()>/$stack1
<ognl.OgnlContext: ognl.TypeConverter getTypeConverter()>/$stack1
<ognl.OgnlContext: ognl.MemberAccess getMemberAccess()>/$stack1
<ognl.OgnlContext: void setRoot(java.lang.Object)>/$stack4
<ognl.OgnlContext: void setRoot(java.lang.Object)>/$stack5
<ognl.OgnlContext: java.lang.Object getRoot()>/$stack1
<ognl.OgnlContext: ognl.Evaluation getLastEvaluation()>/$stack1
<ognl.OgnlContext: java.lang.Object getCurrentObject()>/$stack1
