<com.google.common.collect.Collections2$FilteredCollection: com.google.common.collect.Collections2$FilteredCollection createCombined(com.google.common.base.Predicate)>/$stack3
<com.google.common.collect.Collections2$FilteredCollection: boolean isEmpty()>/$stack3
<com.google.common.collect.Collections2$FilteredCollection: java.util.Iterator iterator()>/$stack3
<com.google.common.collect.Collections2$FilteredCollection: boolean removeAll(java.util.Collection)>/$stack5
<com.google.common.collect.Collections2$FilteredCollection: boolean retainAll(java.util.Collection)>/$stack5
<org.springframework.expression.spel.ast.TypeReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typename#_37
<com.google.common.collect.ByFunctionOrdering: boolean equals(java.lang.Object)>/$stack4
<com.google.common.collect.ByFunctionOrdering: boolean equals(java.lang.Object)>/$stack7
<com.google.common.collect.ByFunctionOrdering: java.lang.String toString()>/$stack2
<com.google.common.collect.ByFunctionOrdering: java.lang.String toString()>/$stack5
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/beanName#_0
<com.thoughtworks.xstream.converters.collections.ArrayConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack10
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/next#_60
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack15
<ognl.ASTSelectFirst: java.lang.String toString()>/$stack4
<ognl.ASTGreaterEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTGreaterEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_50
<ognl.ASTGreaterEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_51
<br.com.caelum.iogi.conversion.BigIntegerConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.BigIntegerConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object)>/element#_0
<com.google.common.collect.SingletonImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>/$stack1
<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: boolean remove(java.lang.Object)>/$stack2
<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/expressionString#_0
<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.Expression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/l1#_0
<org.mockito.cglib.core.EmitUtils$16: void processCase(java.lang.Object,org.mockito.asm.Label)>/key#_0
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/$stack52
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/$stack48
<br.com.caelum.iogi.reflection.ClassConstructor: java.util.Collection notFulfilledBy(br.com.caelum.iogi.parameters.Parameters)>/parameterTarget#_61
<ognl.OgnlOps: boolean isEqual(java.lang.Object,java.lang.Object)>/object1#_0
<ognl.OgnlOps: boolean isEqual(java.lang.Object,java.lang.Object)>/object2#_0
<br.com.caelum.iogi.EmptyObjectsProvider: boolean canProvide(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.EmptyObjectsProvider: boolean selfCanProvide(br.com.caelum.iogi.reflection.Target)>/targetType#_41
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/$stack7
<ognl.OgnlOps: long longValue(java.lang.Object)>/value#_0
<ognl.OgnlOps: long longValue(java.lang.Object)>/$stack10
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Collection scan(br.com.caelum.vraptor.scan.ClasspathResolver)>/resolver#_0
<ognl.OgnlOps: double doubleValue(java.lang.Object)>/value#_0
<ognl.OgnlOps: double doubleValue(java.lang.Object)>/s#_240
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: boolean canConvert(java.lang.Class)>/type#_0
<ognl.OgnlOps: java.math.BigInteger bigIntValue(java.lang.Object)>/value#_0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void addBasePackagesStereotypes(java.util.Map,java.util.List,java.util.HashSet)>/stereotype#_134
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: boolean packagesContains(java.util.List,java.lang.String)>/basePackage#_142
<ognl.OgnlOps: java.math.BigDecimal bigDecValue(java.lang.Object)>/value#_0
<ognl.OgnlOps: java.lang.String stringValue(java.lang.Object)>/value#_0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void findComponentsFromBasePackages(java.util.Map,java.util.List,java.util.Set)>/clazz#_173
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionType(java.lang.Class)>/collectionClass#_0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyType(java.lang.Class)>/mapClass#_0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueType(java.lang.Class)>/mapClass#_0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionReturnType(java.lang.reflect.Method,int)>/method#_0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyReturnType(java.lang.reflect.Method,int)>/method#_0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueReturnType(java.lang.reflect.Method,int)>/method#_0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractType(org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class,int,int,int)>/$stack13
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractType(org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class,int,int,int)>/$stack11
<ognl.ASTDivide: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTDivide: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_49
<ognl.ASTDivide: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_50
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>/value#_0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: java.lang.Integer convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromClass(java.lang.Class,java.lang.Class,int)>/clazz#_0
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getResourceBundleBased()>/l1#_214
<org.springframework.core.convert.support.CollectionToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/value#_0
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getAdapter(java.lang.Class,java.util.Locale)>/l6#_263
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceElement#_61
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter findAdapter(java.lang.Class,java.util.Locale)>/l3#_282
<ognl.ASTMultiply: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTMultiply: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_1#_56
<ognl.ASTMultiply: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack12
<org.hamcrest.TypeSafeDiagnosingMatcher: boolean matches(java.lang.Object)>/item#_0
<org.hamcrest.TypeSafeDiagnosingMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/item#_0
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>/l4#_327
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack10
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/next#_60
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack15
<ognl.ASTSelectLast: java.lang.String toString()>/$stack4
<ognl.OgnlOps: int getNumericType(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: int getNumericType(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: int getNumericType(java.lang.Object,java.lang.Object,boolean)>/v1#_0
<ognl.OgnlOps: int getNumericType(java.lang.Object,java.lang.Object,boolean)>/v2#_0
<com.thoughtworks.xstream.io.path.PathTracker: void pushElement(java.lang.String)>/name#_0
<ognl.OgnlOps: java.lang.Object binaryOr(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: java.lang.Object binaryOr(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: java.lang.Object binaryOr(java.lang.Object,java.lang.Object)>/$stack5
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldThrowExceptionWhenThereIsNoDeserializerRegisteredForGivenContentType()>/$stack1
<ognl.OgnlOps: java.lang.Object binaryXor(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: java.lang.Object binaryXor(java.lang.Object,java.lang.Object)>/v2#_0
<com.thoughtworks.xstream.converters.collections.MapConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack4
<ognl.OgnlOps: java.lang.Object binaryXor(java.lang.Object,java.lang.Object)>/$stack5
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldNotCallDeserializerIfItDoesntAcceptGivenContentType()>/$stack2
<ognl.OgnlOps: java.lang.Object binaryAnd(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: java.lang.Object binaryAnd(java.lang.Object,java.lang.Object)>/v2#_0
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldNotCallDeserializerIfItDoesntAcceptGivenContentType()>/$stack5
<ognl.OgnlOps: java.lang.Object binaryAnd(java.lang.Object,java.lang.Object)>/$stack5
<com.thoughtworks.xstream.io.path.PathTracker: java.lang.String peekElement(int)>/$stack14
<com.thoughtworks.xstream.io.path.PathTracker: java.lang.String peekElement(int)>/$stack25
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentType()>/$stack5
<ognl.OgnlOps: boolean equal(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: boolean equal(java.lang.Object,java.lang.Object)>/v2#_0
<org.picocontainer.converters.ShortConverter: java.lang.Short convert(java.lang.String)>/paramValue#_0
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfVendorized()>/$stack5
<org.picocontainer.converters.ShortConverter: java.lang.Object convert(java.lang.String)>/x0#_0
<com.thoughtworks.xstream.converters.collections.MapConverter: java.lang.Object createCollection(java.lang.Class)>/$stack4_$$A_2
<ognl.OgnlOps: boolean less(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: boolean less(java.lang.Object,java.lang.Object)>/v2#_0
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfAtomizedAlike()>/$stack5
<ognl.OgnlOps: boolean greater(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: boolean greater(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: boolean in(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: boolean in(java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlOps: boolean in(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: boolean in(java.lang.Object,java.lang.Object)>/o#_819
<ognl.OgnlOps: java.lang.Object shiftLeft(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: java.lang.Object shiftLeft(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: java.lang.Object shiftRight(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: java.lang.Object shiftRight(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: java.lang.Object unsignedShiftRight(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: java.lang.Object unsignedShiftRight(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/$stack37
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/$stack30
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/$stack9
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/$stack11
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/$stack12
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/$stack12
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/$stack12
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlOps: java.lang.Object remainder(java.lang.Object,java.lang.Object)>/v1#_0
<ognl.OgnlOps: java.lang.Object remainder(java.lang.Object,java.lang.Object)>/v2#_0
<ognl.OgnlOps: java.lang.Object remainder(java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlOps: java.lang.Object negate(java.lang.Object)>/value#_0
<ognl.OgnlOps: java.lang.Object bitNegate(java.lang.Object)>/value#_0
<br.com.caelum.iogi.reflection.NewObject$JavaSetter$1: boolean accepts(java.lang.Object)>/$stack2
<com.thoughtworks.xstream.io.json.JettisonStaxWriter: void startNode(java.lang.String,java.lang.Class)>/$stack15
<com.thoughtworks.xstream.io.json.JettisonStaxWriter: void startNode(java.lang.String,java.lang.Class)>/$stack20
<java.util.logging.Level: java.lang.String computeLocalizedLevelName(java.util.Locale)>/l5#_274
<java.util.logging.Level: java.lang.String computeLocalizedLevelName(java.util.Locale)>/l6#_276
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeAttribute(java.lang.String)>/attributeName#_0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeNode(java.lang.String)>/elementName#_0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String encodeAttribute(java.lang.String)>/name#_0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String encodeName(java.lang.String)>/name#_0
<com.google.common.collect.Multimaps$Values: boolean contains(java.lang.Object)>/o#_0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeName(java.lang.String)>/name#_0
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldBeAbleToConvert()>/$stack8
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldBeAbleToConvert()>/$stack13
<ognl.SetPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<ognl.SetPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/name#_0
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack32
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<br.com.caelum.vraptor.ioc.spring.DefaultSpringLocator: org.springframework.web.context.ConfigurableWebApplicationContext getApplicationContext(javax.servlet.ServletContext)>/servletContext#_0
<org.joda.time.LocalDate: boolean equals(java.lang.Object)>/l1#_0
<ognl.ASTBitAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTBitAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_1#_55
<ognl.ASTBitAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack12
<com.google.common.collect.Sets: java.util.Set filter(java.util.Set,com.google.common.base.Predicate)>/$stack11
<com.google.common.collect.Sets: java.util.SortedSet filter(java.util.SortedSet,com.google.common.base.Predicate)>/$stack10
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeNoLinksIfThereIsNoTransition()>/$stack2
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeOneLinkIfThereIsATransition()>/$stack17
<com.google.common.base.Predicates$NotPredicate: boolean apply(java.lang.Object)>/t#_0
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack25
<com.google.common.base.Predicates$NotPredicate: boolean equals(java.lang.Object)>/$stack4
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$CollectionSerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/$stack4
<org.picocontainer.converters.BooleanConverter: java.lang.Boolean convert(java.lang.String)>/paramValue#_0
<org.picocontainer.converters.BooleanConverter: java.lang.Object convert(java.lang.String)>/x0#_0
<br.com.caelum.iogi.Iogi$DelegateToAllInstantatiors: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/target#_0
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack20
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack24
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.Resource[] findPathMatchingResources(java.lang.String)>/rootDirResource_$$A_1#_340
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.Resource[] findPathMatchingResources(java.lang.String)>/rootDirResource_$$A_2#_341
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack22
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack26
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldNotOutjectIfThereIsNoReturnType()>/$stack8
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldNotOutjectIfReturnIsVoid()>/$stack8
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withRootException()>/$stack7
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withNestedException()>/$stack8
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)>/rootDirResource#_0
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider$1: java.lang.Object instanceFor(java.lang.Class)>/$stack3
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: java.lang.Float convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: java.lang.Float convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<org.picocontainer.injectors.IterativeInjector: org.picocontainer.Parameter[] getMatchingParameterListForSetters(org.picocontainer.PicoContainer)>/$stack27
<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: boolean equals(java.lang.Object)>/$stack3
<com.google.gson.internal.bind.TypeAdapters$23: java.util.Calendar read(com.google.gson.stream.JsonReader)>/name#_559
<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>/$stack17
<org.picocontainer.injectors.IterativeInjector: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack8
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack30
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack38
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/member_$$A_2#_169
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/toInject#_171
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/member_$$A_1#_169
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack54
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack51
<org.picocontainer.injectors.IterativeInjector: java.lang.Object makeInstance(org.picocontainer.PicoContainer,java.lang.reflect.Constructor,org.picocontainer.ComponentMonitor)>/constructorToUse#_197
<org.picocontainer.injectors.IterativeInjector: void initializeInjectionMembersAndTypeLists()>/method#_264
<org.springframework.core.convert.support.IdToEntityConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack4
<org.springframework.core.convert.support.IdToEntityConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack6
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.reflect.Method getFinder(java.lang.Class)>/entityClass#_0
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.String getEntityName(java.lang.Class)>/entityClass#_0
<com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>/$stack7
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean equals(java.lang.Object)>/object#_0
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean add(java.lang.Object)>/value#_0
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean addAll(java.util.Collection)>/collection#_0
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean contains(java.lang.Object)>/o#_0
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean remove(java.lang.Object)>/o#_0
<br.com.caelum.iogi.conversion.EnumConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack3
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/enumClass#_15
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.EnumConverter: void ensureTargetIsAnEnum(br.com.caelum.iogi.reflection.Target)>/$stack3
<ognl.ASTLessEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTLessEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_50
<ognl.ASTLessEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_51
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromOrdinal(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/ordinalAsString#_0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromName(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/enumClass#_49
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromName(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/name#_0
<org.springframework.core.convert.support.GenericConversionService: void addConverter(org.springframework.core.convert.converter.GenericConverter)>/$stack9
<org.springframework.core.convert.support.GenericConversionService: void addConverter(org.springframework.core.convert.converter.GenericConverter)>/$stack10
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/properties#_63
<org.springframework.core.convert.support.GenericConversionService: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.GenericConversionService: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack50
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack39
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/result_$$A_1#_174
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/result_$$A_1_$$A_1#_184
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack16
<ognl.ASTSequence: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<com.google.common.collect.LinkedHashMultimap: boolean put(java.lang.Object,java.lang.Object)>/x0#_0
<com.google.common.collect.LinkedHashMultimap: java.util.Set removeAll(java.lang.Object)>/x0#_0
<com.google.common.collect.LinkedHashMultimap: java.util.Set get(java.lang.Object)>/x0#_0
<ognl.ASTSequence: java.lang.String toString()>/$stack8
<com.google.common.collect.LinkedHashMultimap: boolean remove(java.lang.Object,java.lang.Object)>/x1#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<com.google.common.collect.LinkedHashMultimap: boolean containsValue(java.lang.Object)>/x0#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack90
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack57
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack68
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.support.GenericConversionService$MatchableConverters getMatchableConverters(java.lang.Class,java.lang.Class)>/sourceType#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.support.GenericConversionService$MatchableConverters getMatchableConverters(java.lang.Class,java.lang.Class)>/targetType#_0
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack23
<org.springframework.core.convert.support.GenericConversionService: java.util.Map getSourceConverterMap(java.lang.Class)>/sourceType#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/currentClass_$$A_1#_335
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/currentClass_$$A_3#_356
<org.slf4j.impl.Log4jLoggerAdapter: void trace(java.lang.String,java.lang.Object)>/arg#_0
<com.google.gson.internal.bind.TypeAdapters$2: java.util.BitSet read(com.google.gson.stream.JsonReader)>/stringValue#_105
<org.springframework.core.convert.support.GenericConversionService: java.util.Map getTargetConvertersForSource(java.lang.Class)>/sourceType#_0
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/target#_48
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_47
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetClass#_58
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceClass#_57
<org.slf4j.impl.Log4jLoggerAdapter: void debug(java.lang.String,java.lang.Object)>/arg#_0
<org.slf4j.impl.Log4jLoggerAdapter: void debug(java.lang.String,java.lang.Object,java.lang.Object)>/arg1#_0
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean hasValueOfMethodOrConstructor(java.lang.Class,java.lang.Class)>/targetClass#_0
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean hasValueOfMethodOrConstructor(java.lang.Class,java.lang.Class)>/sourceClass#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/currentClass_$$A_1#_404
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/matchable_$$A_1#_408
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/sourceType#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/targetType#_0
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Method getValueOfMethodOn(java.lang.Class,java.lang.Class)>/targetClass#_0
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class)>/targetClass#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/$stack79
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/currentClass_$$A_3#_427
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/matchable_$$A_3#_431
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.support.GenericConversionService$MatchableConverters,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/matchable#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.support.GenericConversionService$MatchableConverters,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceFieldType#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.support.GenericConversionService$MatchableConverters,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetFieldType#_0
<org.slf4j.impl.Log4jLoggerAdapter: void error(java.lang.String,java.lang.Object)>/arg#_0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/constructorToUse_$$A_5#_71
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/beanName#_0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>/ctor#_0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>/beanName#_0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/factoryBean#_0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/factoryMethod#_0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/$stack34
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializerTest: void shouldSerializeI18nMessage()>/$stack9
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializerTest: void shouldSerializeI18nMessage()>/$stack11
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: java.lang.Boolean convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<org.springframework.beans.factory.support.AbstractBeanFactory$1: java.lang.Object getObject()>/$stack4
<org.springframework.core.convert.support.ConversionUtils: java.lang.Object invokeConverter(org.springframework.core.convert.converter.GenericConverter,java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.core.DefaultConverterLookup: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>/type#_67
<com.thoughtworks.xstream.converters.extended.SqlTimeConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<ognl.ASTGreater: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTGreater: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_50
<ognl.ASTGreater: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_51
<com.google.inject.internal.util.$Objects: boolean equal(java.lang.Object,java.lang.Object)>/b#_0
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack9
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack12
<com.thoughtworks.xstream.converters.basic.ShortConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<org.junit.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>/actualString#_655
<org.junit.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>/expectedString#_654
<org.junit.Assert: java.lang.String formatClassAndValue(java.lang.Object,java.lang.String)>/valueString#_0
<org.junit.Assert: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>/actual#_0
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean addAll(java.util.Collection)>/$stack6
<java.text.DateFormatSymbols: void initializeData(java.util.Locale)>/l7#114#_747
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void addHeaderParametersToAttribute(br.com.caelum.vraptor.resource.ResourceMethod)>/trueMethod#_100
<org.springframework.context.expression.MapAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.context.expression.MapAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack20
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack26
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack32
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void gettingShouldReturnNullIfIndexNotFound()>/$stack4
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void gettingShouldReturnValueIfIndexFound()>/$stack8
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean shouldSkipField(com.google.gson.FieldAttributes)>/include_$$A_1#_31
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean shouldSkipField(com.google.gson.FieldAttributes)>/include_$$A_3#_36
<org.hamcrest.core.IsNot: boolean matches(java.lang.Object)>/arg#_0
<org.hamcrest.core.IsNot: org.hamcrest.Matcher not(java.lang.Object)>/value#_0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/item#_0
<org.slf4j.helpers.Util: void report(java.lang.String)>/msg#_0
<org.mockito.internal.matchers.Equals: boolean matches(java.lang.Object)>/actual#_0
<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.mapper.SecurityMapper: java.lang.Class realClass(java.lang.String)>/elementName#_0
<org.springframework.core.convert.support.PropertiesToStringConverter: java.lang.String convert(java.util.Properties)>/source#_0
<org.springframework.core.convert.support.PropertiesToStringConverter: java.lang.Object convert(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/item#7#_125
<org.springframework.web.context.request.SessionScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/name#_0
<com.google.common.collect.RegularImmutableList: boolean equals(java.lang.Object)>/i#5#_158
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void outjectsTheRequestParameters()>/$stack7
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void addsTheErrorsOnTheResult()>/$stack7
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack13
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>/name#_0
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldNotRedirectIfHasNotErrors()>/$stack8
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object resolveReference(java.lang.String)>/key#_0
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/l6#_89
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack18
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String retrieveDisplayName(java.lang.String,boolean,int,java.util.Locale)>/l4#_137
<org.springframework.web.context.request.ServletRequestAttributes: void registerSessionDestructionCallback(java.lang.String,java.lang.Runnable)>/name#_0
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldSetBundleOnI18nMessagesLazily()>/$stack14
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/l3#_155
<javassist.compiler.MemberCodeGen: void atMethodCallCore(javassist.CtClass,java.lang.String,javassist.compiler.ast.ASTList,boolean,boolean,int,javassist.compiler.MemberResolver$Method)>/$stack31
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldOnlySetBundleOnI18nMessagesThatHasNotBeenSetBefore()>/message#_210
<br.com.caelum.vraptor.interceptor.Graph: java.util.List findCycle()>/node_$$A_1#_119
<br.com.caelum.vraptor.interceptor.Graph: java.util.List findCycle()>/$stack10
<br.com.caelum.vraptor.interceptor.Graph: java.util.List findCycle()>/node_$$A_2#_121
<javassist.compiler.MemberCodeGen: void atMethodCallCore2(javassist.CtClass,java.lang.String,boolean,boolean,int,int,javassist.compiler.MemberResolver$Method)>/minfo#_586
<br.com.caelum.iogi.conversion.FallbackConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.FallbackConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.FallbackConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.collections.CyclingListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/target#_0
<com.google.inject.internal.MoreTypes$WildcardTypeImpl: boolean equals(java.lang.Object)>/$stack3
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack10
<org.springframework.beans.factory.support.ConstructorResolver$1: java.lang.Object run()>/$stack6
<org.springframework.beans.factory.support.ConstructorResolver$1: java.lang.Object run()>/$stack9
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack10
<javassist.compiler.MemberCodeGen: java.lang.String getAccessiblePrivate(java.lang.String,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo,javassist.CtClass)>/minfo#_0
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack16
<javassist.compiler.MemberCodeGen: java.lang.String getAccessibleConstructor(java.lang.String,javassist.CtClass,javassist.bytecode.MethodInfo)>/minfo#_0
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack14
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotCrashWhenSessionIsInvalid()>/$stack11
<javassist.compiler.MemberCodeGen: void atFieldAssign(javassist.compiler.ast.Expr,int,javassist.compiler.ast.ASTree,javassist.compiler.ast.ASTree,boolean)>/finfo#_784
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<javassist.compiler.MemberCodeGen: void atFieldAssignCore(javassist.CtField,boolean,int,boolean)>/finfo#_839
<javassist.compiler.MemberCodeGen: int atFieldRead(javassist.CtField,boolean)>/finfo#_885
<org.springframework.expression.spel.standard.Tokenizer: void <init>(java.lang.String)>/inputdata#_0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType: int compareTo(java.lang.Object)>/$stack2
<com.google.gson.internal.LinkedTreeMap$KeySet: boolean contains(java.lang.Object)>/o#_0
<com.google.gson.internal.LinkedTreeMap$KeySet: boolean remove(java.lang.Object)>/key#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/original#_0
<com.google.common.collect.ForwardingCollection: boolean contains(java.lang.Object)>/object#_0
<com.google.common.collect.ForwardingCollection: boolean add(java.lang.Object)>/element#_0
<com.google.common.collect.ForwardingCollection: boolean remove(java.lang.Object)>/object#_0
<com.google.common.collect.ForwardingCollection: boolean addAll(java.util.Collection)>/collection#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void preConfigure(java.lang.Object,java.lang.String)>/obj#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void setRoot(java.lang.Object)>/obj#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: java.util.Collection normalizeList(java.lang.Object)>/list_$$A_2#_95
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: boolean hasDefaultConverter()>/$stack8
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void setAlias(java.lang.Object,java.lang.String)>/obj#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: java.util.Set findElementTypes(java.util.Collection)>/element#_125
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/attrAlias#_276
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack171
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/attrName_$$A_1#_278
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/field_$$A_1#_280
<org.springframework.core.convert.ConversionFailedException: void <init>(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.lang.Object,java.lang.Throwable)>/value#_0
<org.springframework.core.convert.ConversionFailedException: void <init>(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.lang.Object,java.lang.Throwable)>/$stack6
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/attrName_$$A_3#_312
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/converter#17#_317
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack131
<org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>/superClass#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/classAttribute#30#_366
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/v#_370
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/field_$$A_5#_385
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/field_$$A_7#_390
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/type_$$A_17#_404
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack87_$$A_3
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack56
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/type#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException: void <init>(java.lang.String,java.lang.String)>/field#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void handleUnknownField(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)>/originalNodeName#_0
<org.joda.time.LocalTime: boolean equals(java.lang.Object)>/l1#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>/fieldType#_506
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack11
<java.lang.ClassLoader$NativeLibrary: void finalize()>/$stack21
<ognl.ASTLess: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTLess: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_50
<ognl.ASTLess: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_52
<org.springframework.expression.spel.ast.OpMultiply: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandOne#_57
<org.springframework.expression.spel.ast.OpMultiply: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandTwo#_58
<org.springframework.util.AntPathStringMatcher: void <init>(java.lang.String,java.lang.String,java.util.Map)>/pattern#_0
<org.springframework.util.AntPathStringMatcher: java.util.regex.Pattern createPattern(java.lang.String)>/pattern#_0
<org.springframework.util.AntPathStringMatcher: boolean matchStrings()>/$stack5
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/include_$$A_1#_55
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/fieldName#_0
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/include_$$A_3#_60
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/fieldName#_0
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: java.lang.String serializedClass(java.lang.Class)>/type#_0
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.String,int,java.util.Map)>/l8#_221
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/listenerBeanName#4#_239
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/listener_$$A_3#_240
<org.springframework.expression.spel.ast.OperatorNot: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue#_43
<com.google.common.collect.ForwardingSet: boolean equals(java.lang.Object)>/object#_0
<org.hamcrest.core.AllOf: boolean matches(java.lang.Object,org.hamcrest.Description)>/o#_0
<org.hamcrest.core.AllOf: boolean matches(java.lang.Object,org.hamcrest.Description)>/matcher#_26
<ognl.ASTBitOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTBitOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_1#_55
<ognl.ASTBitOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack12
<org.springframework.beans.factory.support.DisposableBeanAdapter: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.util.List,java.security.AccessControlContext)>/beanName#_0
<org.springframework.beans.factory.support.DisposableBeanAdapter: void destroy()>/$stack20
<org.springframework.beans.factory.support.DisposableBeanAdapter: void destroy()>/$stack36
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.lang.reflect.Method determineDestroyMethod()>/$stack10
<org.springframework.beans.factory.support.DisposableBeanAdapter: void invokeCustomDestroyMethod(java.lang.reflect.Method)>/$stack24
<org.springframework.beans.factory.support.DisposableBeanAdapter: void invokeCustomDestroyMethod(java.lang.reflect.Method)>/$stack44
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldAddAllowHeader()>/$stack6
<org.springframework.beans.factory.support.DisposableBeanAdapter: void invokeCustomDestroyMethod(java.lang.reflect.Method)>/$stack35
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldSendErrorMethodNotAllowed()>/$stack6
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldNotSendMethodNotAllowedIfTheRequestMethodIsOptions()>/$stack10
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack3
<sun.security.util.AlgorithmDecomposer: java.util.Set decomposeImpl(java.lang.String)>/l6#_47
<net.vidageek.mirror.reflect.DefaultAllReflectionHandler: net.vidageek.mirror.list.dsl.MirrorList fields()>/$stack2
<net.vidageek.mirror.reflect.DefaultAllReflectionHandler: net.vidageek.mirror.list.dsl.MirrorList methods()>/$stack2
<net.vidageek.mirror.reflect.DefaultAllReflectionHandler: net.vidageek.mirror.list.dsl.MirrorList constructors()>/$stack2
<br.com.caelum.vraptor.VRaptorMatchers$2: boolean matchesSafely(java.lang.Object)>/$stack2
<javax.crypto.JceSecurity: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>/l6#_122
<sun.font.AttributeValues: sun.font.AttributeValues merge(java.util.Map,int)>/$stack14
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.util.List argumentValues(br.com.caelum.iogi.Instantiator)>/target#_93
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.lang.Object argumentValue(br.com.caelum.iogi.Instantiator,br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: boolean needsDependency(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.vraptor.http.route.DefaultTypeFinderTest: void shouldGetTypesCorrectly()>/method#_70
<br.com.caelum.iogi.conversion.LongWrapperConverter: java.lang.Long convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.LongWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.LongWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<br.com.caelum.vraptor.http.route.DefaultTypeFinderTest: void shouldGetTypesCorrectlyOnInheritance()>/method#_81
<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>/$stack11
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack5
<org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerOrEscalateApcAsRequired(java.lang.Class,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>/$stack14
<org.springframework.aop.config.AopConfigUtils: org.springframework.beans.factory.config.BeanDefinition registerOrEscalateApcAsRequired(java.lang.Class,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>/$stack16
<org.springframework.aop.config.AopConfigUtils: int findPriorityForClass(java.lang.String)>/className#_0
<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>/$stack13
<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>/$stack11
<com.google.common.collect.LinkedListMultimap$Node: java.lang.String toString()>/$stack2
<com.google.common.collect.LinkedListMultimap$Node: java.lang.String toString()>/$stack5
<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>/$stack9
<com.google.common.collect.AbstractListMultimap: java.util.List get(java.lang.Object)>/key#_0
<com.google.common.collect.AbstractListMultimap: boolean put(java.lang.Object,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack16
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack22
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.context.expression.BeanExpressionContextAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<javassist.bytecode.stackmap.MapMaker: javassist.bytecode.StackMapTable make(javassist.ClassPool,javassist.bytecode.MethodInfo)>/ca#_87
<javassist.bytecode.stackmap.MapMaker: javassist.bytecode.StackMap make2(javassist.ClassPool,javassist.bytecode.MethodInfo)>/ca#_108
<com.google.common.collect.HashMultiset: int add(java.lang.Object,int)>/x0#_0
<com.google.common.collect.HashMultiset: int count(java.lang.Object)>/x0#_0
<br.com.caelum.iogi.conversion.FloatWrapperConverter: java.lang.Float convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.FloatWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.FloatWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operand#_50
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operand_$$A_1#_63
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/n#4#_64
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: boolean hasLifecycle(java.lang.Class)>/type#_0
<ognl.ArrayPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ArrayPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/name#_0
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/context#_0
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack13
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.core.DefaultConverters: br.com.caelum.vraptor.Converter to(java.lang.Class)>/$stack4
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void guardNotInstantiated()>/$stack10
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void guardStartState(boolean,java.lang.String)>/$stack12
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void guardAlreadyDisposed()>/$stack10
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/value#_0
<com.thoughtworks.xstream.converters.extended.JavaClassConverter: boolean canConvert(java.lang.Class)>/clazz#_0
<com.thoughtworks.xstream.converters.extended.JavaClassConverter: java.lang.String toString(java.lang.Object)>/$stack2
<com.thoughtworks.xstream.converters.extended.JavaClassConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<org.picocontainer.paranamer.CachingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/methodOrCtor#_0
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack7
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack11
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack17
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack7
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack14
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack10
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack17
<org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: java.lang.Object getAttribute(java.lang.String,javax.faces.context.ExternalContext)>/name#_0
<com.google.common.collect.SingletonImmutableMap: java.util.Map$Entry entry()>/$stack3
<com.google.common.collect.SingletonImmutableMap: java.util.Map$Entry entry()>/$stack2
<com.google.common.collect.SingletonImmutableMap: java.lang.Object get(java.lang.Object)>/key#_0
<br.com.caelum.vraptor.serialization.xstream.ProxyConverter: boolean canConvert(java.lang.Class)>/clazz#_0
<com.google.common.collect.SingletonImmutableMap: boolean containsKey(java.lang.Object)>/key#_0
<br.com.caelum.vraptor.serialization.xstream.ProxyConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/value#_0
<com.google.common.collect.SingletonImmutableMap: com.google.common.collect.ImmutableSet entrySet()>/$stack2
<com.google.common.collect.SingletonImmutableMap: com.google.common.collect.ImmutableSet keySet()>/$stack2
<ognl.ASTOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_2#_61
<ognl.ASTOr: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ASTOr: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/v#_72
<ognl.ASTNotEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTNotEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_50
<ognl.ASTNotEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_51
<ognl.ASTOr: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack12
<ognl.ASTOr: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack17
<org.springframework.beans.propertyeditors.CurrencyEditor: void setAsText(java.lang.String)>/text#_0
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack15
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack31
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$1: boolean matchesSafely(java.lang.Object)>/$stack2
<com.google.common.collect.Ordering: java.lang.Object max(java.util.Iterator)>/maxSoFar_$$A_1#_596
<com.google.common.collect.Ordering: java.lang.Object max(java.util.Iterator)>/$stack5
<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>/a#_0
<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>/b#_0
<ognl.ASTAdd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTAdd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_1#_65
<ognl.ASTAdd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack12
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)>/entry#4#_77
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeIndexedArgumentValue(java.lang.Integer,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack16
<org.springframework.util.SystemPropertyUtils$SystemPropertyPlaceholderResolver: java.lang.String resolvePlaceholder(java.lang.String)>/$stack11
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/newValue#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack21
<com.google.common.collect.AbstractSetMultimap: java.util.Set get(java.lang.Object)>/key#_0
<com.google.common.collect.AbstractSetMultimap: java.util.Set removeAll(java.lang.Object)>/key#_0
<com.google.common.collect.AbstractSetMultimap: boolean put(java.lang.Object,java.lang.Object)>/key#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getGenericArgumentValue(java.lang.Class,java.lang.String,java.util.Set)>/valueHolder#_277
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getGenericArgumentValue(java.lang.Class,java.lang.String,java.util.Set)>/$stack15
<com.google.common.collect.AbstractSetMultimap: java.util.Collection get(java.lang.Object)>/x0#_0
<com.google.common.collect.AbstractSetMultimap: java.util.Collection removeAll(java.lang.Object)>/x0#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/vh1_$$A_1_$$A_1#_393
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/vh2_$$A_1_$$A_1#_394
<org.springframework.beans.factory.config.ConstructorArgumentValues: int hashCode()>/valueHolder#_412
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: boolean canHandle(java.lang.Class,java.lang.reflect.Method)>/$stack8
<org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)>/$stack105
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: java.lang.String toString()>/$stack6
<org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>/$stack4
<org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>/$stack8
<org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>/$stack7
<org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>/$stack12
<org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>/$stack11
<org.springframework.beans.PropertyValue: int hashCode()>/$stack3
<org.springframework.beans.PropertyValue: java.lang.String toString()>/$stack2
<org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)>/dotIdx#8#_910
<org.picocontainer.injectors.MethodInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.injectors.MethodInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentImplementation#_0
<org.springframework.core.convert.support.CollectionToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/firstElement#_57
<org.codehaus.jettison.mapped.MappedNamespaceConvention: void processAttributesAndNamespaces(org.codehaus.jettison.Node,org.codehaus.jettison.json.JSONObject)>/n#_0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: javax.xml.namespace.QName createQName(java.lang.String,org.codehaus.jettison.Node)>/rootName#_0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: java.lang.String createAttributeKey(java.lang.String,java.lang.String,java.lang.String)>/local#_0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: java.lang.String createKey(java.lang.String,java.lang.String,java.lang.String)>/local#_0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: boolean isElement(java.lang.String,java.lang.String,java.lang.String)>/local#_0
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack55
<org.picocontainer.injectors.ConstructorInjector: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack7
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters access$100(org.picocontainer.injectors.ConstructorInjector,org.picocontainer.PicoContainer,java.lang.Class)>/x2#_0
<java.text.AttributeEntry: java.lang.String toString()>/$stack7
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: boolean isSerializable(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: boolean isSerializable(java.lang.Class)>/$stack14
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack22
<org.springframework.context.expression.StandardBeanExpressionResolver: java.lang.Object evaluate(java.lang.String,org.springframework.beans.factory.config.BeanExpressionContext)>/value#_0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack25
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack46
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack49
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack28
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack33
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack36
<ognl.NumericExpression: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.NumericExpression: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/target#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/member#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/value#_0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object readField(java.io.ObjectStreamField,java.lang.Class,java.lang.Object)>/instance#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convert(java.lang.Object,java.lang.Class)>/$stack7
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type genericTypeToConvert(java.lang.Object,java.lang.reflect.Member)>/member#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type genericTypeToConvert(java.lang.Object,java.lang.reflect.Member)>/target#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractSetterMethodType(java.lang.Object,java.lang.reflect.Member)>/member#_0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/nodeName#_441
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack21
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object access$000(com.thoughtworks.xstream.converters.reflection.SerializableConverter,java.io.ObjectStreamField,java.lang.Class,java.lang.Object)>/x3#_0
<br.com.caelum.vraptor.http.route.JavaEvaluator: java.lang.Object get(java.lang.Object,java.lang.String)>/$stack9
<br.com.caelum.vraptor.http.route.JavaEvaluator: java.lang.Object get(java.lang.Object,java.lang.String)>/path#_0
<br.com.caelum.vraptor.http.route.JavaEvaluator: java.lang.Object navigate(java.lang.Object,java.lang.String)>/path_$$A_2#_63
<ognl.MethodFailedException: void <init>(java.lang.Object,java.lang.String,java.lang.Throwable)>/source#_0
<org.springframework.util.CollectionUtils: java.lang.Class findCommonElementType(java.util.Collection)>/collection#_0
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack405
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack416
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/lastType_$$A_1#_139
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack48
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack53
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack358
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack58
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack329
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack63
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack69
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack270
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack257
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack170
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack178
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack183
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack188
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack199
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack204
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack209
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack106
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack111
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack128
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack139
<org.springframework.beans.propertyeditors.PropertiesEditor: void setAsText(java.lang.String)>/text#_0
<org.springframework.beans.CachedIntrospectionResults: boolean isClassLoaderAccepted(java.lang.ClassLoader)>/registeredLoader#_175
<org.springframework.context.support.DefaultLifecycleProcessor$1: void run()>/$stack11
<br.com.caelum.iogi.conversion.ShortWrapperConverter: java.lang.Short convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.ShortWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.ShortWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>/name#_0
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/value#_0
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandOne#_49
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack42
<com.thoughtworks.xstream.core.util.Fields: java.lang.Object read(java.lang.reflect.Field,java.lang.Object)>/instance#_0
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandOne_$$A_1#_62
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandTwo#_63
<org.hamcrest.core.Is: boolean matches(java.lang.Object)>/arg#_0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getCachedObjectForFactoryBean(java.lang.String)>/beanName#_0
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldRedirectIncludingContext()>/$stack6
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/beanName#_0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/factory#_0
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack2
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileRedirect()>/$stack3
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack9
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/beanName#_0
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControl: java.lang.String fillUri(java.lang.String[],java.lang.Object[])>/key#_97
<br.com.caelum.vraptor.http.route.DefaultParametersControl: java.lang.String fillUri(java.lang.String[],java.lang.Object[])>/$stack25
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shoudThrowProxyInvocationExceptionIfAndExceptionOccursWhenUsingResultOf()>/$stack3
<org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>/l1#_0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getDefaultEditor(java.lang.Class)>/requiredType#_0
<java.text.AttributedString$AttributedStringIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)>/l2#_881
<java.text.AttributedString$AttributedStringIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)>/$stack15
<java.text.AttributedString$AttributedStringIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)>/l2#_922
<java.text.AttributedString$AttributedStringIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)>/$stack15
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>/propertyPath#_0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>/requiredType#_0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>/strippedPath#_332
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>/requiredTypeToUse_$$A_2#_342
<com.google.common.collect.LinkedListMultimap$ValueForKeyIterator: void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object)>/key#_0
<com.google.common.collect.LinkedListMultimap$ValueForKeyIterator: void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object,int)>/key#_0
<org.springframework.beans.PropertyEditorRegistrySupport: boolean hasCustomEditorForElement(java.lang.Class,java.lang.String)>/propertyPath#_0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.String,java.lang.Class)>/propertyName#_0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.String,java.lang.Class)>/requiredType#_0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.Class)>/requiredType#_0
<org.springframework.beans.PropertyEditorRegistrySupport: java.lang.Class guessPropertyTypeFromEditors(java.lang.String)>/propertyName#_0
<org.springframework.beans.PropertyEditorRegistrySupport: java.lang.Class guessPropertyTypeFromEditors(java.lang.String)>/strippedName#_448
<com.google.common.collect.LinkedListMultimap$ValueForKeyIterator: void add(java.lang.Object)>/$stack3
<com.google.common.collect.LinkedListMultimap$ValueForKeyIterator: void add(java.lang.Object)>/value#_0
<org.springframework.beans.PropertyEditorRegistrySupport: void copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry,java.lang.String)>/nestedProperty#_0
<org.springframework.beans.PropertyEditorRegistrySupport: void copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry,java.lang.String)>/actualPropertyName#_467
<org.mockito.cglib.core.EmitUtils$10: org.mockito.asm.Type[] getParameterTypes(org.mockito.cglib.core.MethodInfo)>/member#_0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack9
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack20
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack9
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack20
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack26
<java.util.LinkedHashMap$LinkedEntrySet: boolean contains(java.lang.Object)>/l3#_648
<br.com.caelum.vraptor.proxy.JavassistProxifier$1: boolean isHandled(java.lang.reflect.Method)>/method#_0
<com.google.inject.util.Providers$1: java.lang.String toString()>/$stack3
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setAsText(java.lang.String)>/text#_0
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setValue(java.lang.Object)>/$stack4
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/listener_$$A_1_$$A_1#_139
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/listenerBeanName#10#_147
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/listener_$$A_3#_148
<com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/item#_51
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void is(java.lang.Class,java.lang.reflect.Method)>/method#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void addParametersInfo(java.lang.reflect.Method)>/method#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void addParametersInfo(java.lang.reflect.Method)>/parameter#_193
<java.security.Provider$Service: boolean hasKeyAttributes()>/l9#_1766
<org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>/str#_0
<org.springframework.util.StringUtils: boolean hasText(java.lang.CharSequence)>/str#_0
<org.springframework.util.StringUtils: boolean hasText(java.lang.String)>/str#_0
<org.springframework.util.StringUtils: java.lang.String trimAllWhitespace(java.lang.String)>/str#_0
<org.mockito.cglib.proxy.DispatcherGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/method#_46
<org.springframework.util.StringUtils: java.lang.String capitalize(java.lang.String)>/str#_0
<ognl.ASTAssign: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTAssign: java.lang.String toString()>/$stack3
<ognl.ASTAssign: java.lang.String toString()>/$stack7
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void doesNothingIfResultWasAlreadyUsed()>/$stack8
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack13
<org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>/element#_607
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack13
<org.springframework.util.StringUtils: java.util.Locale parseLocaleString(java.lang.String)>/localeString#_0
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack31
<org.springframework.util.StringUtils: java.util.Locale parseLocaleString(java.lang.String)>/country#_656
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack85
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack94
<ognl.ASTInstanceof: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTInstanceof: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/value#_55
<ognl.ASTInstanceof: java.lang.String toString()>/$stack3
<ognl.ASTInstanceof: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTAssign: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack15
<ognl.ASTAssign: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack29
<ognl.ASTAssign: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack39
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Object)>/componentKey#_0
<org.springframework.util.StringUtils: java.lang.String[] delimitedListToStringArray(java.lang.String,java.lang.String)>/str#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding)>/componentType#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/componentType#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/parameterName#_389
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack25
<org.springframework.util.StringUtils: java.lang.String[] commaDelimitedListToStringArray(java.lang.String)>/str#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,java.lang.Class)>/componentType#_0
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class)>/componentType#_0
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>/$stack11
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/$stack13
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/componentAdapter#_423
<org.springframework.util.StringUtils: java.lang.String arrayToDelimitedString(java.lang.Object[],java.lang.String)>/arr#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addAdapterInternal(org.picocontainer.ComponentAdapter)>/componentKey#_436
<org.springframework.util.StringUtils: java.lang.String arrayToCommaDelimitedString(java.lang.Object[])>/arr#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object)>/implOrInstance#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.util.Properties)>/implOrInstance#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.util.Properties)>/clazz_$$A_2#_500
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,org.picocontainer.Parameter[])>/componentImplementationOrInstance#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,java.util.Properties,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,java.util.Properties,org.picocontainer.Parameter[])>/$stack18
<org.picocontainer.DefaultPicoContainer: void addOrderedComponentAdapter(org.picocontainer.ComponentAdapter)>/componentAdapter#_0
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/$stack25
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/componentAdapter_$$A_1#_584
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/typedComponentAdapter#_586
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/componentAdapter_$$A_3#_593
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object)>/componentKeyOrType#_0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.reflect.Type)>/componentKeyOrType#_0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack17
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/componentAdapter#_642
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack13
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/componentAdapter_$$A_1#_645
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack15
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/componentKeyOrType#_0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/component_$$A_3#_650
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/componentAdapter_$$A_3#_650
<org.picocontainer.DefaultPicoContainer: java.lang.Object decorateComponent(java.lang.Object,org.picocontainer.ComponentAdapter)>/componentAdapter#_0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Class)>/componentType#_0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Class)>/o#_671
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/componentAdapter#_0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack23
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack17
<java.util.AbstractList: int indexOf(java.lang.Object)>/$stack5
<java.util.AbstractList: boolean equals(java.lang.Object)>/l5#_522
<org.picocontainer.DefaultPicoContainer: void potentiallyStartAdapter(org.picocontainer.ComponentAdapter)>/adapter#_0
<org.picocontainer.DefaultPicoContainer: void instantiateComponentAsIsStartable(org.picocontainer.ComponentAdapter)>/adapter#_0
<javax.xml.namespace.QName: java.lang.String toString()>/$stack8
<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.Node,java.lang.String,org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.Convention)>/name#_0
<javax.xml.namespace.QName: boolean equals(java.lang.Object)>/$stack4
<org.codehaus.jettison.Node: void <init>(java.lang.String,org.codehaus.jettison.Convention)>/name#_0
<org.picocontainer.behaviors.Caching: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.behaviors.Caching: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentImplementation#_0
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter close(int,int,java.lang.String)>/$stack16
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>/$stack2
<org.springframework.expression.spel.ast.StringLiteral: java.lang.String toString()>/$stack3
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)>/value#_0
<com.google.gson.internal.LazilyParsedNumber: int intValue()>/$stack3
<com.google.gson.internal.LazilyParsedNumber: int intValue()>/$stack10
<com.google.gson.internal.LazilyParsedNumber: long longValue()>/$stack2
<com.google.gson.internal.LazilyParsedNumber: float floatValue()>/$stack1
<com.google.gson.internal.LazilyParsedNumber: double doubleValue()>/$stack1
<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String)>/pathAsString#_0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>/local#_0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/local#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/i#2#_76
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/target#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/genericType#_79
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/type#_81
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack22
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/bundle#_89
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/origin#_116
<br.com.caelum.iogi.conversion.BigDecimalConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.BigDecimalConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<br.com.caelum.iogi.reflection.Target$Primitives: java.lang.Object primitiveCast(java.lang.Object,java.lang.Class)>/type#_0
<br.com.caelum.iogi.reflection.Target$Primitives: java.lang.Object primitiveCast(java.lang.Object,java.lang.Class)>/object#_0
<net.vidageek.mirror.list.EqualMethodRemover: boolean accepts(java.lang.reflect.Method)>/element#_0
<org.picocontainer.converters.UrlConverter: java.lang.Object convert(java.lang.String)>/x0#_0
<net.vidageek.mirror.list.EqualMethodRemover: boolean sameMethodName(java.lang.reflect.Method)>/$stack3
<net.vidageek.mirror.list.EqualMethodRemover: boolean accepts(java.lang.Object)>/$stack2
<org.springframework.context.support.ContextTypeMatchClassLoader: java.lang.Class loadClass(java.lang.String)>/name#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/type#_68
<sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>/l7#_180
<br.com.caelum.vraptor.core.JstlLocalization: java.util.ResourceBundle extractUnsafeBundle(java.lang.Object)>/baseName#_78
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/type#_108
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack4
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack11
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/l9#_439
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/type#_179
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/l13_$$A_4#_449
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/key_$$A_1#_173
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/value_$$A_1#_174
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/key_$$A_3#_186
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/value_$$A_3#_187
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/target#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/name#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/newValue#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/type#_215
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.BaseLocale getBaseLocale()>/l1#_489
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack58
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack41
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/entry#10#_237
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.String keyToString(com.google.gson.JsonElement)>/$stack14
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.core.convert.TypeDescriptor getTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.core.convert.TypeDescriptor getTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findGetterForProperty(java.lang.String,java.lang.Class,boolean)>/propertyName#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findGetterForProperty(java.lang.String,java.lang.Class,boolean)>/$stack12
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findGetterForProperty(java.lang.String,java.lang.Class,boolean)>/$stack25
<org.picocontainer.monitors.AbstractComponentMonitor: java.lang.reflect.Constructor instantiating(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor)>/constructor#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findSetterForProperty(java.lang.String,java.lang.Class,boolean)>/propertyName#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findSetterForProperty(java.lang.String,java.lang.Class,boolean)>/$stack12
<org.picocontainer.monitors.AbstractComponentMonitor: java.lang.Object invoking(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,java.lang.Object[])>/member#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Field findField(java.lang.String,java.lang.Class,boolean)>/name#_0
<org.mockito.cglib.proxy.FixedValueGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/method#_32
<br.com.caelum.vraptor.view.DefaultRefererResult: void forward()>/$stack4
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/type#_415
<br.com.caelum.vraptor.view.DefaultRefererResult: void redirect()>/$stack4
<org.springframework.beans.AbstractPropertyAccessor: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/value#_0
<org.springframework.beans.AbstractPropertyAccessor: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/requiredType#_0
<com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>/$stack2
<com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>/$stack3
<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>/key#_0
<sun.security.provider.PolicyFile: void addPerms(java.security.Permissions,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>/l5#_1435
<org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)>/$stack29
<org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)>/$stack39
<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>/l9#_1497
<com.google.gson.internal.bind.TypeAdapters$20: java.net.InetAddress read(com.google.gson.stream.JsonReader)>/$stack4
<br.com.caelum.iogi.conversion.ByteWrapperConverter: java.lang.Byte convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.ByteWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.ByteWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: java.lang.Double convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: java.lang.Double convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACat()>/$stack9
<java.util.Vector: int indexOf(java.lang.Object,int)>/$stack6
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatWhenMethodHasMoreThanOneArgument()>/$stack9
<java.util.Vector: int lastIndexOf(java.lang.Object,int)>/$stack6
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack9
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatNamedDifferently()>/$stack9
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatWhenAliasConfiguredByAnnotations()>/$stack9
<com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: java.lang.Enum read(com.google.gson.stream.JsonReader)>/$stack5
<com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Enum)>/value#_0
<java.util.Vector: boolean removeIf(java.util.function.Predicate)>/l7#_1269
<java.util.Vector: void replaceAll(java.util.function.UnaryOperator)>/$stack14
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: void <init>(int,java.lang.reflect.AccessibleObject,java.lang.String)>/member#_0
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: void <init>(int,java.lang.reflect.AccessibleObject,java.lang.String)>/name#_0
<org.hamcrest.DiagnosingMatcher: boolean matches(java.lang.Object)>/item#_0
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack2
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack5
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack2
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack5
<com.google.inject.internal.MoreTypes: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/b#_0
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack8
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack11
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack14
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack17
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack20
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack23
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack26
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack29
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void shouldUseResourceTypeAndMethodNameToResolveJsp()>/$stack6
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void shouldUseTheFormatIfSupplied()>/$stack6
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void shouldIgnoreHtmlFormat()>/$stack6
<org.springframework.beans.PropertyAccessorUtils: int getFirstNestedPropertySeparatorIndex(java.lang.String)>/propertyPath#_0
<org.springframework.beans.PropertyAccessorUtils: int getLastNestedPropertySeparatorIndex(java.lang.String)>/propertyPath#_0
<org.springframework.beans.propertyeditors.CharacterEditor: void setAsText(java.lang.String)>/text#_0
<org.springframework.beans.PropertyAccessorUtils: boolean matchesProperty(java.lang.String,java.lang.String)>/propertyPath#_0
<br.com.caelum.iogi.reflection.Constructors$1: int compare(java.lang.Object,java.lang.Object)>/$stack4
<br.com.caelum.iogi.reflection.Constructors$1: int compare(java.lang.Object,java.lang.Object)>/$stack3
<org.springframework.aop.scope.ScopedProxyUtils: org.springframework.beans.factory.config.BeanDefinitionHolder createScopedProxy(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry,boolean)>/originalBeanName#_51
<org.springframework.aop.scope.ScopedProxyUtils: java.lang.String getTargetBeanName(java.lang.String)>/originalBeanName#_0
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/method#_87
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/method_$$A_4#_198
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy: java.lang.Object instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>/ctor#_0
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>/l10_$$A_10#_1310
<org.hamcrest.collection.IsCollectionWithSize: java.lang.Object featureValueOf(java.lang.Object)>/$stack2
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/data#_47
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack11
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.String toString(java.lang.Object)>/$stack3
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<ognl.ASTRemainder: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTRemainder: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_49
<ognl.ASTRemainder: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_50
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanWEBINFClasses()>/$stack21
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanBasePackages()>/$stack25
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldReturnEmptyCollectionIfWebinfClassesNotFound()>/$stack9
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldThrowScannerExceptionIfHasExceptionWhenProcessWebinfClasses()>/$stack9
<sun.util.locale.provider.LocaleResources: java.lang.String[][] getZoneStrings()>/l5#_295
<sun.util.locale.provider.LocaleResources: java.lang.String[][] getZoneStrings()>/l6#_303
<org.picocontainer.converters.LongConverter: java.lang.Long convert(java.lang.String)>/paramValue#_0
<org.picocontainer.converters.LongConverter: java.lang.Object convert(java.lang.String)>/x0#_0
<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: void visitEnd()>/metaAnnotation#17#_131
<org.springframework.beans.TypeMismatchException: void <init>(java.beans.PropertyChangeEvent,java.lang.Class,java.lang.Throwable)>/requiredType#_0
<org.springframework.beans.TypeMismatchException: void <init>(java.lang.Object,java.lang.Class,java.lang.Throwable)>/value#_0
<org.springframework.beans.TypeMismatchException: void <init>(java.lang.Object,java.lang.Class,java.lang.Throwable)>/requiredType#_0
<br.com.caelum.vraptor.deserialization.DefaultDeserializers: br.com.caelum.vraptor.deserialization.Deserializer deserializerFor(java.lang.String,br.com.caelum.vraptor.ioc.Container)>/container#_0
<br.com.caelum.vraptor.deserialization.DefaultDeserializers: br.com.caelum.vraptor.deserialization.Deserializer subpathDeserializerFor(java.lang.String,br.com.caelum.vraptor.ioc.Container)>/container#_0
<org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>/other#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/initializer#_396
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResources()>/$stack26
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithQueryString()>/$stack27
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithJSessionId()>/$stack27
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsFalseForNonStaticResources()>/$stack24
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String getAttribute(java.lang.String)>/name#_0
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String getAttribute(java.lang.String)>/$stack4
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String getAttributeName(int)>/$stack3
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/target#_0
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/stringValue#_13
<org.hamcrest.Matchers: org.hamcrest.Matcher hasItem(java.lang.Object)>/l0#_0
<org.hamcrest.Matchers: org.hamcrest.Matcher equalTo(java.lang.Object)>/l0#_0
<org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>/l0#_0
<org.hamcrest.Matchers: org.hamcrest.Matcher sameInstance(java.lang.Object)>/l0#_0
<java.security.Signature: java.security.Signature getInstance(java.lang.String)>/l4#_235
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object)>/source#_0
<com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>/$stack7
<com.thoughtworks.xstream.core.util.FastField: java.lang.String toString()>/$stack9
<org.springframework.core.annotation.AnnotationUtils: java.util.Map getAnnotationAttributes(java.lang.annotation.Annotation,boolean)>/annotation#_0
<com.thoughtworks.xstream.mapper.AttributeMapper: boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class)>/fieldName#_0
<com.thoughtworks.xstream.mapper.AttributeMapper: boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class)>/field#_110
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/attribute#_0
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>/$stack6
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>/$stack10
<java.util.Hashtable$Entry: java.lang.String toString()>/$stack3
<java.util.Hashtable$Entry: java.lang.String toString()>/$stack7
<java.util.Locale: java.lang.String toLanguageTag()>/l6_$$A_3#_1423
<org.springframework.aop.support.AopUtils: java.lang.Class getTargetClass(java.lang.Object)>/candidate#_0
<java.beans.Introspector: void processPropertyDescriptors()>/$stack90
<java.beans.Introspector: void processPropertyDescriptors()>/$stack91
<java.beans.Introspector: void processPropertyDescriptors()>/l3_$$A_2#_652
<java.beans.Introspector: void processPropertyDescriptors()>/$stack81
<java.beans.Introspector: void processPropertyDescriptors()>/l4_$$A_2#_682
<java.beans.Introspector: void processPropertyDescriptors()>/$stack79
<java.beans.Introspector: void processPropertyDescriptors()>/l6_$$A_2#_652
<java.beans.Introspector: void processPropertyDescriptors()>/l7_$$A_2#_682
<ognl.ASTAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_2#_61
<java.beans.Introspector: void processPropertyDescriptors()>/l3_$$A_8#_768
<java.beans.Introspector: void processPropertyDescriptors()>/$stack45
<java.beans.Introspector: void processPropertyDescriptors()>/l4_$$A_9#_771
<java.beans.Introspector: void processPropertyDescriptors()>/$stack43
<ognl.ASTAnd: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ASTAnd: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/v#_77
<ognl.ASTAnd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTAnd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack15
<java.beans.Introspector: java.beans.PropertyDescriptor mergePropertyDescriptor(java.beans.IndexedPropertyDescriptor,java.beans.PropertyDescriptor)>/l7_$$A_2#_911
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack16
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack31
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerFactory(java.lang.Class)>/type#_0
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack5
<br.com.caelum.vraptor.http.DefaultResourceTranslator: br.com.caelum.vraptor.resource.ResourceMethod translate(br.com.caelum.vraptor.core.RequestInfo)>/request#_48
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: boolean isProxy(java.lang.Class)>/clazz#_0
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: void initialize(java.lang.Object)>/obj#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: boolean equals(java.lang.Object)>/$stack4
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: boolean equals(java.lang.Object)>/$stack7
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: java.lang.Class getActualClass(java.lang.Object)>/obj#_0
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getMapper(java.lang.Class)>/definedIn_$$A_1#_1
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/definedIn#_0
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/itemFieldName#_0
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)>/itemFieldName#_0
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>/fieldName#_0
<br.com.caelum.vraptor.view.DefaultLogicResultTest$1: boolean matchesSafely(java.lang.Object)>/$stack2
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.Class realClass(java.lang.String)>/elementName#_0
<org.mockito.internal.util.reflection.FieldSetter: void set(java.lang.Object)>/value#_0
<java.text.AttributedString: java.lang.Object getAttributeCheckRange(java.text.AttributedCharacterIterator$Attribute,int,int,int)>/l5#_628
<java.text.AttributedString: java.lang.Object getAttributeCheckRange(java.text.AttributedCharacterIterator$Attribute,int,int,int)>/$stack35
<java.text.AttributedString: java.lang.Object getAttributeCheckRange(java.text.AttributedCharacterIterator$Attribute,int,int,int)>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack8
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack16
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/reflectionMethod#_57
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/resourceInstance#_0
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack11
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack15
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack19
<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject: void addText(java.lang.String)>/$stack7
<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject: void addText(java.lang.String)>/text#_0
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack6
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String constantPlaceholder(java.lang.Object)>/$stack26
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack15
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack11
<sun.util.resources.LocaleData$LocaleDataResourceBundleControl: java.util.List getCandidateLocales(java.lang.String,java.util.Locale)>/$stack29
<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)>/typeAdapter#_0
<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)>/$stack9
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>/type#_0
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/type#_0
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/type#3#_54
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/converter_$$A_2#_64
<com.google.common.base.Predicates: com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate)>/first#_0
<com.google.common.base.Predicates: com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate)>/$stack4
<com.google.common.base.Predicates: com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate)>/$stack6
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/requiredType#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/newValue#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class)>/newValue#_0
<org.mockito.cglib.core.EmitUtils$15: java.lang.Object transform(java.lang.Object)>/$stack2
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/requiredType#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/propertyName#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue#_130
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/sourceTypeDesc#7#_149
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack109
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/oldValue#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_2#_152
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack91
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_6#_168
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack79
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack76
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_9#_179
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_11#_183
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_13#_213
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/newValue#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/requiredType#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/convertedValue_$$A_6#_268
<org.springframework.beans.TypeConverterDelegate: java.beans.PropertyEditor findDefaultEditor(java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack14
<org.springframework.beans.TypeConverterDelegate: java.beans.PropertyEditor findDefaultEditor(java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/requiredType#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/convertedValue_$$A_2#_356
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/$stack35
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/requiredType#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/oldValue#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/newTextValue#26#_379
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/propertyName#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/$stack38
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/input#_0
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/original#_0
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/requiredType#_0
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/propertyName#_0
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/element#_515
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/elementType_$$A_2#_471
<org.springframework.expression.spel.ast.OpModulus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandOne#_38
<org.springframework.expression.spel.ast.OpModulus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandTwo#_39
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/original#_0
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/requiredType#_0
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/propertyName#_0
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/key#_599
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/keyType_$$A_2#_555
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/value#_600
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/valueType_$$A_2#_555
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildIndexedPropertyName(java.lang.String,int)>/propertyName#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildKeyedPropertyName(java.lang.String,java.lang.Object)>/propertyName#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildKeyedPropertyName(java.lang.String,java.lang.Object)>/key#_0
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarSerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/$stack4
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object callWriteReplace(java.lang.Object)>/object#_0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: boolean supportsReadObject(java.lang.Class,boolean)>/type#_0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: void callReadObject(java.lang.Class,java.lang.Object,java.io.ObjectInputStream)>/type#_0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: boolean supportsWriteObject(java.lang.Class,boolean)>/type#_0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream)>/type#_0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean)>/type#_0
<org.springframework.beans.propertyeditors.URIEditor: void setAsText(java.lang.String)>/text#_0
<org.springframework.beans.propertyeditors.UUIDEditor: void setAsText(java.lang.String)>/text#_0
<br.com.caelum.vraptor.restfulie.serialization.MethodValueSupportConverter: boolean canConvert(java.lang.Class)>/type#_0
<br.com.caelum.vraptor.restfulie.serialization.MethodValueSupportConverter: void writeTag(java.lang.Object,java.lang.reflect.Method,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/root#_0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod,java.util.List,java.util.ResourceBundle)>/$stack7
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: java.util.List instantiateParameters(br.com.caelum.iogi.parameters.Parameters,java.util.List,java.util.List)>/target#_72
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getObjectType()>/type#_223
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: java.lang.Object instantiateOrAddError(br.com.caelum.iogi.parameters.Parameters,java.util.List,br.com.caelum.iogi.reflection.Target)>/target#_0
<org.springframework.core.convert.TypeDescriptor: java.lang.String getName()>/type#_231
<org.springframework.core.convert.TypeDescriptor: boolean isCollection()>/$stack2
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor()>/$stack3
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor(java.lang.Object)>/element#_0
<org.springframework.expression.common.ExpressionUtils: java.lang.Object convert(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class)>/value#_0
<org.springframework.core.convert.TypeDescriptor: boolean isMap()>/$stack2
<org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>/name#_0
<org.springframework.expression.common.ExpressionUtils: java.lang.Object convertTypedValue(org.springframework.expression.EvaluationContext,org.springframework.expression.TypedValue,java.lang.Class)>/value#_62
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor()>/$stack3
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor(java.lang.Object)>/key#_0
<org.springframework.expression.common.ExpressionUtils: int toInt(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor()>/$stack3
<org.springframework.expression.common.ExpressionUtils: boolean toBoolean(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor(java.lang.Object)>/value#_0
<org.springframework.expression.common.ExpressionUtils: double toDouble(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.expression.common.ExpressionUtils: long toLong(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.util.ClassUtils: java.lang.Class resolvePrimitiveClassName(java.lang.String)>/name#_0
<org.springframework.expression.common.ExpressionUtils: char toChar(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.expression.common.ExpressionUtils: short toShort(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.expression.common.ExpressionUtils: float toFloat(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/$stack26
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/$stack14
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/$stack8
<org.springframework.expression.common.ExpressionUtils: byte toByte(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack2
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor forElementType(java.lang.Class)>/elementType#_0
<org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>/clazz#_0
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack7
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack18
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack19
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack11
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack12
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack15
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack16
<org.springframework.util.ClassUtils: java.lang.String getQualifiedName(java.lang.Class)>/clazz#_0
<org.springframework.core.convert.TypeDescriptor: java.lang.String toString()>/$stack17
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveCollectionElementType()>/$stack10
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveCollectionElementType()>/$stack7
<org.picocontainer.converters.BuiltInConverters: java.lang.Object convert(java.lang.String,java.lang.reflect.Type)>/paramValue#_0
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapKeyType()>/$stack9
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapValueType()>/$stack9
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor valueOf(java.lang.Class)>/type#_0
<org.springframework.util.ClassUtils: boolean isPrimitiveWrapper(java.lang.Class)>/clazz#_0
<org.springframework.util.ClassUtils: boolean isPrimitiveOrWrapper(java.lang.Class)>/clazz#_0
<org.springframework.util.ClassUtils: java.lang.Class resolvePrimitiveIfNecessary(java.lang.Class)>/clazz#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/result_$$A_1#_397
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/beanName#_0
<org.springframework.util.ClassUtils: boolean isAssignable(java.lang.Class,java.lang.Class)>/rhsType#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/result_$$A_1#_410
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/beanName#_0
<org.springframework.util.ClassUtils: boolean isAssignableValue(java.lang.Class,java.lang.Object)>/type#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object createBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/exposedObject#_515
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/$stack91
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/dependentBean#_540
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class predictBeanType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class predictBeanType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/beanClass_$$A_2#_577
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/factoryClass_$$A_2#_625
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/fb#_665
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack5
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/exposedObject_$$A_1#_698
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/beanName#_0
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance_$$A_2#_743
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getNonSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getNonSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance_$$A_2#_779
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/object#_0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/array#_0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/origin#_60
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object resolveBeforeInstantiation(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack15
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object resolveBeforeInstantiation(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/beanName#_0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: java.lang.Object copyOf(java.lang.Object,int,int)>/array#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInstantiation(java.lang.Class,java.lang.String)>/beanClass#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInstantiation(java.lang.Class,java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper createBeanInstance(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/beanName#_0
<ognl.DefaultMemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/context#_0
<ognl.DefaultMemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/target#_0
<ognl.DefaultMemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/propertyName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper createBeanInstance(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/beanClass#_871
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.reflect.Constructor[] determineConstructorsFromBeanPostProcessors(java.lang.Class,java.lang.String)>/beanClass#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.reflect.Constructor[] determineConstructorsFromBeanPostProcessors(java.lang.Class,java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper instantiateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/$stack57
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/$stack32
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByName(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/propertyName#_1102
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByName(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/beanName#_0
<com.google.common.collect.AbstractMultimap$EntryIterator: java.util.Map$Entry next()>/$stack5
<com.google.gson.internal.bind.TypeAdapters$31: java.lang.String toString()>/$stack7
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByType(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/propertyName#_1142
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByType(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/$stack24
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByType(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/beanName#_0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldBeAbleToConvert()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack32
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.String[] unsatisfiedNonSimpleProperties(org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/$stack19
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.beans.PropertyDescriptor[] filterPropertyDescriptorsForDependencyCheck(org.springframework.beans.BeanWrapper)>/pd#_1210
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: boolean isExcludedFromDependencyCheck(java.beans.PropertyDescriptor)>/pd#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: boolean isExcludedFromDependencyCheck(java.beans.PropertyDescriptor)>/$stack4
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void checkDependencies(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,java.beans.PropertyDescriptor[],org.springframework.beans.PropertyValues)>/$stack18
<br.com.caelum.iogi.collections.IndexedListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/target#_0
<org.springframework.util.PropertyPlaceholderHelper: java.lang.String replacePlaceholders(java.lang.String,org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver)>/value#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/pv#_1318
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/originalValue#_1324
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/propertyName#_1323
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/resolvedValue#_1325
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/convertedValue_$$A_3#_1331
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object convertForProperty(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapper,org.springframework.beans.TypeConverter)>/value#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object convertForProperty(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapper,org.springframework.beans.TypeConverter)>/propertyName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object convertForProperty(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapper,org.springframework.beans.TypeConverter)>/$stack10
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/javaMethod#_48
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/wrappedBean#_1411
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/beanName#_0
<com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper: java.lang.Class realClass(java.lang.String)>/elementName#_0
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void chooseParam(java.lang.Class[],java.lang.Object[],java.lang.Object)>/deserialized#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/wrappedBean_$$A_2#_1414
<com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/serialized#_0
<com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/$stack3
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void aliasParams(java.lang.reflect.Method,java.lang.Class[],com.thoughtworks.xstream.XStream)>/method#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeInitMethods(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeCustomInitMethod(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object postProcessObjectFromFactoryBean(java.lang.Object,java.lang.String)>/beanName#_0
<com.sun.beans.TypeResolver: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.reflect.Type)>/l3#10#_189
<org.springframework.core.convert.support.StringToLocaleConverter: java.util.Locale convert(java.lang.String)>/source#_0
<org.springframework.core.convert.support.StringToLocaleConverter: java.lang.Object convert(java.lang.Object)>/$stack2
<com.thoughtworks.xstream.core.util.PresortedSet: boolean add(java.lang.Object)>/e#_0
<org.springframework.context.support.AbstractApplicationContext$2: java.lang.String getSystemAttribute(java.lang.String)>/variableName#_0
<br.com.caelum.iogi.reflection.NewObject$Setter: void set(java.lang.Object)>/$stack6
<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.lang.String serializedClass(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/type#_0
<br.com.caelum.vraptor.ioc.spring.ComponentFactoryBean: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/factoryType#_0
<br.com.caelum.vraptor.ioc.spring.ComponentFactoryBean: java.lang.Object getObject()>/$stack1
<com.google.common.collect.SingletonImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>/$stack1
<com.google.common.collect.SingletonImmutableList: boolean equals(java.lang.Object)>/$stack6
<org.springframework.core.convert.support.ObjectToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.ObjectToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack6
<org.springframework.core.convert.support.ObjectToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<com.thoughtworks.xstream.converters.extended.SqlDateConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<com.thoughtworks.xstream.mapper.PackageAliasingMapper: java.lang.String serializedClass(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.mapper.PackageAliasingMapper: java.lang.Class realClass(java.lang.String)>/$stack23_$$A_2
<com.thoughtworks.xstream.mapper.PackageAliasingMapper: java.lang.Class realClass(java.lang.String)>/elementName_$$A_2#_87
<ognl.ASTBitNegate: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTBitNegate: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack5
<ognl.ASTBitNegate: java.lang.String toString()>/$stack4
<ognl.ASTBitNegate: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTBitNegate: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack20
<org.springframework.core.convert.support.StringToBooleanConverter: java.lang.Boolean convert(java.lang.String)>/source#_0
<org.springframework.core.convert.support.StringToBooleanConverter: java.lang.Object convert(java.lang.Object)>/$stack2
<org.springframework.core.io.ResourceEditor: void setAsText(java.lang.String)>/text#_0
<org.springframework.core.io.ResourceEditor: java.lang.String resolvePath(java.lang.String)>/path#_0
<org.mockito.internal.stubbing.StubberImpl: java.lang.Object when(java.lang.Object)>/mock#_0
<com.google.gson.internal.bind.TypeAdapters$4: java.lang.Boolean read(com.google.gson.stream.JsonReader)>/$stack4
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.Class)>/value#_0
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/context#_0
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/value#_0
<br.com.caelum.vraptor.ioc.pico.DefaultComponentFactoryRegistry: void register(java.lang.Class)>/componentFactoryClass#_0
<com.thoughtworks.xstream.converters.basic.StringConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<com.thoughtworks.xstream.converters.reflection.ReflectionConverter: boolean canConvert(java.lang.Class)>/type#_0
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack33
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack80
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack86
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack91
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack48
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack55
<br.com.caelum.vraptor.serialization.gson.GsonSerializer: void serialize()>/root#_139
<ognl.ASTStaticMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/root#_71
<ognl.ASTStaticMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/args#_70
<ognl.ASTStaticMethod: java.lang.String toString()>/$stack30
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack8
<org.mockito.cglib.core.ReflectUtils$3: org.mockito.asm.Type[] getExceptionTypes()>/$stack1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack5
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack13
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack14
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack28
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack14
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack28
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack19
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack32
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack73
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack78
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack85
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack89
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack21
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack114
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack14
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack28
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack14
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: java.lang.String chooseMimeType(java.lang.String)>/mimeType#_79
<com.thoughtworks.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/methodOrCtor#_0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: java.lang.String[] getOrderedMimeTypes(java.lang.String)>/string#_122
<com.google.gson.internal.bind.TypeAdapters$12: java.lang.Character read(com.google.gson.stream.JsonReader)>/str#_331
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType convertToMimeType(java.lang.String)>/string#_0
<com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Character)>/value#_0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: double extractQualifier(java.lang.String)>/string#_0
<com.google.gson.internal.bind.TypeAdapters$18: java.net.URL read(com.google.gson.stream.JsonReader)>/nextString#_447
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setAsText(java.lang.String)>/text#_0
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/$stack14
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/$stack34
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/resource#_123
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/pattern#10#_138
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/element#_116
<org.springframework.core.io.support.ResourceArrayPropertyEditor: java.lang.String resolvePath(java.lang.String)>/path#_0
<com.google.common.base.Predicates$AndPredicate: boolean apply(java.lang.Object)>/t#_0
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getCryptoPermission(java.lang.String)>/l10#_179
<com.google.common.collect.AbstractMultiset: boolean contains(java.lang.Object)>/element#_0
<com.google.common.collect.AbstractMultiset: boolean remove(java.lang.Object)>/element#_0
<javax.crypto.Cipher: boolean passCryptoPermCheck(javax.crypto.CipherSpi,java.security.Key,java.security.spec.AlgorithmParameterSpec)>/$stack35
<org.springframework.core.convert.support.StringToCharacterConverter: java.lang.Character convert(java.lang.String)>/source#_0
<org.springframework.core.convert.support.StringToCharacterConverter: java.lang.Object convert(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack10
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack19
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack10
<ognl.ASTUnsignedShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTUnsignedShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_49
<ognl.ASTUnsignedShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_50
<ognl.ASTUnsignedShiftRight: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTUnsignedShiftRight: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack12
<ognl.ASTUnsignedShiftRight: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack15
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>/l1#_104
<ognl.ASTUnsignedShiftRight: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack18
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>/$stack2
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>/$stack3
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/classes_$$A_2#_56
<org.springframework.context.annotation.AnnotationBeanNameGenerator: java.lang.String buildDefaultBeanName(org.springframework.beans.factory.config.BeanDefinition)>/$stack3
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object createProxy(java.lang.Class[],org.picocontainer.PicoContainer,java.lang.ClassLoader)>/interfaces#_0
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack17
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultRouter$3: boolean apply(java.lang.Object)>/$stack2
<ognl.ASTNotIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTNotIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_51
<ognl.ASTNotIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_52
<ognl.ASTNotIn: java.lang.String toString()>/$stack3
<ognl.ASTNotIn: java.lang.String toString()>/$stack7
<ognl.ASTNotIn: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack7
<ognl.ASTNotIn: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack12
<ognl.IteratorPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<ognl.IteratorPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/name#_0
<ognl.IteratorPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/name#_0
<com.google.common.collect.Maps$KeySet: boolean contains(java.lang.Object)>/o#_0
<br.com.caelum.iogi.parameters.Parameters: java.util.List forTarget(br.com.caelum.iogi.reflection.Target)>/$stack3
<org.picocontainer.injectors.IterativeInjector$4: java.lang.Object run(java.lang.Object)>/$stack18
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameter namedAfter(br.com.caelum.iogi.reflection.Target)>/$stack4
<br.com.caelum.iogi.parameters.Parameters: void assertFoundAtMostOneTarget(br.com.caelum.iogi.reflection.Target,java.util.Collection)>/target#_0
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameters focusedOn(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.parameters.Parameters: boolean hasRelatedTo(br.com.caelum.iogi.reflection.Target)>/target#_0
<org.springframework.context.event.GenericApplicationListenerAdapter: boolean supportsEventType(java.lang.Class)>/$stack7
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack1
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack10
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack4
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack15
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack5
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/stack#_90
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack13
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack19
<org.picocontainer.parameters.BasicComponentParameter: java.lang.Object convert(org.picocontainer.Converters,java.lang.Object,java.lang.reflect.Type)>/$stack5
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/$stack40
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/$stack37
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/$stack16
<org.picocontainer.parameters.BasicComponentParameter: void removeExcludedAdapterIfApplicable(java.lang.Object,java.util.List)>/excludeKey#_0
<org.picocontainer.parameters.BasicComponentParameter: boolean areCompatible(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.ComponentAdapter)>/foundImpl#_265
<org.picocontainer.parameters.BasicComponentParameter: java.lang.Object access$100(org.picocontainer.Converters,java.lang.Object,java.lang.reflect.Type)>/x1#_0
<br.com.caelum.vraptor.http.route.DefaultRouter$1: boolean apply(java.lang.Object)>/$stack2
<org.springframework.util.Assert: void hasLength(java.lang.String,java.lang.String)>/text#_0
<org.springframework.util.Assert: void hasText(java.lang.String,java.lang.String)>/text#_0
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: java.lang.Object getValue()>/$stack2
<java.util.AbstractCollection: boolean contains(java.lang.Object)>/$stack5
<java.util.AbstractCollection: boolean remove(java.lang.Object)>/$stack5
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>/l3#_317
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>/l4#_343
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldConvertGETStringToGetMethodForRequestParameter()>/$stack9
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldConvertGETStringToGetMethod()>/$stack9
<ognl.MapPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/name#_0
<org.springframework.core.convert.support.GenericConversionService$MatchableConverters: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/conditional#_558
<org.springframework.core.convert.support.GenericConversionService$MatchableConverters: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.GenericConversionService$MatchableConverters: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldUseParameterNameBeforeTryingHttpRealMethod()>/$stack9
<com.google.gson.internal.bind.TimeTypeAdapter: java.sql.Time read(com.google.gson.stream.JsonReader)>/$stack6
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/$stack6
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/$stack10
<com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Time)>/value#_0
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack11
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/page#_69
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack21
<com.google.gson.internal.LinkedTreeMap$Node: java.lang.String toString()>/$stack2
<com.google.gson.internal.LinkedTreeMap$Node: java.lang.String toString()>/$stack5
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack11
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/page#_83
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack21
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack19
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/logic#_103
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack26
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/controller#_104
<org.springframework.core.MethodParameter: java.lang.String getParameterName()>/$stack13
<org.springframework.core.MethodParameter: java.lang.String getParameterName()>/$stack5
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack19
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/logic#_122
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack26
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/controller#_123
<org.springframework.core.MethodParameter: org.springframework.core.MethodParameter forMethodOrConstructor(java.lang.Object,int)>/methodOrConstructor#_0
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack10
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack15
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack14
<br.com.caelum.vraptor.http.route.PriorityRoutesList: boolean add(br.com.caelum.vraptor.http.route.Route)>/e#_0
<org.springframework.core.convert.support.ArrayToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.core.convert.support.ArrayToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack11
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack11
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldPutParametersOnFlashScopeOnRedirect()>/$stack4
<br.com.caelum.vraptor.http.route.PriorityRoutesList: boolean add(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotPutParametersOnFlashScopeOnRedirectIfThereAreNoParameters()>/$stack4
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack18
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsNotAnnotatedWithHttpMethods()>/$stack4
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsAnnotatedWithHttpGetMethod()>/$stack4
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void cannotRedirectWhenLogicMethodIsAnnotatedWithAnyHttpMethodButGet()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack36
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack38
<junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>/actual#_0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPage()>/$stack11
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void shouldSend404IfNothingIsRendered()>/$stack10
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPageWithAlias()>/$stack12
<junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>/actual#_0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack15
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack15
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack15
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack15
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack19
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: java.util.Set findCandidateComponents(java.lang.String)>/resource#_207
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup: void start()>/member#_333
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup: void stop()>/member#_350
<com.thoughtworks.xstream.converters.collections.SingletonMapConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/key#_50
<com.thoughtworks.xstream.converters.collections.SingletonMapConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value#_54
<com.thoughtworks.xstream.converters.reflection.FieldKey: boolean equals(java.lang.Object)>/$stack7
<org.mockito.cglib.proxy.Enhancer$2: java.lang.Object transform(java.lang.Object)>/method#_461
<com.thoughtworks.xstream.converters.reflection.FieldKey: java.lang.String toString()>/$stack12
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: java.lang.Double convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<ognl.ASTShiftLeft: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTShiftLeft: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_49
<ognl.ASTShiftLeft: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_50
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack9
<com.google.common.collect.AbstractMapBasedMultiset: int count(java.lang.Object)>/element#_0
<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: void <init>(java.util.Map$Entry[])>/key#_579
<com.google.common.collect.AbstractMapBasedMultiset: int add(java.lang.Object,int)>/element#_0
<com.google.common.collect.AbstractMapBasedMultiset: int remove(java.lang.Object,int)>/element#_0
<com.thoughtworks.xstream.converters.extended.LookAndFeelConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/b#_0
<org.picocontainer.containers.ImmutablePicoContainer: java.lang.Object getComponent(java.lang.Object)>/componentKeyOrType#_0
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Object)>/componentKey#_0
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding)>/componentType#_0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: java.lang.Short convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: java.lang.Short convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<com.thoughtworks.xstream.core.util.Primitives: boolean isBoxed(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.core.util.Primitives: java.lang.Class primitiveType(java.lang.String)>/name#_0
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/name#_167
<org.mockito.cglib.proxy.NoOpGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/method#_30
<org.springframework.context.expression.MapAccessor$MapAccessException: java.lang.String getMessage()>/$stack2
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>/candidateMethod_$$A_1#_67
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>/bridgeMethod#_0
<org.springframework.core.convert.support.ArrayToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.ArrayToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchCandidates(java.util.List,java.lang.reflect.Method)>/bridgeMethod#_0
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchCandidates(java.util.List,java.lang.reflect.Method)>/candidateMethod#_102
<org.springframework.core.convert.support.ArrayToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.core.convert.support.ArrayToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack5
<org.springframework.core.BridgeMethodResolver: boolean isBridgedCandidateFor(java.lang.reflect.Method,java.lang.reflect.Method)>/bridgeMethod#_0
<org.hamcrest.core.IsCollectionContaining: boolean matchesSafely(java.lang.Iterable,org.hamcrest.Description)>/item#_24
<org.springframework.core.BridgeMethodResolver: boolean isBridgeMethodFor(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/candidateMethod#_0
<org.springframework.core.BridgeMethodResolver: boolean isBridgeMethodFor(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/bridgeMethod#_0
<org.hamcrest.core.IsCollectionContaining: org.hamcrest.Matcher hasItem(java.lang.Object)>/element#_0
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findGenericDeclaration(java.lang.reflect.Method)>/bridgeMethod#_0
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findGenericDeclaration(java.lang.reflect.Method)>/ifc#_157
<org.hamcrest.core.IsCollectionContaining: boolean matchesSafely(java.lang.Object,org.hamcrest.Description)>/$stack3
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/$stack28
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/rawType#3#_196
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchForMatch(java.lang.Class,java.lang.reflect.Method)>/type#_0
<br.com.caelum.vraptor.ioc.spring.UniqueBeanNameGenerator: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)>/$stack9
<javassist.CtBehavior: void instrument(javassist.expr.ExprEditor)>/$stack4
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: boolean equals(java.lang.Object)>/$stack4
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: boolean equals(java.lang.Object)>/$stack7
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: java.lang.String toString()>/$stack2
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: java.lang.String toString()>/$stack5
<net.vidageek.mirror.list.BackedMirrorList: net.vidageek.mirror.list.dsl.MirrorList matching(net.vidageek.mirror.list.dsl.Matcher)>/element#_30
<org.mockito.asm.Frame: void push(org.mockito.asm.ClassWriter,java.lang.String)>/desc#_0
<org.mockito.asm.Frame: int init(org.mockito.asm.ClassWriter,int)>/type#_756
<br.com.caelum.iogi.conversion.StringConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.StringConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$2: java.lang.Object getObject()>/$stack3
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$2: java.lang.Object getObject()>/$stack1
<org.mockito.asm.Frame: void execute(int,int,org.mockito.asm.ClassWriter,org.mockito.asm.Item)>/$stack25
<org.mockito.asm.Frame: void execute(int,int,org.mockito.asm.ClassWriter,org.mockito.asm.Item)>/s#_1210
<org.mockito.asm.Frame: void execute(int,int,org.mockito.asm.ClassWriter,org.mockito.asm.Item)>/s_$$A_1#_1219
<com.google.inject.internal.util.$Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>/first#_134
<com.google.inject.internal.util.$Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>/$stack24
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack18
<br.com.caelum.vraptor.ioc.pico.PicoComponentAdapter: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack10
<org.picocontainer.PicoBuilder: org.picocontainer.MutablePicoContainer build()>/componentFactory_$$A_4#_182
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack16
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack11
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getNodeName()>/$stack3
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldNotSupportNonGenericLists()>/$stack23
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack23
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack38
<org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.beans.PropertyEditor getPropertyEditor(java.lang.Class)>/requiredType#_0
<org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.beans.PropertyEditor access$1(org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder,java.lang.Class)>/l1#_0
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/root#_84
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/args#_81
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack16
<ognl.ASTMethod: java.lang.String toString()>/$stack22
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentImplementation#_0
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/baseRequest#_78
<java.util.ArrayList: int indexOf(java.lang.Object)>/$stack5
<java.util.ArrayList: int lastIndexOf(java.lang.Object)>/$stack5
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack72
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack77
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack84
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack88
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack113
<java.util.ArrayList: boolean remove(java.lang.Object)>/$stack5
<org.springframework.beans.BeanUtils: java.beans.PropertyEditor findEditorByConvention(java.lang.Class)>/targetType#_0
<org.springframework.beans.BeanMetadataAttributeAccessor: java.lang.Object getAttribute(java.lang.String)>/name#_0
<org.springframework.beans.BeanMetadataAttributeAccessor: java.lang.Object removeAttribute(java.lang.String)>/name#_0
<org.springframework.beans.BeanUtils: boolean isSimpleProperty(java.lang.Class)>/clazz#_0
<org.springframework.beans.BeanUtils: boolean isSimpleValueType(java.lang.Class)>/clazz#_0
<java.util.ArrayList: boolean batchRemove(java.util.Collection,boolean)>/$stack27
<net.vidageek.mirror.bean.Bean: java.util.List getter(java.lang.String)>/fieldName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory$2: java.lang.Object getObject()>/$stack7
<java.util.ArrayList: boolean removeIf(java.util.function.Predicate)>/l7#_1404
<java.util.ArrayList: void replaceAll(java.util.function.UnaryOperator)>/$stack14
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/key#_0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: boolean equals(java.lang.Object)>/$stack7
<com.thoughtworks.xstream.converters.basic.DoubleConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<org.springframework.beans.factory.support.ConstructorResolver$2: java.lang.reflect.Method[] run()>/$stack5
<com.google.common.collect.LinkedListMultimap: boolean containsKey(java.lang.Object)>/key#_0
<com.google.common.collect.LinkedListMultimap: boolean containsValue(java.lang.Object)>/$stack7
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectFactory: java.lang.Object getObject()>/$stack1
<com.google.common.collect.LinkedListMultimap: boolean remove(java.lang.Object,java.lang.Object)>/$stack6
<com.google.common.collect.LinkedListMultimap: boolean remove(java.lang.Object,java.lang.Object)>/value#_0
<com.google.common.collect.LinkedListMultimap: java.util.Collection get(java.lang.Object)>/x0#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/defaultType#_205
<org.hamcrest.collection.IsIterableContainingInOrder: boolean matchesSafely(java.lang.Iterable,org.hamcrest.Description)>/item#_24
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node access$800(com.google.common.collect.LinkedListMultimap,java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/x1#_0
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node access$800(com.google.common.collect.LinkedListMultimap,java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/x2#_0
<org.hamcrest.collection.IsIterableContainingInOrder: boolean matchesSafely(java.lang.Object,org.hamcrest.Description)>/$stack3
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>/beanName#_150
<org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>/l1#_0
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class,boolean,boolean)>/type#_0
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class,boolean,boolean)>/beanName#_193
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack66
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack72
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack78
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack83
<ognl.ASTNot: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTNot: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack5
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack88
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack93
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack100
<br.com.caelum.iogi.collections.ParametersByIndex$1: java.lang.Integer apply(br.com.caelum.iogi.parameters.Parameter)>/$stack4
<br.com.caelum.iogi.collections.ParametersByIndex$1: java.lang.Object apply(java.lang.Object)>/$stack2
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack128
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>/l4#_739
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>/l6#_742
<com.google.common.collect.LinkedHashMultiset: int remove(java.lang.Object,int)>/x0#_0
<com.google.common.collect.LinkedHashMultiset: int add(java.lang.Object,int)>/x0#_0
<com.google.common.collect.LinkedHashMultiset: int count(java.lang.Object)>/x0#_0
<com.google.common.collect.LinkedHashMultiset: boolean remove(java.lang.Object)>/x0#_0
<com.google.common.collect.LinkedHashMultiset: boolean add(java.lang.Object)>/x0#_0
<com.google.common.collect.LinkedHashMultiset: boolean contains(java.lang.Object)>/x0#_0
<ognl.EnumerationPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<ognl.EnumerationPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/name#_0
<ognl.EnumerationPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/name#_0
<org.picocontainer.behaviors.Stored: boolean hasLifecycle(org.picocontainer.ComponentAdapter)>/$stack3
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry$AttributeSetterComponentMonitor: void instantiated(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Object,java.lang.Object[],long)>/type#_77
<org.codehaus.jettison.json.JSONArray: java.lang.String join(java.lang.String)>/$stack9
<org.hamcrest.MatcherAssert: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>/actual#_0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.Object newInstance(java.lang.Class)>/type#_0
<org.codehaus.jettison.json.JSONArray: java.io.Writer write(java.io.Writer)>/v#_846
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.Object instantiateUsingSerialization(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)>/field#_130
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)>/object#_0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/fieldName#_0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>/fieldName#_0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/fieldName#_0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/definedIn#_0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/fieldName#_0
<org.hamcrest.core.IsSame: void describeTo(org.hamcrest.Description)>/$stack3
<ognl.ASTSubtract: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTSubtract: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_49
<ognl.ASTSubtract: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_50
<com.google.common.collect.AbstractMultimap: boolean containsValue(java.lang.Object)>/value#_0
<com.google.common.collect.AbstractMultimap: boolean put(java.lang.Object,java.lang.Object)>/key#_0
<com.google.common.collect.AbstractMultimap: boolean put(java.lang.Object,java.lang.Object)>/value#_0
<com.google.common.collect.AbstractMultimap: java.util.Collection getOrCreateCollection(java.lang.Object)>/key#_0
<com.google.common.collect.AbstractMultimap: boolean remove(java.lang.Object,java.lang.Object)>/value#_0
<com.google.common.collect.AbstractMultimap: java.util.Collection removeAll(java.lang.Object)>/key#_0
<com.google.common.collect.AbstractMultimap: java.util.Collection get(java.lang.Object)>/key#_0
<com.google.common.collect.AbstractMultimap: java.util.Collection wrapCollection(java.lang.Object,java.util.Collection)>/key#_0
<com.google.common.collect.AbstractMultimap: java.util.List access$300(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection)>/x1#_0
<com.thoughtworks.xstream.XStreamException: void <init>(java.lang.String,java.lang.Throwable)>/message#_0
<javassist.bytecode.ClassFile: void testExistingMethod(javassist.bytecode.MethodInfo)>/newMinfo#_0
<javassist.bytecode.ClassFile: void testExistingMethod(javassist.bytecode.MethodInfo)>/$stack11
<javassist.bytecode.ClassFile: boolean isDuplicated(javassist.bytecode.MethodInfo,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo,java.util.ListIterator)>/minfo#_0
<javassist.bytecode.ClassFile: boolean isDuplicated(javassist.bytecode.MethodInfo,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo,java.util.ListIterator)>/newMethod#_0
<org.springframework.core.AttributeAccessorSupport: java.lang.Object getAttribute(java.lang.String)>/name#_0
<org.springframework.core.AttributeAccessorSupport: java.lang.Object removeAttribute(java.lang.String)>/name#_0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void shouldBeAbleToConvert()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<org.springframework.core.AttributeAccessorSupport: void copyAttributesFrom(org.springframework.core.AttributeAccessor)>/attributeName#_78
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldNotAcceptFormURLEncoded()>/$stack14
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldAcceptMultipart()>/$stack14
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack25
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack34
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack38
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack25
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack34
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack38
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/object#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/object#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack33
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack42
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack46
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack50
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack54
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack58
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack64
<com.thoughtworks.xstream.io.xml.XppReader: java.lang.String getAttribute(java.lang.String)>/name#_0
<com.thoughtworks.xstream.io.xml.XppReader: java.lang.String getAttribute(java.lang.String)>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack20
<org.springframework.core.convert.support.ObjectToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceClass#_45
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack27
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack29
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack38
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack42
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack46
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack52
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack29
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack38
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack42
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack46
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack52
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack19
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack30
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack24
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack34
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack19
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack6
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack15
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack6
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack15
<org.springframework.beans.factory.BeanDefinitionStoreException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>/beanName#_0
<com.thoughtworks.xstream.converters.extended.SqlTimestampConverter: java.lang.String toString(java.lang.Object)>/timestamp#_38
<com.thoughtworks.xstream.io.xml.AbstractXmlReader: java.lang.String unescapeXmlName(java.lang.String)>/name#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException: void <init>(java.lang.String)>/msg#_0
<org.mockito.internal.util.MockUtil: org.mockito.internal.MockHandlerInterface getMockHandler(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: boolean isMockitoMock(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: org.mockito.internal.util.MockName getMockName(java.lang.Object)>/mock#_0
<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/$stack25
<sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>/l5_$$A_1#_666
<org.springframework.context.support.ReadOnlySystemAttributesMap: boolean containsKey(java.lang.Object)>/key#_0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.String get(java.lang.Object)>/attributeName#_41
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>/l1#_0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack4
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack24
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/route#_137
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack23
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/route#_154
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void usesTheFirstRegisteredRuleMatchingThePattern()>/$stack45
<com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat: java.lang.String format(java.util.Date)>/date#_0
<com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat: java.util.Date parse(java.lang.String)>/date#_0
<com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: boolean add(java.lang.Object)>/object#_0
<org.springframework.util.SystemPropertyUtils: java.lang.String resolvePlaceholders(java.lang.String,boolean)>/text#_0
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/beanName#_0
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/constructorToUse_$$A_1#_121
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/paramNames_$$A_5#_194
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/constructorToUse_$$A_7#_263
<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String)>/beanName#_0
<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>/beanName#_0
<java.lang.invoke.LambdaForm: java.lang.String basicTypeSignature(java.lang.invoke.MethodType)>/l4#_1335
<org.springframework.beans.factory.support.ConstructorResolver: void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)>/factoryClass_$$A_2#_304
<org.springframework.beans.factory.support.ConstructorResolver: void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)>/factoryClass_$$A_3#_305
<org.springframework.beans.factory.support.ConstructorResolver: void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)>/candidate#_308
<com.thoughtworks.xstream.converters.ConversionException: java.lang.String get(java.lang.String)>/errorKey#_0
<com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>/k#_97
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/beanName#_0
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryMethodToUse_$$A_1#_382
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryClass_$$A_2#_370
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryClazz#15#_402
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/candidate_$$A_1#_417
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/candidate_$$A_3#_447
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/paramNames_$$A_3#_460
<org.mockito.cglib.core.MethodWrapper: java.util.Set createSet(java.util.Collection)>/$stack7
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>/l3#_1715
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryBean_$$A_2#_370
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryMethodToUse_$$A_7#_552
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack31
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack51
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: boolean matchesSafely(java.lang.Object)>/$stack2
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/methodOrCtor#_0
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/originalValue#_675
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/$stack112
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/beanName#_0
<org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>/$stack4
<org.springframework.beans.BeanMetadataAttribute: java.lang.String toString()>/$stack2
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/methodOrCtor#_0
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/beanName#_0
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/argValue_$$A_5#_772
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object resolveAutowiredArgument(org.springframework.core.MethodParameter,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/beanName#_0
<org.springframework.expression.spel.support.ReflectiveConstructorResolver: org.springframework.expression.ConstructorExecutor resolve(org.springframework.expression.EvaluationContext,java.lang.String,java.util.List)>/typename#_0
<org.picocontainer.injectors.ParameterNameBinding: java.lang.String getName()>/$stack3
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack13
<ognl.ASTProject: java.lang.String toString()>/$stack4
<org.springframework.expression.spel.ExpressionState: java.lang.Class findType(java.lang.String)>/type#_0
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(java.lang.Object,org.springframework.core.convert.TypeDescriptor)>/value#_0
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(org.springframework.expression.TypedValue,org.springframework.core.convert.TypeDescriptor)>/$stack6
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(org.springframework.expression.TypedValue,org.springframework.core.convert.TypeDescriptor)>/$stack5
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/left#_0
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/right#_0
<com.google.gson.internal.bind.TypeAdapters$21: java.util.UUID read(com.google.gson.stream.JsonReader)>/$stack4
<org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>/target#_0
<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>/$stack5
<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>/$stack12
<br.com.caelum.vraptor.serialization.iso8601.gson.CalendarISO8601Serializer: com.google.gson.JsonElement serialize(java.util.Calendar,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/calendar#_0
<br.com.caelum.vraptor.serialization.iso8601.gson.CalendarISO8601Serializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/$stack4
<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>/$stack3
<org.springframework.expression.TypedValue: java.lang.String toString()>/$stack4
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/value#_107
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/childValue#8#_150
<br.com.caelum.vraptor.validator.MessageConverter: boolean canConvert(java.lang.Class)>/type#_0
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.ConstructorExecutor findExecutorForConstructor(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/typename#_0
<org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatMethodForMessage(java.lang.String,java.util.List)>/$stack10
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createArray(org.springframework.expression.spel.ExpressionState)>/type#_228
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createArray(org.springframework.expression.spel.ExpressionState)>/o#7#_250
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createArray(org.springframework.expression.spel.ExpressionState)>/o#7_$$A_2#_258
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createArray(org.springframework.expression.spel.ExpressionState)>/arraySize#15#_276
<org.springframework.expression.spel.ast.ConstructorReference: void populateReferenceTypeArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList,java.lang.Class)>/arrayEntry#_325
<org.springframework.expression.spel.ast.ConstructorReference: void populateByteArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_335
<org.springframework.expression.spel.ast.ConstructorReference: void populateFloatArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_344
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>/right#_0
<org.springframework.expression.spel.ast.ConstructorReference: void populateDoubleArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_353
<org.springframework.expression.spel.ast.ConstructorReference: void populateShortArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_362
<org.springframework.expression.spel.ast.ConstructorReference: void populateLongArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_371
<org.springframework.expression.spel.ast.ConstructorReference: void populateCharArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_380
<org.springframework.expression.spel.ast.ConstructorReference: void populateBooleanArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_389
<org.springframework.expression.spel.ast.ConstructorReference: void populateIntArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList)>/typedValue#_398
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>/$stack5
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>/$stack6
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>/$stack9
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>/$stack10
<com.thoughtworks.xstream.mapper.AttributeAliasingMapper: java.lang.String attributeForAlias(java.lang.String)>/alias#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack5
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack18
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack22
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack16
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack20
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack24
<org.picocontainer.converters.FileConverter: java.lang.Object convert(java.lang.String)>/x0#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack13
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack16
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack20
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack24
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack5
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack25
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldThrowException()>/$stack1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack28
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack31
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack34
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack37
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack11
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack24
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack30
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack33
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack36
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack23
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack36
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack39
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack42
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack45
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack48
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack51
<sun.misc.JarIndex: void merge(sun.misc.JarIndex,java.lang.String)>/l8_$$A_2#_348
<org.springframework.core.convert.support.ArrayToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.ArrayToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.ArrayToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.core.convert.support.ArrayToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack5
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldBeAbleToConvert()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack34
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression parseExpression(java.lang.String,org.springframework.expression.ParserContext)>/expressionString#_0
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression parseTemplate(java.lang.String,org.springframework.expression.ParserContext)>/expressionString#_0
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression[] parseExpressions(java.lang.String,org.springframework.expression.ParserContext)>/expressionString#_0
<org.springframework.expression.common.TemplateAwareExpressionParser: int skipToCorrectEndSuffix(java.lang.String,java.lang.String,java.lang.String,int)>/expressionString#_0
<br.com.caelum.vraptor.test.HttpServletRequestMock: java.lang.Object getAttribute(java.lang.String)>/name#_0
<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.String)>/name#_0
<com.google.common.collect.ArrayListMultimap: boolean put(java.lang.Object,java.lang.Object)>/x1#_0
<com.google.common.base.Predicates$OrPredicate: boolean apply(java.lang.Object)>/t#_0
<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.lang.String serializedClass(java.lang.Class)>/type#_0
<com.google.common.collect.ArrayListMultimap: java.util.List get(java.lang.Object)>/x0#_0
<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.lang.Class realClass(java.lang.String)>/elementName#_0
<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.lang.Class realClass(java.lang.String)>/elementName_$$A_2#_77
<com.thoughtworks.xstream.converters.basic.LongConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<com.google.common.collect.ArrayListMultimap: boolean containsValue(java.lang.Object)>/x0#_0
<org.springframework.beans.BeanWrapperImpl$2: java.lang.Object run()>/$stack3
<com.google.common.collect.Collections2$TransformedCollection: java.util.Iterator iterator()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder access$300(br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder,java.lang.String)>/x1#_0
<br.com.caelum.vraptor.http.ParanamerNameProvider: java.lang.String[] parameterNamesFor(java.lang.reflect.AccessibleObject)>/method#_0
<com.thoughtworks.xstream.converters.basic.ByteConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/registryPostProcessorBeans#22#_621
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/registryPostProcessor#33#_642
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/postProcessorName#36#_650
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/ppName#4_$$A_1#_687
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/ppName#4_$$A_3#_709
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/ppName#4_$$A_5#_721
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack23
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack12
<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.String serializedClass(java.lang.Class)>/type_$$A_1#_31
<org.springframework.context.support.AbstractApplicationContext: void initApplicationEventMulticaster()>/$stack20
<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.Class realClass(java.lang.String)>/elementName_$$A_1#_56
<org.springframework.context.support.AbstractApplicationContext: void initApplicationEventMulticaster()>/$stack10
<org.springframework.context.support.AbstractApplicationContext: void initLifecycleProcessor()>/$stack21
<org.springframework.context.support.AbstractApplicationContext: void initLifecycleProcessor()>/$stack11
<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.String boxedTypeName(java.lang.Class)>/type#_0
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String)>/name#_0
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Class)>/name#_0
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>/requiredType#_0
<org.springframework.context.support.AbstractApplicationContext: boolean containsBean(java.lang.String)>/name#_0
<org.springframework.context.support.AbstractApplicationContext: boolean isTypeMatch(java.lang.String,java.lang.Class)>/name#_0
<org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>/other#_0
<org.springframework.context.support.AbstractApplicationContext: java.util.Map getBeansOfType(java.lang.Class)>/type#_0
<org.springframework.context.support.AbstractApplicationContext: boolean containsLocalBean(java.lang.String)>/name#_0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADog()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADog()>/dog#_148
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack30
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack34
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack39
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack43
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack30
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack34
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack39
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack43
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack10
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack31
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack35
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack40
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack44
<br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder: com.google.gson.Gson create()>/adapter#_68
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithoutRoot()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithoutRoot()>/dog#_226
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithDeserializerAdapter()>/$stack17
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithDeserializerAdapter()>/dog#_246
<com.google.common.collect.LinkedListMultimap$AsMapEntries$1$1: java.util.Collection getValue()>/$stack3
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgument()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgument()>/dog#_261
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndHasNotRoot()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndHasNotRoot()>/dog#_276
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/dog#_291
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>/requiredType#_0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogNamedDifferently()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogNamedDifferently()>/dog#_306
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: boolean canConvert(java.lang.Class)>/type#_0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAttribute()>/$stack10
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAttribute()>/$stack17
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAttribute()>/dog#_323
<net.vidageek.mirror.get.DefaultGetterHandler: java.lang.Object field(java.lang.String)>/$stack5
<br.com.caelum.vraptor.http.ParametersProviderTest: void requestParameterIs(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.String,java.lang.String[])>/$stack19
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/beanName#_230
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/sharedInstance#_234
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/nameToLookup#_259
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/requiredType#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/sharedInstance_$$A_1#_288
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/dependsOnBean#22#_310
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsISO8601Attribute()>/$stack11
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/scopedInstance#26#_325
<net.vidageek.mirror.get.DefaultGetterHandler: java.lang.Object field(java.lang.reflect.Field)>/$stack8
<net.vidageek.mirror.get.DefaultGetterHandler: java.lang.Object field(java.lang.reflect.Field)>/field#_0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsISO8601Attribute()>/dog#_345
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean containsBean(java.lang.String)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean containsBean(java.lang.String)>/beanName#_355
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean containsBean(java.lang.String)>/$stack11
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsObjectAttribute()>/$stack10
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsObjectAttribute()>/dog#_366
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/resource#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/beanName#_365
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/$stack26
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldHonorRequestHeaderAcceptCharset()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldHonorRequestHeaderAcceptCharset()>/dog#_386
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void whenNoCharsetHeaderIsFoundThanAssumeItIsUTF8()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void whenNoCharsetHeaderIsFoundThanAssumeItIsUTF8()>/dog#_402
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldByPassDeserializationWhenHasNoContent()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeOneParam()>/$stack18
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/name#_0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeOneParam()>/dog#_429
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/beanName#_451
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/$stack66
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/$stack53
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/targetType#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/targetClass#_492
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/tbd#40#_498
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeTwoParams()>/$stack19
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeTwoParams()>/dog#_445
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeWithoutGenericType()>/$stack19
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/beanName#_522
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/$stack52
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/$stack43
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/targetClass#_554
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/tbd#20#_560
<org.springframework.beans.factory.support.ConstructorResolver$3: java.lang.Object run()>/$stack6
<org.springframework.beans.factory.support.ConstructorResolver$3: java.lang.Object run()>/$stack10
<org.springframework.beans.factory.support.ConstructorResolver$3: java.lang.Object run()>/$stack9
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)>/beanName#_580
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)>/retrievedAlias#_591
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)>/fullBeanName_$$A_2#_586
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean containsLocalBean(java.lang.String)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean containsLocalBean(java.lang.String)>/beanName#_616
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/l7_$$A_1#_2460
<br.com.caelum.vraptor.ioc.ComponentFactoryIntrospector: java.lang.Class targetTypeForComponentFactory(java.lang.Class)>/type#_0
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/l7_$$A_4#_2473
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_37
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_38
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.config.BeanDefinition getMergedBeanDefinition(java.lang.String)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.config.BeanDefinition getMergedBeanDefinition(java.lang.String)>/beanName#_857
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isFactoryBean(java.lang.String)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isFactoryBean(java.lang.String)>/beanName#_868
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isCurrentlyInCreation(java.lang.String)>/beanName#_0
<br.com.caelum.iogi.reflection.NewObject: void setProperty(br.com.caelum.iogi.reflection.NewObject$Setter)>/setter#_0
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/l8_$$A_3#_1356
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String transformedBeanName(java.lang.String)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String transformedBeanName(java.lang.String)>/$stack2
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String originalBeanName(java.lang.String)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String originalBeanName(java.lang.String)>/beanName#_1002
<org.springframework.beans.factory.support.AbstractBeanFactory: void registerCustomEditors(org.springframework.beans.PropertyEditorRegistry)>/$stack35
<org.springframework.beans.factory.support.AbstractBeanFactory: void registerCustomEditors(org.springframework.beans.PropertyEditorRegistry)>/$stack46
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedLocalBeanDefinition(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/parentBeanName#_1136
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class doResolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/dcl#3#_1267
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object evaluateBeanDefinitionString(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/value#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/beanClass#_1319
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/factoryBean#_1343
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isBeanEligibleForMetadataCaching(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean removeSingletonIfCreatedForTypeCheckOnly(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/name#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/factory#_1423
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isBeanNameInUse(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: void registerDisposableBeanIfNecessary(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/bean#_0
<org.hamcrest.core.IsInstanceOf: boolean matches(java.lang.Object,org.hamcrest.Description)>/item#_0
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: void register(java.lang.Class,java.lang.Class)>/$stack9
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: java.lang.Object instanceFor(java.lang.Class)>/type#_0
<org.springframework.beans.factory.config.BeanExpressionContext: boolean containsObject(java.lang.String)>/key#_0
<org.springframework.beans.factory.config.BeanExpressionContext: java.lang.Object getObject(java.lang.String)>/key#_0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,java.lang.String)>/value#_0
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,java.lang.String)>/name#_0
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,java.lang.String)>/$stack6
<br.com.caelum.iogi.parameters.Parameter: java.lang.String getFirstNameComponent()>/first#_45
<br.com.caelum.iogi.parameters.Parameter: boolean isDecorated()>/$stack2
<br.com.caelum.iogi.parameters.Parameter: boolean equals(java.lang.Object)>/$stack10
<ognl.ASTKeyValue: java.lang.String toString()>/$stack2
<ognl.ASTKeyValue: java.lang.String toString()>/$stack5
<org.springframework.beans.propertyeditors.ClassArrayEditor: void setAsText(java.lang.String)>/text#_0
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/current_$$A_1#_81
<java.util.ServiceLoader$LazyIterator: java.lang.Object nextService()>/l1#_366
<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] basicTypes(java.util.List)>/$stack6
<com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack7
<com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/timeZone_$$A_2#_60
<org.mockito.cglib.proxy.InvocationHandlerGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/method#_39
<org.mockito.cglib.proxy.InvocationHandlerGenerator: void generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/method#_60
<org.picocontainer.adapters.AbstractAdapter: void checkTypeCompatibility()>/$stack5
<org.picocontainer.adapters.AbstractAdapter: void checkTypeCompatibility()>/$stack11
<org.picocontainer.adapters.AbstractAdapter: void checkTypeCompatibility()>/componentType#_91
<org.picocontainer.adapters.AbstractAdapter: void checkTypeCompatibility()>/$stack8
<org.picocontainer.adapters.AbstractAdapter: java.lang.String toString()>/$stack4
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.Type)>/$stack11
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.Type)>/$stack9
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.Type)>/$stack7
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.Type)>/$stack5
<org.springframework.web.context.support.ServletContextResourcePatternResolver: java.util.Set doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)>/rootDirResource#_0
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_1#_84
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/array#_100
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/indexNode#_93
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/propertyNode#_89
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_4#_122
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack39
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/index_$$A_6#_122
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_6#_134
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target_$$A_1#_153
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/array#_172
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/indexNode#_162
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/propertyNode#_157
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack44
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/index_$$A_6#_197
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTMap: java.lang.String toString()>/$stack18
<ognl.ASTMap: java.lang.String toString()>/$stack21
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack32
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/attributes_$$A_3#_115
<java.util.logging.LogManager: void readConfiguration(java.io.InputStream)>/l4#_1414
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack31
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack36
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack41
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack132
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack138
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack46
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack51
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack60
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack69
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack74
<java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)>/$stack28
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Class)>/typedResultValue#_97
<java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)>/$stack39
<java.util.ResourceBundle: java.util.ResourceBundle findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle)>/l6#_1416
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack21
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack35
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack40
<java.util.ResourceBundle: java.util.ResourceBundle loadBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.ResourceBundle$Control,boolean)>/l8#_1499
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack45
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack97
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack103
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack50
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack59
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack68
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack73
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentImplementation#_0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentKey#_0
<br.com.caelum.iogi.DependenciesInjector: boolean canObtainDependenciesFor(java.util.Collection)>/target#_20
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter defaultInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter defaultInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentImplementation#_0
<br.com.caelum.iogi.DependenciesInjector: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/target#_0
<org.mockito.cglib.core.ReflectUtils: org.mockito.cglib.core.Signature getSignature(java.lang.reflect.Member)>/$stack14
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter setterInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter setterInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/componentImplementation#_0
<java.lang.invoke.LambdaFormBuffer: void clearDuplicatesAndNulls()>/l2#_201
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter methodInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter methodInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/componentImplementation#_0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter methodAnnotatedInjectionAdapter(java.lang.Class,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/componentImplementation#_0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter methodAnnotatedInjectionAdapter(java.lang.Class,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter fieldAnnotatedInjectionAdapter(java.lang.Class,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/componentImplementation#_0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter fieldAnnotatedInjectionAdapter(java.lang.Class,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/componentKey#_0
<org.mockito.cglib.core.ReflectUtils: java.lang.Class defineClass(java.lang.String,byte[],java.lang.ClassLoader)>/loader#_0
<org.mockito.cglib.core.ReflectUtils: org.mockito.cglib.core.MethodInfo getMethodInfo(java.lang.reflect.Member,int)>/member#_0
<org.mockito.cglib.core.ReflectUtils: org.mockito.cglib.core.MethodInfo getMethodInfo(java.lang.reflect.Member)>/member#_0
<br.com.caelum.iogi.collections.ParametersByIndex: void <init>(br.com.caelum.iogi.parameters.Parameters,br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.collections.ParametersByIndex: com.google.common.collect.ListMultimap groupByIndex(br.com.caelum.iogi.parameters.Parameters,br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.collections.ParametersByIndex: com.google.common.collect.ListMultimap groupByIndex(br.com.caelum.iogi.parameters.Parameters,br.com.caelum.iogi.reflection.Target)>/parameter#_41
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)>/l5#_316
<com.thoughtworks.xstream.mapper.CachingMapper: java.lang.Class realClass(java.lang.String)>/elementName#_0
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)>/l7#_321
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/declaringClassName#_106
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/parameterTypeName#_121
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/methodName_$$A_2#_115
<com.google.gson.internal.bind.ArrayTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/array#_0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/auau#_71
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack18
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack21
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowMethodExceptionIfThereIsAnInvocationException()>/auau#_85
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/auau#_103
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack21
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack24
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack16
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack16
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack16
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack18
<org.springframework.core.SimpleAliasRegistry: void registerAlias(java.lang.String,java.lang.String)>/name#_0
<org.springframework.core.SimpleAliasRegistry: boolean isAlias(java.lang.String)>/name#_0
<org.springframework.core.SimpleAliasRegistry: void retrieveAliases(java.lang.String,java.util.List)>/name#_0
<org.springframework.core.SimpleAliasRegistry: java.lang.String canonicalName(java.lang.String)>/canonicalName_$$A_1#_150
<org.springframework.core.SimpleAliasRegistry: void checkForAliasCircle(java.lang.String,java.lang.String)>/name#_0
<org.springframework.core.SimpleAliasRegistry: void checkForAliasCircle(java.lang.String,java.lang.String)>/$stack3
<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: java.lang.Object createCollection(java.lang.Class)>/type#_0
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: boolean equals(java.lang.Object)>/$stack17
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/$stack22
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/t#_137
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalOrExpression()>/t#_173
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalAndExpression()>/t#_185
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatRelationalExpression()>/t#_198
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatSumExpression()>/t#_235
<org.mockito.internal.matchers.LocalizedMatcher: boolean matches(java.lang.Object)>/item#_0
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class)>/name#_0
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)>/cls#_0
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)>/$stack8_$$A_2
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatProductExpression()>/t#_252
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPowerExpression()>/t#_271
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatUnaryExpression()>/t#_282
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>/type#_0
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>/cls_$$A_1#_125
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>/cls_$$A_4#_132
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatDottedNode()>/$stack17
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void eatConstructorArgs(java.util.List)>/$stack9
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatBeanReference()>/beanNameToken_$$A_3#_481
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatTypeReference()>/typeName#_492
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatNullReference()>/nullToken#_509
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatProjection(boolean)>/t#_522
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatIndexer()>/t#_556
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatSelection(boolean)>/t#_567
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPossiblyQualifiedId()>/startnode#_590
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPossiblyQualifiedId()>/node#_593
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatMethodOrProperty(boolean)>/methodOrPropertyName#_603
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatConstructorReference()>/newToken#_624
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatLiteral()>/t#_672
<br.com.caelum.vraptor.test.HttpSessionMock: java.lang.Object getAttribute(java.lang.String)>/name#_0
<sun.security.util.ManifestEntryVerifier: java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable)>/l5#_206
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper: void <init>(com.thoughtworks.xstream.core.util.ObjectIdDictionary,java.lang.Object)>/obj#_0
<org.springframework.expression.spel.ast.OpNE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_37
<org.springframework.expression.spel.ast.OpNE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_38
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest$1: boolean matchesSafely(java.lang.Object)>/$stack2
<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: boolean equals(java.lang.Object)>/$stack3
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/value#_0
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/$stack28
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/$stack18
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/$stack16
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/$stack14
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/$stack12
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/$stack24
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/$stack5
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>/entry#_86
<ognl.ASTProperty: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTProperty: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/property#_112
<ognl.ASTProperty: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack7
<ognl.ASTProperty: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/$stack3
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/$stack4
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/$stack7
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/$stack8
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>/value#_0
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>/$stack13
<ognl.ASTProperty: java.lang.String toString()>/$stack11
<com.google.common.base.Predicates$InstanceOfPredicate: boolean apply(java.lang.Object)>/o#_0
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/attribute#_0
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.SingleValueConverter getLocalSingleValueConverter(java.lang.Class,java.lang.String,java.lang.Class)>/fieldName#_0
<net.vidageek.mirror.invoke.ConstructorHandlerByArgs: java.lang.Object bypasser()>/$stack2
<net.vidageek.mirror.invoke.ConstructorHandlerByArgs: java.lang.reflect.Constructor getConstructor(java.lang.Object[])>/$stack7
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack193
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack201
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack206
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack218
<org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum: java.lang.Enum convert(java.lang.String)>/$stack3
<org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum: java.lang.Object convert(java.lang.Object)>/$stack2
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack55
<ognl.NumberElementsAccessor$1: void <init>(ognl.NumberElementsAccessor,java.lang.Object)>/$stack3
<ognl.NumberElementsAccessor$1: void <init>(ognl.NumberElementsAccessor,java.lang.Object)>/$stack5
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>/l3#_4491
<org.springframework.ui.context.support.UiApplicationContextUtils: org.springframework.ui.context.ThemeSource initThemeSource(org.springframework.context.ApplicationContext)>/themeSource#_58
<com.thoughtworks.xstream.converters.basic.BooleanConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack177
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack185
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack190
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack202
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack51
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/$stack3
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack5
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.Class getBeanClass()>/beanClassObject#_370
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.Class resolveBeanClass(java.lang.ClassLoader)>/className#_404
<org.springframework.beans.propertyeditors.CharsetEditor: void setAsText(java.lang.String)>/text#_0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void prepareMethodOverride(org.springframework.beans.factory.support.MethodOverride)>/$stack3
<org.springframework.beans.factory.support.AbstractBeanDefinition: void prepareMethodOverride(org.springframework.beans.factory.support.MethodOverride)>/$stack11
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack10
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/next#_65
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack15
<ognl.ASTSelect: java.lang.String toString()>/$stack4
<org.springframework.beans.factory.support.AbstractBeanDefinition: boolean equals(java.lang.Object)>/$stack4
<org.springframework.beans.factory.support.AbstractBeanDefinition: boolean equals(java.lang.Object)>/$stack5
<org.springframework.beans.factory.support.AbstractBeanDefinition: boolean equals(java.lang.Object)>/other#_0
<com.thoughtworks.xstream.core.util.HierarchicalStreams: java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper)>/$stack6
<org.springframework.beans.factory.support.AbstractBeanDefinition: int hashCode()>/$stack2
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String toString()>/$stack3
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>/b#_0
<br.com.caelum.iogi.reflection.Target: java.lang.Class getClassType()>/$stack1
<br.com.caelum.iogi.reflection.Target: java.lang.Object cast(java.lang.Object)>/object#_0
<br.com.caelum.iogi.reflection.Target: java.lang.Object cast(java.lang.Object)>/$stack6
<org.picocontainer.injectors.PrimitiveMemberChecker: boolean isPrimitiveArgument(java.lang.reflect.AccessibleObject,int)>/member#_0
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/lastKey_$$A_1#_95
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operand#_67
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack21
<br.com.caelum.iogi.reflection.Target: br.com.caelum.iogi.reflection.Target arrayElementTarget()>/$stack2
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack53
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/lastValue#26#_146
<br.com.caelum.iogi.reflection.Target: boolean equals(java.lang.Object)>/$stack6
<br.com.caelum.iogi.reflection.Target: boolean equals(java.lang.Object)>/$stack10
<org.mockito.cglib.proxy.Enhancer$6: int getOriginalModifiers(org.mockito.cglib.core.MethodInfo)>/method#_0
<org.mockito.cglib.proxy.Enhancer$6: int getIndex(org.mockito.cglib.core.MethodInfo)>/method#_0
<org.mockito.cglib.proxy.Enhancer$6: org.mockito.cglib.core.Signature getImplSignature(org.mockito.cglib.core.MethodInfo)>/method#_0
<org.mockito.cglib.proxy.Enhancer$6: org.mockito.cglib.core.CodeEmitter beginMethod(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.core.MethodInfo)>/method#_0
<org.springframework.core.convert.support.StringToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.StringToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/string#_56
<org.springframework.core.convert.support.StringToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack13
<org.springframework.core.convert.support.StringToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceElement#_59
<org.mockito.asm.Item: boolean isEqualTo(org.mockito.asm.Item)>/$stack25
<org.mockito.asm.Item: boolean isEqualTo(org.mockito.asm.Item)>/$stack7
<org.mockito.asm.Item: boolean isEqualTo(org.mockito.asm.Item)>/$stack11
<org.mockito.asm.Item: boolean isEqualTo(org.mockito.asm.Item)>/$stack28
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack109
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/value#_0
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/$stack20
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/$stack22
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlWithoutArgs()>/$stack3
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlWithParamArgs()>/$stack7
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/serialized#_0
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlWithPartialParamArgs()>/$stack4
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.String getMember(java.lang.Class,java.lang.String,java.util.Map)>/name#_0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/fieldName#_0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: void omitField(java.lang.Class,java.lang.String)>/definedIn#_0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: void omitField(java.lang.Class,java.lang.String)>/fieldName#_0
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/componentClass#_194
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/gat#3#_198
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/arg#4#_199
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldUseExactlyMatchedMethodIfTheMethodIsOverloaded()>/$stack4
<java.util.HashMap$EntrySet: boolean contains(java.lang.Object)>/l3#_1019
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack28
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseExclude(java.util.Map$Entry)>/$stack6
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseInclude(com.google.common.collect.Multimap,java.util.Map$Entry)>/$stack10
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseInclude(com.google.common.collect.Multimap,java.util.Map$Entry)>/parentType#_55
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseInclude(com.google.common.collect.Multimap,java.util.Map$Entry)>/fieldName#_56
<com.thoughtworks.xstream.mapper.DynamicProxyMapper: java.lang.String serializedClass(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.mapper.DynamicProxyMapper: java.lang.Class realClass(java.lang.String)>/elementName#_0
<com.thoughtworks.xstream.converters.basic.NullConverter: boolean canConvert(java.lang.Class)>/type#_0
<org.springframework.beans.propertyeditors.FileEditor: void setAsText(java.lang.String)>/text#_0
<org.mockito.cglib.proxy.MethodInterceptorGenerator$2: void processCase(java.lang.Object,org.mockito.asm.Label)>/key#_0
<sun.reflect.annotation.AnnotationType: void <init>(java.lang.Class)>/l6#_120
<net.vidageek.mirror.reflect.DefaultConstructorReflector: java.lang.reflect.Constructor withArgs(java.lang.Class[])>/$stack2
<net.vidageek.mirror.reflect.DefaultConstructorReflector: java.lang.reflect.Constructor withAnyArgs()>/$stack4
<org.picocontainer.paranamer.AdaptiveParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/methodOrCtor#_0
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue#_45
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue_$$A_1#_59
<org.springframework.expression.spel.ast.OpOr: void assertTypedValueNotNull(org.springframework.expression.TypedValue)>/typedValue#_0
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operand#_57
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack19
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack27
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/arrayElementType#10_$$A_1#_101
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/arrayElementType#10_$$A_6#_105
<org.springframework.expression.spel.ast.Projection: java.lang.Class determineCommonType(java.lang.Class,java.lang.Class)>/oldType#_0
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: java.lang.Object invoke(java.lang.Object[])>/$stack3
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void setUp()>/$stack2
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack5
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack7
<org.mockito.cglib.core.EmitUtils$12: void processCase(java.lang.Object,org.mockito.asm.Label)>/key#_0
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/definedIn#_0
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/fieldName#_0
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>/fieldName#_0
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.Object newInstance(java.lang.Class)>/type#_0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/listHolder#_68
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/propertyName#_0
<java.lang.invoke.MethodType: java.lang.invoke.MethodType fromMethodDescriptorString(java.lang.String,java.lang.ClassLoader)>/l3#_1068
<net.vidageek.mirror.invoke.ConstructorHandlerByConstructor: java.lang.Object withArgs(java.lang.Object[])>/$stack4
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: java.lang.Character convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: java.lang.Character convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack50
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<net.vidageek.mirror.invoke.ConstructorHandlerByConstructor: java.lang.Object bypasser()>/$stack2
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/request#_175
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/handler#_177
<com.google.common.collect.LinkedListMultimap$2: boolean contains(java.lang.Object)>/key#_0
<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>/$stack4
<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>/$stack5
<java.beans.PropertyDescriptor: void setWriteMethod(java.lang.reflect.Method)>/$stack3
<sun.misc.ExtensionDependency: boolean checkExtensionAgainstInstalled(java.lang.String,java.util.jar.Attributes)>/$stack10
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/declaringClassName_$$A_1#_83
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/methodName_$$A_1#_83
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack11
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>/$stack9
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>/l3#_469
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>/$stack11
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>/l4#_470
<java.beans.PropertyDescriptor: void <init>(java.beans.PropertyDescriptor,java.beans.PropertyDescriptor)>/l3#_548
<java.beans.PropertyDescriptor: void <init>(java.beans.PropertyDescriptor,java.beans.PropertyDescriptor)>/l4#_549
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack47
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack13
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/contextObjectClass#_179
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack30
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack37
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack34
<sun.misc.ExtensionDependency: java.lang.Boolean addNewExtensionsToClassLoader(sun.misc.Launcher$ExtClassLoader)>/$stack26
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack14
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/contextObjectClass#_233
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack31
<com.thoughtworks.xstream.converters.basic.FloatConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.spel.ExpressionState)>/contextObject#_261
<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.spel.ExpressionState)>/$stack11
<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/targetType#_0
<org.picocontainer.converters.DoubleConverter: java.lang.Double convert(java.lang.String)>/paramValue#_0
<org.picocontainer.converters.DoubleConverter: java.lang.Object convert(java.lang.String)>/x0#_0
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Field reflectField(java.lang.String)>/fieldName#_0
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>/propertyName#_0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: boolean matchesSafely(java.lang.Object)>/$stack2
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor getPropertyDescriptorInternal(java.lang.String)>/propertyName#_0
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor getPropertyDescriptorInternal(java.lang.String)>/$stack5
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getPropertyType(java.lang.String)>/propertyName#_0
<org.springframework.beans.BeanWrapperImpl: boolean isWritableProperty(java.lang.String)>/propertyName#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/value#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/requiredType#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/propertyName#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/oldValue#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/newValue#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/requiredType#_0
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: java.lang.Long convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: java.lang.Long convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.Object,java.lang.String)>/propertyName#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.Object,java.lang.String)>/value#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.String,java.lang.Object,java.lang.Object,java.beans.PropertyDescriptor)>/propertyName#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.String,java.lang.Object,java.lang.Object,java.beans.PropertyDescriptor)>/newValue#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.String,java.lang.Object,java.lang.Object,java.beans.PropertyDescriptor)>/$stack5
<org.springframework.beans.BeanWrapperImpl: java.lang.String getFinalPath(org.springframework.beans.BeanWrapper,java.lang.String)>/nestedPath#_0
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getBeanWrapperForPropertyPath(java.lang.String)>/propertyPath#_0
<br.com.caelum.vraptor.serialization.I18nMessageSerializationTest: void setup()>/$stack25
<br.com.caelum.vraptor.serialization.I18nMessageSerializationTest: void setup()>/$stack28
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)>/canonicalName#_554
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)>/propertyValue_$$A_2#_562
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.PropertyValue createDefaultPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack4
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.PropertyValue createDefaultPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack15
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.PropertyValue createDefaultPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/type#_599
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.PropertyValue createDefaultPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack6
<org.springframework.beans.BeanWrapperImpl: java.lang.Object newValue(java.lang.Class,java.lang.String)>/type#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object newValue(java.lang.Class,java.lang.String)>/name#_0
<br.com.caelum.vraptor.validator.MethodValidatorTest: void setup()>/$stack9
<br.com.caelum.vraptor.validator.MethodValidatorTest: void setup()>/$stack17
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: java.lang.Integer convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: java.lang.Integer convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder getPropertyNameTokens(java.lang.String)>/$stack52
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(java.lang.String)>/propertyName#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(java.lang.String)>/$stack5
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack42
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/handler#_127
<br.com.caelum.iogi.Iogi: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/object#_82
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetNotFoundStatus()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetHeader()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatus()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack9
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetOkStatus()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetConflictStatus()>/$stack2
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/actualName#_704
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/propertyName#_703
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetAcceptedStatus()>/$stack2
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack30
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack5
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack8
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack138
<com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>/key#_61
<com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>/$stack21
<com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>/$stack27
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack6
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_6#_756
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/pae#6_$$A_1#_756
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_7#_764
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack9
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack5
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack54
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/list#17#_793
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/it#18#_796
<com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>/candidateKey#_150
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack23
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack26
<org.springframework.beans.BeanWrapperImpl: java.lang.Object growArrayIfNecessary(java.lang.Object,int,java.lang.String)>/array#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object growArrayIfNecessary(java.lang.Object,int,java.lang.String)>/name#_0
<org.springframework.beans.BeanWrapperImpl: void growCollectionIfNecessary(java.util.Collection,int,java.lang.String,java.beans.PropertyDescriptor,int)>/$stack10
<org.springframework.beans.BeanWrapperImpl: void growCollectionIfNecessary(java.util.Collection,int,java.lang.String,java.beans.PropertyDescriptor,int)>/elementType#_860
<org.springframework.beans.BeanWrapperImpl: void growCollectionIfNecessary(java.util.Collection,int,java.lang.String,java.beans.PropertyDescriptor,int)>/name#_0
<com.thoughtworks.paranamer.CachingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject)>/methodOrConstructor#_0
<com.thoughtworks.paranamer.CachingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/methodOrCtor#_0
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(java.lang.String,java.lang.Object)>/propertyName#_0
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(java.lang.String,java.lang.Object)>/$stack6
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.PropertyValue)>/propertyName#_887
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.PropertyValue)>/$stack9
<org.springframework.beans.factory.CannotLoadBeanClassException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassNotFoundException)>/beanClassName#_0
<org.springframework.beans.factory.CannotLoadBeanClassException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassNotFoundException)>/beanName#_0
<org.springframework.beans.factory.CannotLoadBeanClassException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.LinkageError)>/beanClassName#_0
<org.springframework.beans.factory.CannotLoadBeanClassException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.LinkageError)>/beanName#_0
<ognl.Evaluation: java.lang.String toString(boolean,boolean,java.lang.String)>/$stack22
<ognl.ASTList: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/propertyName#_909
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/actualName#_910
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/propValue#_921
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack223
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack185
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue_$$A_4#_962
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack191
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType_$$A_1#_955
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack146
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack150
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType_$$A_2#_985
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue_$$A_6#_992
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue#59_$$A_2#_997
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack161
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/arrayIndex#56#_987
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack140
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack100
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack87
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/ex#64#_1034
<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandOne#_41
<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandTwo#_42
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack53
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack58
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack64
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack68
<org.springframework.beans.BeanWrapperImpl: java.lang.String toString()>/$stack9
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack105
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/l5#_1072
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void shouldBeAbleToConvert()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>/l1#_0
<org.mockito.internal.matchers.Equality: boolean areEqual(java.lang.Object,java.lang.Object)>/o2#_0
<org.mockito.internal.matchers.Equality: boolean areArraysEqual(java.lang.Object,java.lang.Object)>/o2#_0
<org.mockito.internal.matchers.Equality: boolean areArrayLengthsEqual(java.lang.Object,java.lang.Object)>/o2#_0
<org.mockito.internal.matchers.Equality: boolean areArrayElementsEqual(java.lang.Object,java.lang.Object)>/o2#_0
<org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<com.thoughtworks.xstream.mapper.OuterClassMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/serialized#_0
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack10
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceElement#_65
<br.com.caelum.iogi.ObjectInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/target#_0
<java.util.Hashtable: boolean equals(java.lang.Object)>/l5#_807
<java.util.Hashtable: boolean equals(java.lang.Object)>/$stack16
<javassist.compiler.TypeChecker: javassist.compiler.MemberResolver$Method atMethodCallCore(javassist.CtClass,java.lang.String,javassist.compiler.ast.ASTList)>/$stack13
<org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber: java.lang.Number convert(java.lang.String)>/source#_0
<org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber: java.lang.Number convert(java.lang.String)>/$stack3
<org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber: java.lang.Object convert(java.lang.Object)>/$stack2
<org.picocontainer.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/methodOrCtor#_0
<com.google.gson.internal.bind.TypeAdapters$3: java.lang.Boolean read(com.google.gson.stream.JsonReader)>/$stack8
<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: boolean equals(java.lang.Object)>/$stack3
<org.picocontainer.injectors.AnnotatedFieldInjector: void initializeInjectionMembersAndTypeLists()>/drillInto_$$A_1#_52
<org.picocontainer.injectors.AnnotatedFieldInjector: void initializeInjectionMembersAndTypeLists()>/field#_54
<org.mockito.cglib.core.EmitUtils: void member_helper_type(org.mockito.cglib.core.CodeEmitter,java.util.List,org.mockito.cglib.core.ObjectSwitchCallback,org.mockito.cglib.core.EmitUtils$ParameterTyper,org.mockito.asm.Label,org.mockito.asm.Label,java.util.BitSet)>/member#_766
<org.mockito.cglib.core.EmitUtils: void member_helper_type(org.mockito.cglib.core.CodeEmitter,java.util.List,org.mockito.cglib.core.ObjectSwitchCallback,org.mockito.cglib.core.EmitUtils$ParameterTyper,org.mockito.asm.Label,org.mockito.asm.Label,java.util.BitSet)>/$stack15
<javassist.bytecode.stackmap.BasicBlock$Maker: javassist.bytecode.stackmap.BasicBlock[] makeBlocks(java.util.HashMap)>/$stack78
<javassist.bytecode.stackmap.BasicBlock$Maker: javassist.bytecode.stackmap.BasicBlock[] makeBlocks(java.util.HashMap)>/m#_309
<org.mockito.cglib.core.EmitUtils: org.mockito.cglib.core.CodeEmitter begin_method(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.core.MethodInfo)>/method#_0
<com.google.inject.internal.MoreTypes$GenericArrayTypeImpl: boolean equals(java.lang.Object)>/$stack3
<org.springframework.core.convert.support.NumberToCharacterConverter: java.lang.Object convert(java.lang.Object)>/$stack2
<org.springframework.core.convert.support.ArrayToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.core.convert.support.ArrayToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack10
<org.springframework.core.type.StandardAnnotationMetadata: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/ann#_122
<org.picocontainer.injectors.ConstructorInjector$1: java.lang.Object run(java.lang.Object)>/$stack12
<org.picocontainer.injectors.ConstructorInjector$1: java.lang.Object run(java.lang.Object)>/ctor#_323
<org.picocontainer.injectors.ConstructorInjector$1: java.lang.Object run(java.lang.Object)>/ctor_$$A_1#_326
<org.picocontainer.injectors.ConstructorInjector$1: java.lang.Object run(java.lang.Object)>/ctor_$$A_3#_348
<org.picocontainer.injectors.ConstructorInjector$1: java.lang.Object run(java.lang.Object)>/ctor_$$A_4#_329
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_37
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_38
<com.google.common.collect.LinkedListMultimap$DistinctKeyIterator: java.lang.Object next()>/$stack13
<org.mockito.internal.stubbing.answers.Returns: java.lang.String toString()>/$stack3
<org.springframework.expression.spel.support.ReflectiveMethodExecutor: org.springframework.expression.TypedValue execute(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object[])>/target#_0
<sun.misc.ObjectInputFilter$Config$Global: void <init>(java.lang.String)>/l4#_448
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>/$stack9
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>/currentPv#_167
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue mergeIfRequired(org.springframework.beans.PropertyValue,org.springframework.beans.PropertyValue)>/$stack10
<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.ProcessEnvironment$Variable getKey()>/$stack3
<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.ProcessEnvironment$Value getValue()>/$stack3
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldConfigureAllClasses()>/$stack9
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldNotDoAnythingIfHasNoClasses()>/$stack5
<org.mockito.cglib.proxy.LazyLoaderGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/method#_35
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>/$stack5
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>/$stack8
<org.hamcrest.collection.IsEmptyCollection: boolean matchesSafely(java.lang.Object)>/$stack2
<com.google.common.collect.LinkedHashMultimap$SetDecorator: java.util.Map$Entry createEntry(java.lang.Object)>/$stack2
<com.google.common.collect.LinkedHashMultimap$SetDecorator: java.util.Map$Entry createEntry(java.lang.Object)>/value#_0
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean add(java.lang.Object)>/value#_0
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean addAll(java.util.Collection)>/values#_0
<com.google.common.collect.LinkedHashMultimap$SetDecorator: void clear()>/value#_214
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean remove(java.lang.Object)>/value#_0
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean retainAll(java.util.Collection)>/value#_270
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean retainAll(java.util.Collection)>/$stack12
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void shouldBeAbleToConvert()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>/elementName#_0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/serialized#_0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/type#_0
<org.springframework.core.convert.support.StringToPropertiesConverter: java.util.Properties convert(java.lang.String)>/source#_0
<org.springframework.core.convert.support.StringToPropertiesConverter: java.lang.Object convert(java.lang.Object)>/$stack2
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String attributeForAlias(java.lang.String)>/alias#_0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/definedIn#_0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/itemFieldName#_0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)>/itemFieldName#_0
<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>/fieldName#_0
<com.thoughtworks.xstream.mapper.MapperWrapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/fieldName#_0
<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/attribute#_0
<org.springframework.beans.propertyeditors.LocaleEditor: void setAsText(java.lang.String)>/text#_0
<org.springframework.beans.BeanWrapperImpl$4: java.lang.Object run()>/$stack3
<org.springframework.beans.propertyeditors.PatternEditor: void setAsText(java.lang.String)>/text#_0
<org.hamcrest.FeatureMatcher: boolean matchesSafely(java.lang.Object,org.hamcrest.Description)>/actual#_0
<ognl.internal.Entry: java.lang.String toString()>/$stack7
<org.springframework.expression.spel.ast.OpEQ: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_37
<org.springframework.expression.spel.ast.OpEQ: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_38
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/parent#_244
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/$stack29
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/componentAdapter_$$A_3#_253
<ognl.ASTIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_52
<ognl.ASTIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_53
<ognl.ASTIn: java.lang.String toString()>/$stack3
<ognl.ASTIn: java.lang.String toString()>/$stack7
<org.picocontainer.parameters.CollectionComponentParameter: java.lang.Object[] getArrayInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map)>/$stack16
<ognl.ASTIn: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack7
<ognl.ASTIn: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack12
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Collection getCollectionInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map,org.picocontainer.NameBinding,boolean)>/$stack16
<org.hamcrest.number.OrderingComparison: boolean matchesSafely(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.http.route.DefaultRouter$2: boolean apply(java.lang.Object)>/$stack2
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/name#_0
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack14
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceKey#_68
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceValue#_69
<org.springframework.context.support.DefaultLifecycleProcessor: void startBeans(boolean)>/key#15#_142
<org.springframework.context.support.DefaultLifecycleProcessor: void doStart(java.util.Map,java.lang.String)>/beanName#_0
<org.springframework.context.support.DefaultLifecycleProcessor: void stopBeans()>/key#11#_194
<org.springframework.context.support.DefaultLifecycleProcessor: void doStop(java.util.Map,java.lang.String,java.util.concurrent.CountDownLatch,java.util.Set)>/beanName#_0
<org.springframework.core.convert.support.StringToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/beanName#_266
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/beanNameToRegister#_267
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/beanNameToCheck#_269
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/$stack36
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/$stack21
<org.springframework.core.convert.support.StringToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/string#_54
<org.springframework.core.convert.support.StringToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack11
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack21
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/node#_89
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Class[] getTypes(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack6
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: com.google.gson.Gson getGson()>/adapter#_175
<org.springframework.beans.propertyeditors.StringArrayPropertyEditor: void setAsText(java.lang.String)>/text#_0
<org.hamcrest.internal.ArrayIterator: boolean hasNext()>/$stack1
<org.hamcrest.internal.ArrayIterator: java.lang.Object next()>/$stack3
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/mockInstantiator#_109
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: java.util.Calendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>/value#_37
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: java.util.Calendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>/locale#5#_49
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/mockInstantiator#_125
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)>/value#_0
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/$stack30
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/emptyBundle#_185
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/result#_184
<org.springframework.beans.factory.BeanNotOfRequiredTypeException: void <init>(java.lang.String,java.lang.Class,java.lang.Class)>/beanName#_0
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack5
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack9
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void handlesInclude()>/$stack20
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleTheCorrectMethod()>/$stack20
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveRequestMethods()>/$stack20
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveGetRequestUsingThe_methodParameter()>/$stack24
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldOverrideTheHttpMethodByUsingThe_methodParameter()>/$stack24
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfRootContext()>/$stack24
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContext()>/$stack24
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfPlainRootContext()>/$stack20
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfPlainRootContext()>/$stack20
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfNonRootContext()>/$stack24
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack24
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack30
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack36
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContextButPlainRequest()>/$stack24
<com.thoughtworks.xstream.converters.basic.CharConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/$stack4
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/$stack5
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/$stack7
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/$stack8
<com.thoughtworks.xstream.converters.basic.CharConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack5
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>/$stack2
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>/$stack5
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void setValue(java.lang.String)>/text#_0
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void handleCheckedStateTransition(int,java.lang.String,java.lang.String)>/valueToAdd#_0
<com.thoughtworks.xstream.io.xml.QNameMap: javax.xml.namespace.QName getQName(java.lang.String)>/javaClassName#_0
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForCollectionInterface()>/$stack8
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForListInterface()>/$stack8
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateLinkedListForQueueInterface()>/$stack8
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/valueToAdd#_0
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateHashSetListForSetInterface()>/$stack8
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateTreeSetListForSortedSetInterface()>/$stack8
<org.springframework.expression.spel.support.ReflectiveMethodResolver: org.springframework.expression.MethodExecutor resolve(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.util.List)>/type#_68
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/value#_0
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/requiredType#_0
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/value#_0
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/requiredType#_0
<com.thoughtworks.xstream.io.ReaderWrapper: java.lang.String getAttribute(java.lang.String)>/name#_0
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack8
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack11
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldThrowExceptionWhenAnUnsupportedEncodingExceptionOccurs()>/$stack3
<ognl.ASTXor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTXor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_1#_55
<ognl.ASTXor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack12
<org.springframework.beans.propertyeditors.TimeZoneEditor: void setAsText(java.lang.String)>/text#_0
<org.picocontainer.adapters.InstanceAdapter: void <init>(java.lang.Object,java.lang.Object,org.picocontainer.LifecycleStrategy,org.picocontainer.ComponentMonitor)>/componentInstance#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.picocontainer.adapters.InstanceAdapter: boolean hasLifecycle(java.lang.Class)>/type#_0
<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/l6#_284
<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/l6#_415
<br.com.caelum.iogi.MultiInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/target#_0
<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/targetType#_0
<com.thoughtworks.xstream.core.ReferenceByIdMarshaller: java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>/item#_0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: void <init>(java.lang.Object)>/obj#_0
<org.springframework.beans.propertyeditors.ClassEditor: void setAsText(java.lang.String)>/text#_0
<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/l11#_1926
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/$stack55
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/beanType#_218
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/$stack51
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/actualValue_$$A_9#_259
<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>/src#_0
<org.springframework.expression.spel.ast.OperatorMatches: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack16
<org.springframework.expression.spel.ast.OperatorMatches: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack18
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class)>/json#_0
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: java.util.Map getParameterTypes(java.lang.reflect.Method,java.lang.String[])>/method#_0
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class)>/object#_841
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: java.util.Map getParameterTypes(java.lang.reflect.Method,java.lang.String[])>/item#_49
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String decodeNode(java.lang.String)>/name#_0
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String decodeAttribute(java.lang.String)>/name#_0
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String encodeAttribute(java.lang.String)>/name#_0
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<org.hamcrest.object.IsCompatibleType: boolean matchesSafely(java.lang.Class)>/cls#_0
<org.hamcrest.object.IsCompatibleType: boolean matchesSafely(java.lang.Object)>/$stack2
<javassist.util.proxy.ProxyFactory$2: int compare(java.lang.Object,java.lang.Object)>/key2#_765
<br.com.caelum.vraptor.serialization.iso8601.gson.CalendarISO8601Deserializer: java.util.Calendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>/value#_29
<com.google.gson.TreeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/value#_0
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_51
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/low#_58
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/high#_59
<ognl.internal.ClassCacheImpl: java.lang.Object put(java.lang.Class,java.lang.Object)>/key#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean contentEquals(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack3
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean contentEquals(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack2
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: int contentHashCode()>/$stack1
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean access$0(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/l1#_0
<org.picocontainer.converters.CharacterConverter: java.lang.Object convert(java.lang.String)>/x0#_0
<org.apache.log4j.SortedKeyEnumeration: void <init>(java.util.Hashtable)>/s#_981
<org.springframework.core.convert.support.ObjectToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.ObjectToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack6
<org.springframework.core.convert.support.ObjectToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.core.convert.support.ObjectToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack10
<java.util.concurrent.ConcurrentHashMap$KeySetView: boolean addAll(java.util.Collection)>/l5#_4614
<org.mockito.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.mockito.cglib.core.Transformer)>/value#_31
<org.mockito.cglib.core.CollectionUtils: java.util.Collection filter(java.util.Collection,org.mockito.cglib.core.Predicate)>/$stack5
<org.mockito.cglib.core.CollectionUtils: java.util.List transform(java.util.Collection,org.mockito.cglib.core.Transformer)>/$stack8
<com.thoughtworks.xstream.converters.extended.LocaleConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.String toString(java.lang.Object)>/obj#_0
<br.com.caelum.vraptor.http.DefaultParameterNameProvider: java.lang.String[] parameterNamesFor(java.lang.reflect.AccessibleObject)>/method#_0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.Object fromString(java.lang.String)>/str#_0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack3
<br.com.caelum.vraptor.http.DefaultParameterNameProvider: java.lang.reflect.Type[] parameterTypes(java.lang.reflect.AccessibleObject)>/methodOrConstructor#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver$KeyedArgName: java.lang.String toString()>/$stack2
<org.springframework.beans.factory.support.BeanDefinitionValueResolver$KeyedArgName: java.lang.String toString()>/$stack6
<com.google.common.base.Predicates$InPredicate: boolean apply(java.lang.Object)>/t#_0
<com.google.common.base.Predicates$InPredicate: boolean equals(java.lang.Object)>/$stack4
<com.google.common.base.Predicates$InPredicate: java.lang.String toString()>/$stack3
<java.util.HashMap$Node: boolean equals(java.lang.Object)>/$stack5
<java.util.HashMap$Node: boolean equals(java.lang.Object)>/$stack9
<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: int getAssignabilityWeight(java.lang.Class[])>/$stack5
<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: int getAssignabilityWeight(java.lang.Class[])>/$stack12
<java.lang.invoke.LambdaForm$NamedFunction: void initializeInvokers()>/l1#_1099
<org.springframework.core.CollectionFactory: boolean isApproximableCollectionType(java.lang.Class)>/collectionType#_0
<org.springframework.core.CollectionFactory: java.util.Collection createCollection(java.lang.Class,int)>/collectionType#_0
<org.springframework.core.CollectionFactory: boolean isApproximableMapType(java.lang.Class)>/mapType#_0
<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.Class findType(java.lang.String)>/nameToLookup#_63
<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.Class findType(java.lang.String)>/prefix#_70
<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.Class findType(java.lang.String)>/typename#_0
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack17
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack21
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack25
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack30
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack44
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack49
<org.springframework.core.CollectionFactory: java.util.Map createMap(java.lang.Class,int)>/mapType#_0
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void settingShouldNullifyUpToIndexAndIgnoreRemoval()>/$stack3
<ognl.ASTNegate: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTNegate: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack5
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void settingShouldNullifyUpToIndexAndIgnoreRemoval()>/$stack16
<ognl.ASTNegate: java.lang.String toString()>/$stack4
<ognl.ASTNegate: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack9
<org.springframework.expression.spel.support.StandardTypeConverter: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.expression.spel.support.StandardTypeConverter: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.expression.spel.support.StandardTypeConverter: java.lang.Object convertValue(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/value#_0
<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)>/element#_0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/$stack20
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/fieldName#_403
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/type_$$A_3#_411
<com.google.common.collect.AbstractMultimap$WrappedList: java.util.List subList(int,int)>/$stack4
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack4
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeNoLinksIfThereIsNoTransition()>/$stack2
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeOneLinkIfThereIsATransition()>/$stack16
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack24
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object)>/target#_0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object)>/name#_0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>/target#_0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>/name#_0
<ognl.NoSuchPropertyException: java.lang.String getReason(java.lang.Object,java.lang.Object)>/name#_0
<com.google.gson.internal.bind.TypeAdapters$19: java.net.URI read(com.google.gson.stream.JsonReader)>/nextString#_466
<com.thoughtworks.xstream.XStream$1: com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)>/type#_0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack21
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack6
<com.thoughtworks.xstream.converters.reflection.MissingFieldException: void <init>(java.lang.String,java.lang.String)>/fieldName#_0
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue#_46
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue_$$A_1#_60
<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String unescapeFieldName(java.lang.String)>/xmlName#_0
<org.springframework.expression.spel.ast.OpAnd: void assertTypedValueNotNull(org.springframework.expression.TypedValue)>/typedValue#_0
<ognl.ASTTest: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack10
<ognl.ASTTest: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/test#_51
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceElement#_62
<ognl.ASTTest: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ASTTest: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/test#_58
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack57
<ognl.ASTTest: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack13
<ognl.ASTTest: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack18
<ognl.ASTTest: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack22
<ognl.ASTTest: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack28
<ognl.ASTTest: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack32
<ognl.ASTTest: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack38
<br.com.caelum.vraptor.util.ISO8601Util: java.util.Calendar toCalendar(java.lang.String)>/iso8601String#_0
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void shouldBeAbleToConvert()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void shouldBeAbleToConvertEmpty()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void shouldBeAbleToConvertNull()>/$stack1
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>/object#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>/$stack21
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>/$stack22
<org.hamcrest.core.SubstringMatcher: boolean matchesSafely(java.lang.String)>/item#_0
<org.hamcrest.core.SubstringMatcher: void describeMismatchSafely(java.lang.String,org.hamcrest.Description)>/item#_0
<org.hamcrest.core.SubstringMatcher: boolean matchesSafely(java.lang.Object)>/$stack2
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Comparable,java.lang.Comparable)>/b#_0
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Object,java.lang.Object)>/$stack4
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Object,java.lang.Object)>/$stack3
<java.util.logging.LogManager$5: java.lang.Object run()>/l3#_963
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Number convert(java.lang.Character)>/$stack5
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Object convert(java.lang.Object)>/$stack2
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack26
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack22
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack16
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack7
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsCacheableAddMaxAge()>/$stack4
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack14
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack17
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack4
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack7
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.MethodExecutor findAccessorForMethod(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/contextObject#_167
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.MethodExecutor findAccessorForMethod(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/$stack23_$$A_2
<com.thoughtworks.xstream.io.xml.StaxWriter: void startNode(java.lang.String)>/$stack10
<br.com.caelum.vraptor.serialization.gson.adapters.HibernateProxySerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/$stack4
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean matches(java.lang.Object)>/item#_0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean isMatched(java.lang.Object)>/item#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerSingleton(java.lang.String,java.lang.Object)>/singletonObject#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingletonFactory(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/beanName#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String)>/beanName#_0
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeAPersonWithDog()>/$stack9
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,boolean)>/beanName#_0
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADog()>/$stack9
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgument()>/$stack9
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack9
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/beanName#_0
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogNamedDifferently()>/$stack9
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean containsSingleton(java.lang.String)>/beanName#_0
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogWhenAliasConfiguredByAnnotations()>/$stack9
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/value#_0
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/elem#_120
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void beforeSingletonCreation(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void afterSingletonCreation(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isSingletonCurrentlyInCreation(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerContainedBean(java.lang.String,java.lang.String)>/containingBeanName#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>/canonicalName#_366
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>/dependentBeanName#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean hasDependentBean(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.String[] getDependentBeans(java.lang.String)>/beanName#_0
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>/method#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.String[] getDependenciesForBean(java.lang.String)>/beanName#_0
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)>/ctor#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroySingleton(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroyBean(java.lang.String,org.springframework.beans.factory.DisposableBean)>/beanName#_0
<org.springframework.web.context.support.ServletContextResource: java.io.File getFile()>/$stack3
<org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>/$stack4
<br.com.caelum.vraptor.resource.DefaultResourceMethod: java.lang.String toString()>/$stack3
<br.com.caelum.vraptor.resource.DefaultResourceMethod: boolean equals(java.lang.Object)>/$stack6
<br.com.caelum.vraptor.resource.DefaultResourceMethod: boolean equals(java.lang.Object)>/$stack5
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$MyColConverter: boolean canConvert(java.lang.Class)>/type#_0
<ognl.SimpleNode: java.lang.Object evaluateGetValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/source#_0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParser: java.lang.String[] getUris(java.lang.reflect.Method)>/method#_157
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: java.util.Map$Entry entry()>/$stack3
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: java.util.Map$Entry entry()>/$stack2
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: com.google.inject.internal.util.$ImmutableSet keySet()>/$stack2
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/object#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/object#_0
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithoutAlias()>/$stack4
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithAlias()>/$stack4
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithoutAlias()>/$stack9
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithAlias()>/$stack5
<org.springframework.beans.factory.config.BeanDefinitionHolder: boolean matchesName(java.lang.String)>/$stack2
<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String getShortDescription()>/$stack4
<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String getShortDescription()>/$stack11
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: java.lang.Byte convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: java.lang.Byte convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>/$stack7
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>/$stack5
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>/$stack8
<net.vidageek.mirror.list.SameNameMatcher: boolean accepts(java.lang.Object)>/$stack2
<org.picocontainer.converters.FloatConverter: java.lang.Float convert(java.lang.String)>/paramValue#_0
<org.picocontainer.converters.FloatConverter: java.lang.Object convert(java.lang.String)>/x0#_0
<junit.framework.ComparisonCompactor: java.lang.String compact(java.lang.String)>/$stack5
<junit.framework.ComparisonCompactor: java.lang.String compact(java.lang.String)>/$stack15
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack133
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/index_$$A_3#_88
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/reference#7_$$A_2#_100
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/targetObject#_67
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack99
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o#30#_119
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o#34_$$A_1#_145
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/reference#43#_144
<junit.framework.ComparisonCompactor: boolean areStringsEqual()>/$stack1
<br.com.caelum.vraptor.interceptor.TopologicalSortedInterceptorRegistryTest$1: boolean matchesSafely(java.lang.Object)>/$stack2
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack91
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack90
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack94
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/newValue#_0
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/index#_188
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack70
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedKey#6#_213
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack30
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedKey#10#_234
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/map#9#_233
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack42
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/newValue#_0
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/clazz#_0
<javassist.util.proxy.ProxyFactory: void computeSignature(javassist.util.proxy.MethodFilter)>/m#_789
<javassist.util.proxy.ProxyFactory: int overrideMethods(javassist.bytecode.ClassFile,javassist.bytecode.ConstPool,java.lang.String)>/key#_909
<com.google.gson.internal.LinkedTreeMap: java.lang.Object get(java.lang.Object)>/key#_0
<javassist.util.proxy.ProxyFactory: void override(java.lang.String,java.lang.reflect.Method,java.lang.String,int,java.lang.String,javassist.bytecode.ClassFile,javassist.bytecode.ConstPool)>/meth#_0
<com.google.gson.internal.LinkedTreeMap: boolean containsKey(java.lang.Object)>/key#_0
<com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/key#_0
<javassist.util.proxy.ProxyFactory: void makeConstructors(java.lang.String,javassist.bytecode.ClassFile,javassist.bytecode.ConstPool,java.lang.String)>/c#_951
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>/$stack46
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>/key#_0
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>/$stack40
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object)>/key#_0
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry)>/$stack7
<javassist.util.proxy.ProxyFactory: void getMethods(java.util.HashMap,java.lang.Class)>/m#_1034
<javassist.util.proxy.ProxyFactory: void getMethods(java.util.HashMap,java.lang.Class)>/$stack26
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object)>/key#_0
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>/l2#_506
<org.springframework.context.expression.BeanFactoryAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.context.expression.BeanFactoryAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.web.context.support.ServletContextScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/name#_0
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)>/sc#_0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: boolean matchesSafely(java.lang.Object)>/$stack2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$3: java.lang.Object run()>/$stack4
<org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>/methodCall#_0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/mock#_0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<org.mockito.cglib.proxy.Enhancer: void emitConstructors(org.mockito.cglib.core.ClassEmitter,java.util.List)>/constructor#_704
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/key#_0
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/value#_0
<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>/actualMethod#_886
<ognl.OgnlContext: boolean containsKey(java.lang.Object)>/key#_0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldInstantiateAListOfStrings()>/$stack5
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldNotInstantiateIfLastTerm()>/$stack12
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/key#_0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldFoundASetter()>/foundMethod#_131
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldFoundAGetter()>/foundMethod#_142
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/key#_0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldFoundASetterEvenWithAProxyObject()>/foundMethod#_172
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldFoundAGetterWithAProxyObject()>/foundMethod#_184
<br.com.caelum.vraptor.ioc.spring.SpringProvider: void start(javax.servlet.ServletContext)>/context#_0
<br.com.caelum.vraptor.ioc.spring.SpringProvider: org.springframework.web.context.ConfigurableWebApplicationContext getParentApplicationContext(javax.servlet.ServletContext)>/context#_0
<ognl.OgnlContext: boolean equals(java.lang.Object)>/o#_0
<org.springframework.util.NumberUtils: java.lang.Number convertNumberToTargetClass(java.lang.Number,java.lang.Class)>/number#_0
<org.springframework.util.NumberUtils: void raiseOverflowException(java.lang.Number,java.lang.Class)>/number#_0
<org.picocontainer.converters.ByteConverter: java.lang.Byte convert(java.lang.String)>/paramValue#_0
<org.picocontainer.converters.ByteConverter: java.lang.Object convert(java.lang.String)>/x0#_0
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class)>/text#_0
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class)>/trimmed#_146
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class,java.text.NumberFormat)>/text#_0
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class,java.text.NumberFormat)>/$stack10
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>/l6#_512
<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: boolean equals(java.lang.Object)>/$stack3
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/$stack25
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/cst#_0
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newClassItem(java.lang.String)>/value#_0
<org.mockito.asm.ClassWriter: int newClass(java.lang.String)>/value#_0
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: java.util.List get(java.lang.Object)>/key#_0
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newString(java.lang.String)>/value#_0
<java.util.Currency$1: java.lang.Void run()>/l8#53#_268
<org.mockito.asm.ClassWriter: int getMergedType(int,int)>/t#_1241
<org.mockito.asm.ClassWriter: int getMergedType(int,int)>/u#_1242
<org.mockito.asm.ClassWriter: int getMergedType(int,int)>/$stack24
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.String getClassName()>/$stack3
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.String getClassName(java.lang.ClassLoader)>/loader#_0
<org.mockito.cglib.core.AbstractClassGenerator: java.util.Set getClassNameCache(java.lang.ClassLoader)>/loader#_0
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.Object create(java.lang.Object)>/loader#_192
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.Object create(java.lang.Object)>/className#_218
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack3
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfServletExceptionOccurs()>/$stack3
<org.picocontainer.PicoLifecycleException: java.lang.String getMessage()>/$stack6
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArguments(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/suppliedArg#_61
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArguments(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/expectedArg#_62
<net.vidageek.mirror.dsl.Mirror: net.vidageek.mirror.dsl.ClassController on(java.lang.String)>/$stack2
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/suppliedArg#_131
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/expectedArg_$$A_1#_132
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack57
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/i#55#_172
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack29
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/expectedArg_$$A_3#_176
<org.springframework.expression.spel.support.ReflectionHelper: void convertArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.Object,int[],java.lang.Integer)>/$stack13
<org.springframework.expression.spel.support.ReflectionHelper: void convertArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.Object,int[],java.lang.Integer)>/$stack14
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/property#_0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack74
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack67
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack28
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findGetter(java.lang.Object,java.lang.String)>/target#_0
<org.springframework.expression.spel.support.ReflectionHelper: void convertAllArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.reflect.Method)>/methodParam#12#_277
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findSetter(java.lang.Object,java.lang.String,java.lang.Class)>/target#_0
<org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/beanName#_0
<com.google.common.collect.Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>/first#_297
<com.google.common.collect.Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>/$stack24
<com.thoughtworks.xstream.converters.basic.DateConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<com.thoughtworks.xstream.converters.basic.DateConverter: java.lang.String toString(java.lang.Object)>/date#_227
<com.google.common.collect.Iterators: boolean any(java.util.Iterator,com.google.common.base.Predicate)>/element#_684
<sun.util.locale.LanguageTag: sun.util.locale.LanguageTag parseLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/l13#_500
<org.mockito.cglib.core.MethodInfoTransformer: java.lang.Object transform(java.lang.Object)>/$stack11
<org.mockito.cglib.core.MethodInfoTransformer: java.lang.Object transform(java.lang.Object)>/$stack9
<org.mockito.cglib.core.MethodInfoTransformer: java.lang.Object transform(java.lang.Object)>/value#_0
<org.mockito.cglib.core.EmitUtils$13: java.lang.Object transform(java.lang.Object)>/$stack3
<com.google.gson.JsonPrimitive: void setValue(java.lang.Object)>/primitive#_0
<com.google.gson.JsonPrimitive: boolean getAsBoolean()>/$stack2
<java.beans.FeatureDescriptor: java.lang.String toString()>/$stack34
<java.beans.FeatureDescriptor: java.lang.String toString()>/$stack37
<com.google.gson.JsonPrimitive: double getAsDouble()>/$stack2
<com.google.gson.JsonPrimitive: long getAsLong()>/$stack2
<com.google.gson.JsonPrimitive: int getAsInt()>/$stack2
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/other#_312
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack13
<br.com.caelum.iogi.collections.ListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/target#_0
<br.com.caelum.iogi.collections.ListInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/x0#_0
<ognl.ASTEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_50
<ognl.ASTEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_51
<com.thoughtworks.xstream.converters.basic.IntConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<ognl.OgnlRuntime: java.lang.Class[] getParameterTypes(java.lang.reflect.Method)>/m#_0
<ognl.OgnlRuntime: java.lang.Class[] findParameterTypes(java.lang.Class,java.lang.reflect.Method)>/m#_0
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/method#_0
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/target#_0
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/argsArray#_0
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/l14#_427
<ognl.OgnlRuntime: boolean isTypeCompatible(java.lang.Object,java.lang.Class)>/object#_0
<ognl.OgnlRuntime: boolean areArgsCompatible(java.lang.Object[],java.lang.Class[])>/args#_0
<ognl.ArrayElementsAccessor$1: void <init>(ognl.ArrayElementsAccessor,java.lang.Object)>/$stack3
<ognl.OgnlRuntime: boolean isInstance(ognl.OgnlContext,java.lang.Object,java.lang.String)>/value#_0
<ognl.ArrayElementsAccessor$1: java.lang.Object nextElement()>/$stack3
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/context#_0
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/target#_0
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/member#_0
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/propertyName#_0
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/value#_0
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/context#_0
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/target#_0
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/member#_0
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/propertyName#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/m#_1080
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/context#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/target#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/propertyName#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/args#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/newArgs#_0
<ognl.OgnlRuntime: java.lang.reflect.Constructor getConvertedConstructorAndArgs(ognl.OgnlContext,java.lang.Object,java.util.List,java.lang.Object[],java.lang.Object[])>/args#_0
<ognl.OgnlRuntime: java.lang.reflect.Constructor getConvertedConstructorAndArgs(ognl.OgnlContext,java.lang.Object,java.util.List,java.lang.Object[],java.lang.Object[])>/newArgs#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/source#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/typeClass_$$A_3#_1143
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/m#_1137
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/args#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/context#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/result_$$A_2#_1150
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/propertyName#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/target#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/actualArgs#_0
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.String toString()>/method_$$A_2#_130
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/context#_0
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/source#_0
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/target#_0
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/propertyName#_0
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/args#_0
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/actualArgs#_1180
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/method#_1183
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/buffer#13_$$A_2#_1220
<ognl.OgnlRuntime: java.lang.Object callStaticMethod(ognl.OgnlContext,java.lang.String,java.lang.String,java.lang.Object[])>/args#_0
<ognl.OgnlRuntime: java.lang.Object callMethod(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object[])>/target#_0
<ognl.OgnlRuntime: java.lang.Object callMethod(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object[])>/args#_0
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/args#_0
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/actualArgs_$$A_1#_1355
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/actualArgs_$$A_2#_1358
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/propertyName#_0
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/target#_0
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/m_$$A_2#_1403
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/context#_0
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/propertyName#_0
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/target#_0
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/m#_1436
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/value#_0
<ognl.OgnlRuntime: java.util.Map getFields(java.lang.Class)>/targetClass#_0
<ognl.OgnlRuntime: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/name#_0
<ognl.OgnlRuntime: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/$stack19
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/propertyName#_0
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/target#_0
<org.springframework.beans.propertyeditors.CustomBooleanEditor: void setAsText(java.lang.String)>/text#_0
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/propertyName#_0
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/context#_0
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/target#_0
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/value#_0
<org.springframework.expression.spel.ast.OpGE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_36
<org.springframework.expression.spel.ast.OpGE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_37
<java.util.UUID: java.util.UUID fromString(java.lang.String)>/$stack26
<java.util.UUID: java.util.UUID fromString(java.lang.String)>/$stack8
<java.util.UUID: java.util.UUID fromString(java.lang.String)>/$stack11
<java.util.UUID: java.util.UUID fromString(java.lang.String)>/$stack14
<java.util.UUID: java.util.UUID fromString(java.lang.String)>/$stack17
<java.util.UUID: java.util.UUID fromString(java.lang.String)>/$stack20
<ognl.OgnlRuntime: java.util.List getDeclaredMethods(java.lang.Class,java.lang.String,boolean)>/propertyName#_0
<br.com.caelum.vraptor.serialization.xstream.Serializee: java.util.Set getParentTypes(java.lang.String,java.lang.Class)>/$stack25
<br.com.caelum.vraptor.serialization.xstream.Serializee: java.util.Set getParentTypes(java.lang.String,java.lang.Class)>/$stack26
<br.com.caelum.vraptor.serialization.xstream.Serializee: java.util.Set getParentTypes(java.lang.String,java.lang.Class)>/$stack14
<ognl.OgnlRuntime: java.lang.reflect.Method getGetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/propertyName#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getGetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/m#_1784
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/context#_0
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/target#_0
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/method#_0
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/propertyName#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/propertyName#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/m#_1820
<ognl.OgnlRuntime: boolean indexMethodCheck(java.util.List)>/fm#_1862
<com.google.inject.internal.util.$AbstractMapEntry: boolean equals(java.lang.Object)>/$stack5
<com.google.inject.internal.util.$AbstractMapEntry: boolean equals(java.lang.Object)>/$stack8
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/m_$$A_1#_1911
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack44
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack50
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack54
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack28
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack37
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack41
<ognl.OgnlRuntime: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.Class,java.lang.String)>/propertyName#_0
<ognl.OgnlRuntime: ognl.PropertyAccessor getPropertyAccessor(java.lang.Class)>/cls#_0
<ognl.OgnlRuntime: ognl.ElementsAccessor getElementsAccessor(java.lang.Class)>/cls#_0
<ognl.OgnlRuntime: ognl.NullHandler getNullHandler(java.lang.Class)>/cls#_0
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/forClass#_0
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/c_$$A_1#_2164
<ognl.OgnlRuntime: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/name#_0
<ognl.OgnlRuntime: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/source#_0
<ognl.OgnlRuntime: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/name#_0
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/value#_0
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/target#_0
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlRuntime: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Class,java.lang.String)>/name#_0
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/index#_0
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/name#_0
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/source#_0
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/args#_2260
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/index#_0
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/value#_0
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/name#_0
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: boolean checkCandidate(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack15
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: boolean checkCandidate(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack19
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: boolean isCompatible(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/$stack5
<ognl.OgnlRuntime: java.lang.reflect.Method getWriteMethod(java.lang.Class,java.lang.String)>/name#_0
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/root#_78
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack29
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/o#_104
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/args#_80
<ognl.ASTCtor: java.lang.String toString()>/$stack54
<ognl.ASTCtor: java.lang.String toString()>/$stack47
<ognl.ASTCtor: java.lang.String toString()>/$stack28
<org.picocontainer.behaviors.AbstractBehavior: boolean hasLifecycle(java.lang.Class)>/type#_0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: boolean requestingStaticFile(javax.servlet.http.HttpServletRequest)>/request#_0
<com.google.common.collect.Iterators$7: java.lang.Object computeNext()>/element#_648
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack236
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack268
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack241
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack186
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack220
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack190
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack194
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack121
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack72
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack101
<org.springframework.core.style.StylerUtils: java.lang.String style(java.lang.Object)>/value#_0
<net.vidageek.mirror.invoke.MethodHandlerByName: java.lang.reflect.Method getMethod(java.lang.Object[])>/$stack7
<com.google.common.collect.LinkedListMultimap$1: int size()>/$stack3
<sun.security.pkcs.ContentInfo: java.lang.String toString()>/$stack12
<org.picocontainer.injectors.MethodInjector: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack6
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/download#_83
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack11
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack14
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/download#_153
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Number convert(java.lang.Number)>/source#_0
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Number convert(java.lang.Number)>/$stack2
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Object convert(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/object#_0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/object#_0
<org.springframework.util.ObjectUtils: java.lang.Object[] toObjectArray(java.lang.Object)>/source#_0
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/o2#_0
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack59
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack58
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack54
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack53
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack49
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack48
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack44
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack43
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack39
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack38
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack34
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack33
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack29
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack28
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack24
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack23
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack19
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/$stack18
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>/$stack30
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>/$stack28
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>/$stack26
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>/$stack24
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>/$stack22
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>/$stack20
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>/$stack18
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>/$stack16
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>/$stack14
<java.util.Collections: void swap(java.util.List,int,int)>/$stack4
<org.springframework.util.ObjectUtils: java.lang.String identityToString(java.lang.Object)>/obj#_0
<org.springframework.util.ObjectUtils: java.lang.String getIdentityHexString(java.lang.Object)>/obj#_0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/$stack30
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/$stack28
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/$stack26
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/$stack24
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/$stack22
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/$stack20
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/$stack18
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/$stack16
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/$stack14
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack16
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#2#_58
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack16
<ognl.ASTEval: java.lang.String toString()>/$stack4
<ognl.ASTEval: java.lang.String toString()>/$stack8
<com.google.gson.internal.bind.DateTypeAdapter: java.util.Date read(com.google.gson.stream.JsonReader)>/$stack4
<com.google.gson.internal.bind.DateTypeAdapter: java.util.Date deserializeToDate(java.lang.String)>/json#_0
<com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.Date)>/value#_0
<org.springframework.expression.spel.ast.OpLE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_37
<org.springframework.expression.spel.ast.OpLE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_38
<org.mockito.internal.configuration.DefaultInjectionEngine: java.util.List selectMockCandidateOnName(java.util.Collection,java.lang.String)>/mock#_79
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: int compareTo(java.lang.Object)>/$stack2
<com.google.gson.internal.bind.SqlDateTypeAdapter: java.sql.Date read(com.google.gson.stream.JsonReader)>/$stack7
<com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Date)>/value#_0
<java.nio.file.FileSystems$DefaultFileSystemHolder: java.nio.file.spi.FileSystemProvider getDefaultProvider()>/l5#_115
<com.google.gson.DefaultDateTypeAdapter: com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/src#_0
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/patDir_$$A_1#_101
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/$stack91
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/$stack70
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/patDir_$$A_4#_142
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/$stack64
<com.google.gson.DefaultDateTypeAdapter: java.util.Date deserializeToDate(com.google.gson.JsonElement)>/$stack7
<com.google.gson.DefaultDateTypeAdapter: java.util.Date deserializeToDate(com.google.gson.JsonElement)>/$stack22
<com.google.gson.DefaultDateTypeAdapter: java.util.Date deserializeToDate(com.google.gson.JsonElement)>/$stack17
<br.com.caelum.iogi.reflection.NewObject$ScalaSetter$1: boolean accepts(java.lang.Object)>/$stack2
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/subPat#_184
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/subStr#_185
<com.google.gson.DefaultDateTypeAdapter: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/$stack4
<ognl.ExpressionSyntaxException: void <init>(java.lang.String,java.lang.Throwable)>/expression#_0
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withArgs(java.lang.Class[])>/$stack2
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withAnyArgs()>/$stack5
<sun.util.locale.provider.LocaleServiceProviderPool: void <init>(java.lang.Class)>/l3#_130
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/argName#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/ref#_105
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack66
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>/l9#_288
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/ref#2_$$A_1#_110
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>/l12#_292
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack61
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/ref#5#_124
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack49
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack47
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack45
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack43
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack40
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack35
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/ref#32#_181
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/elementType#33#_182
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/value#_0
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>/l4#_320
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object evaluate(java.lang.Object)>/$stack4
<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandOne#_39
<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/operandTwo#_40
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/innerBeanName#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/innerBd#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/actualInnerBeanName_$$A_2#_261
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack21
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack24
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack65
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/argName#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.String adaptInnerBeanName(java.lang.String)>/innerBeanName#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.String adaptInnerBeanName(java.lang.String)>/actualInnerBeanName_$$A_1#_301
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/$stack6
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/refName_$$A_1#_311
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/argName#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>/$stack11
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>/requiredType#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>/beanName#_253
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>/$stack28
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>/$stack17
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>/$stack10
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean containsBeanDefinition(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>/m#_364
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class)>/type#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/argName#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/$stack14
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/$stack18
<com.thoughtworks.xstream.converters.collections.CollectionConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack4
<com.thoughtworks.xstream.converters.collections.CollectionConverter: java.lang.Object createCollection(java.lang.Class)>/$stack4_$$A_2
<com.thoughtworks.xstream.core.TreeMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/item#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/beanName#4_$$A_1#_304
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/type#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/beanName#4_$$A_4#_341
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/beanName#4_$$A_5#_374
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/beanName#4_$$A_8#_353
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/beanName#4_$$A_10#_365
<org.picocontainer.converters.IntegerConverter: java.lang.Integer convert(java.lang.String)>/paramValue#_0
<org.picocontainer.converters.IntegerConverter: java.lang.Object convert(java.lang.String)>/x0#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class)>/type#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)>/type#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)>/beanName#_396
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)>/$stack23
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/readMethod#_0
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/writeMethod#_0
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/$stack36
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/writeMethodToUse_$$A_2#_73
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/$stack23
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/beanName#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/beanName_$$A_2#_480
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method getWriteMethodForActualAccess()>/$stack8
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class getPropertyType()>/$stack10
<java.security.Signature$Delegate: void chooseFirstProvider()>/l3_$$A_3#_1062
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.DependencyDescriptor)>/beanName#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isBeanEligibleForMetadataCaching(java.lang.String)>/beanName#_0
<java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.SecureRandom)>/l6_$$A_3#_1101
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void preInstantiateSingletons()>/beanName#_559
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState,java.lang.Class)>/result#_135
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/beanName#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void resetBeanDefinition(java.lang.String)>/bdName#2#_669
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/beanName#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack11
<ognl.ASTShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v1#_49
<ognl.ASTShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v2#_50
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack11
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack15
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandlerTest: void shouldRegisterInterceptorsOnRegistry()>/$stack2
<ognl.ObjectPropertyAccessor: java.lang.Object getPossibleProperty(java.util.Map,java.lang.Object,java.lang.String)>/target#_0
<ognl.ObjectPropertyAccessor: java.lang.Object getPossibleProperty(java.util.Map,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/beanName#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/value_$$A_2#_716
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/type#_0
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/ognlContext#_82
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/target#_0
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/name#_0
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/value#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/strVal#9_$$A_1#_737
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/strVal#9_$$A_2#_758
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/bd#18#_766
<ognl.ObjectPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ObjectPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/name#_145
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/context#_0
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/name#_160
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/value#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/requiredType#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/autowiringValue_$$A_2#_835
<com.thoughtworks.xstream.converters.extended.ColorConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack20
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/beanName#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/autowiringType#11#_842
<org.springframework.context.support.AbstractApplicationContext$1: java.lang.String getSystemAttribute(java.lang.String)>/propertyName#_0
<ognl.ObjectMethodAccessor: java.lang.Object callStaticMethod(java.util.Map,java.lang.Class,java.lang.String,java.lang.Object[])>/args#_0
<net.vidageek.mirror.invoke.MethodHandlerByMethod: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/clazz#_0
<net.vidageek.mirror.invoke.MethodHandlerByMethod: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/method#_0
<ognl.ObjectMethodAccessor: java.lang.Object callMethod(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])>/target#_0
<ognl.ObjectMethodAccessor: java.lang.Object callMethod(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])>/args#_0
<net.vidageek.mirror.invoke.MethodHandlerByMethod: java.lang.Object withArgs(java.lang.Object[])>/$stack6
<net.vidageek.mirror.invoke.MethodHandlerByMethod: java.lang.Object withArgs(java.lang.Object[])>/$stack5
<net.vidageek.mirror.invoke.MethodHandlerByMethod: java.lang.Object withArgs(java.lang.Object[])>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatus()>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatusWhenMovingToLogic()>/$stack9
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack8
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack13
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/fieldName#_0
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendError()>/$stack2
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/string#_75
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/$stack11
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/method_$$A_3#_78
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack10
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendErrorWithMessage()>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack11
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSetStatusCode()>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/writer#_135
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteStringBody()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteInputStreamBody()>/$stack5
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteReaderBody()>/$stack5
<ognl.ComparisonExpression: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack18
<ognl.ComparisonExpression: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack26
<br.com.caelum.vraptor.deserialization.JsonDeserializer: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/javaMethod#_53
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void chooseParam(java.lang.Class[],java.lang.Object[],java.lang.Object)>/deserialized#_0
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void aliasParams(java.lang.reflect.Method,java.lang.Class[],com.thoughtworks.xstream.XStream)>/method#_0
<net.vidageek.mirror.reflect.DefaultFieldReflector: java.lang.reflect.Field onClass(java.lang.Class)>/clazz#_0
<net.vidageek.mirror.reflect.DefaultFieldReflector: java.lang.reflect.Field onClass(java.lang.Class)>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldSetRequestAttribute()>/$stack3
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/pageResult#_83
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/pageResult#_93
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/pageResult#_110
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/logicResult#_119
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/logicResult#_129
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/logicResult#_139
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/logicResult#_150
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/pageResult#_160
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/status#_171
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/status#_182
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/status#_193
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/status#_204
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldIncludeExtractedNameWhenSimplyIncluding()>/$stack9
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldNotIncludeTheAttributeWhenTheValueIsNull()>/$stack3
<javassist.compiler.MemberResolver: javassist.CtClass searchImports(java.lang.String)>/pac#_422
<org.mockito.cglib.core.DuplicatesPredicate: boolean evaluate(java.lang.Object)>/$stack2
<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: void setBeanName(java.lang.String)>/name#_0
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>/$stack8
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>/$stack8
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: java.lang.Boolean convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: java.lang.Boolean convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x0#_0
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/x1#_0
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: java.lang.String toString(java.lang.Object)>/$stack2
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: java.lang.String getName(java.text.AttributedCharacterIterator$Attribute)>/attribute#_0
<java.util.AbstractMap: boolean equals(java.lang.Object)>/l5#_489
<java.util.AbstractMap: boolean equals(java.lang.Object)>/$stack16
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyFromCollection(java.util.Collection)>/onlyElement#_340
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void shouldRegisterTypesOnDeserializers()>/$stack2
<org.picocontainer.DefaultPicoContainer$KnowsContainerAdapter: java.lang.Object getComponentInstance(java.lang.reflect.Type)>/$stack2
<org.springframework.web.context.request.AbstractRequestAttributesScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/name#_0
<net.vidageek.mirror.reflect.DefaultReflectionHandler: java.lang.reflect.Field field(java.lang.String)>/$stack7
<org.springframework.web.context.request.AbstractRequestAttributesScope: java.lang.Object resolveContextualObject(java.lang.String)>/key#_0
<org.springframework.core.type.classreading.CachingMetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(org.springframework.core.io.Resource)>/resource#_0
<org.picocontainer.injectors.SingleMemberInjector: void nullCheck(java.lang.reflect.AccessibleObject,int,org.picocontainer.injectors.ParameterNameBinding,java.lang.Object)>/member#_0
<org.picocontainer.injectors.SingleMemberInjector: boolean isNullParamAllowed(java.lang.reflect.AccessibleObject,int)>/member#_0
<org.springframework.web.context.request.FacesRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>/name#_0
<org.springframework.web.context.request.FacesRequestAttributes: void registerDestructionCallback(java.lang.String,java.lang.Runnable,int)>/name#_0
<org.springframework.web.context.request.FacesRequestAttributes: java.lang.Object resolveReference(java.lang.String)>/key#_0
<org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters: java.lang.Object[] getParameterArguments(org.picocontainer.PicoContainer)>/$stack24
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack25
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack31
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack35
<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.lang.Class loadClass(java.lang.String)>/name#_0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$1: void defaultWriteObject()>/$stack22
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$1: void defaultWriteObject()>/defaultType#_206
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void register(java.lang.Class,java.lang.Class)>/requiredType#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void checkInitialization(java.lang.Class,java.lang.Class)>/requiredType#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void checkInitialization(java.lang.Class,java.lang.Class)>/type#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerComponentFactory(java.lang.Class,java.lang.Class)>/requiredType#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerComponentFactory(java.lang.Class,java.lang.Class)>/type#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: boolean isComponentFactory(java.lang.Class,java.lang.Class)>/type#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack31
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: boolean alreadyRegistered(java.lang.Class)>/interfaceType#_0
<org.hamcrest.core.IsEqual: boolean matches(java.lang.Object)>/arg#_0
<org.hamcrest.core.IsEqual: boolean matches(java.lang.Object)>/$stack2
<org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object)>/o1#_0
<org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object)>/o2#_0
<org.hamcrest.core.IsEqual: boolean areArraysEqual(java.lang.Object,java.lang.Object)>/o1#_0
<org.hamcrest.core.IsEqual: boolean areArraysEqual(java.lang.Object,java.lang.Object)>/o2#_0
<org.hamcrest.core.IsEqual: boolean areArrayLengthsEqual(java.lang.Object,java.lang.Object)>/o1#_0
<org.hamcrest.core.IsEqual: boolean areArrayLengthsEqual(java.lang.Object,java.lang.Object)>/o2#_0
<org.hamcrest.core.IsEqual: boolean areArrayElementsEqual(java.lang.Object,java.lang.Object)>/o1#_0
<org.hamcrest.core.IsEqual: boolean areArrayElementsEqual(java.lang.Object,java.lang.Object)>/o2#_0
<org.springframework.beans.PropertyMatches: org.springframework.beans.PropertyMatches forProperty(java.lang.String,java.lang.Class)>/propertyName#_0
<org.springframework.beans.PropertyMatches: java.lang.String[] calculateMatches(java.beans.PropertyDescriptor[],int)>/$stack14
<org.hamcrest.TypeSafeMatcher: boolean matches(java.lang.Object)>/item#_0
<org.hamcrest.TypeSafeMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/item#_0
<org.mockito.asm.MethodWriter: void visitLdcInsn(java.lang.Object)>/cst#_0
<org.mockito.asm.MethodWriter: void writeFrameTypes(int,int)>/$stack54
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/parentReferenceKey#_44
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/type#_0
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/converter#_0
<br.com.caelum.vraptor.validator.ValidatorAcceptanceTest: void setup()>/$stack8
<br.com.caelum.vraptor.validator.ValidatorAcceptanceTest: void setup()>/$stack7
<br.com.caelum.vraptor.validator.ValidatorAcceptanceTest: void setup()>/$stack6
<br.com.caelum.vraptor.validator.ValidatorAcceptanceTest: void setup()>/$stack5
<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap fromEntryList(java.util.List)>/$stack6
<com.google.common.collect.Collections2$FilteredCollection: com.google.common.collect.Collections2$FilteredCollection createCombined(com.google.common.base.Predicate)>/$stack4
<org.springframework.web.util.WebUtils: void <clinit>()>/$stack4
<br.com.caelum.iogi.conversion.BigIntegerConverter: java.math.BigInteger convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.reflection.ClassConstructor: java.util.List argumentTargets()>/$stack17
<br.com.caelum.iogi.reflection.ClassConstructor: java.util.List argumentTargets()>/$stack19
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Map scanBasePackages(java.util.List,br.com.caelum.vraptor.scan.ClasspathResolver)>/basePackage#_82
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Map scanBasePackages(java.util.List,br.com.caelum.vraptor.scan.ClasspathResolver)>/resolver#_0
<ognl.OgnlOps: java.math.BigInteger bigIntValue(java.lang.Object)>/$stack15
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void add(java.lang.Object,java.lang.reflect.Method,java.lang.Object)>/instance#_0
<ognl.OgnlOps: java.math.BigDecimal bigDecValue(java.lang.Object)>/$stack26
<ognl.OgnlOps: java.math.BigDecimal bigDecValue(java.lang.Object)>/$stack12
<com.thoughtworks.xstream.io.json.JsonWriter: void addLabel(java.lang.String)>/name#_0
<com.thoughtworks.xstream.io.json.JsonWriter: void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type)>/value#_0
<com.thoughtworks.xstream.core.util.PrioritizedList: void add(java.lang.Object,int)>/item#_0
<org.springframework.web.context.WebApplicationContext: void <clinit>()>/$stack3
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void setup()>/chain#_63
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void setup()>/$stack9
<com.google.common.collect.Sets: java.util.Set filter(java.util.Set,com.google.common.base.Predicate)>/$stack15
<com.google.common.collect.Sets: java.util.SortedSet filter(java.util.SortedSet,com.google.common.base.Predicate)>/$stack14
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/$stack22
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/config#_64
<org.picocontainer.injectors.SetterInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.injectors.SetterInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentImplementation#_0
<org.picocontainer.injectors.SetterInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.String,java.lang.String,boolean,boolean)>/componentKey#_0
<org.picocontainer.injectors.SetterInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.String,java.lang.String,boolean,boolean)>/componentImplementation#_0
<org.springframework.beans.factory.BeanCurrentlyInCreationException: void <init>(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.BeanCurrentlyInCreationException: void <init>(java.lang.String,java.lang.String)>/beanName#_0
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void setup()>/$stack4
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void setup()>/$stack3
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void setup()>/$stack2
<br.com.caelum.vraptor.validator.BeanValidatorTest: void setup()>/$stack11
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack25
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack27
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack30
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set doFindPathMatchingJarResources(org.springframework.core.io.Resource,java.lang.String)>/$stack44
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set retrieveMatchingFiles(java.io.File,java.lang.String)>/$stack20
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set retrieveMatchingFiles(java.io.File,java.lang.String)>/$stack13
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: void doRetrieveMatchingFiles(java.lang.String,java.io.File,java.util.Set)>/$stack24
<org.picocontainer.injectors.IterativeInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/componentKey#_0
<org.picocontainer.injectors.IterativeInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/componentImplementation#_0
<org.picocontainer.injectors.IterativeInjector: org.picocontainer.NameBinding makeParameterNameImpl(java.lang.reflect.AccessibleObject)>/member#_0
<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>/msg#_0
<com.thoughtworks.xstream.converters.basic.BigIntegerConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<com.google.common.collect.LinkedHashMultimap: java.util.Collection createCollection(java.lang.Object)>/key#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter$ConvertiblePair getRequiredTypeInfo(java.lang.Object,java.lang.Class)>/$stack8
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter$ConvertiblePair getRequiredTypeInfo(java.lang.Object,java.lang.Class)>/$stack7
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/clazz#_52
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void setup()>/chain#_58
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void setup()>/$stack5
<ognl.ArrayElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/target#_0
<org.springframework.core.type.classreading.SimpleMetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(org.springframework.core.io.Resource)>/resource#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerializationTest: void setup()>/response#_32
<org.springframework.context.expression.MapAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/value#_43
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void setUp()>/$stack9
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void setUp()>/$stack8
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void setUp()>/$stack7
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack18
<com.google.common.collect.LinkedListMultimap$AsMapEntries$1: java.util.Map$Entry next()>/key#_1011
<javassist.compiler.MemberCodeGen: void addFinally(java.util.ArrayList,javassist.compiler.ast.Stmnt)>/ret#_278
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack6
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack7
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack9
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack8
<org.springframework.web.context.request.ServletRequestAttributes: void <clinit>()>/$stack3
<org.springframework.web.context.request.ServletRequestAttributes: void registerSessionDestructionCallback(java.lang.String,java.lang.Runnable)>/$stack7
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void setUp()>/$stack2
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void setUp()>/$stack6
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void setUp()>/$stack5
<javassist.compiler.MemberCodeGen: void atFieldRead(javassist.compiler.ast.ASTree)>/$stack7
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyProviderFactory: java.lang.Object createDependencyProvider(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>/beanName#_0
<org.springframework.expression.spel.standard.Tokenizer: void <init>(java.lang.String)>/$stack4
<org.springframework.expression.spel.standard.Tokenizer: void lexQuotedStringLiteral()>/$stack13
<org.springframework.expression.spel.standard.Tokenizer: void lexDoubleQuotedStringLiteral()>/$stack13
<org.springframework.expression.spel.standard.Tokenizer: void lexNumericLiteral(boolean)>/$stack88
<org.springframework.expression.spel.standard.Tokenizer: void pushHexIntToken(char[],boolean,int,int)>/$stack27
<org.springframework.expression.spel.standard.Tokenizer: void pushHexIntToken(char[],boolean,int,int)>/$stack18
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: java.util.Collection normalizeList(java.lang.Object)>/$stack7
<org.springframework.core.convert.support.CharacterToNumberFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)>/targetType#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/object#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/object#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_12#_427
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void handleUnknownField(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)>/fieldName#_0
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void setUp()>/$stack16
<br.com.caelum.vraptor.http.route.RouteBuilderTest: br.com.caelum.vraptor.http.route.DefaultRouteBuilder newBuilder(java.lang.String)>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: br.com.caelum.vraptor.http.route.DefaultRouteBuilder newBuilder(java.lang.String)>/$stack7
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest: void setUp()>/$stack4
<org.picocontainer.DefaultPicoContainer$LateInstance: void <init>(java.lang.Object,java.lang.Object)>/componentKey#_0
<org.picocontainer.DefaultPicoContainer$LateInstance: void <init>(java.lang.Object,java.lang.Object,org.picocontainer.DefaultPicoContainer$1)>/x0#_0
<org.springframework.beans.factory.support.DisposableBeanAdapter: void destroy()>/$stack44
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void setUp()>/$stack7
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void setUp()>/$stack6
<org.springframework.beans.factory.support.DisposableBeanAdapter: void invokeCustomDestroyMethod(java.lang.reflect.Method)>/$stack52
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.lang.Object writeReplace()>/$stack10
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.lang.Object writeReplace()>/$stack9
<net.vidageek.mirror.reflect.DefaultAllReflectionHandler: net.vidageek.mirror.reflect.dsl.AllAnnotationsHandler annotations()>/$stack2
<br.com.caelum.vraptor.http.VRaptorRequest: void <init>(javax.servlet.http.HttpServletRequest)>/request#_0
<br.com.caelum.vraptor.http.route.DefaultTypeFinderTest: void shouldGetTypesCorrectly()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultTypeFinderTest: void shouldGetTypesCorrectlyOnInheritance()>/$stack16
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack9
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void areEquals()>/$stack11
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void areEquals()>/$stack18
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void areEquals()>/$stack25
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void areEquals()>/$stack32
<org.springframework.context.expression.BeanExpressionContextAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack6
<ognl.ArrayPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/index_$$A_4#_82
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/name#_0
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/index#_104
<java.lang.AssertionError: void <init>(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack3
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack3
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnConstructor()>/$stack3
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnAcceptsMethod()>/$stack3
<com.google.common.collect.AbstractMultimap$RandomAccessWrappedList: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection)>/key#_0
<br.com.caelum.vraptor.http.ognl.AbstractOgnlTestSupport: void configOgnl(br.com.caelum.vraptor.core.Converters)>/converters#_0
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void init()>/$stack5
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void init()>/$stack9
<org.springframework.expression.ParseException: void <init>(java.lang.String,int,java.lang.String)>/expressionString#_0
<com.google.common.collect.SingletonImmutableMap: com.google.common.collect.ImmutableCollection values()>/$stack3
<ognl.NumberElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/target#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addIndexedArgumentValue(int,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/newValue#_0
<org.picocontainer.injectors.ConstructorInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean,boolean)>/componentKey#_0
<org.picocontainer.injectors.ConstructorInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean,boolean)>/componentImplementation#_0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: javax.xml.namespace.QName createQName(java.lang.String)>/name#_0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: javax.xml.namespace.QName createQName(java.lang.String)>/local_$$A_2#_212
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/sortedMatchingConstructor#_140
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack89_$$A_4
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/greediestConstructor_$$A_1#_141
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<org.springframework.context.expression.StandardBeanExpressionResolver: java.lang.Object evaluate(java.lang.String,org.springframework.beans.factory.config.BeanExpressionContext)>/conversionService#_131
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)>/replacedSource#_0
<com.google.gson.internal.bind.TypeAdapters$16: java.lang.StringBuilder read(com.google.gson.stream.JsonReader)>/$stack5
<org.springframework.beans.propertyeditors.PropertiesEditor: void setValue(java.lang.Object)>/value#_0
<org.springframework.beans.CachedIntrospectionResults: org.springframework.beans.CachedIntrospectionResults forClass(java.lang.Class)>/$stack16
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/comparator#_75
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)>/$stack25_$$A_2
<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>/$stack14
<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>/$stack23
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void setup()>/chain#_62
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void setup()>/$stack5
<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor buildGenericTypeAwarePropertyDescriptor(java.lang.Class,java.beans.PropertyDescriptor)>/$stack6
<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor buildGenericTypeAwarePropertyDescriptor(java.lang.Class,java.beans.PropertyDescriptor)>/$stack7
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/$stack21
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack41
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack30
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack21_$$A_2
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Class getTypeForFactoryBean(org.springframework.beans.factory.FactoryBean)>/factoryBean#_0
<br.com.caelum.vraptor.view.DefaultPageResultTest: void setup()>/$stack17
<br.com.caelum.vraptor.view.DefaultPageResultTest: void setup()>/$stack16
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/factory#_0
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/converters#_0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: org.springframework.beans.factory.FactoryBean getFactoryBean(java.lang.String,java.lang.Object)>/beanName#_0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: void removeSingleton(java.lang.String)>/beanName#_0
<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>/$stack78
<junit.framework.ComparisonFailure: java.lang.String getMessage()>/$stack2
<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>/$stack18
<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>/$stack24
<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>/$stack28
<br.com.caelum.vraptor.http.VRaptorResponse: void <init>(javax.servlet.http.HttpServletResponse)>/response#_0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldComplainWhenUnableToInstantiateAnInterceptor()>/$stack7
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack17
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack17
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setValue(java.lang.Object)>/$stack5
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setValue(java.lang.Object)>/value#_0
<sun.security.pkcs.SigningCertificateInfo: void parse(byte[])>/$stack21
<org.springframework.context.event.AbstractApplicationEventMulticaster: boolean supportsEvent(org.springframework.context.ApplicationListener,java.lang.Class,java.lang.Class)>/listener#_0
<com.google.gson.JsonSyntaxException: void <init>(java.lang.String,java.lang.Throwable)>/msg#_0
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void setup()>/$stack4
<org.springframework.util.StringUtils: java.lang.String applyRelativePath(java.lang.String,java.lang.String)>/$stack12
<org.springframework.util.StringUtils: java.lang.String applyRelativePath(java.lang.String,java.lang.String)>/$stack8
<org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>/$stack28
<org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>/$stack23
<org.springframework.util.StringUtils: java.util.Locale parseLocaleString(java.lang.String)>/language#_655
<org.picocontainer.DefaultPicoContainer: void <init>(org.picocontainer.ComponentFactory,org.picocontainer.LifecycleStrategy,org.picocontainer.PicoContainer,org.picocontainer.ComponentMonitor)>/parent#_0
<org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String,boolean,boolean)>/str#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Object)>/$stack15
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,java.util.Properties,org.picocontainer.Parameter[])>/componentImplementationOrInstance#_0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getLocalInstance(org.picocontainer.ComponentAdapter)>/typedComponentAdapter#_0
<org.picocontainer.DefaultPicoContainer: void startAdapters()>/adapter_$$A_1_$$A_1#_991
<org.picocontainer.DefaultPicoContainer: void addAdapterIfStartable(org.picocontainer.ComponentAdapter)>/adapter#_0
<javax.xml.namespace.QName: void <init>(java.lang.String)>/localPart#_0
<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>/localPart#_0
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void writeAttributeValue(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String)>/text#_0
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void writeText(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String)>/text#_0
<com.google.gson.stream.JsonWriter: void writeDeferredName()>/$stack2
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>/value#_0
<com.google.gson.internal.LazilyParsedNumber: int intValue()>/$stack7
<com.google.gson.internal.LazilyParsedNumber: long longValue()>/$stack6
<com.google.gson.internal.LazilyParsedNumber: java.lang.Object writeReplace()>/$stack2
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/context#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/key#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/proxifier#_118
<br.com.caelum.iogi.conversion.BigDecimalConverter: java.math.BigDecimal convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)>/typeAdapter#_0
<java.lang.invoke.LambdaForm$Name: java.lang.String exprString()>/$stack10
<org.picocontainer.converters.UrlConverter: java.net.URL convert(java.lang.String)>/paramValue#_0
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String)>/l5#_317
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguageTag(sun.util.locale.LanguageTag)>/$stack20
<br.com.caelum.vraptor.core.JstlLocalization: java.util.Locale findLocalefromString(java.lang.String)>/$stack15
<br.com.caelum.vraptor.core.JstlLocalization: java.util.Locale findLocalefromString(java.lang.String)>/$stack13
<br.com.caelum.vraptor.core.JstlLocalization: java.util.Locale findLocalefromString(java.lang.String)>/$stack12
<br.com.caelum.vraptor.core.JstlLocalization: java.util.Locale findLocalefromString(java.lang.String)>/$stack10
<br.com.caelum.vraptor.core.JstlLocalization: java.util.Locale findLocalefromString(java.lang.String)>/$stack9
<br.com.caelum.vraptor.core.JstlLocalization: java.util.Locale findLocalefromString(java.lang.String)>/$stack8
<sun.security.provider.PolicyFile: boolean init(java.net.URL,sun.security.provider.PolicyFile$PolicyInfo)>/l8#_625
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/l13_$$A_2#_443
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)>/keyTypeAdapter#_0
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)>/valueTypeAdapter#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.core.convert.TypeDescriptor getTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/type#_279
<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/l7#_801
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/l6#_1227
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/l7#_1234
<sun.security.provider.PolicyFile: void addPerms(java.security.Permissions,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>/$stack14
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void setUp()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void setup()>/chain#_40
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void setup()>/$stack9
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/x0#_0
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: void <init>(int,java.lang.reflect.AccessibleObject,java.lang.String,org.picocontainer.injectors.SingleMemberInjector$1)>/x1#_0
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: void <init>(int,java.lang.reflect.AccessibleObject,java.lang.String,org.picocontainer.injectors.SingleMemberInjector$1)>/x2#_0
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void config()>/$stack2
<javassist.CtClassType: void makeFieldCache(javassist.CtMember$Cache)>/finfo#_840
<javassist.CtClassType: void makeBehaviorCache(javassist.CtMember$Cache)>/minfo#_850
<net.vidageek.mirror.DefaultClassController: net.vidageek.mirror.invoke.dsl.InvocationHandler invoke()>/$stack2
<net.vidageek.mirror.DefaultClassController: net.vidageek.mirror.set.dsl.SetterHandler set()>/$stack2
<net.vidageek.mirror.DefaultClassController: net.vidageek.mirror.get.dsl.GetterHandler get()>/$stack2
<net.vidageek.mirror.DefaultClassController: net.vidageek.mirror.reflect.dsl.ReflectionHandler reflect()>/$stack2
<net.vidageek.mirror.DefaultClassController: net.vidageek.mirror.reflect.dsl.AllReflectionHandler reflectAll()>/$stack2
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: org.joda.time.DateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack6
<org.springframework.core.OverridingClassLoader: java.io.InputStream openStreamForClass(java.lang.String)>/$stack5
<com.thoughtworks.xstream.converters.extended.FileConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void setup()>/$stack16
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldUseCollectionConverterWhenItExists()>/$stack7
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResources()>/$stack25
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithQueryString()>/$stack26
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithJSessionId()>/$stack26
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsFalseForNonStaticResources()>/$stack23
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void setup()>/$stack11
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object,boolean)>/source#_0
<com.thoughtworks.xstream.core.util.FastField: void <init>(java.lang.Class,java.lang.String)>/name#_0
<com.google.gson.internal.bind.TypeAdapters$17: java.lang.StringBuffer read(com.google.gson.stream.JsonReader)>/$stack5
<com.thoughtworks.xstream.converters.basic.URIConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<java.beans.Introspector: void processPropertyDescriptors()>/l5_$$A_2#_654
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_2#_652
<java.beans.Introspector: void processPropertyDescriptors()>/l5_$$A_5#_684
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_4#_682
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_11#_742
<java.beans.Introspector: void processPropertyDescriptors()>/l5_$$A_9#_747
<java.beans.Introspector: void processPropertyDescriptors()>/l5_$$A_11#_815
<br.com.caelum.iogi.reflection.NewObject$JavaSetter: void <init>(java.lang.reflect.Method,java.lang.Object)>/setter#_0
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerOn(java.lang.Class,boolean)>/type#_0
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerOn(java.lang.Class)>/type#_0
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void register(java.lang.Class,boolean)>/type#_0
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerPrototypeScopedComponentsOn()>/prototypeComponent#_121
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerCachedComponentsOn()>/cachedComponent#_127
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerComponents(java.util.Collection)>/type#_174
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultRouter: br.com.caelum.vraptor.http.route.RouteBuilder builderFor(java.lang.String)>/$stack5
<br.com.caelum.vraptor.http.route.DefaultRouter: br.com.caelum.vraptor.resource.ResourceMethod parse(java.lang.String,br.com.caelum.vraptor.resource.HttpMethod,br.com.caelum.vraptor.http.MutableRequest)>/route#_92
<com.google.inject.internal.util.$Preconditions: void checkArgument(boolean,java.lang.Object)>/$stack3
<com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>/$stack3
<org.springframework.beans.PropertyBatchUpdateException: void printStackTrace(java.io.PrintStream)>/$stack8
<org.springframework.beans.PropertyBatchUpdateException: void printStackTrace(java.io.PrintWriter)>/$stack8
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void worksAsRegexWhenUsingParameters()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void worksWithBasicRegexEvaluation()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldTranslateAsteriskAsEmpty()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldTranslatePatternArgs()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldTranslatePatternArgsWithRegex()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldTranslatePatternArgsWithMultipleRegexes()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldTranslatePatternArgNullAsEmpty()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldUseConverterIfItExists()>/$stack20
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldTranslatePatternArgInternalNullAsEmpty()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldMatchPatternLazily()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldMatchPatternLazily()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldMatchMoreThanOneVariable()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldBeGreedyWhenIPutAnAsteriskOnExpression()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void fillURLWithGreedyParameters()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void fillURLWithoutGreedyParameters()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void whenNoParameterPatternsAreGivenShouldMatchAnything()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void whenParameterPatternsAreGivenShouldMatchAccordingToGivenPatterns()>/$stack8
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack4
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/type#_0
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/converter#_0
<org.springframework.util.ResourceUtils: boolean isUrl(java.lang.String)>/resourceLocation#_0
<org.springframework.util.ResourceUtils: java.io.File getFile(java.net.URL,java.lang.String)>/$stack10
<org.springframework.util.ResourceUtils: java.io.File getFile(java.net.URI,java.lang.String)>/$stack9
<org.springframework.beans.factory.BeanIsAbstractException: void <init>(java.lang.String)>/beanName#_0
<org.mockito.internal.creation.jmock.SearchingClassLoader: void <init>(java.lang.ClassLoader,java.lang.ClassLoader)>/parent#_0
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.ClassLoader combine(java.util.List)>/$stack9
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.ClassLoader combine(java.util.List)>/loader_$$A_1#_56
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildIndexedPropertyName(java.lang.String,int)>/$stack4
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildKeyedPropertyName(java.lang.String,java.lang.Object)>/$stack4
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/type#_0
<ognl.Ognl: java.lang.Object parseExpression(java.lang.String)>/expression#_0
<br.com.caelum.vraptor.restfulie.serialization.MethodValueSupportConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/root#_0
<org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>/$stack50
<org.springframework.util.ClassUtils: java.lang.String getClassFileName(java.lang.Class)>/$stack8
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: org.joda.time.DateMidnight convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack6
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor forObject(java.lang.Object)>/object#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/bean#_487
<com.thoughtworks.xstream.core.util.PresortedMap: void <init>(java.util.Comparator)>/comparator#_0
<com.thoughtworks.xstream.core.util.PresortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/key#_0
<com.thoughtworks.xstream.core.util.PresortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/value#_0
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>/$stack5
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyMergedBeanDefinitionPostProcessors(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)>/beanName#_0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/proxifier#_62
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/context#_0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/array_$$A_2#_72
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/key#_0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void setup()>/chain#_62
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void setup()>/$stack9
<com.thoughtworks.xstream.converters.collections.TreeSetConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<sun.security.x509.RDN: void <init>(sun.security.util.DerValue)>/$stack13
<com.thoughtworks.xstream.converters.collections.TreeSetConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/comparator#_63
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void checkDependencies(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,java.beans.PropertyDescriptor[],org.springframework.beans.PropertyValues)>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/beanName#_0
<org.springframework.util.PropertyPlaceholderHelper: java.lang.String parseStringValue(java.lang.String,org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver,java.util.Set)>/strVal#_0
<java.util.LinkedList: boolean addAll(int,java.util.Collection)>/l11#_423
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack12
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: com.thoughtworks.xstream.XStream getConfiguredXStream(java.lang.reflect.Method,java.lang.Class[])>/javaMethod#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/bean#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeInitMethods(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/bean#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeCustomInitMethod(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/bean#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void removeSingleton(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void access$0(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,java.lang.Object)>/l1#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void access$0(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,java.lang.Object)>/l2#_0
<com.thoughtworks.xstream.core.util.PresortedSet: void <init>(java.util.Comparator)>/comparator#_0
<br.com.caelum.iogi.reflection.NewObject$Setter: java.util.Collection settersIn(java.lang.Object)>/setterMethod_$$A_1#_67
<br.com.caelum.iogi.reflection.NewObject$Setter: java.util.Collection settersIn(java.lang.Object)>/setterMethod_$$A_3#_70
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>/$stack23
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/nextKey_$$A_2#_131
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack25
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack24
<com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/keyAdapter#_125
<com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/valueAdapter#_126
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void setUp()>/$stack7
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void setUp()>/$stack6
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void setUp()>/$stack4
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void setUp()>/$stack3
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/value#_0
<com.thoughtworks.xstream.converters.collections.BitSetConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack8
<com.google.gson.internal.bind.TypeAdapters$24: java.util.Locale read(com.google.gson.stream.JsonReader)>/locale#_612
<br.com.caelum.vraptor.scan.WebBasedClasspathResolverTest: void callerContextDifferentFromRequestedClassLoaderReturnsCurrentClassLoader()>/context#_15
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void setup()>/$stack3
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void setup()>/$stack2
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>/l2_$$A_2#_108
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>/l3_$$A_2#_112
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void setUp()>/$stack3
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void setUp()>/$stack2
<com.google.common.collect.ComputingConcurrentHashMap: java.lang.Object writeReplace()>/$stack11
<com.google.common.collect.ComputingConcurrentHashMap: java.lang.Object writeReplace()>/$stack10
<com.google.common.collect.ComputingConcurrentHashMap: java.lang.Object writeReplace()>/$stack9
<com.google.common.collect.ComputingConcurrentHashMap: java.lang.Object writeReplace()>/$stack8
<com.google.common.collect.ComputingConcurrentHashMap: java.lang.Object writeReplace()>/$stack3
<com.google.gson.internal.bind.TypeAdapters$15: java.math.BigInteger read(com.google.gson.stream.JsonReader)>/$stack6
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack42
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameter namedAfter(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameter namedAfter(br.com.caelum.iogi.reflection.Target)>/$stack11
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack3
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack2
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack9
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack8
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack7
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack6
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void config()>/$stack5
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.Parameter$Resolver resolve(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,org.picocontainer.ComponentAdapter,java.lang.reflect.Type,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/componentAdapter#_91
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.injectors.InjectInto makeInjectInto(org.picocontainer.ComponentAdapter)>/$stack2
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.injectors.InjectInto makeInjectInto(org.picocontainer.ComponentAdapter)>/$stack3
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/excludeKey#_186
<com.google.common.collect.MapMakerInternalMap: java.lang.Object writeReplace()>/$stack10
<com.google.common.collect.MapMakerInternalMap: java.lang.Object writeReplace()>/$stack9
<com.google.common.collect.MapMakerInternalMap: java.lang.Object writeReplace()>/$stack8
<com.google.common.collect.MapMakerInternalMap: java.lang.Object writeReplace()>/$stack7
<com.google.common.collect.MapMakerInternalMap: java.lang.Object writeReplace()>/$stack2
<org.springframework.util.Assert: void isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)>/$stack6
<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Method,int)>/method#_0
<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Constructor,int)>/constructor#_0
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void setUp()>/$stack6
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void setUp()>/$stack5
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void setUp()>/$stack4
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void setUp()>/$stack3
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void setUp()>/$stack2
<org.springframework.core.MethodParameter: org.springframework.core.MethodParameter forMethodOrConstructor(java.lang.Object,int)>/$stack12
<org.springframework.core.MethodParameter: org.springframework.core.MethodParameter forMethodOrConstructor(java.lang.Object,int)>/$stack10
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack12
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack11
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack10
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack9
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack8
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack7
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void setup()>/$stack6
<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void associateId(java.lang.Object,java.lang.Object)>/obj#_0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.lang.Object lookupId(java.lang.Object)>/obj#_0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary: boolean containsId(java.lang.Object)>/item#_0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void removeId(java.lang.Object)>/item#_0
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack9
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack8
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/result#_250
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack14
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack15
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack17
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue executeFunctionJLRMethod(org.springframework.expression.spel.ExpressionState,java.lang.reflect.Method)>/$stack35
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue executeFunctionJLRMethod(org.springframework.expression.spel.ExpressionState,java.lang.reflect.Method)>/method#_0
<org.springframework.core.convert.support.StringToEnumConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)>/targetType#_0
<com.google.common.collect.AbstractMapBasedMultiset: java.util.Set createElementSet()>/$stack2
<org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()>/$stack9
<org.springframework.core.io.ClassPathResource: java.net.URL getURL()>/$stack9
<org.springframework.core.convert.support.NumberToNumberConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)>/targetType#_0
<javassist.CtBehavior: void copy(javassist.CtBehavior,boolean,javassist.ClassMap)>/srcInfo#_44
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.ClassReflectionProvider getClassReflectionProvider(java.lang.Class)>/clazz#_0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.FieldReflectionProvider getFieldReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/target#_0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.FieldReflectionProvider getFieldReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/field#_0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.ConstructorReflectionProvider getConstructorReflectionProvider(java.lang.Class,java.lang.reflect.Constructor)>/clazz#_0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.MethodReflectionProvider getMethodReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/target#_0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.MethodReflectionProvider getMethodReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/clazz#_0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.MethodReflectionProvider getMethodReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/method#_0
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void setup()>/chain#_62
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void setup()>/$stack5
<org.mockito.asm.Frame: void execute(int,int,org.mockito.asm.ClassWriter,org.mockito.asm.Item)>/$stack87
<org.picocontainer.PicoBuilder: org.picocontainer.MutablePicoContainer build()>/newContainer#_198
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getValue()>/last_$$A_1#_181
<br.com.caelum.vraptor.http.route.RulesTest$1: void <init>(br.com.caelum.vraptor.http.route.RulesTest,br.com.caelum.vraptor.http.route.Router)>/x0#_0
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void setup()>/$stack3
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/baseResponse#_79
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/chain#_0
<org.springframework.beans.BeanUtils: java.beans.PropertyEditor findEditorByConvention(java.lang.Class)>/$stack11
<org.springframework.beans.BeanMetadataAttributeAccessor: void setAttribute(java.lang.String,java.lang.Object)>/name#_0
<org.springframework.beans.BeanUtils: org.springframework.core.MethodParameter getWriteMethodParameter(java.beans.PropertyDescriptor)>/$stack3
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/value#_0
<com.google.common.collect.LinkedListMultimap: boolean put(java.lang.Object,java.lang.Object)>/value#_0
<com.google.common.collect.LinkedListMultimap: boolean remove(java.lang.Object,java.lang.Object)>/key#_0
<com.google.common.collect.LinkedListMultimap: java.util.List get(java.lang.Object)>/key#_0
<org.hamcrest.core.IsSame: org.hamcrest.Matcher sameInstance(java.lang.Object)>/object#_0
<com.google.common.collect.AbstractMultimap: java.util.List wrapList(java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection)>/key#_0
<com.thoughtworks.xstream.XStreamException: void <init>(java.lang.String)>/message#_0
<javassist.bytecode.ClassFile: void addMethod(javassist.bytecode.MethodInfo)>/minfo#_0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void setup()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void setup()>/chain#_42
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void setup()>/$stack10
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldNotAcceptFormURLEncoded()>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldNotAcceptFormURLEncoded()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldNotAcceptFormURLEncoded()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldAcceptMultipart()>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldAcceptMultipart()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldAcceptMultipart()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack24
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack23
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack8
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack14
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack13
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack12
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack11
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack15
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack14
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack12
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack11
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack2
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void setUp()>/$stack2
<org.apache.log4j.Category: void removeAllAppenders()>/$stack11
<org.springframework.beans.factory.BeanDefinitionStoreException: void <init>(java.lang.String,java.lang.String,java.lang.String)>/beanName#_0
<java.security.Provider: void putId()>/$stack3
<java.security.Provider: void putId()>/$stack11
<org.springframework.expression.spel.standard.TokenKind: java.lang.String toString()>/$stack3
<java.nio.charset.IllegalCharsetNameException: void <init>(java.lang.String)>/$stack2
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack17
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest: void setup()>/response#_42
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/resolvedValues#81#_270
<com.thoughtworks.xstream.core.util.Base64Encoder: byte[] decode(java.lang.String)>/input#_0
<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>/beanName#_0
<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>/beanName#_0
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray()>/$stack8
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>/$stack19
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryClazz_$$A_2#_559
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/candidateSet#103#_560
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/beanName#_0
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/resolvedValue#_615
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/index#13#_629
<sun.security.pkcs.PKCS9Attributes: byte[] decode(sun.security.util.DerInputStream)>/$stack18
<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter,int)>/converter#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack19
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack18
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack16
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack14
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack13
<org.picocontainer.converters.FileConverter: java.io.File convert(java.lang.String)>/paramValue#_0
<br.com.caelum.iogi.reflection.NewObject$ScalaSetter: void <init>(java.lang.reflect.Method,java.lang.Object)>/setter#_0
<com.google.gson.internal.bind.TypeAdapters$11: java.lang.Number read(com.google.gson.stream.JsonReader)>/$stack8
<sun.misc.JarIndex: void merge(sun.misc.JarIndex,java.lang.String)>/l8_$$A_4#_351
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack10
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void setup()>/chain#_64
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void setup()>/$stack9
<br.com.caelum.vraptor.test.HttpServletRequestMock: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.http.MutableRequest)>/mock#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.ParametersControl build()>/$stack6
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void setup()>/chain#_63
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void setup()>/$stack5
<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/original#_0
<br.com.caelum.vraptor.util.extjs.DefaultExtJsonTest: void setUp()>/$stack14
<br.com.caelum.vraptor.util.extjs.DefaultExtJsonTest: void setUp()>/$stack15
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack17
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack21
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack22
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithDeserializerAdapter()>/$stack10
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithDeserializerAdapter()>/$stack11
<org.springframework.web.context.request.RequestContextListener: void <clinit>()>/$stack3
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsISO8601Attribute()>/$stack22
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsISO8601Attribute()>/$stack23
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyProvider: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>/beanName#_0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeOneParam()>/method#_423
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeTwoParams()>/method#_439
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeWithoutGenericType()>/method#_458
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)>/$stack18
<br.com.caelum.iogi.reflection.NewObject: void populateProperties()>/setter#_51
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/bd#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: void checkMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object[])>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Class[])>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Class[])>/$stack26
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Class[])>/$stack21
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Class[])>/$stack17
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack29
<org.springframework.beans.factory.support.AbstractBeanFactory: void registerDisposableBeanIfNecessary(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/beanName#_0
<org.springframework.beans.factory.BeanCreationNotAllowedException: void <init>(java.lang.String,java.lang.String)>/beanName#_0
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,java.lang.String)>/$stack4
<br.com.caelum.iogi.parameters.Parameter: br.com.caelum.iogi.parameters.Parameter strip()>/$stack12
<br.com.caelum.iogi.parameters.Parameter: br.com.caelum.iogi.parameters.Parameter strip()>/$stack10
<org.codehaus.jettison.AbstractXMLStreamReader: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>/local#_0
<com.thoughtworks.xstream.converters.basic.BigDecimalConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<org.picocontainer.adapters.AbstractAdapter: void <init>(java.lang.Object,java.lang.Class)>/componentKey#_0
<com.google.common.collect.AbstractMultimap$WrappedSortedSet: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMultimap$WrappedCollection)>/key#_0
<org.springframework.web.context.support.ServletContextResourcePatternResolver: java.util.Set doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)>/$stack12
<org.springframework.web.context.support.ServletContextResourcePatternResolver: void doRetrieveMatchingServletContextResources(javax.servlet.ServletContext,java.lang.String,java.lang.String,java.util.Set)>/servletContext#_0
<br.com.caelum.iogi.reflection.Constructors$FilledConstructors: br.com.caelum.iogi.reflection.Constructors$FilledConstructor largest()>/largestConstructor#_60
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/$stack10
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/$stack9
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class,com.google.gson.TreeTypeAdapter$1)>/x0#_0
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/classAlias#11#_123
<org.picocontainer.injectors.MethodInjection$MethodInjectionByName: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.injectors.MethodInjection$MethodInjectionByName: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentImplementation#_0
<org.picocontainer.injectors.AdaptingInjection: boolean injectionMethodAnnotated(java.lang.Class)>/componentImplementation#_0
<org.picocontainer.injectors.AdaptingInjection: boolean injectionFieldAnnotated(java.lang.Class)>/componentImplementation#_0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(javax.servlet.http.HttpSession)>/listener#_77
<com.google.gson.internal.bind.ArrayTypeAdapter: void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)>/componentTypeAdapter#_0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void setup()>/$stack3
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void setup()>/$stack2
<com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>/key#_0
<com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowExceptionIfYouHaventSpecifiedWhereToGoOnValidationError()>/$stack10
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/$stack12
<org.springframework.core.SimpleAliasRegistry: java.lang.String[] getAliases(java.lang.String)>/name#_0
<com.google.common.collect.Collections2: java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate)>/$stack5
<com.google.common.collect.Collections2: java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate)>/$stack7
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/expressionString#_0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/ast#_116
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: void <init>(java.lang.reflect.Type,java.lang.String,boolean,java.lang.annotation.Annotation,org.picocontainer.Parameter,org.picocontainer.injectors.ConstructorInjector$1)>/x1#_0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalOrExpression()>/rhExpr#_174
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalAndExpression()>/rhExpr#_186
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void start(java.lang.Object)>/component#_0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void dispose(java.lang.Object)>/component#_0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void doLifecycleMethod(java.lang.Object,java.lang.Class,boolean)>/component#_0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatRelationalExpression()>/rhExpr#_199
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void doLifecycleMethod(java.lang.Object,java.lang.Class,java.lang.Class,boolean,java.util.Set)>/component#_0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatSumExpression()>/rhExpr#_236
<com.google.gson.internal.bind.ArrayTypeAdapter$1: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/componentTypeAdapter#_48
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)>/name#_0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatProductExpression()>/rhExpr#_253
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPowerExpression()>/rhExpr#_272
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatUnaryExpression()>/expr#_283
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatNode()>/expr_$$A_2#_319
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void eatConstructorArgs(java.util.List)>/$stack8
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatProjection(boolean)>/expr#_526
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatIndexer()>/expr#_560
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatSelection(boolean)>/expr#_572
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatParenExpression()>/expr#_705
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void raiseInternalException(int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>/$stack6
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/$stack22
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/$stack5
<com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller: java.lang.Object getReferenceKey(java.lang.String)>/$stack12_$$A_2
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)>/fieldName#_0
<net.vidageek.mirror.invoke.ConstructorHandlerByArgs: java.lang.Object withArgs(java.lang.Object[])>/$stack4
<org.springframework.beans.factory.annotation.AnnotatedGenericBeanDefinition: void <init>(java.lang.Class)>/beanClass#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$3: boolean add(java.lang.Object)>/$stack5
<br.com.caelum.vraptor.config.BasicConfigurationTest: void config()>/$stack2
<br.com.caelum.iogi.collections.ArrayInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/target#_0
<org.springframework.core.convert.support.PropertyTypeDescriptor: void <init>(java.beans.PropertyDescriptor,org.springframework.core.MethodParameter,java.lang.Class)>/type#_0
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/$stack68
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/$stack77
<org.springframework.core.convert.support.PropertyTypeDescriptor: org.springframework.core.convert.TypeDescriptor forElementType(java.lang.Class)>/elementType#_0
<br.com.caelum.iogi.reflection.Target: br.com.caelum.iogi.reflection.Target create(java.lang.Class,java.lang.String)>/name#_0
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/entry#_75
<br.com.caelum.iogi.reflection.Target: br.com.caelum.iogi.reflection.Target typeArgument(int)>/$stack8
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/lastValue#15_$$A_2#_114
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack68
<org.springframework.context.support.ApplicationContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/bean#_0
<org.springframework.context.support.ApplicationContextAwareProcessor: void access$0(org.springframework.context.support.ApplicationContextAwareProcessor,java.lang.Object)>/l1#_0
<org.picocontainer.injectors.AbstractInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/componentKey#_0
<org.picocontainer.injectors.AbstractInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/componentImplementation#_0
<org.picocontainer.injectors.AbstractInjector: void checkConcrete()>/$stack8
<br.com.caelum.vraptor.view.LinkToHandlerTest: void setUp()>/$stack3
<br.com.caelum.vraptor.view.LinkToHandlerTest: void setUp()>/$stack2
<org.springframework.beans.factory.BeanIsNotAFactoryException: void <init>(java.lang.String,java.lang.Class)>/name#_0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.Object key(java.lang.Class,java.lang.String)>/type#_0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.Object key(java.lang.Class,java.lang.String)>/name#_0
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/include#8_$$A_1#_35
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/include#8_$$A_3#_38
<com.thoughtworks.xstream.converters.basic.StringBufferConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder,java.lang.String)>/response#_0
<br.com.caelum.vraptor.http.iogi.MiscIogiSupportTest: void setup()>/$stack3
<br.com.caelum.vraptor.scan.WebAppBootstrapFactory: br.com.caelum.vraptor.scan.WebAppBootstrap scannerFor(br.com.caelum.vraptor.config.BasicConfiguration)>/$stack7
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/entry#_69
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/element#11_$$A_1#_86
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/l10_$$A_3#_2569
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/l11_$$A_3#_2569
<org.picocontainer.injectors.AnnotatedFieldInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.injectors.AnnotatedFieldInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentImplementation#_0
<br.com.caelum.vraptor.http.ognl.OgnlParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack8
<br.com.caelum.vraptor.http.ognl.OgnlParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack9
<br.com.caelum.vraptor.http.ognl.OgnlParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack10
<br.com.caelum.vraptor.http.ognl.OgnlParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack11
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/proxifier#_71
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/beanName#_0
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,java.lang.String,org.springframework.beans.BeansException)>/beanName#_0
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,java.lang.String,org.springframework.beans.BeansException)>/propertyName#_0
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,int,java.lang.Class,java.lang.String)>/beanName#_0
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,int,java.lang.Class,org.springframework.beans.BeansException)>/beanName#_0
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack41
<br.com.caelum.vraptor.VRaptorTest: void shouldStopContainer()>/$stack17
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/newValue#_0
<sun.misc.ExtensionDependency: java.io.File[] getExtFiles(java.io.File[])>/$stack26
<sun.misc.ExtensionDependency: java.lang.Boolean addNewExtensionsToClassLoader(sun.misc.Launcher$ExtClassLoader)>/l4#_515
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainerTest: void setup()>/$stack5
<com.google.gson.internal.bind.CollectionTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/elementTypeAdapter#_52
<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object,java.lang.String,java.lang.Object)>/object#_0
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>/$stack8
<br.com.caelum.vraptor.http.VRaptorRequestTest: void setup()>/$stack25
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack42
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack41
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack46
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack33
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack32
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack24
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack23
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack15
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack14
<com.google.inject.util.Providers: com.google.inject.Provider of(java.lang.Object)>/instance#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.Object,java.lang.String)>/$stack11
<br.com.caelum.vraptor.serialization.I18nMessageSerializationTest: void setup()>/response#_37
<br.com.caelum.vraptor.serialization.I18nMessageSerializationTest: void setup()>/container#_45
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)>/$stack54
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)>/$stack15
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.PropertyValue createDefaultPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack14
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.PropertyValue createDefaultPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack9
<org.springframework.beans.BeanWrapperImpl: java.lang.Object newValue(java.lang.Class,java.lang.String)>/$stack25
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl newNestedBeanWrapper(java.lang.Object,java.lang.String)>/object#_0
<br.com.caelum.vraptor.validator.MethodValidatorTest: void setup()>/$stack22
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder getPropertyNameTokens(java.lang.String)>/$stack53
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithConstraint()>/$stack8
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldUseDefaultLocale()>/$stack8
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithTwoConstraints()>/$stack11
<org.springframework.core.Conventions: java.lang.String getQualifiedAttributeName(java.lang.Class,java.lang.String)>/$stack4
<br.com.caelum.iogi.Iogi: void <init>(br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.iogi.spi.LocaleProvider)>/localeProvider#_0
<br.com.caelum.vraptor.view.DefaultStatusTest: void setUp()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void setUp()>/$stack5
<br.com.caelum.vraptor.view.DefaultStatusTest: void setUp()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void setUp()>/$stack7
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack21
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/readMethod#_709
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack131
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack118
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/list#_769
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack77
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack61
<com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap$LinkedEntry newLinkedEntry(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>/key#_0
<com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap$LinkedEntry newLinkedEntry(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>/value#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack45
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack65
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack207
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack195
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack183
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack171
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSerializeErrorMessages()>/$stack18
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSerializeErrorMessages()>/$stack19
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSerializeErrorMessages()>/$stack20
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack159
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSerializeErrorMessagesInJSON()>/$stack18
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSerializeErrorMessagesInJSON()>/$stack19
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSerializeErrorMessagesInJSON()>/$stack20
<ognl.Evaluation: void <init>(ognl.SimpleNode,java.lang.Object,boolean)>/source#_0
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(java.lang.String,java.lang.Object)>/$stack14
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.PropertyValue)>/$stack20
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.PropertyValue)>/pv#_0
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack328
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack245
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack226
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack316
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack194
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack299
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack158
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack164
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack134
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack25
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType#66#_1042
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType#66_$$A_4#_1083
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/arrayIndex#129#_1099
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack267
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack266
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack270
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack276
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack257
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack256
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack260
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/l6_$$A_3#_1079
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void setup()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void setup()>/chain#_42
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void setup()>/$stack10
<org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverter: org.joda.time.LocalTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack6
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>/$stack2
<com.google.common.collect.AbstractMultimap$WrappedSet: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.Set)>/key#_0
<org.picocontainer.injectors.AnnotatedFieldInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Class,boolean)>/key#_0
<org.picocontainer.injectors.AnnotatedFieldInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Class,boolean)>/impl#_0
<org.springframework.core.io.VfsUtils: void <clinit>()>/$stack22
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.reflect.Field[] getFields(java.lang.Class)>/clazz#_0
<org.springframework.core.io.VfsUtils: void <clinit>()>/$stack41
<org.springframework.core.io.VfsUtils: void <clinit>()>/$stack50
<org.picocontainer.injectors.AnnotatedFieldInjector: org.picocontainer.NameBinding makeParameterNameImpl(java.lang.reflect.AccessibleObject)>/member#_0
<org.springframework.core.io.VfsUtils: void <clinit>()>/$stack58
<org.springframework.core.type.StandardAnnotationMetadata: void <init>(java.lang.Class)>/introspectedClass#_0
<org.picocontainer.injectors.AnnotatedMethodInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Class,boolean)>/key#_0
<org.picocontainer.injectors.AnnotatedMethodInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Class,boolean)>/impl#_0
<org.springframework.beans.MutablePropertyValues: void <init>(org.springframework.beans.PropertyValues)>/pv#_69
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValues(org.springframework.beans.PropertyValues)>/pv#_137
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>/propertyName#_0
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>/propertyValue#_0
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue mergeIfRequired(org.springframework.beans.PropertyValue,org.springframework.beans.PropertyValue)>/$stack13
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void <init>(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)>/elementTypeAdapter#_0
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void setup()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void setup()>/chain#_42
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void setup()>/$stack10
<ognl.OgnlException: void <init>(java.lang.String,java.lang.Throwable)>/msg#_0
<org.springframework.core.convert.support.StringToNumberConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)>/targetType#_0
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/list#_49
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/context#_0
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/name#_0
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/extractor#_0
<sun.security.x509.CertificateExtensions: void init(sun.security.util.DerInputStream)>/$stack8
<org.springframework.context.support.DefaultLifecycleProcessor: void doStart(java.util.Map,java.lang.String)>/dependency#_158
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack4
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>/$stack3
<org.springframework.context.support.DefaultLifecycleProcessor: void doStop(java.util.Map,java.lang.String,java.util.concurrent.CountDownLatch,java.util.Set)>/dependentBean#_212
<org.picocontainer.injectors.AnnotatedMethodInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.injectors.AnnotatedMethodInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentImplementation#_0
<org.springframework.expression.spel.ast.BeanReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.String getContentOfStream(java.io.InputStream)>/charset#_191
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack10
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack15
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack13
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack16
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack17
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack11
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack12
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack16
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack15
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack9
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack8
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>/value#_0
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void setup()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void setup()>/$stack4
<ognl.ObjectElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/object#_45
<javax.servlet.http.HttpServletRequestWrapper: void <init>(javax.servlet.http.HttpServletRequest)>/request#_0
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void addAttribute(java.lang.String,java.lang.String)>/value#_0
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void setValue(java.lang.String)>/text_$$A_2#_262
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization: br.com.caelum.vraptor.serialization.JSONSerialization withCallback(java.lang.String)>/$stack6
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void setup()>/$stack2
<com.google.inject.internal.util.$ImmutableMap$Builder: com.google.inject.internal.util.$ImmutableMap fromEntryList(java.util.List)>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: org.joda.time.LocalDate convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack6
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void setup()>/$stack8
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void setup()>/$stack15
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void isCapableOfDealingWithEmptyParameterForInternalValueWhichNeedsAConverter()>/request#_142
<org.picocontainer.adapters.InstanceAdapter: void <init>(java.lang.Object,java.lang.Object,org.picocontainer.LifecycleStrategy,org.picocontainer.ComponentMonitor)>/componentKey#_0
<sun.security.pkcs.PKCS7: void parse(sun.security.util.DerInputStream,boolean)>/l3#_183
<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/$stack26
<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/$stack72
<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/$stack50
<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/$stack38
<org.springframework.beans.BeanInstantiationException: void <init>(java.lang.Class,java.lang.String)>/beanClass#_0
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void setUp()>/$stack7
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)>/json#_0
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withLocale(java.util.Locale)>/$stack9
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withLocale(java.util.Locale)>/$stack8
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withOffsetParsed()>/$stack7
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withOffsetParsed()>/$stack6
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withChronology(org.joda.time.Chronology)>/$stack9
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withChronology(org.joda.time.Chronology)>/$stack8
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZone(org.joda.time.DateTimeZone)>/$stack8
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZone(org.joda.time.DateTimeZone)>/$stack7
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withPivotYear(java.lang.Integer)>/$stack10
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withPivotYear(java.lang.Integer)>/$stack9
<br.com.caelum.vraptor.core.DefaultConvertersTest: void setup()>/$stack2
<com.google.gson.TreeTypeAdapter: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object)>/typeAdapter#_0
<com.google.gson.TreeTypeAdapter: void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory,com.google.gson.TreeTypeAdapter$1)>/x0#_0
<com.google.gson.TreeTypeAdapter: void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory,com.google.gson.TreeTypeAdapter$1)>/x1#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder copy()>/$stack5
<com.google.common.base.Joiner$MapJoiner: com.google.common.base.Joiner$MapJoiner useForNull(java.lang.String)>/$stack5
<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>/$stack7
<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet headSet(java.lang.Object)>/$stack6
<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet tailSet(java.lang.Object)>/$stack6
<com.thoughtworks.xstream.converters.extended.LocaleConverter: java.lang.Object fromString(java.lang.String)>/language_$$A_3#_45
<org.springframework.expression.spel.SpelParseException: void <init>(java.lang.String,int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>/expressionString#_0
<com.google.common.collect.AbstractMultimap$WrappedList: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection)>/key#_0
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/$stack21
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/config#_59
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void setup()>/$stack15
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/proxy#_413
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization serializationWithAdapter(com.google.gson.JsonSerializer)>/$stack4
<org.springframework.context.event.SimpleApplicationEventMulticaster: void multicastEvent(org.springframework.context.ApplicationEvent)>/listener#_86
<org.scannotation.archiveiterator.FileIterator: java.io.InputStream next()>/fp#_54
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack39
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack43
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack50
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/chain#_110
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack48
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack54
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void setup()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void setup()>/chain#_42
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void setup()>/$stack10
<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>/$stack3
<com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>/$stack3
<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>/$stack3
<sun.security.x509.X500Name: void parseDER(sun.security.util.DerInputStream)>/$stack12
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void setUp()>/$stack3
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void setUp()>/$stack2
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean isMatched(java.lang.Object)>/matcher#_63
<com.google.common.collect.RegularImmutableMap$NonTerminalEntry: void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>/key#_0
<com.google.common.collect.RegularImmutableMap$NonTerminalEntry: void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>/value#_0
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void setUp()>/$stack7
<org.springframework.web.context.support.ServletContextResource: java.net.URL getURL()>/$stack8
<org.springframework.web.context.support.ServletContextResource: org.springframework.core.io.Resource createRelative(java.lang.String)>/$stack6
<br.com.caelum.vraptor.resource.DefaultResourceMethod: br.com.caelum.vraptor.resource.ResourceMethod instanceFor(java.lang.Class,java.lang.reflect.Method)>/method#_0
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: com.google.inject.internal.util.$ImmutableCollection values()>/$stack3
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry,com.google.inject.internal.util.$ImmutableMap$1)>/x0#_0
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void setUp()>/$stack8
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void setUp()>/$stack7
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void setUp()>/$stack2
<br.com.caelum.vraptor.core.JstlLocalizationTest: void setUp()>/$stack5
<br.com.caelum.vraptor.core.JstlLocalizationTest: void setUp()>/$stack4
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o#_101
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o_$$A_2#_126
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack86
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack87
<com.google.gson.internal.bind.TypeAdapters$14: java.math.BigDecimal read(com.google.gson.stream.JsonReader)>/$stack6
<javassist.util.proxy.ProxyFactory: int overrideMethods(javassist.bytecode.ClassFile,javassist.bytecode.ConstPool,java.lang.String)>/meth#_910
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: org.joda.time.LocalDateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack6
<org.springframework.context.expression.BeanFactoryAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack6
<javassist.CtMethod: void <init>(javassist.bytecode.MethodInfo,javassist.CtClass)>/minfo#_0
<org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard: java.lang.Object observe(java.lang.Class,java.lang.Object)>/stackFrame#_0
<org.springframework.web.context.support.WebApplicationContextUtils: void registerWebApplicationScopes(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,javax.servlet.ServletContext)>/sc#_0
<org.mockito.Mockito: org.mockito.stubbing.Stubber doReturn(java.lang.Object)>/toBeReturned#_0
<sun.security.x509.CRLExtensions: void init(sun.security.util.DerInputStream)>/$stack12
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack11
<org.springframework.util.NumberUtils: java.lang.Number convertNumberToTargetClass(java.lang.Number,java.lang.Class)>/$stack26
<net.vidageek.mirror.DefaultAccessorsController: net.vidageek.mirror.invoke.dsl.InvocationHandler invoke()>/$stack2
<net.vidageek.mirror.DefaultAccessorsController: net.vidageek.mirror.set.dsl.SetterHandler set()>/$stack2
<net.vidageek.mirror.DefaultAccessorsController: net.vidageek.mirror.get.dsl.GetterHandler get()>/$stack2
<org.springframework.web.context.ConfigurableWebApplicationContext: void <clinit>()>/$stack3
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void setUp()>/$stack4
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void setUp()>/$stack3
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void setUp()>/$stack2
<net.vidageek.mirror.dsl.Mirror: net.vidageek.mirror.dsl.ClassController on(java.lang.Class)>/clazz#_0
<net.vidageek.mirror.dsl.Mirror: net.vidageek.mirror.dsl.AccessorsController on(java.lang.Object)>/object#_0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/removal#_53
<ognl.IteratorElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/$stack3
<org.springframework.expression.spel.support.ReflectionHelper: void convertAllArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.reflect.Method)>/method#_0
<org.springframework.beans.ConversionNotSupportedException: void <init>(java.beans.PropertyChangeEvent,java.lang.Class,java.lang.Throwable)>/requiredType#_0
<org.springframework.beans.ConversionNotSupportedException: void <init>(java.lang.Object,java.lang.Class,java.lang.Throwable)>/value#_0
<org.springframework.beans.ConversionNotSupportedException: void <init>(java.lang.Object,java.lang.Class,java.lang.Throwable)>/requiredType#_0
<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,com.google.common.base.Predicate)>/predicate#_0
<com.google.common.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function)>/function#_0
<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object)>/value#_0
<javax.servlet.http.HttpServletResponseWrapper: void <init>(javax.servlet.http.HttpServletResponse)>/response#_0
<br.com.caelum.vraptor.http.route.RulesTest: void setup()>/$stack3
<br.com.caelum.vraptor.http.route.RulesTest: void allowsAdditionOfRouteBuildersByDefaultWithNoStrategy()>/$stack2
<com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()>/$stack7
<com.google.common.collect.RegularImmutableMap$TerminalEntry: void <init>(java.lang.Object,java.lang.Object)>/key#_0
<com.google.common.collect.RegularImmutableMap$TerminalEntry: void <init>(java.lang.Object,java.lang.Object)>/value#_0
<org.springframework.expression.common.CompositeStringExpression: void setValue(org.springframework.expression.EvaluationContext,java.lang.Object)>/$stack4
<org.springframework.expression.common.CompositeStringExpression: void setValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>/$stack5
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/propertyName#25#_1945
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/m_$$A_4#_1944
<org.springframework.expression.common.CompositeStringExpression: void setValue(java.lang.Object,java.lang.Object)>/$stack4
<org.apache.commons.fileupload.servlet.ServletFileUpload: boolean isMultipartContent(javax.servlet.http.HttpServletRequest)>/request#_0
<com.thoughtworks.xstream.mapper.CannotResolveClassException: void <init>(java.lang.String)>/className#_0
<net.vidageek.mirror.invoke.MethodHandlerByName: java.lang.Object withArgs(java.lang.Object[])>/$stack4
<net.vidageek.mirror.invoke.MethodHandlerByName: java.lang.Object withArgs(java.lang.Object[])>/$stack5
<net.vidageek.mirror.invoke.MethodHandlerByName: java.lang.Object withArgs(java.lang.Object[])>/$stack6
<com.google.common.collect.LinkedListMultimap$1: java.util.ListIterator listIterator(int)>/$stack3
<org.picocontainer.injectors.MethodInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.String,boolean)>/componentKey#_0
<org.picocontainer.injectors.MethodInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.String,boolean)>/componentImplementation#_0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void setup()>/$stack9
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void setup()>/$stack8
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void setup()>/$stack7
<org.springframework.util.ObjectUtils: java.lang.String identityToString(java.lang.Object)>/$stack4
<javassist.CtConstructor: void <init>(javassist.bytecode.MethodInfo,javassist.CtClass)>/minfo#_0
<com.thoughtworks.xstream.converters.collections.CharArrayConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/chars#_33
<org.mockito.internal.configuration.DefaultInjectionEngine: void injectMockCandidate(java.lang.Class,java.util.Set,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.http.EncodingHandlerFactory: void <init>(javax.servlet.ServletContext)>/context#_0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson$1$1: void addAttribute(java.lang.String,java.lang.String)>/value#_0
<com.google.gson.DefaultDateTypeAdapter: java.util.Date deserializeToDate(com.google.gson.JsonElement)>/$stack14
<org.springframework.util.AntPathMatcher: boolean matchStrings(java.lang.String,java.lang.String,java.util.Map)>/pattern#_0
<org.springframework.util.AntPathMatcher: boolean matchStrings(java.lang.String,java.lang.String,java.util.Map)>/str#_0
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withAnyArgs()>/$stack16
<org.picocontainer.injectors.ConstructorInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentKey#_0
<org.picocontainer.injectors.ConstructorInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/componentImplementation#_0
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.http.EncodingHandlerFactoryTest: void shouldReturnANullHandlerWhenThereIsNoEncodingInitParameter()>/$stack7
<br.com.caelum.vraptor.http.EncodingHandlerFactoryTest: void shouldReturnAWebXmlHandlerWhenThereIsAnEncodingInitParameter()>/$stack7
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack90
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack82
<com.google.gson.internal.bind.TypeAdapters$25: com.google.gson.JsonElement read(com.google.gson.stream.JsonReader)>/$stack20
<com.google.gson.internal.bind.TypeAdapters$25: com.google.gson.JsonElement read(com.google.gson.stream.JsonReader)>/number#_648
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack52
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.String adaptInnerBeanName(java.lang.String)>/$stack7
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/$stack22
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/$stack31
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>/argName#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>/argName#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>/argName#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/$stack17
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/$stack12
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: org.springframework.core.MethodParameter getWriteMethodParameter()>/$stack5
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void preInstantiateSingletons()>/factory#_563
<com.google.gson.internal.bind.TypeAdapters$22: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/dateTypeAdapter#_523
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandlerTest: void setUp()>/$stack2
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void setup()>/$stack4
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String determinePrimaryCandidate(java.util.Map,org.springframework.beans.factory.config.DependencyDescriptor)>/$stack29
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void raiseNoSuchBeanDefinitionException(java.lang.Class,java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/type#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object writeReplace()>/$stack4
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void setup()>/chain#_41
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void setup()>/$stack9
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.MethodHandler method(java.lang.String)>/$stack4
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.MethodHandler method(java.lang.String)>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void setUp()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void setUp()>/$stack2
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.ConstructorHandler constructor()>/$stack3
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.MethodHandler method(java.lang.reflect.Method)>/$stack4
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.MethodHandler method(java.lang.reflect.Method)>/$stack3
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.MethodHandler method(java.lang.reflect.Method)>/method#_0
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.ConstructorHandler constructor(java.lang.reflect.Constructor)>/$stack3
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.SetterMethodHandler setterFor(java.lang.String)>/$stack3
<br.com.caelum.vraptor.deserialization.JsonDeserializer: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack12
<br.com.caelum.vraptor.deserialization.JsonDeserializer: com.thoughtworks.xstream.XStream getConfiguredXStream(java.lang.reflect.Method,java.lang.Class[])>/javaMethod#_0
<br.com.caelum.vraptor.core.DefaultResultTest: void setup()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void setup()>/$stack3
<br.com.caelum.vraptor.core.DefaultResultTest: void setup()>/$stack2
<javassist.compiler.MemberResolver: javassist.compiler.MemberResolver$Method lookupMethod(javassist.CtClass,javassist.CtClass,javassist.bytecode.MethodInfo,java.lang.String,int[],int[],java.lang.String[])>/current#_0
<javassist.compiler.MemberResolver: javassist.compiler.MemberResolver$Method lookupMethod(javassist.CtClass,java.lang.String,int[],int[],java.lang.String[],boolean)>/minfo#_117
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>/element#_0
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void setUp()>/$stack4
<net.vidageek.mirror.reflect.DefaultReflectionHandler: java.lang.reflect.Field field(java.lang.String)>/fieldName#_0
<net.vidageek.mirror.reflect.DefaultReflectionHandler: net.vidageek.mirror.reflect.dsl.MethodReflector method(java.lang.String)>/methodName#_0
<net.vidageek.mirror.reflect.DefaultReflectionHandler: net.vidageek.mirror.reflect.dsl.MethodReflector method(java.lang.String)>/$stack6
<net.vidageek.mirror.reflect.DefaultReflectionHandler: net.vidageek.mirror.reflect.dsl.ConstructorReflector constructor()>/$stack2
<net.vidageek.mirror.reflect.DefaultReflectionHandler: net.vidageek.mirror.reflect.dsl.AnnotationHandler annotation(java.lang.Class)>/$stack3
<net.vidageek.mirror.reflect.DefaultReflectionHandler: net.vidageek.mirror.reflect.dsl.ParameterizedElementHandler parentGenericType()>/$stack3
<org.picocontainer.injectors.SingleMemberInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/componentKey#_0
<org.picocontainer.injectors.SingleMemberInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/componentImplementation#_0
<org.picocontainer.injectors.SingleMemberInjector: java.lang.Object getParameter(org.picocontainer.PicoContainer,java.lang.reflect.AccessibleObject,int,java.lang.reflect.Type,java.lang.annotation.Annotation,org.picocontainer.Parameter,org.picocontainer.ComponentAdapter)>/member#_0
<org.picocontainer.injectors.SingleMemberInjector: void nullCheck(java.lang.reflect.AccessibleObject,int,org.picocontainer.injectors.ParameterNameBinding,java.lang.Object)>/$stack7
<org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: void <init>(java.lang.String,java.lang.String,org.springframework.util.PathMatcher)>/$stack8
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void setup()>/$stack6
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void setup()>/chain#_61
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void register(java.lang.Class,java.lang.Class)>/type#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void init()>/$stack9
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/parentContainer_$$A_2#_188
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: org.picocontainer.MutablePicoContainer createSessionContainer(javax.servlet.http.HttpSession)>/$stack11
<org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>/operand#_0
<org.springframework.beans.PropertyMatches: org.springframework.beans.PropertyMatches forProperty(java.lang.String,java.lang.Class,int)>/propertyName#_0
<com.thoughtworks.xstream.converters.basic.URLConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<com.google.common.collect.Collections2$FilteredCollection: void clear()>/$stack2
<com.google.common.collect.Collections2$FilteredCollection: void clear()>/$stack1
<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack16
<org.springframework.web.util.WebUtils: java.lang.String getRealPath(javax.servlet.ServletContext,java.lang.String)>/servletContext#_0
<ognl.ObjectArrayPool$SizePool: void recycle(java.lang.Object[])>/value#_0
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/$stack148
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void shouldComplainIfThereIsNothingRegistered()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void shouldReturnHtmlWhenRequestingAnyContentType()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void shouldReturnHtmlWhenAcceptsIsBlankContentType()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void shouldReturnHtmlWhenRequestingUnknownAsFirstAndAnyContentType()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testHtml()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testJson()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testJsonWithQualifier()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testNull()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testJsonInAComplexAcceptHeader()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testPrecendenceInAComplexAcceptHeaderHtmlShouldPrevailWhenTied()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testPrecendenceInABizzarreMSIE8AcceptHeader()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testPrecendenceInABizzarreMSIE8AcceptHeaderWithHtml()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testPrecendenceInAComplexAcceptHeaderHtmlShouldPrevailWhenTied2()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testJsonInAComplexAcceptHeaderWithParameters()>/$stack3
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormatTest: void testXMLInAComplexAcceptHeaderWithParametersNotOrdered()>/$stack3
<org.springframework.core.convert.support.GenericConversionService: void assertNotNull(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.GenericConversionService: void assertNotNull(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.web.context.request.AbstractRequestAttributes: void registerRequestDestructionCallback(java.lang.String,java.lang.Runnable)>/name#_0
<org.junit.Assert: void assertNotNull(java.lang.Object)>/object#_0
<org.junit.Assert: void assertNull(java.lang.Object)>/object#_0
<org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>/actual#_0
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void gettingShouldReturnNullIfIndexNotFound()>/value#_62
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void gettingShouldReturnValueIfIndexFound()>/value#_70
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void settingShouldNullifyUpToIndex()>/$stack6
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void settingShouldNullifyUpToIndex()>/$stack10
<org.springframework.beans.factory.support.DisposableBeanAdapter: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.util.List,java.security.AccessControlContext)>/bean#_0
<org.codehaus.jettison.json.JSONObject: java.lang.String numberToString(java.lang.Number)>/n#_0
<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject put(java.lang.String,java.lang.Object)>/value#_0
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/convertedValue#_112
<br.com.caelum.vraptor.http.ParanamerNameProviderTest: void shouldNameObjectTypeAsItsSimpleName()>/$stack6
<br.com.caelum.vraptor.http.ParanamerNameProviderTest: void shouldNamePrimitiveTypeAsItsSimpleName()>/$stack7
<br.com.caelum.vraptor.http.ParanamerNameProviderTest: void shouldNameArrayAsItsSimpleTypeName()>/$stack6
<br.com.caelum.vraptor.http.ParanamerNameProviderTest: void shouldNameGenericCollectionUsingOf()>/$stack6
<br.com.caelum.vraptor.http.ParanamerNameProviderTest: void shouldIgnoreChangesToTheReturnedArrayInSubsequentCalls()>/$stack8
<br.com.caelum.vraptor.http.ParanamerNameProviderTest: void shouldIgnoreChangesToTheReturnedArrayInSubsequentCalls()>/$stack16
<br.com.caelum.vraptor.http.ParanamerNameProviderTest: void shouldNameFieldsAnnotatedWithNamed()>/$stack6
<br.com.caelum.vraptor.http.ParanamerNameProviderTest: void shouldNotNameFieldsByTheFieldNameWhenUsingAnnotation()>/$stack6
<br.com.caelum.vraptor.http.ParanamerNameProviderTest: void shouldNameMethodsFieldsWhenAnnotatedOrNot()>/$stack6
<br.com.caelum.vraptor.http.ParanamerNameProviderTest: void shouldNameMethodsFieldsWhenAnnotatedOrNot()>/$stack14
<br.com.caelum.vraptor.http.ParanamerNameProviderTest: void shouldNameMethodsFieldsWhenAnnotatedOrNot2()>/$stack6
<br.com.caelum.vraptor.http.ParanamerNameProviderTest: void shouldNameMethodsFieldsWhenAnnotatedOrNot2()>/$stack14
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue)>/original#_0
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue,java.lang.Object)>/original#_0
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack33
<org.springframework.context.support.ApplicationContextAwareProcessor$1: java.lang.Object run()>/$stack1
<sun.security.util.DerIndefLenConverter: void writeLengthAndValue()>/l3#_189
<javassist.CtClassType: void modifyConstructors(javassist.bytecode.ClassFile)>/codeAttr#_1530
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerAndTheMethodAreAnnotatedWithRelativePath()>/route#_179
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerEndsWithSlashAndTheMethodAreAnnotatedWithRelativePath()>/route#_188
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerEndsWithSlashAndTheMethodAreAnnotatedWithAbsolutePath()>/route#_196
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerEndsWithSlashAndTheMethodAreAnnotatedWithEmptyPath()>/route#_204
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerAndTheMethodAreAnnotatedWithAbsolutePath()>/route#_219
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerAndTheMethodAreAnnotatedWithEmptyPath()>/route#_228
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheControllerIsAnnotatedWithPath()>/route#_237
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void findsTheCorrectAnnotatedMethodIfThereIsNoWebMethodAnnotationPresent()>/route#_245
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void suportsTheDefaultNameForANonAnnotatedMethod()>/route#_257
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void ignoresTheControllerSuffixForANonAnnotatedMethod()>/route#_268
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsASlashWhenUserForgotIt()>/route#_277
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void matchesWhenUsingAWildcard()>/route#_287
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void dontRegisterRouteIfMethodIsNotPublic()>/route#_296
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void dontRegisterRouteIfMethodIsStatic()>/route#_304
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldFindNonAnnotatedNonStaticPublicMethodWithComponentNameInVariableCamelCaseConventionAsURI()>/route#_383
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldFindSeveralPathsForMethodWithManyValue()>/route#_395
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldFindSeveralPathsForMethodWithManyValue()>/route2#_397
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void supportMethodOverriding()>/route#_459
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheGetControllerAndTheMethodAreAnnotatedWithRelativePath()>/route#_520
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheGetControllerEndsWithSlashAndTheMethodAreAnnotatedWithRelativePath()>/route#_536
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheGetControllerEndsWithSlashAndTheMethodAreAnnotatedWithAbsolutePath()>/route#_545
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheGetControllerAndTheMethodAreAnnotatedWithAbsolutePath()>/route#_554
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void addsAPrefixToMethodsWhenTheGetControllerIsAnnotatedWithPath()>/route#_562
<org.springframework.beans.factory.support.SimpleInstantiationStrategy$3: java.lang.Object run()>/$stack1
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/value#_427
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/it#8#_442
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/result_$$A_2#_451
<ognl.Ognl: void setValue(java.lang.String,java.util.Map,java.lang.Object,java.lang.Object)>/$stack4
<org.springframework.core.convert.TypeDescriptor: void <init>(java.lang.Object)>/value#_0
<org.springframework.core.convert.TypeDescriptor: void <init>(java.lang.Class)>/type#_0
<org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.String)>/className#_0
<org.springframework.util.ClassUtils: java.lang.reflect.Constructor getConstructorIfAvailable(java.lang.Class,java.lang.Class[])>/clazz#_0
<org.springframework.util.ClassUtils: int getMethodCountForName(java.lang.Class,java.lang.String)>/clazz#_0
<org.springframework.util.ClassUtils: java.lang.reflect.Method getStaticMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/clazz#_0
<org.springframework.util.ClassUtils: boolean isAssignable(java.lang.Class,java.lang.Class)>/lhsType#_0
<br.com.caelum.iogi.collections.IndexedListInstantiator: br.com.caelum.iogi.reflection.Target elementTarget(br.com.caelum.iogi.reflection.Target)>/target#_0
<org.mockito.asm.util.AbstractVisitor: void printList(java.io.PrintWriter,java.util.List)>/$stack10
<org.springframework.core.convert.support.ObjectToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_55
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack1
<org.springframework.context.event.GenericApplicationListenerAdapter: void <init>(org.springframework.context.ApplicationListener)>/delegate#_0
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowExceptionForNotKnowHttpMethodsForRequestParameter()>/$stack9
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowIllegalArgumentExceptionIf_methodIsUsedInGETRequests()>/$stack9
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowExceptionForNotKnowHttpMethods()>/$stack9
<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Method,int,int)>/method#_0
<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Constructor,int,int)>/constructor#_0
<junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>/actual#_0
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack35
<org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.reflect.Constructor,java.lang.Object[])>/ctor#_0
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String transformedBeanName(java.lang.String)>/name#_0
<org.picocontainer.behaviors.Stored: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/instance_$$A_1#_91
<org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>/actual#_0
<org.springframework.core.AttributeAccessorSupport: void setAttribute(java.lang.String,java.lang.Object)>/name#_0
<org.springframework.core.AttributeAccessorSupport: void copyAttributesFrom(org.springframework.core.AttributeAccessor)>/source#_0
<br.com.caelum.iogi.collections.ArrayInstantiator$ArrayFactory: java.lang.Object getArray()>/$stack19
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void usesAsteriskBothWays()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void canTranslateAInheritedResourceBothWays()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void canTranslateAnnotatedMethodBothWays()>/$stack12
<org.springframework.beans.BeanMetadataAttribute: void <init>(java.lang.String,java.lang.Object)>/name#_0
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/clazz#_0
<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>/part#_0
<org.springframework.util.ReflectionUtils: void doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback)>/clazz#_0
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)>/leafClass#_0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADog()>/$stack21
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack21
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack21
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack22
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/customer#_212
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithoutRoot()>/$stack21
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithDeserializerAdapter()>/$stack29
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgument()>/$stack21
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndHasNotRoot()>/$stack21
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack21
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogNamedDifferently()>/$stack21
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAttribute()>/$stack29
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsISO8601Attribute()>/$stack31
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsObjectAttribute()>/$stack22
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldHonorRequestHeaderAcceptCharset()>/$stack25
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void whenNoCharsetHeaderIsFoundThanAssumeItIsUTF8()>/$stack25
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldByPassDeserializationWhenHasNoContent()>/$stack20
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeTwoParams()>/param#_446
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeWithoutGenericType()>/param#_464
<org.springframework.beans.factory.support.AbstractBeanFactory: void addBeanPostProcessor(org.springframework.beans.factory.config.BeanPostProcessor)>/beanPostProcessor#_0
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack48
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: int read(byte[],int,int)>/b#_193
<com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack13
<ognl.ASTProperty: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack4
<ognl.ASTProperty: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<org.slf4j.LoggerFactory: void emitSubstituteLoggerWarning()>/loggerName#_173
<org.springframework.beans.factory.support.AbstractBeanDefinition: void copyQualifiersFrom(org.springframework.beans.factory.support.AbstractBeanDefinition)>/source#_0
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveReturnType(java.lang.reflect.Method,java.lang.Class)>/method#_0
<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>/sourceType#_0
<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>/targetType#_0
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue#_944
<com.google.common.collect.LinkedListMultimap$DistinctKeyIterator: void remove()>/$stack3
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack5
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack7
<org.springframework.core.convert.support.StringToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_59
<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>/l15#_933
<sun.invoke.util.BytecodeDescriptor: java.lang.String unparseMethod(java.lang.Class,java.util.List)>/l4#_118
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void setup()>/$stack1
<br.com.caelum.vraptor.http.iogi.IogiGenericTypesSupportTest: void canInstantiatingStringsInAListSettingItsInternalValueWithoutInvokingConverters1()>/$stack15
<br.com.caelum.vraptor.http.iogi.IogiGenericTypesSupportTest: void canInstantiateAndPopulateAListOfWrappers1()>/$stack15
<br.com.caelum.vraptor.http.iogi.IogiGenericTypesSupportTest: void canInstantiateAndPopulateAListOfWrappers1()>/$stack19
<org.springframework.expression.spel.support.StandardTypeConverter: void <init>(org.springframework.core.convert.ConversionService)>/conversionService#_0
<javassist.bytecode.stackmap.TypeData$TypeName: void merge(javassist.bytecode.stackmap.TypeData)>/tn#_152
<org.springframework.core.type.StandardClassMetadata: void <init>(java.lang.Class)>/introspectedClass#_0
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_63
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void twoClassesWithSameNameButDifferentPackages()>/instance1#_129
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void twoClassesWithSameNameButDifferentPackages()>/instance2#_131
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldScanAndRegisterAnnotatedBeans()>/component#_138
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldSupportOtherStereotypeAnnotations()>/component#_164
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldSupportConstructorInjection()>/component#_170
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldProvideCurrentHttpRequest()>/httpRequest#_177
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldProvideCurrentVRaptorRequest()>/vraptorRequest#_183
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldProvideServletContext()>/context#_189
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldProvideTheContainer()>/itself#_195
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldSupportManualRegistration()>/requestScopedContract#_202
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shoudSupportCustomImplementationsForAlreadyRegisteredComponents()>/translator#_209
<org.springframework.web.context.support.ServletContextResource: void <init>(javax.servlet.ServletContext,java.lang.String)>/servletContext#_0
<org.springframework.beans.factory.config.BeanDefinitionHolder: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String,java.lang.String[])>/beanName#_0
<javassist.util.proxy.ProxyFactory: javassist.bytecode.MethodInfo makeDelegator(java.lang.reflect.Method,java.lang.String,javassist.bytecode.ConstPool,java.lang.Class,java.lang.String)>/meth#_0
<javassist.util.proxy.ProxyFactory: javassist.bytecode.MethodInfo makeForwarder(java.lang.String,java.lang.reflect.Method,java.lang.String,javassist.bytecode.ConstPool,java.lang.Class,java.lang.String,int)>/meth#_0
<javassist.CtMethod: void setBody(javassist.CtMethod,javassist.ClassMap)>/$stack5
<javassist.CtMethod: void setBody(javassist.CtMethod,javassist.ClassMap)>/$stack3
<org.springframework.web.context.support.ServletContextScope: void <init>(javax.servlet.ServletContext)>/servletContext#_0
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext,java.lang.String)>/sc#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$4: java.lang.Object run()>/$stack2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$4: java.lang.Object run()>/$stack1
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack1
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldNotInstantiateIfLastTerm()>/typeConverter#_115
<org.springframework.util.NumberUtils: java.lang.Number convertNumberToTargetClass(java.lang.Number,java.lang.Class)>/targetClass#_0
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class)>/targetClass#_0
<com.google.common.collect.Iterators: boolean any(java.util.Iterator,com.google.common.base.Predicate)>/predicate#_0
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/args#_1450
<br.com.caelum.vraptor.serialization.xstream.Serializee: java.util.Set getParentTypes(java.lang.String,java.lang.Class)>/$stack15
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/source#_0
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/args#_2291
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack41
<org.springframework.beans.factory.support.SimpleInstantiationStrategy$2: java.lang.Object run()>/$stack1
<javassist.CtConstructor: void setBody(javassist.CtConstructor,javassist.ClassMap)>/$stack5
<javassist.CtConstructor: void setBody(javassist.CtConstructor,javassist.ClassMap)>/$stack3
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>/$stack12
<ognl.ComparisonExpression: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ComparisonExpression: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack12
<org.springframework.web.context.request.FacesRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/name#_0
<org.springframework.web.context.request.FacesRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/value#_0
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: void postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)>/beanName#_0
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/$stack29
<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/item_$$A_1#_55
<java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.net.InetAddress[])>/l8_$$A_4#_813
<java.util.AbstractSequentialList: boolean addAll(int,java.util.Collection)>/$stack9
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownload: void write(javax.servlet.http.HttpServletResponse)>/response#_0
<org.mockito.asm.MethodAdapter: void visitLdcInsn(java.lang.Object)>/cst#_0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/root#_0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void scanPackage(java.lang.String,org.scannotation.AnnotationDB,br.com.caelum.vraptor.scan.ClasspathResolver)>/basePackage#_0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void add(java.util.Collection)>/collection#_0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void addWebInfClassesStereotypes(java.util.Map,java.util.HashSet)>/myStereotypes#_152
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void findComponentsFromWebInfClasses(java.util.Map,java.util.Set,java.util.Set)>/classes#_164
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_65
<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack15
<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack16
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentType()>/$stack2
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfVendorized()>/$stack2
<com.thoughtworks.xstream.converters.collections.MapConverter: void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)>/key#_106
<com.thoughtworks.xstream.converters.collections.MapConverter: void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)>/value#_110
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfAtomizedAlike()>/$stack2
<ognl.ASTVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void next(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void next(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/resourceInstance#_0
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack10
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<com.google.common.collect.Sets: java.util.HashSet newHashSet(java.util.Iterator)>/$stack4
<java.util.ArrayList$SubList$1: void forEachRemaining(java.util.function.Consumer)>/$stack22
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidator: void addAll(java.util.Collection)>/message#_112
<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>/message#_0
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack18
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack17
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack16
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack27
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack26
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack20
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack19
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack18
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack29
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack28
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withRootException()>/$stack6
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withNestedException()>/$stack7
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack9
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack15
<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>/$stack26
<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>/$stack29
<com.google.gson.internal.bind.TypeAdapters$23: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack43
<com.google.common.collect.AbstractMultimap$WrappedCollection: void removeIfEmpty()>/$stack6
<com.google.common.collect.AbstractMultimap$WrappedCollection: void addToMap()>/$stack5
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack18
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack21
<ognl.ASTSequence: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ASTSequence: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/converter_$$A_1#_251
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceObjectType#_330
<com.google.gson.internal.bind.TypeAdapters$2: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/targetObjectType#_399
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack7
<org.springframework.beans.factory.support.AbstractBeanFactory$1: java.lang.Object getObject()>/$stack8
<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)>/converter#_55
<com.thoughtworks.xstream.core.DefaultConverterLookup: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>/converter#_0
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibSubclassCreator: java.lang.Object instantiate(java.lang.reflect.Constructor,java.lang.Object[])>/$stack6
<org.springframework.expression.ExpressionException: java.lang.String toDetailedString()>/$stack8
<com.thoughtworks.xstream.converters.collections.TreeSetConverter$1: void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map)>/key#_121
<org.springframework.context.expression.MapAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/name#_0
<org.springframework.context.expression.MapAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/newValue#_0
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void setUp()>/$stack4
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack5
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void settingShouldNullifyUpToIndex()>/$stack2
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void settingShouldNullifyUpToIndex()>/$stack3
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<javassist.compiler.MemberCodeGen: void setThisMethod(javassist.CtMethod)>/$stack4
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack14
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack19
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack24
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack29
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack5
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/name#_0
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/value#_0
<org.springframework.web.context.request.ServletRequestAttributes: void registerDestructionCallback(java.lang.String,java.lang.Runnable,int)>/name#_0
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/l7#_90
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack12
<br.com.caelum.vraptor.interceptor.Graph: void addDummies()>/node#_95
<br.com.caelum.vraptor.interceptor.Graph: void removeRoots(java.util.Set)>/root#_101
<br.com.caelum.vraptor.interceptor.Graph: void removeLeaves()>/value#_133
<br.com.caelum.iogi.collections.CyclingListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/listElement#_36
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldDoNothingWhenThereIsNoFlashParameters()>/$stack5
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack8
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack8
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack13
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotCrashWhenSessionIsInvalid()>/$stack18
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/resourceInstance#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: boolean canAccess(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_71
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void setRoot(java.lang.Object)>/$stack6
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void serialize()>/$stack9
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_1#_292
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>/value#_0
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usePatternMatchinForPrimitiveParameters()>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usePatternMatchingForRegexParameters()>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usingRegexesWithCurlyBraces()>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usingRegexesWithCurlyBracesNotOnTheEnd()>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usingRegexesWithCurlyBracesNotOnTheEndAndOtherVar()>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usingRegexesWithCurlyBracesNotOnTheEndAndOtherVarAndManyOtherThings()>/$stack6
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void usingRegexesWithAsterisksAtTheEnd()>/$stack6
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/listener_$$A_1_$$A_1#_234
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.util.List filterPostProcessors(java.util.List)>/$stack14
<org.springframework.beans.factory.support.DisposableBeanAdapter: void destroy()>/$stack32
<org.springframework.beans.factory.support.DisposableBeanAdapter: void destroy()>/$stack31
<org.springframework.beans.factory.support.DisposableBeanAdapter: void invokeCustomDestroyMethod(java.lang.reflect.Method)>/$stack12
<com.google.gson.internal.bind.TypeAdapters$10: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$10: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<sun.security.util.AlgorithmDecomposer: java.util.Set decomposeImpl(java.lang.String)>/l11#_59
<br.com.caelum.vraptor.VRaptorMatchers$2: void describeMismatchSafely(br.com.caelum.vraptor.http.route.Route,org.hamcrest.Description)>/item#_0
<br.com.caelum.vraptor.VRaptorMatchers$2: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/$stack3
<sun.font.AttributeValues: sun.font.AttributeValues merge(java.util.Map,int)>/$stack19
<br.com.caelum.vraptor.http.VRaptorRequest: void setParameter(java.lang.String,java.lang.String[])>/key#_0
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.util.List argumentValues(br.com.caelum.iogi.Instantiator)>/$stack11
<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>/$stack17
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack13
<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>/$stack15
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack25
<org.springframework.beans.factory.support.BeanDefinitionReaderUtils: void registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry)>/beanName#_147
<java.util.Vector$VectorSpliterator: void forEachRemaining(java.util.function.Consumer)>/$stack16
<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: void <init>(java.lang.Class)>/element#_0
<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: void push(java.lang.Class)>/element#_0
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: void start(java.lang.Object)>/component#_0
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: void stop(java.lang.Object)>/component#_0
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: void dispose(java.lang.Object)>/component#_0
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void start(org.picocontainer.PicoContainer)>/$stack5
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void stop(org.picocontainer.PicoContainer)>/$stack8
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void dispose(org.picocontainer.PicoContainer)>/$stack9
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void setUp()>/$stack6
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack6
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack5
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack4
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack15
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack14
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack13
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack6
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack5
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack4
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack17
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack16
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnConstructor()>/$stack6
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnConstructor()>/$stack5
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnConstructor()>/$stack4
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnAcceptsMethod()>/$stack6
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnAcceptsMethod()>/$stack5
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldFailIfUsingConstructorParametersOnAcceptsMethod()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack9
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/ctx#_86
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack16
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldLoadInitParameterForBasePackages()>/$stack9
<org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: void setAttribute(java.lang.String,java.lang.Object,javax.faces.context.ExternalContext)>/name#_0
<org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: void setAttribute(java.lang.String,java.lang.Object,javax.faces.context.ExternalContext)>/value#_0
<ognl.ASTOr: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeIndexedArgumentValue(java.lang.Integer,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/newValue#_0
<org.springframework.expression.spel.ast.InlineList: void checkIfConstant()>/$stack25
<org.springframework.expression.spel.ast.InlineList: void checkIfConstant()>/$stack21
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/newValue#_0
<org.springframework.expression.spel.ast.InlineList: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack9
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: br.com.caelum.vraptor.resource.ResourceMethod resourceMethod(br.com.caelum.vraptor.http.MutableRequest,java.lang.String)>/request#_0
<org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)>/$stack101
<org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)>/$stack102
<org.codehaus.jettison.mapped.MappedNamespaceConvention: void processAttributesAndNamespaces(org.codehaus.jettison.Node,org.codehaus.jettison.json.JSONObject)>/uri#_108
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer,java.lang.Class)>/$stack11
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/bindings#30#_199
<org.picocontainer.injectors.ConstructorInjector: java.util.List getSortedMatchingConstructors()>/constructor#_369
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack54
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.util.List hierarchyFor(java.lang.Class)>/type_$$A_1#_316
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack27
<ognl.ASTThisVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void write(javax.servlet.http.HttpServletResponse)>/response#_0
<org.springframework.beans.propertyeditors.PropertiesEditor: void setValue(java.lang.Object)>/$stack8
<com.google.gson.internal.bind.TypeAdapters$16: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<org.springframework.context.support.DefaultLifecycleProcessor$1: void run()>/$stack2
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)>/comparator_$$A_2#_109
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)>/$stack13
<org.hamcrest.BaseDescription: org.hamcrest.Description appendText(java.lang.String)>/text#_0
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/$stack18
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/$stack17
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/$stack16
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/$stack9
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack7
<com.thoughtworks.xstream.core.util.Fields: void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>/value#_0
<org.hamcrest.BaseDescription: org.hamcrest.Description appendList(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator)>/$stack8
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack31_$$A_2
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack22
<org.hamcrest.core.Is: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/item#_0
<com.google.gson.internal.Streams: void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)>/element#_0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/$stack20_$$A_2
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shoudNotExecuteLogicWhenUsingResultOf()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void fillIntoRequest(java.lang.String,br.com.caelum.vraptor.http.MutableRequest)>/name#_131
<java.text.AttributedString$AttributedStringIterator: java.util.Set getAllAttributeKeys()>/$stack27
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack7
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack19
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack18
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack23
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack22
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack7
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack19
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack18
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack24
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack23
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack28
<org.springframework.context.event.AbstractApplicationEventMulticaster: void addApplicationListener(org.springframework.context.ApplicationListener)>/listener#_0
<org.springframework.context.event.AbstractApplicationEventMulticaster: void addApplicationListenerBean(java.lang.String)>/listenerBeanName#_0
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setAsText(java.lang.String)>/$stack8
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void addParametersInfo(java.lang.reflect.Method)>/$stack26
<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: void addText(java.lang.String)>/text#_0
<ognl.ASTAssign: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_52
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/$stack17
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/componentInstance#_587
<java.util.AbstractList: boolean addAll(int,java.util.Collection)>/l5#_259
<org.picocontainer.DefaultPicoContainer: void startAdapters()>/adapter_$$A_3#_997
<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.Node,java.lang.String,org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.Convention)>/object#_0
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void startNode(java.lang.String)>/escapedName#_193
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void setValue(java.lang.String)>/text#_0
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void addAttribute(java.lang.String,java.lang.String)>/$stack5
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void addAttribute(java.lang.String,java.lang.String)>/value#_0
<org.codehaus.jettison.Node: void setNamespace(java.lang.String,java.lang.String)>/uri#_0
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void endNode()>/$stack9
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)>/string#_496
<com.google.gson.stream.JsonWriter: void string(java.lang.String)>/value#_0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/value#_0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>/local#_0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>/value#_0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>/local#_0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>/value#_0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeCharacters(java.lang.String)>/text#_0
<com.google.gson.internal.bind.TypeAdapters$9: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$9: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguageTag(sun.util.locale.LanguageTag)>/$stack29
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/possiblyConvertedNewValue_$$A_3#_225
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack59
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack62
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack44
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack35
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack22
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack25
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<org.picocontainer.monitors.AbstractComponentMonitor: void instantiated(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Object,java.lang.Object[],long)>/constructor#_0
<org.picocontainer.monitors.AbstractComponentMonitor: void instantiationFailed(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Exception)>/constructor#_0
<org.picocontainer.monitors.AbstractComponentMonitor: void invoked(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,long,java.lang.Object[],java.lang.Object)>/member#_0
<org.picocontainer.monitors.AbstractComponentMonitor: void invocationFailed(java.lang.reflect.Member,java.lang.Object,java.lang.Exception)>/member#_0
<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/$stack16
<org.springframework.beans.AbstractPropertyAccessor: void setPropertyValues(org.springframework.beans.PropertyValues,boolean,boolean)>/pv#_71
<com.google.gson.internal.bind.TypeAdapters$20: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<org.mockito.cglib.core.EmitUtils$4: void processCase(int,org.mockito.asm.Label)>/$stack18
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>/$stack3
<com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack4
<java.util.Vector: void forEach(java.util.function.Consumer)>/$stack13
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack4
<org.hamcrest.DiagnosingMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/item#_0
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void config()>/$stack6
<org.springframework.aop.scope.ScopedProxyUtils: org.springframework.beans.factory.config.BeanDefinitionHolder createScopedProxy(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry,boolean)>/$stack11
<org.hamcrest.ResourceBundleDescription: void append(java.lang.String)>/str#_0
<org.hamcrest.ResourceBundleDescription: void directAppend(java.lang.String)>/str#_0
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>/l10_$$A_12#_1323
<javassist.CtClassType: void addConstructor(javassist.CtConstructor)>/$stack5
<javassist.CtClassType: void addMethod(javassist.CtMethod)>/$stack9
<ognl.ASTRootVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/$stack23
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/value_$$A_4#_127
<ognl.EvaluationPool: void recycle(ognl.Evaluation)>/value#_0
<ognl.EvaluationPool: void recycleAll(ognl.Evaluation)>/$stack2
<ognl.EvaluationPool: void recycleAll(ognl.Evaluation)>/$stack3
<ognl.EvaluationPool: void recycleAll(ognl.Evaluation)>/value#_0
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/ltw_$$A_2#_96
<com.google.gson.internal.bind.TypeAdapters$17: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<java.util.Locale: java.lang.String toLanguageTag()>/l6_$$A_1#_1416
<ognl.ASTAnd: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_35#_826
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldFlushWholeStreamToHttpResponse()>/$stack4
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultRouter: void add(br.com.caelum.vraptor.http.route.Route)>/r#_0
<com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy: void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder)>/obj#_0
<java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator,int,int,java.text.AttributedCharacterIterator$Attribute[])>/l13#_277
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack5
<java.text.AttributedString: void setAttributes(java.util.Map,int)>/$stack20
<java.text.AttributedString: void setAttributes(java.util.Map,int)>/$stack22
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldUseConverterIfItExists()>/$stack11
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack10
<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject: void addText(java.lang.String)>/text_$$A_3#_130
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack14
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack10
<com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Iterable)>/$stack8
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/convertedValue#_320
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertTextValue(java.lang.Object,java.lang.String,java.beans.PropertyEditor)>/oldValue#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertTextValue(java.lang.Object,java.lang.String,java.beans.PropertyEditor)>/newTextValue#_0
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedElement#_520
<br.com.caelum.vraptor.interceptor.download.FileDownload: void write(javax.servlet.http.HttpServletResponse)>/response#_0
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedKey#_606
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue#_610
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream)>/instance#_0
<ognl.Ognl: void setTypeConverter(java.util.Map,ognl.TypeConverter)>/converter#_0
<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>/property#_0
<org.springframework.beans.propertyeditors.InputSourceEditor: void setAsText(java.lang.String)>/text#_0
<com.thoughtworks.xstream.core.util.PresortedMap: java.util.Set keySet()>/$stack9
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByName(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/bean#_1104
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByType(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/autowiredArgument#_1152
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack10
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<com.thoughtworks.xstream.converters.collections.TreeSetConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/unmarshalledComparator#_61
<br.com.caelum.iogi.collections.IndexedListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/newElement#_34
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeAwareMethods(java.lang.String,java.lang.Object)>/beanName#_0
<com.thoughtworks.xstream.io.path.PathTrackingWriter: void startNode(java.lang.String)>/$stack7_$$A_2
<com.thoughtworks.xstream.io.path.PathTrackingWriter: void startNode(java.lang.String,java.lang.Class)>/$stack8_$$A_2
<com.google.gson.internal.bind.TypeAdapters$13: void write(com.google.gson.stream.JsonWriter,java.lang.String)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$13: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<org.mockito.asm.util.AbstractVisitor: void printList(java.io.PrintWriter,java.util.List)>/$stack7
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>/$stack13
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>/$stack16
<com.google.gson.internal.Excluder$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/value#_0
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack36
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/index#7#_139
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack32
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack26
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack17
<com.google.gson.internal.bind.TypeAdapters$4: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<com.google.gson.internal.bind.TypeAdapters$22$1: void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$22$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack6
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack11
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/deserializer#_93
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack20
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/deserializer#_110
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack20
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/deserializer#_130
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack24
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack13
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/deserializer#_159
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack20
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/deserializer#_176
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack20
<com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Character)>/$stack3_$$A_2
<com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<com.google.gson.internal.bind.TypeAdapters$18: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<com.google.gson.internal.bind.TypeAdapters$24: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<com.google.common.collect.AbstractMultiset: boolean add(java.lang.Object)>/element#_0
<org.mockito.internal.creation.jmock.ClassImposterizer: java.lang.Class createProxyClass(java.lang.Class,java.lang.Class[])>/$stack7
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack6
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack13
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack17
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack16
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack21
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack13
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack17
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack16
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/l1#_0
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/l2#_0
<br.com.caelum.vraptor.view.DefaultPageResult: void defaultView()>/$stack11
<br.com.caelum.vraptor.view.DefaultPageResult: void defaultView()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResult: void include()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResult: void include()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResult: void forwardTo(java.lang.String)>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResult: void forwardTo(java.lang.String)>/$stack6
<com.google.gson.internal.bind.TypeAdapters$15: void write(com.google.gson.stream.JsonWriter,java.math.BigInteger)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$15: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack29
<br.com.caelum.iogi.parameters.Parameters: com.google.common.collect.ListMultimap groupByFirstNameComponent(java.util.List)>/parameter#_35
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack12
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack17
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/method#_89
<org.picocontainer.parameters.BasicComponentParameter: void removeExcludedAdapterIfApplicable(java.lang.Object,java.util.List)>/exclude_$$A_2#_257
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: void setValue(java.lang.Object)>/$stack3
<java.util.AbstractCollection: java.lang.String toString()>/$stack18_$$A_3
<ognl.MapPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/name#_0
<ognl.MapPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/value#_0
<org.springframework.core.convert.support.GenericConversionService$MatchableConverters: java.lang.String toString()>/$stack10
<com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack12
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack17
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack16
<br.com.caelum.vraptor.view.DefaultLogicResultTest: br.com.caelum.vraptor.view.DefaultLogicResultTest$MyComponent givenDispatcherWillBeReturnedWhenRequested()>/$stack16
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack14
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack15
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack14
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack4
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack9
<com.thoughtworks.xstream.core.util.FastStack: java.lang.String toString()>/$stack8
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/object#_117
<org.hamcrest.StringDescription: void append(java.lang.String)>/str#_0
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerCacheComponents()>/$stack14
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerCacheComponents()>/$stack16
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerAll(br.com.caelum.vraptor.ComponentRegistry,java.util.Map)>/$stack10
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerAll(br.com.caelum.vraptor.ComponentRegistry,java.util.Map)>/$stack12
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerAll(br.com.caelum.vraptor.ComponentRegistry,java.util.Map)>/$stack14
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerAll(br.com.caelum.vraptor.ComponentRegistry,java.util.Map)>/$stack16
<org.springframework.beans.BeanWrapperImpl$6: java.lang.Object run()>/$stack3
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/value#_0
<javassist.CtBehavior: void instrument(javassist.CodeConverter)>/$stack7
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack7
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack115
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack105
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack30
<com.thoughtworks.xstream.io.xml.AbstractPullReader: void move()>/event#_118
<com.thoughtworks.xstream.io.xml.AbstractPullReader: void move()>/$stack9
<org.picocontainer.PicoBuilder: void addChildToParent(org.picocontainer.MutablePicoContainer)>/newContainer#_0
<org.picocontainer.PicoBuilder: void addContainerComponents(org.picocontainer.DefaultPicoContainer)>/containerComp#_223
<org.picocontainer.PicoBuilder: org.picocontainer.ComponentFactory buildComponentFactory(org.picocontainer.DefaultPicoContainer,org.picocontainer.ComponentFactory,java.util.Stack)>/componentFactory#_230
<org.picocontainer.PicoBuilder: org.picocontainer.ComponentFactory buildComponentFactory(org.picocontainer.DefaultPicoContainer,org.picocontainer.ComponentFactory,java.util.Stack)>/lastCaf#_0
<com.thoughtworks.xstream.io.xml.AbstractPullReader: void reset()>/$stack5
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getValue()>/text#_183
<org.codehaus.jettison.util.FastStack: void push(java.lang.Object)>/o#_0
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldNotSupportNonGenericLists()>/node#_86
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/node#_98
<java.lang.invoke.MemberName: java.lang.String toString()>/$stack32
<java.lang.invoke.MemberName: java.lang.String toString()>/$stack24_$$A_2
<java.lang.invoke.MemberName: java.lang.String toString()>/$stack12_$$A_2
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/req#_0
<java.util.ArrayList: void writeObject(java.io.ObjectOutputStream)>/$stack9
<java.util.ArrayList: void forEach(java.util.function.Consumer)>/$stack13
<com.google.gson.Gson$4: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/value#_0
<com.google.gson.Gson$4: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<org.springframework.beans.factory.support.AbstractBeanFactory$2: java.lang.Object getObject()>/$stack3
<org.springframework.beans.factory.support.AbstractBeanFactory$2: java.lang.Object getObject()>/$stack10
<org.springframework.beans.factory.support.AbstractBeanFactory$2: java.lang.Object getObject()>/$stack13
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: void set(java.lang.Object)>/$stack3
<com.google.common.collect.LinkedListMultimap: void removeNode(com.google.common.collect.LinkedListMultimap$Node)>/$stack28
<com.google.common.collect.LinkedListMultimap: void removeNode(com.google.common.collect.LinkedListMultimap$Node)>/$stack8
<com.google.common.collect.LinkedListMultimap: void removeNode(com.google.common.collect.LinkedListMultimap$Node)>/$stack20
<com.google.common.collect.LinkedListMultimap: void removeNode(com.google.common.collect.LinkedListMultimap$Node)>/$stack13
<com.google.common.collect.LinkedListMultimap: void removeNode(com.google.common.collect.LinkedListMultimap$Node)>/$stack16
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/attributeName#43#_225
<org.springframework.beans.factory.support.DisposableBeanAdapter$4: java.lang.Object run()>/$stack3
<org.codehaus.jettison.json.JSONArray: java.lang.String join(java.lang.String)>/$stack10
<org.codehaus.jettison.json.JSONArray: java.io.Writer write(java.io.Writer)>/$stack11
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/field#_147
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/value#_0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/object#_0
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/object#_0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider: void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)>/object#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void setup()>/$stack11
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1: void convertAnother(java.lang.Object)>/nextItem#_0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1: void replace(java.lang.Object,java.lang.Object)>/replacement#_0
<ognl.OgnlParser: void primaryExpression()>/$stack157
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack32
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack31
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack32
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack31
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack40
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack27
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack26
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack34
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack33
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack36
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack36
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack35
<com.thoughtworks.xstream.io.path.PathTrackingReader: void <init>(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.path.PathTracker)>/$stack3
<com.thoughtworks.xstream.io.path.PathTrackingReader: void moveDown()>/$stack2
<com.thoughtworks.xstream.io.path.PathTrackingReader: void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)>/$stack5
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack17
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack16
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack17
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack16
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack37
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack36
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack31
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack30
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack17
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack16
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void setUp()>/$stack6
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void setUp()>/$stack11
<org.apache.log4j.Category: void fireRemoveAppenderEvent(org.apache.log4j.Appender)>/appender#_0
<org.apache.log4j.Category: void removeAllAppenders()>/$stack16
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>/l8#_362
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldThrowResourceNotFoundExceptionWhenNoRoutesMatchTheURI()>/route#_82
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldThrowMethodNotAllowedExceptionWhenNoRoutesMatchTheURIWithGivenHttpMethod()>/route#_97
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldObeyPriorityOfRoutes()>/second#_114
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldObeyPriorityOfRoutes()>/first#_113
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack17
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack17
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void usesTheFirstRegisteredRuleMatchingThePattern()>/$stack27
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void usesTheFirstRegisteredRuleMatchingThePattern()>/route#_168
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void throwsExceptionIfMoreThanOneUriMatchesWithSamePriority()>/route#_191
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void registerRulesFor(java.lang.Class)>/route#_306
<java.lang.invoke.LambdaForm: java.lang.String toString()>/$stack27
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/pnd#52#_206
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/constructorToUse_$$A_4#_171
<org.mockito.cglib.core.TypeUtils: org.mockito.cglib.core.Signature parseSignature(java.lang.String)>/$stack25
<org.springframework.beans.factory.BeanCreationException: void addRelatedCause(java.lang.Throwable)>/ex#_0
<org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>/relatedCause#_152
<com.thoughtworks.xstream.converters.ConversionException: void add(java.lang.String,java.lang.String)>/information#_0
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/pnd#57#_471
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryMethodToUse_$$A_4#_447
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/valueHolder_$$A_1#_610
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/entry#12#_624
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/$stack3
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/valueHolder_$$A_3#_670
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest: void shouldThrowScannerExceptionIfAnErrorOccurs()>/$stack13
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack14
<com.thoughtworks.xstream.XStream: java.lang.String toXML(java.lang.Object)>/obj#_0
<com.thoughtworks.xstream.XStream: void toXML(java.lang.Object,java.io.Writer)>/obj#_0
<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>/obj#_0
<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder)>/obj#_0
<org.springframework.expression.spel.ExpressionState: void pushActiveContextObject(org.springframework.expression.TypedValue)>/obj#_0
<org.springframework.expression.spel.ExpressionState: void setVariable(java.lang.String,java.lang.Object)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$21: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter)>/converter#_0
<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>/converter#_0
<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter)>/converter#_0
<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>/$stack6
<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>/$stack10
<com.google.common.base.Joiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>/$stack13
<com.thoughtworks.xstream.XStream: void omitField(java.lang.Class,java.lang.String)>/definedIn#_0
<com.thoughtworks.xstream.XStream: void omitField(java.lang.Class,java.lang.String)>/fieldName#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack4
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack13
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack14
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldThrowExceptionWhenThereIsAParameterContainingDotClass()>/$stack14
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: int loadBeanDefinitions(java.lang.String,java.util.Set)>/resource#_180
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack11
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack27
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldThrowException()>/$stack12
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack22
<com.google.gson.internal.bind.TypeAdapters$11: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$11: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack34
<com.google.gson.internal.bind.TypeAdapters$8: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$8: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<java.util.ArrayList$ArrayListSpliterator: boolean tryAdvance(java.util.function.Consumer)>/l4#_1350
<java.util.ArrayList$ArrayListSpliterator: void forEachRemaining(java.util.function.Consumer)>/l7#_1373
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void read(com.google.gson.stream.JsonReader,java.lang.Object)>/fieldValue#_93
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack11
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<br.com.caelum.vraptor.test.HttpServletRequestMock: void setAttribute(java.lang.String,java.lang.Object)>/name#_0
<br.com.caelum.vraptor.test.HttpServletRequestMock: void setAttribute(java.lang.String,java.lang.Object)>/o#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.DefaultRouteBuilder ofType(java.lang.Class)>/$stack3
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.DefaultRouteBuilder matching(java.lang.String)>/$stack2
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.DefaultRouteBuilder matching(java.lang.String)>/regex#_0
<org.springframework.context.support.AbstractApplicationContext: void addApplicationListener(org.springframework.context.ApplicationListener)>/listener#_0
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack7
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/registryPostProcessor_$$A_1#_584
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/postProcessor#_582
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack26
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack33
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack41
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: java.lang.String getMessage()>/$stack27_$$A_2
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: java.lang.String getMessage()>/$stack18_$$A_2
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/pp#5_$$A_1#_689
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/pp#5_$$A_4#_710
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/pp#5_$$A_6#_722
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List)>/postProcessor#_743
<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>/beanClass#_0
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack32
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack6
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack7
<org.springframework.context.support.AbstractApplicationContext: void initApplicationEventMulticaster()>/$stack5
<org.springframework.context.support.AbstractApplicationContext: void initLifecycleProcessor()>/$stack6
<org.springframework.context.support.AbstractApplicationContext: void registerListeners()>/lisName#5#_857
<org.springframework.context.support.AbstractApplicationContext: void finishBeanFactoryInitialization(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack9
<com.google.gson.Gson$FutureTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/root#_0
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>/l11#_2394
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.TypeConverter getTypeConverter()>/$stack5
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>/beanName#_0
<br.com.caelum.iogi.reflection.NewObject: void setProperty(br.com.caelum.iogi.reflection.NewObject$Setter)>/propertyValue#_58
<org.springframework.beans.factory.support.AbstractBeanFactory: void initBeanWrapper(org.springframework.beans.BeanWrapper)>/$stack2
<org.springframework.beans.factory.support.AbstractBeanFactory: void clearMergedBeanDefinition(java.lang.String)>/beanName#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: void markBeanAsCreated(java.lang.String)>/beanName#_0
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: void start(javax.servlet.ServletContext)>/context#_0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<org.springframework.web.context.support.ServletContextResourcePatternResolver: java.util.Set doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)>/sc#_85
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack17
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack18_$$A_3
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/attribute#_103
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value#_104
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void registerDestroyListener(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/listener#_0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void start(javax.servlet.http.HttpSession)>/session#_0
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermissions getMinimum(javax.crypto.CryptoPermissions)>/$stack50
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermissions getMinimum(javax.crypto.CryptoPermissions)>/$stack39
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>/l5#_359
<org.springframework.expression.spel.ast.CompoundExpression: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/result_$$A_1#_54
<com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/instance_$$A_1#_72
<org.springframework.expression.spel.ast.CompoundExpression: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/value#_0
<org.springframework.expression.spel.ast.CompoundExpression: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/ctx_$$A_1#_78
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack14
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowMethodExceptionIfThereIsAnInvocationException()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack17
<com.google.gson.internal.bind.JsonTreeReader: void <init>(com.google.gson.JsonElement)>/element#_0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack14
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack14
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack14
<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>/$stack33
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack29
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowExceptionIfYouHaventSpecifiedWhereToGoOnValidationError()>/$stack22
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>/$stack7
<java.io.PrintStream: void println(java.lang.Object)>/l2#_821
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/$stack7
<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>/item#_0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException: void <init>(java.lang.Object,com.thoughtworks.xstream.io.path.Path)>/$stack6
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPrimaryExpression()>/start#_300
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPrimaryExpression()>/$stack7
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void consumeArguments(java.util.List)>/$stack19
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatInlineList()>/$stack12
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatConstructorReference()>/$stack28
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatConstructorReference()>/$stack43
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void push(org.springframework.expression.spel.ast.SpelNodeImpl)>/newNode#_0
<org.springframework.expression.spel.ast.VariableReference: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.test.HttpSessionMock: void setAttribute(java.lang.String,java.lang.Object)>/name#_0
<br.com.caelum.vraptor.test.HttpSessionMock: void setAttribute(java.lang.String,java.lang.Object)>/value#_0
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/type#_78
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/prevType#_79
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>/$stack14
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>/$stack17
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>/$stack31
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<org.mockito.cglib.core.CodeEmitter: void push(java.lang.String)>/value#_0
<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>/l3_$$A_6#_2076
<org.springframework.beans.factory.support.AbstractBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/$stack6
<org.springframework.beans.factory.support.AbstractBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/$stack17
<org.springframework.beans.factory.support.AbstractBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/original#_0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/$stack36
<org.springframework.beans.factory.support.AbstractBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/originalAbd#_230
<org.springframework.beans.factory.support.AbstractBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/$stack35
<org.mockito.cglib.core.CodeEmitter: void invoke(org.mockito.cglib.core.MethodInfo)>/method#_0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/$stack87
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/$stack19
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/other#_0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/$stack49
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/otherAbd#_305
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/$stack37
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldFlushWholeStreamToHttpResponse()>/$stack4
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack4
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack119
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack120
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack114
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack115
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/result#18#_109
<org.springframework.core.convert.support.StringToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_60
<org.picocontainer.injectors.AbstractInjector: java.lang.Object caughtInstantiationException(org.picocontainer.ComponentMonitor,java.lang.reflect.Constructor,java.lang.InstantiationException,org.picocontainer.PicoContainer)>/constructor#_0
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/l13#_481
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/l12#37#_477
<org.picocontainer.injectors.AbstractInjector: java.lang.Object caughtIllegalAccessException(org.picocontainer.ComponentMonitor,java.lang.reflect.Constructor,java.lang.IllegalAccessException,org.picocontainer.PicoContainer)>/constructor#_0
<sun.security.provider.PolicyFile$PolicyEntry: java.lang.String toString()>/l3#_2055
<org.picocontainer.injectors.AbstractInjector: java.lang.Object caughtInvocationTargetException(org.picocontainer.ComponentMonitor,java.lang.reflect.Member,java.lang.Object,java.lang.reflect.InvocationTargetException)>/member#_0
<org.picocontainer.injectors.AbstractInjector: java.lang.Object caughtIllegalAccessException(org.picocontainer.ComponentMonitor,java.lang.reflect.Member,java.lang.Object,java.lang.IllegalAccessException)>/member#_0
<org.springframework.beans.propertyeditors.CustomMapEditor: void setAsText(java.lang.String)>/text#_0
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/$stack21
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/$stack23
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveParameterType(org.springframework.core.MethodParameter,java.lang.Class)>/result#_84
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack22
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack24
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseExclude(java.util.Map$Entry)>/$stack4
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseExclude(java.util.Map$Entry)>/$stack7
<org.springframework.context.support.AbstractRefreshableApplicationContext: void refreshBeanFactory()>/$stack5
<java.io.PrintWriter: void println(java.lang.Object)>/l2#_754
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack86
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/value#_90
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldClearAllListenersFromSessionOnStart()>/$stack1
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldClearAllListenersFromSessionOnStart()>/$stack5
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldClearAllListenersFromSessionOnStart()>/$stack7
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack1
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack3
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack1
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack3
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack5
<java.util.Vector$Itr: void forEachRemaining(java.util.function.Consumer)>/$stack25
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/fieldName#_0
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/value#_0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/list#_54
<br.com.caelum.vraptor.VRaptorTest: void shoudlComplainIfNotInAServletEnviroment()>/request#_70
<br.com.caelum.vraptor.VRaptorTest: void shoudlComplainIfNotInAServletEnviroment()>/response#_71
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack19
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack35
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack49
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/request#_79
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/response#_80
<br.com.caelum.vraptor.VRaptorTest: void shouldStopContainer()>/$stack5
<br.com.caelum.vraptor.VRaptorTest: void shouldStopContainer()>/$stack20
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/response#_176
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/chain#_178
<java.beans.PropertyDescriptor: void <init>(java.beans.PropertyDescriptor,java.beans.PropertyDescriptor)>/l6#_578
<java.beans.PropertyDescriptor: void <init>(java.beans.PropertyDescriptor,java.beans.PropertyDescriptor)>/l5#19#_577
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack37
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/newValue#_0
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack34
<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/resolver#_294
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuffer,java.lang.Object)>/oAsString#_304
<org.springframework.beans.BeanWrapperImpl: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapperImpl)>/object#_0
<org.springframework.beans.BeanWrapperImpl: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapperImpl)>/$stack4
<org.springframework.beans.BeanWrapperImpl: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapperImpl)>/$stack7
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/$stack3
<java.util.ArrayList$Itr: void forEachRemaining(java.util.function.Consumer)>/$stack21
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithConstraint()>/$stack20
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldUseDefaultLocale()>/$stack15
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithTwoConstraints()>/$stack23
<ognl.ASTList: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack10
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue_$$A_5#_963
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/i#60#_1000
<ognl.ObjectArrayPool: void recycle(java.lang.Object[])>/value#_0
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack52
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<java.util.Hashtable: void putAll(java.util.Map)>/$stack8
<java.util.Hashtable: void putAll(java.util.Map)>/$stack9
<java.util.Hashtable: java.lang.String toString()>/$stack16_$$A_3
<java.util.Hashtable: java.lang.String toString()>/$stack19_$$A_3
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_66
<com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack22
<com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack16
<com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack17
<com.google.gson.internal.bind.ObjectTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$3: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: boolean replay(java.lang.Exception)>/$stack8
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/toInject#_0
<com.thoughtworks.xstream.XStream$2: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>/converter#_0
<org.springframework.core.convert.support.ArrayToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetElement#_64
<org.mockito.cglib.core.EmitUtils$6: void processCase(int,org.mockito.asm.Label)>/$stack48
<org.mockito.cglib.core.EmitUtils$6: void processCase(int,org.mockito.asm.Label)>/string#_279
<org.picocontainer.injectors.ConstructorInjector$1: java.lang.Object run(java.lang.Object)>/ctor_$$A_2#_346
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/$stack11
<com.google.common.collect.LinkedListMultimap$DistinctKeyIterator: java.lang.Object next()>/$stack4
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void registerComponents(com.thoughtworks.xstream.XStream)>/converter#_70
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void registerComponents(com.thoughtworks.xstream.XStream)>/converter#4#_76
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldConfigureAllClasses()>/$stack8
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldNotDoAnythingIfHasNoClasses()>/$stack4
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldThrowScannerExceptionIfClassNotExists()>/$stack5
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: java.util.Collection read(com.google.gson.stream.JsonReader)>/instance#_81
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Collection)>/element#_95
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<com.google.gson.TypeAdapter: com.google.gson.JsonElement toJsonTree(java.lang.Object)>/value#_0
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/$stack34
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/key#_254
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Collection getCollectionInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map,org.picocontainer.NameBinding,boolean)>/$stack17
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMapInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map)>/$stack16
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack15
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetKey#_70
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetValue#_73
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/bean#_273
<com.google.gson.internal.bind.JsonTreeWriter: void put(com.google.gson.JsonElement)>/$stack12
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldFlushWholeFileToHttpResponse()>/$stack4
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack4
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldThrowIllegalArgumentExceptionIfFileDoesntExists()>/$stack5
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void handlesInclude()>/$stack15
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleTheCorrectMethod()>/$stack15
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveRequestMethods()>/$stack15
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveGetRequestUsingThe_methodParameter()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldThrowExceptionWhenRequestANotKnownMethod()>/$stack17
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldOverrideTheHttpMethodByUsingThe_methodParameter()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfRootContext()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContext()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfPlainRootContext()>/$stack15
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfPlainRootContext()>/$stack15
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfNonRootContext()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack19
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContextButPlainRequest()>/$stack19
<com.thoughtworks.xstream.converters.basic.CharConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack4
<org.springframework.expression.spel.support.StandardEvaluationContext: void setVariable(java.lang.String,java.lang.Object)>/value#_0
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack86
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack65
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack169
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack118
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack141
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack7
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack6
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldThrowExceptionWhenAnUnsupportedEncodingExceptionOccurs()>/$stack9
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldThrowExceptionWhenAnUnsupportedEncodingExceptionOccurs()>/$stack8
<org.picocontainer.adapters.InstanceAdapter: void start(org.picocontainer.PicoContainer)>/$stack2
<org.picocontainer.adapters.InstanceAdapter: void stop(org.picocontainer.PicoContainer)>/$stack2
<org.picocontainer.adapters.InstanceAdapter: void dispose(org.picocontainer.PicoContainer)>/$stack2
<org.picocontainer.adapters.InstanceAdapter: void start(java.lang.Object)>/$stack2
<org.picocontainer.adapters.InstanceAdapter: void stop(java.lang.Object)>/$stack2
<org.picocontainer.adapters.InstanceAdapter: void dispose(java.lang.Object)>/$stack2
<java.net.URLClassLoader: void close()>/l5#10#_315
<br.com.caelum.vraptor.scan.NullWebAppBootstrapTest: void shouldNotDoAnything()>/$stack2
<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/resolver#_47
<com.thoughtworks.xstream.core.ReferenceByIdMarshaller: void fireValidReference(java.lang.Object)>/$stack6
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldNotThrowExceptionsOnHeaders()>/httpResult#_102
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSendError()>/httpResult#_115
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSendErrorWithMessage()>/httpResult#_123
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSetStatus()>/httpResult#_131
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldBeAbleToChainMethodsOnHttpResult()>/httpResult#_139
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnMoved()>/httpResult#_148
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnMovedToLogic()>/httpResult#_164
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onRefererResultShouldThrowExceptionsOnForward()>/referer#_173
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onRefererResultShouldThrowExceptionsOnRedirect()>/referer#_182
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnNotFound()>/status#_191
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnHeader()>/status#_200
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnCreated()>/status#_209
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnCreatedWithLocation()>/status#_217
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnOk()>/status#_226
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnConflict()>/status#_235
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMethodNotAllowed()>/status#_243
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMovedPermanentlyTo()>/status#_251
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMovedPermanentlyToLogic()>/status#_259
<com.google.gson.Gson$3: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/value#_0
<com.google.gson.Gson$3: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onXMLSerializationResultShouldThrowExceptionOnlyOnSerializeMethod()>/serialization#_273
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onSerializerResultsShouldBeAbleToCreateValidationInstancesEvenIfChildClassesUsesCovariantType()>/serialization#_326
<com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)>/candidate#_356
<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>/src#_0
<com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)>/src#_0
<com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)>/src#_0
<java.util.Arrays: java.lang.String toString(java.lang.Object[])>/$stack8
<org.springframework.expression.spel.ast.Assign: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<com.google.gson.internal.bind.TypeAdapters$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<org.hamcrest.object.IsCompatibleType: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/$stack3
<br.com.caelum.vraptor.core.DefaultConvertersTest: void shouldRegisterConvertersForAllDefaultTypes()>/expected#_97
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder copy()>/$stack6
<org.springframework.beans.propertyeditors.InputStreamEditor: void setAsText(java.lang.String)>/text#_0
<com.google.common.base.Joiner$MapJoiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>/$stack12
<com.google.common.base.Joiner$MapJoiner: java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator)>/$stack28
<org.springframework.core.convert.support.ObjectToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack14
<org.mockito.cglib.core.CollectionUtils: java.util.Map getIndexMap(java.util.List)>/$stack7
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack4
<com.google.gson.internal.bind.TypeAdapters$6: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$6: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack27
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack32
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack37
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack51
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void settingShouldNullifyUpToIndexAndIgnoreRemoval()>/$stack21
<javassist.bytecode.stackmap.TypeData$TypeName: void add(java.util.ArrayList,javassist.bytecode.stackmap.TypeData)>/td#_0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/value#_413
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/$stack8
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack1
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack6
<com.google.gson.internal.bind.TypeAdapters$19: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/initializer#_412
<ognl.ASTTest: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack62
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack6
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>/field_$$A_1#_638
<org.hamcrest.core.SubstringMatcher: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/$stack3
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack14
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack13
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack18
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsSimpleDoNothing()>/$stack3
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack6
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack5
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack9
<com.thoughtworks.xstream.io.xml.StaxWriter: void addAttribute(java.lang.String,java.lang.String)>/$stack5
<com.thoughtworks.xstream.io.xml.StaxWriter: void addAttribute(java.lang.String,java.lang.String)>/value#_0
<com.thoughtworks.xstream.io.xml.StaxWriter: void setValue(java.lang.String)>/text#_0
<com.thoughtworks.xstream.io.xml.StaxWriter: void startNode(java.lang.String)>/$stack15
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean isFinished()>/$stack9
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean isNotSurplus(java.lang.Object)>/item#_0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: void describeMismatch(org.hamcrest.Matcher,java.lang.Object)>/item#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingleton(java.lang.String,java.lang.Object)>/beanName#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingleton(java.lang.String,java.lang.Object)>/$stack5_$$A_2
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,boolean)>/singletonObject_$$A_2#_185
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/suppressedException#_226
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/singletonObject_$$A_1#_222
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void onSuppressedException(java.lang.Exception)>/ex#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void removeSingleton(java.lang.String)>/beanName#_0
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setAsText(java.lang.String)>/text#_0
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/$stack29
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/$stack19
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/$stack13
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDisposableBean(java.lang.String,org.springframework.beans.factory.DisposableBean)>/beanName#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerContainedBean(java.lang.String,java.lang.String)>/containedBeanName#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroySingletons()>/$stack14
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroyBean(java.lang.String,org.springframework.beans.factory.DisposableBean)>/dependentBeanName#_479
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroyBean(java.lang.String,org.springframework.beans.factory.DisposableBean)>/containedBeanName#18#_497
<ognl.SimpleNode: void evaluateSetValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<ognl.SimpleNode: void evaluateSetValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/evaluation#_232
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/result#_236
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/eval#_246
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/eval_$$A_1_$$A_1#_246
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/evaluation#_275
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/eval#_290
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/eval_$$A_1_$$A_1#_290
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void setUp()>/$stack4
<br.com.caelum.vraptor.core.JstlLocalizationTest: void setUp()>/$stack16
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedKey_$$A_2#_201
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedValue_$$A_2#_201
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedValue_$$A_3#_221
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/targetObject#_186
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack45
<com.google.gson.internal.bind.TypeAdapters$14: void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$14: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/value#_46
<org.hamcrest.BaseMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/item#_0
<org.springframework.web.context.support.ServletContextScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/scopedObject_$$A_1#_68
<org.springframework.web.context.support.ServletContextScope: void registerDestructionCallback(java.lang.String,java.lang.Runnable)>/name#_0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/$stack3
<org.springframework.web.context.support.WebApplicationContextUtils: void registerEnvironmentBeans(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,javax.servlet.ServletContext,javax.servlet.ServletConfig)>/sc#_0
<com.thoughtworks.xstream.core.util.OrderRetainingMap: void putAll(java.util.Map)>/$stack8
<com.thoughtworks.xstream.core.util.OrderRetainingMap: void putAll(java.util.Map)>/$stack9
<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>/method#_885
<ognl.OgnlContext: void setValues(java.util.Map)>/$stack9
<ognl.OgnlContext: void recycleLastEvaluation()>/$stack2
<ognl.OgnlContext: void setCurrentType(java.lang.Class)>/type#_0
<ognl.OgnlContext: void setPreviousType(java.lang.Class)>/type#_0
<ognl.OgnlContext: void pushEvaluation(ognl.Evaluation)>/value#_0
<ognl.OgnlContext: ognl.Evaluation popEvaluation()>/$stack6_$$A_2
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack21
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack29
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack27
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack24
<br.com.caelum.vraptor.VRaptor$1: java.lang.Object insideRequest(br.com.caelum.vraptor.ioc.Container)>/$stack4
<br.com.caelum.vraptor.VRaptor$1: java.lang.Object insideRequest(br.com.caelum.vraptor.ioc.Container)>/$stack3
<br.com.caelum.vraptor.resource.DefaultResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/$stack5
<br.com.caelum.vraptor.resource.DefaultResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/$stack6
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>/l7#_513
<org.mockito.asm.ClassWriter: int newUTF8(java.lang.String)>/value#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$7: java.lang.Object run()>/$stack2
<org.mockito.asm.ClassWriter: int addType(java.lang.String)>/type#_0
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject)>/$stack10
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: void processKey(java.lang.String,java.lang.Object)>/$stack19
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack7
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack6
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack6
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfServletExceptionOccurs()>/$stack6
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfServletExceptionOccurs()>/$stack5
<com.google.gson.JsonPrimitive: void <init>(java.lang.Number)>/number#_0
<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>/string#_0
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/defaultAttribute#_167
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/ea#_172
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack70
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack61
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack32
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack27
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/resourceInstance#_0
<org.apache.log4j.Hierarchy: void fireRemoveAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)>/appender#_0
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/actualArgs_$$A_3#_1382
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/actualArgs_$$A_4#_1382
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/actualArgs_$$A_5#_1382
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/actualArgs_$$A_6#_1382
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/actualArgs_$$A_7#_1378
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/actualArgs_$$A_9#_1345
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/value_$$A_2#_1634
<org.springframework.expression.common.CompositeStringExpression: java.lang.String getValue(org.springframework.expression.EvaluationContext)>/value#_82
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack55
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack42
<org.springframework.beans.propertyeditors.URLEditor: void setAsText(java.lang.String)>/text#_0
<org.picocontainer.behaviors.AbstractBehavior: void start(java.lang.Object)>/component#_0
<org.picocontainer.behaviors.AbstractBehavior: void stop(java.lang.Object)>/component#_0
<org.picocontainer.behaviors.AbstractBehavior: void dispose(java.lang.Object)>/component#_0
<org.picocontainer.injectors.MethodInjector: java.lang.reflect.Method getInjectorMethod()>/$stack14
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void setup()>/$stack4
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack8
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack7
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack11
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack10
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack9
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack9
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack8
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack10
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack9
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack11
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack16
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasNotUsedShouldThrowNPE()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasNotUsedShouldThrowNPE()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack21
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack20
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,int)>/c#_90
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,boolean)>/c#_110
<java.util.Collections: void reverse(java.util.List)>/$stack15
<java.util.Collections: void reverse(java.util.List)>/l6#_386
<java.util.Collections: void swap(java.util.List,int,int)>/$stack5
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object[])>/$stack7
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/previousRoot#_55
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#2#_75
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/previousRoot#_72
<com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<org.mockito.internal.configuration.DefaultInjectionEngine: void inject(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>/matchingMock#_0
<com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withAnyArgs()>/$stack18
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/propKey_$$A_3#_171
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/propValue_$$A_3#_174
<com.google.gson.internal.bind.TypeAdapters$25: com.google.gson.JsonElement read(com.google.gson.stream.JsonReader)>/$stack11
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/$stack43
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/$stack39
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/e#_695
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/$stack24
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack18
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/$stack27
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setSerializationId(java.lang.String)>/serializationId#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setSerializationId(java.lang.String)>/$stack3
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/$stack11
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>/$stack11
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>/$stack14
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/resolvedKey#_377
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/resolvedValue#_378
<com.thoughtworks.xstream.converters.collections.CollectionConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/item#_73
<com.thoughtworks.xstream.converters.collections.CollectionConverter: void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection)>/item#_98
<com.thoughtworks.xstream.core.TreeMarshaller: void convertAnother(java.lang.Object)>/item#_0
<com.thoughtworks.xstream.core.TreeMarshaller: void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/item#_0
<com.thoughtworks.xstream.core.TreeMarshaller: void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/converter_$$A_2#_56
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/beanName#4_$$A_3#_322
<com.thoughtworks.xstream.core.TreeMarshaller: void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)>/item#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)>/$stack16
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void resetBeanDefinition(java.lang.String)>/beanName#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldInvokePrimitiveConverter()>/$stack6
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldInvokeCustomTypeConverter()>/$stack5
<com.thoughtworks.xstream.converters.extended.ColorConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack19
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/$stack32
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String toString()>/$stack7
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>/l6_$$A_1#_2545
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>/l6_$$A_2#_2554
<br.com.caelum.vraptor.core.DefaultResultTest: br.com.caelum.vraptor.View mockResult(java.lang.Class)>/pageResult#_101
<com.google.gson.internal.bind.TypeAdapters$7: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$7: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<com.thoughtworks.xstream.io.WriterWrapper: void addAttribute(java.lang.String,java.lang.String)>/value#_0
<com.thoughtworks.xstream.io.WriterWrapper: void setValue(java.lang.String)>/text#_0
<java.util.AbstractMap: void putAll(java.util.Map)>/$stack8
<java.util.AbstractMap: void putAll(java.util.Map)>/$stack9
<java.util.AbstractMap: java.lang.String toString()>/$stack31_$$A_3
<java.util.AbstractMap: java.lang.String toString()>/$stack28_$$A_3
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1: void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/$stack50
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1: void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/str#_123
<org.springframework.web.context.request.AbstractRequestAttributesScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/scopedObject_$$A_1#_43
<org.springframework.web.context.request.AbstractRequestAttributesScope: void registerDestructionCallback(java.lang.String,java.lang.Runnable)>/name#_0
<com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>/$stack5
<org.picocontainer.injectors.SingleMemberInjector: java.lang.Object getParameter(org.picocontainer.PicoContainer,java.lang.reflect.AccessibleObject,int,java.lang.reflect.Type,java.lang.annotation.Annotation,org.picocontainer.Parameter,org.picocontainer.ComponentAdapter)>/result#_76
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack29
<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>/$stack9_$$A_2
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/method#_0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack8
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerOnScope(java.lang.Class,java.lang.Class)>/requiredType#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerOnScope(java.lang.Class,java.lang.Class)>/type#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack33
<org.hamcrest.core.IsEqual: void describeTo(org.hamcrest.Description)>/$stack2
<org.springframework.beans.PropertyMatches: java.lang.String buildErrorMessage()>/$stack5
<org.mockito.asm.MethodWriter: void writeFrameTypes(int,int)>/$stack37
<com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/$stack3
<com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<com.google.gson.internal.bind.TypeAdapters$5: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$5: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/$stack25_$$A_2
<java.lang.ClassLoader: long findNative(java.lang.ClassLoader,java.lang.String)>/$stack13
<java.lang.ClassLoader: long findNative(java.lang.ClassLoader,java.lang.String)>/l6#_1962
<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap fromEntryList(java.util.List)>/$stack5
<org.springframework.expression.spel.ast.TypeReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<com.google.common.collect.ByFunctionOrdering: void <init>(com.google.common.base.Function,com.google.common.collect.Ordering)>/$stack5
<com.google.common.collect.ByFunctionOrdering: void <init>(com.google.common.base.Function,com.google.common.collect.Ordering)>/$stack6
<com.google.common.collect.ByFunctionOrdering: void <init>(com.google.common.base.Function,com.google.common.collect.Ordering)>/$stack3
<com.google.common.collect.ByFunctionOrdering: void <init>(com.google.common.base.Function,com.google.common.collect.Ordering)>/$stack4
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack18
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/sm#_846
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack15
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/va#_831
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack16
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/vta#_836
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack14
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/na#_826
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack17
<javassist.bytecode.CodeIterator: byte[] insertGapCore1(byte[],int,int,boolean,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/smt#_842
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/bean#_0
<javassist.bytecode.CodeIterator: void addLdcW(javassist.bytecode.CodeAttribute$LdcEntry,java.util.ArrayList)>/$stack10
<javassist.bytecode.CodeIterator: void addLdcW(javassist.bytecode.CodeAttribute$LdcEntry,java.util.ArrayList)>/$stack11
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack16
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/b_$$A_4#_1139
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack20
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack21
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack24
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/b_$$A_2#_1126
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack29
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack30
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack34
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/$stack35
<javassist.bytecode.CodeIterator: byte[] makeExapndedCode(byte[],java.util.ArrayList,int,int)>/$stack21
<javassist.bytecode.CodeIterator: byte[] makeExapndedCode(byte[],java.util.ArrayList,int,int)>/b_$$A_5#_1254
<javassist.bytecode.CodeIterator: byte[] makeExapndedCode(byte[],java.util.ArrayList,int,int)>/$stack30
<javassist.bytecode.CodeIterator: byte[] makeExapndedCode(byte[],java.util.ArrayList,int,int)>/b_$$A_2#_1232
<javassist.bytecode.CodeIterator: byte[] makeExapndedCode(byte[],java.util.ArrayList,int,int)>/$stack31
<javassist.bytecode.CodeIterator: byte[] makeExapndedCode(byte[],java.util.ArrayList,int,int)>/b_$$A_1#_1222
<java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.net.InetAddress[])>/$stack33
<com.google.common.collect.Count: boolean equals(java.lang.Object)>/obj#_0
<com.google.common.collect.Count: boolean equals(java.lang.Object)>/$stack3
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/$stack45
<br.com.caelum.iogi.reflection.ClassConstructor: java.util.Collection notFulfilledBy(br.com.caelum.iogi.parameters.Parameters)>/$stack10
<ognl.OgnlOps: boolean booleanValue(java.lang.Object)>/value#_0
<ognl.OgnlOps: boolean booleanValue(java.lang.Object)>/$stack17
<ognl.OgnlOps: boolean booleanValue(java.lang.Object)>/$stack12
<ognl.OgnlOps: boolean booleanValue(java.lang.Object)>/$stack8
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/$stack8
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/$stack9
<ognl.OgnlOps: long longValue(java.lang.Object)>/$stack17
<ognl.OgnlOps: long longValue(java.lang.Object)>/$stack12
<ognl.OgnlOps: long longValue(java.lang.Object)>/$stack22
<ognl.OgnlOps: double doubleValue(java.lang.Object)>/$stack19
<ognl.OgnlOps: double doubleValue(java.lang.Object)>/$stack14
<ognl.OgnlOps: double doubleValue(java.lang.Object)>/$stack24
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/resource#_66
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack29
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Map scanBasePackages(java.util.List,br.com.caelum.vraptor.scan.ClasspathResolver)>/$stack10
<ognl.OgnlOps: java.math.BigInteger bigIntValue(java.lang.Object)>/$stack22
<ognl.OgnlOps: java.math.BigInteger bigIntValue(java.lang.Object)>/$stack16
<ognl.OgnlOps: java.math.BigInteger bigIntValue(java.lang.Object)>/$stack36
<ognl.OgnlOps: java.math.BigInteger bigIntValue(java.lang.Object)>/$stack32
<ognl.OgnlOps: java.math.BigInteger bigIntValue(java.lang.Object)>/$stack28
<ognl.OgnlOps: java.math.BigDecimal bigDecValue(java.lang.Object)>/$stack19
<ognl.OgnlOps: java.math.BigDecimal bigDecValue(java.lang.Object)>/$stack13
<ognl.OgnlOps: java.math.BigDecimal bigDecValue(java.lang.Object)>/$stack29
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void addBasePackagesStereotypes(java.util.Map,java.util.List,java.util.HashSet)>/$stack14
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: boolean packagesContains(java.util.List,java.lang.String)>/$stack7
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void findComponentsFromBasePackages(java.util.Map,java.util.List,java.util.Set)>/$stack20
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Set nullToEmpty(java.util.Set)>/$stack3
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Set nullToEmpty(java.util.Set)>/$stack4
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractType(org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class,int,int,int)>/resolvedType_$$A_2#_285
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractType(org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class,int,int,int)>/$stack19
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractType(org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class,int,int,int)>/mappedType#_282
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/currentTypeIndex#8_$$A_7#_358
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/$stack25
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/$stack53
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/indexToUse#9#_338
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/currentTypeIndex#8_$$A_5#_353
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/$stack33
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/$stack26
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/currentTypeIndex#8_$$A_2#_341
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/indexToUse#18#_344
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getAdapter(java.lang.Class,java.util.Locale)>/$stack21
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceCollection#_55
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter findAdapter(java.lang.Class,java.util.Locale)>/$stack9
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>/$stack13
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(javax.servlet.ServletRequest)>/$stack5
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(javax.servlet.ServletRequest)>/$stack6
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(java.lang.Class)>/$stack9
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(java.lang.Class)>/$stack10
<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/map#_72
<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack13
<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/entry#_75
<ognl.OgnlOps: boolean equal(java.lang.Object,java.lang.Object)>/$stack6
<ognl.OgnlOps: boolean equal(java.lang.Object,java.lang.Object)>/$stack8
<br.com.caelum.iogi.reflection.NewObject$JavaSetter$1: boolean accepts(java.lang.Object)>/x0#_0
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>/$stack33
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>/$stack34
<org.mockito.cglib.core.VisibilityPredicate: boolean evaluate(java.lang.Object)>/arg#_0
<org.mockito.cglib.core.VisibilityPredicate: boolean evaluate(java.lang.Object)>/$stack4
<org.mockito.cglib.core.VisibilityPredicate: boolean evaluate(java.lang.Object)>/$stack9
<org.mockito.cglib.core.VisibilityPredicate: boolean evaluate(java.lang.Object)>/$stack16
<ognl.SetPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/set#_47
<org.joda.time.LocalDate: boolean equals(java.lang.Object)>/l2#_521
<com.google.common.collect.Sets: java.util.Set filter(java.util.Set,com.google.common.base.Predicate)>/$stack14
<com.google.common.collect.Sets: java.util.SortedSet filter(java.util.SortedSet,com.google.common.base.Predicate)>/$stack13
<com.google.common.base.Predicates$NotPredicate: void <init>(com.google.common.base.Predicate)>/$stack2
<com.google.common.base.Predicates$NotPredicate: void <init>(com.google.common.base.Predicate)>/$stack3
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$CollectionSerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/l1#_0
<javassist.bytecode.ExceptionTable: int startPc(int)>/$stack4
<javassist.bytecode.ExceptionTable: int startPc(int)>/e#_95
<javassist.bytecode.ExceptionTable: int endPc(int)>/$stack4
<javassist.bytecode.ExceptionTable: int endPc(int)>/e#_116
<org.picocontainer.injectors.SetterInjector: java.lang.Object memberInvocationReturn(java.lang.Object,java.lang.reflect.AccessibleObject,java.lang.Object)>/member#_0
<org.picocontainer.injectors.SetterInjector: java.lang.Object memberInvocationReturn(java.lang.Object,java.lang.reflect.AccessibleObject,java.lang.Object)>/$stack4
<javassist.bytecode.ExceptionTable: int handlerPc(int)>/$stack4
<javassist.bytecode.ExceptionTable: int handlerPc(int)>/e#_137
<org.picocontainer.injectors.SetterInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/member#_0
<org.picocontainer.injectors.SetterInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/$stack5
<javassist.bytecode.ExceptionTable: int catchType(int)>/$stack4
<javassist.bytecode.ExceptionTable: int catchType(int)>/e#_160
<javassist.bytecode.ExceptionTable: void add(int,javassist.bytecode.ExceptionTable,int)>/$stack8
<javassist.bytecode.ExceptionTable: void add(int,javassist.bytecode.ExceptionTable,int)>/e#_185
<javassist.bytecode.ExceptionTable: javassist.bytecode.ExceptionTable copy(javassist.bytecode.ConstPool,java.util.Map)>/$stack12
<javassist.bytecode.ExceptionTable: javassist.bytecode.ExceptionTable copy(javassist.bytecode.ConstPool,java.util.Map)>/e#_243
<javassist.bytecode.ExceptionTable: void shiftPc(int,int,boolean)>/$stack9
<javassist.bytecode.ExceptionTable: void shiftPc(int,int,boolean)>/e#_254
<javassist.bytecode.ExceptionTable: void write(java.io.DataOutputStream)>/$stack7
<javassist.bytecode.ExceptionTable: void write(java.io.DataOutputStream)>/e#_273
<br.com.caelum.vraptor.validator.DefaultValidator: void addAll(java.util.Collection)>/$stack6
<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>/$stack5
<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>/$stack10
<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: boolean equals(java.lang.Object)>/other#_0
<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>/$stack16
<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>/$stack28
<com.google.gson.internal.bind.TypeAdapters$23: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/member_$$A_3#_190
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/member_$$A_4#_169
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack20
<org.picocontainer.injectors.IterativeInjector: java.lang.Object decorateComponentInstance(org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Object,org.picocontainer.PicoContainer,org.picocontainer.PicoContainer)>/$stack29
<java.net.InetAddress: java.lang.String getHostFromNameService(java.net.InetAddress,boolean)>/$stack11
<java.net.InetAddress: java.lang.String getHostFromNameService(java.net.InetAddress,boolean)>/l4#_614
<java.net.InetAddress: java.net.InetAddress[] getAddressesFromNameService(java.lang.String,java.net.InetAddress)>/$stack33
<java.net.InetAddress: java.net.InetAddress[] getAddressesFromNameService(java.lang.String,java.net.InetAddress)>/l6#_1315
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack15
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/entry#_66
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack29
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack30
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack33
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_2#_156
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.support.GenericConversionService$MatchableConverters getMatchableConverters(java.lang.Class,java.lang.Class)>/$stack6
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.support.GenericConversionService$MatchableConverters getMatchableConverters(java.lang.Class,java.lang.Class)>/matchable#_303
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack17
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack51
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/$stack18
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/$stack53
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/$stack21
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/$stack56
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/$stack78
<com.google.gson.internal.bind.TypeAdapters$2: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/$stack12
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/constructorToUse#_50
<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)>/$stack15
<com.thoughtworks.xstream.core.DefaultConverterLookup: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>/$stack10
<org.mockito.cglib.core.EmitUtils$11: java.lang.Object transform(java.lang.Object)>/value#_0
<org.mockito.cglib.core.EmitUtils$11: java.lang.Object transform(java.lang.Object)>/$stack2
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean add(java.lang.Object)>/ref#_0
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean add(java.lang.Object)>/$stack3
<org.springframework.context.expression.MapAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.context.expression.MapAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/map#_37
<org.springframework.context.expression.MapAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.context.expression.MapAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/map#_42
<org.springframework.context.expression.MapAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/target#_0
<org.springframework.context.expression.MapAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/map#_56
<org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>/l1#_0
<org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>/l2#_264
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean shouldSkipField(com.google.gson.FieldAttributes)>/$stack28
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean shouldSkipField(com.google.gson.FieldAttributes)>/$stack31
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack7
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack8
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack11
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack13
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack4
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack5
<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/externalizable#_78
<com.thoughtworks.xstream.mapper.SecurityMapper: java.lang.Class realClass(java.lang.String)>/$stack10
<com.thoughtworks.xstream.mapper.SecurityMapper: java.lang.Class realClass(java.lang.String)>/permission#_73
<org.springframework.core.convert.support.PropertiesToStringConverter: java.lang.Object convert(java.lang.Object)>/l1#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack32
<com.thoughtworks.paranamer.BytecodeReadingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/methodOrCtor#_0
<com.thoughtworks.paranamer.BytecodeReadingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/method#_78
<com.thoughtworks.paranamer.BytecodeReadingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/method#8#_83
<javassist.compiler.MemberCodeGen: void addFinally(java.util.ArrayList,javassist.compiler.ast.Stmnt)>/$stack10
<javassist.compiler.MemberCodeGen: void addFinally(java.util.ArrayList,javassist.compiler.ast.Stmnt)>/$stack11
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/$stack20
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/$stack53
<com.google.inject.internal.MoreTypes$WildcardTypeImpl: boolean equals(java.lang.Object)>/other#_0
<br.com.caelum.iogi.collections.CyclingListInstantiator: int countToFirstRepeatedParameterName(java.util.List)>/$stack6
<br.com.caelum.iogi.collections.CyclingListInstantiator: int countToFirstRepeatedParameterName(java.util.List)>/$stack7
<br.com.caelum.iogi.collections.CyclingListInstantiator: int countToFirstRepeatedParameterName(java.util.List)>/$stack10
<br.com.caelum.iogi.collections.CyclingListInstantiator: int countToFirstRepeatedParameterName(java.util.List)>/$stack11
<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int compareTo(java.lang.Object)>/o#_0
<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int compareTo(java.lang.Object)>/other#_60
<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>/obj#_0
<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType: int compareTo(java.lang.Object)>/l1#_0
<org.joda.time.field.MillisDurationField: int compareTo(java.lang.Object)>/l1#_0
<org.joda.time.field.MillisDurationField: int compareTo(java.lang.Object)>/l2#_134
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack168
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: java.util.Collection normalizeList(java.lang.Object)>/obj#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: java.util.Collection normalizeList(java.lang.Object)>/list_$$A_1#_94
<org.joda.time.LocalTime: boolean equals(java.lang.Object)>/l2#_584
<com.google.gson.internal.Excluder: boolean excludeField(java.lang.reflect.Field,boolean)>/$stack22
<com.google.gson.internal.Excluder: boolean excludeField(java.lang.reflect.Field,boolean)>/exclusionStrategy#_181
<com.google.gson.internal.Excluder: boolean excludeClass(java.lang.Class,boolean)>/$stack12
<com.google.gson.internal.Excluder: boolean excludeClass(java.lang.Class,boolean)>/exclusionStrategy#_206
<org.springframework.expression.spel.ast.OpMultiply: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack21
<org.springframework.expression.spel.ast.OpMultiply: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/leftNumber#_60
<org.springframework.expression.spel.ast.OpMultiply: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/rightNumber#_61
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/$stack26
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/$stack29
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack7
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack8
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack11
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack13
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack4
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/$stack5
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.String,int,java.util.Map)>/$stack14
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.String,int,java.util.Map)>/$stack15
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.String,int,java.util.Map)>/$stack18
<org.springframework.expression.spel.ast.OperatorNot: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.expression.spel.ast.OperatorNot: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack11
<org.hamcrest.core.AllOf: boolean matches(java.lang.Object,org.hamcrest.Description)>/$stack8
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.util.List filterPostProcessors(java.util.List)>/$stack11
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.util.List filterPostProcessors(java.util.List)>/postProcessor#_149
<com.google.gson.internal.bind.TypeAdapters$10: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>/$stack27
<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>/$stack28
<br.com.caelum.vraptor.VRaptorMatchers$2: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/l1#_0
<br.com.caelum.vraptor.VRaptorMatchers$2: boolean matchesSafely(java.lang.Object)>/l1#_0
<javax.crypto.JceSecurity: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>/$stack17
<sun.font.AttributeValues: sun.font.AttributeValues merge(java.util.Map,int)>/$stack12
<sun.font.AttributeValues: sun.font.AttributeValues merge(java.util.Map,int)>/l4#_318
<sun.font.AttributeValues: sun.font.AttributeValues merge(java.util.Map,int)>/$stack13
<javassist.bytecode.AttributeInfo: int getLength(java.util.ArrayList)>/$stack6
<javassist.bytecode.AttributeInfo: int getLength(java.util.ArrayList)>/attr#_192
<javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo lookup(java.util.ArrayList,java.lang.String)>/$stack6
<javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo lookup(java.util.ArrayList,java.lang.String)>/ai#_205
<javassist.bytecode.AttributeInfo: void remove(java.util.ArrayList,java.lang.String)>/$stack6
<javassist.bytecode.AttributeInfo: void remove(java.util.ArrayList,java.lang.String)>/ai#_219
<javassist.bytecode.AttributeInfo: void writeAll(java.util.ArrayList,java.io.DataOutputStream)>/$stack6
<javassist.bytecode.AttributeInfo: void writeAll(java.util.ArrayList,java.io.DataOutputStream)>/attr#_233
<javassist.bytecode.AttributeInfo: java.util.ArrayList copyAll(java.util.ArrayList,javassist.bytecode.ConstPool)>/$stack8
<javassist.bytecode.AttributeInfo: java.util.ArrayList copyAll(java.util.ArrayList,javassist.bytecode.ConstPool)>/attr#_245
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.util.List argumentValues(br.com.caelum.iogi.Instantiator)>/$stack10
<org.codehaus.jettison.json.JSONObject: void testValidity(java.lang.Object)>/o#_0
<org.codehaus.jettison.json.JSONObject: void testValidity(java.lang.Object)>/$stack3
<org.codehaus.jettison.json.JSONObject: void testValidity(java.lang.Object)>/$stack6
<org.codehaus.jettison.json.JSONObject: void testValidity(java.lang.Object)>/$stack9
<org.codehaus.jettison.json.JSONObject: void testValidity(java.lang.Object)>/$stack12
<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>/value#_0
<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>/$stack15
<org.springframework.aop.config.AopConfigUtils: int findPriorityForClass(java.lang.String)>/$stack6
<org.springframework.aop.config.AopConfigUtils: int findPriorityForClass(java.lang.String)>/clazz#_135
<org.springframework.asm.Type: boolean equals(java.lang.Object)>/l1#_0
<org.springframework.asm.Type: boolean equals(java.lang.Object)>/l2#_0
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack4
<org.springframework.context.expression.BeanExpressionContextAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.context.expression.BeanExpressionContextAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack5
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack22
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op1#7#_76
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op2#8#_77
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/n#_52
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op2#_67
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op1#_66
<org.mockito.cglib.core.MethodInfo: boolean equals(java.lang.Object)>/o#_0
<org.mockito.cglib.core.MethodInfo: boolean equals(java.lang.Object)>/$stack4
<ognl.ArrayPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack11
<ognl.ArrayPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/index#_62
<ognl.ArrayPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack16
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack26
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack18
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack10
<br.com.caelum.vraptor.core.DefaultConverters: java.lang.Class findConverterType(java.lang.Class)>/$stack8
<br.com.caelum.vraptor.core.DefaultConverters: java.lang.Class findConverterType(java.lang.Class)>/converterType#_65
<com.thoughtworks.xstream.converters.extended.JavaClassConverter: java.lang.String toString(java.lang.Object)>/obj#_0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$1: boolean matchesSafely(java.lang.Object)>/l1#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack18
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeIndexedArgumentValue(java.lang.Integer,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack14
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeIndexedArgumentValue(java.lang.Integer,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/mergeable#_126
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack18
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/mergeable#_233
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack11
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/currentValue#_230
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack411
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack412
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack415
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack419
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/lastType_$$A_2#_146
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getGenericArgumentValue(java.lang.Class,java.lang.String,java.util.Set)>/$stack9
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/other#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/that#_385
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/$stack35
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/$stack36
<org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)>/$stack97
<org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)>/entry#_827
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: boolean equals(java.lang.Object)>/obj#_0
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: boolean equals(java.lang.Object)>/other#_118
<org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>/other#_0
<org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>/otherPv#_185
<org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)>/$stack28
<org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)>/$stack62
<org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)>/kv#_920
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceCollection#_53
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack65
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: boolean isSerializable(java.lang.Class)>/$stack13
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack20
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack21
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convert(java.lang.Object,java.lang.Class)>/value#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractFieldType(java.lang.reflect.Member)>/member#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractFieldType(java.lang.reflect.Member)>/$stack2
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractSetterMethodType(java.lang.Object,java.lang.reflect.Member)>/method#_96
<br.com.caelum.vraptor.resource.DefaultResourceClass: boolean equals(java.lang.Object)>/obj#_0
<br.com.caelum.vraptor.resource.DefaultResourceClass: boolean equals(java.lang.Object)>/resource#_36
<ognl.CollectionElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/target#_0
<ognl.CollectionElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/$stack3
<javax.crypto.CryptoPermissionCollection: boolean implies(java.security.Permission)>/$stack9
<javax.crypto.CryptoPermissionCollection: boolean implies(java.security.Permission)>/l4#_525
<com.google.gson.internal.bind.TypeAdapters$16: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/sortedMap#_57
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)>/$stack15
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)>/comparator#_90
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack78
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack82
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack86
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op2#_66
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op1#_65
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/$stack19
<org.hamcrest.BaseDescription: org.hamcrest.Description appendList(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator)>/$stack7
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: org.springframework.beans.factory.FactoryBean getFactoryBean(java.lang.String,java.lang.Object)>/beanInstance#_0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: org.springframework.beans.factory.FactoryBean getFactoryBean(java.lang.String,java.lang.Object)>/$stack4
<br.com.caelum.vraptor.http.route.DefaultParametersControl: java.lang.String fillUri(java.lang.String[],java.lang.Object[])>/$stack19
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void fillIntoRequest(java.lang.String,br.com.caelum.vraptor.http.MutableRequest)>/$stack13
<javassist.compiler.CodeGen: void patchGoto(java.util.ArrayList,int)>/$stack7
<javassist.compiler.CodeGen: void patchGoto(java.util.ArrayList,int)>/$stack8
<ognl.MapElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/target#_0
<ognl.MapElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/$stack3
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>/$stack19
<org.springframework.beans.PropertyEditorRegistrySupport: java.lang.Class guessPropertyTypeFromEditors(java.lang.String)>/$stack15
<org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>/l1#_0
<org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>/l2#_261
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>/$stack13
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>/l4#_109
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>/$stack30
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>/l4_$$A_4#_144
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>/$stack78
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>/l4_$$A_2#_116
<br.com.caelum.vraptor.http.VRaptorResponse: void sendRedirect(java.lang.String)>/$stack7
<br.com.caelum.vraptor.http.VRaptorResponse: void sendRedirect(java.lang.String)>/listener#_45
<org.springframework.expression.spel.ast.Elvis: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<org.springframework.expression.spel.ast.Elvis: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack13
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/$stack42
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/$stack25
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/$stack43
<org.springframework.context.event.AbstractApplicationEventMulticaster: boolean supportsEvent(org.springframework.context.ApplicationListener,java.lang.Class,java.lang.Class)>/$stack6
<org.mockito.cglib.proxy.DispatcherGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack9
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack119
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/seq#_76
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack89
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack90
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack100
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack101
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack41
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack42
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack58
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack59
<ognl.ASTAssign: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack68
<ognl.ASTAssign: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/seq#_128
<ognl.ASTAssign: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack46
<ognl.ASTAssign: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack47
<ognl.ASTAssign: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack52
<ognl.ASTAssign: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack53
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack15
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack16
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack31
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack32
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/k#_424
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/$stack20
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/$stack24
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/$stack11
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.util.Properties)>/clazz#_497
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/$stack20
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/$stack24
<org.picocontainer.DefaultPicoContainer: java.lang.Object decorateComponent(java.lang.Object,org.picocontainer.ComponentAdapter)>/$stack7
<org.picocontainer.DefaultPicoContainer: java.lang.Object decorateComponent(java.lang.Object,org.picocontainer.ComponentAdapter)>/$stack9
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack11
<org.picocontainer.DefaultPicoContainer: void potentiallyStartAdapter(org.picocontainer.ComponentAdapter)>/$stack5
<org.picocontainer.DefaultPicoContainer: void addAdapterIfStartable(org.picocontainer.ComponentAdapter)>/componentLifecycle#_1012
<javax.xml.namespace.QName: boolean equals(java.lang.Object)>/obj#_0
<javax.xml.namespace.QName: boolean equals(java.lang.Object)>/qname#_220
<com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>/o#_0
<com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>/other#_138
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack13
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/list#_67
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack21
<com.thoughtworks.xstream.io.path.Path: com.thoughtworks.xstream.io.path.Path apply(com.thoughtworks.xstream.io.path.Path)>/$stack13
<com.thoughtworks.xstream.io.path.Path: com.thoughtworks.xstream.io.path.Path apply(com.thoughtworks.xstream.io.path.Path)>/$stack14
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Class getActualType(java.lang.reflect.Type)>/genericType#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Class getActualType(java.lang.reflect.Type)>/type_$$A_1#_104
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Class getActualType(java.lang.reflect.Type)>/$stack4
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/$stack11
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/genericType_$$A_1#_123
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/$stack17
<com.google.gson.internal.bind.TypeAdapters$9: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<br.com.caelum.iogi.reflection.Target$Primitives: java.lang.Object primitiveCast(java.lang.Object,java.lang.Class)>/$stack3
<br.com.caelum.iogi.reflection.Target$Primitives: java.lang.Object primitiveCast(java.lang.Object,java.lang.Class)>/$stack4
<net.vidageek.mirror.list.EqualMethodRemover: boolean accepts(java.lang.Object)>/x0#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack10
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack11
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String)>/$stack27
<sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>/$stack21
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguageTag(sun.util.locale.LanguageTag)>/$stack19
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguageTag(sun.util.locale.LanguageTag)>/$stack28
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguageTag(sun.util.locale.LanguageTag)>/$stack40
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguageTag(sun.util.locale.LanguageTag)>/$stack41
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/$stack50
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/$stack62
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/$stack30
<sun.security.provider.PolicyFile: boolean init(java.net.URL,sun.security.provider.PolicyFile$PolicyInfo)>/$stack25
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack11
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack13
<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/$stack90
<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/l5#_780
<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/$stack23
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack39
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/entry_$$A_3#_218
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack57
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/entry_$$A_1#_206
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack21
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/$stack32
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.core.convert.TypeDescriptor getTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack8
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack9
<org.mockito.cglib.proxy.FixedValueGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack9
<org.springframework.beans.AbstractPropertyAccessor: void setPropertyValues(org.springframework.beans.PropertyValues,boolean,boolean)>/$stack14
<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/$stack15
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>/$stack22
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>/l11#_320
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/$stack31
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/$stack33
<sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>/$stack35
<sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>/l8#12#_1329
<org.picocontainer.paranamer.DefaultParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/methodOrCtor#_0
<org.picocontainer.paranamer.DefaultParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/method#_69
<org.picocontainer.paranamer.DefaultParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/method#8#_74
<sun.security.provider.PolicyFile: void addPerms(java.security.Permissions,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>/$stack9
<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>/$stack141
<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>/l12#_1534
<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>/$stack61
<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])>/$stack33
<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])>/l7#_1620
<com.google.gson.internal.bind.TypeAdapters$20: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<sun.security.provider.PolicyFile: boolean replacePrincipals(java.util.List,java.security.KeyStore)>/$stack10
<sun.security.provider.PolicyFile: boolean replacePrincipals(java.util.List,java.security.KeyStore)>/l4#_1807
<java.lang.String: java.lang.String[] split(java.lang.String,int)>/$stack46
<java.lang.String: java.lang.String[] split(java.lang.String,int)>/$stack47
<com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<com.google.inject.internal.MoreTypes: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/pb#11#_228
<com.google.inject.internal.MoreTypes: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/pb#_199
<com.google.inject.internal.MoreTypes: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/pb#6#_210
<com.google.inject.internal.MoreTypes: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/pb#8#_219
<br.com.caelum.iogi.reflection.Constructors$1: int compare(java.lang.Object,java.lang.Object)>/x0#_0
<br.com.caelum.iogi.reflection.Constructors$1: int compare(java.lang.Object,java.lang.Object)>/x1#_0
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack16
<javassist.CtClassType: void makeFieldCache(javassist.CtMember$Cache)>/$stack10
<javassist.CtClassType: void makeBehaviorCache(javassist.CtMember$Cache)>/$stack10
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack35
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack48
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/method_$$A_2#_179
<org.hamcrest.collection.IsCollectionWithSize: java.lang.Object featureValueOf(java.lang.Object)>/x0#_0
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack19
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/b#_69
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.String toString(java.lang.Object)>/obj#_0
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.String toString(java.lang.Object)>/$stack2
<javassist.CtClassType: void modifyConstructors(javassist.bytecode.ClassFile)>/$stack15
<javassist.CtClassType: void modifyConstructors(javassist.bytecode.ClassFile)>/minfo#_1528
<com.thoughtworks.xstream.converters.extended.FileConverter: java.lang.String toString(java.lang.Object)>/obj#_0
<com.thoughtworks.xstream.converters.extended.FileConverter: java.lang.String toString(java.lang.Object)>/$stack2
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/$stack22
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/$stack18
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/entry#_112
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/value_$$A_1#_114
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/$stack44
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/$stack48
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/array#_120
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: br.com.caelum.vraptor.http.route.Route getRouteMatching(java.util.List,java.lang.String)>/$stack7
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: br.com.caelum.vraptor.http.route.Route getRouteMatching(java.util.List,java.lang.String)>/route#_487
<java.security.Signature: java.security.Signature getInstance(java.lang.String)>/$stack10
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object,boolean)>/$stack12
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object,boolean)>/result#_77
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/$stack9
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/ltw_$$A_1#_95
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/bean#_0
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/$stack5
<com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>/obj#_0
<com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>/field#_42
<com.google.gson.internal.bind.TypeAdapters$17: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverterFromItemType(java.lang.Class)>/converter#_74
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverterFromItemType(java.lang.Class)>/$stack7
<org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>/obj#_0
<org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>/$stack3
<org.springframework.aop.support.AopUtils: java.lang.Class getTargetClass(java.lang.Object)>/$stack8
<javassist.bytecode.stackmap.BasicBlock$Mark: int compareTo(java.lang.Object)>/obj#_0
<javassist.bytecode.stackmap.BasicBlock$Mark: int compareTo(java.lang.Object)>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerComponents(java.util.Collection)>/$stack6
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: boolean equals(java.lang.Object)>/other#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: boolean equals(java.lang.Object)>/otherKey#_393
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: org.hibernate.proxy.LazyInitializer getInitializer(java.lang.Object)>/obj#_0
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: org.hibernate.proxy.LazyInitializer getInitializer(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.http.route.DefaultRouter: br.com.caelum.vraptor.resource.ResourceMethod parse(java.lang.String,br.com.caelum.vraptor.resource.HttpMethod,br.com.caelum.vraptor.http.MutableRequest)>/$stack9
<br.com.caelum.vraptor.http.route.DefaultRouter: void checkIfThereIsAnotherRoute(java.lang.String,br.com.caelum.vraptor.resource.HttpMethod,java.util.Iterator,br.com.caelum.vraptor.http.route.Route)>/$stack7
<br.com.caelum.vraptor.http.route.DefaultRouter: void checkIfThereIsAnotherRoute(java.lang.String,br.com.caelum.vraptor.resource.HttpMethod,java.util.Iterator,br.com.caelum.vraptor.http.route.Route)>/otherRoute#_100
<br.com.caelum.vraptor.http.route.DefaultRouter: java.util.EnumSet allowedMethodsFor(java.lang.String)>/$stack9
<br.com.caelum.vraptor.http.route.DefaultRouter: java.util.EnumSet allowedMethodsFor(java.lang.String)>/route#_122
<br.com.caelum.vraptor.http.route.DefaultRouter: java.lang.String urlFor(java.lang.Class,java.lang.reflect.Method,java.lang.Object[])>/$stack20
<br.com.caelum.vraptor.http.route.DefaultRouter: java.lang.String urlFor(java.lang.Class,java.lang.reflect.Method,java.lang.Object[])>/$stack21
<br.com.caelum.vraptor.view.DefaultLogicResultTest$1: boolean matchesSafely(java.lang.Object)>/l1#_0
<sun.security.x509.AVA: java.lang.String getEmbeddedHexString(java.util.List)>/$stack6
<sun.security.x509.AVA: java.lang.String getEmbeddedHexString(java.util.List)>/$stack7
<java.text.AttributedString: void setAttributes(java.util.Map,int)>/$stack19
<java.text.AttributedString: void setAttributes(java.util.Map,int)>/l8#_719
<java.awt.Font: java.awt.Font getFont(java.util.Map)>/$stack5
<java.awt.Font: java.awt.Font getFont(java.util.Map)>/l1#4#_807
<sun.util.resources.LocaleData$LocaleDataResourceBundleControl: java.util.List getCandidateLocales(java.lang.String,java.util.Locale)>/$stack28
<com.thoughtworks.xstream.core.TreeUnmarshaller: void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)>/converter#_0
<com.thoughtworks.xstream.core.TreeUnmarshaller: void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)>/$stack19
<java.net.SocketPermissionCollection: boolean implies(java.security.Permission)>/$stack18
<java.net.SocketPermissionCollection: boolean implies(java.security.Permission)>/l9#_1400
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)>/$stack13
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)>/runnable#_137
<com.google.common.base.Predicates: com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate)>/$stack3
<com.google.common.base.Predicates: com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate)>/$stack5
<org.mockito.cglib.core.EmitUtils$15: java.lang.Object transform(java.lang.Object)>/value#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_4#_158
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack52
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/convertedValue_$$A_4#_371
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.ClassLoader combine(java.util.List)>/$stack5
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.ClassLoader combine(java.util.List)>/loader#_53
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.ClassLoader combine(java.util.List)>/$stack8
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/coll#_423
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack25
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/ex#19#_598
<org.springframework.expression.spel.ast.OpModulus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op1#_41
<org.springframework.expression.spel.ast.OpModulus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op2#_42
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarSerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/l1#_0
<ognl.Ognl: void setValue(java.lang.Object,java.util.Map,java.lang.Object,java.lang.Object)>/tree#_0
<ognl.Ognl: void setValue(java.lang.Object,java.util.Map,java.lang.Object,java.lang.Object)>/n#_730
<org.mockito.cglib.core.EmitUtils$1: java.lang.Object transform(java.lang.Object)>/value#_0
<org.mockito.cglib.core.EmitUtils$1: java.lang.Object transform(java.lang.Object)>/$stack3
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: java.util.List instantiateParameters(br.com.caelum.iogi.parameters.Parameters,java.util.List,java.util.List)>/$stack12
<org.springframework.expression.common.ExpressionUtils: int toInt(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: int toInt(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack6
<org.springframework.expression.common.ExpressionUtils: boolean toBoolean(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: boolean toBoolean(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack6
<org.springframework.expression.common.ExpressionUtils: double toDouble(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: double toDouble(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack6
<org.springframework.expression.common.ExpressionUtils: long toLong(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: long toLong(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack6
<org.springframework.expression.common.ExpressionUtils: char toChar(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: char toChar(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack6
<org.springframework.expression.common.ExpressionUtils: short toShort(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: short toShort(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack6
<org.springframework.expression.common.ExpressionUtils: float toFloat(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: float toFloat(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack6
<org.springframework.expression.common.ExpressionUtils: byte toByte(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack5
<org.springframework.expression.common.ExpressionUtils: byte toByte(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/$stack6
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/obj#_0
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/other#_434
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/$stack9
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/beanProcessor#_393
<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>/$stack3
<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>/$stack4
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/$stack9
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/beanProcessor#_406
<com.google.gson.JsonObject: boolean equals(java.lang.Object)>/o#_0
<com.google.gson.JsonObject: boolean equals(java.lang.Object)>/$stack4
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class predictBeanType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/$stack17
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class predictBeanType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/bp#_581
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class predictBeanType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/ibp#_583
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack14
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack15
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack8
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack9
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack10
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack11
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack6
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack7
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack12
<javassist.bytecode.CodeIterator$Pointers: void <init>(int,int,int,javassist.bytecode.ExceptionTable,javassist.bytecode.CodeAttribute)>/$stack13
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/$stack14
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/bp#_692
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/ibp#_694
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack26
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack28
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyMergedBeanDefinitionPostProcessors(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)>/bp#_795
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyMergedBeanDefinitionPostProcessors(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)>/bdp#_797
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyMergedBeanDefinitionPostProcessors(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)>/$stack10
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack14
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack36
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/removal#_66
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack26
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/ctx#_55
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInstantiation(java.lang.Class,java.lang.String)>/$stack10
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInstantiation(java.lang.Class,java.lang.String)>/bp#_845
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInstantiation(java.lang.Class,java.lang.String)>/ibp#_847
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.reflect.Constructor[] determineConstructorsFromBeanPostProcessors(java.lang.Class,java.lang.String)>/$stack12
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.reflect.Constructor[] determineConstructorsFromBeanPostProcessors(java.lang.Class,java.lang.String)>/bp#_927
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.reflect.Constructor[] determineConstructorsFromBeanPostProcessors(java.lang.Class,java.lang.String)>/ibp#_929
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/$stack29
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/bp_$$A_4#_1071
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/$stack54
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/bp_$$A_1_$$A_1#_1033
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/ibp_$$A_1_$$A_1#_1035
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/ibp_$$A_4#_1073
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.beans.PropertyDescriptor[] filterPropertyDescriptorsForDependencyCheck(org.springframework.beans.BeanWrapper)>/$stack18
<com.thoughtworks.xstream.converters.collections.TreeSetConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/sortedSet#_53
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/$stack29
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/$stack43
<br.com.caelum.iogi.collections.IndexedListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack17
<br.com.caelum.iogi.collections.IndexedListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/index#_32
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeAwareMethods(java.lang.String,java.lang.Object)>/bean#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeAwareMethods(java.lang.String,java.lang.Object)>/$stack10
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeAwareMethods(java.lang.String,java.lang.Object)>/$stack6
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeAwareMethods(java.lang.String,java.lang.Object)>/$stack7
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeInitMethods(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack15
<com.sun.beans.TypeResolver: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.reflect.Type)>/$stack21
<org.springframework.core.convert.support.StringToLocaleConverter: java.lang.Object convert(java.lang.Object)>/l1#_0
<com.google.gson.internal.bind.TypeAdapters$13: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<org.mockito.asm.util.AbstractVisitor: void printList(java.io.PrintWriter,java.util.List)>/o#_185
<br.com.caelum.iogi.reflection.NewObject$Setter: java.util.Collection settersIn(java.lang.Object)>/$stack12
<br.com.caelum.iogi.reflection.NewObject$Setter: java.util.Collection settersIn(java.lang.Object)>/$stack16
<org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>/l1#_0
<org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>/l2#_130
<org.springframework.core.convert.support.StringToBooleanConverter: java.lang.Object convert(java.lang.Object)>/l1#_0
<com.google.gson.internal.bind.TypeAdapters$4: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<ognl.ExpressionNode: boolean isConstant(ognl.OgnlContext)>/$stack16
<ognl.ExpressionNode: boolean isConstant(ognl.OgnlContext)>/$stack17
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack130
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack131
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack136
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack137
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack202
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack203
<com.google.gson.internal.bind.TypeAdapters$22$1: java.sql.Timestamp read(com.google.gson.stream.JsonReader)>/$stack4
<com.google.gson.internal.bind.TypeAdapters$22$1: java.sql.Timestamp read(com.google.gson.stream.JsonReader)>/date#_526
<com.google.gson.internal.bind.TypeAdapters$22$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<com.thoughtworks.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/method#_73
<com.thoughtworks.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/method#10#_79
<com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<com.google.gson.internal.bind.TypeAdapters$18: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/$stack46
<com.thoughtworks.xstream.converters.collections.BitSetConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.collections.BitSetConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/bitSet#_36
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/$stack26
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/l7#_643
<com.google.common.base.Predicates$AndPredicate: boolean equals(java.lang.Object)>/obj#_0
<com.google.common.base.Predicates$AndPredicate: boolean equals(java.lang.Object)>/that#_350
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getCryptoPermission(java.lang.String)>/$stack31
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getCryptoPermission(java.lang.String)>/$stack51
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getCryptoPermission(java.lang.String)>/l9#_155
<com.google.gson.internal.bind.TypeAdapters$24: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getDefaultPermission(java.lang.String)>/$stack6
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getDefaultPermission(java.lang.String)>/$stack7
<org.springframework.core.convert.support.StringToCharacterConverter: java.lang.Object convert(java.lang.Object)>/l1#_0
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack15
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack16
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack21
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack22
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/componentKey#_48
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack11
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/classes_$$A_1#_53
<org.joda.time.format.DateTimeFormatterBuilder: boolean isPrinter(java.lang.Object)>/l1#_0
<org.joda.time.format.DateTimeFormatterBuilder: boolean isPrinter(java.lang.Object)>/$stack4
<org.joda.time.format.DateTimeFormatterBuilder: boolean isParser(java.lang.Object)>/l1#_0
<org.joda.time.format.DateTimeFormatterBuilder: boolean isParser(java.lang.Object)>/$stack4
<br.com.caelum.vraptor.http.route.DefaultRouter$3: boolean apply(java.lang.Object)>/l1#_0
<com.google.gson.internal.bind.TypeAdapters$15: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<ognl.IteratorPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/iterator#_47
<br.com.caelum.iogi.parameters.Parameters: com.google.common.collect.ListMultimap groupByFirstNameComponent(java.util.List)>/$stack9
<org.picocontainer.injectors.IterativeInjector$4: java.lang.Object run(java.lang.Object)>/$stack17
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameter namedAfter(br.com.caelum.iogi.reflection.Target)>/$stack8
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameter namedAfter(br.com.caelum.iogi.reflection.Target)>/$stack9_$$A_1
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameters focusedOn(br.com.caelum.iogi.reflection.Target)>/$stack12
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameters focusedOn(br.com.caelum.iogi.reflection.Target)>/parameter#_63
<br.com.caelum.iogi.parameters.Parameters: boolean equals(java.lang.Object)>/obj#_0
<br.com.caelum.iogi.parameters.Parameters: boolean equals(java.lang.Object)>/other#_108
<org.picocontainer.parameters.BasicComponentParameter: java.lang.Object convert(org.picocontainer.Converters,java.lang.Object,java.lang.reflect.Type)>/obj#_0
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/$stack28
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/expectedTypeName#12_$$A_8#_206
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException tooManyMatchingAdaptersFound(java.lang.Class,java.util.List)>/$stack8
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException tooManyMatchingAdaptersFound(java.lang.Class,java.util.List)>/$stack9
<org.picocontainer.parameters.BasicComponentParameter: void removeExcludedAdapterIfApplicable(java.lang.Object,java.util.List)>/$stack9
<org.picocontainer.parameters.BasicComponentParameter: void removeExcludedAdapterIfApplicable(java.lang.Object,java.util.List)>/work#_255
<org.apache.log4j.helpers.AppenderAttachableImpl: int appendLoopOnAppenders(org.apache.log4j.spi.LoggingEvent)>/$stack10
<org.apache.log4j.helpers.AppenderAttachableImpl: int appendLoopOnAppenders(org.apache.log4j.spi.LoggingEvent)>/appender#_65
<br.com.caelum.vraptor.http.route.DefaultRouter$1: boolean apply(java.lang.Object)>/l1#_0
<org.springframework.core.convert.support.GenericConversionService$MatchableConverters: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack19
<ognl.MapPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<ognl.MapPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/map#_51
<ognl.MapPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/target#_0
<ognl.MapPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/map#_91
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/o#_0
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/other#_483
<com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<br.com.caelum.vraptor.http.route.PriorityRoutesList: boolean add(java.lang.Object)>/l1#_0
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: boolean isCandidateComponent(org.springframework.core.type.classreading.MetadataReader)>/$stack7
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: boolean isCandidateComponent(org.springframework.core.type.classreading.MetadataReader)>/tf_$$A_1#_274
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: boolean isCandidateComponent(org.springframework.core.type.classreading.MetadataReader)>/$stack14
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: boolean isCandidateComponent(org.springframework.core.type.classreading.MetadataReader)>/tf_$$A_3#_279
<com.thoughtworks.xstream.converters.reflection.FieldKey: boolean equals(java.lang.Object)>/o#_0
<com.thoughtworks.xstream.converters.reflection.FieldKey: boolean equals(java.lang.Object)>/fieldKey#_61
<org.mockito.cglib.proxy.Enhancer$2: java.lang.Object transform(java.lang.Object)>/value#_0
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(javax.servlet.ServletResponse)>/$stack5
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(javax.servlet.ServletResponse)>/$stack6
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(java.lang.Class)>/$stack9
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(java.lang.Class)>/$stack10
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack8
<com.google.common.collect.AbstractMapBasedMultiset: void <init>(java.util.Map)>/$stack2
<com.google.common.collect.AbstractMapBasedMultiset: void <init>(java.util.Map)>/$stack3
<org.mockito.cglib.proxy.Enhancer$5: void processCase(java.lang.Object,org.mockito.asm.Label)>/key#_0
<org.mockito.cglib.proxy.Enhancer$5: void processCase(java.lang.Object,org.mockito.asm.Label)>/constructor#_852
<com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/pb#11#_202
<com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/pb#_173
<com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/pb#6#_184
<com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/pb#8#_193
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void start(javax.servlet.ServletContext)>/$stack29
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void start(javax.servlet.ServletContext)>/handler#_114
<org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>/obj#_0
<org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>/otherRes#_232
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerAll(br.com.caelum.vraptor.ComponentRegistry,java.util.Map)>/$stack9
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerAll(br.com.caelum.vraptor.ComponentRegistry,java.util.Map)>/$stack11
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerAll(br.com.caelum.vraptor.ComponentRegistry,java.util.Map)>/$stack13
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerAll(br.com.caelum.vraptor.ComponentRegistry,java.util.Map)>/$stack15
<org.mockito.cglib.proxy.NoOpGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack9
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>/$stack17
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>/$stack18
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchCandidates(java.util.List,java.lang.reflect.Method)>/$stack12
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchCandidates(java.util.List,java.lang.reflect.Method)>/$stack20
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchCandidates(java.util.List,java.lang.reflect.Method)>/$stack21
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/rawType#_186
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/$stack26
<org.hamcrest.core.IsCollectionContaining: boolean matchesSafely(java.lang.Object,org.hamcrest.Description)>/x0#_0
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: boolean equals(java.lang.Object)>/other#_0
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: boolean equals(java.lang.Object)>/otherKey#_620
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack35
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/val#_182
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack42
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack43
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack52
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack53
<org.picocontainer.PicoBuilder: org.picocontainer.ComponentFactory buildComponentFactory(org.picocontainer.DefaultPicoContainer,org.picocontainer.ComponentFactory,java.util.Stack)>/$stack11
<org.picocontainer.PicoBuilder: org.picocontainer.ComponentFactory buildComponentFactory(org.picocontainer.DefaultPicoContainer,org.picocontainer.ComponentFactory,java.util.Stack)>/newlastCaf#_236
<org.picocontainer.PicoBuilder: org.picocontainer.ComponentFactory buildComponentFactory(org.picocontainer.DefaultPicoContainer,org.picocontainer.ComponentFactory,java.util.Stack)>/$stack13
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack130
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack131
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack136
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack137
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack207
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack208
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter addComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,org.picocontainer.ComponentAdapter)>/$stack9
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter addComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,org.picocontainer.ComponentAdapter)>/$stack10
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/res#_0
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack145
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack146
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack151
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack152
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack217
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack218
<br.com.caelum.vraptor.http.route.Rules: void <init>(br.com.caelum.vraptor.http.route.Router)>/$stack8
<br.com.caelum.vraptor.http.route.Rules: void <init>(br.com.caelum.vraptor.http.route.Router)>/builder#_38
<com.google.gson.Gson$4: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: boolean equals(java.lang.Object)>/obj#_0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: boolean equals(java.lang.Object)>/other#_63
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)>/$stack23
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)>/info#_138
<org.hamcrest.collection.IsIterableContainingInOrder: boolean matchesSafely(java.lang.Object,org.hamcrest.Description)>/x0#_0
<org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>/l2#_561
<br.com.caelum.iogi.collections.ParametersByIndex$1: java.lang.Object apply(java.lang.Object)>/x0#_0
<ognl.EnumerationPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/e#_48
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry$AttributeSetterComponentMonitor: void instantiated(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Object,java.lang.Object[],long)>/object#_75
<org.codehaus.jettison.json.JSONArray: org.codehaus.jettison.json.JSONObject getJSONObject(int)>/o#_254
<org.codehaus.jettison.json.JSONArray: org.codehaus.jettison.json.JSONObject getJSONObject(int)>/$stack11
<org.codehaus.jettison.json.JSONArray: java.io.Writer write(java.io.Writer)>/$stack17
<org.codehaus.jettison.json.JSONArray: java.io.Writer write(java.io.Writer)>/$stack14
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)>/$stack10
<org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>/l1#_0
<org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>/l2#_240
<javassist.bytecode.ClassFile: void setSuperclass(java.lang.String)>/$stack9
<javassist.bytecode.ClassFile: void setSuperclass(java.lang.String)>/minfo#_373
<javassist.bytecode.ClassFile: void renameClass(java.lang.String,java.lang.String)>/$stack23
<javassist.bytecode.ClassFile: void renameClass(java.lang.String,java.lang.String)>/minfo#_415
<javassist.bytecode.ClassFile: void renameClass(java.util.Map)>/$stack21
<javassist.bytecode.ClassFile: void renameClass(java.util.Map)>/minfo#_452
<javassist.bytecode.ClassFile: void testExistingField(java.lang.String,java.lang.String)>/$stack8
<javassist.bytecode.ClassFile: void testExistingField(java.lang.String,java.lang.String)>/minfo#_563
<javassist.bytecode.ClassFile: javassist.bytecode.MethodInfo getMethod(java.lang.String)>/$stack7
<javassist.bytecode.ClassFile: javassist.bytecode.MethodInfo getMethod(java.lang.String)>/minfo#_589
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>/$stack15
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>/l6#_146
<javassist.bytecode.ClassFile: void testExistingMethod(javassist.bytecode.MethodInfo)>/$stack10
<javassist.bytecode.ClassFile: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>/$stack7
<javassist.bytecode.ClassFile: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>/ai#_696
<javassist.bytecode.ClassFile: void write(java.io.DataOutputStream)>/$stack22
<javassist.bytecode.ClassFile: void write(java.io.DataOutputStream)>/finfo#_797
<javassist.bytecode.ClassFile: void write(java.io.DataOutputStream)>/$stack19
<javassist.bytecode.ClassFile: void write(java.io.DataOutputStream)>/finfo#14#_805
<org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>/obj#_0
<org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>/$stack3
<org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>/other#_0
<org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>/that#_92
<com.thoughtworks.xstream.converters.extended.SqlTimestampConverter: java.lang.String toString(java.lang.Object)>/obj#_0
<ognl.OgnlParser: void jj_add_error_token(int,int)>/$stack17
<ognl.OgnlParser: void jj_add_error_token(int,int)>/$stack18
<ognl.OgnlParser: void jj_add_error_token(int,int)>/oldentry#_3120
<org.mockito.internal.util.MockUtil: org.mockito.internal.creation.MethodInterceptorFilter getInterceptor(java.lang.Object)>/mock#_0
<org.mockito.internal.util.MockUtil: org.mockito.internal.creation.MethodInterceptorFilter getInterceptor(java.lang.Object)>/factory#_92
<sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>/$stack25
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.String get(java.lang.Object)>/key#_0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/l1#_0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/l2#_0
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void registerRulesFor(java.lang.Class)>/$stack13
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/$stack130
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/$stack26
<java.lang.invoke.LambdaForm: java.lang.String basicTypeSignature(java.lang.invoke.MethodType)>/$stack19
<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintStream)>/$stack11
<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintStream)>/relatedCause#_165
<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintWriter)>/$stack11
<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintWriter)>/relatedCause#_178
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/$stack231
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/$stack35
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/$stack161
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/argsHolder#89#_521
<org.springframework.beans.factory.BeanCreationException: boolean contains(java.lang.Class)>/$stack9
<org.springframework.beans.factory.BeanCreationException: boolean contains(java.lang.Class)>/relatedCause#_192
<org.springframework.beans.factory.BeanCreationException: boolean contains(java.lang.Class)>/$stack12
<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/rightValue#_51
<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/rightClass#_60
<org.mockito.cglib.core.MethodWrapper: java.util.Set createSet(java.util.Collection)>/$stack6
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>/$stack18
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack25
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack26
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack28
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/$stack48
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/$stack53
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/sourceHolder#_682
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/l1#_0
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: boolean matchesSafely(java.lang.Object)>/l1#_0
<org.mockito.asm.Type: boolean equals(java.lang.Object)>/o#_0
<org.mockito.asm.Type: boolean equals(java.lang.Object)>/t#_754
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/$stack57
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/$stack17
<org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>/other#_0
<org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>/otherMa#_85
<com.google.gson.internal.bind.TypeAdapters$21: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<com.google.common.base.Joiner: void <init>(java.lang.String)>/$stack2
<com.google.common.base.Joiner: void <init>(java.lang.String)>/$stack3
<br.com.caelum.vraptor.serialization.iso8601.gson.CalendarISO8601Serializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/l1#_0
<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>/$stack4
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/$stack27
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/$stack60
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/typename#_137
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.ConstructorExecutor findExecutorForConstructor(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/$stack19
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.ConstructorExecutor findExecutorForConstructor(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/ctorResolver#_178
<br.com.caelum.vraptor.validator.MessageConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/val#_0
<br.com.caelum.vraptor.validator.MessageConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/message#_39
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createArray(org.springframework.expression.spel.ExpressionState)>/intendedArrayType#_222
<org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatMethodForMessage(java.lang.String,java.util.List)>/$stack8
<org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatMethodForMessage(java.lang.String,java.util.List)>/$stack9
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>/left#_0
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>/leftNumber#_43
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>/rightNumber#_44
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>/$stack18
<com.google.common.collect.Multimaps$UnmodifiableMultimap: void <init>(com.google.common.collect.Multimap)>/$stack2
<com.google.common.collect.Multimaps$UnmodifiableMultimap: void <init>(com.google.common.collect.Multimap)>/$stack3
<com.google.gson.internal.bind.TypeAdapters$11: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<com.google.gson.internal.bind.TypeAdapters$8: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<sun.misc.JarIndex: void merge(sun.misc.JarIndex,java.lang.String)>/$stack19
<org.springframework.expression.common.TemplateAwareExpressionParser: int skipToCorrectEndSuffix(java.lang.String,java.lang.String,java.lang.String,int)>/$stack18
<org.springframework.expression.common.TemplateAwareExpressionParser: int skipToCorrectEndSuffix(java.lang.String,java.lang.String,java.lang.String,int)>/p#_198
<org.springframework.expression.common.TemplateAwareExpressionParser: int skipToCorrectEndSuffix(java.lang.String,java.lang.String,java.lang.String,int)>/$stack58
<org.springframework.expression.common.TemplateAwareExpressionParser: int skipToCorrectEndSuffix(java.lang.String,java.lang.String,java.lang.String,int)>/ch#11#_216
<com.google.common.base.Predicates$OrPredicate: boolean apply(java.lang.Object)>/$stack6
<com.google.common.base.Predicates$OrPredicate: boolean apply(java.lang.Object)>/$stack7
<com.google.common.collect.Collections2$TransformedCollection: void <init>(java.util.Collection,com.google.common.base.Function)>/$stack3
<com.google.common.collect.Collections2$TransformedCollection: void <init>(java.util.Collection,com.google.common.base.Function)>/$stack4
<com.google.common.collect.Collections2$TransformedCollection: void <init>(java.util.Collection,com.google.common.base.Function)>/$stack5
<com.google.common.collect.Collections2$TransformedCollection: void <init>(java.util.Collection,com.google.common.base.Function)>/$stack6
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack31
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack39
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack59
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/registryPostProcessor_$$A_3#_598
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack25
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack32
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack40
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack49
<org.mockito.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>/o#_0
<org.mockito.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>/other#_223
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(java.util.Collection,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack7
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(java.util.Collection,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/postProcessor#_662
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack35
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack44
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack28
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack36
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack45
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List)>/$stack7
<org.springframework.context.support.AbstractApplicationContext: void finishBeanFactoryInitialization(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/$stack8
<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/originalRbd#_232
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/resource#_62
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack27
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/cache#2#_48
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/cache#_44
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/beanInstance#_367
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/$stack32
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/$stack20
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/factoryBean#_396
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/beanInstance#_455
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>/$stack22
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/beanInstance#_525
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stack28
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stack38
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String resolveEmbeddedValue(java.lang.String)>/$stack8
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String resolveEmbeddedValue(java.lang.String)>/resolver#_735
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/leftNumber#_41
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/rightNumber#_42
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/$stack19
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/l7#11#_1354
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/$stack48
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack8
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/beanInstance#_0
<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>/$stack27
<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>/$stack28
<org.mockito.cglib.proxy.MethodInterceptorGenerator$1: java.lang.Object transform(java.lang.Object)>/value#_0
<org.mockito.cglib.proxy.MethodInterceptorGenerator$1: java.lang.Object transform(java.lang.Object)>/$stack2
<org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>/other#_0
<org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>/otherContext#_75
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,java.lang.String)>/$stack3
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,java.lang.String)>/$stack5
<br.com.caelum.iogi.parameters.Parameter: boolean equals(java.lang.Object)>/obj#_0
<br.com.caelum.iogi.parameters.Parameter: boolean equals(java.lang.Object)>/other#_78
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/$stack8
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/p#_80
<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] basicTypes(java.util.List)>/$stack5
<com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/calendar#_39
<org.mockito.cglib.proxy.InvocationHandlerGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack11
<org.mockito.cglib.proxy.InvocationHandlerGenerator: void generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack8
<org.mockito.cglib.core.EmitUtils$3: java.lang.Object transform(java.lang.Object)>/value#_0
<org.mockito.cglib.core.EmitUtils$3: java.lang.Object transform(java.lang.Object)>/$stack4
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.Type)>/generic#_0
<org.springframework.web.context.support.ServletContextResourcePatternResolver: java.util.Set doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)>/scResource#_84
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/index_$$A_1#_96
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack54
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack25
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack34
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/index_$$A_1#_166
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack62
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack30
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack39
<ognl.ASTChain: boolean isSimpleNavigationChain(ognl.OgnlContext)>/$stack15
<ognl.ASTChain: boolean isSimpleNavigationChain(ognl.OgnlContext)>/$stack16
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>/typeAdapter#_0
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>/$stack16
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>/$stack19
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack162
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack163
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack166
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_2#_309
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack100
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack101
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack104
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/or#_327
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack151
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack152
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack14
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/kv#_94
<com.thoughtworks.xstream.converters.extended.FontConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.extended.FontConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/font#_68
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack23
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/attributes_$$A_1#_110
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack33
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: int read(byte[],int,int)>/$stack6
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: int read(byte[],int,int)>/$stack7
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack127
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack128
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack131
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_2#_422
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack116
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack117
<java.util.ResourceBundle: java.util.ResourceBundle$Control getDefaultControl(java.lang.String)>/$stack9
<java.util.ResourceBundle: java.util.ResourceBundle$Control getDefaultControl(java.lang.String)>/l2#_1304
<java.util.ResourceBundle: java.util.ResourceBundle findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle)>/$stack14
<java.util.ResourceBundle: java.util.ResourceBundle loadBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.ResourceBundle$Control,boolean)>/$stack12
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>/other#_0
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>/otherKey#_202
<org.mockito.cglib.core.ReflectUtils: org.mockito.asm.Type[] getExceptionTypes(java.lang.reflect.Member)>/member#_0
<org.mockito.cglib.core.ReflectUtils: org.mockito.asm.Type[] getExceptionTypes(java.lang.reflect.Member)>/$stack7
<org.mockito.cglib.core.ReflectUtils: org.mockito.asm.Type[] getExceptionTypes(java.lang.reflect.Member)>/$stack4
<br.com.caelum.iogi.DependenciesInjector: boolean canObtainDependenciesFor(java.util.Collection)>/$stack6
<org.mockito.cglib.core.ReflectUtils: org.mockito.cglib.core.Signature getSignature(java.lang.reflect.Member)>/member#_0
<org.mockito.cglib.core.ReflectUtils: org.mockito.cglib.core.Signature getSignature(java.lang.reflect.Member)>/$stack5
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void registerDestroyListener(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/$stack4
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void registerDestroyListener(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/$stack5
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(javax.servlet.http.HttpSession)>/$stack9
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>/$stack9
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>/l4#_331
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermissions getMinimum(javax.crypto.CryptoPermissions)>/$stack25
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermissions getMinimum(javax.crypto.CryptoPermissions)>/$stack26
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermissions getMinimum(javax.crypto.CryptoPermissions)>/$stack56
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermissions getMinimum(javax.crypto.CryptoPermissions)>/$stack57
<br.com.caelum.iogi.collections.ParametersByIndex: com.google.common.collect.ListMultimap groupByIndex(br.com.caelum.iogi.parameters.Parameters,br.com.caelum.iogi.reflection.Target)>/$stack18
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/method#_69
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/method#3#_73
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)>/$stack12
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)>/$stack16
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>/$stack10
<com.google.inject.TypeLiteral: boolean equals(java.lang.Object)>/o#_0
<com.google.inject.TypeLiteral: boolean equals(java.lang.Object)>/$stack3
<com.google.common.collect.Collections2: java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate)>/$stack4
<com.google.common.collect.Collections2: java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate)>/$stack6
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: boolean equals(java.lang.Object)>/o#_0
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: boolean equals(java.lang.Object)>/that#_238
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)>/$stack7
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)>/field#_114
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>/$stack34
<sun.security.util.ManifestEntryVerifier: void update(byte)>/$stack7
<sun.security.util.ManifestEntryVerifier: void update(byte)>/$stack8
<sun.security.util.ManifestEntryVerifier: void update(byte[],int,int)>/$stack9
<sun.security.util.ManifestEntryVerifier: void update(byte[],int,int)>/$stack10
<sun.security.util.ManifestEntryVerifier: java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable)>/$stack23
<sun.security.util.ManifestEntryVerifier: java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable)>/$stack21
<sun.security.util.ManifestEntryVerifier: java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable)>/l4#_205
<org.springframework.expression.spel.ast.OpNE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op1#_40
<org.springframework.expression.spel.ast.OpNE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op2#_41
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper: boolean equals(java.lang.Object)>/other#_0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper: boolean equals(java.lang.Object)>/$stack3
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest$1: boolean matchesSafely(br.com.caelum.vraptor.restfulie.relation.RelationBuilder)>/$stack6
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest$1: boolean matchesSafely(br.com.caelum.vraptor.restfulie.relation.RelationBuilder)>/relation#_72
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest$1: boolean matchesSafely(java.lang.Object)>/l1#_0
<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: boolean equals(java.lang.Object)>/other#_0
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/method#_62
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/property#_84
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>/$stack13
<ognl.ASTProperty: boolean isNodeSimpleProperty(ognl.OgnlContext)>/$stack7
<ognl.ASTProperty: boolean isNodeSimpleProperty(ognl.OgnlContext)>/$stack8
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack16
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack17
<com.google.common.base.Predicates$InstanceOfPredicate: void <init>(java.lang.Class)>/$stack2
<com.google.common.base.Predicates$InstanceOfPredicate: void <init>(java.lang.Class)>/$stack3
<com.google.common.base.Predicates$InstanceOfPredicate: boolean equals(java.lang.Object)>/obj#_0
<com.google.common.base.Predicates$InstanceOfPredicate: boolean equals(java.lang.Object)>/that#_440
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByName(java.lang.String)>/$stack4
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByName(java.lang.String)>/$stack5
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByValue(int)>/$stack5
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByValue(int)>/$stack6
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>/$stack14
<java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>/l4#_587
<java.io.FileDescriptor: void closeAll(java.io.Closeable)>/$stack18
<java.io.FileDescriptor: void closeAll(java.io.Closeable)>/l6#_200
<org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum: java.lang.Object convert(java.lang.Object)>/l1#_0
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack16
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack17
<org.springframework.ui.context.support.UiApplicationContextUtils: org.springframework.ui.context.ThemeSource initThemeSource(org.springframework.context.ApplicationContext)>/hts#_61
<org.springframework.ui.context.support.UiApplicationContextUtils: org.springframework.ui.context.ThemeSource initThemeSource(org.springframework.context.ApplicationContext)>/$stack18
<com.thoughtworks.xstream.converters.basic.BooleanConverter: java.lang.String toString(java.lang.Object)>/obj#_0
<com.thoughtworks.xstream.converters.basic.BooleanConverter: java.lang.String toString(java.lang.Object)>/value#_61
<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>/$stack35
<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>/l3_$$A_2#_2055
<java.util.logging.Logger: void removeChildLogger(java.util.logging.LogManager$LoggerWeakRef)>/$stack11
<java.util.logging.Logger: void removeChildLogger(java.util.logging.LogManager$LoggerWeakRef)>/l4#_2093
<org.springframework.beans.factory.support.AbstractBeanDefinition: boolean equals(java.lang.Object)>/that#_1003
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack76
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/mapdata#_71
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o_$$A_1#_79
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack110
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o_$$A_4#_118
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack40
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack100
<org.picocontainer.injectors.PrimitiveMemberChecker: boolean isPrimitiveArgument(java.lang.reflect.AccessibleObject,int)>/$stack26
<org.picocontainer.injectors.PrimitiveMemberChecker: boolean isPrimitiveArgument(java.lang.reflect.AccessibleObject,int)>/$stack30
<org.picocontainer.injectors.PrimitiveMemberChecker: boolean isPrimitiveArgument(java.lang.reflect.AccessibleObject,int)>/$stack12
<br.com.caelum.iogi.reflection.Target: java.lang.Class findRawClassType(java.lang.reflect.Type)>/type#_0
<br.com.caelum.iogi.reflection.Target: java.lang.Class findRawClassType(java.lang.reflect.Type)>/$stack3
<br.com.caelum.iogi.reflection.Target: java.lang.Class findRawClassType(java.lang.reflect.Type)>/$stack4
<br.com.caelum.iogi.reflection.Target: br.com.caelum.iogi.reflection.Target typeArgument(int)>/$stack5
<br.com.caelum.iogi.reflection.Target: br.com.caelum.iogi.reflection.Target typeArgument(int)>/thisAsParameterizedType#_60
<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>/$stack62
<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>/l6#_265
<br.com.caelum.iogi.reflection.Target: boolean equals(java.lang.Object)>/obj#_0
<br.com.caelum.iogi.reflection.Target: boolean equals(java.lang.Object)>/other#_92
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>/bean#_0
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>/$stack13
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>/$stack20
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>/$stack16
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>/$stack10
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>/$stack8
<org.springframework.core.convert.support.StringToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack36
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack39
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack40
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack59
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack60
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack75
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack76
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack85
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack100
<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/$stack101
<org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>/l1#_0
<org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>/l2#_92
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/source#_107
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/$stack19
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/entry#_109
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveParameterType(org.springframework.core.MethodParameter,java.lang.Class)>/rawType#_83
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveParameterType(org.springframework.core.MethodParameter,java.lang.Class)>/$stack10
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveReturnType(java.lang.reflect.Method,java.lang.Class)>/rawType#_101
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveReturnType(java.lang.reflect.Method,java.lang.Class)>/$stack9
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/arg_$$A_3#_205
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/$stack9
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/$stack11
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/arg#_0
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/$stack19
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/gat#_192
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveType(java.lang.reflect.Type,java.util.Map)>/rawType#_218
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveType(java.lang.reflect.Type,java.util.Map)>/$stack5
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getRawType(java.lang.reflect.Type,java.util.Map)>/$stack8
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getRawType(java.lang.reflect.Type,java.util.Map)>/resolvedType_$$A_1#_232
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getRawType(java.lang.reflect.Type,java.util.Map)>/resolvedType_$$A_3#_235
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getRawType(java.lang.reflect.Type,java.util.Map)>/$stack6
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack23
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack21
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack36
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack37
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack19
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/include#8_$$A_5#_44
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack26
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/$stack31
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseExclude(java.util.Map$Entry)>/$stack5
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseExclude(java.util.Map$Entry)>/$stack3
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseInclude(com.google.common.collect.Multimap,java.util.Map$Entry)>/$stack9
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseInclude(com.google.common.collect.Multimap,java.util.Map$Entry)>/$stack8
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void excludeNonPrimitiveFields(com.google.common.collect.Multimap,java.lang.Class)>/$stack11
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void excludeNonPrimitiveFields(com.google.common.collect.Multimap,java.lang.Class)>/field#_74
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack8
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack9
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack14
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack15
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack58
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/mapData#_67
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack80
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/$stack31
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/l12#_2559
<org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>/obj#_0
<org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>/otherRes#_103
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/property#_0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/$stack16
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/target#_0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/type#_0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/$stack8
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/$stack13
<java.lang.invoke.MethodType: java.lang.invoke.MethodType fromMethodDescriptorString(java.lang.String,java.lang.ClassLoader)>/$stack18
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/field#_68
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/accessor_$$A_1#_188
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack36
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack29
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack30
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/accessor#_238
<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.spel.ExpressionState)>/$stack15
<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.spel.ExpressionState)>/pfResolver#_266
<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/$stack18
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Field reflectField(java.lang.String)>/$stack7
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Field reflectField(java.lang.String)>/f#_88
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Method reflectMethod(java.lang.String,java.lang.Class[])>/$stack12
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Method reflectMethod(java.lang.String,java.lang.Class[])>/method#_100
<org.scannotation.AnnotationDB: void scanClass(javassist.bytecode.ClassFile)>/$stack6
<org.scannotation.AnnotationDB: void scanClass(javassist.bytecode.ClassFile)>/visible#_337
<org.scannotation.AnnotationDB: void scanClass(javassist.bytecode.ClassFile)>/$stack7
<org.scannotation.AnnotationDB: void scanClass(javassist.bytecode.ClassFile)>/invisible#_338
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/$stack32
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/visible#_358
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/$stack33
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/invisible#_359
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/$stack19
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/visible#7#_366
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/$stack20
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/invisible#8#_367
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/obj#_353
<org.scannotation.AnnotationDB: void scanMethods(javassist.bytecode.ClassFile)>/method#_355
<org.scannotation.AnnotationDB: void scanFields(javassist.bytecode.ClassFile)>/$stack12
<org.scannotation.AnnotationDB: void scanFields(javassist.bytecode.ClassFile)>/visible#_394
<org.scannotation.AnnotationDB: void scanFields(javassist.bytecode.ClassFile)>/$stack13
<org.scannotation.AnnotationDB: void scanFields(javassist.bytecode.ClassFile)>/invisible#_395
<org.scannotation.AnnotationDB: void scanFields(javassist.bytecode.ClassFile)>/obj#_391
<org.scannotation.AnnotationDB: void scanFields(javassist.bytecode.ClassFile)>/field#_393
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/l1#_0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: boolean matchesSafely(java.lang.Object)>/l1#_0
<org.joda.time.field.BaseDurationField: int compareTo(java.lang.Object)>/l1#_0
<org.joda.time.field.BaseDurationField: int compareTo(java.lang.Object)>/l2#_145
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/index#16#_792
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/index#12#_775
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack13
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/oldValue#57#_989
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/arrayIndex#13#_957
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack121
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack122
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack127
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack128
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack189
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack190
<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op1#_44
<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op2#_45
<java.util.Hashtable: void putAll(java.util.Map)>/$stack7
<java.util.Hashtable: void putAll(java.util.Map)>/l3#_522
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceCollection#_60
<java.util.Hashtable: boolean equals(java.lang.Object)>/$stack13
<java.util.Hashtable: boolean equals(java.lang.Object)>/l4#_806
<org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>/l1#_0
<org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>/$stack3
<org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber: java.lang.Object convert(java.lang.Object)>/l1#_0
<org.picocontainer.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/method#_73
<org.picocontainer.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/method#10#_79
<org.mockito.cglib.core.EmitUtils: void stringSwitchHelper(org.mockito.cglib.core.CodeEmitter,java.util.List,org.mockito.cglib.core.ObjectSwitchCallback,org.mockito.asm.Label,org.mockito.asm.Label,int)>/$stack8
<org.mockito.cglib.core.EmitUtils: void stringSwitchHelper(org.mockito.cglib.core.CodeEmitter,java.util.List,org.mockito.cglib.core.ObjectSwitchCallback,org.mockito.asm.Label,org.mockito.asm.Label,int)>/$stack9
<com.google.gson.internal.bind.TypeAdapters$3: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: boolean equals(java.lang.Object)>/other#_0
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/member#_0
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/field#_91
<org.mockito.cglib.core.EmitUtils: void member_helper_type(org.mockito.cglib.core.CodeEmitter,java.util.List,org.mockito.cglib.core.ObjectSwitchCallback,org.mockito.cglib.core.EmitUtils$ParameterTyper,org.mockito.asm.Label,org.mockito.asm.Label,java.util.BitSet)>/$stack14
<org.mockito.cglib.core.EmitUtils: void member_helper_type(org.mockito.cglib.core.CodeEmitter,java.util.List,org.mockito.cglib.core.ObjectSwitchCallback,org.mockito.cglib.core.EmitUtils$ParameterTyper,org.mockito.asm.Label,org.mockito.asm.Label,java.util.BitSet)>/$stack38
<com.google.inject.internal.MoreTypes$GenericArrayTypeImpl: boolean equals(java.lang.Object)>/o#_0
<org.springframework.core.convert.support.NumberToCharacterConverter: java.lang.Object convert(java.lang.Object)>/l1#_0
<org.mockito.cglib.core.EmitUtils$6: void processCase(int,org.mockito.asm.Label)>/$stack13
<org.mockito.cglib.core.EmitUtils$6: void processCase(int,org.mockito.asm.Label)>/$stack46
<org.picocontainer.injectors.AnnotatedMethodInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/member#_0
<org.picocontainer.injectors.AnnotatedMethodInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/$stack5
<br.com.caelum.vraptor.serialization.I18nMessageSerialization: void as(java.lang.Class)>/$stack4
<br.com.caelum.vraptor.serialization.I18nMessageSerialization: void as(java.lang.Class)>/serialization#_52
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/leftNumber#_40
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/rightNumber#_41
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/bean#_0
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/$stack12
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/$stack8
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void <init>(java.util.List,java.util.List)>/$stack4
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void <init>(java.util.List,java.util.List)>/$stack5
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void <init>(java.util.List,java.util.List)>/$stack7
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void <init>(java.util.List,java.util.List)>/$stack8
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void registerComponents(com.thoughtworks.xstream.XStream)>/$stack10
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void registerComponents(com.thoughtworks.xstream.XStream)>/$stack16
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>/$stack7
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue mergeIfRequired(org.springframework.beans.PropertyValue,org.springframework.beans.PropertyValue)>/value#_217
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue mergeIfRequired(org.springframework.beans.PropertyValue,org.springframework.beans.PropertyValue)>/mergeable#_219
<org.mockito.cglib.proxy.LazyLoaderGenerator: void generate(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/$stack30
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)>/$stack7
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)>/pv#_251
<org.springframework.beans.MutablePropertyValues: boolean equals(java.lang.Object)>/other#_0
<org.springframework.beans.MutablePropertyValues: boolean equals(java.lang.Object)>/that#_330
<org.hamcrest.collection.IsEmptyCollection: boolean matchesSafely(java.lang.Object)>/x0#_0
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<org.springframework.core.convert.support.StringToPropertiesConverter: java.lang.Object convert(java.lang.Object)>/l1#_0
<org.springframework.expression.spel.ast.OpEQ: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op1#_40
<org.springframework.expression.spel.ast.OpEQ: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op2#_41
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/$stack22
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/$stack33
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/componentAdapter_$$A_1_$$A_1#_249
<org.hamcrest.number.OrderingComparison: boolean matchesSafely(java.lang.Object)>/x0#_0
<br.com.caelum.vraptor.http.route.DefaultRouter$2: boolean apply(java.lang.Object)>/l1#_0
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack21
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack11
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack28
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/list#_99
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack25
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack12
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceMap#_61
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/entry#_66
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceMapEntry#_67
<org.springframework.context.support.DefaultLifecycleProcessor: void startBeans(boolean)>/$stack44
<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/$stack28
<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/$stack29
<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/$stack24
<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/$stack25
<org.springframework.core.convert.support.StringToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<javassist.bytecode.CodeAttribute: void <init>(javassist.bytecode.ConstPool,javassist.bytecode.CodeAttribute,java.util.Map)>/$stack17
<javassist.bytecode.CodeAttribute: void <init>(javassist.bytecode.ConstPool,javassist.bytecode.CodeAttribute,java.util.Map)>/ai#_89
<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>/$stack56
<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>/l15#64#_943
<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>/$stack67
<sun.invoke.util.BytecodeDescriptor: java.lang.String unparseMethod(java.lang.Class,java.util.List)>/$stack11
<com.google.gson.internal.bind.JsonTreeWriter: void put(com.google.gson.JsonElement)>/$stack11
<com.google.gson.internal.bind.JsonTreeWriter: void put(com.google.gson.JsonElement)>/object#_78
<com.google.gson.internal.bind.JsonTreeWriter: void put(com.google.gson.JsonElement)>/object#6#_85
<com.google.gson.internal.bind.JsonTreeWriter: void put(com.google.gson.JsonElement)>/$stack9
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/object#_0
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/that#_48
<com.thoughtworks.xstream.converters.basic.CharConverter: java.lang.String toString(java.lang.Object)>/obj#_0
<com.thoughtworks.xstream.converters.basic.CharConverter: java.lang.String toString(java.lang.Object)>/$stack3
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void startNode(java.lang.String,java.lang.Class)>/$stack6
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void startNode(java.lang.String,java.lang.Class)>/$stack7
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void setValue(java.lang.String)>/$stack4
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void setValue(java.lang.String)>/$stack5
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void handleCheckedStateTransition(int,java.lang.String,java.lang.String)>/$stack7
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void handleCheckedStateTransition(int,java.lang.String,java.lang.String)>/stackElement#_281
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack14
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack15
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack236
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/$stack237
<com.google.inject.internal.util.$ImmutableMap$Builder: com.google.inject.internal.util.$ImmutableMap fromEntryList(java.util.List)>/$stack5
<org.springframework.expression.spel.support.ReflectiveMethodResolver: org.springframework.expression.MethodExecutor resolve(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.util.List)>/targetObject#_0
<org.springframework.expression.spel.support.ReflectiveMethodResolver: org.springframework.expression.MethodExecutor resolve(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.util.List)>/$stack22
<java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>/$stack13
<java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>/l3#_295
<org.joda.time.format.DateTimeFormatterBuilder$TextField: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)>/$stack21
<org.joda.time.format.DateTimeFormatterBuilder$TextField: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)>/l9#_1706
<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/$stack17
<br.com.caelum.iogi.MultiInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack14
<br.com.caelum.iogi.MultiInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/instantiator#_18
<org.springframework.beans.factory.support.MethodOverrides: boolean equals(java.lang.Object)>/other#_0
<org.springframework.beans.factory.support.MethodOverrides: boolean equals(java.lang.Object)>/that#_108
<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/$stack37
<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/$stack58
<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/l9#_1899
<com.google.gson.Gson$3: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)>/$stack27
<com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)>/factory#_355
<com.google.gson.Gson: com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)>/$stack15
<com.google.gson.Gson: com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)>/factory#_422
<org.springframework.expression.spel.ast.OperatorMatches: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_52
<org.springframework.expression.spel.ast.OperatorMatches: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_53
<com.google.gson.internal.bind.TypeAdapters$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<org.hamcrest.object.IsCompatibleType: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/x0#_0
<org.hamcrest.object.IsCompatibleType: boolean matchesSafely(java.lang.Object)>/x0#_0
<javassist.util.proxy.ProxyFactory$2: int compare(java.lang.Object,java.lang.Object)>/$stack7
<javassist.util.proxy.ProxyFactory$2: int compare(java.lang.Object,java.lang.Object)>/key1#_764
<javassist.util.proxy.ProxyFactory$2: int compare(java.lang.Object,java.lang.Object)>/$stack8
<java.io.FilePermissionCollection: boolean implies(java.security.Permission)>/$stack18
<java.io.FilePermissionCollection: boolean implies(java.security.Permission)>/l9#_761
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_52
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack21
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/l#_57
<ognl.EnumerationElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/target#_0
<ognl.EnumerationElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/$stack2
<org.picocontainer.paranamer.BytecodeReadingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/methodOrCtor#_0
<org.picocontainer.paranamer.BytecodeReadingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/method#_77
<org.picocontainer.paranamer.BytecodeReadingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/method#8#_82
<org.apache.log4j.SortedKeyEnumeration: void <init>(java.util.Hashtable)>/$stack15
<com.google.common.base.Joiner$MapJoiner: void <init>(com.google.common.base.Joiner,java.lang.String)>/$stack3
<com.google.common.base.Joiner$MapJoiner: void <init>(com.google.common.base.Joiner,java.lang.String)>/$stack4
<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>/$stack4
<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>/$stack5
<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet headSet(java.lang.Object)>/$stack3
<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet headSet(java.lang.Object)>/$stack4
<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet tailSet(java.lang.Object)>/$stack3
<com.google.common.collect.Sets$FilteredSortedSet: java.util.SortedSet tailSet(java.lang.Object)>/$stack4
<br.com.caelum.vraptor.http.DefaultParameterNameProvider: java.lang.reflect.Type[] parameterTypes(java.lang.reflect.AccessibleObject)>/$stack11
<br.com.caelum.vraptor.http.DefaultParameterNameProvider: java.lang.reflect.Type[] parameterTypes(java.lang.reflect.AccessibleObject)>/$stack9
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)>/$stack9
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)>/$stack10
<com.google.gson.internal.bind.TypeAdapters$6: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<com.google.common.base.Predicates$InPredicate: void <init>(java.util.Collection)>/$stack2
<com.google.common.base.Predicates$InPredicate: void <init>(java.util.Collection)>/$stack3
<org.springframework.core.CollectionFactory: java.util.Collection createApproximateCollection(java.lang.Object,int)>/collection#_0
<org.springframework.core.CollectionFactory: java.util.Collection createApproximateCollection(java.lang.Object,int)>/$stack7
<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.Class findType(java.lang.String)>/$stack9
<org.springframework.core.CollectionFactory: java.util.Map createApproximateMap(java.lang.Object,int)>/map#_0
<org.springframework.core.CollectionFactory: java.util.Map createApproximateMap(java.lang.Object,int)>/$stack5
<org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>/l1#_0
<org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>/l2#_133
<javassist.bytecode.stackmap.TypeData$TypeName: void merge(javassist.bytecode.stackmap.TypeData)>/$stack10
<javassist.bytecode.stackmap.TypeData$TypeName: boolean equals(java.lang.Object)>/obj#_0
<javassist.bytecode.stackmap.TypeData$TypeName: boolean equals(java.lang.Object)>/tn#_191
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/$stack11
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/td_$$A_4#_227
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/$stack16
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/td_$$A_1#_217
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/tn_$$A_1#_219
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/tn_$$A_5#_229
<javassist.bytecode.stackmap.TypeData$TypeName: java.lang.String evalExpectedType2(java.util.ArrayList,int)>/$stack6
<javassist.bytecode.stackmap.TypeData$TypeName: java.lang.String evalExpectedType2(java.util.ArrayList,int)>/td#_240
<ognl.NoSuchPropertyException: java.lang.String getReason(java.lang.Object,java.lang.Object)>/target#_0
<ognl.NoSuchPropertyException: java.lang.String getReason(java.lang.Object,java.lang.Object)>/$stack11
<com.google.gson.internal.bind.TypeAdapters$19: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<org.springframework.context.event.SimpleApplicationEventMulticaster: void multicastEvent(org.springframework.context.ApplicationEvent)>/$stack8
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack8
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack9
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack14
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack15
<org.mockito.cglib.core.RejectModifierPredicate: boolean evaluate(java.lang.Object)>/arg#_0
<org.mockito.cglib.core.RejectModifierPredicate: boolean evaluate(java.lang.Object)>/$stack2
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceCollection#_59
<br.com.caelum.vraptor.util.Stringnifier: java.lang.String simpleNameFor(java.lang.reflect.AccessibleObject)>/object#_0
<br.com.caelum.vraptor.util.Stringnifier: java.lang.String simpleNameFor(java.lang.reflect.AccessibleObject)>/method#_39
<br.com.caelum.vraptor.util.Stringnifier: java.lang.String simpleNameFor(java.lang.reflect.AccessibleObject)>/method#2#_44
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>/field#9#_658
<org.hamcrest.core.SubstringMatcher: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/x0#_0
<org.hamcrest.core.SubstringMatcher: boolean matchesSafely(java.lang.Object)>/x0#_0
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Object,java.lang.Object)>/x0#_0
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Object,java.lang.Object)>/x1#_0
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Object convert(java.lang.Object)>/l1#_0
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.MethodExecutor findAccessorForMethod(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/$stack23
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.MethodExecutor findAccessorForMethod(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/$stack27
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.MethodExecutor findAccessorForMethod(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/methodResolver#_172
<br.com.caelum.vraptor.serialization.gson.adapters.HibernateProxySerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/l1#_0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean isMatched(java.lang.Object)>/$stack5
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/$stack50
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/source#_118
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>/$stack8
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>/$stack9
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)>/$stack8
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)>/$stack9
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroyBean(java.lang.String,org.springframework.beans.factory.DisposableBean)>/$stack28
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroyBean(java.lang.String,org.springframework.beans.factory.DisposableBean)>/$stack40
<org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>/obj#_0
<org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>/otherRes#_191
<br.com.caelum.vraptor.resource.DefaultResourceMethod: boolean equals(java.lang.Object)>/obj#_0
<br.com.caelum.vraptor.resource.DefaultResourceMethod: boolean equals(java.lang.Object)>/other#_78
<ognl.SimpleNode: void dump(java.io.PrintWriter,java.lang.String)>/$stack10
<ognl.SimpleNode: void dump(java.io.PrintWriter,java.lang.String)>/n#_146
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParser: java.lang.String[] getUris(java.lang.reflect.Method)>/$stack6
<org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>/other#_0
<org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>/otherHolder#_171
<com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)>/o#_0
<com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)>/$stack3
<net.vidageek.mirror.list.SameNameMatcher: boolean accepts(java.lang.Object)>/x0#_0
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o#34#_133
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack41
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack127
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack25
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack26
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/accessor#59_$$A_1#_157
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack55
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack50
<br.com.caelum.vraptor.interceptor.TopologicalSortedInterceptorRegistryTest$1: boolean matchesSafely(java.lang.Object)>/l1#_0
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack32
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/map#_195
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack56
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack57
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack83
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack84
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedValue#7#_220
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack41
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/accessor#_245
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack51
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack52
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack21
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack22
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack36
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack37
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack46
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack47
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack56
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack57
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack41
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack42
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack26
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack27
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack31
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack32
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/ctx#_0
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/array#_315
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/array#8#_343
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/array#9#_347
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/array#3#_323
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/array#2#_319
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/array#5#_331
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/array#4#_327
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/array#7#_339
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/array#6#_335
<org.springframework.expression.spel.ast.Indexer: java.lang.Object accessArrayElement(java.lang.Object,int)>/ctx#_0
<org.springframework.expression.spel.ast.Indexer: java.lang.Object accessArrayElement(java.lang.Object,int)>/array#_356
<org.springframework.expression.spel.ast.Indexer: java.lang.Object accessArrayElement(java.lang.Object,int)>/array#8#_384
<org.springframework.expression.spel.ast.Indexer: java.lang.Object accessArrayElement(java.lang.Object,int)>/array#9#_388
<org.springframework.expression.spel.ast.Indexer: java.lang.Object accessArrayElement(java.lang.Object,int)>/array#3#_364
<org.springframework.expression.spel.ast.Indexer: java.lang.Object accessArrayElement(java.lang.Object,int)>/array#2#_360
<org.springframework.expression.spel.ast.Indexer: java.lang.Object accessArrayElement(java.lang.Object,int)>/array#5#_372
<org.springframework.expression.spel.ast.Indexer: java.lang.Object accessArrayElement(java.lang.Object,int)>/array#4#_368
<org.springframework.expression.spel.ast.Indexer: java.lang.Object accessArrayElement(java.lang.Object,int)>/array#7#_380
<org.springframework.expression.spel.ast.Indexer: java.lang.Object accessArrayElement(java.lang.Object,int)>/array#6#_376
<com.google.gson.internal.bind.TypeAdapters$14: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<javassist.util.proxy.ProxyFactory: void computeSignature(javassist.util.proxy.MethodFilter)>/$stack13
<javassist.util.proxy.ProxyFactory: void computeSignature(javassist.util.proxy.MethodFilter)>/e#_788
<javassist.util.proxy.ProxyFactory: void computeSignature(javassist.util.proxy.MethodFilter)>/$stack14
<javassist.util.proxy.ProxyFactory: int overrideMethods(javassist.bytecode.ClassFile,javassist.bytecode.ConstPool,java.lang.String)>/$stack17
<javassist.util.proxy.ProxyFactory: int overrideMethods(javassist.bytecode.ClassFile,javassist.bytecode.ConstPool,java.lang.String)>/$stack16
<javassist.util.proxy.ProxyFactory: int overrideMethods(javassist.bytecode.ClassFile,javassist.bytecode.ConstPool,java.lang.String)>/e#_908
<javassist.util.proxy.ProxyFactory: int overrideMethods(javassist.bytecode.ClassFile,javassist.bytecode.ConstPool,java.lang.String)>/$stack18
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>/$stack49
<javassist.util.proxy.ProxyFactory: boolean makeUniqueName0(java.lang.String,java.util.Iterator)>/$stack6
<javassist.util.proxy.ProxyFactory: boolean makeUniqueName0(java.lang.String,java.util.Iterator)>/key#_977
<javassist.util.proxy.ProxyFactory: boolean makeUniqueName0(java.lang.String,java.util.Iterator)>/$stack5
<javassist.util.proxy.ProxyFactory: boolean makeUniqueName0(java.lang.String,java.util.Iterator)>/e#_976
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getNextLoader(int[],int)>/$stack9
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getNextLoader(int[],int)>/l3#_474
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>/$stack25
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>/$stack12
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>/$stack13
<org.joda.time.format.DateTimeParserBucket$SavedField: int compareTo(java.lang.Object)>/l1#_0
<org.joda.time.format.DateTimeParserBucket$SavedField: int compareTo(java.lang.Object)>/$stack4
<org.springframework.context.expression.BeanFactoryAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.context.expression.BeanFactoryAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack4
<org.springframework.context.expression.BeanFactoryAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.context.expression.BeanFactoryAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack5
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/l1#_0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: boolean matchesSafely(java.lang.Object)>/l1#_0
<org.mockito.cglib.proxy.Enhancer: void emitConstructors(org.mockito.cglib.core.ClassEmitter,java.util.List)>/$stack13
<com.thoughtworks.xstream.core.util.OrderRetainingMap: void putAll(java.util.Map)>/$stack7
<com.thoughtworks.xstream.core.util.OrderRetainingMap: void putAll(java.util.Map)>/entry#_41
<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>/$stack76
<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>/$stack77_$$A_1
<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>/$stack40
<sun.security.x509.CRLExtensions: void encode(java.io.OutputStream,boolean)>/$stack28
<sun.security.x509.CRLExtensions: void encode(java.io.OutputStream,boolean)>/$stack29
<sun.security.x509.CRLExtensions: void encode(java.io.OutputStream,boolean)>/$stack24
<sun.security.x509.CRLExtensions: void encode(java.io.OutputStream,boolean)>/$stack25
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/$stack36
<org.springframework.util.NumberUtils: java.lang.Number convertNumberToTargetClass(java.lang.Number,java.lang.Class)>/$stack34
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>/$stack14
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>/l5#17#_511
<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: boolean equals(java.lang.Object)>/o#_0
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/$stack36
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/$stack48
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/$stack42
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/$stack45
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/$stack51
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/$stack30
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/$stack33
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/$stack27
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/val#10#_888
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArguments(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack15
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArguments(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack16
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArguments(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack21
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArguments(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack22
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack45
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack46
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack19
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack20
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack24
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack53
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack54
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack66
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack67
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack11
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack12
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack73
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack17
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/nullHandler#_55
<com.google.gson.JsonArray: boolean equals(java.lang.Object)>/o#_0
<com.google.gson.JsonArray: boolean equals(java.lang.Object)>/$stack4
<ognl.IteratorElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/target#_0
<com.thoughtworks.xstream.converters.basic.DateConverter: java.lang.String toString(java.lang.Object)>/obj#_0
<sun.util.locale.LanguageTag: sun.util.locale.LanguageTag parseLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/$stack50
<org.mockito.cglib.core.EmitUtils$13: java.lang.Object transform(java.lang.Object)>/value#_0
<com.google.gson.JsonPrimitive: void setValue(java.lang.Object)>/$stack9
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/$stack15
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/obj#_0
<com.google.gson.JsonPrimitive: boolean isIntegral(com.google.gson.JsonPrimitive)>/$stack4
<com.google.gson.JsonPrimitive: boolean isIntegral(com.google.gson.JsonPrimitive)>/number#_335
<br.com.caelum.iogi.collections.ListInstantiator: boolean firstParameterIsDecorated(java.util.List)>/$stack2
<br.com.caelum.iogi.collections.ListInstantiator: boolean firstParameterIsDecorated(java.util.List)>/$stack3
<ognl.OgnlRuntime: java.lang.Class getTargetClass(java.lang.Object)>/o#_0
<ognl.OgnlRuntime: java.lang.Class getTargetClass(java.lang.Object)>/$stack2_$$A_1
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/$stack15
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/typeClass_$$A_2#_1142
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/$stack20
<org.apache.log4j.Hierarchy: void fireAddAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)>/$stack10
<org.apache.log4j.Hierarchy: void fireAddAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)>/listener#_196
<org.apache.log4j.Hierarchy: void fireRemoveAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)>/$stack10
<org.apache.log4j.Hierarchy: void fireRemoveAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)>/listener#_207
<org.apache.log4j.Hierarchy: void updateChildren(org.apache.log4j.ProvisionNode,org.apache.log4j.Logger)>/$stack7
<org.apache.log4j.Hierarchy: void updateChildren(org.apache.log4j.ProvisionNode,org.apache.log4j.Logger)>/l#_563
<ognl.OgnlRuntime: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/$stack18
<org.springframework.expression.spel.ast.OpGE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/leftNumber#_39
<org.springframework.expression.spel.ast.OpGE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/rightNumber#_40
<br.com.caelum.vraptor.serialization.xstream.Serializee: java.util.Set getParentTypes(java.lang.String,java.lang.Class)>/$stack27
<br.com.caelum.vraptor.serialization.xstream.Serializee: java.util.Set getParentTypes(java.lang.String,java.lang.Class)>/field#_113
<ognl.OgnlRuntime: java.lang.reflect.Method getGetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/$stack12
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/$stack12
<ognl.OgnlRuntime: boolean indexMethodCheck(java.util.List)>/$stack13
<ognl.OgnlRuntime: boolean indexMethodCheck(java.util.List)>/$stack18
<ognl.OgnlRuntime: boolean indexMethodCheck(java.util.List)>/m#_1869
<org.springframework.expression.common.CompositeStringExpression: java.lang.String getValue(org.springframework.expression.EvaluationContext)>/$stack10
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack27
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/isGet#20#_1944
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack28
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/isSet#21#_1944
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack54
<com.google.inject.internal.util.$AbstractMapEntry: boolean equals(java.lang.Object)>/object#_0
<com.google.inject.internal.util.$AbstractMapEntry: boolean equals(java.lang.Object)>/that#_49
<ognl.OgnlRuntime: java.lang.reflect.Method findClosestMatchingMethod(java.lang.Class,java.lang.reflect.Method,java.lang.String,java.lang.Class,boolean)>/$stack10
<ognl.OgnlRuntime: java.lang.reflect.Method findClosestMatchingMethod(java.lang.Class,java.lang.reflect.Method,java.lang.String,java.lang.Class,boolean)>/method#_2033
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack45
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/sourceList_$$A_1#_94
<java.text.CharacterIteratorFieldDelegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>/$stack33
<java.text.CharacterIteratorFieldDelegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>/l8#_66
<java.text.CharacterIteratorFieldDelegate: java.text.AttributedCharacterIterator getIterator(java.lang.String)>/$stack12
<java.text.CharacterIteratorFieldDelegate: java.text.AttributedCharacterIterator getIterator(java.lang.String)>/$stack13
<org.picocontainer.injectors.MethodInjector: boolean isNullParamAllowed(java.lang.reflect.AccessibleObject,int)>/member#_0
<org.picocontainer.injectors.MethodInjector: boolean isNullParamAllowed(java.lang.reflect.AccessibleObject,int)>/$stack8
<ognl.JJTOgnlParserState: void clearNodeScope(ognl.Node)>/$stack8
<ognl.JJTOgnlParserState: void clearNodeScope(ognl.Node)>/$stack9
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,int)>/$stack8
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,int)>/$stack9
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,boolean)>/$stack9
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,boolean)>/$stack10
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,boolean)>/$stack17
<ognl.JJTOgnlParserState: void closeNodeScope(ognl.Node,boolean)>/$stack18
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Object convert(java.lang.Object)>/l1#_0
<org.springframework.beans.BeansException: boolean equals(java.lang.Object)>/other#_0
<org.springframework.beans.BeansException: boolean equals(java.lang.Object)>/otherBe#_61
<org.springframework.util.ObjectUtils: java.lang.Object[] toObjectArray(java.lang.Object)>/$stack21
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/o1#_0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>/obj#_0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/obj#_0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/$stack32
<org.mockito.cglib.core.ClassInfo: boolean equals(java.lang.Object)>/o#_0
<org.mockito.cglib.core.ClassInfo: boolean equals(java.lang.Object)>/$stack4
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/expr#_55
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack19
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack17
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack19_$$A_1
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/expr#_72
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack18
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack17
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack18_$$A_1
<org.springframework.expression.spel.ast.OpLE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/leftNumber#_40
<org.springframework.expression.spel.ast.OpLE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/rightNumber#_41
<com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<com.thoughtworks.xstream.converters.collections.CharArrayConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.collections.CharArrayConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack5
<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>/l1#_0
<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>/l2#_1611
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: int compareTo(java.lang.Object)>/l1#_0
<com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<br.com.caelum.iogi.reflection.NewObject$ScalaSetter$1: boolean accepts(java.lang.Object)>/x0#_0
<com.google.gson.DefaultDateTypeAdapter: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/x0#_0
<sun.util.locale.provider.LocaleServiceProviderPool: void <init>(java.lang.Class)>/$stack11
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack28
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/elementTypeName#25#_166
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/ref#6#_129
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/ref#22#_164
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack64
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/ref#4#_119
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/propKey_$$A_1#_167
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/propValue_$$A_1#_168
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>/$stack25
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>/$stack19
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>/$stack19
<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op1#_42
<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op2#_43
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object evaluate(java.lang.Object)>/value#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/dependsOnBean#5#_270
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/$stack23
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/$stack26
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/$stack34
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/$stack13
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/entry#_376
<com.thoughtworks.xstream.converters.collections.CollectionConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.collections.CollectionConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/collection#_71
<java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.SecureRandom)>/$stack14
<java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.SecureRandom)>/l6_$$A_2#_1100
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Class getObjectClass(java.lang.Object)>/obj#_0
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Class getObjectClass(java.lang.Object)>/$stack3
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void resetBeanDefinition(java.lang.String)>/$stack10
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/context#_0
<com.thoughtworks.xstream.converters.extended.ColorConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<com.thoughtworks.xstream.converters.extended.ColorConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/color#_40
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void <init>(java.util.List)>/$stack21
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void <init>(java.util.List)>/l7#_2414
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void <init>(java.util.List)>/$stack16
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void <init>(java.util.List)>/l7#8#_2429
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/$stack21
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>/$stack25
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>/$stack17
<org.apache.log4j.CategoryKey: boolean equals(java.lang.Object)>/rArg#_0
<org.apache.log4j.CategoryKey: boolean equals(java.lang.Object)>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: br.com.caelum.vraptor.View mockResult(java.lang.Class)>/$stack3
<javassist.compiler.MemberResolver: javassist.compiler.MemberResolver$Method lookupMethod(javassist.CtClass,java.lang.String,int[],int[],java.lang.String[],boolean)>/$stack40
<com.google.gson.internal.bind.TypeAdapters$7: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<javassist.compiler.MemberResolver: javassist.CtClass searchImports(java.lang.String)>/$stack17
<org.mockito.cglib.core.DuplicatesPredicate: boolean evaluate(java.lang.Object)>/arg#_0
<java.util.AbstractMap: void putAll(java.util.Map)>/$stack7
<java.util.AbstractMap: void putAll(java.util.Map)>/l3#_280
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: java.lang.String toString(java.lang.Object)>/source#_0
<java.util.AbstractMap: boolean equals(java.lang.Object)>/$stack13
<java.util.AbstractMap: boolean equals(java.lang.Object)>/l4#_488
<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>/$stack13
<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>/ref#_92
<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.lang.Class loadClass(java.lang.String)>/$stack20
<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.lang.Class loadClass(java.lang.String)>/classLoader#_131
<org.springframework.expression.spel.ast.Ternary: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack5
<org.springframework.expression.spel.ast.Ternary: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/value#_47
<com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<com.google.gson.internal.bind.TypeAdapters$5: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/x1#_0
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldNotCallDeserializerIfItDoesntAcceptGivenContentType()>/$stack7
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldNotCallDeserializerIfItDoesntAcceptGivenContentType()>/$stack8
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentType()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentType()>/$stack7
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfVendorized()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfVendorized()>/$stack7
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfAtomizedAlike()>/$stack6
<br.com.caelum.vraptor.deserialization.DefaultDeserializersTest: void shouldUseTheDeserializerThatAcceptsTheGivenContentTypeIfAtomizedAlike()>/$stack7
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack25
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack28
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack21
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack22
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack27
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack30
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack23
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack24
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerializationTest: void setup()>/$stack3
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack21
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack22
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack27
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack28
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack33
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack34
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldSetBundleOnI18nMessagesLazily()>/$stack15
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldSetBundleOnI18nMessagesLazily()>/$stack16
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldOnlySetBundleOnI18nMessagesThatHasNotBeenSetBefore()>/$stack2
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldOnlySetBundleOnI18nMessagesThatHasNotBeenSetBefore()>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldOnlySetBundleOnI18nMessagesThatHasNotBeenSetBefore()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack12
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack12
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack17
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack18
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack16
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack17
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotCrashWhenSessionIsInvalid()>/$stack12
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotCrashWhenSessionIsInvalid()>/$stack13
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void setUp()>/$stack1
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void setUp()>/$stack2
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void setUp()>/$stack3
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void setUp()>/$stack4
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldAddAllowHeader()>/$stack7
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldAddAllowHeader()>/$stack8
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldSendErrorMethodNotAllowed()>/$stack7
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldSendErrorMethodNotAllowed()>/$stack8
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldNotSendMethodNotAllowedIfTheRequestMethodIsOptions()>/$stack12
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldNotSendMethodNotAllowedIfTheRequestMethodIsOptions()>/$stack13
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack4
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack12
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack16
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack19
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack20
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack8
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldUseContainerIfInterceptorAccepts()>/$stack9
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack15
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack18
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack9
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void shouldNotUseContainerIfInterceptorDoesntAccept()>/$stack10
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack11
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack13
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack19
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack21
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack3
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldRedirectIncludingContext()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldRedirectIncludingContext()>/$stack8
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldNotIncludeContextPathIfURIIsAbsolute()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileRedirect()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileRedirect()>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack13
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack13
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack13
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack13
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack9
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack12
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack13
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack13
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack21
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack24
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack27
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack29
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack22
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack25
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeEndElement()>/$stack4
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeEndElement()>/$stack6
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void setUp()>/$stack2
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void setUp()>/$stack3
<javassist.CtClassType: javassist.CtClass getDeclaringClass()>/$stack17
<javassist.CtClassType: javassist.CtClass getDeclaringClass()>/ema#_753
<javassist.CtClassType: javassist.CtClass getDeclaringClass()>/$stack9
<javassist.CtClassType: javassist.CtClass getDeclaringClass()>/ica#_739
<sun.security.util.DerIndefLenConverter: void parseTag()>/l2_$$A_3#_100
<sun.security.util.DerIndefLenConverter: void parseTag()>/$stack22
<sun.security.util.DerIndefLenConverter: void parseTag()>/$stack39
<sun.security.util.DerIndefLenConverter: void parseTag()>/$stack40
<sun.security.util.DerIndefLenConverter: void parseTag()>/l2_$$A_2#_102
<sun.security.util.DerIndefLenConverter: void writeLengthAndValue()>/$stack28
<sun.security.util.DerIndefLenConverter: void writeLengthAndValue()>/$stack29
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void setup()>/$stack2
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void setup()>/$stack3
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack3
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack13
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack14
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack7
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack8
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrl()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithAsterisks()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithRegexes()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack11
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack13
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack15
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack17
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerParametersWithMultipleRegexes()>/$stack19
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack14
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack18
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack20
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldNotBeGreedyAtPatternCompiling()>/$stack22
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyParameters()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void registerExtraParametersFromAcessedUrlWithGreedyAndDottedParameters()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack16
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldFillRequestWhenAPatternIsSpecified()>/$stack18
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack12
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldDecodeUriParameters()>/$stack14
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack17
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/next#_89
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack25
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack26
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack28
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack29
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack40
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack41
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack46
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack47
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/newObj_$$A_2#_131
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack38
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack22
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack56
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack57
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack64
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack65
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack9
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack10
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack14
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack15
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack33
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack34
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack14
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack22
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack23
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack29
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack31
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack6
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack13
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack11
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack13
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack16
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack18
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack4
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack11
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack12
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack3
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack14
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack15
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack2
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack28
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack22
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack23
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack2
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack28
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack22
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack23
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack5
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack35
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack36
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack28
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack6
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack38
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack39
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack5
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack35
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack36
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack27
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack28
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack6
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack38
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack39
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack16
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack17
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack11
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack14
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack15
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldExecuteTheLogicAndRedirectToItsViewOnForward()>/$stack18
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack12
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack15
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack16
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldPutParametersOnFlashScopeOnRedirect()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldPutParametersOnFlashScopeOnRedirect()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotPutParametersOnFlashScopeOnRedirectIfThereAreNoParameters()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotPutParametersOnFlashScopeOnRedirectIfThereAreNoParameters()>/$stack7
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack19
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack20
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsNotAnnotatedWithHttpMethods()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsNotAnnotatedWithHttpMethods()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsAnnotatedWithHttpGetMethod()>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void canRedirectWhenLogicMethodIsAnnotatedWithHttpGetMethod()>/$stack6
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void cannotRedirectWhenLogicMethodIsAnnotatedWithAnyHttpMethodButGet()>/$stack8
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void cannotRedirectWhenLogicMethodIsAnnotatedWithAnyHttpMethodButGet()>/$stack9
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack39
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack40
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack3
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPage()>/$stack12
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPage()>/$stack13
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void shouldSend404IfNothingIsRendered()>/$stack11
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void shouldSend404IfNothingIsRendered()>/$stack12
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPageWithAlias()>/$stack13
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPageWithAlias()>/$stack14
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack17
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack17
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack17
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack18
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack12
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack16
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack17
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack20
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack21
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldNotSupportNonGenericLists()>/$stack2
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack39
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack41
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack37
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack41
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack37
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack41
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack59
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack60
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack65
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack66
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack45
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack49
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack51
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack55
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack57
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack14
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack15
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack48
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack54
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack41
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack45
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack47
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack48
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack53
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack54
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack41
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack43
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack45
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack7
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack8
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack39
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack40
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack35
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack36
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack21
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack7
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack11
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack16
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void testInvokesAllInterceptorsInItsCorrectOrder()>/$stack20
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack7
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack11
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack16
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void shouldAddNextInterceptorAsNext()>/$stack20
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldThrowResourceNotFoundExceptionWhenNoRoutesMatchTheURI()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldThrowMethodNotAllowedExceptionWhenNoRoutesMatchTheURIWithGivenHttpMethod()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldObeyPriorityOfRoutes()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void shouldObeyPriorityOfRoutes()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack28
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void acceptsASingleMappingRule()>/$stack29
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack4
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack27
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void passesTheWebMethod()>/$stack28
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void usesTheFirstRegisteredRuleMatchingThePattern()>/$stack5
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest: void setup()>/$stack3
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack19
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack16
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack23
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack24
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack19
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack23
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack25
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack27
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack19
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack14
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack30
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack22
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack22
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack24
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack27
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack18
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack20
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack35
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack36
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack29
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack30
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack32
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack33
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack38
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack39
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack34
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack35
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack27
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack31
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack32
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack37
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack38
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack49
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack50
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack37
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack38
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack40
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack41
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack43
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack44
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack46
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack47
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack52
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack53
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack4
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack5
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack6
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack7
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADog()>/$stack24
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack24
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/dogs#_165
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack29
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack33
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack38
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack42
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack24
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/dogs#_185
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack29
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack33
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack38
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack42
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack48
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack25
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/dogs#_205
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack30
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack34
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack39
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack43
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithDeserializerAdapter()>/$stack32
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgument()>/$stack24
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndHasNotRoot()>/$stack24
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack24
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogNamedDifferently()>/$stack24
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldHonorRequestHeaderAcceptCharset()>/$stack28
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void whenNoCharsetHeaderIsFoundThanAssumeItIsUTF8()>/$stack28
<java.util.logging.LogManager: void reset()>/$stack12
<java.util.logging.LogManager: void reset()>/l2#4#_1326
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: int readUnsignedByte()>/$stack3
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: int readUnsignedByte()>/$stack4
<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>/$stack15
<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>/ppClass#_181
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack22
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack23
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack8
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack16
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowMethodExceptionIfThereIsAnInvocationException()>/$stack10
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowMethodExceptionIfThereIsAnInvocationException()>/$stack13
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowMethodExceptionIfThereIsAnInvocationException()>/$stack14
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack22
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack23
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack25
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack26
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack18
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack21
<com.google.gson.internal.bind.JsonTreeReader: void beginArray()>/$stack3
<com.google.gson.internal.bind.JsonTreeReader: void beginArray()>/array#_59
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack18
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack21
<com.google.gson.internal.bind.JsonTreeReader: void beginObject()>/$stack3
<com.google.gson.internal.bind.JsonTreeReader: void beginObject()>/object#_71
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack17
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack18
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack21
<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>/o#_91
<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>/iterator#_94
<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>/isObject#3#_110
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack19
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack20
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>/$stack9
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>/$stack10
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>/$stack4
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>/i#_145
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>/$stack5
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()>/entry#_146
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextString()>/$stack4
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextString()>/$stack5
<com.google.gson.internal.bind.JsonTreeReader: boolean nextBoolean()>/$stack2
<com.google.gson.internal.bind.JsonTreeReader: boolean nextBoolean()>/$stack3
<com.google.gson.internal.bind.JsonTreeReader: double nextDouble()>/$stack6
<com.google.gson.internal.bind.JsonTreeReader: double nextDouble()>/$stack7
<com.google.gson.internal.bind.JsonTreeReader: long nextLong()>/$stack6
<com.google.gson.internal.bind.JsonTreeReader: long nextLong()>/$stack7
<com.google.gson.internal.bind.JsonTreeReader: int nextInt()>/$stack5
<com.google.gson.internal.bind.JsonTreeReader: int nextInt()>/$stack6
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/$stack11
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/$stack4
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/i#_221
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/$stack5
<com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()>/entry#_222
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUseGuiceAs1stAlternative()>/$stack10
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUseGuiceAs1stAlternative()>/$stack12
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUseGuiceAs1stAlternative()>/$stack17
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUseGuiceAs1stAlternative()>/$stack19
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUsePicoAs2ndAlternative()>/$stack10
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUsePicoAs2ndAlternative()>/$stack12
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUsePicoAs2ndAlternative()>/$stack17
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUsePicoAs2ndAlternative()>/$stack19
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUsePicoAs2ndAlternative()>/$stack24
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUsePicoAs2ndAlternative()>/$stack26
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldThrowIllegalArgumentExceptionWhenProvidersWasNotFound()>/$stack11
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldThrowIllegalArgumentExceptionWhenProvidersWasNotFound()>/$stack12
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack6
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack7
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.Class getBeanClass()>/$stack3
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack6
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldInvokeListenersOnStop()>/$stack7
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack8
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldRemoveListenersOnStop()>/$stack9
<br.com.caelum.vraptor.VRaptorTest: void shoudlComplainIfNotInAServletEnviroment()>/$stack3
<br.com.caelum.vraptor.VRaptorTest: void shoudlComplainIfNotInAServletEnviroment()>/$stack4
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack4
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack5
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack52
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack53
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack7
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack8
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack10
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack9
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack18
<br.com.caelum.vraptor.VRaptorTest: void shouldDeferToContainerIfStaticFile()>/$stack19
<br.com.caelum.vraptor.serialization.I18nMessageSerializationTest: void setup()>/$stack10
<br.com.caelum.vraptor.serialization.I18nMessageSerializationTest: void setup()>/$stack24
<br.com.caelum.vraptor.validator.MethodValidatorTest: void setup()>/$stack10
<br.com.caelum.vraptor.validator.MethodValidatorTest: void setup()>/$stack11
<br.com.caelum.vraptor.validator.MethodValidatorTest: void setup()>/$stack18
<br.com.caelum.vraptor.validator.MethodValidatorTest: void setup()>/$stack19
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithConstraint()>/$stack27
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithConstraint()>/$stack28
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldUseDefaultLocale()>/$stack22
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldUseDefaultLocale()>/$stack23
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldUseDefaultLocale()>/$stack28
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldUseDefaultLocale()>/$stack29
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetNotFoundStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetNotFoundStatus()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetHeader()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetHeader()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatus()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack8
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack11
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetOkStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetOkStatus()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetConflictStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetConflictStatus()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetAcceptedStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetAcceptedStatus()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack9
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMethodNotAllowedStatus()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack8
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack10
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack11
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack3
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack4
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack6
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldMoveToExactlyURIWhenItIsNotAbsolute()>/$stack7
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack24
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack25
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack27
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack28
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack6
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack19
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateAnIogiParameterForEachRequestParameterValue()>/$stack20
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack6
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack13
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void willCreateATargerForEachFormalParameterDeclaredByTheMethod()>/$stack14
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/$stack7
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack7
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack8
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack11
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void shouldUseHeadersToHttpResponse()>/$stack12
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForCollectionInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForCollectionInterface()>/$stack12
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForListInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateArrayListForListInterface()>/$stack12
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateLinkedListForQueueInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateLinkedListForQueueInterface()>/$stack12
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateHashSetListForSetInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateHashSetListForSetInterface()>/$stack12
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateTreeSetListForSortedSetInterface()>/$stack10
<br.com.caelum.vraptor.http.ognl.GenericNullHandlerTest: void shouldInstantiateTreeSetListForSortedSetInterface()>/$stack12
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack9
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack10
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack12
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack13
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldThrowExceptionWhenAnUnsupportedEncodingExceptionOccurs()>/$stack4
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldThrowExceptionWhenAnUnsupportedEncodingExceptionOccurs()>/$stack5
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void isCapableOfDealingWithEmptyParameterForInternalValueWhichNeedsAConverter()>/$stack4
<java.net.URLClassLoader: void close()>/$stack23
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void setUp()>/$stack1
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void setUp()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldNotThrowExceptionsOnHeaders()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSendError()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSendErrorWithMessage()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSetStatus()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldBeAbleToChainMethodsOnHttpResult()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnMoved()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnMovedToLogic()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onRefererResultShouldThrowExceptionsOnForward()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onRefererResultShouldThrowExceptionsOnRedirect()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnNotFound()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnHeader()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnCreated()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnCreatedWithLocation()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnOk()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnConflict()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMethodNotAllowed()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMovedPermanentlyTo()>/$stack2
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMovedPermanentlyToLogic()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onXMLSerializationResultShouldThrowExceptionOnlyOnSerializeMethod()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onSerializerResultsShouldBeAbleToCreateValidationInstancesEvenIfChildClassesUsesCovariantType()>/$stack3
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void setup()>/$stack2
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void setup()>/$stack3
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack5
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void shouldRunHibernateLazyInitialization()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void twoClassesWithSameNameButDifferentPackages()>/$stack6
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void twoClassesWithSameNameButDifferentPackages()>/$stack4
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$5: java.lang.Object run()>/$stack1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$5: java.lang.Object run()>/$stack2
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack17
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack19
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack8
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldNotInstantiateIfThereIsAlreadyAResource()>/$stack10
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void setUp()>/$stack3
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void setUp()>/$stack4
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithoutAlias()>/$stack5
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithoutAlias()>/$stack6
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithAlias()>/$stack5
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldForwardToDefaultViewWithAlias()>/$stack6
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithoutAlias()>/$stack10
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithoutAlias()>/$stack11
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithAlias()>/$stack6
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithAlias()>/$stack7
<org.springframework.beans.factory.support.DisposableBeanAdapter$1: java.lang.Object run()>/$stack2
<org.springframework.beans.factory.support.DisposableBeanAdapter$1: java.lang.Object run()>/$stack3
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldInstantiateAListOfStrings()>/$stack6
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldInstantiateAListOfStrings()>/$stack7
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void shouldNotInstantiateIfLastTerm()>/$stack5
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack5
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void couldntFindDefersRequestToContainer()>/$stack8
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack4
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack7
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfServletExceptionOccurs()>/$stack4
<br.com.caelum.vraptor.resource.ResourceNotFoundHandlerTest: void shouldThrowInterceptionExceptionIfServletExceptionOccurs()>/$stack7
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack2
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack10
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack14
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack12
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack13
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack15
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack15
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack17
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack3
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack16
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack17
<br.com.caelum.vraptor.http.EncodingHandlerFactoryTest: void setUp()>/$stack1
<br.com.caelum.vraptor.http.EncodingHandlerFactoryTest: void setUp()>/$stack2
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void preInstantiateSingletons()>/$stack13
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void preInstantiateSingletons()>/$stack24
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void preInstantiateSingletons()>/$stack28
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandlerTest: void shouldRegisterInterceptorsOnRegistry()>/$stack4
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandlerTest: void shouldRegisterInterceptorsOnRegistry()>/$stack6
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatus()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatusWhenMovingToLogic()>/$stack10
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatusWhenMovingToLogic()>/$stack11
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendError()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendError()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack5
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack6
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack12
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowsResultExceptionIfAnIOExceptionWhenSendError()>/$stack13
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendErrorWithMessage()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSendErrorWithMessage()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack5
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack6
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack13
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenSendErrorWithMessage()>/$stack14
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSetStatusCode()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldSetStatusCode()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/$stack9
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/$stack10
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteStringBody()>/$stack5
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteStringBody()>/$stack6
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteInputStreamBody()>/$stack6
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteInputStreamBody()>/$stack7
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteReaderBody()>/$stack6
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldThrowResultExceptionIfAnIOExceptionWhenWriteReaderBody()>/$stack7
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnForwardToURI()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnRedirectToURI()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOf()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogic()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogic()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnRedirectToLogicWithInstance()>/$stack7
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToLogicResultOnForwardToLogicWithInstance()>/$stack7
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToPageResultOnPageOfWithInstance()>/$stack7
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnNotFound()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToUri()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerClass()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/$stack2
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldDelegateToStatusOnPermanentlyRedirectToControllerInstance()>/$stack7
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldIncludeExtractedNameWhenSimplyIncluding()>/$stack10
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldIncludeExtractedNameWhenSimplyIncluding()>/$stack11
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldNotIncludeTheAttributeWhenTheValueIsNull()>/$stack5
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldNotIncludeTheAttributeWhenTheValueIsNull()>/$stack6
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void setUp()>/$stack1
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void setUp()>/$stack2
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void shouldRegisterTypesOnDeserializers()>/$stack3
<br.com.caelum.vraptor.deserialization.DeserializesHandlerTest: void shouldRegisterTypesOnDeserializers()>/$stack4
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack32
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack33
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack36
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack37
<br.com.caelum.vraptor.util.test.MockValidatorTest: void containsMessageShouldReturnTrueWhenExpectedMessageExists()>/$stack2
<br.com.caelum.vraptor.util.test.MockValidatorTest: void containsMessageShouldReturnTrueWhenExpectedMessageExists()>/message#_35
<br.com.caelum.vraptor.util.test.MockValidatorTest: void containsMessageShouldReturnTrueWhenExpectedMessageWithParamsExists()>/$stack2
<br.com.caelum.vraptor.util.test.MockValidatorTest: void containsMessageShouldReturnTrueWhenExpectedMessageWithParamsExists()>/message#_45
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/$stack3
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/$stack4
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/$stack10
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeOneLinkIfThereIsATransition()>/$stack4
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeOneLinkIfThereIsATransition()>/kill#_81
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack5
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeAllLinksIfThereAreTransitions()>/kill#_93
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack12
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeAllLinksIfThereAreTransitions()>/ressurect#_97
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withRootException()>/$stack8
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withRootException()>/$stack9
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withNestedException()>/$stack9
<br.com.caelum.vraptor.core.ExceptionRecorderTest: void withNestedException()>/$stack10
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack26
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializerTest: void shouldSerializeI18nMessage()>/$stack8
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializerTest: void shouldSerializeI18nMessage()>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void outjectsTheRequestParameters()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void outjectsTheRequestParameters()>/$stack9
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void addsTheErrorsOnTheResult()>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void addsTheErrorsOnTheResult()>/$stack9
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack14
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack15
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldNotRedirectIfHasNotErrors()>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldNotRedirectIfHasNotErrors()>/$stack11
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack19
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack20
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack24
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack26
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void init()>/$stack8
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void init()>/$stack2
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void init()>/$stack3
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shoudThrowProxyInvocationExceptionIfAndExceptionOccursWhenUsingResultOf()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shoudThrowProxyInvocationExceptionIfAndExceptionOccursWhenUsingResultOf()>/$stack5
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void setup()>/$stack1
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void setup()>/$stack2
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void doesNothingIfResultWasAlreadyUsed()>/$stack10
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void doesNothingIfResultWasAlreadyUsed()>/$stack11
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack14
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack15
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack3
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack4
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack6
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentAndImplementedInterfaces()>/$stack7
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack3
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack4
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack6
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack7
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack9
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack10
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack12
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack13
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack15
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack16
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack18
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack19
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack21
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack22
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack24
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack25
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack27
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack28
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack30
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: void shouldRegisterComponentUsingAllPossibleSupertypes()>/$stack31
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack29
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack31
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack6
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack29
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack31
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack6
<br.com.caelum.vraptor.scan.WebBasedClasspathResolverTest: void callerContextDifferentFromRequestedClassLoaderReturnsCurrentClassLoader()>/$stack3
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack11
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack14
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack20
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack22
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack11
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack14
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack18
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack19
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack13
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack14
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void setup()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void setup()>/$stack2
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void setup()>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void setup()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void setup()>/$stack5
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack2
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack6
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack8
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void setup()>/$stack9
<br.com.caelum.vraptor.http.route.DefaultRouterTest: void throwsExceptionIfMoreThanOneUriMatchesWithSamePriority()>/$stack5
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithoutRoot()>/$stack24
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAttribute()>/$stack32
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsISO8601Attribute()>/$stack34
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsObjectAttribute()>/$stack25
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeOneParam()>/$stack25
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeTwoParams()>/$stack27
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeTwoParams()>/$stack26
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeWithoutGenericType()>/$stack26
<br.com.caelum.vraptor.serialization.PackageComparatorTest: void shouldSortBasedOnPackageNamesLessPriorityToCaelumInitialList3rdPartyFirst()>/$stack15
<br.com.caelum.vraptor.serialization.PackageComparatorTest: void shouldSortBasedOnPackageNamesLessPriorityToCaelumInitialList3rdPartyFirst()>/$stack16
<br.com.caelum.vraptor.serialization.PackageComparatorTest: void shouldSortBasedOnPackageNamesLessPriorityToCaelumInitialList3rdPartyLast()>/$stack15
<br.com.caelum.vraptor.serialization.PackageComparatorTest: void shouldSortBasedOnPackageNamesLessPriorityToCaelumInitialList3rdPartyLast()>/$stack16
<br.com.caelum.vraptor.serialization.PackageComparatorTest: void shouldSortBasedOnPackageNamesLessPriorityToCaelumMoreToRestfulieInitialList3rdPartyLast()>/$stack15
<br.com.caelum.vraptor.serialization.PackageComparatorTest: void shouldSortBasedOnPackageNamesLessPriorityToCaelumMoreToRestfulieInitialList3rdPartyLast()>/$stack16
<br.com.caelum.vraptor.serialization.PackageComparatorTest: void shouldSortBasedOnPackageNamesLessPriorityToCaelumMoreToRestfulieInitialList3rdPartyLast()>/$stack21
<br.com.caelum.vraptor.serialization.PackageComparatorTest: void shouldSortBasedOnPackageNamesLessPriorityToCaelumMoreToRestfulieInitialList3rdPartyLast()>/$stack22
<br.com.caelum.vraptor.validator.ValidationsTest: void shouldUseTheConstructorResourceBundle()>/$stack7
<br.com.caelum.vraptor.validator.ValidationsTest: void shouldUseTheConstructorResourceBundle()>/$stack8
<br.com.caelum.vraptor.validator.ValidationsTest: void shouldUseTheConstructorResourceBundleFirst()>/$stack9
<br.com.caelum.vraptor.validator.ValidationsTest: void shouldUseTheConstructorResourceBundleFirst()>/$stack10
<br.com.caelum.vraptor.validator.ValidationsTest: void shouldFallbackToGivenResourceBundle()>/$stack9
<br.com.caelum.vraptor.validator.ValidationsTest: void shouldFallbackToGivenResourceBundle()>/$stack10
<br.com.caelum.vraptor.validator.ValidationsTest: void shouldFallbackToDefaultMessage()>/$stack9
<br.com.caelum.vraptor.validator.ValidationsTest: void shouldFallbackToDefaultMessage()>/$stack10
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeParametersUsingConstructorBundle()>/$stack7
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeParametersUsingConstructorBundle()>/$stack8
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeParametersUsingGivenBundle()>/$stack7
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeParametersUsingGivenBundle()>/$stack8
<br.com.caelum.vraptor.validator.ValidationsTest: void formatsParameterizedValidationMessagesWhenUsingMatchers()>/$stack14
<br.com.caelum.vraptor.validator.ValidationsTest: void formatsParameterizedValidationMessagesWhenUsingMatchers()>/$stack15
<br.com.caelum.vraptor.validator.ValidationsTest: void formatsParameterizedValidationMessagesWithSeveralParametersI18ningStringParameters()>/$stack23
<br.com.caelum.vraptor.validator.ValidationsTest: void formatsParameterizedValidationMessagesWithSeveralParametersI18ningStringParameters()>/$stack24
<br.com.caelum.vraptor.validator.ValidationsTest: void formatsParameterizedValidationMessagesWithI18nedStringParameters()>/$stack22
<br.com.caelum.vraptor.validator.ValidationsTest: void formatsParameterizedValidationMessagesWithI18nedStringParameters()>/$stack23
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeTheCategoryParameterUsingGivenBundle()>/$stack6
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeTheCategoryParameterUsingGivenBundle()>/$stack7
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeTheCategoryParameterUsingMatchersWithReasonGivenBundle()>/$stack6
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeTheCategoryParameterUsingMatchersWithReasonGivenBundle()>/$stack7
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeTheCategoryParameterUsingMatchersWithoutReasonGivenBundle()>/$stack6
<br.com.caelum.vraptor.validator.ValidationsTest: void should18nalizeTheCategoryParameterUsingMatchersWithoutReasonGivenBundle()>/$stack7
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void setup()>/$stack4
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldConfigureAllClasses()>/$stack10
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldConfigureAllClasses()>/$stack11
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldNotDoAnythingIfHasNoClasses()>/$stack7
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrapTest: void shouldNotDoAnythingIfHasNoClasses()>/$stack8
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void setup()>/$stack4
<br.com.caelum.vraptor.core.DefaultConvertersTest: void shouldRegisterConvertersForAllDefaultTypes()>/$stack23
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack8
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack5
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack6
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack3
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack4
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack10
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack11
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/$stack4
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/$stack10
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack5
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSetupRelations()>/$stack7
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeOneLinkIfThereIsATransition()>/$stack3
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeOneLinkIfThereIsATransition()>/kill#_82
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack4
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeAllLinksIfThereAreTransitions()>/kill#_93
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack11
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeAllLinksIfThereAreTransitions()>/ressurect#_97
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack46
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack44
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack45
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack42
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack5
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldScanAndRegisterAnnotatedBeans()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldSupportOtherStereotypeAnnotations()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldSupportConstructorInjection()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldProvideCurrentHttpRequest()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldProvideCurrentVRaptorRequest()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldProvideServletContext()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldProvideTheContainer()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shouldSupportManualRegistration()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shoudSupportCustomImplementationsForAlreadyRegisteredComponents()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shoudRegisterResourcesInRouter()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shoudRegisterResourcesInRouter()>/router#_217
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shoudRegisterConvertersInConverters()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shoudRegisterConvertersInConverters()>/converters#_225
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shoudRegisterInterceptorsInInterceptorRegistry()>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void shoudRegisterInterceptorsInInterceptorRegistry()>/registry#_232
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void setup()>/$stack4
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsSimpleDoNothing()>/$stack2
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsCacheableAddMaxAge()>/$stack5
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenResourceIsCacheableAddMaxAge()>/$stack6
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack15
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack16
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack18
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack19
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack5
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack6
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack8
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenRestfulEntityIsHandledShouldUseItsValues()>/$stack9
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void setup()>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack5
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack9
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack10
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack14
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldHeadersProperly()>/$stack15
<com.google.common.collect.GenericMapMaker: com.google.common.collect.MapMaker$RemovalListener getRemovalListener()>/$stack3
<com.google.common.collect.GenericMapMaker: com.google.common.collect.MapMaker$RemovalListener getRemovalListener()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldSetRequestAttribute()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldSetRequestAttribute()>/$stack5
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void setup()>/$stack3
<ognl.ObjectArrayPool$SizePool: java.lang.Object[] create()>/$stack9
<ognl.ObjectArrayPool$SizePool: java.lang.Object[] create()>/$stack10
<ognl.ObjectArrayPool$SizePool: java.lang.Object[] create()>/result#_73
<br.com.caelum.iogi.reflection.ClassConstructor: java.util.List argumentTargets()>/$stack18
<br.com.caelum.iogi.reflection.ClassConstructor: java.util.List argumentTargets()>/$stack14
<br.com.caelum.iogi.reflection.ClassConstructor: java.util.List argumentTargets()>/parameter#_72
<br.com.caelum.iogi.reflection.ClassConstructor: java.util.List argumentTargets()>/$stack16
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>/$stack20
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>/collection#_74
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getResourceBundleBased()>/$stack6
<org.junit.internal.ArrayComparisonFailure: java.lang.String getMessage()>/$stack15
<org.junit.internal.ArrayComparisonFailure: java.lang.String getMessage()>/$stack16
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack18
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack19
<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/$stack15
<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/l5#_467
<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/$stack11
<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/l3#_463
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/$stack20
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/$stack10
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/$stack21
<org.springframework.beans.factory.support.DisposableBeanAdapter: void destroy()>/$stack30
<org.springframework.beans.factory.support.DisposableBeanAdapter: void destroy()>/processor#_165
<org.springframework.beans.factory.support.DisposableBeanAdapter: void destroy()>/$stack12
<org.springframework.beans.factory.support.DisposableBeanAdapter: void destroy()>/$stack13
<org.springframework.beans.factory.support.DefaultListableBeanFactory$2: java.lang.Boolean run()>/$stack1
<org.springframework.beans.factory.support.DefaultListableBeanFactory$2: java.lang.Boolean run()>/$stack2
<java.security.PermissionsEnumerator: java.security.Permission nextElement()>/$stack4
<java.security.PermissionsEnumerator: java.security.Permission nextElement()>/$stack5
<org.springframework.expression.spel.ast.InlineList: java.util.List getConstantValue()>/$stack2
<org.springframework.expression.spel.ast.InlineList: java.util.List getConstantValue()>/$stack3
<org.springframework.beans.factory.config.ConstructorArgumentValues: int hashCode()>/$stack7
<org.springframework.beans.PropertyValue: org.springframework.beans.PropertyValue getOriginalPropertyValue()>/$stack5
<org.springframework.beans.PropertyValue: org.springframework.beans.PropertyValue getOriginalPropertyValue()>/original_$$A_2#_138
<org.picocontainer.DefaultPicoContainer: void startAdapters()>/$stack12
<org.picocontainer.DefaultPicoContainer: void startAdapters()>/$stack14
<org.picocontainer.DefaultPicoContainer: void stopAdapters()>/$stack7
<org.picocontainer.DefaultPicoContainer: void stopAdapters()>/adapter#_1033
<org.picocontainer.DefaultPicoContainer: void stopAdapters()>/componentLifecycle#_1035
<org.picocontainer.DefaultPicoContainer: void disposeAdapters()>/$stack7
<org.picocontainer.DefaultPicoContainer: void disposeAdapters()>/adapter#_1049
<org.picocontainer.DefaultPicoContainer: void disposeAdapters()>/componentLifecycle#_1051
<org.picocontainer.DefaultPicoContainer: org.picocontainer.Converters getConverters()>/$stack8
<org.picocontainer.DefaultPicoContainer: org.picocontainer.Converters getConverters()>/$stack9
<org.picocontainer.DefaultPicoContainer: org.picocontainer.Converters getConverters()>/$stack11
<org.picocontainer.DefaultPicoContainer: org.picocontainer.Converters getConverters()>/$stack12
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void endNode()>/$stack8
<sun.util.locale.provider.LocaleResources: java.lang.String[][] getZoneStrings()>/$stack27
<sun.util.locale.provider.LocaleResources: java.lang.String[][] getZoneStrings()>/$stack34
<java.util.Locale: java.lang.String toLanguageTag()>/$stack44
<java.util.Locale: java.lang.String toLanguageTag()>/$stack49
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_31#_808
<java.beans.Introspector: void processPropertyDescriptors()>/$stack27
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_34#_825
<java.beans.Introspector: void processPropertyDescriptors()>/$stack84
<java.beans.Introspector: void processPropertyDescriptors()>/$stack100
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerPrototypeScopedComponentsOn()>/$stack7
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerCachedComponentsOn()>/$stack7
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>/$stack3
<com.google.common.collect.Iterators$5: boolean hasNext()>/$stack3
<com.google.common.collect.Iterators$5: boolean hasNext()>/$stack4
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Class getRequiredType()>/$stack2
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Class getRequiredType()>/$stack3
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveCollectionElementType()>/$stack9
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapKeyType()>/$stack11
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapKeyType()>/$stack12
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapValueType()>/$stack11
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapValueType()>/$stack12
<com.thoughtworks.xstream.core.util.PresortedMap: java.util.Set keySet()>/$stack8
<com.thoughtworks.xstream.core.util.PresortedMap: java.util.Set keySet()>/entry#_60
<sun.reflect.Label: void bind()>/$stack8
<sun.reflect.Label: void bind()>/l2#_69
<br.com.caelum.vraptor.ioc.spring.ComponentFactoryBean: java.lang.Object getObject()>/$stack3
<br.com.caelum.vraptor.ioc.spring.ComponentFactoryBean: java.lang.Object getObject()>/$stack4
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>/l2_$$A_1#_107
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>/l3_$$A_1#_111
<org.springframework.context.event.GenericApplicationListenerAdapter: int getOrder()>/$stack3
<org.springframework.context.event.GenericApplicationListenerAdapter: int getOrder()>/$stack4
<java.security.SecureRandom: java.lang.String getPrngAlgorithm()>/$stack13
<java.security.SecureRandom: java.lang.String getPrngAlgorithm()>/l3#_559
<org.apache.log4j.helpers.AppenderAttachableImpl: void removeAllAppenders()>/$stack9
<org.apache.log4j.helpers.AppenderAttachableImpl: void removeAllAppenders()>/a#_140
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup: void start()>/$stack12
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup: void stop()>/$stack19
<java.beans.MethodDescriptor: java.lang.Class[] getParams()>/$stack10
<java.beans.MethodDescriptor: java.lang.Class[] getParams()>/l3#_141
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerCacheComponents()>/$stack13
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerCacheComponents()>/$stack15
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.Converters getConverters()>/$stack4
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.Converters getConverters()>/$stack5
<ognl.ASTConst: java.lang.String toString()>/$stack37
<ognl.ASTConst: java.lang.String toString()>/$stack38
<org.picocontainer.PicoBuilder: org.picocontainer.MutablePicoContainer build()>/$stack52
<org.picocontainer.PicoBuilder: org.picocontainer.MutablePicoContainer build()>/componentFactory#_174
<org.picocontainer.PicoBuilder: org.picocontainer.MutablePicoContainer build()>/$stack32
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack6
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack7
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack12
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack13
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack17
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack18
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()>/$stack12
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()>/$stack4
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getNodeName()>/$stack2
<javassist.bytecode.ClassFile: void compact()>/$stack11
<javassist.bytecode.ClassFile: void compact()>/minfo#8#_178
<javassist.bytecode.ClassFile: void compact()>/$stack14
<javassist.bytecode.ClassFile: void compact()>/minfo#_171
<javassist.bytecode.ClassFile: void prune()>/$stack17
<javassist.bytecode.ClassFile: void prune()>/minfo#18#_243
<javassist.bytecode.ClassFile: void prune()>/$stack20
<javassist.bytecode.ClassFile: void prune()>/minfo#_236
<javassist.bytecode.ClassFile: int getInnerAccessFlags()>/$stack5
<javassist.bytecode.ClassFile: int getInnerAccessFlags()>/ica#_309
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getKeyEquivalence()>/$stack4
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getKeyEquivalence()>/$stack5
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getValueEquivalence()>/$stack4
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getValueEquivalence()>/$stack5
<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength()>/$stack3
<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength()>/$stack4
<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getValueStrength()>/$stack3
<com.google.common.collect.MapMaker: com.google.common.collect.MapMakerInternalMap$Strength getValueStrength()>/$stack4
<com.google.common.collect.MapMaker: com.google.common.base.Ticker getTicker()>/$stack3
<com.google.common.collect.MapMaker: com.google.common.base.Ticker getTicker()>/$stack4
<org.apache.log4j.Category: void closeNestedAppenders()>/$stack5
<org.apache.log4j.Category: void closeNestedAppenders()>/a#_229
<org.apache.log4j.Category: void removeAllAppenders()>/$stack10
<ognl.OgnlParser: ognl.ParseException generateParseException()>/$stack14
<ognl.OgnlParser: ognl.ParseException generateParseException()>/$stack15
<ognl.OgnlParser: ognl.ParseException generateParseException()>/$stack16
<java.lang.invoke.LambdaForm: void computeInitialPreparedForms()>/$stack9
<java.lang.invoke.LambdaForm: void computeInitialPreparedForms()>/l1#_666
<org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>/$stack11
<com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>/$stack13
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray()>/$stack7
<org.picocontainer.injectors.AnnotatedFieldInjector$2: java.lang.String getName()>/$stack1
<org.picocontainer.injectors.AnnotatedFieldInjector$2: java.lang.String getName()>/$stack2
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>/$stack6
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()>/$stack7
<javassist.bytecode.FieldInfo: int getConstantValue()>/$stack4
<javassist.bytecode.FieldInfo: int getConstantValue()>/attr#_195
<java.security.PermissionCollection: java.lang.String toString()>/$stack16
<java.security.PermissionCollection: java.lang.String toString()>/$stack17
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack30
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/hms#_758
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack16
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack17
<org.springframework.context.support.AbstractApplicationContext: void initApplicationEventMulticaster()>/$stack14
<org.springframework.context.support.AbstractApplicationContext: void initApplicationEventMulticaster()>/$stack15
<org.springframework.context.support.AbstractApplicationContext: void initLifecycleProcessor()>/$stack15
<org.springframework.context.support.AbstractApplicationContext: void initLifecycleProcessor()>/$stack16
<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.reflect.Method getResolvedFactoryMethod()>/candidate#_271
<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.reflect.Method getResolvedFactoryMethod()>/$stack6
<br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder: com.google.gson.Gson create()>/$stack15
<br.com.caelum.iogi.reflection.NewObject: void populateProperties()>/$stack7
<br.com.caelum.iogi.parameters.Parameter: java.lang.String getFirstNameComponentWithDecoration()>/$stack2
<br.com.caelum.iogi.parameters.Parameter: java.lang.String getFirstNameComponentWithDecoration()>/$stack3
<java.util.ServiceLoader$LazyIterator: boolean hasNextService()>/$stack17
<java.util.ServiceLoader$LazyIterator: boolean hasNextService()>/$stack18
<org.picocontainer.adapters.AbstractAdapter: void checkTypeCompatibility()>/$stack4
<br.com.caelum.iogi.reflection.Constructors$FilledConstructors: br.com.caelum.iogi.reflection.Constructors$FilledConstructor largest()>/$stack6
<ognl.ASTChain: java.lang.String toString()>/$stack29
<ognl.ASTChain: java.lang.String toString()>/$stack30
<ognl.ASTMap: java.lang.String toString()>/$stack15
<ognl.ASTMap: java.lang.String toString()>/kv#_113
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback popCallback()>/$stack2
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback popCallback()>/$stack3
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback peekCallback()>/$stack2
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback peekCallback()>/$stack3
<java.util.logging.LogManager: void setLevelsOnExistingLoggers()>/$stack21
<java.util.logging.LogManager: void setLevelsOnExistingLoggers()>/l7#_1690
<java.lang.invoke.LambdaFormBuffer: void clearDuplicatesAndNulls()>/$stack35
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPrimaryExpression()>/$stack15
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPrimaryExpression()>/$stack16
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPrimaryExpression()>/$stack23
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPrimaryExpression()>/$stack24
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPossiblyQualifiedId()>/$stack25
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPossiblyQualifiedId()>/$stack26
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl pop()>/$stack2
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl pop()>/$stack3
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.Token nextToken()>/$stack6
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.Token nextToken()>/$stack7
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.Token peekToken()>/$stack5
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.Token peekToken()>/$stack6
<javax.validation.Validation$GenericBootstrapImpl: javax.validation.Configuration configure()>/$stack9
<javax.validation.Validation$GenericBootstrapImpl: javax.validation.Configuration configure()>/$stack10
<ognl.ASTProperty: java.lang.String toString()>/$stack4
<ognl.ASTProperty: java.lang.String toString()>/$stack5
<java.util.logging.Logger: void updateEffectiveLevel()>/$stack14
<java.util.logging.Logger: void updateEffectiveLevel()>/l3#_2133
<org.slf4j.LoggerFactory: void emitSubstituteLoggerWarning()>/$stack7
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getBeanClassName()>/beanClassObject#_386
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getBeanClassName()>/$stack3
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getBeanClassName()>/$stack4
<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.factory.config.BeanDefinition getOriginatingBeanDefinition()>/$stack3
<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.factory.config.BeanDefinition getOriginatingBeanDefinition()>/$stack4
<sun.security.provider.PolicyFile$PolicyEntry: java.lang.String toString()>/$stack18
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/$stack21
<java.util.Hashtable: java.lang.String toString()>/$stack13
<java.util.Hashtable: java.lang.String toString()>/l5#_583
<org.springframework.context.support.DefaultLifecycleProcessor: void stopBeans()>/$stack35
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/$stack26
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: com.google.gson.Gson getGson()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.String getRequestCharset()>/$stack4
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.String getRequestCharset()>/charset#_197
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement peek()>/$stack5
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement peek()>/$stack6
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpServletRequest _getHttpServletRequest()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpServletRequest _getHttpServletRequest()>/$stack2
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void endNode()>/$stack8
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void endNode()>/$stack9
<br.com.caelum.vraptor.validator.Validations: java.util.List getErrors()>/$stack7
<br.com.caelum.vraptor.validator.Validations: java.util.List getErrors()>/message#_99
<br.com.caelum.vraptor.validator.Validations: java.util.List getErrors()>/$stack11
<com.google.common.collect.Sets$FilteredSortedSet: java.util.Comparator comparator()>/$stack1
<com.google.common.collect.Sets$FilteredSortedSet: java.util.Comparator comparator()>/$stack2
<com.google.common.collect.Sets$FilteredSortedSet: java.lang.Object last()>/$stack3
<com.google.common.collect.Sets$FilteredSortedSet: java.lang.Object last()>/sortedUnfiltered#_872
<java.lang.invoke.LambdaForm$NamedFunction: void initializeInvokers()>/$stack11
<org.scannotation.archiveiterator.FileIterator: java.io.InputStream next()>/$stack9
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean isFinished()>/$stack8
<org.mockito.internal.progress.ArgumentMatcherStorageImpl: void validateState()>/$stack5
<org.mockito.internal.progress.ArgumentMatcherStorageImpl: void validateState()>/lastMatcher#_101
<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback popCallback()>/$stack2
<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback popCallback()>/$stack3
<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback peekCallback()>/$stack2
<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback peekCallback()>/$stack3
<sun.misc.URLClassPath: java.util.List closeLoaders()>/$stack10
<sun.misc.URLClassPath: java.util.List closeLoaders()>/l3#_157
<ognl.OgnlContext: java.lang.Class getCurrentType()>/$stack7
<ognl.OgnlContext: java.lang.Class getCurrentType()>/$stack8
<ognl.OgnlContext: java.lang.Class getPreviousType()>/$stack9
<ognl.OgnlContext: java.lang.Class getPreviousType()>/$stack10
<ognl.OgnlContext: java.lang.Class getFirstType()>/$stack4
<ognl.OgnlContext: java.lang.Class getFirstType()>/$stack5
<java.util.Currency$1: java.lang.Void run()>/$stack50
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.ListMultimap delegate()>/$stack1
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.ListMultimap delegate()>/$stack2
<com.google.gson.JsonArray: java.lang.String getAsString()>/$stack5
<com.google.gson.JsonArray: java.lang.String getAsString()>/$stack6
<com.google.gson.JsonArray: long getAsLong()>/$stack5
<com.google.gson.JsonArray: long getAsLong()>/$stack6
<javax.servlet.http.HttpServletResponseWrapper: javax.servlet.http.HttpServletResponse _getHttpServletResponse()>/$stack1
<javax.servlet.http.HttpServletResponseWrapper: javax.servlet.http.HttpServletResponse _getHttpServletResponse()>/$stack2
<com.google.gson.JsonPrimitive: java.lang.Boolean getAsBooleanWrapper()>/$stack1
<com.google.gson.JsonPrimitive: java.lang.Boolean getAsBooleanWrapper()>/$stack2
<java.beans.FeatureDescriptor: java.lang.String toString()>/$stack33
<java.beans.FeatureDescriptor: java.lang.String toString()>/$stack32
<java.beans.FeatureDescriptor: java.lang.String toString()>/l3#_415
<com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()>/$stack6
<com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()>/$stack3
<com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()>/$stack4_$$A_1
<com.google.gson.JsonPrimitive: java.lang.String getAsString()>/$stack3
<com.google.gson.JsonPrimitive: java.lang.String getAsString()>/$stack4
<com.google.gson.JsonPrimitive: java.math.BigDecimal getAsBigDecimal()>/$stack6
<com.google.gson.JsonPrimitive: java.math.BigDecimal getAsBigDecimal()>/$stack3
<com.google.gson.JsonPrimitive: java.math.BigInteger getAsBigInteger()>/$stack6
<com.google.gson.JsonPrimitive: java.math.BigInteger getAsBigInteger()>/$stack3
<javassist.bytecode.MethodInfo: javassist.bytecode.ExceptionsAttribute getExceptionsAttribute()>/info#_323
<javassist.bytecode.MethodInfo: javassist.bytecode.ExceptionsAttribute getExceptionsAttribute()>/$stack4
<javassist.bytecode.MethodInfo: javassist.bytecode.CodeAttribute getCodeAttribute()>/info#_334
<javassist.bytecode.MethodInfo: javassist.bytecode.CodeAttribute getCodeAttribute()>/$stack4
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack26
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack31
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack41
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/l9#10#_422
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>/$stack47
<org.apache.log4j.Hierarchy: void resetConfiguration()>/$stack14
<org.apache.log4j.Hierarchy: void resetConfiguration()>/c#_395
<org.apache.log4j.Hierarchy: void shutdown()>/$stack13
<org.apache.log4j.Hierarchy: void shutdown()>/c_$$A_3#_474
<org.apache.log4j.Hierarchy: void shutdown()>/$stack15
<org.apache.log4j.Hierarchy: void shutdown()>/c_$$A_1#_466
<br.com.caelum.vraptor.serialization.xstream.Serializee: void excludeAll()>/$stack21
<br.com.caelum.vraptor.serialization.xstream.Serializee: void excludeAll()>/field#_83
<ognl.JJTOgnlParserState: ognl.Node rootNode()>/$stack2
<ognl.JJTOgnlParserState: ognl.Node rootNode()>/$stack3
<ognl.JJTOgnlParserState: ognl.Node popNode()>/$stack14
<ognl.JJTOgnlParserState: ognl.Node popNode()>/$stack15
<ognl.JJTOgnlParserState: ognl.Node popNode()>/$stack8
<ognl.JJTOgnlParserState: ognl.Node popNode()>/$stack9
<javax.crypto.PermissionsEnumerator: java.security.Permission nextElement()>/$stack4
<javax.crypto.PermissionsEnumerator: java.security.Permission nextElement()>/$stack5
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withAnyArgs()>/$stack15
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withAnyArgs()>/$stack33
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withAnyArgs()>/$stack34
<java.security.Signature$Delegate: void chooseFirstProvider()>/$stack13
<java.security.Signature$Delegate: void chooseFirstProvider()>/l3_$$A_2#_1061
<java.util.AbstractMap: int hashCode()>/$stack6
<java.util.AbstractMap: int hashCode()>/$stack7
<java.util.AbstractMap: java.lang.String toString()>/$stack11
<java.util.AbstractMap: java.lang.String toString()>/l3#_554
<com.google.common.collect.Collections2$FilteredCollection: void <init>(java.util.Collection,com.google.common.base.Predicate)>/@parameter0
<com.google.common.collect.Collections2$FilteredCollection: void <init>(java.util.Collection,com.google.common.base.Predicate)>/unfiltered#_0
<com.google.common.collect.Collections2$FilteredCollection: void <init>(java.util.Collection,com.google.common.base.Predicate)>/@parameter1
<com.google.common.collect.Collections2$FilteredCollection: void <init>(java.util.Collection,com.google.common.base.Predicate)>/predicate#_0
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: void postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)>/@parameter2
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/bean#_0
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/beanName#_0
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$ApplicationListenerDetector: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.view.DefaultPathResolver: void <init>(br.com.caelum.vraptor.http.FormatResolver)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPathResolver: void <init>(br.com.caelum.vraptor.http.FormatResolver)>/resolver#_0
<br.com.caelum.vraptor.view.DefaultPathResolver: java.lang.String pathFor(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPathResolver: java.lang.String pathFor(br.com.caelum.vraptor.resource.ResourceMethod)>/method#_0
<com.thoughtworks.xstream.converters.collections.ArrayConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.ArrayConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.collections.ArrayConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.web.util.WebUtils: java.lang.String getRealPath(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<ognl.ASTGreaterEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.conversion.BigIntegerConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BigIntegerConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.BigIntegerConverter: java.math.BigInteger convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BigIntegerConverter: java.math.BigInteger convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.BigIntegerConverter: java.math.BigInteger convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.BigIntegerConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BigIntegerConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<ognl.ObjectArrayPool$SizePool: void recycle(java.lang.Object[])>/@parameter0
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: void <init>(com.google.common.collect.AbstractMapBasedMultiset,java.util.Map)>/@parameter1
<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: void <init>(com.google.common.collect.AbstractMapBasedMultiset,java.util.Map)>/map#_0
<com.google.common.collect.Count: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/@parameter0
<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.Expression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/@parameter0
<org.mockito.cglib.core.EmitUtils$16: void processCase(java.lang.Object,org.mockito.asm.Label)>/@parameter0
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: boolean isEqual(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: boolean isEqual(java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.EmptyObjectsProvider: boolean canProvide(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.EmptyObjectsProvider: boolean selfCanProvide(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.EmptyObjectsProvider: boolean selfCanProvide(br.com.caelum.iogi.reflection.Target)>/target#_0
<ognl.OgnlOps: boolean booleanValue(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object emptyArrayFor(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object emptyArrayFor(br.com.caelum.iogi.reflection.Target)>/target#_0
<ognl.OgnlOps: long longValue(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Collection scan(br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter0
<ognl.OgnlOps: double doubleValue(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter1
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/restfulie#_0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter2
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/config#_0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: java.util.Map scanBasePackages(java.util.List,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter1
<ognl.OgnlOps: java.math.BigInteger bigIntValue(java.lang.Object)>/@parameter0
<org.mockito.asm.MethodAdapter: void visitLdcInsn(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void scanPackage(java.lang.String,org.scannotation.AnnotationDB,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter0
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void scanPackage(java.lang.String,org.scannotation.AnnotationDB,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter2
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void scanPackage(java.lang.String,org.scannotation.AnnotationDB,br.com.caelum.vraptor.scan.ClasspathResolver)>/resolver#_0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: boolean canConvert(java.lang.Class)>/@parameter0
<ognl.OgnlOps: java.math.BigDecimal bigDecValue(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void add(java.util.Collection)>/@parameter0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void add(java.lang.Object,java.lang.reflect.Method,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: boolean packagesContains(java.util.List,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: boolean packagesContains(java.util.List,java.lang.String)>/clazz#_0
<ognl.OgnlOps: java.lang.String stringValue(java.lang.Object,boolean)>/@parameter0
<ognl.OgnlOps: java.lang.String stringValue(java.lang.Object,boolean)>/value#_0
<ognl.OgnlOps: java.lang.String stringValue(java.lang.Object)>/@parameter0
<ognl.OgnlOps: int getNumericType(java.lang.Object)>/@parameter0
<ognl.OgnlOps: int getNumericType(java.lang.Object)>/value#_0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionType(java.lang.Class)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyType(java.lang.Class)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueType(java.lang.Class)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionReturnType(java.lang.reflect.Method,int)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyReturnType(java.lang.reflect.Method,int)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueReturnType(java.lang.reflect.Method,int)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getGenericReturnType(java.lang.reflect.Method,java.lang.Class,int,int)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getGenericReturnType(java.lang.reflect.Method,java.lang.Class,int,int)>/method#_0
<ognl.ASTDivide: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/@parameter1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/ptype#_0
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: java.lang.Integer convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: java.lang.Integer convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: java.lang.Integer convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromClass(java.lang.Class,java.lang.Class,int)>/@parameter0
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromClass(org.springframework.core.MethodParameter,java.lang.Class,java.lang.Class,int,int,int)>/@parameter1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromClass(org.springframework.core.MethodParameter,java.lang.Class,java.lang.Class,int,int,int)>/clazz#_0
<javax.servlet.ServletRequestWrapper: void <init>(javax.servlet.ServletRequest)>/@parameter0
<javax.servlet.ServletRequestWrapper: void <init>(javax.servlet.ServletRequest)>/request#_0
<com.thoughtworks.xstream.io.json.JsonWriter: void addLabel(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.CollectionToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.CollectionToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.CollectionToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.thoughtworks.xstream.io.json.JsonWriter: void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type)>/@parameter0
<ognl.ASTMultiply: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/servletContext#_0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter1
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/chain#_0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter2
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/request#_0
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/@parameter3
<br.com.caelum.vraptor.core.RequestInfo: void <init>(javax.servlet.ServletContext,javax.servlet.FilterChain,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse)>/response#_0
<com.thoughtworks.xstream.io.json.JsonWriter: void writeText(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.json.JsonWriter: void writeText(java.lang.String)>/text#_0
<org.hamcrest.TypeSafeDiagnosingMatcher: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.TypeSafeDiagnosingMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/@parameter0
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.OgnlOps: int getNumericType(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: int getNumericType(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: int getNumericType(java.lang.Object,java.lang.Object,boolean)>/@parameter0
<ognl.OgnlOps: int getNumericType(java.lang.Object,java.lang.Object,boolean)>/@parameter1
<com.thoughtworks.xstream.io.path.PathTracker: void pushElement(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.collections.MapConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.MapConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<ognl.OgnlOps: java.lang.Object binaryOr(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object binaryOr(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object binaryXor(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object binaryXor(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object binaryAnd(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object binaryAnd(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: boolean equal(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: boolean equal(java.lang.Object,java.lang.Object)>/@parameter1
<org.picocontainer.converters.ShortConverter: java.lang.Short convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.ShortConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.collections.MapConverter: java.lang.Object createCollection(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.MapConverter: java.lang.Object createCollection(java.lang.Class)>/type#_0
<ognl.OgnlOps: boolean less(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: boolean less(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: boolean greater(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: boolean greater(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: boolean in(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: boolean in(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object shiftLeft(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object shiftLeft(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object shiftRight(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object shiftRight(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object unsignedShiftRight(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object unsignedShiftRight(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object remainder(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object remainder(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlOps: java.lang.Object negate(java.lang.Object)>/@parameter0
<ognl.OgnlOps: java.lang.Object bitNegate(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$JavaSetter$1: boolean accepts(java.lang.reflect.Method)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$JavaSetter$1: boolean accepts(java.lang.reflect.Method)>/method#_0
<com.thoughtworks.xstream.core.util.PrioritizedList: void add(java.lang.Object,int)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$JavaSetter$1: boolean accepts(java.lang.Object)>/@parameter0
<ognl.ASTVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ASTVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void <init>(br.com.caelum.vraptor.core.InterceptorHandlerFactory)>/@parameter0
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void <init>(br.com.caelum.vraptor.core.InterceptorHandlerFactory)>/handlerFactory#_0
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void next(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void next(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: java.sql.Time convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: java.sql.Time convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<org.springframework.core.io.support.PathMatchingResourcePatternResolver$VfsResourceMatchingDelegate: java.util.Set findMatchingResources(org.springframework.core.io.Resource,java.lang.String,org.springframework.util.PathMatcher)>/@parameter0
<org.springframework.core.io.support.PathMatchingResourcePatternResolver$VfsResourceMatchingDelegate: java.util.Set findMatchingResources(org.springframework.core.io.Resource,java.lang.String,org.springframework.util.PathMatcher)>/rootResource#_0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeAttribute(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeNode(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String encodeAttribute(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String encodeName(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeName(java.lang.String)>/@parameter0
<com.google.common.collect.Multimaps$Values: boolean contains(java.lang.Object)>/@parameter0
<org.mockito.cglib.core.VisibilityPredicate: boolean evaluate(java.lang.Object)>/@parameter0
<ognl.SetPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.SetPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.ioc.spring.DefaultSpringLocator: org.springframework.web.context.ConfigurableWebApplicationContext getApplicationContext(javax.servlet.ServletContext)>/@parameter0
<org.joda.time.LocalDate: boolean equals(java.lang.Object)>/@parameter0
<ognl.ASTBitAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.ImmutableFieldKeySorter: java.util.Map sort(java.lang.Class,java.util.Map)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.ImmutableFieldKeySorter: java.util.Map sort(java.lang.Class,java.util.Map)>/type#_0
<org.picocontainer.injectors.SetterInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.SetterInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<com.google.common.base.Predicates$NotPredicate: boolean apply(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$CollectionSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$MyCollection,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$CollectionSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$MyCollection,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/myColl#_0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$CollectionSerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<org.picocontainer.injectors.SetterInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.String,java.lang.String,boolean,boolean)>/@parameter0
<org.picocontainer.injectors.SetterInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.String,java.lang.String,boolean,boolean)>/@parameter1
<org.picocontainer.injectors.SetterInjector: java.lang.Object memberInvocationReturn(java.lang.Object,java.lang.reflect.AccessibleObject,java.lang.Object)>/@parameter1
<org.picocontainer.injectors.SetterInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/@parameter0
<org.picocontainer.injectors.SetterInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/@parameter2
<org.picocontainer.injectors.SetterInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/toInject#_0
<org.picocontainer.injectors.SetterInjector: boolean isInjectorMethod(java.lang.reflect.Method)>/@parameter0
<org.picocontainer.injectors.SetterInjector: boolean isInjectorMethod(java.lang.reflect.Method)>/method#_0
<org.picocontainer.converters.BooleanConverter: java.lang.Boolean convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.BooleanConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<org.springframework.beans.factory.BeanCurrentlyInCreationException: void <init>(java.lang.String)>/@parameter0
<org.springframework.beans.factory.BeanCurrentlyInCreationException: void <init>(java.lang.String,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/result#_0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter1
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/factory#_0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter2
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/outjector#_0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter4
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/beanValidator#_0
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/@parameter5
<br.com.caelum.vraptor.validator.DefaultValidator: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.view.ValidationViewsFactory,br.com.caelum.vraptor.validator.Outjector,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.validator.BeanValidator,br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.validator.DefaultValidator: void add(br.com.caelum.vraptor.validator.Message)>/@parameter0
<br.com.caelum.iogi.Iogi$DelegateToAllInstantatiors: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.Resource resolveRootDirResource(org.springframework.core.io.Resource)>/@parameter0
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.Resource resolveRootDirResource(org.springframework.core.io.Resource)>/original#_0
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: boolean isJarResource(org.springframework.core.io.Resource)>/@parameter0
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: boolean isJarResource(org.springframework.core.io.Resource)>/resource#_0
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set doFindPathMatchingJarResources(org.springframework.core.io.Resource,java.lang.String)>/@parameter0
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set doFindPathMatchingJarResources(org.springframework.core.io.Resource,java.lang.String)>/rootDirResource#_0
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)>/@parameter0
<org.picocontainer.injectors.IterativeInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/@parameter0
<org.picocontainer.injectors.IterativeInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/@parameter1
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: java.lang.Float convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: java.lang.Float convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: boolean equals(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$23: void write(com.google.gson.stream.JsonWriter,java.util.Calendar)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$23: void write(com.google.gson.stream.JsonWriter,java.util.Calendar)>/value#_0
<org.picocontainer.injectors.IterativeInjector: org.picocontainer.NameBinding makeParameterNameImpl(java.lang.reflect.AccessibleObject)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$23: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.picocontainer.injectors.IterativeInjector: java.lang.String getName(java.lang.reflect.Method)>/@parameter0
<org.picocontainer.injectors.IterativeInjector: java.lang.String getName(java.lang.reflect.Method)>/method#_0
<org.picocontainer.injectors.IterativeInjector: void fixGenericParameterTypes(java.lang.reflect.Method,java.lang.reflect.Type[])>/@parameter0
<org.picocontainer.injectors.IterativeInjector: void fixGenericParameterTypes(java.lang.reflect.Method,java.lang.reflect.Type[])>/method#_0
<org.picocontainer.injectors.IterativeInjector: java.lang.annotation.Annotation getBindings(java.lang.reflect.Method,int)>/@parameter0
<org.picocontainer.injectors.IterativeInjector: java.lang.annotation.Annotation getBindings(java.lang.reflect.Method,int)>/method#_0
<org.springframework.core.convert.support.IdToEntityConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.IdToEntityConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.IdToEntityConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.reflect.Method getFinder(java.lang.Class)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedCollection: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMultimap$WrappedCollection)>/@parameter1
<com.google.common.collect.AbstractMultimap$WrappedCollection: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMultimap$WrappedCollection)>/key#_0
<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>/@parameter0
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.String getEntityName(java.lang.Class)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean equals(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean add(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean addAll(java.util.Collection)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean contains(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedCollection: boolean remove(java.lang.Object)>/@parameter0
<com.google.gson.JsonNull: boolean equals(java.lang.Object)>/@parameter0
<com.google.gson.JsonNull: boolean equals(java.lang.Object)>/other#_0
<com.thoughtworks.xstream.converters.basic.BigIntegerConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.BigIntegerConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.basic.BigIntegerConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest$MegaConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest$MegaConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.EnumConverter: void ensureTargetIsAnEnum(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: void ensureTargetIsAnEnum(br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest$MegaConverter: boolean canConvert(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest$MegaConverter: boolean canConvert(java.lang.Class)>/type#_0
<br.com.caelum.iogi.conversion.EnumConverter: boolean isNumber(java.lang.String)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: boolean isNumber(java.lang.String)>/stringValue#_0
<ognl.ASTLessEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromOrdinal(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromOrdinal(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/enumClass#_0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromOrdinal(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromOrdinal(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter2
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromOrdinal(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromName(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromName(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/type#_0
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromName(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromName(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter2
<br.com.caelum.iogi.conversion.EnumConverter: java.lang.Object instantiateFromName(java.lang.Class,java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<org.picocontainer.converters.ConvertsNothing: java.lang.Object convert(java.lang.String,java.lang.reflect.Type)>/@parameter0
<org.picocontainer.converters.ConvertsNothing: java.lang.Object convert(java.lang.String,java.lang.reflect.Type)>/paramValue#_0
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.google.common.collect.LinkedHashMultimap: java.util.Collection createCollection(java.lang.Object)>/@parameter0
<ognl.ASTSequence: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTSequence: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTSequence: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<com.google.common.collect.LinkedHashMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedHashMultimap: java.util.Set removeAll(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedHashMultimap: java.util.Set get(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<com.google.common.collect.LinkedHashMultimap: boolean remove(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.common.collect.LinkedHashMultimap: boolean containsValue(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.support.GenericConversionService$MatchableConverters getMatchableConverters(java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.support.GenericConversionService$MatchableConverters getMatchableConverters(java.lang.Class,java.lang.Class)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService: java.util.Map getSourceConverterMap(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: void assertNotNull(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: void assertNotNull(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.slf4j.impl.Log4jLoggerAdapter: void trace(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.GenericConversionService: java.util.Map getTargetConvertersForSource(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$2: void write(com.google.gson.stream.JsonWriter,java.util.BitSet)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$2: void write(com.google.gson.stream.JsonWriter,java.util.BitSet)>/src#_0
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$2: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.slf4j.impl.Log4jLoggerAdapter: void debug(java.lang.String,java.lang.Object)>/@parameter1
<org.slf4j.impl.Log4jLoggerAdapter: void debug(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean hasValueOfMethodOrConstructor(java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.ObjectToObjectConverter: boolean hasValueOfMethodOrConstructor(java.lang.Class,java.lang.Class)>/@parameter1
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Method getValueOfMethodOn(java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Method getValueOfMethodOn(java.lang.Class,java.lang.Class)>/@parameter1
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Method getValueOfMethodOn(java.lang.Class,java.lang.Class)>/sourceClass#_0
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class)>/@parameter1
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class)>/sourceClass#_0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.support.GenericConversionService$MatchableConverters,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.support.GenericConversionService$MatchableConverters,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.support.GenericConversionService$MatchableConverters,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter2
<org.slf4j.impl.Log4jLoggerAdapter: void error(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>/@parameter1
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>/@parameter3
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter1
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/beanName#_0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter3
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter4
<org.hamcrest.core.StringStartsWith: boolean evalSubstringOf(java.lang.String)>/@parameter0
<org.hamcrest.core.StringStartsWith: boolean evalSubstringOf(java.lang.String)>/s#_0
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: java.lang.Boolean convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: java.lang.Boolean convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: java.lang.Boolean convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.web.context.request.AbstractRequestAttributes: void registerRequestDestructionCallback(java.lang.String,java.lang.Runnable)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory$1: void <init>(org.springframework.beans.factory.support.AbstractBeanFactory,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory$1: void <init>(org.springframework.beans.factory.support.AbstractBeanFactory,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/l2#_0
<org.springframework.core.convert.support.ConversionUtils: java.lang.Object invokeConverter(org.springframework.core.convert.converter.GenericConverter,java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ConversionUtils: java.lang.Object invokeConverter(org.springframework.core.convert.converter.GenericConverter,java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/converter#_0
<org.springframework.core.convert.support.ConversionUtils: java.lang.Object invokeConverter(org.springframework.core.convert.converter.GenericConverter,java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<ognl.ArrayElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.core.DefaultConverterLookup: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>/@parameter0
<ognl.IteratorEnumeration: void <init>(java.util.Iterator)>/@parameter0
<ognl.IteratorEnumeration: void <init>(java.util.Iterator)>/it#_0
<org.springframework.core.type.classreading.SimpleMetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(org.springframework.core.io.Resource)>/@parameter0
<com.thoughtworks.xstream.converters.extended.SqlTimeConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.SqlTimeConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.extended.SqlTimeConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<ognl.ASTGreater: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.google.inject.internal.util.$Objects: boolean equal(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibSubclassCreator: java.lang.Object instantiate(java.lang.reflect.Constructor,java.lang.Object[])>/@parameter0
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibSubclassCreator: java.lang.Object instantiate(java.lang.reflect.Constructor,java.lang.Object[])>/ctor#_0
<org.springframework.expression.ExpressionException: void <init>(java.lang.String,int,java.lang.String)>/@parameter0
<org.springframework.expression.ExpressionException: void <init>(java.lang.String,int,java.lang.String)>/expressionString#_0
<org.junit.Assert: void assertNotNull(java.lang.String,java.lang.Object)>/@parameter1
<org.junit.Assert: void assertNotNull(java.lang.String,java.lang.Object)>/object#_0
<org.mockito.cglib.core.EmitUtils$11: java.lang.Object transform(java.lang.Object)>/@parameter0
<org.junit.Assert: void assertNotNull(java.lang.Object)>/@parameter0
<org.junit.Assert: void assertNull(java.lang.String,java.lang.Object)>/@parameter1
<org.junit.Assert: void assertNull(java.lang.String,java.lang.Object)>/object#_0
<org.picocontainer.parameters.BasicComponentParameter$1: void <init>(org.picocontainer.parameters.BasicComponentParameter,org.picocontainer.ComponentAdapter,org.picocontainer.PicoContainer,java.lang.reflect.Type,org.picocontainer.ComponentAdapter)>/@parameter1
<org.picocontainer.parameters.BasicComponentParameter$1: void <init>(org.picocontainer.parameters.BasicComponentParameter,org.picocontainer.ComponentAdapter,org.picocontainer.PicoContainer,java.lang.reflect.Type,org.picocontainer.ComponentAdapter)>/l2#_0
<org.junit.Assert: void assertNull(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.basic.ShortConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.ShortConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.basic.ShortConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.junit.Assert: java.lang.String formatClassAndValue(java.lang.Object,java.lang.String)>/@parameter1
<org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>/@parameter0
<org.junit.Assert: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>/@parameter1
<com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean add(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/provider#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/parameterNameProvider#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter2
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/parameters#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter3
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/validator#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter4
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/localization#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter5
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/request#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/@parameter6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void <init>(br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.Localization,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.view.FlashScope)>/flash#_0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<org.springframework.context.expression.MapAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.MapAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.MapAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.MapAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.MapAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.MapAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.context.expression.MapAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.MapAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.context.expression.MapAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.context.expression.MapAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.context.expression.MapAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<org.mockito.internal.matchers.Any: boolean matches(java.lang.Object)>/@parameter0
<org.mockito.internal.matchers.Any: boolean matches(java.lang.Object)>/actual#_0
<org.hamcrest.core.StringContains: boolean evalSubstringOf(java.lang.String)>/@parameter0
<org.hamcrest.core.StringContains: boolean evalSubstringOf(java.lang.String)>/s#_0
<br.com.caelum.vraptor.config.BasicConfiguration: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.config.BasicConfiguration: void <init>(javax.servlet.ServletContext)>/servletContext#_0
<org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/path#_0
<org.hamcrest.core.IsNot: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsNot: org.hamcrest.Matcher not(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/@parameter0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/@parameter1
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/converter#_0
<org.slf4j.helpers.Util: void report(java.lang.String)>/@parameter0
<org.picocontainer.lifecycle.NullLifecycleStrategy: void start(java.lang.Object)>/@parameter0
<org.picocontainer.lifecycle.NullLifecycleStrategy: void start(java.lang.Object)>/component#_0
<org.picocontainer.lifecycle.NullLifecycleStrategy: void stop(java.lang.Object)>/@parameter0
<org.picocontainer.lifecycle.NullLifecycleStrategy: void stop(java.lang.Object)>/component#_0
<org.picocontainer.lifecycle.NullLifecycleStrategy: void dispose(java.lang.Object)>/@parameter0
<org.picocontainer.lifecycle.NullLifecycleStrategy: void dispose(java.lang.Object)>/component#_0
<org.picocontainer.lifecycle.NullLifecycleStrategy: boolean hasLifecycle(java.lang.Class)>/@parameter0
<org.picocontainer.lifecycle.NullLifecycleStrategy: boolean hasLifecycle(java.lang.Class)>/type#_0
<org.picocontainer.lifecycle.NullLifecycleStrategy: boolean isLazy(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.lifecycle.NullLifecycleStrategy: boolean isLazy(org.picocontainer.ComponentAdapter)>/adapter#_0
<org.mockito.internal.matchers.Equals: boolean matches(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ForwardToDefaultViewInterceptor: void <init>(br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.interceptor.ForwardToDefaultViewInterceptor: void <init>(br.com.caelum.vraptor.Result)>/result#_0
<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.mapper.SecurityMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.PropertiesToStringConverter: java.lang.String convert(java.util.Properties)>/@parameter0
<org.springframework.core.convert.support.PropertiesToStringConverter: java.lang.Object convert(java.lang.Object)>/@parameter0
<org.apache.commons.fileupload.servlet.ServletRequestContext: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<org.apache.commons.fileupload.servlet.ServletRequestContext: void <init>(javax.servlet.http.HttpServletRequest)>/request#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/request#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter1
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/parameters#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/validator#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/@parameter4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.interceptor.multipart.MultipartConfig,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.interceptor.multipart.ServletFileUploadCreator)>/fileUploadCreator#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/method#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<org.springframework.web.context.request.SessionScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/@parameter0
<com.thoughtworks.paranamer.BytecodeReadingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<org.mockito.asm.ByteVector: org.mockito.asm.ByteVector putUTF8(java.lang.String)>/@parameter0
<org.mockito.asm.ByteVector: org.mockito.asm.ByteVector putUTF8(java.lang.String)>/s#_0
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>/@parameter0
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/@parameter0
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/@parameter1
<org.springframework.web.context.request.ServletRequestAttributes: void registerDestructionCallback(java.lang.String,java.lang.Runnable,int)>/@parameter0
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object resolveReference(java.lang.String)>/@parameter0
<org.springframework.web.context.request.ServletRequestAttributes: void registerSessionDestructionCallback(java.lang.String,java.lang.Runnable)>/@parameter0
<br.com.caelum.iogi.conversion.FallbackConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FallbackConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.collections.CyclingListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<br.com.caelum.iogi.conversion.FallbackConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver$1: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.reflect.Constructor,java.lang.Object[])>/@parameter2
<org.springframework.beans.factory.support.ConstructorResolver$1: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.reflect.Constructor,java.lang.Object[])>/l3#_0
<org.springframework.beans.factory.support.ConstructorResolver$1: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.reflect.Constructor,java.lang.Object[])>/@parameter3
<org.springframework.beans.factory.support.ConstructorResolver$1: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.reflect.Constructor,java.lang.Object[])>/l4#_0
<com.google.inject.internal.MoreTypes$WildcardTypeImpl: boolean equals(java.lang.Object)>/@parameter0
<javassist.compiler.MemberCodeGen: java.lang.String getAccessiblePrivate(java.lang.String,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo,javassist.CtClass)>/@parameter3
<javassist.compiler.MemberCodeGen: java.lang.String getAccessibleConstructor(java.lang.String,javassist.CtClass,javassist.bytecode.MethodInfo)>/@parameter2
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/container#_0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<javassist.compiler.MemberCodeGen: javassist.compiler.AccessorMaker isAccessibleField(javassist.CtField,javassist.bytecode.FieldInfo)>/@parameter1
<javassist.compiler.MemberCodeGen: javassist.compiler.AccessorMaker isAccessibleField(javassist.CtField,javassist.bytecode.FieldInfo)>/finfo#_0
<javassist.compiler.MemberCodeGen: boolean setFieldType(javassist.bytecode.FieldInfo)>/@parameter0
<javassist.compiler.MemberCodeGen: boolean setFieldType(javassist.bytecode.FieldInfo)>/finfo#_0
<javassist.compiler.MemberCodeGen: int addFieldrefInfo(javassist.CtField,javassist.bytecode.FieldInfo)>/@parameter1
<javassist.compiler.MemberCodeGen: int addFieldrefInfo(javassist.CtField,javassist.bytecode.FieldInfo)>/finfo#_0
<org.springframework.expression.spel.standard.Tokenizer: void <init>(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyProviderFactory: java.lang.Object createDependencyProvider(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: void <init>(java.lang.Object,int,int)>/@parameter0
<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: void <init>(java.lang.Object,int,int)>/value#_0
<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int compareTo(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType: void <init>(java.lang.String,double)>/@parameter0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType: void <init>(java.lang.String,double)>/type#_0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType: int compareTo(br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType)>/@parameter0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType: int compareTo(br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType)>/mime#_0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType: int compareTo(java.lang.Object)>/@parameter0
<org.joda.time.field.MillisDurationField: int compareTo(java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap$KeySet: boolean contains(java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap$KeySet: boolean remove(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: boolean canAccess(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)>/field#_0
<com.google.common.collect.ForwardingCollection: boolean contains(java.lang.Object)>/@parameter0
<com.google.common.collect.ForwardingCollection: boolean add(java.lang.Object)>/@parameter0
<com.google.common.collect.ForwardingCollection: boolean remove(java.lang.Object)>/@parameter0
<com.google.common.collect.ForwardingCollection: boolean addAll(java.util.Collection)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void <init>(com.thoughtworks.xstream.XStream,java.io.Writer,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter2
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void <init>(com.thoughtworks.xstream.XStream,java.io.Writer,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/extractor#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void preConfigure(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void setRoot(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: java.util.Collection normalizeList(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.CharacterToNumberFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void setAlias(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: java.util.Set findElementTypes(java.util.Collection)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: java.util.Set findElementTypes(java.util.Collection)>/list#_0
<org.springframework.core.convert.ConversionFailedException: void <init>(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.lang.Object,java.lang.Throwable)>/@parameter2
<org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter3
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/field#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: boolean shouldUnmarshalField(java.lang.reflect.Field)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: boolean shouldUnmarshalField(java.lang.reflect.Field)>/field#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException: void <init>(java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void handleUnknownField(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void handleUnknownField(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)>/@parameter3
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>/@parameter0
<org.joda.time.LocalTime: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.scan.JavassistBootstrapGenerator: java.lang.Class generate(java.util.Collection,br.com.caelum.vraptor.scan.ClasspathResolver)>/@parameter1
<br.com.caelum.vraptor.scan.JavassistBootstrapGenerator: java.lang.Class generate(java.util.Collection,br.com.caelum.vraptor.scan.ClasspathResolver)>/resolver#_0
<org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>/@parameter1
<org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>/superClass#_0
<ognl.ASTLess: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.util.AntPathStringMatcher: void <init>(java.lang.String,java.lang.String,java.util.Map)>/@parameter0
<org.springframework.util.AntPathStringMatcher: void <init>(java.lang.String,java.lang.String,java.util.Map)>/@parameter1
<org.springframework.util.AntPathStringMatcher: void <init>(java.lang.String,java.lang.String,java.util.Map)>/str#_0
<org.springframework.util.AntPathStringMatcher: java.util.regex.Pattern createPattern(java.lang.String)>/@parameter0
<org.springframework.util.AntPathStringMatcher: java.lang.String quote(java.lang.String,int,int)>/@parameter0
<org.springframework.util.AntPathStringMatcher: java.lang.String quote(java.lang.String,int,int)>/s#_0
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/path#_0
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean isCompatiblePath(java.util.Map$Entry,java.lang.Class,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<org.springframework.expression.spel.ast.OperatorNot: void <init>(int,org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter1
<org.springframework.expression.spel.ast.OperatorNot: void <init>(int,org.springframework.expression.spel.ast.SpelNodeImpl)>/operand#_0
<org.picocontainer.DefaultPicoContainer$LateInstance: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<org.picocontainer.DefaultPicoContainer$LateInstance: void <init>(java.lang.Object,java.lang.Object,org.picocontainer.DefaultPicoContainer$1)>/@parameter0
<com.google.common.collect.ForwardingSet: boolean equals(java.lang.Object)>/@parameter0
<org.hamcrest.core.AllOf: boolean matches(java.lang.Object,org.hamcrest.Description)>/@parameter0
<ognl.ASTBitOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.DisposableBeanAdapter: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.util.List,java.security.AccessControlContext)>/@parameter0
<org.springframework.beans.factory.support.DisposableBeanAdapter: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.util.List,java.security.AccessControlContext)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$10: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$10: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<javassist.compiler.MemberCodeGen$JsrHook2: void <init>(javassist.compiler.CodeGen,int[])>/@parameter1
<javassist.compiler.MemberCodeGen$JsrHook2: void <init>(javassist.compiler.CodeGen,int[])>/retTarget#_0
<net.vidageek.mirror.reflect.DefaultAllReflectionHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/@parameter1
<net.vidageek.mirror.reflect.DefaultAllReflectionHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/clazz#_0
<br.com.caelum.vraptor.VRaptorMatchers$2: void describeMismatchSafely(br.com.caelum.vraptor.http.route.Route,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.VRaptorMatchers$2: boolean matchesSafely(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.VRaptorMatchers$2: boolean matchesSafely(br.com.caelum.vraptor.http.route.Route)>/item#_0
<br.com.caelum.vraptor.VRaptorMatchers$2: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.VRaptorMatchers$2: boolean matchesSafely(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.VRaptorRequest: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.VRaptorRequest: void setParameter(java.lang.String,java.lang.String[])>/@parameter0
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: void <init>(br.com.caelum.iogi.reflection.ClassConstructor,br.com.caelum.iogi.parameters.Parameters,br.com.caelum.iogi.DependenciesInjector)>/@parameter0
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: void <init>(br.com.caelum.iogi.reflection.ClassConstructor,br.com.caelum.iogi.parameters.Parameters,br.com.caelum.iogi.DependenciesInjector)>/constructor#_0
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.lang.Object argumentValue(br.com.caelum.iogi.Instantiator,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: boolean needsDependency(br.com.caelum.iogi.reflection.Target)>/@parameter0
<org.codehaus.jettison.json.JSONObject: java.lang.String numberToString(java.lang.Number)>/@parameter0
<br.com.caelum.iogi.conversion.LongWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LongWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.LongWrapperConverter: java.lang.Long convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LongWrapperConverter: java.lang.Long convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.LongWrapperConverter: java.lang.Long convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.LongWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LongWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.codehaus.jettison.json.JSONObject: org.codehaus.jettison.json.JSONObject put(java.lang.String,java.lang.Object)>/@parameter1
<org.codehaus.jettison.json.JSONObject: java.lang.String quote(java.lang.String)>/@parameter0
<org.codehaus.jettison.json.JSONObject: java.lang.String quote(java.lang.String)>/string#_0
<org.codehaus.jettison.json.JSONObject: void testValidity(java.lang.Object)>/@parameter0
<org.springframework.beans.propertyeditors.CharArrayPropertyEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CharArrayPropertyEditor: void setAsText(java.lang.String)>/text#_0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/translator#_0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter1
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/methodInfo#_0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter2
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/resourceNotFoundHandler#_0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter3
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/methodNotAllowedHandler#_0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/@parameter4
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void <init>(br.com.caelum.vraptor.http.UrlToResourceTranslator,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.resource.ResourceNotFoundHandler,br.com.caelum.vraptor.resource.MethodNotAllowedHandler,br.com.caelum.vraptor.core.RequestInfo)>/requestInfo#_0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>/@parameter0
<org.springframework.aop.config.AopConfigUtils: int findPriorityForClass(java.lang.String)>/@parameter0
<com.google.common.collect.LinkedListMultimap$Node: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedListMultimap$Node: void <init>(java.lang.Object,java.lang.Object)>/key#_0
<com.google.common.collect.LinkedListMultimap$Node: void <init>(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.common.collect.LinkedListMultimap$Node: void <init>(java.lang.Object,java.lang.Object)>/value#_0
<com.google.common.collect.AbstractListMultimap: java.util.List get(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractListMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.asm.Type: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: void <init>(java.lang.Class)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$CyclicDependencyException: void push(java.lang.Class)>/@parameter0
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.BeanExpressionContextAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanExpressionContextAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.BeanExpressionContextAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.context.expression.BeanExpressionContextAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.context.expression.BeanExpressionContextAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/target#_0
<org.springframework.context.expression.BeanExpressionContextAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.context.expression.BeanExpressionContextAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/name#_0
<org.springframework.context.expression.BeanExpressionContextAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<org.springframework.context.expression.BeanExpressionContextAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/newValue#_0
<javassist.bytecode.stackmap.MapMaker: void <init>(javassist.ClassPool,javassist.bytecode.MethodInfo,javassist.bytecode.CodeAttribute)>/@parameter2
<javassist.bytecode.stackmap.MapMaker: void <init>(javassist.ClassPool,javassist.bytecode.MethodInfo,javassist.bytecode.CodeAttribute)>/ca#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory$2: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.beans.factory.FactoryBean)>/@parameter1
<org.springframework.beans.factory.support.DefaultListableBeanFactory$2: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.beans.factory.FactoryBean)>/l2#_0
<com.google.common.collect.HashMultiset: int add(java.lang.Object,int)>/@parameter0
<com.google.common.collect.HashMultiset: int count(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.conversion.FloatWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FloatWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.FloatWrapperConverter: java.lang.Float convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FloatWrapperConverter: java.lang.Float convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.FloatWrapperConverter: java.lang.Float convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.FloatWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.FloatWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.mockito.cglib.core.MethodInfo: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: void start(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: void stop(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: void dispose(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: boolean hasLifecycle(java.lang.Class)>/@parameter0
<ognl.ArrayPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ArrayPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<br.com.caelum.vraptor.core.DefaultConverters: void <init>(br.com.caelum.vraptor.ioc.Container)>/@parameter0
<br.com.caelum.vraptor.core.DefaultConverters: void <init>(br.com.caelum.vraptor.ioc.Container)>/container#_0
<ognl.ObjectNullHandler: java.lang.Object nullMethodResult(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])>/@parameter1
<ognl.ObjectNullHandler: java.lang.Object nullMethodResult(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])>/target#_0
<ognl.ObjectNullHandler: java.lang.Object nullMethodResult(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])>/@parameter3
<ognl.ObjectNullHandler: java.lang.Object nullMethodResult(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])>/args#_0
<ognl.ObjectNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ObjectNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ObjectNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ObjectNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/property#_0
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)>/@parameter1
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)>/delegate#_0
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<ognl.ObjectElementsAccessor$1: void <init>(ognl.ObjectElementsAccessor,java.lang.Object)>/@parameter1
<ognl.ObjectElementsAccessor$1: void <init>(ognl.ObjectElementsAccessor,java.lang.Object)>/l2#_0
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object)>/@parameter1
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object)>/value#_0
<com.thoughtworks.xstream.converters.extended.JavaClassConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.JavaClassConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.extended.JavaClassConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.picocontainer.paranamer.CachingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<com.google.common.collect.AbstractMultimap$RandomAccessWrappedList: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection)>/@parameter1
<br.com.caelum.vraptor.http.ognl.AbstractOgnlTestSupport: void configOgnl(br.com.caelum.vraptor.core.Converters)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: java.lang.Object getAttribute(java.lang.String,javax.faces.context.ExternalContext)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: void setAttribute(java.lang.String,java.lang.Object,javax.faces.context.ExternalContext)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes$PortletSessionAccessor: void setAttribute(java.lang.String,java.lang.Object,javax.faces.context.ExternalContext)>/@parameter1
<com.google.common.collect.SingletonImmutableMap: void <init>(java.util.Map$Entry)>/@parameter0
<com.google.common.collect.SingletonImmutableMap: void <init>(java.util.Map$Entry)>/entry#_0
<com.google.common.collect.SingletonImmutableMap: java.lang.Object get(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.ProxyConverter: boolean canConvert(java.lang.Class)>/@parameter0
<org.springframework.expression.ParseException: void <init>(java.lang.String,int,java.lang.String)>/@parameter0
<com.google.common.collect.SingletonImmutableMap: boolean containsKey(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.ProxyConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<ognl.ASTOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTOr: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTOr: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.NumberElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.ast.TypeCode: org.springframework.expression.spel.ast.TypeCode forName(java.lang.String)>/@parameter0
<org.springframework.expression.spel.ast.TypeCode: org.springframework.expression.spel.ast.TypeCode forName(java.lang.String)>/name#_0
<ognl.ASTNotEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.beans.propertyeditors.CurrencyEditor: void setAsText(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$1: boolean matchesSafely(br.com.caelum.vraptor.interceptor.Interceptor)>/@parameter0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$1: boolean matchesSafely(br.com.caelum.vraptor.interceptor.Interceptor)>/item#_0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$1: boolean matchesSafely(java.lang.Object)>/@parameter0
<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTAdd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addIndexedArgumentValue(int,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter1
<org.springframework.util.SystemPropertyUtils$SystemPropertyPlaceholderResolver: void <init>(java.lang.String)>/@parameter0
<org.springframework.util.SystemPropertyUtils$SystemPropertyPlaceholderResolver: void <init>(java.lang.String)>/text#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeIndexedArgumentValue(java.lang.Integer,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter1
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter0
<com.google.common.collect.AbstractSetMultimap: java.util.Set get(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractSetMultimap: java.util.Set removeAll(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractSetMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractSetMultimap: java.util.Collection get(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractSetMultimap: java.util.Collection removeAll(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/@parameter0
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/request#_0
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/@parameter1
<br.com.caelum.vraptor.http.DefaultFormatResolver: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.view.AcceptHeaderToFormat)>/acceptHeaderToFormat#_0
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: void <init>(java.lang.String,br.com.caelum.vraptor.resource.ResourceMethod,java.util.Set,br.com.caelum.vraptor.http.route.ParametersControl,int,java.lang.String[])>/@parameter3
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: void <init>(java.lang.String,br.com.caelum.vraptor.resource.ResourceMethod,java.util.Set,br.com.caelum.vraptor.http.route.ParametersControl,int,java.lang.String[])>/control#_0
<org.springframework.beans.PropertyValue: void <init>(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyValue: void <init>(java.lang.String,java.lang.Object)>/name#_0
<org.springframework.beans.PropertyValue: void <init>(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.PropertyValue: void <init>(java.lang.String,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: br.com.caelum.vraptor.resource.ResourceMethod resourceMethod(br.com.caelum.vraptor.http.MutableRequest,java.lang.String)>/@parameter0
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue)>/@parameter0
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue,java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue,java.lang.Object)>/@parameter1
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue,java.lang.Object)>/newValue#_0
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyValue: void setConvertedValue(java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyValue: void setConvertedValue(java.lang.Object)>/value#_0
<org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.MethodInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.MethodInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<org.springframework.core.convert.support.CollectionToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.CollectionToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.CollectionToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: void processAttributesAndNamespaces(org.codehaus.jettison.Node,org.codehaus.jettison.json.JSONObject)>/@parameter0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: void processAttributesAndNamespaces(org.codehaus.jettison.Node,org.codehaus.jettison.json.JSONObject)>/@parameter1
<org.codehaus.jettison.mapped.MappedNamespaceConvention: void processAttributesAndNamespaces(org.codehaus.jettison.Node,org.codehaus.jettison.json.JSONObject)>/object#_0
<org.picocontainer.injectors.ConstructorInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean,boolean)>/@parameter0
<org.picocontainer.injectors.ConstructorInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean,boolean)>/@parameter1
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer,java.lang.Class)>/@parameter1
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer,java.lang.Class)>/componentImplementation#_0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: javax.xml.namespace.QName createQName(java.lang.String,org.codehaus.jettison.Node)>/@parameter0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: javax.xml.namespace.QName createQName(java.lang.String,org.codehaus.jettison.Node)>/@parameter1
<org.codehaus.jettison.mapped.MappedNamespaceConvention: javax.xml.namespace.QName createQName(java.lang.String,org.codehaus.jettison.Node)>/node#_0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: javax.xml.namespace.QName createQName(java.lang.String)>/@parameter0
<org.codehaus.jettison.mapped.MappedNamespaceConvention: java.lang.String createAttributeKey(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<org.codehaus.jettison.mapped.MappedNamespaceConvention: java.lang.String createKey(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<org.codehaus.jettison.mapped.MappedNamespaceConvention: boolean isElement(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<org.picocontainer.injectors.ConstructorInjector: void fixGenericParameterTypes(java.lang.reflect.Constructor,java.lang.reflect.Type[])>/@parameter0
<org.picocontainer.injectors.ConstructorInjector: void fixGenericParameterTypes(java.lang.reflect.Constructor,java.lang.reflect.Type[])>/ctor#_0
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters access$100(org.picocontainer.injectors.ConstructorInjector,org.picocontainer.PicoContainer,java.lang.Class)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: boolean isSerializable(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.context.expression.StandardBeanExpressionResolver: java.lang.Object evaluate(java.lang.String,org.springframework.beans.factory.config.BeanExpressionContext)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object readField(java.io.ObjectStreamField,java.lang.Class,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: void <init>(br.com.caelum.vraptor.core.Converters,java.util.ResourceBundle)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: void <init>(br.com.caelum.vraptor.core.Converters,java.util.ResourceBundle)>/converters#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/context#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter2
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter3
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/propertyName#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter4
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convert(java.lang.Object,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type genericTypeToConvert(java.lang.Object,java.lang.reflect.Member)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type genericTypeToConvert(java.lang.Object,java.lang.reflect.Member)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.util.List hierarchyFor(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.util.List hierarchyFor(java.lang.Class)>/type#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractArrayType(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractArrayType(java.lang.Object)>/target#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractFieldType(java.lang.reflect.Member)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractSetterMethodType(java.lang.Object,java.lang.reflect.Member)>/@parameter0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractSetterMethodType(java.lang.Object,java.lang.reflect.Member)>/target#_0
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.reflect.Type extractSetterMethodType(java.lang.Object,java.lang.reflect.Member)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object access$000(com.thoughtworks.xstream.converters.reflection.SerializableConverter,java.io.ObjectStreamField,java.lang.Class,java.lang.Object)>/@parameter3
<br.com.caelum.vraptor.resource.DefaultResourceClass: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.route.JavaEvaluator: java.lang.Object get(java.lang.Object,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.http.route.JavaEvaluator: java.lang.Object navigate(java.lang.Object,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.http.route.JavaEvaluator: java.lang.Object navigate(java.lang.Object,java.lang.String)>/path#_0
<ognl.ASTThisVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTThisVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTThisVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTThisVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ASTThisVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>/@parameter0
<org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>/collection#_0
<ognl.MethodFailedException: void <init>(java.lang.Object,java.lang.String,java.lang.Throwable)>/@parameter0
<org.springframework.util.CollectionUtils: java.lang.Class findCommonElementType(java.util.Collection)>/@parameter0
<ognl.CollectionElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<org.springframework.beans.propertyeditors.PropertiesEditor: void setAsText(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void writeDetails(javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.InputStreamDownload: void writeDetails(javax.servlet.http.HttpServletResponse)>/response#_0
<org.springframework.beans.propertyeditors.PropertiesEditor: void setValue(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$16: void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$16: void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$16: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.google.common.collect.EmptyImmutableMap: java.lang.Object get(java.lang.Object)>/@parameter0
<com.google.common.collect.EmptyImmutableMap: java.lang.Object get(java.lang.Object)>/key#_0
<com.google.common.collect.EmptyImmutableMap: boolean containsKey(java.lang.Object)>/@parameter0
<com.google.common.collect.EmptyImmutableMap: boolean containsKey(java.lang.Object)>/key#_0
<org.springframework.beans.CachedIntrospectionResults: boolean isUnderneathClassLoader(java.lang.ClassLoader,java.lang.ClassLoader)>/@parameter1
<org.springframework.beans.CachedIntrospectionResults: boolean isUnderneathClassLoader(java.lang.ClassLoader,java.lang.ClassLoader)>/parent#_0
<org.springframework.context.support.DefaultLifecycleProcessor$1: void <init>(org.springframework.context.support.DefaultLifecycleProcessor,java.util.concurrent.CountDownLatch,java.util.Set,java.lang.String)>/@parameter3
<org.springframework.context.support.DefaultLifecycleProcessor$1: void <init>(org.springframework.context.support.DefaultLifecycleProcessor,java.util.concurrent.CountDownLatch,java.util.Set,java.lang.String)>/l4#_0
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)>/@parameter3
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)>/comparator#_0
<ognl.ASTStaticField: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTStaticField: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<br.com.caelum.iogi.conversion.ShortWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ShortWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.ShortWrapperConverter: java.lang.Short convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ShortWrapperConverter: java.lang.Short convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.ShortWrapperConverter: java.lang.Short convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.ShortWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ShortWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>/@parameter0
<org.hamcrest.BaseDescription: org.hamcrest.Description appendText(java.lang.String)>/@parameter0
<org.hamcrest.BaseDescription: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>/@parameter0
<org.hamcrest.BaseDescription: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>/value#_0
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.Fields: void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.core.util.Fields: java.lang.Object read(java.lang.reflect.Field,java.lang.Object)>/@parameter1
<org.hamcrest.BaseDescription: void toJavaSyntax(java.lang.String)>/@parameter0
<org.hamcrest.BaseDescription: void toJavaSyntax(java.lang.String)>/unformatted#_0
<org.hamcrest.core.Is: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.core.Is: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/@parameter0
<com.google.gson.internal.Streams: void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Class getTypeForFactoryBean(org.springframework.beans.factory.FactoryBean)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getCachedObjectForFactoryBean(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/@parameter1
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/@parameter1
<ognl.ObjectIndexedPropertyDescriptor: void <init>(java.lang.String,java.lang.Class,java.lang.reflect.Method,java.lang.reflect.Method)>/@parameter2
<ognl.ObjectIndexedPropertyDescriptor: void <init>(java.lang.String,java.lang.Class,java.lang.reflect.Method,java.lang.reflect.Method)>/indexedReadMethod#_0
<ognl.ObjectIndexedPropertyDescriptor: void <init>(java.lang.String,java.lang.Class,java.lang.reflect.Method,java.lang.reflect.Method)>/@parameter3
<ognl.ObjectIndexedPropertyDescriptor: void <init>(java.lang.String,java.lang.Class,java.lang.reflect.Method,java.lang.reflect.Method)>/indexedWriteMethod#_0
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,java.util.Map,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter2
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,java.util.Map,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/converters#_0
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void <init>(java.lang.String,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter1
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: org.springframework.beans.factory.FactoryBean getFactoryBean(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: org.springframework.beans.factory.FactoryBean getFactoryBean(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: void removeSingleton(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultParametersControl: java.lang.Object selectParam(java.lang.String,java.lang.String[],java.lang.Object[])>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultParametersControl: java.lang.Object selectParam(java.lang.String,java.lang.String[],java.lang.Object[])>/key#_0
<org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void fillIntoRequest(java.lang.String,br.com.caelum.vraptor.http.MutableRequest)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultParametersControl: void fillIntoRequest(java.lang.String,br.com.caelum.vraptor.http.MutableRequest)>/request#_0
<org.springframework.beans.PropertyEditorRegistrySupport: void setConversionService(org.springframework.core.convert.ConversionService)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: void setConversionService(org.springframework.core.convert.ConversionService)>/conversionService#_0
<junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>/actual#_0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getDefaultEditor(java.lang.Class)>/@parameter0
<ognl.MapElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>/@parameter1
<com.google.common.collect.LinkedListMultimap$ValueForKeyIterator: void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object)>/@parameter1
<com.google.common.collect.LinkedListMultimap$ValueForKeyIterator: void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object,int)>/@parameter1
<org.springframework.beans.PropertyEditorRegistrySupport: boolean hasCustomEditorForElement(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.beans.PropertyEditorRegistrySupport: java.lang.Class getPropertyType(java.lang.String)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: java.lang.Class getPropertyType(java.lang.String)>/propertyPath#_0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.String,java.lang.Class)>/@parameter1
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.Class)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: java.lang.Class guessPropertyTypeFromEditors(java.lang.String)>/@parameter0
<com.google.common.collect.LinkedListMultimap$ValueForKeyIterator: void add(java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: void copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry,java.lang.String)>/@parameter1
<org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>/@parameter2
<org.springframework.beans.PropertyEditorRegistrySupport: void addStrippedPropertyPaths(java.util.List,java.lang.String,java.lang.String)>/propertyPath#_0
<br.com.caelum.vraptor.http.VRaptorResponse: void <init>(javax.servlet.http.HttpServletResponse)>/@parameter0
<org.mockito.cglib.core.EmitUtils$10: org.mockito.asm.Type[] getParameterTypes(org.mockito.cglib.core.MethodInfo)>/@parameter0
<br.com.caelum.vraptor.proxy.JavassistProxifier$1: boolean isHandled(java.lang.reflect.Method)>/@parameter0
<com.google.inject.util.Providers$1: void <init>(java.lang.Object)>/@parameter0
<com.google.inject.util.Providers$1: void <init>(java.lang.Object)>/l1#_0
<org.springframework.context.event.AbstractApplicationEventMulticaster: void addApplicationListener(org.springframework.context.ApplicationListener)>/@parameter0
<org.springframework.context.event.AbstractApplicationEventMulticaster: void addApplicationListenerBean(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setValue(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/result#_0
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter1
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/method#_0
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter2
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.http.ParameterNameProvider)>/provider#_0
<org.springframework.context.event.AbstractApplicationEventMulticaster: boolean supportsEvent(org.springframework.context.ApplicationListener,java.lang.Class,java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter: boolean canConvert(java.lang.Class)>/type#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/proxifier#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/converters#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/@parameter3
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator,java.lang.String)>/nameProvider#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void is(java.lang.Class,java.lang.reflect.Method)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void addParametersInfo(java.lang.reflect.Method)>/@parameter0
<org.springframework.util.StringUtils: boolean hasLength(java.lang.CharSequence)>/@parameter0
<org.springframework.util.StringUtils: boolean hasLength(java.lang.CharSequence)>/str#_0
<org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: boolean hasText(java.lang.CharSequence)>/@parameter0
<org.springframework.util.StringUtils: boolean hasText(java.lang.String)>/@parameter0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyString: void addText(java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String trimAllWhitespace(java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String capitalize(java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String changeFirstCharacterCase(java.lang.String,boolean)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String changeFirstCharacterCase(java.lang.String,boolean)>/str#_0
<com.google.gson.JsonSyntaxException: void <init>(java.lang.String,java.lang.Throwable)>/@parameter0
<ognl.ASTAssign: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.util.StringUtils: java.util.Locale parseLocaleString(java.lang.String)>/@parameter0
<ognl.ASTInstanceof: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: void <init>(javax.servlet.ServletContext)>/servletContext#_0
<org.picocontainer.DefaultPicoContainer: void <init>(org.picocontainer.ComponentFactory,org.picocontainer.LifecycleStrategy,org.picocontainer.PicoContainer,org.picocontainer.ComponentMonitor)>/@parameter2
<org.springframework.util.StringUtils: java.lang.String[] tokenizeToStringArray(java.lang.String,java.lang.String,boolean,boolean)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Object)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String[] delimitedListToStringArray(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String[] delimitedListToStringArray(java.lang.String,java.lang.String,java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String[] delimitedListToStringArray(java.lang.String,java.lang.String,java.lang.String)>/str#_0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String[] commaDelimitedListToStringArray(java.lang.String)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/componentType#_0
<org.springframework.util.StringUtils: java.lang.String arrayToDelimitedString(java.lang.Object[],java.lang.String)>/@parameter0
<org.springframework.util.StringUtils: java.lang.String arrayToCommaDelimitedString(java.lang.Object[])>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.util.Properties)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,org.picocontainer.Parameter[])>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,org.picocontainer.Parameter[])>/@parameter1
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,java.util.Properties,org.picocontainer.Parameter[])>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.MutablePicoContainer addComponent(java.lang.Object,java.lang.Object,java.util.Properties,org.picocontainer.Parameter[])>/@parameter1
<org.picocontainer.DefaultPicoContainer: void addOrderedComponentAdapter(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getLocalInstance(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter typeComponentAdapter(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter typeComponentAdapter(org.picocontainer.ComponentAdapter)>/componentAdapter#_0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.reflect.Type)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object decorateComponent(java.lang.Object,org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object decorateComponent(java.lang.Object,org.picocontainer.ComponentAdapter)>/component#_0
<org.picocontainer.DefaultPicoContainer: java.lang.Object decorateComponent(java.lang.Object,org.picocontainer.ComponentAdapter)>/@parameter1
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/@parameter0
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/@parameter1
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/componentKey#_0
<org.picocontainer.DefaultPicoContainer: void potentiallyStartAdapter(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.DefaultPicoContainer: void addAdapterIfStartable(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.DefaultPicoContainer: void instantiateComponentAsIsStartable(org.picocontainer.ComponentAdapter)>/@parameter0
<javax.xml.namespace.QName: void <init>(java.lang.String)>/@parameter0
<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>/@parameter1
<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>/localPart#_0
<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.Node,java.lang.String,org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.Convention)>/@parameter0
<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.Node,java.lang.String,org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.Convention)>/parent#_0
<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.Node,java.lang.String,org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.Convention)>/@parameter1
<org.codehaus.jettison.Node: void <init>(org.codehaus.jettison.Node,java.lang.String,org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.Convention)>/@parameter2
<javax.xml.namespace.QName: boolean equals(java.lang.Object)>/@parameter0
<org.codehaus.jettison.Node: void <init>(java.lang.String,org.codehaus.jettison.Convention)>/@parameter0
<org.picocontainer.behaviors.Caching: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.behaviors.Caching: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void setValue(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void addAttribute(java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void writeAttributeValue(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void writeText(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void writeText(java.lang.String,boolean)>/@parameter0
<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void writeText(java.lang.String,boolean)>/text#_0
<org.codehaus.jettison.Node: void setNamespace(java.lang.String,java.lang.String)>/@parameter1
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>/@parameter0
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>/name#_0
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>/@parameter0
<org.codehaus.jettison.Node: void setArray(org.codehaus.jettison.json.JSONArray)>/@parameter0
<org.codehaus.jettison.Node: void setArray(org.codehaus.jettison.json.JSONArray)>/array#_0
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)>/@parameter0
<com.google.gson.stream.JsonWriter: void string(java.lang.String)>/@parameter0
<com.google.gson.internal.LazilyParsedNumber: void <init>(java.lang.String)>/@parameter0
<com.google.gson.internal.LazilyParsedNumber: void <init>(java.lang.String)>/value#_0
<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.path.Path: java.lang.String normalize(java.lang.String,int,int)>/@parameter0
<com.thoughtworks.xstream.io.path.Path: java.lang.String normalize(java.lang.String,int,int)>/s#_0
<com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>/@parameter0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter3
<br.com.caelum.vraptor.http.ognl.ListAccessor: void <init>(br.com.caelum.vraptor.core.Converters)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void <init>(br.com.caelum.vraptor.core.Converters)>/converters#_0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>/@parameter0
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<org.codehaus.jettison.mapped.MappedXMLStreamWriter: void writeCharacters(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Class getActualType(java.lang.reflect.Type)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/ctx#_0
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/target#_0
<com.google.gson.internal.bind.TypeAdapters$9: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$9: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.conversion.BigDecimalConverter: java.math.BigDecimal convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BigDecimalConverter: java.math.BigDecimal convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.BigDecimalConverter: java.math.BigDecimal convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.BigDecimalConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BigDecimalConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)>/@parameter1
<br.com.caelum.iogi.conversion.BigDecimalConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BigDecimalConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.hamcrest.Description$NullDescription: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>/@parameter0
<org.hamcrest.Description$NullDescription: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>/value#_0
<org.hamcrest.Description$NullDescription: org.hamcrest.Description appendText(java.lang.String)>/@parameter0
<org.hamcrest.Description$NullDescription: org.hamcrest.Description appendText(java.lang.String)>/text#_0
<org.hamcrest.Description$NullDescription: org.hamcrest.Description appendValue(java.lang.Object)>/@parameter0
<org.hamcrest.Description$NullDescription: org.hamcrest.Description appendValue(java.lang.Object)>/value#_0
<br.com.caelum.iogi.reflection.Target$Primitives: java.lang.Object primitiveCast(java.lang.Object,java.lang.Class)>/@parameter0
<br.com.caelum.iogi.reflection.Target$Primitives: java.lang.Object primitiveCast(java.lang.Object,java.lang.Class)>/@parameter1
<net.vidageek.mirror.list.EqualMethodRemover: void <init>(java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.list.EqualMethodRemover: void <init>(java.lang.reflect.Method)>/method#_0
<net.vidageek.mirror.list.EqualMethodRemover: boolean accepts(java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.list.EqualMethodRemover: boolean sameArgs(java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.list.EqualMethodRemover: boolean sameArgs(java.lang.reflect.Method)>/element#_0
<org.picocontainer.converters.UrlConverter: java.net.URL convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.UrlConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<net.vidageek.mirror.list.EqualMethodRemover: boolean sameMethodName(java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.list.EqualMethodRemover: boolean sameMethodName(java.lang.reflect.Method)>/element#_0
<net.vidageek.mirror.list.EqualMethodRemover: boolean accepts(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.support.ContextTypeMatchClassLoader: java.lang.Class loadClass(java.lang.String)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)>/@parameter3
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)>/@parameter5
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/@parameter1
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/map#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.core.convert.TypeDescriptor getTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.core.convert.TypeDescriptor getTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.String keyToString(com.google.gson.JsonElement)>/@parameter0
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.String keyToString(com.google.gson.JsonElement)>/keyElement#_0
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findGetterForProperty(java.lang.String,java.lang.Class,boolean)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findGetterForProperty(java.lang.String,java.lang.Class,boolean)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findGetterForProperty(java.lang.String,java.lang.Class,boolean)>/clazz#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findSetterForProperty(java.lang.String,java.lang.Class,boolean)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findSetterForProperty(java.lang.String,java.lang.Class,boolean)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method findSetterForProperty(java.lang.String,java.lang.Class,boolean)>/clazz#_0
<org.picocontainer.monitors.AbstractComponentMonitor: java.lang.reflect.Constructor instantiating(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor)>/@parameter2
<org.picocontainer.monitors.AbstractComponentMonitor: void instantiated(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Object,java.lang.Object[],long)>/@parameter2
<org.picocontainer.monitors.AbstractComponentMonitor: void instantiationFailed(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Exception)>/@parameter2
<org.picocontainer.monitors.AbstractComponentMonitor: java.lang.Object invoking(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,java.lang.Object[])>/@parameter2
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Field findField(java.lang.String,java.lang.Class,boolean)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Field findField(java.lang.String,java.lang.Class,boolean)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Field findField(java.lang.String,java.lang.Class,boolean)>/clazz#_0
<org.picocontainer.monitors.AbstractComponentMonitor: void invoked(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,long,java.lang.Object[],java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/result#_0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter1
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/request#_0
<org.picocontainer.monitors.AbstractComponentMonitor: void invocationFailed(java.lang.reflect.Member,java.lang.Object,java.lang.Exception)>/@parameter0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter2
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/router#_0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter3
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/provider#_0
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/@parameter4
<br.com.caelum.vraptor.view.DefaultRefererResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.ParametersProvider,br.com.caelum.vraptor.core.Localization)>/localization#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.beans.AbstractPropertyAccessor: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/@parameter0
<org.springframework.beans.AbstractPropertyAccessor: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/@parameter1
<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>/@parameter0
<org.picocontainer.paranamer.DefaultParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<org.springframework.context.support.ApplicationContextAwareProcessor$1: void <init>(org.springframework.context.support.ApplicationContextAwareProcessor,java.lang.Object)>/@parameter1
<org.springframework.context.support.ApplicationContextAwareProcessor$1: void <init>(org.springframework.context.support.ApplicationContextAwareProcessor,java.lang.Object)>/l2#_0
<br.com.caelum.iogi.conversion.ByteWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ByteWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<com.google.gson.internal.bind.TypeAdapters$20: void write(com.google.gson.stream.JsonWriter,java.net.InetAddress)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$20: void write(com.google.gson.stream.JsonWriter,java.net.InetAddress)>/value#_0
<br.com.caelum.iogi.conversion.ByteWrapperConverter: java.lang.Byte convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ByteWrapperConverter: java.lang.Byte convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.ByteWrapperConverter: java.lang.Byte convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.ByteWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ByteWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$20: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: java.lang.Double convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: java.lang.Double convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandler: void <init>(br.com.caelum.vraptor.interceptor.InterceptorRegistry)>/@parameter0
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandler: void <init>(br.com.caelum.vraptor.interceptor.InterceptorRegistry)>/registry#_0
<com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Enum)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter1
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: void <init>(int,java.lang.reflect.AccessibleObject,java.lang.String)>/@parameter1
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: void <init>(int,java.lang.reflect.AccessibleObject,java.lang.String)>/@parameter2
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: void <init>(int,java.lang.reflect.AccessibleObject,java.lang.String,org.picocontainer.injectors.SingleMemberInjector$1)>/@parameter1
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: void <init>(int,java.lang.reflect.AccessibleObject,java.lang.String,org.picocontainer.injectors.SingleMemberInjector$1)>/@parameter2
<org.hamcrest.DiagnosingMatcher: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.DiagnosingMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/@parameter0
<com.google.inject.internal.MoreTypes: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/@parameter1
<com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter: java.lang.String toString(java.lang.Object)>/obj#_0
<org.springframework.beans.PropertyAccessorUtils: java.lang.String getPropertyName(java.lang.String)>/@parameter0
<org.springframework.beans.PropertyAccessorUtils: java.lang.String getPropertyName(java.lang.String)>/propertyPath#_0
<org.springframework.beans.PropertyAccessorUtils: boolean isNestedOrIndexedProperty(java.lang.String)>/@parameter0
<org.springframework.beans.PropertyAccessorUtils: boolean isNestedOrIndexedProperty(java.lang.String)>/propertyPath#_0
<org.springframework.beans.PropertyAccessorUtils: int getFirstNestedPropertySeparatorIndex(java.lang.String)>/@parameter0
<org.springframework.beans.PropertyAccessorUtils: int getLastNestedPropertySeparatorIndex(java.lang.String)>/@parameter0
<org.springframework.beans.PropertyAccessorUtils: int getNestedPropertySeparatorIndex(java.lang.String,boolean)>/@parameter0
<org.springframework.beans.PropertyAccessorUtils: int getNestedPropertySeparatorIndex(java.lang.String,boolean)>/propertyPath#_0
<org.springframework.beans.propertyeditors.CharacterEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.PropertyAccessorUtils: boolean matchesProperty(java.lang.String,java.lang.String)>/@parameter1
<br.com.caelum.iogi.reflection.Constructors$1: int compare(br.com.caelum.iogi.reflection.ClassConstructor,br.com.caelum.iogi.reflection.ClassConstructor)>/@parameter0
<br.com.caelum.iogi.reflection.Constructors$1: int compare(br.com.caelum.iogi.reflection.ClassConstructor,br.com.caelum.iogi.reflection.ClassConstructor)>/first#_0
<br.com.caelum.iogi.reflection.Constructors$1: int compare(br.com.caelum.iogi.reflection.ClassConstructor,br.com.caelum.iogi.reflection.ClassConstructor)>/@parameter1
<br.com.caelum.iogi.reflection.Constructors$1: int compare(br.com.caelum.iogi.reflection.ClassConstructor,br.com.caelum.iogi.reflection.ClassConstructor)>/second#_0
<org.springframework.beans.propertyeditors.CharacterEditor: boolean isUnicodeCharacterSequence(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CharacterEditor: boolean isUnicodeCharacterSequence(java.lang.String)>/sequence#_0
<br.com.caelum.iogi.reflection.Constructors$1: int compare(java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.iogi.reflection.Constructors$1: int compare(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.beans.propertyeditors.CharacterEditor: void setAsUnicode(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CharacterEditor: void setAsUnicode(java.lang.String)>/text#_0
<org.springframework.aop.scope.ScopedProxyUtils: java.lang.String getTargetBeanName(java.lang.String)>/@parameter0
<javassist.compiler.AccessorMaker: java.lang.String getConstructor(javassist.CtClass,java.lang.String,javassist.bytecode.MethodInfo)>/@parameter2
<javassist.compiler.AccessorMaker: java.lang.String getConstructor(javassist.CtClass,java.lang.String,javassist.bytecode.MethodInfo)>/orig#_0
<javassist.compiler.AccessorMaker: java.lang.String getMethodAccessor(java.lang.String,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo)>/@parameter3
<javassist.compiler.AccessorMaker: java.lang.String getMethodAccessor(java.lang.String,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo)>/orig#_0
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void superHelper(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.core.MethodInfo)>/@parameter1
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void superHelper(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.core.MethodInfo)>/method#_0
<javassist.compiler.AccessorMaker: javassist.bytecode.MethodInfo getFieldGetter(javassist.bytecode.FieldInfo,boolean)>/@parameter0
<javassist.compiler.AccessorMaker: javassist.bytecode.MethodInfo getFieldGetter(javassist.bytecode.FieldInfo,boolean)>/finfo#_0
<javassist.compiler.AccessorMaker: javassist.bytecode.MethodInfo getFieldSetter(javassist.bytecode.FieldInfo,boolean)>/@parameter0
<javassist.compiler.AccessorMaker: javassist.bytecode.MethodInfo getFieldSetter(javassist.bytecode.FieldInfo,boolean)>/finfo#_0
<net.vidageek.mirror.DefaultClassController: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/@parameter1
<net.vidageek.mirror.DefaultClassController: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/clazz#_0
<org.hamcrest.ResourceBundleDescription: void append(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy: java.lang.Object instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/@parameter1
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy: java.lang.Object instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/beanName#_0
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy: java.lang.Object instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>/@parameter1
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy: java.lang.Object instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>/beanName#_0
<org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy: java.lang.Object instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.reflect.Constructor,java.lang.Object[])>/@parameter3
<org.hamcrest.ResourceBundleDescription: void directAppend(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: boolean canConvert(java.lang.Class)>/type#_0
<org.hamcrest.collection.IsCollectionWithSize: java.lang.Integer featureValueOf(java.util.Collection)>/@parameter0
<org.hamcrest.collection.IsCollectionWithSize: java.lang.Integer featureValueOf(java.util.Collection)>/actual#_0
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.hamcrest.collection.IsCollectionWithSize: java.lang.Object featureValueOf(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<ognl.ASTRemainder: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<javassist.CtClassType: void insertAuxInitializer(javassist.bytecode.CodeAttribute,javassist.bytecode.Bytecode,int)>/@parameter0
<javassist.CtClassType: void insertAuxInitializer(javassist.bytecode.CodeAttribute,javassist.bytecode.Bytecode,int)>/codeAttr#_0
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: org.joda.time.DateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverter: org.joda.time.DateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<org.picocontainer.converters.LongConverter: java.lang.Long convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.LongConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.extended.FileConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.FileConverter: boolean canConvert(java.lang.Class)>/type#_0
<ognl.ASTRootVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTRootVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<com.thoughtworks.xstream.converters.extended.FileConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<ognl.ASTRootVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTRootVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ASTRootVarRef: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.converters.extended.FileConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<org.springframework.beans.TypeMismatchException: void <init>(java.beans.PropertyChangeEvent,java.lang.Class,java.lang.Throwable)>/@parameter1
<org.springframework.beans.TypeMismatchException: void <init>(java.lang.Object,java.lang.Class,java.lang.Throwable)>/@parameter0
<org.springframework.beans.TypeMismatchException: void <init>(java.lang.Object,java.lang.Class,java.lang.Throwable)>/@parameter1
<br.com.caelum.vraptor.deserialization.DefaultDeserializers: br.com.caelum.vraptor.deserialization.Deserializer deserializerFor(java.lang.String,br.com.caelum.vraptor.ioc.Container)>/@parameter1
<br.com.caelum.vraptor.deserialization.DefaultDeserializers: br.com.caelum.vraptor.deserialization.Deserializer subpathDeserializerFor(java.lang.String,br.com.caelum.vraptor.ioc.Container)>/@parameter1
<br.com.caelum.vraptor.deserialization.DefaultDeserializers: br.com.caelum.vraptor.deserialization.Deserializer subpathDeserializerForPlus(java.lang.String,br.com.caelum.vraptor.ioc.Container)>/@parameter1
<br.com.caelum.vraptor.deserialization.DefaultDeserializers: br.com.caelum.vraptor.deserialization.Deserializer subpathDeserializerForPlus(java.lang.String,br.com.caelum.vraptor.ioc.Container)>/container#_0
<org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/context#_0
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.view.LinkToHandler: void <init>(javax.servlet.ServletContext,br.com.caelum.vraptor.http.route.Router)>/router#_0
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String getAttribute(java.lang.String)>/@parameter0
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher hasItem(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher equalTo(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher not(java.lang.Object)>/@parameter0
<org.hamcrest.Matchers: org.hamcrest.Matcher sameInstance(java.lang.Object)>/@parameter0
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object)>/@parameter1
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object,boolean)>/@parameter1
<ognl.EvaluationPool: void recycle(ognl.Evaluation)>/@parameter0
<ognl.EvaluationPool: void recycleAll(ognl.Evaluation)>/@parameter0
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/beanName#_0
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/bean#_0
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/name#_0
<com.thoughtworks.xstream.core.util.FastField: void <init>(java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.core.util.FastField: void <init>(java.lang.String,java.lang.String)>/name#_0
<com.thoughtworks.xstream.core.util.FastField: void <init>(java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.core.util.FastField: void <init>(java.lang.Class,java.lang.String)>/definedIn#_0
<com.thoughtworks.xstream.core.util.FastField: void <init>(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$17: void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$17: void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$17: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.core.annotation.AnnotationUtils: java.util.Map getAnnotationAttributes(java.lang.annotation.Annotation,boolean)>/@parameter0
<com.thoughtworks.xstream.mapper.AttributeMapper: boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.basic.URIConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.URIConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.basic.URIConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.aop.support.AopUtils: boolean isCglibProxy(java.lang.Object)>/@parameter0
<org.springframework.aop.support.AopUtils: boolean isCglibProxy(java.lang.Object)>/object#_0
<org.springframework.aop.support.AopUtils: java.lang.Class getTargetClass(java.lang.Object)>/@parameter0
<ognl.ASTAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTAnd: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTAnd: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<br.com.caelum.iogi.reflection.NewObject$JavaSetter: void <init>(java.lang.reflect.Method,java.lang.Object)>/@parameter0
<javassist.bytecode.stackmap.BasicBlock$Mark: int compareTo(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerOn(java.lang.Class,boolean)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerOn(java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy$3: void <init>(org.springframework.beans.factory.support.SimpleInstantiationStrategy,java.lang.reflect.Method)>/@parameter1
<org.springframework.beans.factory.support.SimpleInstantiationStrategy$3: void <init>(org.springframework.beans.factory.support.SimpleInstantiationStrategy,java.lang.reflect.Method)>/l2#_0
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void registerFactory(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringRegistry: void register(java.lang.Class,boolean)>/@parameter0
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder: void <init>(br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder: void <init>(br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.proxy.Proxifier)>/router#_0
<br.com.caelum.vraptor.http.DefaultResourceTranslator: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.http.DefaultResourceTranslator: void <init>(br.com.caelum.vraptor.http.route.Router)>/router#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: void <init>(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: void <init>(java.lang.Class,java.lang.String)>/clazz#_0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: void <init>(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: void <init>(java.lang.Class,java.lang.String)>/name#_0
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: boolean isProxy(java.lang.Class)>/@parameter0
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: void initialize(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: org.hibernate.proxy.LazyInitializer getInitializer(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: java.lang.Class getActualClass(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getMapper(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getMapper(java.lang.Class)>/definedIn#_0
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.http.route.DefaultRouter: void <init>(br.com.caelum.vraptor.http.route.RoutesConfiguration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator)>/@parameter3
<br.com.caelum.vraptor.http.route.DefaultRouter: void <init>(br.com.caelum.vraptor.http.route.RoutesConfiguration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.TypeFinder,br.com.caelum.vraptor.core.Converters,br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.http.route.Evaluator)>/converters#_0
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.ImplicitCollectionMapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultRouter: void add(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouter: void checkIfThereIsAnotherRoute(java.lang.String,br.com.caelum.vraptor.resource.HttpMethod,java.util.Iterator,br.com.caelum.vraptor.http.route.Route)>/@parameter3
<br.com.caelum.vraptor.http.route.DefaultRouter: void checkIfThereIsAnotherRoute(java.lang.String,br.com.caelum.vraptor.resource.HttpMethod,java.util.Iterator,br.com.caelum.vraptor.http.route.Route)>/route#_0
<com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy: void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder)>/@parameter1
<br.com.caelum.vraptor.view.DefaultLogicResultTest$1: boolean matchesSafely(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.view.DefaultLogicResultTest$1: boolean matchesSafely(br.com.caelum.vraptor.resource.ResourceMethod)>/item#_0
<br.com.caelum.vraptor.view.DefaultLogicResultTest$1: boolean matchesSafely(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String serializedClass(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String attributeForAlias(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String attributeForAlias(java.lang.String)>/alias#_0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/definedIn#_0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/@parameter2
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/itemFieldName#_0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)>/itemFieldName#_0
<com.thoughtworks.xstream.mapper.DefaultMapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.DefaultMapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>/fieldName#_0
<com.thoughtworks.xstream.mapper.DefaultMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.DefaultMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/fieldName#_0
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/serialized#_0
<com.thoughtworks.xstream.mapper.DefaultMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.mapper.DefaultMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/attribute#_0
<org.mockito.internal.util.reflection.FieldSetter: void set(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/info#_0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/@parameter1
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void <init>(br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Validator)>/validator#_0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject: void addText(java.lang.String)>/@parameter0
<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/@parameter1
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/@parameter1
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/@parameter2
<org.springframework.util.ResourceUtils: boolean isUrl(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.core.TreeUnmarshaller: void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.TreeUnmarshaller: void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)>/type#_0
<com.thoughtworks.xstream.core.TreeUnmarshaller: void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)>/@parameter2
<org.springframework.beans.factory.BeanIsAbstractException: void <init>(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService$1: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService$1: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<com.google.common.base.Predicates: com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: void <init>(org.springframework.beans.PropertyEditorRegistrySupport,java.lang.Object)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: void <init>(org.springframework.beans.PropertyEditorRegistrySupport,java.lang.Object)>/targetObject#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class)>/@parameter2
<org.mockito.cglib.core.EmitUtils$15: java.lang.Object transform(java.lang.Object)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter2
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter3
<com.google.common.base.Predicates: java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate)>/@parameter0
<com.google.common.base.Predicates: java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate)>/first#_0
<com.google.common.base.Predicates: java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate)>/@parameter1
<com.google.common.base.Predicates: java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate)>/second#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/currentConvertedValue#_0
<org.springframework.beans.TypeConverterDelegate: java.beans.PropertyEditor findDefaultEditor(java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/newValue#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/@parameter2
<org.mockito.internal.creation.jmock.SearchingClassLoader: void <init>(java.lang.ClassLoader,java.lang.ClassLoader)>/@parameter0
<org.mockito.internal.creation.jmock.SearchingClassLoader: void <init>(java.lang.ClassLoader,java.lang.ClassLoader)>/@parameter1
<org.mockito.internal.creation.jmock.SearchingClassLoader: void <init>(java.lang.ClassLoader,java.lang.ClassLoader)>/nextToSearch#_0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertTextValue(java.lang.Object,java.lang.String,java.beans.PropertyEditor)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertTextValue(java.lang.Object,java.lang.String,java.beans.PropertyEditor)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertToTypedArray(java.lang.Object,java.lang.String,java.lang.Class)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter2
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter2
<br.com.caelum.vraptor.interceptor.download.FileDownload: void write(javax.servlet.http.HttpServletResponse)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildIndexedPropertyName(java.lang.String,int)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildKeyedPropertyName(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.TypeConverterDelegate: java.lang.String buildKeyedPropertyName(java.lang.String,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarSerializer: com.google.gson.JsonElement serialize(java.util.Calendar,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarSerializer: com.google.gson.JsonElement serialize(java.util.Calendar,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/calendar#_0
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarSerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object callWriteReplace(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: boolean supportsReadObject(java.lang.Class,boolean)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: void callReadObject(java.lang.Class,java.lang.Object,java.io.ObjectInputStream)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: boolean supportsWriteObject(java.lang.Class,boolean)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/@parameter0
<org.springframework.beans.propertyeditors.URIEditor: void setAsText(java.lang.String)>/@parameter0
<ognl.Ognl: java.lang.Object parseExpression(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.util.StringUtils: java.lang.String capitalize(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.util.StringUtils: java.lang.String capitalize(java.lang.String)>/name#_0
<ognl.Ognl: void setTypeConverter(java.util.Map,ognl.TypeConverter)>/@parameter1
<ognl.Ognl: void setValue(java.lang.Object,java.util.Map,java.lang.Object,java.lang.Object)>/@parameter0
<org.mockito.cglib.core.EmitUtils$1: java.lang.Object transform(java.lang.Object)>/@parameter0
<org.springframework.beans.propertyeditors.UUIDEditor: void setAsText(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.MethodValueSupportConverter: boolean canConvert(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.MethodValueSupportConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: void <init>(org.springframework.core.MethodParameter,java.lang.Class)>/@parameter1
<org.springframework.core.convert.TypeDescriptor: void <init>(org.springframework.core.MethodParameter,java.lang.Class)>/type#_0
<br.com.caelum.vraptor.restfulie.serialization.MethodValueSupportConverter: void writeTag(java.lang.Object,java.lang.reflect.Method,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: void <init>(java.lang.reflect.Field,int,java.lang.Class)>/@parameter2
<org.springframework.core.convert.TypeDescriptor: void <init>(java.lang.reflect.Field,int,java.lang.Class)>/type#_0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/provider#_0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter1
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/parameters#_0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/@parameter2
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.http.iogi.InstantiatorWithErrors)>/instantiator#_0
<org.springframework.core.convert.TypeDescriptor: void <init>(java.lang.Object)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: void <init>(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: java.lang.Object instantiateOrAddError(br.com.caelum.iogi.parameters.Parameters,java.util.List,br.com.caelum.iogi.reflection.Target)>/@parameter2
<org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>/@parameter0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: br.com.caelum.iogi.parameters.Parameters parseParameters(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: br.com.caelum.iogi.parameters.Parameters parseParameters(javax.servlet.http.HttpServletRequest)>/request#_0
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor(java.lang.Object)>/@parameter0
<org.springframework.expression.common.ExpressionUtils: java.lang.Object convert(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: java.lang.Object convertTypedValue(org.springframework.expression.EvaluationContext,org.springframework.expression.TypedValue,java.lang.Class)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: java.lang.Object convertTypedValue(org.springframework.expression.EvaluationContext,org.springframework.expression.TypedValue,java.lang.Class)>/typedValue#_0
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor(java.lang.Object)>/@parameter0
<org.springframework.expression.common.ExpressionUtils: int toInt(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: int toInt(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/typedValue#_0
<org.springframework.expression.common.ExpressionUtils: boolean toBoolean(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: boolean toBoolean(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/typedValue#_0
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor(java.lang.Object)>/@parameter0
<org.springframework.expression.common.ExpressionUtils: double toDouble(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: double toDouble(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/typedValue#_0
<org.springframework.expression.common.ExpressionUtils: long toLong(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: long toLong(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/typedValue#_0
<org.springframework.util.ClassUtils: java.lang.Class resolvePrimitiveClassName(java.lang.String)>/@parameter0
<org.springframework.expression.common.ExpressionUtils: char toChar(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: char toChar(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/typedValue#_0
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.expression.common.ExpressionUtils: short toShort(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: short toShort(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/typedValue#_0
<org.springframework.expression.common.ExpressionUtils: float toFloat(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: float toFloat(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/typedValue#_0
<org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Class)>/clazz#_0
<org.springframework.expression.common.ExpressionUtils: byte toByte(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/@parameter1
<org.springframework.expression.common.ExpressionUtils: byte toByte(org.springframework.expression.TypeConverter,org.springframework.expression.TypedValue)>/typedValue#_0
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor forElementType(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.String)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.String getQualifiedName(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.String getQualifiedNameForArray(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.String getQualifiedNameForArray(java.lang.Class)>/clazz#_0
<org.springframework.util.ClassUtils: java.lang.String getDescriptiveType(java.lang.Object)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.String getDescriptiveType(java.lang.Object)>/value#_0
<org.picocontainer.converters.BuiltInConverters: java.lang.Object convert(java.lang.String,java.lang.reflect.Type)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.reflect.Constructor getConstructorIfAvailable(java.lang.Class,java.lang.Class[])>/@parameter0
<org.springframework.util.ClassUtils: int getMethodCountForName(java.lang.Class,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: org.joda.time.DateMidnight convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverter: org.joda.time.DateMidnight convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor forObject(java.lang.Object)>/@parameter0
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor valueOf(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.reflect.Method getStaticMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/@parameter0
<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>/@parameter0
<org.springframework.util.ClassUtils: boolean isPrimitiveWrapper(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: boolean isPrimitiveOrWrapper(java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: java.lang.Class resolvePrimitiveIfNecessary(java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/existingBean#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.util.ClassUtils: boolean isAssignable(java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.util.ClassUtils: boolean isAssignable(java.lang.Class,java.lang.Class)>/@parameter1
<org.springframework.beans.propertyeditors.InputSourceEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/existingBean#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/@parameter1
<com.google.gson.JsonObject: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.util.ClassUtils: boolean isAssignableValue(java.lang.Class,java.lang.Object)>/@parameter0
<org.springframework.util.ClassUtils: boolean isAssignableValue(java.lang.Class,java.lang.Object)>/@parameter1
<org.springframework.util.ClassUtils: boolean isAssignableValue(java.lang.Class,java.lang.Object)>/value#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object createBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter0
<com.thoughtworks.xstream.core.util.PresortedMap: void <init>(java.util.Comparator)>/@parameter0
<com.thoughtworks.xstream.core.util.PresortedMap: void <init>(java.util.Comparator,com.thoughtworks.xstream.core.util.PresortedMap$ArraySet)>/@parameter0
<com.thoughtworks.xstream.core.util.PresortedMap: void <init>(java.util.Comparator,com.thoughtworks.xstream.core.util.PresortedMap$ArraySet)>/comparator#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class predictBeanType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/@parameter0
<com.thoughtworks.xstream.core.util.PresortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.PresortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/@parameter2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/bean#_0
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getNonSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyMergedBeanDefinitionPostProcessors(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)>/@parameter2
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object resolveBeforeInstantiation(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: java.lang.Object copyOf(java.lang.Object,int,int)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInstantiation(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInstantiation(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper createBeanInstance(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1: void <init>(org.springframework.beans.factory.support.FactoryBeanRegistrySupport,org.springframework.beans.factory.FactoryBean)>/@parameter1
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1: void <init>(org.springframework.beans.factory.support.FactoryBeanRegistrySupport,org.springframework.beans.factory.FactoryBean)>/l2#_0
<br.com.caelum.vraptor.resource.HttpMethod: br.com.caelum.vraptor.resource.HttpMethod of(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.resource.HttpMethod: br.com.caelum.vraptor.resource.HttpMethod of(javax.servlet.http.HttpServletRequest)>/request#_0
<ognl.DefaultMemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter0
<ognl.DefaultMemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter1
<ognl.DefaultMemberAccess: java.lang.Object setup(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter3
<ognl.DefaultMemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/@parameter0
<ognl.DefaultMemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/context#_0
<ognl.DefaultMemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/@parameter1
<ognl.DefaultMemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/target#_0
<ognl.DefaultMemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/@parameter3
<ognl.DefaultMemberAccess: void restore(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object)>/propertyName#_0
<ognl.DefaultMemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter0
<ognl.DefaultMemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/context#_0
<ognl.DefaultMemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter1
<ognl.DefaultMemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/target#_0
<ognl.DefaultMemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter2
<ognl.DefaultMemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/member#_0
<ognl.DefaultMemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/@parameter3
<ognl.DefaultMemberAccess: boolean isAccessible(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String)>/propertyName#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.reflect.Constructor[] determineConstructorsFromBeanPostProcessors(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.reflect.Constructor[] determineConstructorsFromBeanPostProcessors(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper instantiateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByName(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void autowireByType(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.MutablePropertyValues)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$31: void <init>(java.lang.Class,com.google.gson.TypeAdapter)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$31: void <init>(java.lang.Class,com.google.gson.TypeAdapter)>/l2#_0
<com.thoughtworks.xstream.converters.collections.TreeSetConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: boolean isExcludedFromDependencyCheck(java.beans.PropertyDescriptor)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void checkDependencies(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,java.beans.PropertyDescriptor[],org.springframework.beans.PropertyValues)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/@parameter0
<br.com.caelum.iogi.collections.IndexedListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<br.com.caelum.iogi.collections.IndexedListInstantiator: br.com.caelum.iogi.reflection.Target elementTarget(br.com.caelum.iogi.reflection.Target)>/@parameter0
<org.springframework.util.PropertyPlaceholderHelper: java.lang.String replacePlaceholders(java.lang.String,org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver)>/@parameter0
<org.springframework.util.PropertyPlaceholderHelper: java.lang.String parseStringValue(java.lang.String,org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver,java.util.Set)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object convertForProperty(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapper,org.springframework.beans.TypeConverter)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object convertForProperty(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapper,org.springframework.beans.TypeConverter)>/@parameter1
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/provider#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter1
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: com.thoughtworks.xstream.XStream getConfiguredXStream(java.lang.reflect.Method,java.lang.Class[])>/@parameter0
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void chooseParam(java.lang.Class[],java.lang.Object[],java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void aliasParams(java.lang.reflect.Method,java.lang.Class[],com.thoughtworks.xstream.XStream)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeAwareMethods(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeAwareMethods(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeInitMethods(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeInitMethods(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeCustomInitMethod(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeCustomInitMethod(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object postProcessObjectFromFactoryBean(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void removeSingleton(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void access$0(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void access$0(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.core.convert.support.StringToLocaleConverter: java.util.Locale convert(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.StringToLocaleConverter: java.lang.Object convert(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$13: void write(com.google.gson.stream.JsonWriter,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.core.util.PresortedSet: void <init>(java.util.Comparator)>/@parameter0
<com.thoughtworks.xstream.core.util.PresortedSet: void <init>(java.util.Comparator,java.util.Collection)>/@parameter0
<com.thoughtworks.xstream.core.util.PresortedSet: void <init>(java.util.Comparator,java.util.Collection)>/comparator#_0
<com.google.gson.internal.bind.TypeAdapters$13: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.util.PresortedSet: boolean add(java.lang.Object)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$2: java.lang.String getSystemAttribute(java.lang.String)>/@parameter0
<org.mockito.asm.util.AbstractVisitor: void printList(java.io.PrintWriter,java.util.List)>/@parameter1
<org.mockito.asm.util.AbstractVisitor: void printList(java.io.PrintWriter,java.util.List)>/l#_0
<com.thoughtworks.xstream.core.util.PresortedMap$1: void <init>(com.thoughtworks.xstream.core.util.PresortedMap,java.lang.Object,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.util.PresortedMap$1: void <init>(com.thoughtworks.xstream.core.util.PresortedMap,java.lang.Object,java.lang.Object)>/l2#_0
<com.thoughtworks.xstream.core.util.PresortedMap$1: void <init>(com.thoughtworks.xstream.core.util.PresortedMap,java.lang.Object,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.core.util.PresortedMap$1: void <init>(com.thoughtworks.xstream.core.util.PresortedMap,java.lang.Object,java.lang.Object)>/l3#_0
<br.com.caelum.iogi.reflection.NewObject$Setter: void <init>(java.lang.reflect.Method,java.lang.Object)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$Setter: void <init>(java.lang.reflect.Method,java.lang.Object)>/setter#_0
<br.com.caelum.iogi.reflection.NewObject$Setter: void set(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$Setter: void set(java.lang.Object)>/argument#_0
<br.com.caelum.iogi.reflection.NewObject$Setter: br.com.caelum.iogi.reflection.Target access$100(br.com.caelum.iogi.reflection.NewObject$Setter)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$Setter: br.com.caelum.iogi.reflection.Target access$100(br.com.caelum.iogi.reflection.NewObject$Setter)>/x0#_0
<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.ComponentFactoryBean: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/@parameter1
<com.google.gson.internal.Excluder$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.ObjectToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ObjectToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.ObjectToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.ObjectToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.thoughtworks.xstream.converters.extended.SqlDateConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.SqlDateConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.extended.SqlDateConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.PackageAliasingMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.PackageAliasingMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.PackageAliasingMapper: java.lang.Class realClass(java.lang.String)>/elementName#_0
<ognl.ASTBitNegate: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.StringToBooleanConverter: java.lang.Boolean convert(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.StringToBooleanConverter: java.lang.Object convert(java.lang.Object)>/@parameter0
<org.springframework.core.io.ResourceEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.core.io.ResourceEditor: java.lang.String resolvePath(java.lang.String)>/@parameter0
<org.codehaus.jettison.json.JSONObject$Null: boolean equals(java.lang.Object)>/@parameter0
<org.codehaus.jettison.json.JSONObject$Null: boolean equals(java.lang.Object)>/object#_0
<org.mockito.internal.stubbing.StubberImpl: java.lang.Object when(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter1
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/router#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter2
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/request#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter3
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/response#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter4
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/container#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter5
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/resolver#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter6
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/extractor#_0
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/@parameter7
<br.com.caelum.vraptor.view.DefaultLogicResult: void <init>(br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router,br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.view.FlashScope,br.com.caelum.vraptor.core.MethodInfo)>/flash#_0
<com.google.gson.internal.bind.TypeAdapters$4: void write(com.google.gson.stream.JsonWriter,java.lang.Boolean)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$4: void write(com.google.gson.stream.JsonWriter,java.lang.Boolean)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$4: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: void <init>(br.com.caelum.iogi.spi.LocaleProvider)>/@parameter0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: void <init>(br.com.caelum.iogi.spi.LocaleProvider)>/localeProvider#_0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.Class)>/@parameter0
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.Class)>/context#_0
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.Class)>/@parameter1
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter0
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/target#_0
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter2
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/member#_0
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter3
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/propertyName#_0
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter4
<br.com.caelum.vraptor.ioc.pico.DefaultComponentFactoryRegistry: void register(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.StringConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.StringConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.basic.StringConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.ReflectionConverter: boolean canConvert(java.lang.Class)>/@parameter0
<ognl.ASTStaticMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTStaticMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<org.hamcrest.core.StringEndsWith: boolean evalSubstringOf(java.lang.String)>/@parameter0
<org.hamcrest.core.StringEndsWith: boolean evalSubstringOf(java.lang.String)>/s#_0
<com.google.gson.internal.bind.TypeAdapters$22$1: void <init>(com.google.gson.internal.bind.TypeAdapters$22,com.google.gson.TypeAdapter)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$22$1: void <init>(com.google.gson.internal.bind.TypeAdapters$22,com.google.gson.TypeAdapter)>/l2#_0
<com.google.gson.internal.bind.TypeAdapters$22$1: void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$22$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.mockito.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>/@parameter0
<org.mockito.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>/value#_0
<org.mockito.cglib.core.ReflectUtils$3: void <init>(java.lang.reflect.Member,int,org.mockito.cglib.core.Signature)>/@parameter0
<org.mockito.cglib.core.ReflectUtils$3: void <init>(java.lang.reflect.Member,int,org.mockito.cglib.core.Signature)>/l1#_0
<org.springframework.beans.BeanWrapperImpl$5: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/@parameter1
<org.springframework.beans.BeanWrapperImpl$5: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/l2#_0
<com.thoughtworks.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType convertToMimeType(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: double extractQualifier(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Character)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$18: void write(com.google.gson.stream.JsonWriter,java.net.URL)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$18: void write(com.google.gson.stream.JsonWriter,java.net.URL)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$18: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/@parameter0
<org.springframework.core.io.support.ResourceArrayPropertyEditor: java.lang.String resolvePath(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.collections.BitSetConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.BitSetConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.collections.BitSetConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.google.common.base.Predicates$AndPredicate: boolean apply(java.lang.Object)>/@parameter0
<com.google.common.base.Predicates$AndPredicate: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.deserialization.DeserializesHandler: void <init>(br.com.caelum.vraptor.deserialization.Deserializers)>/@parameter0
<br.com.caelum.vraptor.deserialization.DeserializesHandler: void <init>(br.com.caelum.vraptor.deserialization.Deserializers)>/deserializers#_0
<com.google.gson.internal.bind.TypeAdapters$24: void write(com.google.gson.stream.JsonWriter,java.util.Locale)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$24: void write(com.google.gson.stream.JsonWriter,java.util.Locale)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$24: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.google.common.collect.AbstractMultiset: boolean contains(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultiset: boolean add(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultiset: boolean remove(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.StringToCharacterConverter: java.lang.Character convert(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.StringToCharacterConverter: java.lang.Object convert(java.lang.Object)>/@parameter0
<ognl.ASTUnsignedShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/@parameter0
<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/@parameter1
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object createProxy(java.lang.Class[],org.picocontainer.PicoContainer,java.lang.ClassLoader)>/@parameter0
<org.picocontainer.behaviors.HiddenImplementation: void verifyInterfacesOnly(java.lang.Class[])>/@parameter0
<org.picocontainer.behaviors.HiddenImplementation: void verifyInterfacesOnly(java.lang.Class[])>/classes#_0
<org.joda.time.format.DateTimeFormatterBuilder: boolean isPrinter(java.lang.Object)>/@parameter0
<org.joda.time.format.DateTimeFormatterBuilder: boolean isParser(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouter$3: boolean apply(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouter$3: boolean apply(br.com.caelum.vraptor.http.route.Route)>/route#_0
<br.com.caelum.vraptor.http.route.DefaultRouter$3: boolean apply(java.lang.Object)>/@parameter0
<ognl.ASTNotIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/req#_0
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter1
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/res#_0
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter3
<br.com.caelum.vraptor.view.DefaultPageResult: void <init>(br.com.caelum.vraptor.http.MutableRequest,br.com.caelum.vraptor.http.MutableResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.view.PathResolver,br.com.caelum.vraptor.proxy.Proxifier)>/resolver#_0
<com.google.gson.internal.bind.TypeAdapters$15: void write(com.google.gson.stream.JsonWriter,java.math.BigInteger)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$15: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<ognl.IteratorPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.IteratorPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.IteratorPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.IteratorPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/target#_0
<ognl.IteratorPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.IteratorPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<ognl.IteratorPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/value#_0
<com.google.common.collect.Maps$KeySet: boolean contains(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.parameters.Parameters: java.util.List forTarget(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.parameters.Parameters: java.util.List forTarget(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameter namedAfter(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.parameters.Parameters: void assertFoundAtMostOneTarget(br.com.caelum.iogi.reflection.Target,java.util.Collection)>/@parameter0
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameters focusedOn(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.parameters.Parameters: boolean hasRelatedTo(br.com.caelum.iogi.reflection.Target)>/@parameter0
<org.springframework.context.event.GenericApplicationListenerAdapter: void <init>(org.springframework.context.ApplicationListener)>/@parameter0
<br.com.caelum.iogi.parameters.Parameters: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.io.naming.NoNameCoder: java.lang.String decodeAttribute(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.naming.NoNameCoder: java.lang.String decodeAttribute(java.lang.String)>/attributeName#_0
<com.thoughtworks.xstream.io.naming.NoNameCoder: java.lang.String decodeNode(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.naming.NoNameCoder: java.lang.String decodeNode(java.lang.String)>/nodeName#_0
<com.thoughtworks.xstream.io.naming.NoNameCoder: java.lang.String encodeAttribute(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.naming.NoNameCoder: java.lang.String encodeAttribute(java.lang.String)>/name#_0
<org.picocontainer.parameters.BasicComponentParameter: java.lang.Object convert(org.picocontainer.Converters,java.lang.Object,java.lang.reflect.Type)>/@parameter1
<org.picocontainer.parameters.BasicComponentParameter: void removeExcludedAdapterIfApplicable(java.lang.Object,java.util.List)>/@parameter0
<org.picocontainer.parameters.BasicComponentParameter: java.lang.Object access$100(org.picocontainer.Converters,java.lang.Object,java.lang.reflect.Type)>/@parameter1
<br.com.caelum.vraptor.http.route.DefaultRouter$1: boolean apply(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouter$1: boolean apply(br.com.caelum.vraptor.http.route.Route)>/route#_0
<br.com.caelum.vraptor.http.route.DefaultRouter$1: boolean apply(java.lang.Object)>/@parameter0
<org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>/object#_0
<org.springframework.util.Assert: void hasLength(java.lang.String,java.lang.String)>/@parameter0
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter0
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/target#_0
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter2
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/field#_0
<org.springframework.util.Assert: void hasText(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService$MatchableConverters: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService$MatchableConverters: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<ognl.MapPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.MapPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.MapPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.MapPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.MapPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Method,int)>/@parameter0
<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Method,int,int)>/@parameter0
<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Constructor,int)>/@parameter0
<org.springframework.core.MethodParameter: void <init>(java.lang.reflect.Constructor,int,int)>/@parameter0
<com.google.gson.internal.LinkedTreeMap$Node: void <init>(com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)>/@parameter1
<com.google.gson.internal.LinkedTreeMap$Node: void <init>(com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)>/key#_0
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.core.MethodParameter: void setParameterType(java.lang.Class)>/@parameter0
<org.springframework.core.MethodParameter: void setParameterType(java.lang.Class)>/parameterType#_0
<com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Time)>/@parameter1
<com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.core.MethodParameter: org.springframework.core.MethodParameter forMethodOrConstructor(java.lang.Object,int)>/@parameter0
<br.com.caelum.vraptor.http.route.PriorityRoutesList: java.util.Set getSetFor(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.http.route.PriorityRoutesList: java.util.Set getSetFor(br.com.caelum.vraptor.http.route.Route)>/e#_0
<br.com.caelum.vraptor.http.route.PriorityRoutesList: boolean add(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<org.springframework.core.convert.support.ArrayToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<br.com.caelum.vraptor.http.route.PriorityRoutesList: boolean add(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void associateId(java.lang.Object,java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.lang.Object lookupId(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary: boolean containsId(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void removeId(java.lang.Object)>/@parameter0
<junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>/value#_0
<junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.converters.collections.SingletonMapConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.SingletonMapConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.reflection.FieldKey: void <init>(java.lang.String,java.lang.Class,int)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.FieldKey: void <init>(java.lang.String,java.lang.Class,int)>/fieldName#_0
<com.thoughtworks.xstream.converters.reflection.FieldKey: boolean equals(java.lang.Object)>/@parameter0
<org.mockito.cglib.proxy.Enhancer$2: java.lang.Object transform(java.lang.Object)>/@parameter0
<javax.servlet.ServletResponseWrapper: void <init>(javax.servlet.ServletResponse)>/@parameter0
<javax.servlet.ServletResponseWrapper: void <init>(javax.servlet.ServletResponse)>/response#_0
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: java.lang.Double convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: java.lang.Double convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: java.lang.Double convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<ognl.ASTShiftLeft: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue executeFunctionJLRMethod(org.springframework.expression.spel.ExpressionState,java.lang.reflect.Method)>/@parameter1
<com.google.common.collect.AbstractMapBasedMultiset: int count(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMapBasedMultiset: int add(java.lang.Object,int)>/@parameter0
<org.mockito.cglib.proxy.Enhancer$5: void processCase(java.lang.Object,org.mockito.asm.Label)>/@parameter0
<org.springframework.core.convert.support.StringToEnumConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)>/@parameter0
<com.google.common.collect.AbstractMapBasedMultiset: int remove(java.lang.Object,int)>/@parameter0
<com.thoughtworks.xstream.converters.extended.LookAndFeelConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>/@parameter1
<org.hamcrest.StringDescription: void append(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.ByteArrayPropertyEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.ByteArrayPropertyEditor: void setAsText(java.lang.String)>/text#_0
<org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.containers.ImmutablePicoContainer: void <init>(org.picocontainer.PicoContainer)>/@parameter0
<org.picocontainer.containers.ImmutablePicoContainer: void <init>(org.picocontainer.PicoContainer)>/delegate#_0
<org.picocontainer.containers.ImmutablePicoContainer: java.lang.Object getComponent(java.lang.Object)>/@parameter0
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Object)>/@parameter0
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding)>/@parameter0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: java.lang.Short convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: java.lang.Short convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.core.convert.support.NumberToNumberConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)>/@parameter0
<org.springframework.beans.BeanWrapperImpl$6: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method,java.lang.Object)>/@parameter1
<org.springframework.beans.BeanWrapperImpl$6: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method,java.lang.Object)>/l2#_0
<org.springframework.beans.BeanWrapperImpl$6: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method,java.lang.Object)>/@parameter2
<org.springframework.beans.BeanWrapperImpl$6: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method,java.lang.Object)>/l3#_0
<com.thoughtworks.xstream.core.util.Primitives: boolean isBoxed(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.core.util.Primitives: java.lang.Class primitiveType(java.lang.String)>/@parameter0
<javassist.CtBehavior: void <init>(javassist.CtClass,javassist.bytecode.MethodInfo)>/@parameter1
<javassist.CtBehavior: void <init>(javassist.CtClass,javassist.bytecode.MethodInfo)>/minfo#_0
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.context.expression.MapAccessor$MapAccessException: void <init>(java.lang.String)>/@parameter0
<org.springframework.context.expression.MapAccessor$MapAccessException: void <init>(java.lang.String)>/key#_0
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>/@parameter0
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchCandidates(java.util.List,java.lang.reflect.Method)>/@parameter1
<org.springframework.core.convert.support.ArrayToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ArrayToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.ArrayToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.BridgeMethodResolver: boolean isBridgedCandidateFor(java.lang.reflect.Method,java.lang.reflect.Method)>/@parameter0
<org.springframework.core.BridgeMethodResolver: boolean isBridgedCandidateFor(java.lang.reflect.Method,java.lang.reflect.Method)>/candidateMethod#_0
<org.springframework.core.BridgeMethodResolver: boolean isBridgedCandidateFor(java.lang.reflect.Method,java.lang.reflect.Method)>/@parameter1
<org.hamcrest.core.IsCollectionContaining: boolean matchesSafely(java.lang.Iterable,org.hamcrest.Description)>/@parameter0
<org.hamcrest.core.IsCollectionContaining: boolean matchesSafely(java.lang.Iterable,org.hamcrest.Description)>/collection#_0
<org.springframework.core.BridgeMethodResolver: boolean isBridgeMethodFor(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/@parameter0
<org.springframework.core.BridgeMethodResolver: boolean isBridgeMethodFor(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/@parameter1
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findGenericDeclaration(java.lang.reflect.Method)>/@parameter0
<org.hamcrest.core.IsCollectionContaining: org.hamcrest.Matcher hasItem(java.lang.Object)>/@parameter0
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/@parameter0
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/genericMethod#_0
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/@parameter1
<org.springframework.core.BridgeMethodResolver: boolean isResolvedTypeMatch(java.lang.reflect.Method,java.lang.reflect.Method,java.util.Map)>/candidateMethod#_0
<org.hamcrest.core.IsCollectionContaining: boolean matchesSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchForMatch(java.lang.Class,java.lang.reflect.Method)>/@parameter0
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchForMatch(java.lang.Class,java.lang.reflect.Method)>/@parameter1
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchForMatch(java.lang.Class,java.lang.reflect.Method)>/bridgeMethod#_0
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: void <init>(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: void <init>(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: void <init>(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: void <init>(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy$1: void <init>(org.springframework.beans.factory.support.SimpleInstantiationStrategy,java.lang.Class)>/@parameter1
<org.springframework.beans.factory.support.SimpleInstantiationStrategy$1: void <init>(org.springframework.beans.factory.support.SimpleInstantiationStrategy,java.lang.Class)>/l2#_0
<javax.servlet.jsp.jstl.core.Config: java.lang.Object get(javax.servlet.ServletRequest,java.lang.String)>/@parameter0
<javax.servlet.jsp.jstl.core.Config: java.lang.Object get(javax.servlet.ServletRequest,java.lang.String)>/request#_0
<javax.servlet.jsp.jstl.core.Config: java.lang.Object get(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<javax.servlet.jsp.jstl.core.Config: java.lang.Object get(javax.servlet.ServletContext,java.lang.String)>/context#_0
<org.mockito.asm.Frame: void push(org.mockito.asm.ClassWriter,java.lang.String)>/@parameter1
<org.mockito.asm.Frame: int type(org.mockito.asm.ClassWriter,java.lang.String)>/@parameter1
<org.mockito.asm.Frame: int type(org.mockito.asm.ClassWriter,java.lang.String)>/desc#_0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: java.util.Date convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: java.util.Date convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<org.picocontainer.lifecycle.AbstractMonitoringLifecycleStrategy: boolean isLazy(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.lifecycle.AbstractMonitoringLifecycleStrategy: boolean isLazy(org.picocontainer.ComponentAdapter)>/adapter#_0
<javassist.compiler.MemberResolver$Method: void <init>(javassist.CtClass,javassist.bytecode.MethodInfo,int)>/@parameter1
<javassist.compiler.MemberResolver$Method: void <init>(javassist.CtClass,javassist.bytecode.MethodInfo,int)>/i#_0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.ClassReflectionProvider getClassReflectionProvider(java.lang.Class)>/@parameter0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.FieldReflectionProvider getFieldReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.FieldReflectionProvider getFieldReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/@parameter2
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.ConstructorReflectionProvider getConstructorReflectionProvider(java.lang.Class,java.lang.reflect.Constructor)>/@parameter0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.MethodReflectionProvider getMethodReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.MethodReflectionProvider getMethodReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter1
<net.vidageek.mirror.provider.java.DefaultMirrorReflectionProvider: net.vidageek.mirror.provider.MethodReflectionProvider getMethodReflectionProvider(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter2
<br.com.caelum.iogi.conversion.StringConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.StringConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$2: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$2: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/l2#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$2: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/@parameter3
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$2: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/l4#_0
<br.com.caelum.iogi.conversion.StringConverter: java.lang.String convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.StringConverter: java.lang.String convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.StringConverter: java.lang.String convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.StringConverter: java.lang.String convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.StringConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.StringConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<ognl.ASTConst: void setValue(java.lang.Object)>/@parameter0
<ognl.ASTConst: void setValue(java.lang.Object)>/value#_0
<ognl.ASTConst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTConst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentAdapter: void <init>(java.lang.Class,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.ioc.pico.PicoComponentAdapter: void <init>(java.lang.Class,java.lang.Class)>/componentFactoryClass#_0
<org.picocontainer.PicoBuilder: void addChildToParent(org.picocontainer.MutablePicoContainer)>/@parameter0
<org.picocontainer.PicoBuilder: org.picocontainer.ComponentFactory buildComponentFactory(org.picocontainer.DefaultPicoContainer,org.picocontainer.ComponentFactory,java.util.Stack)>/@parameter1
<org.codehaus.jettison.util.FastStack: void push(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.route.RulesTest$1: void <init>(br.com.caelum.vraptor.http.route.RulesTest,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.iogi.util.Assert: void isNotARawType(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.util.Assert: void isNotARawType(br.com.caelum.iogi.reflection.Target)>/target#_0
<org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.beans.PropertyEditor getPropertyEditor(java.lang.Class)>/@parameter0
<org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder: java.beans.PropertyEditor access$1(org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder,java.lang.Class)>/@parameter1
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentFactory wrap(org.picocontainer.ComponentFactory)>/@parameter0
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentFactory wrap(org.picocontainer.ComponentFactory)>/delegate#_0
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter0
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter1
<br.com.caelum.vraptor.VRaptor: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@parameter2
<br.com.caelum.vraptor.VRaptor: void init(javax.servlet.FilterConfig)>/@parameter0
<br.com.caelum.vraptor.VRaptor: void init(javax.servlet.FilterConfig)>/cfg#_0
<org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.reflect.Constructor,java.lang.Object[])>/@parameter0
<org.springframework.beans.BeanUtils: java.beans.PropertyEditor findEditorByConvention(java.lang.Class)>/@parameter0
<org.springframework.beans.BeanMetadataAttributeAccessor: void setSource(java.lang.Object)>/@parameter0
<org.springframework.beans.BeanMetadataAttributeAccessor: void setSource(java.lang.Object)>/source#_0
<org.springframework.beans.BeanMetadataAttributeAccessor: void setAttribute(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.BeanMetadataAttributeAccessor: java.lang.Object getAttribute(java.lang.String)>/@parameter0
<org.springframework.beans.BeanMetadataAttributeAccessor: java.lang.Object removeAttribute(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.Rules: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.http.route.Rules: void <init>(br.com.caelum.vraptor.http.route.Router)>/router#_0
<org.springframework.beans.BeanUtils: boolean isSimpleProperty(java.lang.Class)>/@parameter0
<org.springframework.beans.BeanUtils: boolean isSimpleValueType(java.lang.Class)>/@parameter0
<net.vidageek.mirror.bean.Bean: java.lang.String capitalize(java.lang.String)>/@parameter0
<net.vidageek.mirror.bean.Bean: java.lang.String capitalize(java.lang.String)>/fieldName#_0
<net.vidageek.mirror.bean.Bean: java.util.List getter(java.lang.String)>/@parameter0
<com.google.gson.Gson$4: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.Gson$4: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory$2: void <init>(org.springframework.beans.factory.support.AbstractBeanFactory,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory$2: void <init>(org.springframework.beans.factory.support.AbstractBeanFactory,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/l2#_0
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/@parameter0
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/@parameter1
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval,java.lang.Object,java.lang.reflect.Method)>/@parameter1
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval,java.lang.Object,java.lang.reflect.Method)>/instance#_0
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.basic.DoubleConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.DoubleConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)>/l3#_0
<org.springframework.beans.factory.support.ConstructorResolver$2: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class)>/@parameter2
<org.springframework.beans.factory.support.ConstructorResolver$2: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class)>/l3#_0
<com.thoughtworks.xstream.converters.basic.DoubleConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.google.common.collect.LinkedListMultimap: boolean containsKey(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectFactory: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>/@parameter2
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectFactory: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>/beanName#_0
<com.google.common.collect.LinkedListMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.common.collect.LinkedListMultimap: boolean remove(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedListMultimap: boolean remove(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.common.collect.LinkedListMultimap: java.util.List get(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.proxy.JavassistProxifier: boolean isProxy(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.proxy.JavassistProxifier: boolean isProxy(java.lang.Object)>/o#_0
<com.google.common.collect.LinkedListMultimap: java.util.Collection get(java.lang.Object)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder: boolean matchesSafely(java.lang.Iterable,org.hamcrest.Description)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder: boolean matchesSafely(java.lang.Iterable,org.hamcrest.Description)>/iterable#_0
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node access$800(com.google.common.collect.LinkedListMultimap,java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/@parameter1
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node access$800(com.google.common.collect.LinkedListMultimap,java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>/@parameter2
<org.springframework.beans.factory.BeanFactoryUtils: boolean isFactoryDereference(java.lang.String)>/@parameter0
<org.springframework.beans.factory.BeanFactoryUtils: boolean isFactoryDereference(java.lang.String)>/name#_0
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String transformedBeanName(java.lang.String)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder: boolean matchesSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class,boolean,boolean)>/@parameter1
<org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>/@parameter0
<ognl.ASTNot: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.collections.ParametersByIndex$1: java.lang.Integer apply(br.com.caelum.iogi.parameters.Parameter)>/@parameter0
<br.com.caelum.iogi.collections.ParametersByIndex$1: java.lang.Integer apply(br.com.caelum.iogi.parameters.Parameter)>/parameter#_0
<br.com.caelum.iogi.collections.ParametersByIndex$1: java.lang.Object apply(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedHashMultiset: int remove(java.lang.Object,int)>/@parameter0
<com.google.common.collect.LinkedHashMultiset: int add(java.lang.Object,int)>/@parameter0
<com.google.common.collect.LinkedHashMultiset: int count(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedHashMultiset: boolean remove(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedHashMultiset: boolean add(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedHashMultiset: boolean contains(java.lang.Object)>/@parameter0
<ognl.EnumerationPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.EnumerationPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.EnumerationPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.EnumerationPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/target#_0
<ognl.EnumerationPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.EnumerationPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<ognl.EnumerationPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/value#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry$AttributeSetterComponentMonitor: void instantiated(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Object,java.lang.Object[],long)>/@parameter2
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry$AttributeSetterComponentMonitor: void instantiated(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Object,java.lang.Object[],long)>/constructor#_0
<org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>/@parameter0
<org.hamcrest.MatcherAssert: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.Object newInstance(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.Object instantiateUsingSerialization(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: boolean fieldModifiersSupported(java.lang.reflect.Field)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: boolean fieldModifiersSupported(java.lang.reflect.Field)>/field#_0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void validateFieldAccess(java.lang.reflect.Field)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void validateFieldAccess(java.lang.reflect.Field)>/field#_0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/@parameter1
<org.hamcrest.core.IsSame: void <init>(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsSame: void <init>(java.lang.Object)>/object#_0
<org.hamcrest.core.IsSame: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsSame: boolean matches(java.lang.Object)>/arg#_0
<org.hamcrest.core.IsSame: org.hamcrest.Matcher sameInstance(java.lang.Object)>/@parameter0
<ognl.ASTSubtract: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.google.common.collect.AbstractMultimap: java.util.Collection createCollection(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap: java.util.Collection createCollection(java.lang.Object)>/key#_0
<org.joda.time.field.UnsupportedDurationField: int compareTo(java.lang.Object)>/@parameter0
<org.joda.time.field.UnsupportedDurationField: int compareTo(java.lang.Object)>/l1#_0
<org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap: boolean containsValue(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.common.collect.AbstractMultimap: java.util.Collection getOrCreateCollection(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap: boolean remove(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.common.collect.AbstractMultimap: java.util.Collection removeAll(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap: java.util.Collection get(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap: java.util.Collection wrapCollection(java.lang.Object,java.util.Collection)>/@parameter0
<com.google.common.collect.AbstractMultimap: java.util.List wrapList(java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection)>/@parameter0
<com.google.common.collect.AbstractMultimap: java.util.List access$300(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection)>/@parameter1
<com.thoughtworks.xstream.XStreamException: void <init>(java.lang.String)>/@parameter0
<javassist.bytecode.ClassFile: void addMethod(javassist.bytecode.MethodInfo)>/@parameter0
<com.thoughtworks.xstream.XStreamException: void <init>(java.lang.String,java.lang.Throwable)>/@parameter0
<javassist.bytecode.ClassFile: void testExistingMethod(javassist.bytecode.MethodInfo)>/@parameter0
<javassist.bytecode.ClassFile: boolean isDuplicated(javassist.bytecode.MethodInfo,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo,java.util.ListIterator)>/@parameter0
<javassist.bytecode.ClassFile: boolean isDuplicated(javassist.bytecode.MethodInfo,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo,java.util.ListIterator)>/@parameter3
<javassist.bytecode.ClassFile: boolean notBridgeMethod(javassist.bytecode.MethodInfo)>/@parameter0
<javassist.bytecode.ClassFile: boolean notBridgeMethod(javassist.bytecode.MethodInfo)>/minfo#_0
<org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.core.AttributeAccessorSupport: void setAttribute(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.core.AttributeAccessorSupport: java.lang.Object getAttribute(java.lang.String)>/@parameter0
<org.springframework.core.AttributeAccessorSupport: java.lang.Object removeAttribute(java.lang.String)>/@parameter0
<org.springframework.core.AttributeAccessorSupport: void copyAttributesFrom(org.springframework.core.AttributeAccessor)>/@parameter0
<org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>/@parameter0
<javassist.bytecode.stackmap.TypedBlock: javassist.bytecode.stackmap.TypedBlock[] makeBlocks(javassist.bytecode.MethodInfo,javassist.bytecode.CodeAttribute,boolean)>/@parameter1
<javassist.bytecode.stackmap.TypedBlock: javassist.bytecode.stackmap.TypedBlock[] makeBlocks(javassist.bytecode.MethodInfo,javassist.bytecode.CodeAttribute,boolean)>/ca#_0
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/result#_0
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.serialization.HTMLSerialization: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/extractor#_0
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider: void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor)>/@parameter0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1: void convertAnother(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1: void replace(java.lang.Object,java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1: void replace(java.lang.Object,java.lang.Object)>/original#_0
<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1: void replace(java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/response#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog: java.lang.String access$000(br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog: java.lang.String access$000(br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog)>/x0#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog: java.lang.Integer access$100(br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog: java.lang.Integer access$100(br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog)>/x0#_0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog: java.util.Calendar access$300(br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog: java.util.Calendar access$300(br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest$Dog)>/x0#_0
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainer: void <init>(org.picocontainer.MutablePicoContainer)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainer: void <init>(org.picocontainer.MutablePicoContainer)>/container#_0
<com.thoughtworks.xstream.io.xml.XppReader: java.lang.String getAttribute(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.ObjectToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ObjectToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.ObjectToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.ObjectToStringConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<br.com.caelum.iogi.collections.ArrayInstantiator$ArrayFactory: void <init>(br.com.caelum.iogi.collections.ArrayInstantiator,br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.collections.ParametersByIndex)>/@parameter1
<br.com.caelum.iogi.collections.ArrayInstantiator$ArrayFactory: void <init>(br.com.caelum.iogi.collections.ArrayInstantiator,br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.collections.ParametersByIndex)>/target#_0
<org.apache.log4j.Category: void fireRemoveAppenderEvent(org.apache.log4j.Appender)>/@parameter0
<org.springframework.beans.factory.BeanDefinitionStoreException: void <init>(java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<org.springframework.beans.factory.BeanDefinitionStoreException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>/@parameter1
<org.mockito.cglib.proxy.Enhancer$1: int accept(java.lang.reflect.Method)>/@parameter0
<org.mockito.cglib.proxy.Enhancer$1: int accept(java.lang.reflect.Method)>/method#_0
<com.thoughtworks.xstream.converters.extended.SqlTimestampConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.SqlTimestampConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.extended.SqlTimestampConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.extended.SqlTimestampConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.extended.SqlTimestampConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<com.thoughtworks.xstream.io.xml.AbstractXmlReader: java.lang.String unescapeXmlName(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException: void <init>(java.lang.String)>/@parameter0
<org.mockito.internal.util.MockUtil: org.mockito.internal.MockHandlerInterface getMockHandler(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: boolean isMockitoMock(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: boolean isMock(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: org.mockito.internal.creation.MethodInterceptorFilter getInterceptor(java.lang.Object)>/@parameter0
<org.mockito.internal.util.MockUtil: org.mockito.internal.util.MockName getMockName(java.lang.Object)>/@parameter0
<org.springframework.context.support.ReadOnlySystemAttributesMap: boolean containsKey(java.lang.Object)>/@parameter0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.String get(java.lang.Object)>/@parameter0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.String put(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.String put(java.lang.String,java.lang.String)>/key#_0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.String put(java.lang.String,java.lang.String)>/@parameter1
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.String put(java.lang.String,java.lang.String)>/value#_0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>/@parameter0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter0
<org.springframework.context.support.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat: java.lang.String format(java.util.Date)>/@parameter0
<com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat: java.util.Date parse(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: boolean add(java.lang.Object)>/@parameter0
<org.springframework.util.SystemPropertyUtils: java.lang.String resolvePlaceholders(java.lang.String,boolean)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/@parameter0
<com.thoughtworks.xstream.core.util.Base64Encoder: java.lang.String encode(byte[])>/@parameter0
<com.thoughtworks.xstream.core.util.Base64Encoder: java.lang.String encode(byte[])>/input#_0
<com.thoughtworks.xstream.core.util.Base64Encoder: byte[] decode(java.lang.String)>/@parameter0
<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>/@parameter0
<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>/@parameter1
<org.springframework.beans.factory.BeanCreationException: void addRelatedCause(java.lang.Throwable)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/@parameter0
<com.thoughtworks.xstream.converters.ConversionException: java.lang.String get(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.ConversionException: void add(java.lang.String,java.lang.String)>/@parameter1
<org.mockito.cglib.core.MethodWrapper: java.lang.Object create(java.lang.reflect.Method)>/@parameter0
<org.mockito.cglib.core.MethodWrapper: java.lang.Object create(java.lang.reflect.Method)>/method#_0
<org.picocontainer.injectors.AnnotatedFieldInjector$2: void <init>(org.picocontainer.injectors.AnnotatedFieldInjector,java.lang.reflect.AccessibleObject)>/@parameter1
<org.picocontainer.injectors.AnnotatedFieldInjector$2: void <init>(org.picocontainer.injectors.AnnotatedFieldInjector,java.lang.reflect.AccessibleObject)>/l2#_0
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/@parameter5
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/paramNames#_0
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/@parameter6
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: boolean matchesSafely(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: boolean matchesSafely(br.com.caelum.vraptor.resource.ResourceMethod)>/other#_0
<org.mockito.asm.Type: java.lang.String getMethodDescriptor(java.lang.reflect.Method)>/@parameter0
<org.mockito.asm.Type: java.lang.String getMethodDescriptor(java.lang.reflect.Method)>/m#_0
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: void describeMismatchSafely(br.com.caelum.vraptor.resource.ResourceMethod,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: void describeMismatchSafely(br.com.caelum.vraptor.resource.ResourceMethod,org.hamcrest.Description)>/item#_0
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: boolean matchesSafely(java.lang.Object)>/@parameter0
<org.mockito.asm.Type: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.BeanMetadataAttribute: void <init>(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/@parameter3
<org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object resolveAutowiredArgument(org.springframework.core.MethodParameter,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/@parameter1
<org.springframework.expression.spel.support.ReflectiveConstructorResolver: org.springframework.expression.ConstructorExecutor resolve(org.springframework.expression.EvaluationContext,java.lang.String,java.util.List)>/@parameter1
<org.picocontainer.injectors.ParameterNameBinding: void <init>(org.picocontainer.paranamer.Paranamer,java.lang.reflect.AccessibleObject,int)>/@parameter1
<org.picocontainer.injectors.ParameterNameBinding: void <init>(org.picocontainer.paranamer.Paranamer,java.lang.reflect.AccessibleObject,int)>/member#_0
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.XStream: java.lang.String toXML(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.XStream: void toXML(java.lang.Object,java.io.Writer)>/@parameter0
<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>/@parameter0
<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder)>/@parameter0
<org.springframework.expression.spel.ExpressionState: void pushActiveContextObject(org.springframework.expression.TypedValue)>/@parameter0
<org.springframework.expression.spel.ExpressionState: void setVariable(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.ExpressionState: java.lang.Class findType(java.lang.String)>/@parameter0
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(java.lang.Object,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.thoughtworks.xstream.core.ReferenceByXPathMarshaller: java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.ReferenceByXPathMarshaller: java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>/item#_0
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(org.springframework.expression.TypedValue,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(org.springframework.expression.TypedValue,org.springframework.core.convert.TypeDescriptor)>/value#_0
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/@parameter2
<com.google.gson.internal.bind.TypeAdapters$21: void write(com.google.gson.stream.JsonWriter,java.util.UUID)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$21: void write(com.google.gson.stream.JsonWriter,java.util.UUID)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$21: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter)>/@parameter0
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/@parameter0
<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>/@parameter0
<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter)>/@parameter0
<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter,int)>/@parameter0
<org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>/@parameter1
<br.com.caelum.vraptor.serialization.iso8601.gson.CalendarISO8601Serializer: com.google.gson.JsonElement serialize(java.util.Calendar,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<br.com.caelum.vraptor.serialization.iso8601.gson.CalendarISO8601Serializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>/@parameter0
<org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Method)>/@parameter0
<org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Method)>/method#_0
<org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Constructor)>/@parameter0
<org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Constructor)>/ctor#_0
<org.springframework.expression.TypedValue: void <init>(java.lang.Object)>/@parameter0
<org.springframework.expression.TypedValue: void <init>(java.lang.Object)>/value#_0
<org.springframework.expression.TypedValue: void <init>(java.lang.Object,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.expression.TypedValue: void <init>(java.lang.Object,org.springframework.core.convert.TypeDescriptor)>/value#_0
<org.springframework.util.ReflectionUtils: void doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback)>/@parameter0
<com.thoughtworks.xstream.XStream: void omitField(java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.XStream: void omitField(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.util.ReflectionUtils: void doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback,org.springframework.util.ReflectionUtils$MethodFilter)>/@parameter0
<org.springframework.util.ReflectionUtils: void doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback,org.springframework.util.ReflectionUtils$MethodFilter)>/clazz#_0
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)>/@parameter0
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.ConstructorExecutor findExecutorForConstructor(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/@parameter0
<br.com.caelum.vraptor.validator.MessageConverter: boolean canConvert(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.validator.MessageConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>/@parameter0
<org.springframework.expression.spel.ast.FormatHelper: java.lang.String formatClassNameForMessage(java.lang.Class)>/clazz#_0
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>/@parameter0
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.mapper.AttributeAliasingMapper: java.lang.String attributeForAlias(java.lang.String)>/@parameter0
<org.picocontainer.converters.FileConverter: java.io.File convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.FileConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<org.springframework.core.type.classreading.SimpleMetadataReader: void <init>(org.springframework.core.io.Resource,java.lang.ClassLoader)>/@parameter0
<org.springframework.core.type.classreading.SimpleMetadataReader: void <init>(org.springframework.core.io.Resource,java.lang.ClassLoader)>/resource#_0
<br.com.caelum.iogi.reflection.NewObject$ScalaSetter: void <init>(java.lang.reflect.Method,java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$11: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$11: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$SomeProxy: void <init>(org.hibernate.proxy.LazyInitializer)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$SomeProxy: void <init>(org.hibernate.proxy.LazyInitializer)>/initializer#_0
<com.google.gson.internal.bind.TypeAdapters$8: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$8: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.ArrayToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ArrayToObjectConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.ArrayToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.view.DefaultLogicResultTest$TheComponent: void <init>(br.com.caelum.vraptor.view.DefaultLogicResultTest,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.view.DefaultLogicResultTest$TheComponent: void <init>(br.com.caelum.vraptor.view.DefaultLogicResultTest,br.com.caelum.vraptor.Result)>/result#_0
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression parseExpression(java.lang.String,org.springframework.expression.ParserContext)>/@parameter0
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression parseTemplate(java.lang.String,org.springframework.expression.ParserContext)>/@parameter0
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression[] parseExpressions(java.lang.String,org.springframework.expression.ParserContext)>/@parameter0
<org.springframework.expression.common.TemplateAwareExpressionParser: boolean isSuffixHere(java.lang.String,int,java.lang.String)>/@parameter0
<org.springframework.expression.common.TemplateAwareExpressionParser: boolean isSuffixHere(java.lang.String,int,java.lang.String)>/expressionString#_0
<org.springframework.expression.common.TemplateAwareExpressionParser: int skipToCorrectEndSuffix(java.lang.String,java.lang.String,java.lang.String,int)>/@parameter2
<br.com.caelum.vraptor.test.HttpServletRequestMock: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.http.MutableRequest)>/@parameter1
<br.com.caelum.vraptor.test.HttpServletRequestMock: java.lang.Object getAttribute(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.test.HttpServletRequestMock: void setAttribute(java.lang.String,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.test.HttpServletRequestMock: void setAttribute(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.String)>/@parameter0
<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.Class,java.lang.String)>/type#_0
<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.Class,java.lang.String,java.lang.String)>/@parameter0
<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.Class,java.lang.String,java.lang.String)>/type#_0
<com.google.common.base.Predicates$OrPredicate: boolean apply(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<com.google.common.collect.ArrayListMultimap: boolean put(java.lang.Object,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.basic.LongConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.LongConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.google.common.collect.ArrayListMultimap: java.util.List get(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.basic.LongConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.google.common.collect.ArrayListMultimap: boolean containsValue(java.lang.Object)>/@parameter0
<org.springframework.beans.BeanWrapperImpl$2: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/@parameter1
<org.springframework.beans.BeanWrapperImpl$2: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/l2#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder withParameter(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder withParameter(java.lang.String)>/name#_0
<org.springframework.context.support.AbstractApplicationContext: void setId(java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: void setId(java.lang.String)>/id#_0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.DefaultRouteBuilder matching(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder: br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder access$300(br.com.caelum.vraptor.http.route.DefaultRouteBuilder$DefaultParameterControlBuilder,java.lang.String)>/@parameter1
<org.springframework.context.support.AbstractApplicationContext: void addApplicationListener(org.springframework.context.ApplicationListener)>/@parameter0
<br.com.caelum.vraptor.http.ParanamerNameProvider: java.lang.String[] parameterNamesFor(java.lang.reflect.AccessibleObject)>/@parameter0
<com.thoughtworks.xstream.converters.basic.ByteConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.ByteConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.basic.ByteConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.mockito.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: void <init>(java.lang.Class,java.lang.Object[])>/@parameter0
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: void <init>(java.lang.Class,java.lang.Object[])>/ambiguousDependency#_0
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: void setComponent(java.lang.Class)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: void setComponent(java.lang.Class)>/component#_0
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: void setMember(java.lang.reflect.AccessibleObject)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: void setMember(java.lang.reflect.AccessibleObject)>/accessibleObject#_0
<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.String serializedClass(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.Class realClass(java.lang.String)>/elementName#_0
<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.String boxedTypeName(java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.RootBeanDefinition: boolean isFactoryMethod(java.lang.reflect.Method)>/@parameter0
<org.springframework.beans.factory.support.RootBeanDefinition: boolean isFactoryMethod(java.lang.reflect.Method)>/candidate#_0
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: boolean containsBean(java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: boolean isTypeMatch(java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: java.util.Map getBeansOfType(java.lang.Class)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext: boolean containsLocalBean(java.lang.String)>/@parameter0
<com.google.gson.Gson$FutureTypeAdapter: void setDelegate(com.google.gson.TypeAdapter)>/@parameter0
<com.google.gson.Gson$FutureTypeAdapter: void setDelegate(com.google.gson.TypeAdapter)>/typeAdapter#_0
<com.google.gson.Gson$FutureTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder: java.lang.Class getAdapterType(com.google.gson.JsonSerializer)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder: java.lang.Class getAdapterType(com.google.gson.JsonSerializer)>/adapter#_0
<com.google.common.collect.LinkedListMultimap$AsMapEntries$1$1: void <init>(com.google.common.collect.LinkedListMultimap$AsMapEntries$1,java.lang.Object)>/@parameter1
<com.google.common.collect.LinkedListMultimap$AsMapEntries$1$1: void <init>(com.google.common.collect.LinkedListMultimap$AsMapEntries$1,java.lang.Object)>/l2#_0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter1
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/restfulie#_0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/@parameter2
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void <init>(com.thoughtworks.xstream.converters.Converter,br.com.caelum.vraptor.restfulie.Restfulie,br.com.caelum.vraptor.config.Configuration)>/config#_0
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/@parameter1
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: boolean canConvert(java.lang.Class)>/@parameter0
<org.picocontainer.injectors.AdaptingInjection$2: void <init>(org.picocontainer.injectors.AdaptingInjection,java.lang.Class)>/@parameter1
<org.picocontainer.injectors.AdaptingInjection$2: void <init>(org.picocontainer.injectors.AdaptingInjection,java.lang.Class)>/l2#_0
<net.vidageek.mirror.get.DefaultGetterHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<net.vidageek.mirror.get.DefaultGetterHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/target#_0
<net.vidageek.mirror.get.DefaultGetterHandler: java.lang.Object field(java.lang.reflect.Field)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean containsBean(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/@parameter0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/response#_0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/@parameter1
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.restfulie.headers.RestDefaults)>/defaults#_0
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isSingleton(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/@parameter1
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyProvider: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)>/@parameter2
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver$3: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter2
<org.springframework.beans.factory.support.ConstructorResolver$3: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/l3#_0
<org.springframework.beans.factory.support.ConstructorResolver$3: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter3
<org.springframework.beans.factory.support.ConstructorResolver$3: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/l4#_0
<org.springframework.beans.factory.support.ConstructorResolver$3: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter4
<org.springframework.beans.factory.support.ConstructorResolver$3: void <init>(org.springframework.beans.factory.support.ConstructorResolver,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/l5#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean containsLocalBean(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: void setConversionService(org.springframework.core.convert.ConversionService)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: void setConversionService(org.springframework.core.convert.ConversionService)>/conversionService#_0
<br.com.caelum.vraptor.ioc.ComponentFactoryIntrospector: java.lang.Class targetTypeForComponentFactory(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.ComponentFactoryIntrospector: java.lang.Class targetTypeForComponentFactory0(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.ComponentFactoryIntrospector: java.lang.Class targetTypeForComponentFactory0(java.lang.Class)>/type#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: void addBeanPostProcessor(org.springframework.beans.factory.config.BeanPostProcessor)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.config.BeanDefinition getMergedBeanDefinition(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isFactoryBean(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isCurrentlyInCreation(java.lang.String)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject: void setProperty(br.com.caelum.iogi.reflection.NewObject$Setter)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String transformedBeanName(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String originalBeanName(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedLocalBeanDefinition(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: void checkMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Object[])>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: void clearMergedBeanDefinition(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Class[])>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object evaluateBeanDefinitionString(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: void markBeanAsCreated(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isBeanEligibleForMetadataCaching(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean removeSingletonIfCreatedForTypeCheckOnly(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter1
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter2
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isBeanNameInUse(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean requiresDestruction(java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean requiresDestruction(java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/bean#_0
<org.springframework.beans.factory.support.AbstractBeanFactory: void registerDisposableBeanIfNecessary(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanFactory: void registerDisposableBeanIfNecessary(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/@parameter1
<org.hamcrest.core.IsInstanceOf: boolean matches(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.mockito.cglib.proxy.MethodInterceptorGenerator$1: java.lang.Object transform(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: java.lang.Object instanceFor(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: void start(javax.servlet.ServletContext)>/@parameter0
<org.springframework.beans.factory.BeanCreationNotAllowedException: void <init>(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.beans.factory.config.BeanExpressionContext: boolean containsObject(java.lang.String)>/@parameter0
<org.springframework.beans.factory.config.BeanExpressionContext: java.lang.Object getObject(java.lang.String)>/@parameter0
<org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void <init>(br.com.caelum.vraptor.ioc.Container,java.lang.Class)>/container#_0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,java.lang.String)>/@parameter0
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,java.lang.String)>/@parameter1
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,com.google.common.collect.ImmutableList)>/@parameter0
<br.com.caelum.iogi.parameters.Parameter: void <init>(java.lang.String,com.google.common.collect.ImmutableList)>/value#_0
<br.com.caelum.iogi.parameters.Parameter: java.lang.Object notNull(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.iogi.parameters.Parameter: java.lang.Object notNull(java.lang.Object,java.lang.String)>/object#_0
<br.com.caelum.iogi.parameters.Parameter: com.google.common.collect.ImmutableList computeNameComponents(java.lang.String)>/@parameter0
<br.com.caelum.iogi.parameters.Parameter: com.google.common.collect.ImmutableList computeNameComponents(java.lang.String)>/name#_0
<br.com.caelum.iogi.parameters.Parameter: boolean equals(java.lang.Object)>/@parameter0
<com.google.common.collect.Iterators$13: void <init>(java.lang.Object)>/@parameter0
<com.google.common.collect.Iterators$13: void <init>(java.lang.Object)>/l1#_0
<org.codehaus.jettison.AbstractXMLStreamReader: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>/@parameter1
<ognl.ASTKeyValue: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTKeyValue: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<br.com.caelum.vraptor.validator.DIConstraintValidatorFactory: void <init>(br.com.caelum.vraptor.ioc.Container)>/@parameter0
<br.com.caelum.vraptor.validator.DIConstraintValidatorFactory: void <init>(br.com.caelum.vraptor.ioc.Container)>/container#_0
<org.springframework.beans.propertyeditors.ClassArrayEditor: void setAsText(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/result#_0
<com.thoughtworks.xstream.converters.basic.BigDecimalConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.BigDecimalConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.basic.BigDecimalConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.picocontainer.adapters.AbstractAdapter: void <init>(java.lang.Object,java.lang.Class)>/@parameter0
<org.picocontainer.adapters.AbstractAdapter: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.ComponentMonitor)>/@parameter0
<org.picocontainer.adapters.AbstractAdapter: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.ComponentMonitor)>/componentKey#_0
<org.picocontainer.adapters.AbstractAdapter: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.ComponentMonitor)>/@parameter1
<org.picocontainer.adapters.AbstractAdapter: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.ComponentMonitor)>/componentImplementation#_0
<org.picocontainer.adapters.AbstractAdapter: java.lang.ClassCastException newCCE(java.lang.Class)>/@parameter0
<org.picocontainer.adapters.AbstractAdapter: java.lang.ClassCastException newCCE(java.lang.Class)>/componentType#_0
<org.mockito.cglib.core.EmitUtils$3: java.lang.Object transform(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.Type)>/@parameter0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.Class)>/raw#_0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.TypeVariable)>/@parameter0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.TypeVariable)>/variable#_0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.WildcardType)>/@parameter0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.WildcardType)>/wild#_0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.ParameterizedType)>/@parameter0
<br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractor: java.lang.String nameFor(java.lang.reflect.ParameterizedType)>/type#_0
<com.google.common.collect.AbstractMultimap$WrappedSortedSet: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMultimap$WrappedCollection)>/@parameter1
<org.springframework.web.context.support.ServletContextResourcePatternResolver: java.util.Set doFindPathMatchingFileResources(org.springframework.core.io.Resource,java.lang.String)>/@parameter0
<org.springframework.web.context.support.ServletContextResourcePatternResolver: void doRetrieveMatchingServletContextResources(javax.servlet.ServletContext,java.lang.String,java.lang.String,java.util.Set)>/@parameter0
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>/@parameter0
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class,com.google.gson.TreeTypeAdapter$1)>/@parameter0
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider: void <init>(br.com.caelum.vraptor.core.StaticContentHandler)>/@parameter0
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider: void <init>(br.com.caelum.vraptor.core.StaticContentHandler)>/handler#_0
<com.thoughtworks.xstream.converters.extended.FontConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.FontConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.extended.FontConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.expression.spel.standard.SpelExpression: void <init>(java.lang.String,org.springframework.expression.spel.ast.SpelNodeImpl,org.springframework.expression.spel.SpelParserConfiguration)>/@parameter0
<org.springframework.expression.spel.standard.SpelExpression: void <init>(java.lang.String,org.springframework.expression.spel.ast.SpelNodeImpl,org.springframework.expression.spel.SpelParserConfiguration)>/expression#_0
<org.springframework.expression.spel.standard.SpelExpression: void <init>(java.lang.String,org.springframework.expression.spel.ast.SpelNodeImpl,org.springframework.expression.spel.SpelParserConfiguration)>/@parameter1
<org.springframework.expression.spel.standard.SpelExpression: void <init>(java.lang.String,org.springframework.expression.spel.ast.SpelNodeImpl,org.springframework.expression.spel.SpelParserConfiguration)>/ast#_0
<org.picocontainer.injectors.MethodInjection$MethodInjectionByName: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.MethodInjection$MethodInjectionByName: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<org.mockito.cglib.core.ReflectUtils: org.mockito.asm.Type[] getExceptionTypes(java.lang.reflect.Member)>/@parameter0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter defaultInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter defaultInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<org.mockito.cglib.core.ReflectUtils: org.mockito.cglib.core.Signature getSignature(java.lang.reflect.Member)>/@parameter0
<br.com.caelum.iogi.DependenciesInjector: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/@parameter0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter setterInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter setterInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter4
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter methodInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter methodInjectionAdapter(java.util.Properties,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.lang.Object,java.lang.Class,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter4
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter methodAnnotatedInjectionAdapter(java.lang.Class,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter methodAnnotatedInjectionAdapter(java.lang.Class,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter4
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter fieldAnnotatedInjectionAdapter(java.lang.Class,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter0
<org.picocontainer.injectors.AdaptingInjection: org.picocontainer.ComponentAdapter fieldAnnotatedInjectionAdapter(java.lang.Class,org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,org.picocontainer.ComponentAdapter,org.picocontainer.Parameter[])>/@parameter4
<org.picocontainer.injectors.AdaptingInjection: boolean injectionMethodAnnotated(java.lang.Class)>/@parameter0
<org.picocontainer.injectors.AdaptingInjection: boolean injectionFieldAnnotated(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void registerDestroyListener(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void start(javax.servlet.http.HttpSession)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(javax.servlet.http.HttpSession)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(javax.servlet.http.HttpSession)>/session#_0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/@parameter0
<br.com.caelum.vraptor.ioc.guice.SessionCustomScope: void stop(br.com.caelum.vraptor.ioc.guice.LifecycleListener)>/listener#_0
<javassist.util.proxy.RuntimeSupport: java.lang.String makeDescriptor(java.lang.reflect.Method)>/@parameter0
<javassist.util.proxy.RuntimeSupport: java.lang.String makeDescriptor(java.lang.reflect.Method)>/m#_0
<org.mockito.cglib.core.ReflectUtils: java.lang.Class defineClass(java.lang.String,byte[],java.lang.ClassLoader)>/@parameter0
<org.mockito.cglib.core.ReflectUtils: java.lang.Class defineClass(java.lang.String,byte[],java.lang.ClassLoader)>/className#_0
<org.mockito.cglib.core.ReflectUtils: java.lang.Class defineClass(java.lang.String,byte[],java.lang.ClassLoader)>/@parameter2
<org.mockito.cglib.core.ReflectUtils: org.mockito.cglib.core.MethodInfo getMethodInfo(java.lang.reflect.Member,int)>/@parameter0
<org.mockito.cglib.core.ReflectUtils: org.mockito.cglib.core.MethodInfo getMethodInfo(java.lang.reflect.Member)>/@parameter0
<br.com.caelum.iogi.collections.ParametersByIndex: void <init>(br.com.caelum.iogi.parameters.Parameters,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.collections.ParametersByIndex: com.google.common.collect.ListMultimap groupByIndex(br.com.caelum.iogi.parameters.Parameters,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.mapper.CachingMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.ArrayTypeAdapter: void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)>/@parameter1
<org.springframework.expression.spel.ast.CompoundExpression: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/@parameter1
<com.google.gson.internal.bind.ArrayTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.google.inject.TypeLiteral: boolean equals(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.JsonTreeReader: void <init>(com.google.gson.JsonElement)>/@parameter0
<com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter0
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/request#_0
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<br.com.caelum.vraptor.http.WebXmlEncodingHandler: void setEncoding(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/response#_0
<org.springframework.core.SimpleAliasRegistry: void registerAlias(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.core.SimpleAliasRegistry: boolean isAlias(java.lang.String)>/@parameter0
<org.springframework.core.SimpleAliasRegistry: java.lang.String[] getAliases(java.lang.String)>/@parameter0
<org.springframework.core.SimpleAliasRegistry: void retrieveAliases(java.lang.String,java.util.List)>/@parameter0
<org.springframework.core.SimpleAliasRegistry: java.lang.String canonicalName(java.lang.String)>/@parameter0
<org.springframework.core.SimpleAliasRegistry: java.lang.String canonicalName(java.lang.String)>/name#_0
<org.springframework.core.SimpleAliasRegistry: void checkForAliasCircle(java.lang.String,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>/@parameter0
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: void <init>(java.lang.reflect.Type,java.lang.String,boolean,java.lang.annotation.Annotation,org.picocontainer.Parameter)>/@parameter1
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: void <init>(java.lang.reflect.Type,java.lang.String,boolean,java.lang.annotation.Annotation,org.picocontainer.Parameter)>/pName#_0
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: java.lang.Object createCollection(java.lang.Class)>/@parameter0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/@parameter0
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: void <init>(java.lang.reflect.Type,java.lang.String,boolean,java.lang.annotation.Annotation,org.picocontainer.Parameter,org.picocontainer.injectors.ConstructorInjector$1)>/@parameter1
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void start(java.lang.Object)>/@parameter0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void stop(java.lang.Object)>/@parameter0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void stop(java.lang.Object)>/component#_0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void dispose(java.lang.Object)>/@parameter0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void doLifecycleMethod(java.lang.Object,java.lang.Class,boolean)>/@parameter0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: void doLifecycleMethod(java.lang.Object,java.lang.Class,java.lang.Class,boolean,java.util.Set)>/@parameter0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: boolean hasLifecycle(java.lang.Class)>/@parameter0
<org.picocontainer.lifecycle.JavaEE5LifecycleStrategy: boolean hasLifecycle(java.lang.Class)>/type#_0
<org.mockito.internal.matchers.LocalizedMatcher: boolean matches(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>/@parameter0
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/@parameter0
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/response#_0
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/@parameter1
<br.com.caelum.vraptor.view.DefaultHttpResult: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.view.Status)>/status#_0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: int positionOf(org.springframework.expression.spel.standard.Token)>/@parameter0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: int positionOf(org.springframework.expression.spel.standard.Token)>/t#_0
<org.slf4j.helpers.NOPLogger: void trace(java.lang.String,java.lang.Object)>/@parameter1
<org.slf4j.helpers.NOPLogger: void trace(java.lang.String,java.lang.Object)>/arg#_0
<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>/@parameter1
<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>/arg#_0
<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>/arg1#_0
<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>/@parameter1
<org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>/arg1#_0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void push(org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter0
<org.springframework.expression.spel.ast.VariableReference: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/response#_0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter1
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/result#_0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter2
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/config#_0
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/@parameter4
<br.com.caelum.vraptor.view.DefaultStatus: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.config.Configuration,br.com.caelum.vraptor.proxy.Proxifier,br.com.caelum.vraptor.http.route.Router)>/router#_0
<br.com.caelum.vraptor.test.HttpSessionMock: void <init>(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.test.HttpSessionMock: void <init>(javax.servlet.ServletContext,java.lang.String)>/context#_0
<br.com.caelum.vraptor.test.HttpSessionMock: java.lang.Object getAttribute(java.lang.String)>/@parameter0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: java.lang.String toString(org.springframework.expression.spel.standard.Token)>/@parameter0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: java.lang.String toString(org.springframework.expression.spel.standard.Token)>/t#_0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void checkRightOperand(org.springframework.expression.spel.standard.Token,org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void checkRightOperand(org.springframework.expression.spel.standard.Token,org.springframework.expression.spel.ast.SpelNodeImpl)>/token#_0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void checkRightOperand(org.springframework.expression.spel.standard.Token,org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter1
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void checkRightOperand(org.springframework.expression.spel.standard.Token,org.springframework.expression.spel.ast.SpelNodeImpl)>/operandExpression#_0
<br.com.caelum.vraptor.test.HttpSessionMock: void setAttribute(java.lang.String,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.test.HttpSessionMock: void setAttribute(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: int toPos(org.springframework.expression.spel.standard.Token)>/@parameter0
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: int toPos(org.springframework.expression.spel.standard.Token)>/t#_0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper: void <init>(com.thoughtworks.xstream.core.util.ObjectIdDictionary,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest$1: boolean matchesSafely(br.com.caelum.vraptor.restfulie.relation.RelationBuilder)>/@parameter0
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest$1: boolean matchesSafely(br.com.caelum.vraptor.restfulie.relation.RelationBuilder)>/item#_0
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest$1: boolean matchesSafely(java.lang.Object)>/@parameter0
<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/@parameter0
<ognl.ASTProperty: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>/@parameter0
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>/value#_0
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/source#_0
<ognl.ASTProperty: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/@parameter0
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>/value#_0
<ognl.ASTProperty: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTProperty: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>/@parameter0
<org.springframework.core.style.DefaultValueStyler: java.lang.String getCollectionTypeString(java.util.Collection)>/@parameter0
<org.springframework.core.style.DefaultValueStyler: java.lang.String getCollectionTypeString(java.util.Collection)>/value#_0
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>/@parameter0
<org.springframework.core.style.DefaultValueStyler: java.lang.String styleArray(java.lang.Object[])>/array#_0
<com.google.common.base.Predicates$InstanceOfPredicate: boolean apply(java.lang.Object)>/@parameter0
<com.google.common.base.Predicates$InstanceOfPredicate: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.SingleValueConverter getLocalSingleValueConverter(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<net.vidageek.mirror.invoke.ConstructorHandlerByArgs: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/@parameter1
<net.vidageek.mirror.invoke.ConstructorHandlerByArgs: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/clazz#_0
<org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum: void <init>(org.springframework.core.convert.support.StringToEnumConverterFactory,java.lang.Class)>/@parameter1
<org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum: void <init>(org.springframework.core.convert.support.StringToEnumConverterFactory,java.lang.Class)>/enumType#_0
<org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum: java.lang.Enum convert(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum: java.lang.Enum convert(java.lang.String)>/source#_0
<org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum: java.lang.Object convert(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.beans.factory.annotation.AnnotatedGenericBeanDefinition: void <init>(java.lang.Class)>/@parameter0
<ognl.NumberElementsAccessor$1: void <init>(ognl.NumberElementsAccessor,java.lang.Object)>/@parameter1
<ognl.NumberElementsAccessor$1: void <init>(ognl.NumberElementsAccessor,java.lang.Object)>/l2#_0
<org.mockito.cglib.core.CodeEmitter: void push(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.basic.BooleanConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.BooleanConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.basic.BooleanConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.basic.BooleanConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.mockito.cglib.core.CodeEmitter: void invoke(org.mockito.cglib.core.MethodInfo,org.mockito.asm.Type)>/@parameter0
<org.mockito.cglib.core.CodeEmitter: void invoke(org.mockito.cglib.core.MethodInfo,org.mockito.asm.Type)>/method#_0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void overrideFrom(org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.mockito.cglib.core.CodeEmitter: void invoke(org.mockito.cglib.core.MethodInfo)>/@parameter0
<br.com.caelum.iogi.collections.ArrayInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.collections.ArrayInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.collections.ArrayInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClass(java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClass(java.lang.Class)>/beanClass#_0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClassName(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClassName(java.lang.String)>/beanClassName#_0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void copyQualifiersFrom(org.springframework.beans.factory.support.AbstractBeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setResource(org.springframework.core.io.Resource)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setResource(org.springframework.core.io.Resource)>/resource#_0
<org.springframework.beans.propertyeditors.CharsetEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractBeanDefinition: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.PropertyTypeDescriptor: void <init>(java.beans.PropertyDescriptor,org.springframework.core.MethodParameter,java.lang.Class)>/@parameter2
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.ast.Selection: void <init>(boolean,int,int,org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter3
<org.springframework.expression.spel.ast.Selection: void <init>(boolean,int,int,org.springframework.expression.spel.ast.SpelNodeImpl)>/expression#_0
<org.springframework.core.convert.support.PropertyTypeDescriptor: org.springframework.core.convert.TypeDescriptor forElementType(java.lang.Class)>/@parameter0
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>/a#_0
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>/@parameter1
<org.picocontainer.injectors.PrimitiveMemberChecker: boolean isPrimitiveArgument(java.lang.reflect.AccessibleObject,int)>/@parameter0
<br.com.caelum.iogi.reflection.Target: br.com.caelum.iogi.reflection.Target create(java.lang.Class,java.lang.String)>/@parameter1
<br.com.caelum.iogi.reflection.Target: void <init>(java.lang.reflect.Type,java.lang.String)>/@parameter0
<br.com.caelum.iogi.reflection.Target: void <init>(java.lang.reflect.Type,java.lang.String)>/type#_0
<br.com.caelum.iogi.reflection.Target: void <init>(java.lang.reflect.Type,java.lang.String)>/@parameter1
<br.com.caelum.iogi.reflection.Target: void <init>(java.lang.reflect.Type,java.lang.String)>/name#_0
<br.com.caelum.iogi.reflection.Target: java.lang.Class findRawClassType(java.lang.reflect.Type)>/@parameter0
<br.com.caelum.iogi.reflection.Target: java.lang.Object cast(java.lang.Object)>/@parameter0
<org.springframework.context.support.ApplicationContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.support.ApplicationContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.support.ApplicationContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/beanName#_0
<br.com.caelum.iogi.reflection.Target: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>/@parameter0
<org.springframework.context.support.ApplicationContextAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.support.ApplicationContextAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/bean#_0
<org.springframework.context.support.ApplicationContextAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.support.ApplicationContextAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/beanName#_0
<org.springframework.context.support.ApplicationContextAwareProcessor: void access$0(org.springframework.context.support.ApplicationContextAwareProcessor,java.lang.Object)>/@parameter1
<org.mockito.cglib.proxy.Enhancer$6: int getOriginalModifiers(org.mockito.cglib.core.MethodInfo)>/@parameter0
<org.mockito.cglib.proxy.Enhancer$6: int getIndex(org.mockito.cglib.core.MethodInfo)>/@parameter0
<org.mockito.cglib.proxy.Enhancer$6: org.mockito.cglib.core.Signature getImplSignature(org.mockito.cglib.core.MethodInfo)>/@parameter0
<org.mockito.cglib.proxy.Enhancer$6: org.mockito.cglib.core.CodeEmitter beginMethod(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.core.MethodInfo)>/@parameter1
<org.springframework.core.convert.support.StringToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.StringToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.StringToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.StringToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.context.support.DelegatingMessageSource: void setParentMessageSource(org.springframework.context.MessageSource)>/@parameter0
<org.springframework.context.support.DelegatingMessageSource: void setParentMessageSource(org.springframework.context.MessageSource)>/parent#_0
<org.mockito.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<org.mockito.asm.Item: void set(int,java.lang.String,java.lang.String,java.lang.String)>/strVal1#_0
<org.picocontainer.injectors.AbstractInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/@parameter0
<org.picocontainer.injectors.AbstractInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/@parameter1
<org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AbstractInjector: java.lang.Object newInstance(java.lang.reflect.Constructor,java.lang.Object[])>/@parameter0
<org.picocontainer.injectors.AbstractInjector: java.lang.Object newInstance(java.lang.reflect.Constructor,java.lang.Object[])>/constructor#_0
<org.picocontainer.injectors.AbstractInjector: java.lang.Object caughtInstantiationException(org.picocontainer.ComponentMonitor,java.lang.reflect.Constructor,java.lang.InstantiationException,org.picocontainer.PicoContainer)>/@parameter1
<org.picocontainer.injectors.AbstractInjector: java.lang.Object caughtIllegalAccessException(org.picocontainer.ComponentMonitor,java.lang.reflect.Constructor,java.lang.IllegalAccessException,org.picocontainer.PicoContainer)>/@parameter1
<org.picocontainer.injectors.AbstractInjector: java.lang.Object caughtInvocationTargetException(org.picocontainer.ComponentMonitor,java.lang.reflect.Member,java.lang.Object,java.lang.reflect.InvocationTargetException)>/@parameter1
<org.picocontainer.injectors.AbstractInjector: java.lang.Object caughtIllegalAccessException(org.picocontainer.ComponentMonitor,java.lang.reflect.Member,java.lang.Object,java.lang.IllegalAccessException)>/@parameter1
<org.springframework.beans.propertyeditors.CustomMapEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)>/@parameter0
<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.Object convertKey(java.lang.Object)>/@parameter0
<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.Object convertKey(java.lang.Object)>/key#_0
<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.Object convertValue(java.lang.Object)>/@parameter0
<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.Object convertValue(java.lang.Object)>/value#_0
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveReturnType(java.lang.reflect.Method,java.lang.Class)>/@parameter0
<org.springframework.beans.factory.BeanIsNotAFactoryException: void <init>(java.lang.String,java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.Object key(java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.Object key(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.String getMember(java.lang.Class,java.lang.String,java.util.Map)>/@parameter1
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: void omitField(java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: void omitField(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/@parameter1
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type extractBoundForTypeVariable(java.lang.reflect.TypeVariable)>/@parameter0
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type extractBoundForTypeVariable(java.lang.reflect.TypeVariable)>/typeVariable#_0
<br.com.caelum.vraptor.other.pack4ge.DumbSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.other.pack4ge.DumbSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/object#_0
<br.com.caelum.vraptor.other.pack4ge.DumbSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.other.pack4ge.DumbSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/object#_0
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseExclude(java.util.Map$Entry)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseExclude(java.util.Map$Entry)>/exclude#_0
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseInclude(com.google.common.collect.Multimap,java.util.Map$Entry)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseInclude(com.google.common.collect.Multimap,java.util.Map$Entry)>/include#_0
<br.com.caelum.vraptor.http.route.NoTypeFinder: java.util.Map getParameterTypes(java.lang.reflect.Method,java.lang.String[])>/@parameter0
<br.com.caelum.vraptor.http.route.NoTypeFinder: java.util.Map getParameterTypes(java.lang.reflect.Method,java.lang.String[])>/method#_0
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: java.lang.String getNameFor(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: java.lang.String getNameFor(java.lang.String)>/name#_0
<com.thoughtworks.xstream.mapper.DynamicProxyMapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.DynamicProxyMapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.basic.NullConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.NullConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.basic.NullConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<org.mockito.internal.creation.jmock.ClassImposterizer$2: int accept(java.lang.reflect.Method)>/@parameter0
<org.mockito.internal.creation.jmock.ClassImposterizer$2: int accept(java.lang.reflect.Method)>/method#_0
<org.springframework.beans.propertyeditors.FileEditor: void setAsText(java.lang.String)>/@parameter0
<org.mockito.cglib.proxy.MethodInterceptorGenerator$2: void processCase(java.lang.Object,org.mockito.asm.Label)>/@parameter0
<net.vidageek.mirror.reflect.DefaultConstructorReflector: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/@parameter1
<net.vidageek.mirror.reflect.DefaultConstructorReflector: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/clazz#_0
<com.thoughtworks.xstream.converters.basic.StringBufferConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.basic.StringBufferConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.StringBufferConverter: boolean canConvert(java.lang.Class)>/type#_0
<org.picocontainer.paranamer.AdaptiveParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization$1: void <init>(br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization,javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder,java.lang.String)>/@parameter1
<org.springframework.expression.spel.ast.OpOr: void assertTypedValueNotNull(org.springframework.expression.TypedValue)>/@parameter0
<org.springframework.expression.spel.ast.Projection: void <init>(boolean,int,org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter2
<org.springframework.expression.spel.ast.Projection: void <init>(boolean,int,org.springframework.expression.spel.ast.SpelNodeImpl)>/expression#_0
<org.springframework.expression.spel.ast.Projection: java.lang.Class determineCommonType(java.lang.Class,java.lang.Class)>/@parameter0
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/target#_0
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter1
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/clazz#_0
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter2
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/method#_0
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/invocation#_0
<br.com.caelum.vraptor.interceptor.InstantiateInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<org.picocontainer.injectors.AnnotatedFieldInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.AnnotatedFieldInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>/@parameter0
<org.mockito.cglib.core.EmitUtils$12: void processCase(java.lang.Object,org.mockito.asm.Label)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/removal#_0
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.Object newInstance(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter2
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/target#_0
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/evaluation#_0
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter1
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter2
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,java.lang.String,org.springframework.beans.BeansException)>/@parameter1
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,java.lang.String,org.springframework.beans.BeansException)>/@parameter2
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,int,java.lang.Class,java.lang.String)>/@parameter1
<net.vidageek.mirror.invoke.ConstructorHandlerByConstructor: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class,java.lang.reflect.Constructor)>/@parameter1
<net.vidageek.mirror.invoke.ConstructorHandlerByConstructor: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class,java.lang.reflect.Constructor)>/clazz#_0
<org.springframework.beans.factory.UnsatisfiedDependencyException: void <init>(java.lang.String,java.lang.String,int,java.lang.Class,org.springframework.beans.BeansException)>/@parameter1
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: java.lang.Character convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: java.lang.Character convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.picocontainer.injectors.ProviderAdapter: java.lang.reflect.Method getProvideMethod(java.lang.Class)>/@parameter0
<org.picocontainer.injectors.ProviderAdapter: java.lang.reflect.Method getProvideMethod(java.lang.Class)>/clazz#_0
<com.google.common.collect.LinkedListMultimap$2: boolean contains(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/@parameter2
<com.thoughtworks.xstream.converters.basic.FloatConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.FloatConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.basic.FloatConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/@parameter0
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: void <init>(java.lang.Class)>/@parameter0
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: void <init>(java.lang.Class)>/clazz#_0
<org.picocontainer.converters.DoubleConverter: java.lang.Double convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.DoubleConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Field reflectField(java.lang.String)>/@parameter0
<org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object)>/@parameter1
<org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object)>/arg#_0
<org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>/arg1#_0
<org.springframework.beans.BeanWrapperImpl: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapperImpl)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object,java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object,java.lang.String,java.lang.Object)>/rootObject#_0
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest$MegaConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest$MegaConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/source#_0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: void describeMismatchSafely(byte[],org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: void describeMismatchSafely(byte[],org.hamcrest.Description)>/item#_0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: boolean matchesSafely(byte[])>/@parameter0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: boolean matchesSafely(byte[])>/item#_0
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest$MegaConverter: boolean canConvert(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest$MegaConverter: boolean canConvert(java.lang.Class)>/type#_0
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest$2: boolean matchesSafely(java.lang.Object)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor getPropertyDescriptorInternal(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getPropertyType(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: boolean isWritableProperty(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter2
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/@parameter3
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<com.google.inject.util.Providers: com.google.inject.Provider of(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: java.lang.Long convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: java.lang.Long convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.String,java.lang.Object,java.lang.Object,java.beans.PropertyDescriptor)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.String,java.lang.Object,java.lang.Object,java.beans.PropertyDescriptor)>/@parameter2
<org.springframework.beans.BeanWrapperImpl: java.lang.String getFinalPath(org.springframework.beans.BeanWrapper,java.lang.String)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getBeanWrapperForPropertyPath(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object setDefaultValue(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object setDefaultValue(java.lang.String)>/propertyName#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object newValue(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object newValue(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl newNestedBeanWrapper(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder getPropertyNameTokens(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder getPropertyNameTokens(java.lang.String)>/propertyName#_0
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: java.lang.Integer convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: java.lang.Integer convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(java.lang.String)>/@parameter0
<org.joda.time.field.BaseDurationField: int compareTo(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: boolean canConvert(java.lang.Class)>/@parameter0
<br.com.caelum.iogi.Iogi: void <init>(br.com.caelum.iogi.spi.DependencyProvider,br.com.caelum.iogi.spi.LocaleProvider)>/@parameter1
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>/@parameter0
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>/source#_0
<org.springframework.beans.BeanWrapperImpl$1: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/@parameter1
<org.springframework.beans.BeanWrapperImpl$1: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/l2#_0
<com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap$LinkedEntry newLinkedEntry(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>/@parameter0
<com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap$LinkedEntry newLinkedEntry(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>/@parameter1
<com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>/@parameter0
<com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>/key#_0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object growArrayIfNecessary(java.lang.Object,int,java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: java.lang.Object growArrayIfNecessary(java.lang.Object,int,java.lang.String)>/@parameter2
<org.springframework.beans.BeanWrapperImpl: void growCollectionIfNecessary(java.util.Collection,int,java.lang.String,java.beans.PropertyDescriptor,int)>/@parameter0
<org.springframework.beans.BeanWrapperImpl: void growCollectionIfNecessary(java.util.Collection,int,java.lang.String,java.beans.PropertyDescriptor,int)>/collection#_0
<org.springframework.beans.BeanWrapperImpl: void growCollectionIfNecessary(java.util.Collection,int,java.lang.String,java.beans.PropertyDescriptor,int)>/@parameter2
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(java.lang.String,java.lang.Object)>/@parameter0
<com.thoughtworks.paranamer.CachingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject)>/@parameter0
<ognl.Evaluation: void <init>(ognl.SimpleNode,java.lang.Object)>/@parameter1
<ognl.Evaluation: void <init>(ognl.SimpleNode,java.lang.Object)>/source#_0
<com.thoughtworks.paranamer.CachingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<ognl.Evaluation: void <init>(ognl.SimpleNode,java.lang.Object,boolean)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.PropertyValue)>/@parameter0
<ognl.Evaluation: void setResult(java.lang.Object)>/@parameter0
<ognl.Evaluation: void setResult(java.lang.Object)>/value#_0
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/@parameter1
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/pv#_0
<ognl.Evaluation: void addChild(ognl.Evaluation)>/@parameter0
<ognl.Evaluation: void addChild(ognl.Evaluation)>/child#_0
<ognl.Evaluation: void init(ognl.SimpleNode,java.lang.Object,boolean)>/@parameter1
<ognl.Evaluation: void init(ognl.SimpleNode,java.lang.Object,boolean)>/source#_0
<org.springframework.beans.factory.CannotLoadBeanClassException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassNotFoundException)>/@parameter1
<org.springframework.beans.factory.CannotLoadBeanClassException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassNotFoundException)>/@parameter2
<org.springframework.beans.factory.CannotLoadBeanClassException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.LinkageError)>/@parameter1
<org.springframework.beans.factory.CannotLoadBeanClassException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.LinkageError)>/@parameter2
<ognl.ASTList: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<net.vidageek.mirror.provider.java.PureJavaConstructorReflectionProvider: void <init>(java.lang.Class,java.lang.reflect.Constructor)>/@parameter0
<net.vidageek.mirror.provider.java.PureJavaConstructorReflectionProvider: void <init>(java.lang.Class,java.lang.reflect.Constructor)>/clazz#_0
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object)>/@parameter0
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object)>/singleton#_0
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object,java.lang.Object)>/object1#_0
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object,java.lang.Object)>/object2#_0
<ognl.ObjectArrayPool: void recycle(java.lang.Object[])>/@parameter0
<org.mockito.internal.matchers.CapturingMatcher: boolean matches(java.lang.Object)>/@parameter0
<org.mockito.internal.matchers.CapturingMatcher: boolean matches(java.lang.Object)>/argument#_0
<org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>/@parameter0
<org.mockito.internal.matchers.Equality: boolean areEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.mockito.internal.matchers.Equality: boolean areArraysEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.mockito.internal.matchers.Equality: boolean areArrayLengthsEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.mockito.internal.matchers.Equality: boolean areArrayElementsEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.mockito.internal.matchers.Equality: boolean isArray(java.lang.Object)>/@parameter0
<org.mockito.internal.matchers.Equality: boolean isArray(java.lang.Object)>/o#_0
<org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<com.thoughtworks.xstream.mapper.OuterClassMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<javassist.compiler.TypeChecker: void setThisMethod(javassist.bytecode.MethodInfo)>/@parameter0
<javassist.compiler.TypeChecker: void setThisMethod(javassist.bytecode.MethodInfo)>/m#_0
<org.springframework.core.convert.support.CollectionToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.CollectionToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.CollectionToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.CollectionToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<br.com.caelum.iogi.ObjectInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.ObjectInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.ObjectInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<br.com.caelum.iogi.ObjectInstantiator: void expectingAConcreteTarget(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.ObjectInstantiator: void expectingAConcreteTarget(br.com.caelum.iogi.reflection.Target)>/target#_0
<org.mockito.internal.matchers.AnyVararg: boolean matches(java.lang.Object)>/@parameter0
<org.mockito.internal.matchers.AnyVararg: boolean matches(java.lang.Object)>/arg#_0
<org.mockito.internal.matchers.InstanceOf: boolean matches(java.lang.Object)>/@parameter0
<org.mockito.internal.matchers.InstanceOf: boolean matches(java.lang.Object)>/actual#_0
<com.google.gson.internal.bind.ObjectTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>/@parameter0
<com.google.common.collect.MapMakerInternalMap$EntryFactory: com.google.common.collect.MapMakerInternalMap$EntryFactory getFactory(com.google.common.collect.MapMakerInternalMap$Strength,boolean,boolean)>/@parameter0
<com.google.common.collect.MapMakerInternalMap$EntryFactory: com.google.common.collect.MapMakerInternalMap$EntryFactory getFactory(com.google.common.collect.MapMakerInternalMap$Strength,boolean,boolean)>/keyStrength#_0
<org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber: void <init>(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber: void <init>(java.lang.Class)>/targetType#_0
<org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber: java.lang.Number convert(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber: java.lang.Object convert(java.lang.Object)>/@parameter0
<org.picocontainer.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedSet: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.Set)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$3: void write(com.google.gson.stream.JsonWriter,java.lang.Boolean)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$3: void write(com.google.gson.stream.JsonWriter,java.lang.Boolean)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$3: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/exceptions#_0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void <init>(br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.Result)>/result#_0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<org.picocontainer.injectors.AnnotatedFieldInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Class,boolean)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Class,boolean)>/@parameter1
<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: boolean equals(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.annotation.Annotation getBinding(java.lang.reflect.Field)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.annotation.Annotation getBinding(java.lang.reflect.Field)>/field#_0
<org.picocontainer.injectors.AnnotatedFieldInjector: boolean isAnnotatedForInjection(java.lang.reflect.Field)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: boolean isAnnotatedForInjection(java.lang.reflect.Field)>/field#_0
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.reflect.Field[] getFields(java.lang.Class)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/@parameter2
<org.picocontainer.injectors.AnnotatedFieldInjector: org.picocontainer.NameBinding makeParameterNameImpl(java.lang.reflect.AccessibleObject)>/@parameter0
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.Object memberInvocationReturn(java.lang.Object,java.lang.reflect.AccessibleObject,java.lang.Object)>/@parameter1
<org.picocontainer.injectors.AnnotatedFieldInjector: java.lang.Object memberInvocationReturn(java.lang.Object,java.lang.reflect.AccessibleObject,java.lang.Object)>/member#_0
<com.thoughtworks.xstream.XStream$2: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>/@parameter0
<org.mockito.cglib.core.EmitUtils: void load_method(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.core.MethodInfo)>/@parameter1
<org.mockito.cglib.core.EmitUtils: void load_method(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.core.MethodInfo)>/method#_0
<javassist.bytecode.stackmap.BasicBlock$Maker: javassist.bytecode.stackmap.BasicBlock getBBlock(javassist.bytecode.stackmap.BasicBlock$Mark)>/@parameter0
<javassist.bytecode.stackmap.BasicBlock$Maker: javassist.bytecode.stackmap.BasicBlock getBBlock(javassist.bytecode.stackmap.BasicBlock$Mark)>/m#_0
<org.mockito.cglib.core.EmitUtils: org.mockito.cglib.core.CodeEmitter begin_method(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.core.MethodInfo)>/@parameter1
<org.mockito.cglib.core.EmitUtils: org.mockito.cglib.core.CodeEmitter begin_method(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.core.MethodInfo,int)>/@parameter1
<org.mockito.cglib.core.EmitUtils: org.mockito.cglib.core.CodeEmitter begin_method(org.mockito.cglib.core.ClassEmitter,org.mockito.cglib.core.MethodInfo,int)>/method#_0
<org.springframework.core.type.StandardAnnotationMetadata: void <init>(java.lang.Class)>/@parameter0
<com.google.inject.internal.MoreTypes$GenericArrayTypeImpl: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.NumberToCharacterConverter: java.lang.Character convert(java.lang.Number)>/@parameter0
<org.springframework.core.convert.support.NumberToCharacterConverter: java.lang.Character convert(java.lang.Number)>/source#_0
<org.springframework.core.convert.support.NumberToCharacterConverter: java.lang.Object convert(java.lang.Object)>/@parameter0
<org.springframework.core.convert.support.ArrayToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ArrayToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.ArrayToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.ArrayToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.ArrayToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport$2: void <init>(org.springframework.beans.factory.support.FactoryBeanRegistrySupport,org.springframework.beans.factory.FactoryBean)>/@parameter1
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport$2: void <init>(org.springframework.beans.factory.support.FactoryBeanRegistrySupport,org.springframework.beans.factory.FactoryBean)>/l2#_0
<org.picocontainer.injectors.AnnotatedMethodInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Class,boolean)>/@parameter0
<org.picocontainer.injectors.AnnotatedMethodInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.Class,boolean)>/@parameter1
<org.picocontainer.injectors.AnnotatedMethodInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AnnotatedMethodInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/@parameter2
<org.picocontainer.injectors.AnnotatedMethodInjector: java.lang.Object injectIntoMember(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Object)>/toInject#_0
<org.picocontainer.injectors.AnnotatedMethodInjector: boolean isInjectorMethod(java.lang.reflect.Method)>/@parameter0
<org.picocontainer.injectors.AnnotatedMethodInjector: boolean isInjectorMethod(java.lang.reflect.Method)>/method#_0
<org.springframework.beans.factory.support.AutowireUtils: boolean isExcludedFromDependencyCheck(java.beans.PropertyDescriptor)>/@parameter0
<org.springframework.beans.factory.support.AutowireUtils: boolean isExcludedFromDependencyCheck(java.beans.PropertyDescriptor)>/pd#_0
<br.com.caelum.vraptor.serialization.I18nMessageSerialization: void <init>(br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.serialization.I18nMessageSerialization: void <init>(br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.Localization)>/container#_0
<org.springframework.beans.factory.support.AutowireUtils: boolean isSetterDefinedInInterface(java.beans.PropertyDescriptor,java.util.Set)>/@parameter0
<org.springframework.beans.factory.support.AutowireUtils: boolean isSetterDefinedInInterface(java.beans.PropertyDescriptor,java.util.Set)>/pd#_0
<org.springframework.beans.factory.support.AutowireUtils: java.lang.Object resolveAutowiringValue(java.lang.Object,java.lang.Class)>/@parameter1
<org.springframework.beans.factory.support.AutowireUtils: java.lang.Object resolveAutowiringValue(java.lang.Object,java.lang.Class)>/requiredType#_0
<org.springframework.web.context.support.ServletContextAwareProcessor: void <init>(javax.servlet.ServletContext,javax.servlet.ServletConfig)>/@parameter0
<org.springframework.web.context.support.ServletContextAwareProcessor: void <init>(javax.servlet.ServletContext,javax.servlet.ServletConfig)>/servletContext#_0
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/beanName#_0
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/bean#_0
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/beanName#_0
<org.mockito.internal.stubbing.answers.Returns: void <init>(java.lang.Object)>/@parameter0
<org.mockito.internal.stubbing.answers.Returns: void <init>(java.lang.Object)>/value#_0
<org.springframework.expression.spel.support.ReflectiveMethodExecutor: org.springframework.expression.TypedValue execute(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object[])>/@parameter1
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue mergeIfRequired(org.springframework.beans.PropertyValue,org.springframework.beans.PropertyValue)>/@parameter1
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue mergeIfRequired(org.springframework.beans.PropertyValue,org.springframework.beans.PropertyValue)>/currentPv#_0
<org.springframework.beans.MutablePropertyValues: boolean equals(java.lang.Object)>/@parameter0
<org.hamcrest.collection.IsEmptyCollection: boolean matchesSafely(java.util.Collection)>/@parameter0
<org.hamcrest.collection.IsEmptyCollection: boolean matchesSafely(java.util.Collection)>/item#_0
<org.hamcrest.collection.IsEmptyCollection: boolean matchesSafely(java.lang.Object)>/@parameter0
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void <init>(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)>/@parameter2
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Collection)>/@parameter1
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Collection)>/collection#_0
<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.google.common.collect.LinkedHashMultimap$SetDecorator: void <init>(com.google.common.collect.LinkedHashMultimap,java.lang.Object,java.util.Set)>/@parameter1
<com.google.common.collect.LinkedHashMultimap$SetDecorator: void <init>(com.google.common.collect.LinkedHashMultimap,java.lang.Object,java.util.Set)>/key#_0
<com.google.common.collect.LinkedHashMultimap$SetDecorator: java.util.Map$Entry createEntry(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean add(java.lang.Object)>/@parameter0
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean addAll(java.util.Collection)>/@parameter0
<com.google.common.collect.LinkedHashMultimap$SetDecorator: boolean remove(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.AdaptingInjection$1: void <init>(org.picocontainer.injectors.AdaptingInjection,java.lang.Class)>/@parameter1
<org.picocontainer.injectors.AdaptingInjection$1: void <init>(org.picocontainer.injectors.AdaptingInjection,java.lang.Class)>/l2#_0
<ognl.OgnlException: void <init>(java.lang.String,java.lang.Throwable)>/@parameter0
<ognl.OgnlException: void setEvaluation(ognl.Evaluation)>/@parameter0
<ognl.OgnlException: void setEvaluation(ognl.Evaluation)>/value#_0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.StringToPropertiesConverter: java.util.Properties convert(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/@parameter1
<com.google.gson.TypeAdapter: com.google.gson.JsonElement toJsonTree(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.StringToPropertiesConverter: java.lang.Object convert(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String attributeForAlias(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>/@parameter2
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.MapperWrapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/@parameter1
<org.springframework.beans.propertyeditors.LocaleEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.BeanWrapperImpl$4: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/@parameter1
<org.springframework.beans.BeanWrapperImpl$4: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/l2#_0
<org.springframework.context.event.SimpleApplicationEventMulticaster$1: void <init>(org.springframework.context.event.SimpleApplicationEventMulticaster,org.springframework.context.ApplicationListener,org.springframework.context.ApplicationEvent)>/@parameter1
<org.springframework.context.event.SimpleApplicationEventMulticaster$1: void <init>(org.springframework.context.event.SimpleApplicationEventMulticaster,org.springframework.context.ApplicationListener,org.springframework.context.ApplicationEvent)>/l2#_0
<org.springframework.beans.propertyeditors.PatternEditor: void setAsText(java.lang.String)>/@parameter0
<org.hamcrest.FeatureMatcher: boolean matchesSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.springframework.core.convert.support.StringToNumberConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)>/@parameter0
<ognl.internal.Entry: void <init>(java.lang.Class,java.lang.Object)>/@parameter0
<ognl.internal.Entry: void <init>(java.lang.Class,java.lang.Object)>/key#_0
<org.picocontainer.parameters.CollectionComponentParameter: boolean evaluate(org.picocontainer.ComponentAdapter)>/@parameter0
<org.picocontainer.parameters.CollectionComponentParameter: boolean evaluate(org.picocontainer.ComponentAdapter)>/adapter#_0
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/@parameter0
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/container#_0
<ognl.ASTIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.hamcrest.number.OrderingComparison: boolean matchesSafely(java.lang.Comparable)>/@parameter0
<org.hamcrest.number.OrderingComparison: boolean matchesSafely(java.lang.Comparable)>/actual#_0
<org.hamcrest.number.OrderingComparison: boolean matchesSafely(java.lang.Object)>/@parameter0
<org.picocontainer.injectors.InjectInto: void <init>(java.lang.reflect.Type,java.lang.Object)>/@parameter0
<org.picocontainer.injectors.InjectInto: void <init>(java.lang.reflect.Type,java.lang.Object)>/intoType#_0
<org.picocontainer.injectors.InjectInto: void <init>(java.lang.reflect.Type,java.lang.Object)>/@parameter1
<org.picocontainer.injectors.InjectInto: void <init>(java.lang.reflect.Type,java.lang.Object)>/intoKey#_0
<br.com.caelum.vraptor.http.route.DefaultRouter$2: boolean apply(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultRouter$2: boolean apply(br.com.caelum.vraptor.http.route.Route)>/route#_0
<br.com.caelum.vraptor.http.route.DefaultRouter$2: boolean apply(java.lang.Object)>/@parameter0
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ListPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<org.springframework.core.convert.support.MapToMapConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.MapToMapConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.MapToMapConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.MapToMapConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/response#_0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer)>/@parameter1
<org.springframework.context.support.DefaultLifecycleProcessor: void doStart(java.util.Map,java.lang.String)>/@parameter1
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void setServletContext(javax.servlet.ServletContext)>/@parameter0
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void setServletContext(javax.servlet.ServletContext)>/servletContext#_0
<org.springframework.context.support.DefaultLifecycleProcessor: void doStop(java.util.Map,java.lang.String,java.util.concurrent.CountDownLatch,java.util.Set)>/@parameter1
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/paramNameProvider#_0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/@parameter2
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.deserialization.gson.JsonDeserializers,javax.servlet.http.HttpServletRequest)>/request#_0
<org.springframework.core.convert.support.StringToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.StringToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.StringToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.StringToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.picocontainer.injectors.AnnotatedMethodInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.AnnotatedMethodInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Class[] parseGenericParameters(java.lang.reflect.Method,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Class[] parseGenericParameters(java.lang.reflect.Method,java.lang.Class)>/method#_0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Class getAdapterType(com.google.gson.JsonDeserializer)>/@parameter0
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Class getAdapterType(com.google.gson.JsonDeserializer)>/adapter#_0
<org.springframework.beans.propertyeditors.StringArrayPropertyEditor: void setAsText(java.lang.String)>/@parameter0
<org.hamcrest.internal.ArrayIterator: void <init>(java.lang.Object)>/@parameter0
<org.hamcrest.internal.ArrayIterator: void <init>(java.lang.Object)>/array#_0
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>/name#_0
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)>/@parameter0
<com.google.common.collect.ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>/key#_0
<com.google.common.collect.ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.common.collect.ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>/value#_0
<org.springframework.beans.factory.BeanNotOfRequiredTypeException: void <init>(java.lang.String,java.lang.Class,java.lang.Class)>/@parameter0
<org.springframework.beans.factory.BeanNotOfRequiredTypeException: void <init>(java.lang.String,java.lang.Class,java.lang.Class)>/@parameter1
<org.springframework.beans.factory.BeanNotOfRequiredTypeException: void <init>(java.lang.String,java.lang.Class,java.lang.Class)>/requiredType#_0
<org.picocontainer.injectors.AnnotatedFieldInjector$1: void <init>(org.picocontainer.injectors.AnnotatedFieldInjector,java.lang.Class)>/@parameter1
<org.picocontainer.injectors.AnnotatedFieldInjector$1: void <init>(org.picocontainer.injectors.AnnotatedFieldInjector,java.lang.Class)>/l2#_0
<ognl.ObjectElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<ognl.ObjectElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/target#_0
<com.thoughtworks.xstream.converters.basic.CharConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.CharConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.basic.CharConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.basic.CharConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.basic.CharConverter: java.lang.Object fromString(java.lang.String)>/str#_0
<com.thoughtworks.xstream.converters.basic.CharConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<javax.servlet.http.HttpServletRequestWrapper: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void addAttribute(java.lang.String,java.lang.String)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/response#_0
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void setValue(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: void handleCheckedStateTransition(int,java.lang.String,java.lang.String)>/@parameter2
<com.thoughtworks.xstream.io.json.AbstractJsonWriter: int handleStateTransition(int,int,java.lang.String,java.lang.String)>/@parameter3
<org.springframework.expression.spel.support.StandardEvaluationContext: void setVariable(java.lang.String,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest$AnyController: void <init>(br.com.caelum.vraptor.Validator)>/@parameter0
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest$AnyController: void <init>(br.com.caelum.vraptor.Validator)>/validator#_0
<com.thoughtworks.xstream.io.xml.QNameMap: javax.xml.namespace.QName getQName(java.lang.String)>/@parameter0
<org.springframework.expression.spel.support.ReflectiveMethodResolver: org.springframework.expression.MethodExecutor resolve(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.util.List)>/@parameter1
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: org.joda.time.LocalDate convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverter: org.joda.time.LocalDate convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/@parameter0
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/@parameter1
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/@parameter0
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/@parameter1
<com.thoughtworks.xstream.io.ReaderWrapper: java.lang.String getAttribute(java.lang.String)>/@parameter0
<ognl.ASTXor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.GenericConversionService$2: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.GenericConversionService$2: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/source#_0
<org.springframework.expression.spel.support.StandardOperatorOverloader: boolean overridesOperation(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.support.StandardOperatorOverloader: boolean overridesOperation(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/leftOperand#_0
<org.springframework.expression.spel.support.StandardOperatorOverloader: boolean overridesOperation(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.expression.spel.support.StandardOperatorOverloader: boolean overridesOperation(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/rightOperand#_0
<org.springframework.expression.spel.support.StandardOperatorOverloader: java.lang.Object operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.support.StandardOperatorOverloader: java.lang.Object operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/leftOperand#_0
<org.springframework.expression.spel.support.StandardOperatorOverloader: java.lang.Object operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.expression.spel.support.StandardOperatorOverloader: java.lang.Object operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>/rightOperand#_0
<org.springframework.beans.propertyeditors.TimeZoneEditor: void setAsText(java.lang.String)>/@parameter0
<org.picocontainer.adapters.InstanceAdapter: void <init>(java.lang.Object,java.lang.Object,org.picocontainer.LifecycleStrategy,org.picocontainer.ComponentMonitor)>/@parameter0
<org.picocontainer.adapters.InstanceAdapter: void <init>(java.lang.Object,java.lang.Object,org.picocontainer.LifecycleStrategy,org.picocontainer.ComponentMonitor)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.picocontainer.adapters.InstanceAdapter: java.lang.Class getInstanceClass(java.lang.Object)>/@parameter0
<org.picocontainer.adapters.InstanceAdapter: java.lang.Class getInstanceClass(java.lang.Object)>/componentInstance#_0
<org.picocontainer.adapters.InstanceAdapter: void start(java.lang.Object)>/@parameter0
<org.picocontainer.adapters.InstanceAdapter: void start(java.lang.Object)>/component#_0
<org.picocontainer.adapters.InstanceAdapter: void stop(java.lang.Object)>/@parameter0
<org.picocontainer.adapters.InstanceAdapter: void stop(java.lang.Object)>/component#_0
<org.picocontainer.adapters.InstanceAdapter: void dispose(java.lang.Object)>/@parameter0
<org.picocontainer.adapters.InstanceAdapter: void dispose(java.lang.Object)>/component#_0
<org.picocontainer.adapters.InstanceAdapter: boolean hasLifecycle(java.lang.Class)>/@parameter0
<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,org.springframework.expression.spel.ExpressionState)>/@parameter0
<br.com.caelum.iogi.MultiInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<org.springframework.beans.BeanInstantiationException: void <init>(java.lang.Class,java.lang.String)>/@parameter0
<org.springframework.beans.BeanInstantiationException: void <init>(java.lang.Class,java.lang.String,java.lang.Throwable)>/@parameter0
<org.springframework.beans.BeanInstantiationException: void <init>(java.lang.Class,java.lang.String,java.lang.Throwable)>/beanClass#_0
<com.thoughtworks.xstream.core.ReferenceByIdMarshaller: java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.MethodOverrides: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: void <init>(java.lang.Object)>/@parameter0
<org.springframework.beans.propertyeditors.ClassEditor: void setAsText(java.lang.String)>/@parameter0
<com.google.gson.Gson$3: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.Gson$3: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>/@parameter0
<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>/@parameter0
<br.com.caelum.vraptor.validator.DefaultBeanValidator: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.Validator,javax.validation.MessageInterpolator)>/@parameter0
<br.com.caelum.vraptor.validator.DefaultBeanValidator: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.Validator,javax.validation.MessageInterpolator)>/localization#_0
<com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)>/@parameter0
<com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider)>/provider#_0
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: java.util.Map getParameterTypes(java.lang.reflect.Method,java.lang.String[])>/@parameter0
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class)>/@parameter0
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: java.lang.String upperFirst(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: java.lang.String upperFirst(java.lang.String)>/item#_0
<org.joda.time.format.DateTimeFormatter: void <init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/@parameter0
<org.joda.time.format.DateTimeFormatter: void <init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/l1#_0
<org.joda.time.format.DateTimeFormatter: void <init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/@parameter1
<org.joda.time.format.DateTimeFormatter: void <init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)>/l2#_0
<org.joda.time.format.DateTimeFormatter: void <init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser,java.util.Locale,boolean,org.joda.time.Chronology,org.joda.time.DateTimeZone,java.lang.Integer)>/@parameter0
<org.joda.time.format.DateTimeFormatter: void <init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser,java.util.Locale,boolean,org.joda.time.Chronology,org.joda.time.DateTimeZone,java.lang.Integer)>/l1#_0
<org.joda.time.format.DateTimeFormatter: void <init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser,java.util.Locale,boolean,org.joda.time.Chronology,org.joda.time.DateTimeZone,java.lang.Integer)>/@parameter1
<org.joda.time.format.DateTimeFormatter: void <init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser,java.util.Locale,boolean,org.joda.time.Chronology,org.joda.time.DateTimeZone,java.lang.Integer)>/l2#_0
<com.google.gson.internal.bind.TypeAdapters$1: void write(com.google.gson.stream.JsonWriter,java.lang.Class)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$1: void write(com.google.gson.stream.JsonWriter,java.lang.Class)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String decodeNode(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String decodeAttribute(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String encodeAttribute(java.lang.String)>/@parameter0
<org.mockito.internal.MockitoCore: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>/@parameter0
<org.mockito.internal.MockitoCore: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>/methodCall#_0
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.hamcrest.object.IsCompatibleType: boolean matchesSafely(java.lang.Class)>/@parameter0
<org.hamcrest.object.IsCompatibleType: void describeMismatchSafely(java.lang.Class,org.hamcrest.Description)>/@parameter0
<org.hamcrest.object.IsCompatibleType: void describeMismatchSafely(java.lang.Class,org.hamcrest.Description)>/cls#_0
<org.hamcrest.object.IsCompatibleType: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.hamcrest.object.IsCompatibleType: boolean matchesSafely(java.lang.Object)>/@parameter0
<com.google.gson.TreeTypeAdapter: void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)>/@parameter0
<com.google.gson.TreeTypeAdapter: void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)>/serializer#_0
<com.google.gson.TreeTypeAdapter: void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)>/@parameter1
<com.google.gson.TreeTypeAdapter: void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)>/deserializer#_0
<com.google.gson.TreeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<ognl.EnumerationElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<com.google.gson.TreeTypeAdapter: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object)>/@parameter1
<com.google.gson.TreeTypeAdapter: void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory,com.google.gson.TreeTypeAdapter$1)>/@parameter0
<com.google.gson.TreeTypeAdapter: void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory,com.google.gson.TreeTypeAdapter$1)>/@parameter1
<ognl.internal.ClassCacheImpl: java.lang.Object get(java.lang.Class)>/@parameter0
<ognl.internal.ClassCacheImpl: java.lang.Object get(java.lang.Class)>/key#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void <init>(java.lang.Object,java.lang.String,java.lang.String)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void <init>(java.lang.Object,java.lang.String,java.lang.String)>/value#_0
<ognl.internal.ClassCacheImpl: java.lang.Object put(java.lang.Class,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void setSource(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: void setSource(java.lang.Object)>/source#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean contentEquals(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean contentEquals(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/other#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean access$0(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean access$0(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/l0#_0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: boolean access$0(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter1
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: int access$1(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/@parameter0
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: int access$1(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/l0#_0
<org.picocontainer.injectors.AbstractInjector$NotConcreteRegistrationException: void <init>(java.lang.Class)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$NotConcreteRegistrationException: void <init>(java.lang.Class)>/componentImplementation#_0
<org.springframework.beans.propertyeditors.InputStreamEditor: void setAsText(java.lang.String)>/@parameter0
<org.picocontainer.paranamer.BytecodeReadingParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/@parameter0
<org.picocontainer.converters.CharacterConverter: java.lang.Character convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.CharacterConverter: java.lang.Character convert(java.lang.String)>/paramValue#_0
<org.picocontainer.converters.CharacterConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<org.springframework.core.convert.support.ObjectToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.ObjectToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.ObjectToCollectionConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.ObjectToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<br.com.caelum.iogi.util.NullDependencyProvider: boolean canProvide(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.util.NullDependencyProvider: boolean canProvide(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.util.NullDependencyProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.util.NullDependencyProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/target#_0
<com.thoughtworks.xstream.converters.extended.LocaleConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.LocaleConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.extended.LocaleConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.extended.LocaleConverter: int[] underscorePositions(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.extended.LocaleConverter: int[] underscorePositions(java.lang.String)>/in#_0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder,br.com.caelum.vraptor.serialization.xstream.Serializee)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.gson.VRaptorGsonBuilder,br.com.caelum.vraptor.serialization.xstream.Serializee)>/response#_0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void <init>(com.thoughtworks.xstream.converters.SingleValueConverter)>/@parameter0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void <init>(com.thoughtworks.xstream.converters.SingleValueConverter)>/wrapped#_0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: boolean canConvert(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.http.DefaultParameterNameProvider: java.lang.String[] parameterNamesFor(java.lang.reflect.AccessibleObject)>/@parameter0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.String toString(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<br.com.caelum.vraptor.http.DefaultParameterNameProvider: java.lang.reflect.Type[] parameterTypes(java.lang.reflect.AccessibleObject)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$6: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$6: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver$KeyedArgName: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver$KeyedArgName: void <init>(java.lang.Object,java.lang.Object)>/argName#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver$KeyedArgName: void <init>(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver$KeyedArgName: void <init>(java.lang.Object,java.lang.Object)>/key#_0
<org.springframework.expression.spel.SpelParseException: void <init>(java.lang.String,int,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>/@parameter0
<com.google.common.base.Predicates$InPredicate: boolean apply(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: void storeCache(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder: void storeCache(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/constructorOrFactoryMethod#_0
<org.springframework.core.CollectionFactory: boolean isApproximableCollectionType(java.lang.Class)>/@parameter0
<org.springframework.core.CollectionFactory: java.util.Collection createApproximateCollection(java.lang.Object,int)>/@parameter0
<org.springframework.core.CollectionFactory: java.util.Collection createCollection(java.lang.Class,int)>/@parameter0
<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.Class findType(java.lang.String)>/@parameter0
<org.springframework.core.CollectionFactory: boolean isApproximableMapType(java.lang.Class)>/@parameter0
<org.springframework.core.CollectionFactory: java.util.Map createApproximateMap(java.lang.Object,int)>/@parameter0
<org.springframework.core.CollectionFactory: java.util.Map createMap(java.lang.Class,int)>/@parameter0
<org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>/@parameter0
<ognl.ASTNegate: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.support.StandardTypeConverter: void <init>(org.springframework.core.convert.ConversionService)>/@parameter0
<org.springframework.expression.spel.support.StandardTypeConverter: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.expression.spel.support.StandardTypeConverter: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.expression.spel.support.StandardTypeConverter: java.lang.Object convertValue(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<javassist.bytecode.stackmap.TypeData$TypeName: void add(java.util.ArrayList,javassist.bytecode.stackmap.TypeData)>/@parameter1
<javassist.bytecode.stackmap.TypeData$TypeName: boolean equals(java.lang.Object)>/@parameter0
<com.google.common.collect.AbstractMultimap$WrappedList: void <init>(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection)>/@parameter1
<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)>/@parameter1
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: java.lang.Character convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: java.lang.Character convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/stringValue#_0
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: java.lang.Character convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: java.lang.Character convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/to#_0
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.core.type.StandardClassMetadata: void <init>(java.lang.Class)>/@parameter0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object)>/@parameter1
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>/@parameter0
<ognl.NoSuchPropertyException: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>/@parameter1
<ognl.NoSuchPropertyException: java.lang.String getReason(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.NoSuchPropertyException: java.lang.String getReason(java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/request#_0
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/container#_0
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter3
<br.com.caelum.vraptor.core.DefaultResult: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.core.ExceptionMapper,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/extractor#_0
<com.google.gson.internal.bind.TypeAdapters$19: void write(com.google.gson.stream.JsonWriter,java.net.URI)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$19: void write(com.google.gson.stream.JsonWriter,java.net.URI)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$19: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/servletRequest#_0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/deserializers#_0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/container#_0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/@parameter4
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void <init>(javax.servlet.http.HttpServletRequest,br.com.caelum.vraptor.deserialization.Deserializers,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.ioc.Container,br.com.caelum.vraptor.view.Status)>/status#_0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<com.thoughtworks.xstream.XStream$1: com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.MissingFieldException: void <init>(java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String unescapeClassName(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String unescapeClassName(java.lang.String)>/className#_0
<org.mockito.cglib.core.RejectModifierPredicate: boolean evaluate(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String unescapeFieldName(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<org.springframework.expression.spel.ast.OpAnd: void assertTypedValueNotNull(org.springframework.expression.TypedValue)>/@parameter0
<br.com.caelum.vraptor.view.DefaultValidationViewsFactory: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.view.DefaultValidationViewsFactory: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.proxy.Proxifier)>/result#_0
<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: boolean stringFoundAt(java.lang.String,int,java.lang.String)>/@parameter0
<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: boolean stringFoundAt(java.lang.String,int,java.lang.String)>/name#_0
<org.springframework.core.convert.support.CollectionToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<org.springframework.core.convert.support.CollectionToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceType#_0
<org.springframework.core.convert.support.CollectionToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter1
<org.springframework.core.convert.support.CollectionToArrayConverter: boolean matches(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/targetType#_0
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/@parameter0
<ognl.ASTTest: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTTest: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTTest: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.util.Stringnifier: java.lang.String simpleNameFor(java.lang.reflect.AccessibleObject)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider$1: void <init>(com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider,java.io.InputStream,java.lang.Class)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider$1: void <init>(com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider,java.io.InputStream,java.lang.Class)>/l3#_0
<br.com.caelum.vraptor.util.ISO8601Util: java.lang.String fromCalendar(java.util.Calendar)>/@parameter0
<br.com.caelum.vraptor.util.ISO8601Util: java.lang.String fromCalendar(java.util.Calendar)>/calendar#_0
<br.com.caelum.vraptor.util.ISO8601Util: java.util.Calendar toCalendar(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>/@parameter0
<org.hamcrest.core.SubstringMatcher: boolean matchesSafely(java.lang.String)>/@parameter0
<org.hamcrest.core.SubstringMatcher: void describeMismatchSafely(java.lang.String,org.hamcrest.Description)>/@parameter0
<org.hamcrest.core.SubstringMatcher: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.hamcrest.core.SubstringMatcher: boolean matchesSafely(java.lang.Object)>/@parameter0
<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>/@parameter0
<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>/reference#_0
<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>/reference#_0
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Comparable,java.lang.Comparable)>/@parameter0
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Comparable,java.lang.Comparable)>/a#_0
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Comparable,java.lang.Comparable)>/@parameter1
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: void <init>(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: void <init>(java.lang.Class)>/targetType#_0
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Number convert(java.lang.Character)>/@parameter0
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Number convert(java.lang.Character)>/source#_0
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Object convert(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$5: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$5: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.Object)>/l2#_0
<com.thoughtworks.xstream.io.xml.StaxWriter: void addAttribute(java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.io.xml.StaxWriter: void setValue(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.adapters.HibernateProxySerializer: com.google.gson.JsonElement serialize(org.hibernate.proxy.HibernateProxy,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.adapters.HibernateProxySerializer: com.google.gson.JsonElement serialize(org.hibernate.proxy.HibernateProxy,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/proxyObj#_0
<br.com.caelum.vraptor.serialization.gson.adapters.HibernateProxySerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean isMatched(java.lang.Object)>/@parameter0
<com.google.common.collect.RegularImmutableMap$NonTerminalEntry: void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>/@parameter0
<com.google.common.collect.RegularImmutableMap$NonTerminalEntry: void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>/@parameter1
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: boolean isNotSurplus(java.lang.Object)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: void describeMismatch(org.hamcrest.Matcher,java.lang.Object)>/@parameter0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: void describeMismatch(org.hamcrest.Matcher,java.lang.Object)>/matcher#_0
<org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries: void describeMismatch(org.hamcrest.Matcher,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerSingleton(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingleton(java.lang.String,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingleton(java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingleton(java.lang.String,java.lang.Object)>/singletonObject#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingletonFactory(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,boolean)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void onSuppressedException(java.lang.Exception)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void removeSingleton(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setAsText(java.lang.String)>/@parameter0
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean containsSingleton(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void beforeSingletonCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void afterSingletonCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isSingletonCurrentlyInCreation(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDisposableBean(java.lang.String,org.springframework.beans.factory.DisposableBean)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerContainedBean(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerContainedBean(java.lang.String,java.lang.String)>/@parameter1
<org.springframework.beans.propertyeditors.CustomCollectionEditor: java.lang.Object convertElement(java.lang.Object)>/@parameter0
<org.springframework.beans.propertyeditors.CustomCollectionEditor: java.lang.Object convertElement(java.lang.Object)>/element#_0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>/@parameter1
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean hasDependentBean(java.lang.String)>/@parameter0
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.String[] getDependentBeans(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.String[] getDependenciesForBean(java.lang.String)>/@parameter0
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroySingleton(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void destroyBean(java.lang.String,org.springframework.beans.factory.DisposableBean)>/@parameter0
<org.springframework.web.context.support.ServletContextResource: void <init>(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.resource.DefaultResourceMethod: void <init>(br.com.caelum.vraptor.resource.ResourceClass,java.lang.reflect.Method)>/@parameter1
<br.com.caelum.vraptor.resource.DefaultResourceMethod: void <init>(br.com.caelum.vraptor.resource.ResourceClass,java.lang.reflect.Method)>/method#_0
<br.com.caelum.vraptor.resource.DefaultResourceMethod: br.com.caelum.vraptor.resource.ResourceMethod instanceFor(java.lang.Class,java.lang.reflect.Method)>/@parameter1
<br.com.caelum.vraptor.resource.DefaultResourceMethod: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$MyColConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$MyColConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/arg0#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$MyColConverter: boolean canConvert(java.lang.Class)>/@parameter0
<ognl.SimpleNode: void jjtAddChild(ognl.Node,int)>/@parameter0
<ognl.SimpleNode: void jjtAddChild(ognl.Node,int)>/n#_0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParser: void <init>(br.com.caelum.vraptor.http.route.Router)>/@parameter0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParser: void <init>(br.com.caelum.vraptor.http.route.Router)>/router#_0
<ognl.SimpleNode: java.lang.Object evaluateGetValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.SimpleNode: void evaluateSetValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.SimpleNode: void evaluateSetValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.SimpleNode: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.SimpleNode: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target#_0
<ognl.SimpleNode: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.SimpleNode: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/value#_0
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry)>/@parameter0
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry)>/entry#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.ProxyInitializer,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/response#_0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/@parameter0
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry,com.google.inject.internal.util.$ImmutableMap$1)>/@parameter0
<org.springframework.beans.factory.config.BeanDefinitionHolder: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String,java.lang.String[])>/@parameter1
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: java.lang.Byte convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: java.lang.Byte convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)>/@parameter0
<net.vidageek.mirror.list.SameNameMatcher: boolean accepts(java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.list.SameNameMatcher: boolean accepts(java.lang.reflect.Method)>/method#_0
<net.vidageek.mirror.list.SameNameMatcher: boolean accepts(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.ast.Indexer: void <init>(int,org.springframework.expression.spel.ast.SpelNodeImpl)>/@parameter1
<org.springframework.expression.spel.ast.Indexer: void <init>(int,org.springframework.expression.spel.ast.SpelNodeImpl)>/expr#_0
<org.picocontainer.converters.FloatConverter: java.lang.Float convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.FloatConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<junit.framework.ComparisonCompactor: void <init>(int,java.lang.String,java.lang.String)>/@parameter2
<junit.framework.ComparisonCompactor: void <init>(int,java.lang.String,java.lang.String)>/actual#_0
<junit.framework.ComparisonCompactor: java.lang.String compactString(java.lang.String)>/@parameter0
<junit.framework.ComparisonCompactor: java.lang.String compactString(java.lang.String)>/source#_0
<br.com.caelum.vraptor.interceptor.TopologicalSortedInterceptorRegistryTest$1: boolean matchesSafely(java.util.List)>/@parameter0
<br.com.caelum.vraptor.interceptor.TopologicalSortedInterceptorRegistryTest$1: boolean matchesSafely(java.util.List)>/item#_0
<br.com.caelum.vraptor.interceptor.TopologicalSortedInterceptorRegistryTest$1: boolean matchesSafely(java.lang.Object)>/@parameter0
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.ast.Indexer: boolean growCollection(org.springframework.expression.spel.ExpressionState,java.lang.Class,int,java.util.Collection)>/@parameter1
<org.springframework.expression.spel.ast.Indexer: boolean growCollection(org.springframework.expression.spel.ExpressionState,java.lang.Class,int,java.util.Collection)>/elementType#_0
<org.springframework.expression.spel.ast.Indexer: boolean growCollection(org.springframework.expression.spel.ExpressionState,java.lang.Class,int,java.util.Collection)>/@parameter3
<org.springframework.expression.spel.ast.Indexer: boolean growCollection(org.springframework.expression.spel.ExpressionState,java.lang.Class,int,java.util.Collection)>/collection#_0
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/@parameter1
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/@parameter3
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/@parameter4
<org.springframework.expression.spel.ast.Indexer: java.lang.Object accessArrayElement(java.lang.Object,int)>/@parameter0
<com.google.gson.internal.bind.TypeAdapters$14: void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$14: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.config.ApplicationConfiguration: void <init>(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.config.ApplicationConfiguration: void <init>(javax.servlet.http.HttpServletRequest)>/request#_0
<javassist.util.proxy.ProxyFactory: void override(java.lang.String,java.lang.reflect.Method,java.lang.String,int,java.lang.String,javassist.bytecode.ClassFile,javassist.bytecode.ConstPool)>/@parameter1
<com.google.gson.internal.LinkedTreeMap: java.lang.Object get(java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap: boolean containsKey(java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/value#_0
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>/@parameter0
<javassist.util.proxy.ProxyFactory: boolean isVisible(int,java.lang.String,java.lang.reflect.Member)>/@parameter2
<javassist.util.proxy.ProxyFactory: boolean isVisible(int,java.lang.String,java.lang.reflect.Member)>/meth#_0
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object)>/@parameter0
<javassist.util.proxy.ProxyFactory: java.lang.String keyToDesc(java.lang.String)>/@parameter0
<javassist.util.proxy.ProxyFactory: java.lang.String keyToDesc(java.lang.String)>/key#_0
<javassist.util.proxy.ProxyFactory: javassist.bytecode.MethodInfo makeConstructor(java.lang.String,java.lang.reflect.Constructor,javassist.bytecode.ConstPool,java.lang.Class,boolean)>/@parameter1
<javassist.util.proxy.ProxyFactory: javassist.bytecode.MethodInfo makeConstructor(java.lang.String,java.lang.reflect.Constructor,javassist.bytecode.ConstPool,java.lang.Class,boolean)>/cons#_0
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object)>/@parameter0
<javassist.util.proxy.ProxyFactory: javassist.bytecode.MethodInfo makeDelegator(java.lang.reflect.Method,java.lang.String,javassist.bytecode.ConstPool,java.lang.Class,java.lang.String)>/@parameter0
<javassist.util.proxy.ProxyFactory: javassist.bytecode.MethodInfo makeForwarder(java.lang.String,java.lang.reflect.Method,java.lang.String,javassist.bytecode.ConstPool,java.lang.Class,java.lang.String,int)>/@parameter1
<javassist.util.proxy.ProxyFactory: void setThrows(javassist.bytecode.MethodInfo,javassist.bytecode.ConstPool,java.lang.reflect.Method)>/@parameter2
<javassist.util.proxy.ProxyFactory: void setThrows(javassist.bytecode.MethodInfo,javassist.bytecode.ConstPool,java.lang.reflect.Method)>/orig#_0
<com.thoughtworks.xstream.core.SequenceGenerator: java.lang.String next(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.SequenceGenerator: java.lang.String next(java.lang.Object)>/item#_0
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/@parameter0
<br.com.caelum.vraptor.scan.DynamicWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/registry#_0
<org.joda.time.format.DateTimeParserBucket$SavedField: int compareTo(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/@parameter0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: void <init>(br.com.caelum.vraptor.core.Localization)>/localization#_0
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: org.joda.time.LocalDateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/@parameter2
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverter: org.joda.time.LocalDateTime convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/bundle#_0
<org.springframework.context.expression.BeanFactoryAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanFactoryAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.BeanFactoryAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanFactoryAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.BeanFactoryAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.expression.BeanFactoryAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/target#_0
<org.springframework.context.expression.BeanFactoryAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/@parameter2
<org.springframework.context.expression.BeanFactoryAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/name#_0
<org.springframework.context.expression.BeanFactoryAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.context.expression.BeanFactoryAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/target#_0
<org.springframework.context.expression.BeanFactoryAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.context.expression.BeanFactoryAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/name#_0
<org.springframework.context.expression.BeanFactoryAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<org.springframework.context.expression.BeanFactoryAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/newValue#_0
<javassist.CtMethod: void <init>(javassist.bytecode.MethodInfo,javassist.CtClass)>/@parameter0
<org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard: java.lang.Object observe(java.lang.Class,java.lang.Object)>/@parameter0
<org.hamcrest.BaseMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.springframework.web.context.support.ServletContextScope: void <init>(javax.servlet.ServletContext)>/@parameter0
<org.springframework.web.context.support.ServletContextScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/@parameter0
<org.springframework.web.context.support.ServletContextScope: void registerDestructionCallback(java.lang.String,java.lang.Runnable)>/@parameter0
<org.springframework.web.context.support.ServletContextScope: java.lang.Object resolveContextualObject(java.lang.String)>/@parameter0
<org.springframework.web.context.support.ServletContextScope: java.lang.Object resolveContextualObject(java.lang.String)>/key#_0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: void describeMismatchSafely(br.com.caelum.vraptor.http.route.Route,org.hamcrest.Description)>/@parameter0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: void describeMismatchSafely(br.com.caelum.vraptor.http.route.Route,org.hamcrest.Description)>/item#_0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: boolean matchesSafely(br.com.caelum.vraptor.http.route.Route)>/@parameter0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: boolean matchesSafely(br.com.caelum.vraptor.http.route.Route)>/item#_0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: void describeMismatchSafely(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)>/@parameter0
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext,java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest$2: boolean matchesSafely(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$3: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/@parameter2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$3: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/l3#_0
<org.springframework.web.context.support.WebApplicationContextUtils: void registerWebApplicationScopes(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,javax.servlet.ServletContext)>/@parameter1
<org.springframework.web.context.support.WebApplicationContextUtils: void registerEnvironmentBeans(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,javax.servlet.ServletContext,javax.servlet.ServletConfig)>/@parameter1
<org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/@parameter0
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.Mockito: org.mockito.stubbing.Stubber doReturn(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.core.util.OrderRetainingMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$4: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$4: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,java.lang.Object)>/l2#_0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$4: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,java.lang.Object)>/@parameter2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$4: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.String,java.lang.Object)>/l3#_0
<org.picocontainer.monitors.NullComponentMonitor: java.lang.reflect.Constructor instantiating(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor)>/@parameter2
<org.picocontainer.monitors.NullComponentMonitor: java.lang.reflect.Constructor instantiating(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor)>/constructor#_0
<org.picocontainer.monitors.NullComponentMonitor: void instantiationFailed(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Exception)>/@parameter2
<org.picocontainer.monitors.NullComponentMonitor: void instantiationFailed(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Exception)>/constructor#_0
<org.picocontainer.monitors.NullComponentMonitor: void instantiated(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Object,java.lang.Object[],long)>/@parameter2
<org.picocontainer.monitors.NullComponentMonitor: void instantiated(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor,java.lang.Object,java.lang.Object[],long)>/constructor#_0
<org.picocontainer.monitors.NullComponentMonitor: java.lang.Object invoking(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,java.lang.Object[])>/@parameter2
<org.picocontainer.monitors.NullComponentMonitor: java.lang.Object invoking(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,java.lang.Object[])>/member#_0
<org.picocontainer.monitors.NullComponentMonitor: java.lang.Object invoking(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,java.lang.Object[])>/@parameter3
<org.picocontainer.monitors.NullComponentMonitor: java.lang.Object invoking(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,java.lang.Object[])>/instance#_0
<org.picocontainer.monitors.NullComponentMonitor: void invoked(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,long,java.lang.Object[],java.lang.Object)>/@parameter2
<org.picocontainer.monitors.NullComponentMonitor: void invoked(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,long,java.lang.Object[],java.lang.Object)>/member#_0
<org.picocontainer.monitors.NullComponentMonitor: void invoked(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,long,java.lang.Object[],java.lang.Object)>/@parameter3
<org.picocontainer.monitors.NullComponentMonitor: void invoked(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Member,java.lang.Object,long,java.lang.Object[],java.lang.Object)>/instance#_0
<org.picocontainer.monitors.NullComponentMonitor: void invocationFailed(java.lang.reflect.Member,java.lang.Object,java.lang.Exception)>/@parameter0
<org.picocontainer.monitors.NullComponentMonitor: void invocationFailed(java.lang.reflect.Member,java.lang.Object,java.lang.Exception)>/member#_0
<org.picocontainer.monitors.NullComponentMonitor: java.lang.Object noComponentFound(org.picocontainer.MutablePicoContainer,java.lang.Object)>/@parameter1
<org.picocontainer.monitors.NullComponentMonitor: java.lang.Object noComponentFound(org.picocontainer.MutablePicoContainer,java.lang.Object)>/componentKey#_0
<ognl.OgnlContext: void setClassResolver(ognl.ClassResolver)>/@parameter0
<ognl.OgnlContext: void setClassResolver(ognl.ClassResolver)>/value#_0
<ognl.OgnlContext: void setTypeConverter(ognl.TypeConverter)>/@parameter0
<ognl.OgnlContext: void setTypeConverter(ognl.TypeConverter)>/value#_0
<ognl.OgnlContext: void setMemberAccess(ognl.MemberAccess)>/@parameter0
<ognl.OgnlContext: void setMemberAccess(ognl.MemberAccess)>/value#_0
<ognl.OgnlContext: void setRoot(java.lang.Object)>/@parameter0
<ognl.OgnlContext: void setRoot(java.lang.Object)>/value#_0
<ognl.OgnlContext: void setLastEvaluation(ognl.Evaluation)>/@parameter0
<ognl.OgnlContext: void setLastEvaluation(ognl.Evaluation)>/value#_0
<ognl.OgnlContext: void setCurrentObject(java.lang.Object)>/@parameter0
<ognl.OgnlContext: void setCurrentObject(java.lang.Object)>/value#_0
<ognl.OgnlContext: void setCurrentType(java.lang.Class)>/@parameter0
<ognl.OgnlContext: void setPreviousType(java.lang.Class)>/@parameter0
<ognl.OgnlContext: void setCurrentEvaluation(ognl.Evaluation)>/@parameter0
<ognl.OgnlContext: void setCurrentEvaluation(ognl.Evaluation)>/value#_0
<ognl.OgnlContext: void setRootEvaluation(ognl.Evaluation)>/@parameter0
<ognl.OgnlContext: void setRootEvaluation(ognl.Evaluation)>/value#_0
<ognl.OgnlContext: void pushEvaluation(ognl.Evaluation)>/@parameter0
<ognl.OgnlContext: boolean containsKey(java.lang.Object)>/@parameter0
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/@parameter0
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter0
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.util.NumberUtils: java.lang.Number convertNumberToTargetClass(java.lang.Number,java.lang.Class)>/@parameter0
<org.springframework.util.NumberUtils: java.lang.Number convertNumberToTargetClass(java.lang.Number,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.VRaptor$1: void <init>(br.com.caelum.vraptor.VRaptor,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter1
<br.com.caelum.vraptor.VRaptor$1: void <init>(br.com.caelum.vraptor.VRaptor,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/l2#_0
<br.com.caelum.vraptor.VRaptor$1: void <init>(br.com.caelum.vraptor.VRaptor,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@parameter2
<br.com.caelum.vraptor.VRaptor$1: void <init>(br.com.caelum.vraptor.VRaptor,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/l3#_0
<br.com.caelum.vraptor.ioc.spring.SpringProvider: void start(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.ioc.spring.SpringProvider: org.springframework.web.context.ConfigurableWebApplicationContext getParentApplicationContext(javax.servlet.ServletContext)>/@parameter0
<ognl.OgnlContext: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.util.NumberUtils: void raiseOverflowException(java.lang.Number,java.lang.Class)>/@parameter0
<org.springframework.util.NumberUtils: void raiseOverflowException(java.lang.Number,java.lang.Class)>/@parameter1
<org.springframework.util.NumberUtils: void raiseOverflowException(java.lang.Number,java.lang.Class)>/targetClass#_0
<org.picocontainer.converters.ByteConverter: java.lang.Byte convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.ByteConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class)>/@parameter1
<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>/str#_0
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class,java.text.NumberFormat)>/@parameter0
<org.springframework.util.NumberUtils: boolean isHexNumber(java.lang.String)>/@parameter0
<org.springframework.util.NumberUtils: boolean isHexNumber(java.lang.String)>/value#_0
<org.springframework.util.NumberUtils: java.math.BigInteger decodeBigInteger(java.lang.String)>/@parameter0
<org.springframework.util.NumberUtils: java.math.BigInteger decodeBigInteger(java.lang.String)>/value#_0
<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: boolean equals(java.lang.Object)>/@parameter0
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newConstItem(java.lang.Object)>/@parameter0
<org.mockito.asm.ClassWriter: int newUTF8(java.lang.String)>/@parameter0
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newClassItem(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$7: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.reflect.Method,java.lang.Object)>/@parameter2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$7: void <init>(org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory,java.lang.reflect.Method,java.lang.Object)>/l3#_0
<org.mockito.asm.ClassWriter: int newClass(java.lang.String)>/@parameter0
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: java.util.List get(java.lang.Object)>/@parameter0
<org.mockito.asm.ClassWriter: org.mockito.asm.Item newString(java.lang.String)>/@parameter0
<org.mockito.asm.ClassWriter: int addType(java.lang.String)>/@parameter0
<org.mockito.asm.ClassWriter: int addUninitializedType(java.lang.String,int)>/@parameter0
<org.mockito.asm.ClassWriter: int addUninitializedType(java.lang.String,int)>/type#_0
<net.vidageek.mirror.DefaultAccessorsController: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<net.vidageek.mirror.DefaultAccessorsController: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/target#_0
<org.mockito.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>/@parameter0
<org.mockito.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>/type1#_0
<org.mockito.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>/@parameter1
<org.mockito.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>/type2#_0
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.String getClassName(java.lang.ClassLoader)>/@parameter0
<org.mockito.cglib.core.AbstractClassGenerator: java.util.Set getClassNameCache(java.lang.ClassLoader)>/@parameter0
<org.mockito.cglib.core.AbstractClassGenerator: void setClassLoader(java.lang.ClassLoader)>/@parameter0
<org.mockito.cglib.core.AbstractClassGenerator: void setClassLoader(java.lang.ClassLoader)>/classLoader#_0
<org.picocontainer.PicoLifecycleException: void <init>(java.lang.reflect.Method,java.lang.Object,java.lang.Throwable)>/@parameter1
<org.picocontainer.PicoLifecycleException: void <init>(java.lang.reflect.Method,java.lang.Object,java.lang.Throwable)>/instance#_0
<net.vidageek.mirror.dsl.Mirror: net.vidageek.mirror.dsl.ClassController on(java.lang.Class)>/@parameter0
<net.vidageek.mirror.dsl.Mirror: net.vidageek.mirror.dsl.AccessorsController on(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: void <init>(br.com.caelum.vraptor.proxy.Proxifier)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: void <init>(br.com.caelum.vraptor.proxy.Proxifier)>/proxifier#_0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.expression.spel.support.ReflectionHelper: void convertAllArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.reflect.Method)>/@parameter2
<com.google.gson.JsonArray: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findGetter(java.lang.Object,java.lang.String)>/@parameter0
<ognl.IteratorElementsAccessor: java.util.Enumeration getElements(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findSetter(java.lang.Object,java.lang.String,java.lang.Class)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/bean#_0
<org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/beanName#_0
<org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/bean#_0
<org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker: java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)>/@parameter1
<org.springframework.beans.ConversionNotSupportedException: void <init>(java.beans.PropertyChangeEvent,java.lang.Class,java.lang.Throwable)>/@parameter1
<org.springframework.beans.ConversionNotSupportedException: void <init>(java.lang.Object,java.lang.Class,java.lang.Throwable)>/@parameter0
<org.springframework.beans.ConversionNotSupportedException: void <init>(java.lang.Object,java.lang.Class,java.lang.Throwable)>/@parameter1
<com.thoughtworks.xstream.converters.basic.DateConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.DateConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.basic.DateConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.thoughtworks.xstream.converters.basic.DateConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,com.google.common.base.Predicate)>/@parameter1
<com.google.common.collect.Iterators: boolean any(java.util.Iterator,com.google.common.base.Predicate)>/@parameter1
<com.google.common.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function)>/@parameter1
<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object)>/@parameter0
<org.mockito.cglib.core.MethodInfoTransformer: java.lang.Object transform(java.lang.Object)>/@parameter0
<org.mockito.cglib.core.EmitUtils$13: java.lang.Object transform(java.lang.Object)>/@parameter0
<javax.servlet.http.HttpServletResponseWrapper: void <init>(javax.servlet.http.HttpServletResponse)>/@parameter0
<com.google.gson.JsonPrimitive: void <init>(java.lang.Number)>/@parameter0
<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>/@parameter0
<com.google.gson.JsonPrimitive: void setValue(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.NullProxyInitializer: java.lang.Class getActualClass(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.NullProxyInitializer: java.lang.Class getActualClass(java.lang.Object)>/obj#_0
<br.com.caelum.vraptor.serialization.NullProxyInitializer: void initialize(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.NullProxyInitializer: void initialize(java.lang.Object)>/obj#_0
<br.com.caelum.vraptor.serialization.NullProxyInitializer: boolean isProxy(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.serialization.NullProxyInitializer: boolean isProxy(java.lang.Class)>/obj#_0
<com.google.gson.JsonPrimitive: boolean isPrimitiveOrString(java.lang.Object)>/@parameter0
<com.google.gson.JsonPrimitive: boolean isPrimitiveOrString(java.lang.Object)>/target#_0
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/@parameter0
<com.google.gson.JsonPrimitive: boolean isIntegral(com.google.gson.JsonPrimitive)>/@parameter0
<com.google.gson.JsonPrimitive: boolean isIntegral(com.google.gson.JsonPrimitive)>/primitive#_0
<br.com.caelum.iogi.collections.ListInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.collections.ListInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.collections.ListInstantiator: java.util.List instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<br.com.caelum.iogi.collections.ListInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/@parameter0
<ognl.ASTEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: java.lang.Class getTargetClass(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.basic.IntConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.IntConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.basic.IntConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<ognl.OgnlRuntime: java.lang.Class[] getParameterTypes(java.lang.reflect.Method)>/@parameter0
<ognl.OgnlRuntime: java.lang.Class[] findParameterTypes(java.lang.Class,java.lang.reflect.Method)>/@parameter0
<ognl.OgnlRuntime: java.lang.Class[] findParameterTypes(java.lang.Class,java.lang.reflect.Method)>/type#_0
<ognl.OgnlRuntime: java.lang.Class[] findParameterTypes(java.lang.Class,java.lang.reflect.Method)>/@parameter1
<ognl.OgnlRuntime: java.security.Permission getPermission(java.lang.reflect.Method)>/@parameter0
<ognl.OgnlRuntime: java.security.Permission getPermission(java.lang.reflect.Method)>/method#_0
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: java.lang.Class getArgClass(java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: java.lang.Class getArgClass(java.lang.Object)>/arg#_0
<ognl.OgnlRuntime: boolean isTypeCompatible(java.lang.Object,java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: boolean areArgsCompatible(java.lang.Object[],java.lang.Class[])>/@parameter0
<ognl.OgnlRuntime: boolean areArgsCompatible(java.lang.Object[],java.lang.Class[],java.lang.reflect.Method)>/@parameter0
<ognl.OgnlRuntime: boolean areArgsCompatible(java.lang.Object[],java.lang.Class[],java.lang.reflect.Method)>/args#_0
<ognl.OgnlRuntime: boolean areArgsCompatible(java.lang.Object[],java.lang.Class[],java.lang.reflect.Method)>/@parameter2
<ognl.OgnlRuntime: boolean areArgsCompatible(java.lang.Object[],java.lang.Class[],java.lang.reflect.Method)>/m#_0
<ognl.ArrayElementsAccessor$1: void <init>(ognl.ArrayElementsAccessor,java.lang.Object)>/@parameter1
<ognl.ArrayElementsAccessor$1: void <init>(ognl.ArrayElementsAccessor,java.lang.Object)>/l2#_0
<ognl.OgnlRuntime: boolean isInstance(ognl.OgnlContext,java.lang.Object,java.lang.String)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter2
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter3
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/@parameter4
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter3
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter5
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/args#_0
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/@parameter6
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/newArgs#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter4
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter5
<ognl.OgnlRuntime: java.lang.reflect.Constructor getConvertedConstructorAndArgs(ognl.OgnlContext,java.lang.Object,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter3
<ognl.OgnlRuntime: java.lang.reflect.Constructor getConvertedConstructorAndArgs(ognl.OgnlContext,java.lang.Object,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter4
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter3
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter5
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/@parameter6
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter0
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter2
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter4
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/@parameter6
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.Object[] getArgs(java.lang.reflect.Method)>/@parameter0
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.Object[] getArgs(java.lang.reflect.Method)>/method#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/result#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter1
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/info#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/@parameter2
<br.com.caelum.vraptor.interceptor.OutjectResult: void <init>(br.com.caelum.vraptor.Result,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.interceptor.TypeNameExtractor)>/extractor#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/method#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter2
<ognl.OgnlRuntime: java.lang.Object callStaticMethod(ognl.OgnlContext,java.lang.String,java.lang.String,java.lang.Object[])>/@parameter3
<ognl.OgnlRuntime: java.lang.Object callMethod(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object[])>/@parameter1
<ognl.OgnlRuntime: java.lang.Object callMethod(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object[])>/@parameter3
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/@parameter2
<org.apache.log4j.Hierarchy: void fireRemoveAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/@parameter2
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/@parameter0
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/@parameter1
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/@parameter2
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/@parameter3
<com.google.common.collect.RegularImmutableMap$TerminalEntry: void <init>(java.lang.Object,java.lang.Object)>/@parameter0
<com.google.common.collect.RegularImmutableMap$TerminalEntry: void <init>(java.lang.Object,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.security.AnyTypePermission: boolean equals(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.security.AnyTypePermission: boolean equals(java.lang.Object)>/obj#_0
<ognl.OgnlRuntime: java.util.Map getFields(java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/@parameter1
<org.springframework.beans.propertyeditors.CustomBooleanEditor: void setAsText(java.lang.String)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/@parameter2
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<ognl.OgnlRuntime: java.util.List getDeclaredMethods(java.lang.Class,java.lang.String,boolean)>/@parameter1
<br.com.caelum.vraptor.serialization.xstream.Serializee: void setRoot(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.xstream.Serializee: void setRoot(java.lang.Object)>/root#_0
<ognl.OgnlRuntime: boolean isMethodCallable(java.lang.reflect.Method)>/@parameter0
<ognl.OgnlRuntime: boolean isMethodCallable(java.lang.reflect.Method)>/m#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getGetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/@parameter2
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/@parameter0
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/@parameter1
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/@parameter2
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/@parameter3
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/context#_0
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/@parameter2
<org.springframework.expression.common.CompositeStringExpression: void <init>(java.lang.String,org.springframework.expression.Expression[])>/@parameter0
<org.springframework.expression.common.CompositeStringExpression: void <init>(java.lang.String,org.springframework.expression.Expression[])>/expressionString#_0
<com.google.inject.internal.util.$AbstractMapEntry: boolean equals(java.lang.Object)>/@parameter0
<ognl.OgnlRuntime: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.Class,java.lang.String)>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method findClosestMatchingMethod(java.lang.Class,java.lang.reflect.Method,java.lang.String,java.lang.Class,boolean)>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method findClosestMatchingMethod(java.lang.Class,java.lang.reflect.Method,java.lang.String,java.lang.Class,boolean)>/m#_0
<ognl.OgnlRuntime: java.lang.reflect.Method findClosestMatchingMethod(java.lang.Class,java.lang.reflect.Method,java.lang.String,java.lang.Class,boolean)>/@parameter3
<ognl.OgnlRuntime: java.lang.reflect.Method findClosestMatchingMethod(java.lang.Class,java.lang.reflect.Method,java.lang.String,java.lang.Class,boolean)>/propertyType#_0
<org.apache.commons.fileupload.servlet.ServletFileUpload: boolean isMultipartContent(javax.servlet.http.HttpServletRequest)>/@parameter0
<ognl.OgnlRuntime: ognl.PropertyAccessor getPropertyAccessor(java.lang.Class)>/@parameter0
<org.hamcrest.core.IsNull: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsNull: boolean matches(java.lang.Object)>/o#_0
<ognl.OgnlRuntime: ognl.ElementsAccessor getElementsAccessor(java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: ognl.NullHandler getNullHandler(java.lang.Class)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/@parameter0
<ognl.OgnlRuntime: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<ognl.OgnlRuntime: int getIndexedPropertyType(ognl.OgnlContext,java.lang.Class,java.lang.String)>/@parameter2
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/@parameter3
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/@parameter4
<org.springframework.beans.propertyeditors.URLEditor: void setAsText(java.lang.String)>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getReadMethod(java.lang.Class,java.lang.String,int)>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getReadMethod(java.lang.Class,java.lang.String,int)>/name#_0
<com.thoughtworks.xstream.mapper.CannotResolveClassException: void <init>(java.lang.String)>/@parameter0
<ognl.OgnlRuntime: java.lang.reflect.Method getWriteMethod(java.lang.Class,java.lang.String)>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getWriteMethod(java.lang.Class,java.lang.String,int)>/@parameter1
<ognl.OgnlRuntime: java.lang.reflect.Method getWriteMethod(java.lang.Class,java.lang.String,int)>/name#_0
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/source#_0
<org.picocontainer.behaviors.AbstractBehavior: void start(java.lang.Object)>/@parameter0
<org.picocontainer.behaviors.AbstractBehavior: void stop(java.lang.Object)>/@parameter0
<org.picocontainer.behaviors.AbstractBehavior: void dispose(java.lang.Object)>/@parameter0
<org.picocontainer.behaviors.AbstractBehavior: boolean hasLifecycle(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: void <init>(javax.servlet.ServletContext)>/context#_0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: boolean requestingStaticFile(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: java.lang.String uriRelativeToContextRoot(javax.servlet.http.HttpServletRequest)>/@parameter0
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: java.lang.String uriRelativeToContextRoot(javax.servlet.http.HttpServletRequest)>/request#_0
<com.google.common.collect.Iterators$7: void <init>(java.util.Iterator,com.google.common.base.Predicate)>/@parameter1
<com.google.common.collect.Iterators$7: void <init>(java.util.Iterator,com.google.common.base.Predicate)>/l2#_0
<org.springframework.beans.factory.support.SimpleInstantiationStrategy$2: void <init>(org.springframework.beans.factory.support.SimpleInstantiationStrategy,java.lang.reflect.Constructor)>/@parameter1
<org.springframework.beans.factory.support.SimpleInstantiationStrategy$2: void <init>(org.springframework.beans.factory.support.SimpleInstantiationStrategy,java.lang.reflect.Constructor)>/l2#_0
<org.springframework.core.style.StylerUtils: java.lang.String style(java.lang.Object)>/@parameter0
<net.vidageek.mirror.invoke.MethodHandlerByName: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.String)>/@parameter1
<net.vidageek.mirror.invoke.MethodHandlerByName: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.String)>/target#_0
<net.vidageek.mirror.invoke.MethodHandlerByName: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.String)>/@parameter2
<net.vidageek.mirror.invoke.MethodHandlerByName: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.String)>/clazz#_0
<javassist.CtField: void <init>(javassist.bytecode.FieldInfo,javassist.CtClass)>/@parameter0
<javassist.CtField: void <init>(javassist.bytecode.FieldInfo,javassist.CtClass)>/fi#_0
<com.google.common.collect.LinkedListMultimap$1: void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object)>/@parameter1
<com.google.common.collect.LinkedListMultimap$1: void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object)>/l2#_0
<org.picocontainer.injectors.MethodInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.String,boolean)>/@parameter0
<org.picocontainer.injectors.MethodInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,java.lang.String,boolean)>/@parameter1
<org.picocontainer.injectors.MethodInjector: boolean isNullParamAllowed(java.lang.reflect.AccessibleObject,int)>/@parameter0
<com.google.common.collect.Iterators$8: void <init>(java.util.Iterator,com.google.common.base.Function)>/@parameter1
<com.google.common.collect.Iterators$8: void <init>(java.util.Iterator,com.google.common.base.Function)>/l2#_0
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: void <init>(java.lang.Class)>/@parameter0
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: void <init>(java.lang.Class)>/targetType#_0
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Number convert(java.lang.Number)>/@parameter0
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Object convert(java.lang.Object)>/@parameter0
<org.springframework.beans.BeansException: boolean equals(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/formatResolver#_0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter1
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/result#_0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/@parameter3
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: void <init>(br.com.caelum.vraptor.http.FormatResolver,br.com.caelum.vraptor.Result,java.util.List,br.com.caelum.vraptor.restfulie.RestHeadersHandler)>/headersHandler#_0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/@parameter0
<org.springframework.util.ObjectUtils: boolean isArray(java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: boolean isArray(java.lang.Object)>/obj#_0
<org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object[])>/@parameter0
<org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object[])>/array#_0
<org.springframework.util.ObjectUtils: java.lang.Object[] toObjectArray(java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object[])>/array#_0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(boolean[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(boolean[])>/array#_0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(byte[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(byte[])>/array#_0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(char[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(char[])>/array#_0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(double[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(double[])>/array#_0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(float[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(float[])>/array#_0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(int[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(int[])>/array#_0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(long[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(long[])>/array#_0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(short[])>/@parameter0
<org.springframework.util.ObjectUtils: int nullSafeHashCode(short[])>/array#_0
<org.springframework.util.ObjectUtils: java.lang.String identityToString(java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String getIdentityHexString(java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeClassName(java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeClassName(java.lang.Object)>/obj#_0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/@parameter0
<org.mockito.cglib.core.ClassInfo: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object[])>/array#_0
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(boolean[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(boolean[])>/array#_0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(byte[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(byte[])>/array#_0
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/@parameter2
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(char[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(char[])>/array#_0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$Bazinga: void <init>(org.hibernate.proxy.HibernateProxy)>/@parameter0
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$Bazinga: void <init>(org.hibernate.proxy.HibernateProxy)>/value#_0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(double[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(double[])>/array#_0
<javassist.CtConstructor: void <init>(javassist.bytecode.MethodInfo,javassist.CtClass)>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(float[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(float[])>/array#_0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(int[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(int[])>/array#_0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(long[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(long[])>/array#_0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(short[])>/@parameter0
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(short[])>/array#_0
<com.google.gson.internal.bind.DateTypeAdapter: java.util.Date deserializeToDate(java.lang.String)>/@parameter0
<com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.Date)>/@parameter1
<com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.converters.collections.CharArrayConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.CharArrayConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.collections.CharArrayConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.mockito.internal.configuration.DefaultInjectionEngine: void inject(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>/@parameter2
<org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>/@parameter0
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: int compareTo(org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember)>/@parameter0
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: int compareTo(org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember)>/other#_0
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: int compareTo(java.lang.Object)>/@parameter0
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: java.lang.String access$1(org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember)>/@parameter0
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: java.lang.String access$1(org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember)>/l0#_0
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: org.springframework.context.Lifecycle access$2(org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember)>/@parameter0
<org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: org.springframework.context.Lifecycle access$2(org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember)>/l0#_0
<com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Date)>/@parameter1
<com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<br.com.caelum.vraptor.http.EncodingHandlerFactory: void <init>(javax.servlet.ServletContext)>/@parameter0
<br.com.caelum.vraptor.util.extjs.DefaultExtJson$1$1: void addAttribute(java.lang.String,java.lang.String)>/@parameter1
<com.google.gson.DefaultDateTypeAdapter: com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$ScalaSetter$1: boolean accepts(java.lang.reflect.Method)>/@parameter0
<br.com.caelum.iogi.reflection.NewObject$ScalaSetter$1: boolean accepts(java.lang.reflect.Method)>/method#_0
<br.com.caelum.iogi.reflection.NewObject$ScalaSetter$1: boolean accepts(java.lang.Object)>/@parameter0
<com.google.gson.DefaultDateTypeAdapter: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter0
<ognl.ExpressionSyntaxException: void <init>(java.lang.String,java.lang.Throwable)>/@parameter0
<org.springframework.util.AntPathMatcher: boolean matchStrings(java.lang.String,java.lang.String,java.util.Map)>/@parameter0
<org.springframework.util.AntPathMatcher: boolean matchStrings(java.lang.String,java.lang.String,java.util.Map)>/@parameter1
<net.vidageek.mirror.reflect.DefaultMethodReflector: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String,java.lang.Class)>/@parameter1
<net.vidageek.mirror.reflect.DefaultMethodReflector: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String,java.lang.Class)>/methodName#_0
<net.vidageek.mirror.reflect.DefaultMethodReflector: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String,java.lang.Class)>/@parameter2
<net.vidageek.mirror.reflect.DefaultMethodReflector: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String,java.lang.Class)>/clazz#_0
<org.picocontainer.injectors.ConstructorInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter3
<org.picocontainer.injectors.ConstructorInjection: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/@parameter4
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: void <init>(org.springframework.beans.factory.support.AbstractBeanFactory,java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.TypeConverter)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: void <init>(org.springframework.beans.factory.support.AbstractBeanFactory,java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.TypeConverter)>/beanName#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object evaluate(org.springframework.beans.factory.config.TypedStringValue)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object evaluate(org.springframework.beans.factory.config.TypedStringValue)>/value#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object evaluate(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Class resolveTargetType(org.springframework.beans.factory.config.TypedStringValue)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Class resolveTargetType(org.springframework.beans.factory.config.TypedStringValue)>/value#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/@parameter2
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)>/value#_0
<com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.String adaptInnerBeanName(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/ref#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setSerializationId(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>/ml#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>/ml#_0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>/ms#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean containsBeanDefinition(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/@parameter0
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/@parameter1
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Map resolveManagedMap(java.lang.Object,java.util.Map)>/mm#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/@parameter0
<com.thoughtworks.xstream.converters.collections.CollectionConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.CollectionConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.collections.CollectionConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<com.thoughtworks.xstream.core.TreeMarshaller: void convertAnother(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.collections.CollectionConverter: java.lang.Object createCollection(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.collections.CollectionConverter: java.lang.Object createCollection(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.core.TreeMarshaller: void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/@parameter0
<com.thoughtworks.xstream.core.TreeMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/@parameter0
<com.thoughtworks.xstream.core.TreeMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/@parameter1
<com.thoughtworks.xstream.core.TreeMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/converter#_0
<com.thoughtworks.xstream.core.TreeMarshaller: void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)>/@parameter0
<org.picocontainer.behaviors.Stored$Instance: java.lang.Object access$202(org.picocontainer.behaviors.Stored$Instance,java.lang.Object)>/@parameter1
<org.picocontainer.behaviors.Stored$Instance: java.lang.Object access$202(org.picocontainer.behaviors.Stored$Instance,java.lang.Object)>/x1#_0
<org.springframework.beans.BeanWrapperImpl$3: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/@parameter1
<org.springframework.beans.BeanWrapperImpl$3: void <init>(org.springframework.beans.BeanWrapperImpl,java.lang.reflect.Method)>/l2#_0
<org.picocontainer.converters.IntegerConverter: java.lang.Integer convert(java.lang.String)>/@parameter0
<org.picocontainer.converters.IntegerConverter: java.lang.Object convert(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)>/@parameter0
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/@parameter2
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/@parameter3
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/@parameter0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/@parameter0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/session#_0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/@parameter1
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void <init>(javax.servlet.http.HttpSession,br.com.caelum.vraptor.Result,br.com.caelum.vraptor.http.MutableResponse)>/result#_0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.DependencyDescriptor)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isBeanEligibleForMetadataCaching(java.lang.String)>/@parameter0
<org.springframework.expression.spel.ast.SpelNodeImpl: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/@parameter1
<org.springframework.expression.spel.ast.SpelNodeImpl: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/newValue#_0
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Class getObjectClass(java.lang.Object)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void resetBeanDefinition(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.MessageInterpolator,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.MethodInfo,javax.validation.Validator,br.com.caelum.vraptor.http.ParameterNameProvider)>/@parameter0
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void <init>(br.com.caelum.vraptor.core.Localization,javax.validation.MessageInterpolator,br.com.caelum.vraptor.Validator,br.com.caelum.vraptor.core.MethodInfo,javax.validation.Validator,br.com.caelum.vraptor.http.ParameterNameProvider)>/localization#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/@parameter1
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/@parameter1
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/@parameter2
<ognl.ASTShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/@parameter1
<ognl.ObjectPropertyAccessor: java.lang.Object getPossibleProperty(java.util.Map,java.lang.Object,java.lang.String)>/@parameter1
<ognl.ObjectPropertyAccessor: java.lang.Object getPossibleProperty(java.util.Map,java.lang.Object,java.lang.String)>/@parameter2
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter0
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter1
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter2
<ognl.ObjectPropertyAccessor: java.lang.Object setPossibleProperty(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object)>/@parameter3
<ognl.ObjectPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ObjectPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ObjectPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/oname#_0
<com.thoughtworks.xstream.converters.extended.ColorConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.extended.ColorConverter: boolean canConvert(java.lang.Class)>/type#_0
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter0
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter1
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter2
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/oname#_0
<ognl.ObjectPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/@parameter3
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/@parameter1
<com.thoughtworks.xstream.converters.extended.ColorConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/@parameter0
<org.springframework.context.support.AbstractApplicationContext$1: java.lang.String getSystemAttribute(java.lang.String)>/@parameter0
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void raiseNoSuchBeanDefinitionException(java.lang.Class,java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/@parameter0
<ognl.ObjectMethodAccessor: java.lang.Object callStaticMethod(java.util.Map,java.lang.Class,java.lang.String,java.lang.Object[])>/@parameter3
<net.vidageek.mirror.invoke.MethodHandlerByMethod: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter1
<net.vidageek.mirror.invoke.MethodHandlerByMethod: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/target#_0
<net.vidageek.mirror.invoke.MethodHandlerByMethod: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter2
<net.vidageek.mirror.invoke.MethodHandlerByMethod: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>/@parameter3
<ognl.ObjectMethodAccessor: java.lang.Object callMethod(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])>/@parameter1
<ognl.ObjectMethodAccessor: java.lang.Object callMethod(java.util.Map,java.lang.Object,java.lang.String,java.lang.Object[])>/@parameter3
<net.vidageek.mirror.invoke.DefaultInvocationHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/@parameter1
<net.vidageek.mirror.invoke.DefaultInvocationHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Object)>/target#_0
<net.vidageek.mirror.invoke.DefaultInvocationHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/@parameter1
<net.vidageek.mirror.invoke.DefaultInvocationHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/target#_0
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.MethodHandler method(java.lang.reflect.Method)>/@parameter0
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.scan.NullWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/@parameter0
<br.com.caelum.vraptor.scan.NullWebAppBootstrap: void configure(br.com.caelum.vraptor.ComponentRegistry)>/registry#_0
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter1
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/type#_0
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/@parameter2
<br.com.caelum.vraptor.serialization.gson.adapters.MessageSerializer: com.google.gson.JsonElement serialize(br.com.caelum.vraptor.validator.Message,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/context#_0
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/@parameter0
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void <init>(br.com.caelum.vraptor.http.ParameterNameProvider,br.com.caelum.vraptor.interceptor.TypeNameExtractor,br.com.caelum.vraptor.serialization.xstream.XStreamBuilder)>/provider#_0
<br.com.caelum.vraptor.deserialization.JsonDeserializer: com.thoughtworks.xstream.XStream getConfiguredXStream(java.lang.reflect.Method,java.lang.Class[])>/@parameter0
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void chooseParam(java.lang.Class[],java.lang.Object[],java.lang.Object)>/@parameter2
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void aliasParams(java.lang.reflect.Method,java.lang.Class[],com.thoughtworks.xstream.XStream)>/@parameter0
<net.vidageek.mirror.reflect.DefaultFieldReflector: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String)>/@parameter1
<net.vidageek.mirror.reflect.DefaultFieldReflector: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.String)>/fieldName#_0
<net.vidageek.mirror.reflect.DefaultFieldReflector: java.lang.reflect.Field onClass(java.lang.Class)>/@parameter0
<org.apache.log4j.CategoryKey: boolean equals(java.lang.Object)>/@parameter0
<javassist.compiler.MemberResolver: javassist.compiler.MemberResolver$Method lookupMethod(javassist.CtClass,javassist.CtClass,javassist.bytecode.MethodInfo,java.lang.String,int[],int[],java.lang.String[])>/@parameter2
<com.google.gson.internal.bind.TypeAdapters$7: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$7: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.io.WriterWrapper: void addAttribute(java.lang.String,java.lang.String)>/@parameter1
<com.thoughtworks.xstream.io.WriterWrapper: void setValue(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.http.ognl.GenericNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/@parameter0
<br.com.caelum.vraptor.http.ognl.GenericNullHandler: void <init>(br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval)>/removal#_0
<org.mockito.cglib.core.DuplicatesPredicate: boolean evaluate(java.lang.Object)>/@parameter0
<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: void setBeanName(java.lang.String)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/target#_0
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: java.lang.Boolean convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: java.lang.Boolean convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter0
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/@parameter1
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: java.lang.String toString(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: java.lang.String getName(java.text.AttributedCharacterIterator$Attribute)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>/@parameter0
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.Map,java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.List)>/@parameter2
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.Map,java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.List)>/l3#_0
<org.picocontainer.DefaultPicoContainer$KnowsContainerAdapter: void <init>(org.picocontainer.ComponentAdapter,org.picocontainer.PicoContainer)>/@parameter1
<org.picocontainer.DefaultPicoContainer$KnowsContainerAdapter: void <init>(org.picocontainer.ComponentAdapter,org.picocontainer.PicoContainer)>/ctr#_0
<org.springframework.web.context.request.AbstractRequestAttributesScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/@parameter0
<net.vidageek.mirror.reflect.DefaultReflectionHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/@parameter1
<net.vidageek.mirror.reflect.DefaultReflectionHandler: void <init>(net.vidageek.mirror.provider.ReflectionProvider,java.lang.Class)>/clazz#_0
<net.vidageek.mirror.reflect.DefaultReflectionHandler: java.lang.reflect.Field field(java.lang.String)>/@parameter0
<org.springframework.web.context.request.AbstractRequestAttributesScope: void registerDestructionCallback(java.lang.String,java.lang.Runnable)>/@parameter0
<org.springframework.web.context.request.AbstractRequestAttributesScope: java.lang.Object resolveContextualObject(java.lang.String)>/@parameter0
<net.vidageek.mirror.reflect.DefaultReflectionHandler: net.vidageek.mirror.reflect.dsl.MethodReflector method(java.lang.String)>/@parameter0
<org.springframework.core.type.classreading.CachingMetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(org.springframework.core.io.Resource)>/@parameter0
<org.picocontainer.injectors.SingleMemberInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/@parameter0
<org.picocontainer.injectors.SingleMemberInjector: void <init>(java.lang.Object,java.lang.Class,org.picocontainer.Parameter[],org.picocontainer.ComponentMonitor,boolean)>/@parameter1
<org.picocontainer.injectors.SingleMemberInjector: java.lang.Object getParameter(org.picocontainer.PicoContainer,java.lang.reflect.AccessibleObject,int,java.lang.reflect.Type,java.lang.annotation.Annotation,org.picocontainer.Parameter,org.picocontainer.ComponentAdapter)>/@parameter1
<org.picocontainer.injectors.SingleMemberInjector: void nullCheck(java.lang.reflect.AccessibleObject,int,org.picocontainer.injectors.ParameterNameBinding,java.lang.Object)>/@parameter0
<org.picocontainer.injectors.SingleMemberInjector: void nullCheck(java.lang.reflect.AccessibleObject,int,org.picocontainer.injectors.ParameterNameBinding,java.lang.Object)>/@parameter3
<org.picocontainer.injectors.SingleMemberInjector: void nullCheck(java.lang.reflect.AccessibleObject,int,org.picocontainer.injectors.ParameterNameBinding,java.lang.Object)>/result#_0
<org.picocontainer.injectors.SingleMemberInjector: boolean isNullParamAllowed(java.lang.reflect.AccessibleObject,int)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>/@parameter1
<org.springframework.web.context.request.FacesRequestAttributes: void registerDestructionCallback(java.lang.String,java.lang.Runnable,int)>/@parameter0
<org.springframework.web.context.request.FacesRequestAttributes: java.lang.Object resolveReference(java.lang.String)>/@parameter0
<org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters: void <init>(org.picocontainer.injectors.ConstructorInjector,java.lang.reflect.Constructor,org.picocontainer.Parameter[],org.picocontainer.ComponentAdapter[])>/@parameter1
<org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters: void <init>(org.picocontainer.injectors.ConstructorInjector,java.lang.reflect.Constructor,org.picocontainer.Parameter[],org.picocontainer.ComponentAdapter[])>/ctor#_0
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$1: void <init>(com.thoughtworks.xstream.converters.reflection.SerializableConverter,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Class[],java.lang.Object,boolean[])>/@parameter4
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$1: void <init>(com.thoughtworks.xstream.converters.reflection.SerializableConverter,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Class[],java.lang.Object,boolean[])>/l5#_0
<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.lang.Class loadClass(java.lang.String)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/response#_0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter1
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/info#_0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/@parameter2
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void <init>(javax.servlet.http.HttpServletResponse,br.com.caelum.vraptor.core.MethodInfo,br.com.caelum.vraptor.Result)>/result#_0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/stack#_0
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/@parameter1
<org.mockito.internal.verification.MockAwareVerificationMode: void <init>(java.lang.Object,org.mockito.verification.VerificationMode)>/@parameter0
<org.mockito.internal.verification.MockAwareVerificationMode: void <init>(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void <init>(org.picocontainer.MutablePicoContainer,br.com.caelum.vraptor.ioc.pico.ComponentFactoryRegistry)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void <init>(org.picocontainer.MutablePicoContainer,br.com.caelum.vraptor.ioc.pico.ComponentFactoryRegistry)>/container#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void register(java.lang.Class,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void register(java.lang.Class,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerOnScope(java.lang.Class,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerOnScope(java.lang.Class,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void checkInitialization(java.lang.Class,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void checkInitialization(java.lang.Class,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerComponentFactory(java.lang.Class,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerComponentFactory(java.lang.Class,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: boolean isComponentFactory(java.lang.Class,java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: boolean isComponentFactory(java.lang.Class,java.lang.Class)>/requiredType#_0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: boolean isComponentFactory(java.lang.Class,java.lang.Class)>/@parameter1
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: boolean alreadyRegistered(java.lang.Class)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerComponentFactories(org.picocontainer.MutablePicoContainer,java.util.Map)>/@parameter0
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void registerComponentFactories(org.picocontainer.MutablePicoContainer,java.util.Map)>/container#_0
<org.hamcrest.core.IsEqual: void <init>(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: void <init>(java.lang.Object)>/equalArg#_0
<org.hamcrest.core.IsEqual: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean areArraysEqual(java.lang.Object,java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean areArraysEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean areArrayLengthsEqual(java.lang.Object,java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean areArrayLengthsEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.hamcrest.core.IsEqual: boolean areArrayElementsEqual(java.lang.Object,java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean areArrayElementsEqual(java.lang.Object,java.lang.Object)>/@parameter1
<org.springframework.beans.PropertyMatches: org.springframework.beans.PropertyMatches forProperty(java.lang.String,java.lang.Class)>/@parameter0
<org.hamcrest.core.IsEqual: boolean isArray(java.lang.Object)>/@parameter0
<org.hamcrest.core.IsEqual: boolean isArray(java.lang.Object)>/o#_0
<org.springframework.beans.PropertyMatches: org.springframework.beans.PropertyMatches forProperty(java.lang.String,java.lang.Class,int)>/@parameter0
<org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>/@parameter0
<org.springframework.beans.PropertyMatches: void <init>(java.lang.String,java.lang.Class,int)>/@parameter0
<org.springframework.beans.PropertyMatches: void <init>(java.lang.String,java.lang.Class,int)>/propertyName#_0
<org.springframework.beans.PropertyMatches: int calculateStringDistance(java.lang.String,java.lang.String)>/@parameter0
<org.springframework.beans.PropertyMatches: int calculateStringDistance(java.lang.String,java.lang.String)>/s1#_0
<org.hamcrest.TypeSafeMatcher: boolean matches(java.lang.Object)>/@parameter0
<org.hamcrest.TypeSafeMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/@parameter0
<org.mockito.asm.MethodWriter: void visitLdcInsn(java.lang.Object)>/@parameter0
<com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/value#_0
<com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$5: void write(com.google.gson.stream.JsonWriter,java.lang.Number)>/@parameter1
<com.google.gson.internal.bind.TypeAdapters$5: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/@parameter1
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/@parameter1
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/@parameter2
<com.thoughtworks.xstream.converters.basic.URLConverter: boolean canConvert(java.lang.Class)>/@parameter0
<com.thoughtworks.xstream.converters.basic.URLConverter: boolean canConvert(java.lang.Class)>/type#_0
<com.thoughtworks.xstream.converters.basic.URLConverter: java.lang.Object fromString(java.lang.String)>/@parameter0
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()>/$stack3_$$A_2
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()>/$stack3_$$A_1
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getCollectionType()>/$stack3
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getCollectionType()>/$stack3_$$A_2
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getCollectionType()>/$stack3_$$A_1
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/b#_1122
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/b_$$A_1#_1126
<javassist.bytecode.CodeIterator: byte[] insertGap2w(byte[],int,int,boolean,java.util.ArrayList,javassist.bytecode.CodeIterator$Pointers)>/b_$$A_3#_1139
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getMapKeyType()>/$stack3
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getMapKeyType()>/$stack3_$$A_2
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getMapKeyType()>/$stack3_$$A_1
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getMapValueType()>/$stack3
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getMapValueType()>/$stack3_$$A_2
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getMapValueType()>/$stack3_$$A_1
<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/item#_53
<javassist.bytecode.CodeIterator: byte[] makeExapndedCode(byte[],java.util.ArrayList,int,int)>/b#_1222
<javassist.bytecode.CodeIterator: byte[] makeExapndedCode(byte[],java.util.ArrayList,int,int)>/b_$$A_4#_1238
<javassist.bytecode.CodeIterator: byte[] makeExapndedCode(byte[],java.util.ArrayList,int,int)>/b_$$A_7#_1260
<java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.net.InetAddress[])>/l8_$$A_5#_816
<java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.net.InetAddress[])>/l8_$$A_3#_814
<ognl.ObjectArrayPool$SizePool: java.lang.Object[] create()>/result_$$A_2#_79
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>/object#_75
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>/object_$$A_1#_76
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>/object_$$A_3#_84
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval: void removeExtraElements()>/object_$$A_2#_76
<ognl.OgnlOps: java.lang.String stringValue(java.lang.Object,boolean)>/result_$$A_3#_306
<ognl.OgnlOps: java.lang.String stringValue(java.lang.Object,boolean)>/result_$$A_1#_303
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractType(org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class,int,int,int)>/resolvedType_$$A_1#_284
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/currentTypeIndex#8_$$A_1#_340
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/indexToUse#9_$$A_1#_341
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/indexToUse#9_$$A_3#_369
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/result_$$A_27#_600
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/result_$$A_20#_590
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/result_$$A_19#_589
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/result_$$A_22#_591
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/result_$$A_21#_590
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/result_$$A_23#_591
<ognl.ASTMultiply: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_54
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>/l5#_328
<com.thoughtworks.xstream.io.path.PathTracker: java.lang.String peekElement(int)>/name_$$A_2#_136
<com.thoughtworks.xstream.io.path.PathTracker: java.lang.String peekElement(int)>/name_$$A_1#_135
<com.thoughtworks.xstream.converters.collections.MapConverter: java.lang.Object createCollection(java.lang.Class)>/$stack4_$$A_1
<java.util.logging.Level: java.lang.String computeLocalizedLevelName(java.util.Locale)>/$stack24
<java.util.logging.Level: java.lang.String computeLocalizedLevelName(java.util.Locale)>/$stack24_$$A_2
<java.util.logging.Level: java.util.logging.Level findLevel(java.lang.String)>/l1#_351
<java.util.logging.Level: java.util.logging.Level findLevel(java.lang.String)>/l1_$$A_4#_346
<java.util.logging.Level: java.util.logging.Level findLevel(java.lang.String)>/l1_$$A_1#_361
<java.util.logging.Level: java.util.logging.Level findLevel(java.lang.String)>/l1_$$A_3#_366
<java.util.logging.Level: java.util.logging.Level findLevel(java.lang.String)>/l1_$$A_2#_365
<ognl.ASTBitAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_53
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.Resource[] findPathMatchingResources(java.lang.String)>/rootDirResource#_341
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack23_$$A_1
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack23_$$A_2
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/map#_64
<ognl.ASTSequence: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_1#_62
<ognl.ASTSequence: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_2#_63
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_1#_122
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_3#_157
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.support.GenericConversionService$MatchableConverters getMatchableConverters(java.lang.Class,java.lang.Class)>/matchable_$$A_2#_307
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/currentClass#_346
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/currentClass_$$A_2#_381
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/converter#_346
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/converter_$$A_2#_381
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/converter_$$A_1#_340
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/converter_$$A_3#_361
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/currentClass#_415
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/currentClass_$$A_2#_452
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/matchable#_415
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/matchable_$$A_2#_452
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/converter#_415
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/converter_$$A_2#_452
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/converter_$$A_1#_409
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/converter_$$A_3#_432
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/constructorToUse_$$A_4#_55
<org.springframework.beans.factory.support.SimpleInstantiationStrategy: java.lang.Object instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)>/constructorToUse_$$A_6#_55
<sun.security.x509.EDIPartyName: void <init>(sun.security.util.DerValue)>/l6#_91
<sun.security.x509.EDIPartyName: void <init>(sun.security.util.DerValue)>/l6_$$A_1#_91
<sun.security.x509.EDIPartyName: void <init>(sun.security.util.DerValue)>/l6_$$A_3#_99
<sun.security.x509.EDIPartyName: void <init>(sun.security.util.DerValue)>/l6_$$A_5#_107
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean shouldSkipField(com.google.gson.FieldAttributes)>/include#_32
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean shouldSkipField(com.google.gson.FieldAttributes)>/include_$$A_2#_37
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/l3_$$A_1#_158
<sun.misc.URLClassPath$1: boolean next()>/$stack7
<sun.misc.URLClassPath$1: boolean next()>/l1#_266
<br.com.caelum.vraptor.interceptor.Graph: java.util.List findCycle()>/node#_117
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/attrName#_275
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/attrName_$$A_2#_309
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/field#_275
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/field_$$A_2#_309
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/type_$$A_5#_309
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value#_275
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_2#_304
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_3#_309
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack87
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack87_$$A_4
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack87_$$A_5
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack87_$$A_2
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/field_$$A_8#_427
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/type_$$A_20#_413
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/field_$$A_4#_326
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/type_$$A_24#_427
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_7#_378
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_6#_377
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/field_$$A_6#_389
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/type_$$A_16#_403
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/type_$$A_19#_410
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_8#_406
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_10#_413
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/value_$$A_11#_426
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/include#_56
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/include_$$A_2#_61
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/listener#_236
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/listener_$$A_2#_243
<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>/listener_$$A_4#_240
<ognl.ASTBitOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_53
<org.codehaus.jettison.json.JSONObject: java.lang.String numberToString(java.lang.Number)>/s#_563
<org.codehaus.jettison.json.JSONObject: java.lang.String numberToString(java.lang.Number)>/s_$$A_1#_565
<org.codehaus.jettison.json.JSONObject: java.lang.String numberToString(java.lang.Number)>/s_$$A_4#_570
<ognl.ArrayPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/index_$$A_5#_95
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/runtimeTypeAdapter#_55
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/chosen_$$A_1#_58
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/chosen_$$A_3#_65
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/chosen#_52
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/chosen_$$A_4#_66
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/chosen_$$A_2#_62
<ognl.ObjectElementsAccessor$1: java.lang.Object nextElement()>/result_$$A_2#_60
<ognl.ObjectElementsAccessor$1: java.lang.Object nextElement()>/result_$$A_1#_58
<com.google.common.collect.SingletonImmutableMap: java.util.Map$Entry entry()>/e#_52
<com.google.common.collect.SingletonImmutableMap: java.util.Map$Entry entry()>/$stack4_$$A_1
<com.google.common.collect.SingletonImmutableMap: java.util.Map$Entry entry()>/$stack4_$$A_2
<com.google.common.collect.SingletonImmutableMap: java.lang.Object get(java.lang.Object)>/$stack4
<com.google.common.collect.SingletonImmutableMap: java.lang.Object get(java.lang.Object)>/$stack4_$$A_2
<ognl.ASTOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_1#_61
<ognl.ASTOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_3#_61
<com.google.common.collect.Ordering: java.lang.Object max(java.util.Iterator)>/maxSoFar#_595
<com.google.common.collect.Ordering: java.lang.Object max(java.util.Iterator)>/maxSoFar_$$A_2#_598
<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>/$stack4
<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>/$stack4_$$A_1
<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Object,java.lang.Object)>/$stack4_$$A_2
<ognl.ASTAdd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_62
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getArgumentValue(int,java.lang.Class,java.lang.String,java.util.Set)>/valueHolder_$$A_2#_348
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getArgumentValue(int,java.lang.Class,java.lang.String,java.util.Set)>/valueHolder_$$A_1#_347
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/vh1#_397
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/vh1_$$A_2#_404
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/vh2#_397
<org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>/vh2_$$A_2#_404
<org.springframework.beans.PropertyValue: org.springframework.beans.PropertyValue getOriginalPropertyValue()>/original_$$A_1#_139
<org.codehaus.jettison.mapped.MappedNamespaceConvention: javax.xml.namespace.QName createQName(java.lang.String)>/local#_205
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/greediestConstructor_$$A_2#_181
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack89
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack89_$$A_1
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack89_$$A_6
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/greediestConstructor_$$A_3#_185
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack89_$$A_5
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack89_$$A_2
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/lastType_$$A_4#_154
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/lastType_$$A_5#_143
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/lastType_$$A_3#_147
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)>/comparator_$$A_2#_96
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)>/comparator_$$A_4#_100
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator)>/$stack25
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack31_$$A_1
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack21_$$A_1
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/object_$$A_2#_104
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/object_$$A_3#_106
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/$stack20
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/$stack20_$$A_3
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/$stack20_$$A_4
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/$stack18
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/$stack18_$$A_2
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/$stack18_$$A_3
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/object_$$A_1#_102
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/object_$$A_5#_156
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/object_$$A_6#_166
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/object_$$A_4#_162
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>/requiredTypeToUse#_323
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>/requiredTypeToUse_$$A_1#_341
<org.springframework.beans.PropertyEditorRegistrySupport: void copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry,java.lang.String)>/$stack46
<org.springframework.beans.PropertyEditorRegistrySupport: void copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry,java.lang.String)>/$stack46_$$A_2
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>/l4_$$A_1#_112
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>/l4_$$A_3#_143
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>/l4_$$A_5#_154
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/listener#_143
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/listener_$$A_2#_152
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/listener_$$A_4#_148
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>/listener_$$A_5#_134
<org.springframework.context.event.AbstractApplicationEventMulticaster: boolean supportsEvent(org.springframework.context.ApplicationListener,java.lang.Class,java.lang.Class)>/$stack6_$$A_2
<org.springframework.context.event.AbstractApplicationEventMulticaster: boolean supportsEvent(org.springframework.context.ApplicationListener,java.lang.Class,java.lang.Class)>/smartListener#_177
<org.springframework.util.StringUtils: java.util.Locale parseLocaleString(java.lang.String)>/$stack23
<org.springframework.util.StringUtils: java.util.Locale parseLocaleString(java.lang.String)>/$stack23_$$A_2
<org.springframework.util.StringUtils: java.util.Locale parseLocaleString(java.lang.String)>/$stack19
<org.springframework.util.StringUtils: java.util.Locale parseLocaleString(java.lang.String)>/$stack19_$$A_2
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/componentAdapter#_585
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/componentAdapter_$$A_2#_594
<org.picocontainer.DefaultPicoContainer: java.util.List getComponents(java.lang.Class)>/componentAdapter_$$A_4#_579
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack19_$$A_2
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack19_$$A_3
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/component#_643
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack16_$$A_2
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack16_$$A_3
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack7_$$A_2
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack7_$$A_3
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack19_$$A_1
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack16_$$A_1
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/component_$$A_1#_646
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack7_$$A_1
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/component_$$A_2#_649
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/instance_$$A_2#_693
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/instance_$$A_3#_690
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/instance_$$A_1#_692
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/instance_$$A_5#_699
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/instance_$$A_4#_696
<org.picocontainer.DefaultPicoContainer: void startAdapters()>/adapter#_992
<org.picocontainer.DefaultPicoContainer: void startAdapters()>/adapter_$$A_2#_998
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Class getActualType(java.lang.reflect.Type)>/type_$$A_2#_105
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/genericType_$$A_2#_124
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canRead(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack10_$$A_2
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack11_$$A_2
<br.com.caelum.vraptor.core.JstlLocalization: java.util.ResourceBundle extractUnsafeBundle(java.lang.Object)>/$stack5_$$A_2
<br.com.caelum.vraptor.core.JstlLocalization: java.util.ResourceBundle extractUnsafeBundle(java.lang.Object)>/$stack5_$$A_1
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/l13#_440
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/l13_$$A_1#_444
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/l13_$$A_5#_460
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/l13_$$A_6#_462
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/l13_$$A_3#_450
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack11_$$A_2
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/key#_171
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/key_$$A_2#_184
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/key_$$A_4#_194
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/value#_171
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/value_$$A_2#_184
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/value_$$A_4#_194
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/replaced#_171
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/replaced_$$A_2#_184
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/replaced_$$A_4#_194
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/replaced_$$A_1#_175
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)>/replaced_$$A_3#_188
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/possiblyConvertedNewValue#_217
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack13_$$A_2
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/possiblyConvertedNewValue_$$A_2#_247
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>/possiblyConvertedNewValue_$$A_1#_221
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/entry#_207
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>/entry_$$A_2#_219
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.core.convert.TypeDescriptor getTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack8_$$A_2
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.expression.PropertyAccessor createOptimalAccessor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)>/$stack9_$$A_2
<java.lang.String: java.lang.String valueOf(java.lang.Object)>/$stack1_$$A_2
<java.lang.String: java.lang.String valueOf(java.lang.Object)>/$stack1_$$A_1
<com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter: java.lang.String toString(java.lang.Object)>/$stack2_$$A_2
<com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter: java.lang.String toString(java.lang.Object)>/$stack2_$$A_1
<org.springframework.beans.PropertyAccessorUtils: java.lang.String getPropertyName(java.lang.String)>/$stack3_$$A_1
<org.springframework.beans.PropertyAccessorUtils: java.lang.String getPropertyName(java.lang.String)>/$stack3_$$A_2
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/method#_173
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/method_$$A_1#_179
<org.mockito.cglib.proxy.MethodInterceptorGenerator: void generateStatic(org.mockito.cglib.core.CodeEmitter,org.mockito.cglib.proxy.CallbackGenerator$Context,java.util.List)>/method_$$A_3#_198
<sun.security.util.DerIndefLenConverter: void parseTag()>/l2_$$A_1#_100
<sun.security.util.DerIndefLenConverter: void parseTag()>/l2_$$A_4#_124
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>/l10#_1242
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>/l10_$$A_13#_1332
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>/l10_$$A_8#_1282
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>/l10_$$A_6#_1280
<javassist.CtClassType: void modifyClassConstructor(javassist.bytecode.ClassFile,javassist.bytecode.Bytecode,int,int)>/m#_1475
<javassist.CtClassType: void modifyClassConstructor(javassist.bytecode.ClassFile,javassist.bytecode.Bytecode,int,int)>/m_$$A_2#_1507
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/value#_110
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/value_$$A_5#_110
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object,boolean)>/result_$$A_2#_84
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/ltw_$$A_3#_99
<java.util.Locale: java.lang.String toLanguageTag()>/l6#_1417
<java.util.Locale: java.lang.String toLanguageTag()>/l6_$$A_2#_1424
<java.beans.Introspector: void processPropertyDescriptors()>/l3#_643
<java.beans.Introspector: void processPropertyDescriptors()>/l4#_643
<java.beans.Introspector: void processPropertyDescriptors()>/l6#_643
<java.beans.Introspector: void processPropertyDescriptors()>/l7#_643
<java.beans.Introspector: void processPropertyDescriptors()>/l2#_643
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_1#_652
<java.beans.Introspector: void processPropertyDescriptors()>/l5#_643
<java.beans.Introspector: void processPropertyDescriptors()>/l5_$$A_1#_652
<java.beans.Introspector: void processPropertyDescriptors()>/l5_$$A_3#_674
<java.beans.Introspector: void processPropertyDescriptors()>/l5_$$A_4#_682
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_3#_682
<java.beans.Introspector: void processPropertyDescriptors()>/l6_$$A_5#_674
<java.beans.Introspector: void processPropertyDescriptors()>/l5_$$A_7#_744
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_25#_794
<java.beans.Introspector: void processPropertyDescriptors()>/l3_$$A_4#_671
<java.beans.Introspector: void processPropertyDescriptors()>/l3_$$A_6#_674
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_6#_735
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_30#_807
<java.beans.Introspector: void processPropertyDescriptors()>/l3_$$A_9#_808
<java.beans.Introspector: void processPropertyDescriptors()>/l3_$$A_5#_673
<java.beans.Introspector: void processPropertyDescriptors()>/l6_$$A_4#_659
<java.beans.Introspector: void processPropertyDescriptors()>/l5_$$A_6#_717
<java.beans.Introspector: void processPropertyDescriptors()>/l5_$$A_10#_808
<java.beans.Introspector: void processPropertyDescriptors()>/l7_$$A_7#_717
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_21#_784
<java.beans.Introspector: void processPropertyDescriptors()>/l4_$$A_7#_717
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_10#_733
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_29#_804
<java.beans.Introspector: void processPropertyDescriptors()>/l4_$$A_10#_808
<java.beans.Introspector: void processPropertyDescriptors()>/l4_$$A_4#_709
<java.beans.Introspector: void processPropertyDescriptors()>/l4_$$A_6#_716
<java.beans.Introspector: void processPropertyDescriptors()>/l7_$$A_4#_691
<java.beans.Introspector: void processPropertyDescriptors()>/l7_$$A_6#_698
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_12#_749
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_15#_762
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_16#_763
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_17#_774
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_23#_788
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_27#_798
<java.beans.Introspector: void processPropertyDescriptors()>/l5_$$A_12#_818
<java.beans.Introspector: void processPropertyDescriptors()>/l2_$$A_33#_818
<ognl.ASTAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_1#_60
<ognl.ASTAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_3#_60
<java.beans.Introspector: java.beans.PropertyDescriptor mergePropertyDescriptor(java.beans.IndexedPropertyDescriptor,java.beans.PropertyDescriptor)>/l6#_882
<java.beans.Introspector: java.beans.PropertyDescriptor mergePropertyDescriptor(java.beans.IndexedPropertyDescriptor,java.beans.PropertyDescriptor)>/l6_$$A_2#_911
<java.beans.Introspector: java.beans.PropertyDescriptor mergePropertyDescriptor(java.beans.IndexedPropertyDescriptor,java.beans.PropertyDescriptor)>/l7#_883
<java.beans.Introspector: java.beans.PropertyDescriptor mergePropertyDescriptor(java.beans.IndexedPropertyDescriptor,java.beans.PropertyDescriptor)>/l7_$$A_3#_911
<org.codehaus.jettison.mapped.MappedXMLStreamWriter$JSONPropertyObject: void addText(java.lang.String)>/text_$$A_2#_139
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/converter_$$A_1#_56
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_3#_157
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_14#_232
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_7#_173
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_8#_178
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/convertedValue_$$A_12#_212
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/convertedValue#_240
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/convertedValue_$$A_2#_268
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/convertedValue_$$A_3#_284
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/convertedValue_$$A_4#_262
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/convertedValue_$$A_7#_278
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/newConvertedValue_$$A_6#_361
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/newConvertedValue_$$A_8#_393
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/convertedValue_$$A_3#_370
<org.springframework.beans.TypeConverterDelegate: java.lang.Object doConvertValue(java.lang.Object,java.lang.Object,java.lang.Class,java.beans.PropertyEditor)>/newConvertedValue_$$A_7#_392
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack36
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack36_$$A_2
<org.springframework.beans.TypeConverterDelegate: java.util.Collection convertToTypedCollection(java.util.Collection,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/elementType_$$A_1#_470
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack51
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack51_$$A_2
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/keyType_$$A_1#_553
<org.springframework.beans.TypeConverterDelegate: java.util.Map convertToTypedMap(java.util.Map,java.lang.String,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/valueType_$$A_1#_554
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getObjectType()>/$stack3_$$A_1
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getObjectType()>/$stack3
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getObjectType()>/$stack3_$$A_2
<org.springframework.util.ClassUtils: java.lang.String getQualifiedNameForArray(java.lang.Class)>/clazz_$$A_1#_504
<org.springframework.util.ClassUtils: java.lang.Class resolvePrimitiveIfNecessary(java.lang.Class)>/$stack3_$$A_1
<org.springframework.util.ClassUtils: java.lang.Class resolvePrimitiveIfNecessary(java.lang.Class)>/$stack3_$$A_2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/result#_392
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)>/result_$$A_2#_394
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/result#_405
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object applyBeanPostProcessorsAfterInitialization(java.lang.Object,java.lang.String)>/result_$$A_2#_407
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object createBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ex#2#_446
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object createBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ex#2_$$A_2#_438
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/$stack76
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/$stack76_$$A_2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/exposedObject_$$A_2#_528
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/exposedObject_$$A_6#_564
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ex#25#_532
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/exposedObject_$$A_3#_535
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/exposedObject_$$A_1#_519
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/exposedObject_$$A_4#_547
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/exposedObject_$$A_5#_485
<com.thoughtworks.xstream.core.util.PresortedMap: void <init>(java.util.Comparator,com.thoughtworks.xstream.core.util.PresortedMap$ArraySet)>/$stack3
<com.thoughtworks.xstream.core.util.PresortedMap: void <init>(java.util.Comparator,com.thoughtworks.xstream.core.util.PresortedMap$ArraySet)>/$stack3_$$A_2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class predictBeanType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/beanClass_$$A_1#_576
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/factoryClass#_619
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/factoryClass_$$A_1#_624
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack6
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack6_$$A_2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack6_$$A_1
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/exposedObject#_690
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)>/exposedObject_$$A_3#_693
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance#_733
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance_$$A_3#_721
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance_$$A_4#_724
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance_$$A_1#_736
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getNonSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance#_769
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getNonSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance_$$A_3#_763
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getNonSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/instance_$$A_1#_772
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object resolveBeforeInstantiation(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/bean_$$A_3#_823
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object resolveBeforeInstantiation(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/bean_$$A_4#_826
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object resolveBeforeInstantiation(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/bean_$$A_2#_822
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/bp#_1039
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/bp_$$A_2#_1034
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/ibp#_1039
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/ibp_$$A_2#_1034
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/ibp_$$A_3#_1077
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/ibp_$$A_5#_1072
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/ibp_$$A_6#_1083
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/bp_$$A_3#_1077
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/bp_$$A_5#_1072
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void populateBean(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/bp_$$A_6#_1083
<com.google.gson.internal.bind.TypeAdapters$31: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/$stack6
<com.google.gson.internal.bind.TypeAdapters$31: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)>/$stack6_$$A_2
<com.thoughtworks.xstream.converters.collections.TreeSetConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack36_$$A_1
<com.thoughtworks.xstream.converters.collections.TreeSetConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack36_$$A_2
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/convertedValue_$$A_1#_1326
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/convertedValue#_1349
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void applyPropertyValues(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.PropertyValues)>/convertedValue_$$A_2#_1330
<java.util.LinkedList: boolean addAll(int,java.util.Collection)>/l10#_422
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/wrappedBean_$$A_5#_1413
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/wrappedBean_$$A_1#_1413
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/wrappedBean_$$A_4#_1427
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>/wrappedBean_$$A_3#_1426
<com.thoughtworks.xstream.io.path.PathTrackingWriter: void startNode(java.lang.String)>/$stack7
<com.thoughtworks.xstream.io.path.PathTrackingWriter: void startNode(java.lang.String,java.lang.Class)>/$stack8
<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object first()>/$stack4_$$A_2
<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object first()>/$stack4_$$A_1
<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object last()>/$stack7_$$A_2
<com.thoughtworks.xstream.core.util.PresortedSet: java.lang.Object last()>/$stack7_$$A_1
<br.com.caelum.iogi.reflection.NewObject$Setter: java.util.Collection settersIn(java.lang.Object)>/setterMethod#_68
<br.com.caelum.iogi.reflection.NewObject$Setter: java.util.Collection settersIn(java.lang.Object)>/setterMethod_$$A_2#_71
<com.google.gson.internal.Excluder$1: com.google.gson.TypeAdapter delegate()>/d#_141
<com.google.gson.internal.Excluder$1: com.google.gson.TypeAdapter delegate()>/$stack5
<com.google.gson.internal.Excluder$1: com.google.gson.TypeAdapter delegate()>/$stack5_$$A_2
<com.google.gson.internal.Excluder$1: com.google.gson.TypeAdapter delegate()>/$stack5_$$A_1
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/newObj#_125
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/newObj_$$A_3#_114
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/nextKey#_126
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/nextKey_$$A_3#_114
<com.thoughtworks.xstream.mapper.PackageAliasingMapper: java.lang.Class realClass(java.lang.String)>/$stack23
<com.thoughtworks.xstream.mapper.PackageAliasingMapper: java.lang.Class realClass(java.lang.String)>/$stack23_$$A_3
<com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)>/$stack4
<com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)>/$stack4_$$A_2
<com.thoughtworks.xstream.converters.basic.StringConverter: java.lang.Object fromString(java.lang.String)>/s_$$A_1#_95
<com.thoughtworks.xstream.converters.basic.StringConverter: java.lang.Object fromString(java.lang.String)>/s_$$A_2#_96
<com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Character)>/$stack3_$$A_1
<sun.misc.URLClassPath$2: boolean next()>/$stack7
<sun.misc.URLClassPath$2: boolean next()>/l1#_314
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/$stack46_$$A_2
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/$stack46_$$A_3
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)>/input#_114
<org.picocontainer.behaviors.HiddenImplementation: void verifyInterfacesOnly(java.lang.Class[])>/arr$#_101
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/l2#_1012
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/l1_$$A_1#_1017
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/l3#_1013
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/l1_$$A_2#_1020
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/l1#_1008
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/l1_$$A_3#_1021
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/l1_$$A_6#_1029
<org.joda.time.format.DateTimeFormatterBuilder: java.lang.Object getFormatter()>/l1_$$A_5#_1026
<ognl.IteratorPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/result#_51
<ognl.IteratorPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/result_$$A_4#_61
<br.com.caelum.iogi.parameters.Parameters: br.com.caelum.iogi.parameters.Parameter namedAfter(br.com.caelum.iogi.reflection.Target)>/$stack9_$$A_2
<org.springframework.context.event.GenericApplicationListenerAdapter: boolean supportsEventType(java.lang.Class)>/typeArg#_55
<org.springframework.context.event.GenericApplicationListenerAdapter: boolean supportsEventType(java.lang.Class)>/typeArg_$$A_2#_60
<org.springframework.context.event.GenericApplicationListenerAdapter: boolean supportsEventType(java.lang.Class)>/typeArg_$$A_1#_59
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.Parameter$Resolver resolve(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,org.picocontainer.ComponentAdapter,java.lang.reflect.Type,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/componentAdapter0#_87
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.Parameter$Resolver resolve(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,org.picocontainer.ComponentAdapter,java.lang.reflect.Type,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/componentAdapter0_$$A_2#_90
<org.picocontainer.parameters.BasicComponentParameter: java.lang.Object convert(org.picocontainer.Converters,java.lang.Object,java.lang.reflect.Type)>/obj_$$A_2#_126
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/expectedTypeName#12_$$A_9#_209
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/expectedTypeName#12_$$A_2#_184
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/expectedTypeName#12_$$A_7#_204
<org.picocontainer.parameters.BasicComponentParameter: void removeExcludedAdapterIfApplicable(java.lang.Object,java.util.List)>/exclude_$$A_1#_257
<java.util.AbstractCollection: java.lang.String toString()>/l3#_461
<java.util.AbstractCollection: java.lang.String toString()>/$stack18_$$A_2
<java.util.AbstractCollection: java.lang.String toString()>/$stack18
<ognl.MapPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/result_$$A_6#_83
<ognl.MapPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/result_$$A_3#_76
<ognl.MapPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/result_$$A_5#_82
<org.springframework.core.MethodParameter: java.lang.String getParameterName()>/$stack7
<org.springframework.core.MethodParameter: java.lang.String getParameterName()>/$stack7_$$A_2
<org.springframework.core.MethodParameter: java.lang.String getParameterName()>/$stack7_$$A_3
<org.springframework.core.MethodParameter: java.lang.String getParameterName()>/$stack7_$$A_1
<org.springframework.core.MethodParameter: java.lang.String getParameterName()>/parameterNames#_278
<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object peek()>/$stack5_$$A_2
<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object peek()>/$stack5_$$A_1
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: boolean isCandidateComponent(org.springframework.core.type.classreading.MetadataReader)>/tf#_277
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: boolean isCandidateComponent(org.springframework.core.type.classreading.MetadataReader)>/tf_$$A_2#_282
<br.com.caelum.vraptor.ioc.pico.PicoProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/picoContainer#_189
<br.com.caelum.vraptor.ioc.pico.PicoProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/picoContainer_$$A_1#_192
<br.com.caelum.vraptor.ioc.pico.PicoProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/picoContainer_$$A_3#_192
<br.com.caelum.vraptor.ioc.pico.PicoProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/picoContainer_$$A_2#_189
<javassist.CtBehavior: void setExceptionTypes(javassist.CtClass[])>/i#2#_352
<javassist.CtBehavior: void setExceptionTypes(javassist.CtClass[])>/i#2_$$A_2#_356
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>/candidateMethod#_68
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchCandidates(java.util.List,java.lang.reflect.Method)>/previousMethod_$$A_2#_110
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchCandidates(java.util.List,java.lang.reflect.Method)>/previousMethod_$$A_1#_111
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method searchCandidates(java.util.List,java.lang.reflect.Method)>/$stack21_$$A_2
<org.mockito.asm.Frame: void execute(int,int,org.mockito.asm.ClassWriter,org.mockito.asm.Item)>/s_$$A_2#_1231
<org.picocontainer.PicoBuilder: org.picocontainer.MutablePicoContainer build()>/componentFactory_$$A_3#_179
<org.picocontainer.PicoBuilder: org.picocontainer.MutablePicoContainer build()>/componentFactory_$$A_5#_183
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()>/$stack4_$$A_2
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()>/event#_147
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getValue()>/last_$$A_2#_186
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getValue()>/event#_180
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getValue()>/event_$$A_1#_181
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getValue()>/$stack11_$$A_2
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getValue()>/last_$$A_3#_192
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getValue()>/$stack11_$$A_1
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getValue()>/last_$$A_4#_196
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getValue()>/event_$$A_2#_197
<java.lang.invoke.MemberName: java.lang.String toString()>/$stack24_$$A_3
<java.lang.invoke.MemberName: java.lang.String toString()>/$stack12_$$A_3
<java.lang.invoke.MemberName: java.lang.String toString()>/$stack24_$$A_1
<java.lang.invoke.MemberName: java.lang.String toString()>/$stack12_$$A_1
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String transformedBeanName(java.lang.String)>/beanName#_71
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String transformedBeanName(java.lang.String)>/beanName_$$A_1#_74
<org.picocontainer.behaviors.Stored: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/instance#_89
<org.picocontainer.behaviors.Stored: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/instance_$$A_2#_93
<org.codehaus.jettison.json.JSONArray: java.lang.Object opt(int)>/$stack4
<org.codehaus.jettison.json.JSONArray: java.lang.Object opt(int)>/$stack4_$$A_2
<javassist.bytecode.ClassFile: void prune()>/invisibleAnnotations#_212
<javassist.bytecode.ClassFile: void prune()>/invisibleAnnotations_$$A_2#_217
<javassist.bytecode.ClassFile: void prune()>/visibleAnnotations#_219
<javassist.bytecode.ClassFile: void prune()>/visibleAnnotations_$$A_2#_224
<javassist.bytecode.ClassFile: void prune()>/signature#_226
<javassist.bytecode.ClassFile: void prune()>/signature_$$A_2#_231
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack4
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack4_$$A_2
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>/$stack7
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>/l2#_3485
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>/$stack9
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>/l3#_3486
<sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>/l5#_666
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/constructorToUse_$$A_2#_161
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/constructorToUse_$$A_3#_132
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/paramNames#_171
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/paramNames_$$A_7#_228
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/paramNames_$$A_8#_246
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/paramNames_$$A_9#_263
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/paramNames_$$A_10#_136
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/constructorToUse_$$A_8#_136
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/constructorToUse_$$A_6#_246
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/paramNames_$$A_6#_289
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/paramNames_$$A_4#_193
<org.springframework.beans.factory.support.ConstructorResolver: void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)>/factoryClass#_300
<org.springframework.beans.factory.support.ConstructorResolver: void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)>/uniqueCandidate_$$A_1#_309
<org.springframework.beans.factory.support.ConstructorResolver: void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)>/uniqueCandidate_$$A_2#_311
<org.springframework.beans.factory.support.ConstructorResolver: void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)>/factoryClass_$$A_1#_303
<org.springframework.beans.factory.support.ConstructorResolver: void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)>/uniqueCandidate_$$A_4#_316
<org.springframework.beans.factory.support.ConstructorResolver: void resolveFactoryMethodIfPossible(org.springframework.beans.factory.support.RootBeanDefinition)>/uniqueCandidate_$$A_5#_309
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryBean#_353
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryMethodToUse_$$A_2#_470
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryMethodToUse_$$A_3#_393
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/candidate#_418
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/candidate_$$A_2#_447
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/candidate_$$A_4#_552
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/candidate_$$A_5#_351
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/paramNames#_447
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/paramNames_$$A_5#_494
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/paramNames_$$A_6#_512
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/paramNames_$$A_7#_552
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/paramNames_$$A_8#_351
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryClass_$$A_1#_368
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryClass_$$A_4#_552
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryClass_$$A_5#_351
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryClazz_$$A_3#_571
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryClazz_$$A_4#_351
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryMethodToUse_$$A_8#_351
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryClass_$$A_3#_399
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryMethodToUse_$$A_6#_512
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/factoryMethodToUse_$$A_5#_500
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/paramNames_$$A_4#_582
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/paramNames_$$A_2#_459
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/valueHolder#_621
<org.springframework.beans.factory.support.ConstructorResolver: int resolveConstructorArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.factory.config.ConstructorArgumentValues)>/valueHolder_$$A_2#_635
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/valueHolder#_660
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/convertedValue#_660
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/convertedValue_$$A_3#_731
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/convertedValue_$$A_6#_652
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/valueHolder_$$A_1#_663
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/valueHolder_$$A_2#_669
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/convertedValue_$$A_4#_703
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/convertedValue_$$A_2#_686
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/convertedValue_$$A_7#_731
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/convertedValue_$$A_5#_723
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/argValue#_761
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/argValue_$$A_2#_765
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/argValue_$$A_3#_768
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/argValue_$$A_4#_771
<org.picocontainer.injectors.ParameterNameBinding: java.lang.String getName()>/$stack8_$$A_2
<org.picocontainer.injectors.ParameterNameBinding: java.lang.String getName()>/$stack8_$$A_1
<com.thoughtworks.xstream.core.ReferenceByXPathMarshaller: java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>/$stack12_$$A_2
<com.thoughtworks.xstream.core.ReferenceByXPathMarshaller: java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>/$stack12_$$A_1
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/searchType#_147
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/searchType_$$A_1#_157
<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>/$stack4_$$A_2
<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>/$stack4_$$A_1
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createArray(org.springframework.expression.spel.ExpressionState)>/o#7_$$A_1#_258
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createArray(org.springframework.expression.spel.ExpressionState)>/o#7_$$A_3#_314
<com.thoughtworks.xstream.mapper.AttributeAliasingMapper: java.lang.String attributeForAlias(java.lang.String)>/$stack5
<com.thoughtworks.xstream.mapper.AttributeAliasingMapper: java.lang.String attributeForAlias(java.lang.String)>/$stack5_$$A_2
<javassist.bytecode.FieldInfo: void prune(javassist.bytecode.ConstPool)>/invisibleAnnotations#_89
<javassist.bytecode.FieldInfo: void prune(javassist.bytecode.ConstPool)>/invisibleAnnotations_$$A_2#_94
<javassist.bytecode.FieldInfo: void prune(javassist.bytecode.ConstPool)>/visibleAnnotations#_96
<javassist.bytecode.FieldInfo: void prune(javassist.bytecode.ConstPool)>/visibleAnnotations_$$A_2#_101
<javassist.bytecode.FieldInfo: void prune(javassist.bytecode.ConstPool)>/signature#_103
<javassist.bytecode.FieldInfo: void prune(javassist.bytecode.ConstPool)>/signature_$$A_2#_108
<sun.misc.JarIndex: void merge(sun.misc.JarIndex,java.lang.String)>/l8#_342
<sun.misc.JarIndex: void merge(sun.misc.JarIndex,java.lang.String)>/l8_$$A_1#_347
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/registryPostProcessor#_591
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/registryPostProcessor_$$A_2#_600
<org.springframework.context.support.AbstractApplicationContext: void invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/registryPostProcessor_$$A_4#_609
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: java.lang.String getMessage()>/$stack27
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: java.lang.String getMessage()>/$stack18
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/ppName#4#_688
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/ppName#4_$$A_2#_714
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/pp#5#_688
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/pp#5_$$A_2#_700
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/pp#5_$$A_3#_714
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/pp#5_$$A_5#_726
<org.springframework.context.support.AbstractApplicationContext: void registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>/ppName#4_$$A_4#_726
<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.reflect.Method getResolvedFactoryMethod()>/$stack6_$$A_2
<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.reflect.Method getResolvedFactoryMethod()>/$stack6_$$A_3
<org.springframework.context.support.AbstractApplicationContext: org.springframework.context.MessageSource getInternalParentMessageSource()>/$stack3
<org.springframework.context.support.AbstractApplicationContext: org.springframework.context.MessageSource getInternalParentMessageSource()>/$stack3_$$A_2
<org.picocontainer.injectors.AdaptingInjection$2: java.lang.Object run()>/impl#_215
<org.picocontainer.injectors.AdaptingInjection$2: java.lang.Object run()>/impl_$$A_1#_216
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/sharedInstance_$$A_2#_340
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/bean#_245
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/bean_$$A_4#_246
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/bean_$$A_5#_340
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/bean_$$A_1#_302
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/bean_$$A_2#_315
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>/bean_$$A_3#_336
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/$stack70
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/$stack70_$$A_2
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/targetClass_$$A_1#_495
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,java.lang.Class)>/typeToMatch#_452
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/$stack18
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)>/$stack18_$$A_2
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)>/fullBeanName#_583
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/l7#_2461
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/l7_$$A_2#_2463
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/l7_$$A_3#_2474
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/l7_$$A_5#_2476
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/l7_$$A_6#_2479
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/$stack20
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/$stack21
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/l9#_1357
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/l8#_1348
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/l8_$$A_2#_1355
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/l8_$$A_4#_1362
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>/l8_$$A_1#_1350
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String originalBeanName(java.lang.String)>/beanName_$$A_2#_1005
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/object_$$A_4#_1430
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/object_$$A_3#_1429
<ognl.ASTKeyValue: ognl.Node getValue()>/$stack3
<ognl.ASTKeyValue: ognl.Node getValue()>/$stack3_$$A_2
<br.com.caelum.vraptor.core.ExceptionRecorder: void replay(br.com.caelum.vraptor.Result)>/current#_79
<com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/timeZone#_56
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_81
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/index#_84
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/index_$$A_7#_134
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_3#_118
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/index_$$A_5#_118
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_8#_142
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_7#_141
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/index#_153
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/index_$$A_7#_215
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target_$$A_4#_223
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/index_$$A_5#_190
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/index_$$A_8#_223
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/target_$$A_3#_222
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>/$stack19_$$A_2
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>/$stack16_$$A_2
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack18
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack18_$$A_2
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack34
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack34_$$A_4
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack34_$$A_3
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack34_$$A_2
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_1#_294
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_4#_294
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_5#_292
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_3#_310
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_1#_402
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_4#_402
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_5#_383
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/_lastType_$$A_3#_423
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/methodName_$$A_3#_120
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/methodName_$$A_1#_113
<org.springframework.expression.spel.ast.CompoundExpression: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/result#_52
<org.springframework.expression.spel.ast.CompoundExpression: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/result_$$A_4#_68
<org.springframework.expression.spel.ast.CompoundExpression: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/result_$$A_3#_66
<org.springframework.expression.spel.ast.CompoundExpression: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/result_$$A_2#_57
<com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/instance#_71
<org.springframework.expression.spel.ast.CompoundExpression: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/ctx#_76
<org.springframework.expression.spel.ast.CompoundExpression: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/ctx_$$A_3#_91
<org.springframework.expression.spel.ast.CompoundExpression: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/ctx_$$A_2#_80
<org.springframework.core.SimpleAliasRegistry: java.lang.String canonicalName(java.lang.String)>/canonicalName#_149
<org.springframework.core.SimpleAliasRegistry: java.lang.String canonicalName(java.lang.String)>/canonicalName_$$A_3#_156
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/expr#_135
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/expr_$$A_2#_141
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/expr_$$A_4#_148
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/expr_$$A_6#_158
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/assignedValue_$$A_1#_150
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/assignedValue_$$A_3#_153
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalOrExpression()>/expr#_171
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalOrExpression()>/expr_$$A_1#_177
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalAndExpression()>/expr#_183
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatLogicalAndExpression()>/expr_$$A_1#_189
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatSumExpression()>/expr#_233
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatSumExpression()>/expr_$$A_1#_243
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class)>/$stack8_$$A_1
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatProductExpression()>/expr#_250
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatProductExpression()>/expr_$$A_1#_262
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>/cls#_121
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatNode()>/expr#_316
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatNode()>/expr_$$A_1#_318
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>/cls_$$A_5#_126
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>/cls_$$A_3#_132
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatBeanReference()>/beanNameToken_$$A_1#_473
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatBeanReference()>/beanNameToken_$$A_2#_476
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatInlineList()>/closingCurly#_539
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatInlineList()>/closingCurly_$$A_2#_550
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatInlineList()>/closingCurly_$$A_1#_548
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper: java.lang.String toString()>/$stack3_$$A_2
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper: java.lang.String toString()>/$stack3_$$A_1
<ognl.ASTProperty: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_114
<ognl.ASTProperty: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result_$$A_2#_119
<com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller: java.lang.Object getReferenceKey(java.lang.String)>/$stack12
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/$stack6
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/$stack6_$$A_2
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)>/$stack6
<com.thoughtworks.xstream.mapper.LocalConversionMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)>/$stack6_$$A_2
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: com.thoughtworks.xstream.converters.Converter getConverter()>/$stack3_$$A_2
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: com.thoughtworks.xstream.converters.Converter getConverter()>/$stack3_$$A_1
<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>/l3_$$A_4#_2065
<java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>/l3_$$A_7#_2071
<com.google.common.base.Objects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>/$stack2_$$A_2
<com.google.common.base.Objects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>/$stack2_$$A_1
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o#_95
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o_$$A_2#_135
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o_$$A_3#_134
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/lastValue#15_$$A_1#_134
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack76_$$A_2
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/lastKey_$$A_3#_96
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/lastKey_$$A_4#_135
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/lastKey_$$A_2#_87
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o_$$A_5#_98
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveParameterType(org.springframework.core.MethodParameter,java.lang.Class)>/$stack10_$$A_2
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveParameterType(org.springframework.core.MethodParameter,java.lang.Class)>/$stack10_$$A_1
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveReturnType(java.lang.reflect.Method,java.lang.Class)>/$stack9_$$A_2
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/$stack9_$$A_2
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/arg_$$A_2#_204
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveType(java.lang.reflect.Type,java.util.Map)>/$stack5_$$A_2
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/include#8#_36
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/include#8_$$A_2#_39
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void configure(br.com.caelum.vraptor.serialization.xstream.Serializee)>/include#8_$$A_4#_45
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue_$$A_2#_56
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue_$$A_3#_66
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack58_$$A_2
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/element#11#_101
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/mapData#7#_81
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/arrayElementType#10_$$A_3#_93
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/arrayElementType#10_$$A_4#_79
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/arrayElementType#10_$$A_2#_92
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/l10#_2560
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/l11#_2561
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/l10_$$A_1#_2563
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/declaringClassName_$$A_3#_91
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/methodName_$$A_3#_91
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/methodName_$$A_2#_88
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/declaringClassName_$$A_2#_90
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/accessor#_196
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/accessor_$$A_4#_165
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/accessor_$$A_5#_201
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/accessor_$$A_3#_192
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.util.List reflectAllFields()>/c#_42
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.util.List reflectAllFields()>/c_$$A_1#_44
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.util.List reflectAllMethods()>/c#_55
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.util.List reflectAllMethods()>/c_$$A_1#_57
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Method reflectMethod(java.lang.String,java.lang.Class[])>/match_$$A_2#_104
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Method reflectMethod(java.lang.String,java.lang.Class[])>/match_$$A_3#_107
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Method reflectMethod(java.lang.String,java.lang.Class[])>/match_$$A_1#_101
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Method reflectMethod(java.lang.String,java.lang.Class[])>/match_$$A_4#_108
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.reflect.Method reflectMethod(java.lang.String,java.lang.Class[])>/match_$$A_5#_110
<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object,java.lang.String,java.lang.Object)>/$stack9_$$A_1
<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object,java.lang.String,java.lang.Object)>/$stack9
<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object,java.lang.String,java.lang.Object)>/$stack9_$$A_2
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)>/propertyValue#_555
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)>/propertyValue_$$A_1#_558
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder getPropertyNameTokens(java.lang.String)>/$stack61_$$A_1
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder getPropertyNameTokens(java.lang.String)>/$stack61_$$A_2
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/elem#_784
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_10#_786
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_14#_816
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_15#_820
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_16#_824
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_17#_828
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_18#_708
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/pae#6#_753
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/pae#6_$$A_3#_756
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/pae#6_$$A_4#_816
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/pae#6_$$A_5#_820
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/pae#6_$$A_6#_824
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/pae#6_$$A_7#_828
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/pae#6_$$A_8#_708
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_5#_749
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_13#_756
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_4#_745
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_12#_802
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_9#_771
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/value_$$A_11#_798
<ognl.Evaluation: java.lang.String toString(boolean,boolean,java.lang.String)>/ss#8#_304
<ognl.Evaluation: java.lang.String toString(boolean,boolean,java.lang.String)>/ss#8_$$A_1#_307
<ognl.Evaluation: java.lang.String toString(boolean,boolean,java.lang.String)>/ss#8_$$A_3#_310
<ognl.Evaluation: java.lang.String toString(boolean,boolean,java.lang.String)>/ss#8_$$A_2#_309
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/propValue_$$A_1#_950
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/propValue_$$A_12#_1134
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType_$$A_3#_1134
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue_$$A_1#_975
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue_$$A_7#_1134
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue#59_$$A_3#_1134
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/pd#65#_1035
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/pd#65_$$A_4#_1082
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/pd#65_$$A_5#_1125
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/pd#65_$$A_6#_1134
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/pd#65_$$A_7#_932
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/pd#65_$$A_8#_1134
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType#66_$$A_1#_1075
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType#66_$$A_2#_1080
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType#66_$$A_3#_1082
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType#66_$$A_5#_1125
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType#66_$$A_6#_1134
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType#66_$$A_7#_932
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/requiredType#66_$$A_8#_1134
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack46
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack46_$$A_2
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack46_$$A_3
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack46_$$A_4
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack46_$$A_5
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack46_$$A_6
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue_$$A_3#_961
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/convertedValue#59_$$A_1#_996
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/pd#65_$$A_1#_1038
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/pd#65_$$A_3#_1080
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/pd#65_$$A_2#_1079
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack46_$$A_1
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/l6#_1072
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/l6_$$A_5#_1072
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/l6_$$A_1#_1073
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/l6_$$A_2#_1075
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/l6_$$A_4#_1084
<java.util.Hashtable: java.lang.String toString()>/$stack16
<java.util.Hashtable: java.lang.String toString()>/$stack19
<java.util.Hashtable: java.lang.String toString()>/$stack16_$$A_2
<java.util.Hashtable: java.lang.String toString()>/$stack19_$$A_2
<org.picocontainer.injectors.AnnotatedFieldInjector: void initializeInjectionMembersAndTypeLists()>/drillInto#_51
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/componentAdapter#_250
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Map getMatchingComponentAdapters(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,java.lang.Class)>/componentAdapter_$$A_2#_254
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack18
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack18_$$A_2
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack17
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack17_$$A_2
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack15
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack15_$$A_2
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/$stack42_$$A_2
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/$stack42
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()>/$stack42_$$A_3
<com.thoughtworks.xstream.converters.basic.CharConverter: java.lang.String toString(java.lang.Object)>/$stack5_$$A_2
<com.thoughtworks.xstream.converters.basic.CharConverter: java.lang.String toString(java.lang.Object)>/$stack5_$$A_1
<org.springframework.expression.spel.support.ReflectiveMethodResolver: org.springframework.expression.MethodExecutor resolve(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.util.List)>/$stack22_$$A_2
<org.springframework.expression.spel.support.ReflectiveMethodResolver: org.springframework.expression.MethodExecutor resolve(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.util.List)>/$stack22_$$A_3
<org.joda.time.format.DateTimeFormatterBuilder$TextField: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)>/l9_$$A_2#_1739
<org.joda.time.format.DateTimeFormatterBuilder$TextField: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)>/l9_$$A_3#_1708
<ognl.ASTXor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_53
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/actualValue#_262
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/actualValue_$$A_8#_258
<com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)>/l10#_360
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)>/object#_803
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)>/l8#_804
<com.google.gson.TreeTypeAdapter: com.google.gson.TypeAdapter delegate()>/d#_75
<com.google.gson.TreeTypeAdapter: com.google.gson.TypeAdapter delegate()>/$stack5
<com.google.gson.TreeTypeAdapter: com.google.gson.TypeAdapter delegate()>/$stack5_$$A_2
<com.google.gson.TreeTypeAdapter: com.google.gson.TypeAdapter delegate()>/$stack5_$$A_1
<com.google.common.collect.Sets$FilteredSortedSet: java.lang.Object last()>/sortedUnfiltered_$$A_1#_873
<com.thoughtworks.xstream.converters.extended.LocaleConverter: java.lang.Object fromString(java.lang.String)>/language#_34
<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.Class findType(java.lang.String)>/nameToLookup_$$A_1#_66
<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.Class findType(java.lang.String)>/nameToLookup_$$A_3#_66
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/td#_217
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/td_$$A_2#_217
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/tn#_217
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/tn_$$A_2#_222
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/tn_$$A_3#_217
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/tn_$$A_4#_227
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/td_$$A_3#_227
<javassist.bytecode.stackmap.TypeData$TypeName: void evalExpectedType(javassist.ClassPool)>/tn_$$A_6#_233
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/type#_399
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/type_$$A_4#_415
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/type_$$A_2#_410
<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String unescapeClassName(java.lang.String)>/className_$$A_2#_59
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue_$$A_2#_57
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/typedValue_$$A_3#_67
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>/field_$$A_2#_640
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>/field_$$A_3#_660
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingleton(java.lang.String,java.lang.Object)>/$stack5
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void addSingleton(java.lang.String,java.lang.Object)>/$stack5_$$A_3
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,boolean)>/singletonObject_$$A_4#_181
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,boolean)>/singletonObject_$$A_5#_181
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,boolean)>/$stack9
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,boolean)>/$stack9_$$A_2
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,boolean)>/singletonObject_$$A_3#_188
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/singletonObject_$$A_2#_238
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/singletonObject_$$A_3#_206
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/singletonObject_$$A_4#_239
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/singletonObject_$$A_5#_210
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/$stack15
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/$stack15_$$A_2
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/$stack15_$$A_3
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)>/source_$$A_2#_139
<ognl.SimpleNode: java.lang.Object evaluateGetValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.SimpleNode: java.lang.Object evaluateGetValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6_$$A_2
<ognl.SimpleNode: java.lang.Object evaluateGetValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6_$$A_1
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/eval_$$A_2#_259
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/result_$$A_1#_245
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/result_$$A_2#_253
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/result_$$A_3#_253
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/result_$$A_5#_259
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/result_$$A_4#_258
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/eval_$$A_2#_302
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: java.util.Map$Entry entry()>/e#_458
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: java.util.Map$Entry entry()>/$stack4_$$A_1
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: java.util.Map$Entry entry()>/$stack4_$$A_2
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: java.lang.Object get(java.lang.Object)>/$stack4
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: java.lang.Object get(java.lang.Object)>/$stack4_$$A_2
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/index_$$A_2#_171
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/indexValue_$$A_2#_171
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/indexValue_$$A_3#_88
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/reference#7#_97
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o_$$A_1#_131
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o_$$A_3#_138
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/o#34_$$A_2#_171
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/accessor#59#_166
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/accessor#59_$$A_4#_93
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/accessor#59_$$A_5#_171
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/indexValue_$$A_1#_83
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/index_$$A_1#_84
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/reference#7_$$A_1#_99
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/accessor#59_$$A_3#_161
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedKey#_196
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedValue#_197
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedValue#7_$$A_2#_192
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedValue#7_$$A_3#_257
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedKey_$$A_1#_199
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/possiblyConvertedValue_$$A_1#_200
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/arrayComponentType#_313
<com.google.gson.internal.LinkedTreeMap: java.lang.Object get(java.lang.Object)>/$stack4
<com.google.gson.internal.LinkedTreeMap: java.lang.Object get(java.lang.Object)>/$stack4_$$A_2
<com.google.gson.internal.LinkedTreeMap: java.lang.Object remove(java.lang.Object)>/$stack4
<com.google.gson.internal.LinkedTreeMap: java.lang.Object remove(java.lang.Object)>/$stack4_$$A_2
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>/$stack49_$$A_2
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>/$stack49_$$A_3
<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>/comparableKey#_129
<sun.misc.URLClassPath: java.net.URL findResource(java.lang.String,boolean)>/$stack8
<sun.misc.URLClassPath: java.net.URL findResource(java.lang.String,boolean)>/l3#_214
<sun.misc.URLClassPath: sun.misc.Resource getResource(java.lang.String,boolean)>/$stack9
<sun.misc.URLClassPath: sun.misc.Resource getResource(java.lang.String,boolean)>/l3#_238
<org.springframework.web.context.support.ServletContextScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/scopedObject_$$A_2#_70
<org.picocontainer.parameters.ComponentParameter$1: java.lang.Object resolveInstance()>/result_$$A_3#_139
<org.picocontainer.parameters.ComponentParameter$1: java.lang.Object resolveInstance()>/result_$$A_1#_136
<org.picocontainer.parameters.ComponentParameter$1: java.lang.Object resolveInstance()>/result_$$A_2#_138
<org.picocontainer.parameters.ComponentParameter$1: java.lang.Object resolveInstance()>/result_$$A_5#_142
<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>/$stack77
<org.mockito.cglib.proxy.Enhancer: void emitMethods(org.mockito.cglib.core.ClassEmitter,java.util.List,java.util.List)>/$stack77_$$A_3
<ognl.OgnlContext: ognl.Evaluation getEvaluation(int)>/result_$$A_4#_409
<ognl.OgnlContext: ognl.Evaluation getEvaluation(int)>/result_$$A_1#_406
<ognl.OgnlContext: ognl.Evaluation getEvaluation(int)>/result_$$A_2#_407
<ognl.OgnlContext: ognl.Evaluation popEvaluation()>/result#_436
<ognl.OgnlContext: ognl.Evaluation popEvaluation()>/$stack6
<ognl.OgnlContext: ognl.Evaluation popEvaluation()>/$stack6_$$A_3
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result#_493
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_10#_531
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_1#_496
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_4#_505
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_6#_511
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_7#_514
<ognl.OgnlContext: java.lang.Object get(java.lang.Object)>/result_$$A_8#_517
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result#_541
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_9#_588
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_1#_545
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_3#_557
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_5#_565
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_6#_569
<ognl.OgnlContext: java.lang.Object put(java.lang.Object,java.lang.Object)>/result_$$A_7#_573
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result_$$A_7#_646
<ognl.OgnlContext: java.lang.Object remove(java.lang.Object)>/result_$$A_2#_615
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.ClassLoader getClassLoader()>/t#_169
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.ClassLoader getClassLoader()>/t_$$A_2#_172
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.ClassLoader getClassLoader()>/t_$$A_4#_175
<org.mockito.cglib.core.AbstractClassGenerator: java.lang.ClassLoader getClassLoader()>/t_$$A_6#_178
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/expectedArg#_131
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/expectedArg_$$A_2#_176
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/expectedArg_$$A_4#_176
<com.google.common.collect.Iterators: java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate,java.lang.Object)>/$stack6
<com.google.common.collect.Iterators: java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate,java.lang.Object)>/$stack6_$$A_2
<com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()>/$stack4_$$A_2
<com.google.gson.JsonPrimitive: java.math.BigDecimal getAsBigDecimal()>/$stack3_$$A_2
<com.google.gson.JsonPrimitive: java.math.BigInteger getAsBigInteger()>/$stack3_$$A_2
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/invisibleAnnotations#_139
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/invisibleAnnotations_$$A_2#_144
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/visibleAnnotations#_146
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/visibleAnnotations_$$A_2#_151
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/parameterInvisibleAnnotations#_153
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/parameterInvisibleAnnotations_$$A_2#_158
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/parameterVisibleAnnotations#_160
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/parameterVisibleAnnotations_$$A_2#_165
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/signature#_176
<javassist.bytecode.MethodInfo: void prune(javassist.bytecode.ConstPool)>/signature_$$A_2#_181
<ognl.OgnlRuntime: java.lang.Class getTargetClass(java.lang.Object)>/$stack2_$$A_3
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/result#_784
<ognl.OgnlRuntime: java.lang.Object invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>/ex_$$A_1#_801
<ognl.OgnlRuntime: java.lang.Class classForName(ognl.OgnlContext,java.lang.String)>/$stack13
<ognl.OgnlRuntime: java.lang.Class classForName(ognl.OgnlContext,java.lang.String)>/resolver#_1004
<ognl.OgnlRuntime: java.lang.Class classForName(ognl.OgnlContext,java.lang.String)>/resolver_$$A_1#_1005
<ognl.OgnlRuntime: java.lang.Class classForName(ognl.OgnlContext,java.lang.String)>/resolver_$$A_3#_1006
<ognl.OgnlRuntime: java.lang.Class classForName(ognl.OgnlContext,java.lang.String)>/resolver_$$A_4#_1008
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/result_$$A_2#_1085
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/result_$$A_1#_1079
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/result_$$A_4#_1079
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/result_$$A_3#_1086
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/result_$$A_1#_1136
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/result_$$A_4#_1136
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/typeClass#_1136
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/typeClass_$$A_4#_1136
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/result_$$A_3#_1155
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/result_$$A_6#_1170
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/result_$$A_5#_1169
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.String toString()>/method#_124
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/buffer#13#_1209
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/buffer#13_$$A_3#_1266
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/buffer#13_$$A_4#_1266
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/buffer#13_$$A_5#_1263
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/buffer#13_$$A_6#_1191
<ognl.OgnlRuntime: java.lang.Object callAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.lang.String,java.util.List,java.lang.Object[])>/buffer#13_$$A_7#_1263
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/actualArgs#_1336
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/actualArgs_$$A_8#_1377
<org.apache.log4j.Hierarchy: void shutdown()>/c#_465
<org.apache.log4j.Hierarchy: void shutdown()>/c_$$A_2#_473
<org.apache.log4j.Hierarchy: void shutdown()>/c_$$A_4#_466
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/m#_1400
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack18
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/value_$$A_1#_1633
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/value_$$A_4#_1644
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/value_$$A_5#_1640
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/value_$$A_6#_1631
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/value_$$A_3#_1637
<ognl.OgnlRuntime: java.lang.reflect.Method getGetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/result_$$A_1#_1789
<ognl.OgnlRuntime: java.lang.reflect.Method getGetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/result_$$A_2#_1783
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/result_$$A_1#_1824
<ognl.OgnlRuntime: java.lang.reflect.Method getSetMethod(ognl.OgnlContext,java.lang.Class,java.lang.String)>/result_$$A_2#_1819
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/m#_1902
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/m_$$A_2#_1934
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/m_$$A_3#_1940
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack47_$$A_1
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack39_$$A_2
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack47_$$A_2
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack39_$$A_1
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack47
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack47_$$A_4
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack39
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack39_$$A_4
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/m_$$A_5#_1961
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack47_$$A_3
<ognl.OgnlRuntime: void findObjectIndexedPropertyDescriptors(java.lang.Class,java.util.Map)>/$stack39_$$A_3
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/c#_2163
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/keyFound_$$A_1#_2161
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/keyFound_$$A_4#_2164
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/keyFound_$$A_5#_2189
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/keyFound_$$A_6#_2160
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/c_$$A_3#_2164
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/c_$$A_4#_2189
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/c_$$A_5#_2160
<ognl.OgnlRuntime: java.lang.Object getHandler(java.lang.Class,ognl.internal.ClassCache)>/keyFound_$$A_3#_2181
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/m_$$A_2#_2273
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/m_$$A_3#_2282
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/m_$$A_4#_2284
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/m_$$A_5#_2267
<ognl.OgnlRuntime: java.lang.Object getIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/m_$$A_1#_2270
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/m_$$A_2#_2304
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/m_$$A_3#_2313
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/m_$$A_4#_2315
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/m_$$A_5#_2298
<ognl.OgnlRuntime: void setIndexedProperty(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>/m_$$A_1#_2301
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/sourceList_$$A_2#_98
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/sourceList_$$A_3#_84
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/sourceList_$$A_4#_122
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/sourceList_$$A_5#_84
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/str#_560
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/$stack13
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>/$stack13_$$A_2
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack19_$$A_2
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/node#_59
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack18_$$A_2
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/node#_76
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/patDir#_110
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/patDir_$$A_2#_101
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/patDir_$$A_3#_151
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/patDir_$$A_5#_142
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/propKey#_176
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/propValue#_176
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/propKey_$$A_2#_170
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/propValue_$$A_2#_173
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/actualInnerBeanName#_258
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/actualInnerBeanName_$$A_3#_265
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/actualInnerBeanName_$$A_1#_260
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.String adaptInnerBeanName(java.lang.String)>/actualInnerBeanName#_296
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/refName_$$A_2#_315
<com.thoughtworks.xstream.converters.collections.CollectionConverter: java.lang.Object createCollection(java.lang.Class)>/$stack4_$$A_1
<com.thoughtworks.xstream.core.TreeMarshaller: void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>/converter_$$A_1#_48
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/beanName#4#_305
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/beanName#4_$$A_7#_354
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/beanName#4_$$A_6#_347
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)>/beanName#4_$$A_11#_369
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/writeMethodToUse#_67
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/beanName_$$A_1#_479
<java.security.Signature$Delegate: void chooseFirstProvider()>/l3#_1055
<java.security.Signature$Delegate: void chooseFirstProvider()>/l3_$$A_4#_1037
<java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.SecureRandom)>/l6#_1094
<java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.SecureRandom)>/l6_$$A_4#_1092
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Class getObjectClass(java.lang.Object)>/$stack3_$$A_2
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/value_$$A_1#_715
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/autowiringValue#_839
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map findAutowireCandidates(java.lang.String,java.lang.Class,org.springframework.beans.factory.config.DependencyDescriptor)>/autowiringValue_$$A_3#_833
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/method_$$A_1#_76
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/method_$$A_2#_76
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>/l6#_2545
<java.util.AbstractMap: java.lang.String toString()>/l4#_555
<java.util.AbstractMap: java.lang.String toString()>/$stack31_$$A_2
<java.util.AbstractMap: java.lang.String toString()>/l5#_556
<java.util.AbstractMap: java.lang.String toString()>/$stack28_$$A_2
<java.util.AbstractMap: java.lang.String toString()>/$stack31
<java.util.AbstractMap: java.lang.String toString()>/$stack28
<org.springframework.web.context.request.AbstractRequestAttributesScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/scopedObject_$$A_2#_45
<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>/refClassLoader_$$A_2#_98
<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>/refClassLoader_$$A_1#_92
<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>/$stack9
<com.thoughtworks.xstream.core.util.CompositeClassLoader: void addInternal(java.lang.ClassLoader)>/refClassLoader_$$A_3#_99
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/parentContainer#_185
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/parentReferenceKey_$$A_1#_48
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/$stack25_$$A_3
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/$stack25_$$A_4
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/parentReferenceKey_$$A_4#_70
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/parentReferenceKey_$$A_3#_65
<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/$stack25_$$A_1
<org.springframework.expression.spel.ast.TypeReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack6
<org.springframework.beans.factory.config.DependencyDescriptor: void <init>(org.springframework.core.MethodParameter,boolean,boolean)>/$stack6
<org.springframework.beans.factory.config.DependencyDescriptor: void <init>(org.springframework.core.MethodParameter,boolean,boolean)>/$stack10
<org.springframework.beans.factory.config.DependencyDescriptor: void <init>(org.springframework.core.MethodParameter,boolean,boolean)>/$stack12
<org.springframework.beans.factory.config.DependencyDescriptor: void <init>(org.springframework.core.MethodParameter,boolean,boolean)>/$stack7
<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack9
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/e#_59
<br.com.caelum.iogi.conversion.BigIntegerConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<java.util.AbstractSequentialList: java.lang.Object get(int)>/$stack4
<java.util.AbstractSequentialList: java.lang.Object set(int,java.lang.Object)>/l4#_116
<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object)>/$stack2
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/$stack51
<ognl.OgnlOps: int compareWithConversion(java.lang.Object,java.lang.Object)>/$stack47
<br.com.caelum.iogi.EmptyObjectsProvider: boolean canProvide(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.iogi.EmptyObjectsProvider: java.lang.Object provide(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void addBasePackagesStereotypes(java.util.Map,java.util.List,java.util.HashSet)>/libStereotypes#_133
<ognl.OgnlOps: java.lang.String stringValue(java.lang.Object)>/$stack1
<br.com.caelum.vraptor.scan.ScannotationComponentScanner: void findComponentsFromBasePackages(java.util.Map,java.util.List,java.util.Set)>/classes#_171
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionType(java.lang.Class)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyType(java.lang.Class)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueType(java.lang.Class)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionFieldType(java.lang.reflect.Field)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionFieldType(java.lang.reflect.Field,int)>/$stack2
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyFieldType(java.lang.reflect.Field)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueFieldType(java.lang.reflect.Field)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionParameterType(org.springframework.core.MethodParameter)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyParameterType(org.springframework.core.MethodParameter)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueParameterType(org.springframework.core.MethodParameter)>/$stack1
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionReturnType(java.lang.reflect.Method,int)>/$stack2
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyReturnType(java.lang.reflect.Method,int)>/$stack2
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueReturnType(java.lang.reflect.Method,int)>/$stack2
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getGenericParameterType(org.springframework.core.MethodParameter,java.lang.Class,int)>/$stack5
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getGenericFieldType(java.lang.reflect.Field,java.lang.Class,int,int)>/$stack6
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getGenericReturnType(java.lang.reflect.Method,java.lang.Class,int,int)>/$stack6
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractType(org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class,int,int,int)>/$stack14
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractType(org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class,int,int,int)>/$stack12
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>/$stack2
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/$stack64
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromParameterizedType(org.springframework.core.MethodParameter,java.lang.reflect.ParameterizedType,java.lang.Class,int,int,int)>/nextLevel#7#_328
<br.com.caelum.iogi.conversion.IntegerWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromClass(java.lang.Class,java.lang.Class,int)>/$stack3
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromClass(org.springframework.core.MethodParameter,java.lang.Class,java.lang.Class,int,int,int)>/$stack32
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class extractTypeFromClass(org.springframework.core.MethodParameter,java.lang.Class,java.lang.Class,int,int,int)>/$stack22
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/$stack140
<ognl.OgnlOps: java.lang.Object convertValue(java.lang.Object,java.lang.Class,boolean)>/$stack135
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/e#_59
<ognl.OgnlOps: java.lang.Object binaryOr(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object binaryXor(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object binaryAnd(java.lang.Object,java.lang.Object)>/$stack4
<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path getPath()>/name#_169
<ognl.OgnlOps: boolean in(java.lang.Object,java.lang.Object)>/e#_818
<ognl.OgnlOps: java.lang.Object shiftLeft(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object shiftRight(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object unsignedShiftRight(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/$stack36
<ognl.OgnlOps: java.lang.Object add(java.lang.Object,java.lang.Object)>/$stack29
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/$stack11
<ognl.OgnlOps: java.lang.Object subtract(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/$stack11
<ognl.OgnlOps: java.lang.Object multiply(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/$stack11
<ognl.OgnlOps: java.lang.Object divide(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object remainder(java.lang.Object,java.lang.Object)>/$stack4
<ognl.OgnlOps: java.lang.Object negate(java.lang.Object)>/$stack8
<ognl.OgnlOps: java.lang.Object negate(java.lang.Object)>/$stack3
<ognl.OgnlOps: java.lang.Object bitNegate(java.lang.Object)>/$stack3
<ognl.ASTVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack4
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service access$200(sun.security.jca.ProviderList$ServiceList,int)>/$stack2
<org.springframework.context.expression.BeanFactoryResolver: java.lang.Object resolve(org.springframework.expression.EvaluationContext,java.lang.String)>/$stack5
<java.util.logging.Level: java.util.logging.Level findLevel(java.lang.String)>/l1_$$A_5#_373
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeAttribute(java.lang.String)>/$stack2
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String decodeNode(java.lang.String)>/$stack2
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String encodeAttribute(java.lang.String)>/$stack2
<com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder: java.lang.String encodeNode(java.lang.String)>/$stack2
<br.com.caelum.iogi.Iogi$DelegateToAllInstantatiors: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack5
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack3
<br.com.caelum.iogi.conversion.FloatPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.picocontainer.injectors.IterativeInjector: org.picocontainer.Parameter[] getMatchingParameterListForSetters(org.picocontainer.PicoContainer)>/$stack35
<org.picocontainer.injectors.IterativeInjector: boolean matchParameter(org.picocontainer.PicoContainer,java.util.List,org.picocontainer.Parameter)>/o#_120
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/id#_62
<com.thoughtworks.xstream.io.AttributeNameIterator: java.lang.Object next()>/$stack4
<org.springframework.core.convert.support.GenericConversionService: void addConverter(org.springframework.core.convert.converter.GenericConverter)>/$stack11
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack17
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack20
<org.springframework.core.convert.support.GenericConversionService: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/converter#_145
<com.thoughtworks.xstream.converters.collections.PropertiesConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack10
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack26
<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack21
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack74
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter findConverterForClassPair(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/interfaces#15#_366
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/$stack80
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getMatchingConverterForTarget(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,java.util.Map)>/interfaces#14#_437
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter matchConverter(org.springframework.core.convert.support.GenericConversionService$MatchableConverters,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack6
<br.com.caelum.iogi.conversion.BooleanWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<java.util.AbstractSet: int hashCode()>/l3#_124
<org.springframework.beans.factory.support.AbstractBeanFactory$1: java.lang.Object getObject()>/$stack6
<org.springframework.core.convert.support.ConversionUtils: java.lang.Object invokeConverter(org.springframework.core.convert.converter.GenericConverter,java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack5
<ognl.IteratorEnumeration: java.lang.Object nextElement()>/$stack2
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/$stack4
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/$stack9
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandler: void deny(br.com.caelum.vraptor.core.RequestInfo,java.util.Set)>/$stack12
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack22
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack14
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack2
<br.com.caelum.vraptor.serialization.gson.Exclusions: boolean shouldSkipField(com.google.gson.FieldAttributes)>/$stack23
<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/type#_116
<javassist.compiler.MemberCodeGen: void setThisMethod(javassist.CtMethod)>/$stack2
<org.springframework.web.context.request.SessionScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/$stack8
<com.google.common.collect.Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>/$stack2
<com.google.common.collect.Iterables: java.lang.Object find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object)>/$stack4
<com.google.common.collect.Iterables: java.lang.Object get(java.lang.Iterable,int)>/$stack7
<br.com.caelum.iogi.conversion.FallbackConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/$stack5
<javassist.CtNewWrappedConstructor: javassist.CtConstructor wrapped(javassist.CtClass[],javassist.CtClass[],int,javassist.CtMethod,javassist.CtMethod$ConstParameter,javassist.CtClass)>/$stack11
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: boolean hasDefaultConverter()>/$stack5
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/converter#_288
<com.google.common.collect.ForwardingMultimap: boolean equals(java.lang.Object)>/$stack2
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>/$stack9
<org.springframework.expression.spel.ast.OpMultiply: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack8
<org.springframework.expression.spel.ast.OpMultiply: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack11
<br.com.caelum.vraptor.serialization.xstream.VRaptorClassMapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>/$stack22
<br.com.caelum.vraptor.http.VRaptorRequest: java.lang.String toString()>/$stack4
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.lang.Object argumentValue(br.com.caelum.iogi.Instantiator,br.com.caelum.iogi.reflection.Target)>/$stack5
<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>/$stack3
<br.com.caelum.iogi.conversion.LongWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>/$stack14
<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>/$stack7
<br.com.caelum.iogi.conversion.FloatWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack55
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: java.lang.Object getComponentKey()>/$stack2
<org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter: java.lang.Class getComponentImplementation()>/$stack2
<ognl.ArrayPropertyAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/converter#_109
<br.com.caelum.vraptor.core.DefaultConverters: boolean existsFor(java.lang.Class)>/$stack2
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void dispose(org.picocontainer.PicoContainer)>/$stack7
<org.picocontainer.behaviors.Stored$RealComponentLifecycle: void guardNotInstantiated()>/$stack5
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack3
<com.google.common.collect.SingletonImmutableMap: void <init>(java.util.Map$Entry)>/$stack2
<com.google.common.collect.SingletonImmutableMap: void <init>(java.util.Map$Entry)>/$stack3
<br.com.caelum.vraptor.serialization.xstream.ProxyConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/converter#_31
<java.security.PermissionsEnumerator: java.lang.Object nextElement()>/$stack1
<com.google.common.collect.Ordering: java.lang.Object max(java.lang.Iterable)>/$stack3
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeIndexedArgumentValue(java.lang.Integer,org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack9
<org.springframework.beans.factory.config.ConstructorArgumentValues: void addOrMergeGenericArgumentValue(org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder)>/$stack16
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue)>/$stack2
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue)>/$stack3
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue)>/$stack4
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue,java.lang.Object)>/$stack3
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack11
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack100
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack59
<org.picocontainer.injectors.ConstructorInjector: org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters getGreediestSatisfiableConstructor(org.picocontainer.PicoContainer)>/$stack39
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack52
<org.springframework.context.expression.StandardBeanExpressionResolver: java.lang.Object evaluate(java.lang.String,org.springframework.beans.factory.config.BeanExpressionContext)>/$stack11
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack39
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack35
<sun.security.jca.ProviderList$ServiceList$1: boolean hasNext()>/$stack3
<sun.security.jca.ProviderList$ServiceList$1: java.security.Provider$Service next()>/l1#_490
<sun.security.jca.ProviderList$ServiceList$1: java.lang.Object next()>/$stack1
<ognl.ASTThisVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack3
<org.springframework.util.CollectionUtils: java.lang.Class findCommonElementType(java.util.Collection)>/val#_290
<org.springframework.beans.CachedIntrospectionResults: void <init>(java.lang.Class,boolean)>/$stack39
<org.springframework.beans.CachedIntrospectionResults: void <init>(java.lang.Class,boolean)>/$stack52
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)>/$stack7
<com.thoughtworks.xstream.converters.collections.TreeMapConverter: java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap)>/$stack9
<br.com.caelum.iogi.conversion.ShortWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack70
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>/$stack7
<java.text.AttributedString$AttributedStringIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>/$stack6
<com.google.common.collect.Iterators$3: java.lang.Object next()>/$stack2
<org.springframework.expression.spel.ast.Elvis: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/value#_44
<org.springframework.expression.spel.ast.Elvis: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack6
<org.springframework.expression.spel.ast.Elvis: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.expression.spel.ast.Elvis: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack9
<com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack5
<org.springframework.util.StringUtils: java.lang.String capitalize(java.lang.String)>/$stack1
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Object)>/$stack12
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding)>/$stack3
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack36
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack29
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack30
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack27
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack17
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,java.lang.Class)>/$stack3
<org.springframework.util.StringUtils: java.lang.String arrayToDelimitedString(java.lang.Object[],java.lang.String)>/$stack18
<org.springframework.util.StringUtils: java.lang.String arrayToCommaDelimitedString(java.lang.Object[])>/$stack1
<org.picocontainer.DefaultPicoContainer: java.lang.Object getLocalInstance(org.picocontainer.ComponentAdapter)>/componentInstance#_606
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object)>/$stack2
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.reflect.Type)>/l3#2#_632
<org.picocontainer.DefaultPicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.Class)>/$stack8
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack22
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack16
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack18
<java.util.AbstractList: int indexOf(java.lang.Object)>/$stack11
<java.util.AbstractList: boolean equals(java.lang.Object)>/l4#_521
<java.util.AbstractList: int hashCode()>/l3#_540
<org.codehaus.jettison.Node: java.lang.String toString()>/$stack4
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack5
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/$stack10
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/eval#_113
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/previous#_114
<br.com.caelum.vraptor.http.ognl.ListAccessor: java.lang.reflect.Type extractGenericType(ognl.OgnlContext,java.lang.Object)>/getter#_119
<br.com.caelum.iogi.conversion.BigDecimalConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<java.util.AbstractMap$2$1: java.lang.Object next()>/$stack4
<br.com.caelum.vraptor.core.JstlLocalization: java.util.Locale localeFor(java.lang.String)>/$stack7
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack7
<br.com.caelum.vraptor.core.JstlLocalization: java.lang.Object findByKey(java.lang.String)>/$stack14
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.String keyToString(com.google.gson.JsonElement)>/$stack15
<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.String keyToString(com.google.gson.JsonElement)>/$stack11
<org.picocontainer.monitors.AbstractComponentMonitor: java.lang.reflect.Constructor instantiating(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.reflect.Constructor)>/$stack5
<org.springframework.beans.AbstractPropertyAccessor: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/$stack3
<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>/$stack2
<org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)>/$stack34
<org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)>/$stack47
<org.apache.log4j.config.PropertySetter: void setProperty(java.beans.PropertyDescriptor,java.lang.String,java.lang.String)>/setter#_223
<br.com.caelum.iogi.conversion.ByteWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.iogi.conversion.DoublePrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<java.util.Vector: java.lang.Object elementAt(int)>/$stack3
<java.util.Vector: java.lang.Object lastElement()>/$stack4
<java.util.Vector: java.lang.Object get(int)>/$stack3
<java.util.Vector: java.lang.Object set(int,java.lang.Object)>/l3#_768
<java.util.Collections$3: java.lang.Object nextElement()>/$stack2
<java.util.Vector: java.lang.Object remove(int)>/l2#_832
<javassist.compiler.AccessorMaker: java.lang.String getConstructor(javassist.CtClass,java.lang.String,javassist.bytecode.MethodInfo)>/ea#_56
<javassist.compiler.AccessorMaker: java.lang.String getMethodAccessor(java.lang.String,java.lang.String,java.lang.String,javassist.bytecode.MethodInfo)>/ea#_115
<javassist.compiler.AccessorMaker: java.lang.String findAccessorName(javassist.bytecode.ClassFile)>/$stack9
<javassist.CtClassType: void modifyClassConstructor(javassist.bytecode.ClassFile,javassist.bytecode.Bytecode,int,int)>/cache#3#_1489
<ognl.ASTRootVarRef: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack3
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String pullElementName()>/$stack5
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String pullText()>/$stack2
<com.thoughtworks.xstream.io.xml.StaxReader: java.lang.String getAttributeName(int)>/$stack4
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldNotMatchIfAResourceHasTheWrongWebMethod()>/route#_409
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldAcceptAResultWithASpecificWebMethod()>/route#_418
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldAcceptAResultWithOptionsWebMethod()>/route#_428
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void shouldAcceptAResultWithPatchWebMethod()>/route#_436
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void findsInheritedMethodsWithDefaultNames()>/route#_452
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack5
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack7
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack13
<br.com.caelum.iogi.conversion.TypeConverter: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack15
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void supportTypeHttpMethodAnnotation()>/route#_475
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void supportOverrideTypeHttpMethodAnnotation()>/route#_482
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void priorityForGetAnnotationShouldBeDefault()>/route#_528
<ognl.EvaluationPool: ognl.Evaluation create(ognl.SimpleNode,java.lang.Object)>/$stack3
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)>/converter#_96
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)>/$stack6
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/converter#_149
<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/$stack6
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>/$stack14
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>/$stack13
<java.beans.Introspector: void addPropertyDescriptor(java.beans.PropertyDescriptor)>/l4#_587
<java.beans.Introspector: void addPropertyDescriptor(java.beans.PropertyDescriptor)>/l5#_588
<java.beans.Introspector: void processPropertyDescriptors()>/$stack102
<java.beans.Introspector: void processPropertyDescriptors()>/$stack105
<java.beans.Introspector: void processPropertyDescriptors()>/$stack107
<java.beans.Introspector: void processPropertyDescriptors()>/$stack86
<java.beans.Introspector: void processPropertyDescriptors()>/l9#32#_751
<java.beans.Introspector: java.beans.PropertyDescriptor mergePropertyWithIndexedProperty(java.beans.PropertyDescriptor,java.beans.IndexedPropertyDescriptor)>/l3#_839
<java.beans.Introspector: java.beans.PropertyDescriptor mergePropertyDescriptor(java.beans.IndexedPropertyDescriptor,java.beans.PropertyDescriptor)>/l4#_858
<org.joda.time.format.DateTimeFormat$StyleFormatter: void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)>/l8#_787
<org.joda.time.format.DateTimeFormat$StyleFormatter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)>/l4#_799
<org.joda.time.format.DateTimeFormat$StyleFormatter: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)>/l4#_813
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry$1: void setAttribute(java.lang.String,java.lang.Object)>/$stack4
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: void initialize(java.lang.Object)>/$stack4
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: org.hibernate.proxy.LazyInitializer getInitializer(java.lang.Object)>/$stack3
<br.com.caelum.vraptor.serialization.HibernateProxyInitializer: java.lang.Class getActualClass(java.lang.Object)>/$stack5
<com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy: java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper)>/$stack8
<br.com.caelum.vraptor.view.DefaultLogicResultTest$1: boolean matchesSafely(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack2
<java.text.AttributedString: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute,int)>/$stack9
<java.text.AttributedString: java.lang.Object access$100(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute,int)>/$stack3
<java.text.AttributedString: java.lang.Object access$400(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute,int,int,int)>/$stack5
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>/$stack4
<com.google.common.collect.Iterators$5: java.lang.Object next()>/$stack4
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>/$stack3
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/$stack8
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>/result#_72
<com.thoughtworks.xstream.core.TreeUnmarshaller: void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object)>/$stack8
<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder)>/result#_134
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/$stack7
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class)>/$stack6
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/conversionService#_136
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack83
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack72
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.ClassLoader combineLoadersOf(java.lang.Class[])>/$stack2
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.ClassLoader combineLoadersOf(java.lang.Class,java.lang.Class[])>/$stack13
<org.springframework.expression.spel.ast.OpModulus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpModulus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<ognl.Ognl: java.lang.Object parseExpression(java.lang.String)>/$stack4
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>/$stack5
<org.springframework.core.convert.TypeDescriptor: boolean isPrimitive()>/type#_239
<org.springframework.core.convert.TypeDescriptor: boolean isArray()>/type#_247
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getElementType()>/$stack2
<org.springframework.expression.common.ExpressionUtils: java.lang.Object convert(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class)>/$stack5
<org.springframework.core.convert.TypeDescriptor: boolean isMapEntryTypeKnown()>/$stack2
<org.springframework.core.convert.TypeDescriptor: boolean isMapEntryTypeKnown()>/$stack4
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getMapKeyType()>/$stack2
<org.springframework.expression.common.ExpressionUtils: java.lang.Object convertTypedValue(org.springframework.expression.EvaluationContext,org.springframework.expression.TypedValue,java.lang.Class)>/$stack17
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getMapValueType()>/$stack2
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/$stack25
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/$stack13
<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>/$stack7
<org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>/$stack6
<org.springframework.core.convert.TypeDescriptor: int hashCode()>/$stack2
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveElementType()>/$stack4
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveElementType()>/$stack3
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveCollectionElementType()>/$stack17
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveCollectionElementType()>/$stack14
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveCollectionElementType()>/$stack8
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapKeyType()>/$stack19
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapKeyType()>/$stack17
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapKeyType()>/$stack10
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapValueType()>/$stack18
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapValueType()>/$stack16
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapValueType()>/$stack10
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object createBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/ex#2_$$A_1#_456
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack7
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>/$stack3
<org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>/$stack8
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/fb#5#_743
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getNonSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)>/$stack8
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack18
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack19
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack20
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack23
<br.com.caelum.vraptor.http.ognl.ArrayAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack24
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.String[] unsatisfiedNonSimpleProperties(org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.BeanWrapper)>/$stack13
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void checkDependencies(java.lang.String,org.springframework.beans.factory.support.AbstractBeanDefinition,java.beans.PropertyDescriptor[],org.springframework.beans.PropertyValues)>/$stack13
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object convertForProperty(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapper,org.springframework.beans.TypeConverter)>/$stack13
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object convertForProperty(java.lang.Object,java.lang.String,org.springframework.beans.BeanWrapper,org.springframework.beans.TypeConverter)>/$stack11
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object postProcessObjectFromFactoryBean(java.lang.Object,java.lang.String)>/$stack3
<com.google.gson.internal.bind.TypeAdapters$13: java.lang.String read(com.google.gson.stream.JsonReader)>/$stack6
<com.google.gson.internal.bind.TypeAdapters$13: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack2
<org.picocontainer.injectors.IterativeInjector$5: java.lang.Object run()>/$stack2
<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/$stack4
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>/$stack30
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>/$stack15
<java.util.Collections$UnmodifiableList$1: java.lang.Object next()>/$stack2
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack10
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack21
<com.google.common.collect.SingletonImmutableList: void <init>(java.lang.Object)>/$stack2
<com.google.gson.internal.Excluder$1: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack3
<com.google.gson.internal.Excluder$1: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack4
<com.google.gson.internal.Excluder$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack4
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack5
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack42
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack62
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack45
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack10
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack19
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.Class)>/$stack4
<ognl.DefaultTypeConverter: java.lang.Object convertValue(java.util.Map,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/$stack7
<ognl.ASTStaticMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack18
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: java.lang.String getFormat(java.lang.String)>/$stack7
<javax.crypto.Cipher: void initCryptoPermission()>/$stack4
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getCryptoPermission(java.lang.String)>/l2#_92
<javax.crypto.Cipher: javax.crypto.CryptoPermission getConfiguredPermission(java.lang.String)>/$stack5
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack10
<org.picocontainer.behaviors.HiddenImplementation: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack12
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack12
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack13
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack14
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack15
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack23
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack24
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter resolveAdapter(org.picocontainer.PicoContainer,org.picocontainer.ComponentAdapter,java.lang.Class,org.picocontainer.NameBinding,boolean,java.lang.annotation.Annotation)>/$stack18
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter noMatchingAdaptersFound(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.NameBinding,java.lang.annotation.Annotation)>/$stack5
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter noMatchingAdaptersFound(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.NameBinding,java.lang.annotation.Annotation)>/$stack8
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter noMatchingAdaptersFound(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.NameBinding,java.lang.annotation.Annotation)>/$stack10
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter noMatchingAdaptersFound(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.NameBinding,java.lang.annotation.Annotation)>/$stack6
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.ComponentAdapter noMatchingAdaptersFound(org.picocontainer.PicoContainer,java.lang.Class,org.picocontainer.NameBinding,java.lang.annotation.Annotation)>/$stack7
<org.picocontainer.parameters.BasicComponentParameter: org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException tooManyMatchingAdaptersFound(java.lang.Class,java.util.List)>/$stack10
<org.picocontainer.parameters.BasicComponentParameter: void removeExcludedAdapterIfApplicable(java.lang.Object,java.util.List)>/$stack10
<org.picocontainer.parameters.BasicComponentParameter: java.lang.Object access$100(org.picocontainer.Converters,java.lang.Object,java.lang.reflect.Type)>/$stack3
<java.util.AbstractCollection: boolean contains(java.lang.Object)>/$stack10
<java.util.AbstractCollection: java.lang.Object[] toArray()>/$stack10
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>/$stack17
<java.util.AbstractCollection: java.lang.Object[] finishToArray(java.lang.Object[],java.util.Iterator)>/$stack9
<java.util.AbstractCollection: boolean remove(java.lang.Object)>/$stack10
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/$stack14
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/$stack13
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest: void shouldReturnAnXStreamInstanceWithSupportToLinkConvertersBasedOnReflection()>/converter#_34
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest: void shouldUseTheDefaultConverterForTypesThatAreNotHypermediaAware()>/converter#_46
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest: void shouldAllowCustomXStreamRetrieval()>/converter#_79
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationTest: void shouldAllowCustomXStreamRetrieval()>/converter_$$A_1#_81
<br.com.caelum.iogi.conversion.DoubleWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack6
<org.picocontainer.injectors.AbstractInjector$UnsatisfiableDependenciesException: void <init>(org.picocontainer.ComponentAdapter,java.lang.reflect.Type,java.util.Set,org.picocontainer.PicoContainer)>/$stack6
<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: void <init>(java.util.Map$Entry[])>/value#_585
<org.springframework.expression.spel.ast.FunctionReference: java.lang.Object[] getArguments(org.springframework.expression.spel.ExpressionState)>/$stack8
<org.springframework.expression.spel.ast.FunctionReference: java.lang.Object[] getArguments(org.springframework.expression.spel.ExpressionState)>/$stack9
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerCacheComponents()>/$stack6
<org.picocontainer.containers.ImmutablePicoContainer: java.lang.Object getComponent(java.lang.Object)>/$stack3
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.PicoContainer getParent()>/$stack2
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding)>/$stack4
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,java.lang.Class)>/$stack4
<br.com.caelum.vraptor.ioc.pico.PicoProvider: java.lang.Object provideForRequest(br.com.caelum.vraptor.core.RequestInfo,br.com.caelum.vraptor.core.Execution)>/$stack10
<br.com.caelum.iogi.conversion.ShortPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<javassist.CtBehavior: javassist.CtClass[] getExceptionTypes()>/ea#_329
<org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>/candidateMethod_$$A_2#_77
<br.com.caelum.vraptor.ioc.spring.UniqueBeanNameGenerator: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)>/$stack8
<net.vidageek.mirror.list.BackedMirrorList: java.lang.Object get(int)>/$stack3
<java.util.SubList: java.lang.Object set(int,java.lang.Object)>/$stack6
<java.util.SubList: java.lang.Object get(int)>/$stack5
<br.com.caelum.iogi.conversion.StringConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.iogi.conversion.StringConverter: java.lang.Object convert(java.lang.String,br.com.caelum.iogi.reflection.Target)>/$stack3
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$2: java.lang.Object getObject()>/$stack5
<com.thoughtworks.xstream.io.xml.AbstractPullReader: boolean hasMoreChildren()>/$stack1
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>/$stack4
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()>/$stack10
<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()>/$stack8
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String getNodeName()>/$stack4
<org.codehaus.jettison.util.FastStack: java.lang.Object pop()>/$stack4
<org.codehaus.jettison.util.FastStack: java.lang.Object peek()>/$stack4
<org.picocontainer.injectors.ConstructorInjector$3: java.lang.reflect.Constructor[] run()>/$stack2
<br.com.caelum.iogi.util.Assert: void isNotARawType(br.com.caelum.iogi.reflection.Target)>/$stack6
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack25
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest: void shouldReturnAnXStreamInstanceWithSupportToLinkConvertersBasedOnReflection()>/converter#_34
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest: void shouldUseTheDefaultConverterForTypesThatAreNotHypermediaAware()>/converter#_46
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest: void shouldAllowCustomXStreamRetrieval()>/converter#_79
<br.com.caelum.vraptor.restfulie.serialization.RestfulSerializationJSONTest: void shouldAllowCustomXStreamRetrieval()>/converter_$$A_1#_81
<java.lang.invoke.MemberName: java.lang.String getName(java.lang.Object)>/$stack2
<java.util.ArrayList: java.lang.Object get(int)>/$stack2
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>/l3#_446
<java.util.ArrayList: java.lang.Object remove(int)>/l2#_495
<org.springframework.beans.factory.support.AbstractBeanFactory$2: java.lang.Object getObject()>/l2#_329
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectFactory: java.lang.Object getObject()>/$stack5
<br.com.caelum.vraptor.validator.DefaultValidator$LocalizationSupplier: java.util.ResourceBundle get()>/$stack2
<org.codehaus.jettison.json.JSONArray: java.lang.Object get(int)>/o#_160
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>/$stack6
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/$stack4
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/$stack4
<ognl.OgnlParser: ognl.Node topLevelExpression()>/$stack3
<javassist.bytecode.ClassFile: javassist.bytecode.MethodInfo getStaticInitializer()>/$stack1
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getKeyEquivalence()>/$stack2
<com.google.common.collect.MapMaker: com.google.common.base.Equivalence getValueEquivalence()>/$stack2
<com.thoughtworks.xstream.io.xml.XppReader: java.lang.String getAttributeName(int)>/$stack4
<br.com.caelum.iogi.collections.ArrayInstantiator$ArrayFactory: java.lang.Object instantiateArrayElement(br.com.caelum.iogi.parameters.Parameters)>/$stack7
<com.thoughtworks.xstream.io.xml.AbstractXmlReader: java.lang.String unescapeXmlName(java.lang.String)>/$stack2
<com.thoughtworks.xstream.io.AbstractWriter: java.lang.String encodeNode(java.lang.String)>/$stack3
<com.thoughtworks.xstream.io.AbstractWriter: java.lang.String encodeAttribute(java.lang.String)>/$stack3
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>/l7#_406
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>/l8#_481
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>/beanClass#_154
<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/left#_48
<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/right#_49
<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/leftValue#_50
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/$stack163
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: boolean matchesSafely(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack2
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: void describeMismatchSafely(br.com.caelum.vraptor.resource.ResourceMethod,org.hamcrest.Description)>/$stack5
<br.com.caelum.vraptor.interceptor.VRaptorMatchers$1: void describeMismatchSafely(br.com.caelum.vraptor.resource.ResourceMethod,org.hamcrest.Description)>/$stack9
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.factory.support.ConstructorResolver$ArgumentsHolder createArgumentArray(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.BeanWrapper,java.lang.Class[],java.lang.String[],java.lang.Object,boolean)>/sourceValue#_684
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>/$stack2
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object[] resolvePreparedArguments(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.BeanWrapper,java.lang.reflect.Member,java.lang.Object[])>/$stack31
<org.springframework.beans.factory.support.ConstructorResolver: java.lang.Object resolveAutowiredArgument(org.springframework.core.MethodParameter,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack7
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/e#_64
<com.thoughtworks.xstream.XStream: java.lang.Object fromXML(java.io.InputStream)>/$stack4
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(java.lang.Object,org.springframework.core.convert.TypeDescriptor)>/$stack6
<org.springframework.expression.spel.ExpressionState: java.lang.Object convertValue(org.springframework.expression.TypedValue,org.springframework.core.convert.TypeDescriptor)>/$stack8
<com.thoughtworks.xstream.XStream: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object)>/$stack3
<com.thoughtworks.xstream.XStream: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)>/$stack10
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/childValue#_106
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/$stack59
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue createNewInstance(org.springframework.expression.spel.ExpressionState)>/$stack26
<org.springframework.expression.spel.ast.ConstructorReference: void populateReferenceTypeArray(org.springframework.expression.spel.ExpressionState,java.lang.Object,org.springframework.expression.TypeConverter,org.springframework.expression.spel.ast.InlineList,java.lang.Class)>/$stack16
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>/$stack2
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>/$stack2
<com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>/$stack2
<com.google.common.collect.AbstractIterator: boolean tryToComputeNext()>/$stack2
<javassist.bytecode.FieldInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>/$stack3
<org.springframework.core.convert.support.ArrayToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack7
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.reflect.Field,boolean)>/$stack11
<org.springframework.context.support.AbstractApplicationContext: void publishEvent(org.springframework.context.ApplicationEvent)>/$stack4
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack31
<org.springframework.context.support.AbstractApplicationContext: void registerListeners()>/$stack10
<org.springframework.context.support.AbstractApplicationContext: void registerListeners()>/$stack13
<org.springframework.context.support.AbstractApplicationContext: void finishRefresh()>/$stack1
<org.springframework.context.support.AbstractApplicationContext: void doClose()>/$stack9
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String)>/$stack3
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Class)>/$stack4
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>/$stack3
<org.springframework.context.support.AbstractApplicationContext: void start()>/$stack1
<org.springframework.context.support.AbstractApplicationContext: void stop()>/$stack1
<org.springframework.context.support.AbstractApplicationContext: boolean isRunning()>/$stack1
<com.google.gson.Gson$FutureTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack4
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String)>/$stack2
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>/$stack3
<net.vidageek.mirror.get.DefaultGetterHandler: java.lang.reflect.Field getField(java.lang.String)>/field#_76
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isFactoryBean(java.lang.String)>/beanInstance#_870
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String transformedBeanName(java.lang.String)>/$stack3
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Class[])>/$stack13
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object evaluateBeanDefinitionString(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack7
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainer: java.lang.Object instanceFor(java.lang.Class)>/$stack8
<org.springframework.beans.factory.config.BeanExpressionContext: java.lang.Object getObject(java.lang.String)>/$stack8
<java.util.SubList$1: java.lang.Object next()>/$stack4
<br.com.caelum.iogi.parameters.Parameter: java.lang.String toString()>/$stack6
<org.codehaus.jettison.AbstractXMLStreamReader: java.lang.String getAttributeLocalName(int)>/$stack3
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack38
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack47
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack43
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/k#_95
<ognl.ASTMap: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/v#_95
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack21
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack19
<com.thoughtworks.xstream.converters.extended.FontConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack11
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: int readUnsignedByte()>/$stack2
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: int read(byte[],int,int)>/$stack5
<com.thoughtworks.xstream.core.util.CustomObjectInputStream: void close()>/$stack1
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext)>/$stack5
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Class)>/$stack8
<java.util.ResourceBundle: boolean checkList(java.util.List)>/$stack6
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>/l3#_698
<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>/l3#_713
<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack9
<org.picocontainer.injectors.IterativeInjector$1: java.lang.Object run()>/$stack3
<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>/$stack29
<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>/$stack5
<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()>/$stack5
<com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextString()>/$stack6
<org.springframework.expression.common.LiteralExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Class)>/$stack5
<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)>/$stack7
<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: java.lang.Object createCollection(java.lang.Class)>/defaultType#_75
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)>/$stack17
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/assignedValue#_143
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/assignedValue_$$A_4#_160
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatExpression()>/ifFalseExprValue#_162
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatRelationalExpression()>/expr#_195
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatRelationalExpression()>/relationalOperatorToken#_196
<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class)>/field#_92
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatPowerExpression()>/expr#_269
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatUnaryExpression()>/$stack7
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl maybeEatNonDottedNode()>/$stack5
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatDottedNode()>/t#_348
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatDottedNode()>/$stack7
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatDottedNode()>/$stack12
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatFunctionOrVar()>/t#_372
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatFunctionOrVar()>/functionOrVariableName#_373
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void consumeArguments(java.util.List)>/$stack5
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void consumeArguments(java.util.List)>/t#_411
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: void consumeArguments(java.util.List)>/next#_418
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatStartNode()>/$stack20
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatStartNode()>/$stack19
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatStartNode()>/$stack4
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatStartNode()>/$stack18
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatStartNode()>/$stack12
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.ast.SpelNodeImpl eatStartNode()>/$stack17
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatBeanReference()>/beanRefToken#_469
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean maybeEatInlineList()>/t#_534
<org.springframework.expression.spel.ast.VariableReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.Token maybeEatRelationalOperator()>/t#_718
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.Token eatToken(org.springframework.expression.spel.standard.TokenKind)>/t#_739
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean peekToken(org.springframework.expression.spel.standard.TokenKind,boolean)>/t#_757
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean peekToken(org.springframework.expression.spel.standard.TokenKind,org.springframework.expression.spel.standard.TokenKind)>/t#_770
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean peekToken(org.springframework.expression.spel.standard.TokenKind,org.springframework.expression.spel.standard.TokenKind,org.springframework.expression.spel.standard.TokenKind)>/t#_776
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean peekIdentifierToken(java.lang.String)>/t#_784
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: boolean peekSelectToken()>/t#_790
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>/l6#_124
<org.springframework.expression.spel.ast.OpNE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpNE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.lang.Object)>/$stack11
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTProperty: java.lang.String toString()>/$stack6
<com.google.common.collect.AbstractMapBasedMultiset$1$1: int getCount()>/$stack9
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack5
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack3
<com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack4
<com.google.common.collect.Multimaps$Values$1: java.lang.Object next()>/$stack4
<br.com.caelum.iogi.collections.ArrayInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.beans.factory.support.AbstractBeanDefinition: int getResolvedAutowireMode()>/$stack8
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/e#_64
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/$stack54
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/clazz#16#_96
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/field#23#_97
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/$stack46
<org.springframework.core.convert.support.PropertyTypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()>/$stack36
<br.com.caelum.iogi.reflection.Target: java.lang.Class getClassType()>/$stack2
<br.com.caelum.iogi.reflection.Target: java.lang.Class findRawClassType(java.lang.reflect.Type)>/$stack6
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op#_66
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack103
<br.com.caelum.iogi.reflection.Target: java.lang.Object cast(java.lang.Object)>/$stack2
<br.com.caelum.iogi.reflection.Target: java.lang.Object cast(java.lang.Object)>/$stack4
<br.com.caelum.iogi.reflection.Target: boolean isInstantiable()>/$stack1
<br.com.caelum.iogi.reflection.Target: boolean isInstantiable()>/$stack3
<br.com.caelum.iogi.reflection.Target: boolean isInstantiable()>/$stack7
<br.com.caelum.iogi.reflection.Target: java.lang.Class arrayElementType()>/$stack1
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack33
<br.com.caelum.iogi.reflection.Target: java.lang.String toString()>/$stack5
<br.com.caelum.iogi.reflection.Target: br.com.caelum.iogi.reflection.Constructors constructors(br.com.caelum.iogi.spi.ParameterNamesProvider,br.com.caelum.iogi.DependenciesInjector)>/$stack9
<br.com.caelum.iogi.reflection.Target: boolean isParameterized()>/$stack1
<org.picocontainer.injectors.AbstractInjector: void checkConcrete()>/$stack2
<org.picocontainer.injectors.AbstractInjector: void checkConcrete()>/$stack5
<br.com.caelum.vraptor.view.LinkToHandlerTest: void setUp()>/$stack14
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getTargetType(org.springframework.core.MethodParameter)>/$stack1
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getTargetType(org.springframework.core.MethodParameter)>/$stack9
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getTargetType(org.springframework.core.MethodParameter)>/$stack5
<br.com.caelum.vraptor.view.LinkToHandlerTest: void setUp()>/$stack20
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getTargetType(org.springframework.core.MethodParameter)>/$stack3
<br.com.caelum.vraptor.view.LinkToHandlerTest: void setUp()>/$stack27
<com.thoughtworks.xstream.mapper.FieldAliasingMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/$stack6
<org.springframework.core.GenericTypeResolver: java.lang.Class[] doResolveTypeArguments(java.lang.Class,java.lang.reflect.Type,java.lang.Class)>/$stack24
<org.springframework.core.GenericTypeResolver: java.lang.Class extractClass(java.lang.Class,java.lang.reflect.Type)>/$stack21
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: void parseInclude(com.google.common.collect.Multimap,java.util.Map$Entry)>/field#_57
<javassist.compiler.Javac: javassist.CtMember compile(java.lang.String)>/$stack14
<javassist.compiler.Javac: javassist.CtBehavior compileMethod(javassist.compiler.Parser,javassist.compiler.ast.MethodDecl)>/$stack44
<javassist.compiler.Javac: javassist.CtBehavior compileMethod(javassist.compiler.Parser,javassist.compiler.ast.MethodDecl)>/$stack34
<java.util.TreeMap: void putAll(java.util.Map)>/l3#_315
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/op#_55
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack85
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack33
<org.springframework.expression.spel.ast.Literal: java.lang.String toString()>/$stack2
<org.springframework.expression.spel.ast.Literal: java.lang.String toString()>/$stack3
<java.util.Vector$Itr: java.lang.Object next()>/$stack9
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>/$stack4
<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String)>/$stack4
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.reflect.Type getListType(java.lang.Object,ognl.Evaluation,ognl.OgnlContext)>/listSetter#_72
<br.com.caelum.iogi.conversion.CharacterPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack13
<com.thoughtworks.xstream.converters.extended.JavaFieldConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack15
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>/$stack13
<java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>/$stack14
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack14
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack30
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack16
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack34
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack56
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack48
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/contextObject#_160
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/targetObject#_161
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/$stack17
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainerTest: void setup()>/$stack3
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/contextObject#_213
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack13
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/$stack17
<java.beans.PropertyDescriptor: int hashCode()>/$stack3
<java.beans.PropertyDescriptor: int hashCode()>/$stack4
<java.beans.PropertyDescriptor: int hashCode()>/$stack7
<java.beans.PropertyDescriptor: int hashCode()>/$stack8
<java.beans.PropertyDescriptor: int hashCode()>/$stack11
<java.beans.PropertyDescriptor: int hashCode()>/$stack12
<org.springframework.expression.spel.ast.PropertyOrFieldReference: boolean isWritableProperty(java.lang.String,org.springframework.expression.spel.ExpressionState)>/$stack8
<com.google.inject.internal.util.$Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>/$stack2
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getPropertyType(java.lang.String)>/$stack9
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getPropertyType(java.lang.String)>/value#_347
<org.springframework.beans.BeanWrapperImpl: boolean isWritableProperty(java.lang.String)>/$stack5
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/$stack6
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>/$stack9
<br.com.caelum.iogi.conversion.LongPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<br.com.caelum.vraptor.http.VRaptorRequestTest: void returnsAllNamesOnlyOnce()>/value#_96
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.Object,java.lang.String)>/$stack6
<org.springframework.beans.BeanWrapperImpl: java.lang.Object convertForProperty(java.lang.String,java.lang.Object,java.lang.Object,java.beans.PropertyDescriptor)>/$stack8
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)>/$stack40
<org.springframework.beans.BeanWrapperImpl: java.lang.Object setDefaultValue(java.lang.String)>/$stack4
<org.springframework.beans.BeanWrapperImpl: java.lang.Object setDefaultValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack4
<br.com.caelum.iogi.conversion.IntegerPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(java.lang.String)>/$stack7
<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/elementName#_106
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest$1: void register(java.lang.Class,java.lang.Class)>/$stack4
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)>/$stack24
<com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>/$stack13
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.PropertyValue)>/$stack11
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack98
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack39
<ognl.ObjectArrayPool: java.lang.Object[] create(int)>/$stack3
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object)>/result#_161
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack40
<ognl.ObjectArrayPool: java.lang.Object[] create(java.lang.Object,java.lang.Object)>/result#_169
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack72
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack68
<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack14
<java.text.AttributedString$AttributeMap: java.lang.Object get(java.lang.Object)>/$stack7
<org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>/$stack3
<org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>/$stack8
<com.thoughtworks.xstream.mapper.OuterClassMapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/$stack5
<java.util.Hashtable: java.lang.String toString()>/l6#_584
<java.util.Hashtable: java.lang.String toString()>/l7#_585
<java.util.Hashtable: boolean equals(java.lang.Object)>/l6#_808
<java.util.Hashtable: boolean equals(java.lang.Object)>/$stack19
<br.com.caelum.iogi.ObjectInstantiator: void expectingAConcreteTarget(br.com.caelum.iogi.reflection.Target)>/$stack7
<com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack13
<com.google.gson.internal.bind.ObjectTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/typeAdapter#_100
<javassist.compiler.TypeChecker: void atFieldRead(javassist.CtField)>/finfo#_774
<javassist.bytecode.stackmap.BasicBlock$Maker: javassist.bytecode.stackmap.BasicBlock[] make(javassist.bytecode.MethodInfo)>/ca#_148
<java.util.TreeSet: boolean addAll(java.util.Collection)>/l4#_305
<org.springframework.core.type.StandardAnnotationMetadata: java.util.Set getAnnotationTypes()>/$stack8
<org.springframework.core.type.StandardAnnotationMetadata: java.util.Set getMetaAnnotationTypes(java.lang.String)>/$stack17
<org.springframework.core.type.StandardAnnotationMetadata: boolean hasAnnotation(java.lang.String)>/$stack7
<org.springframework.core.type.StandardAnnotationMetadata: boolean isAnnotated(java.lang.String)>/$stack11
<org.springframework.core.type.StandardAnnotationMetadata: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>/$stack12
<org.springframework.beans.factory.support.AutowireUtils: boolean isExcludedFromDependencyCheck(java.beans.PropertyDescriptor)>/wm#_96
<org.springframework.beans.factory.support.AutowireUtils: boolean isSetterDefinedInInterface(java.beans.PropertyDescriptor,java.util.Set)>/setter#_118
<org.springframework.beans.factory.support.AutowireUtils: java.lang.Object resolveAutowiringValue(java.lang.Object,java.lang.Class)>/$stack7
<org.picocontainer.injectors.MethodInjector$1: java.lang.Object run(java.lang.Object)>/$stack18
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues addPropertyValue(org.springframework.beans.PropertyValue)>/$stack8
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)>/$stack8
<org.springframework.beans.MutablePropertyValues: boolean contains(java.lang.String)>/$stack2
<javassist.CtNewWrappedMethod: java.lang.String addBodyMethod(javassist.CtClassType,javassist.bytecode.ClassFile,javassist.CtMethod)>/$stack16
<javax.servlet.jsp.jstl.fmt.LocalizationContext: void <init>(java.util.ResourceBundle)>/$stack2
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String realMember(java.lang.Class,java.lang.String)>/$stack4
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class defaultImplementationOf(java.lang.Class)>/$stack3
<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String attributeForAlias(java.lang.String)>/$stack3
<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class)>/$stack5
<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class)>/$stack5
<org.springframework.expression.spel.ast.OpEQ: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpEQ: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<com.google.common.collect.MapMaker$NullConcurrentMap: void <init>(com.google.common.collect.MapMaker)>/$stack2
<org.picocontainer.parameters.CollectionComponentParameter: java.lang.Object[] getArrayInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map)>/$stack17
<org.picocontainer.parameters.CollectionComponentParameter: java.util.Collection getCollectionInstance(org.picocontainer.PicoContainer,java.lang.Class,java.util.Map,org.picocontainer.NameBinding,boolean)>/$stack20
<ognl.ListPropertyAccessor: java.lang.Object getProperty(java.util.Map,java.lang.Object,java.lang.Object)>/$stack23
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void onRefresh()>/$stack1
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack54
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack59
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack33
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack39
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack42
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: boolean isWithoutRoot(java.lang.String[],com.google.gson.JsonObject)>/$stack7
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Class[] getTypes(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack4
<javassist.bytecode.CodeAttribute: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>/$stack3
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: java.util.Calendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>/$stack12
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: java.util.Calendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>/$stack14
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endArray()>/element#_105
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endObject()>/element#_124
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>/element#_136
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$1: java.lang.String apply(br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType)>/$stack2
<com.google.common.collect.AbstractMapEntry: int hashCode()>/k#_56
<com.google.common.collect.AbstractMapEntry: int hashCode()>/v#_57
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getMethod()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getContextPath()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRemoteUser()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRequestURI()>/$stack1
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>/$stack1
<com.thoughtworks.xstream.io.xml.QNameMap: java.lang.String getJavaClassName(javax.xml.namespace.QName)>/$stack4
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>/$stack3
<org.springframework.beans.SimpleTypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class,org.springframework.core.MethodParameter)>/$stack6
<com.thoughtworks.xstream.io.ReaderWrapper: java.lang.String getNodeName()>/$stack2
<com.thoughtworks.xstream.io.ReaderWrapper: java.lang.String getValue()>/$stack2
<br.com.caelum.iogi.MultiInstantiator: java.lang.Object instantiate(br.com.caelum.iogi.reflection.Target,br.com.caelum.iogi.parameters.Parameters)>/$stack17
<com.thoughtworks.xstream.core.ReferenceByIdMarshaller: java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>/$stack3
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean isAutowireCandidate(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.config.DependencyDescriptor)>/method#_158
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/$stack44
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/$stack60
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/$stack58
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>/$stack52
<com.google.gson.Gson: com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)>/candidate#_430
<com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(java.lang.Class)>/$stack3
<org.springframework.expression.spel.ast.OperatorMatches: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)>/adapter#_585
<org.springframework.expression.spel.ast.Assign: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/newValue#_39
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)>/typeAdapter#_802
<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)>/$stack4
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: java.util.Map getParameterTypes(java.lang.reflect.Method,java.lang.String[])>/$stack42
<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial)>/l3#_438
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String decodeNode(java.lang.String)>/$stack3
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String decodeAttribute(java.lang.String)>/$stack3
<com.thoughtworks.xstream.io.AbstractReader: java.lang.String encodeAttribute(java.lang.String)>/$stack3
<org.joda.time.format.DateTimeFormatter: java.lang.String print(org.joda.time.ReadableInstant)>/$stack4
<org.joda.time.format.DateTimeFormatter: java.lang.String print(org.joda.time.ReadablePartial)>/$stack4
<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology)>/l5#_509
<org.joda.time.format.DateTimeFormatter: long parseMillis(java.lang.String)>/l2#_622
<org.joda.time.format.DateTimeFormatter: org.joda.time.DateTime parseDateTime(java.lang.String)>/l2#_655
<com.google.gson.TreeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack12
<com.google.gson.TreeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack13
<com.google.gson.TreeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack12
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack13
<org.apache.log4j.SortedKeyEnumeration: java.lang.Object nextElement()>/$stack2
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.String toString(java.lang.Object)>/$stack3
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.Object fromString(java.lang.String)>/$stack3
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack4
<java.util.Stack: java.lang.Object pop()>/l1#_84
<java.util.Stack: java.lang.Object peek()>/$stack4
<org.springframework.expression.spel.support.StandardTypeConverter: java.lang.Object convertValue(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack6
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.String toString()>/$stack13
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: java.lang.Object readFromStream()>/value#_340
<javassist.bytecode.stackmap.TypeData$TypeName: void add(java.util.ArrayList,javassist.bytecode.stackmap.TypeData)>/$stack6
<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object get(int)>/$stack3
<com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)>/$stack4
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: void defaultReadObject()>/$stack9
<br.com.caelum.iogi.conversion.CharacterWrapperConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<com.thoughtworks.xstream.XStream$1: com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class)>/$stack3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack11
<ognl.ASTTest: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack11
<sun.util.logging.PlatformLogger$JavaLoggerProxy: void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String,java.lang.Object[])>/$stack11
<com.google.common.base.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>/template#2#_414
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Number convert(java.lang.Character)>/$stack6
<org.springframework.core.convert.support.CharacterToNumberFactory$CharacterToNumber: java.lang.Object convert(java.lang.Object)>/$stack3
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/currentContext#_57
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack13
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack16
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack25
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack21
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack45
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack46
<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(org.springframework.expression.spel.ExpressionState,org.springframework.expression.AccessException)>/$stack14
<org.springframework.expression.spel.ast.MethodReference: void throwSimpleExceptionIfPossible(org.springframework.expression.spel.ExpressionState,org.springframework.expression.AccessException)>/$stack15
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.MethodExecutor findAccessorForMethod(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)>/context#_166
<br.com.caelum.vraptor.serialization.gson.adapters.HibernateProxySerializer: com.google.gson.JsonElement serialize(org.hibernate.proxy.HibernateProxy,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>/$stack5
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String)>/$stack2
<ognl.SimpleNode: int getIndexInParent()>/$stack9
<br.com.caelum.vraptor.interceptor.FlashInterceptor$1: void beforeRedirect()>/$stack4
<br.com.caelum.vraptor.interceptor.FlashInterceptor$1: void beforeRedirect()>/$stack8
<ognl.SimpleNode: java.lang.Object evaluateGetValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/$stack17
<ognl.SimpleNode: java.lang.Object getValue(ognl.OgnlContext,java.lang.Object)>/$stack22
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack14
<ognl.SimpleNode: void setValue(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack19
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry)>/$stack2
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry)>/$stack3
<ognl.SimpleNode: void flattenTree()>/$stack27
<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.Object getSource()>/$stack2
<br.com.caelum.iogi.conversion.BytePrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: void close()>/$stack1
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/context#_66
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack33
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/contextObject#_185
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack23
<org.springframework.expression.spel.ast.Indexer: void setArrayElement(org.springframework.expression.spel.ExpressionState,java.lang.Object,int,java.lang.Object,java.lang.Class)>/$stack18
<sun.misc.URLClassPath: boolean ensureLoaderOpened(int)>/$stack4
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getNextLoader(int[],int)>/$stack5
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader access$100(sun.misc.URLClassPath,int[],int)>/$stack3
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack11
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack16
<org.picocontainer.parameters.ComponentParameter$1: org.picocontainer.ComponentAdapter getComponentAdapter()>/$stack2
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>/$stack3
<org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/$stack3
<br.com.caelum.vraptor.resource.DefaultResourceNotFoundHandler: void couldntFind(br.com.caelum.vraptor.core.RequestInfo)>/chain#_39
<org.springframework.util.NumberUtils: java.lang.Number parseNumber(java.lang.String,java.lang.Class,java.text.NumberFormat)>/l7#_208
<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2: java.lang.Object readFromStream()>/streamItem#_128
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: java.util.List get(java.lang.Object)>/$stack2
<com.google.common.collect.Multimaps$UnmodifiableListMultimap: com.google.common.collect.Multimap delegate()>/$stack1
<net.vidageek.mirror.dsl.Mirror: java.lang.Class reflectClass(java.lang.String)>/$stack7
<org.springframework.expression.spel.support.ReflectionHelper: org.springframework.expression.spel.support.ReflectionHelper$ArgumentsMatchInfo compareArgumentsVarargs(java.util.List,java.util.List,org.springframework.expression.TypeConverter)>/$stack25
<com.google.gson.JsonArray: java.lang.String getAsString()>/$stack7
<org.springframework.expression.spel.support.ReflectionHelper: void convertArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.Object,int[],java.lang.Integer)>/$stack33
<org.springframework.expression.spel.support.ReflectionHelper: void convertArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.Object,int[],java.lang.Integer)>/$stack16
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack19
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack20
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack21
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack24
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/$stack66
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.Object nullPropertyValue(java.util.Map,java.lang.Object,java.lang.Object)>/getter#_78
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findGetter(java.lang.Object,java.lang.String)>/$stack15
<org.springframework.expression.spel.support.ReflectionHelper: void convertAllArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.reflect.Method)>/$stack33
<org.springframework.expression.spel.support.ReflectionHelper: void convertAllArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.reflect.Method)>/$stack13
<org.springframework.expression.spel.support.ReflectionHelper: void convertAllArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.reflect.Method)>/$stack16
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findSetter(java.lang.Object,java.lang.String,java.lang.Class)>/$stack17
<java.util.Collections$SynchronizedList: java.lang.Object get(int)>/$stack6
<java.util.Collections$SynchronizedList: java.lang.Object set(int,java.lang.Object)>/$stack7
<com.google.common.collect.Iterators: java.lang.Object get(java.util.Iterator,int)>/t#_836
<javax.servlet.http.HttpServletResponseWrapper: void sendError(int,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void sendError(int)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: void sendRedirect(java.lang.String)>/$stack2
<javax.servlet.http.HttpServletResponseWrapper: void setDateHeader(java.lang.String,long)>/$stack4
<javax.servlet.http.HttpServletResponseWrapper: void addDateHeader(java.lang.String,long)>/$stack4
<javax.servlet.http.HttpServletResponseWrapper: void setHeader(java.lang.String,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void addHeader(java.lang.String,java.lang.String)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void addIntHeader(java.lang.String,int)>/$stack3
<javax.servlet.http.HttpServletResponseWrapper: void setStatus(int)>/$stack2
<com.google.gson.JsonPrimitive: boolean getAsBoolean()>/$stack4
<com.google.gson.JsonPrimitive: java.lang.String getAsString()>/$stack7
<com.google.gson.JsonPrimitive: java.lang.String getAsString()>/$stack8
<com.google.gson.JsonPrimitive: java.lang.String getAsString()>/$stack5
<com.google.gson.JsonPrimitive: double getAsDouble()>/$stack4
<com.google.gson.JsonPrimitive: long getAsLong()>/$stack4
<com.google.gson.JsonPrimitive: int getAsInt()>/$stack4
<com.google.gson.JsonPrimitive: int hashCode()>/$stack15
<com.google.gson.JsonPrimitive: int hashCode()>/$stack9
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack30
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack32
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack20
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack22
<javassist.bytecode.MethodInfo: javassist.bytecode.AttributeInfo getAttribute(java.lang.String)>/$stack3
<br.com.caelum.iogi.collections.ListInstantiator: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<javassist.bytecode.MethodInfo: void rebuildStackMap(javassist.ClassPool)>/ca#_414
<javassist.bytecode.MethodInfo: void rebuildStackMapForME(javassist.ClassPool)>/ca#_431
<java.util.Vector$1: java.lang.Object nextElement()>/$stack12
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/$stack6
<ognl.OgnlRuntime: java.lang.Object getConvertedType(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Object,java.lang.Class)>/$stack7
<ognl.OgnlRuntime: boolean getConvertedTypes(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Member,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object[])>/v#_1057
<ognl.OgnlRuntime: java.lang.reflect.Method getConvertedMethodAndArgs(ognl.OgnlContext,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/converter#_1074
<ognl.OgnlRuntime: java.lang.reflect.Constructor getConvertedConstructorAndArgs(ognl.OgnlContext,java.lang.Object,java.util.List,java.lang.Object[],java.lang.Object[])>/converter#_1096
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/$stack31
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.String toString()>/$stack8
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.String toString()>/$stack12
<java.util.ArrayList$SubList: java.lang.Object set(int,java.lang.Object)>/l3#_1028
<java.util.ArrayList$SubList: java.lang.Object get(int)>/$stack5
<java.util.ArrayList$SubList: java.lang.Object remove(int)>/l2#_1055
<br.com.caelum.vraptor.view.LinkToHandler$Linker: java.lang.Class[] getClasses(java.util.List)>/$stack6
<ognl.OgnlRuntime: java.lang.Object callConstructor(ognl.OgnlContext,java.lang.String,java.lang.Object[])>/$stack17
<ognl.OgnlRuntime: java.lang.Object getMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack14
<ognl.OgnlRuntime: boolean setMethodValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object,boolean)>/$stack19
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack19
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack12
<ognl.OgnlRuntime: java.lang.Object getFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,boolean)>/$stack15
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack12
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack16
<ognl.OgnlRuntime: boolean setFieldValue(ognl.OgnlContext,java.lang.Object,java.lang.String,java.lang.Object)>/$stack34
<org.springframework.expression.spel.ast.OpGE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpGE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<ognl.OgnlRuntime: boolean isMethodAccessible(ognl.OgnlContext,java.lang.Object,java.lang.reflect.Method,java.lang.String)>/$stack4
<org.springframework.expression.common.CompositeStringExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Class)>/$stack5
<java.util.Collections$UnmodifiableList: java.lang.Object get(int)>/$stack3
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack18
<ognl.OgnlRuntime: java.util.Map getPropertyDescriptors(java.lang.Class)>/$stack20
<ognl.OgnlRuntime: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack10
<ognl.OgnlRuntime: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack6
<ognl.OgnlRuntime: void setProperty(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack10
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: boolean isCompatible(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>/$stack4
<org.picocontainer.behaviors.AbstractBehavior: java.lang.Object getComponentKey()>/$stack2
<org.picocontainer.behaviors.AbstractBehavior: java.lang.Class getComponentImplementation()>/$stack2
<org.picocontainer.behaviors.AbstractBehavior: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack4
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack52
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/converter#_101
<org.springframework.core.style.StylerUtils: java.lang.String style(java.lang.Object)>/$stack2
<net.vidageek.mirror.invoke.MethodHandlerByName: java.lang.reflect.Method getMethod(java.lang.Object[])>/i#7#_61
<org.picocontainer.injectors.MethodInjector: java.lang.reflect.Method getInjectorMethod()>/$stack6
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Number convert(java.lang.Number)>/$stack3
<org.springframework.core.convert.support.NumberToNumberConverterFactory$NumberToNumber: java.lang.Object convert(java.lang.Object)>/$stack3
<javax.crypto.PermissionsEnumerator: java.lang.Object nextElement()>/$stack1
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/result#_62
<org.springframework.expression.spel.ast.OpLE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpLE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<com.thoughtworks.xstream.converters.collections.CharArrayConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>/$stack3
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withoutArgs()>/$stack2
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withArgs(java.lang.Class[])>/$stack6
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack76
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack63
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack60
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack23
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveValueIfNecessary(java.lang.Object,java.lang.Object)>/$stack19
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object evaluate(org.springframework.beans.factory.config.TypedStringValue)>/result#_210
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object evaluate(java.lang.Object)>/$stack6
<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack7
<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack10
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack23
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveInnerBean(java.lang.Object,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>/$stack59
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveReference(java.lang.Object,org.springframework.beans.factory.config.RuntimeBeanReference)>/bean#_322
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>/$stack29
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/readMethodToUse#_66
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.config.DependencyDescriptor)>/$stack19
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class getPropertyType()>/$stack11
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class getPropertyType()>/$stack8
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState)>/$stack5
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState)>/$stack6
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState)>/$stack4
<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.TypedValue getTypedValue(org.springframework.expression.spel.ExpressionState)>/$stack5
<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.TypedValue getTypedValue(org.springframework.expression.spel.ExpressionState)>/$stack4
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState,java.lang.Class)>/$stack5
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState,java.lang.Class)>/$stack11
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack6
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack8
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack8
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack10
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack12
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack131
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack115
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.Class,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>/$stack89
<net.vidageek.mirror.reflect.DefaultFieldReflector: java.lang.reflect.Field onClass(java.lang.Class)>/$stack5
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>/$stack14
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>/$stack14
<br.com.caelum.iogi.conversion.BooleanPrimitiveConverter: boolean isAbleToInstantiate(br.com.caelum.iogi.reflection.Target)>/$stack2
<java.util.AbstractMap: boolean equals(java.lang.Object)>/l6#_490
<java.util.AbstractMap: boolean equals(java.lang.Object)>/$stack19
<com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter: java.lang.Object fromString(java.lang.String)>/$stack14
<org.picocontainer.DefaultPicoContainer$KnowsContainerAdapter: java.lang.Object getComponentKey()>/$stack2
<org.picocontainer.DefaultPicoContainer$KnowsContainerAdapter: java.lang.Class getComponentImplementation()>/$stack2
<org.picocontainer.DefaultPicoContainer$KnowsContainerAdapter: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack4
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1: void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/lookupType#41#_111
<net.vidageek.mirror.reflect.DefaultReflectionHandler: java.lang.reflect.Field field(java.lang.String)>/$stack8
<org.picocontainer.injectors.SingleMemberInjector: java.lang.Object[] getMemberArguments(org.picocontainer.PicoContainer,java.lang.reflect.AccessibleObject,java.lang.reflect.Type[],java.lang.annotation.Annotation[])>/$stack15
<org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters: java.lang.Object[] getParameterArguments(org.picocontainer.PicoContainer)>/$stack26
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest$1: java.lang.Void call()>/$stack10
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: boolean accepts(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack3
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: br.com.caelum.vraptor.ioc.pico.PicoBasedContainer provideRequestContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack18
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: org.picocontainer.MutablePicoContainer getSessionContainer(br.com.caelum.vraptor.core.RequestInfo)>/$stack4
<org.springframework.beans.PropertyMatches: java.lang.String[] calculateMatches(java.beans.PropertyDescriptor[],int)>/$stack10
<org.springframework.expression.spel.ast.Ternary: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack12
<org.springframework.expression.spel.ast.Ternary: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack9
<java.util.Vector: void insertElementAt(java.lang.Object,int)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.Vector: void copyInto(java.lang.Object[])>/java.lang.System.arraycopy/0/@tmp-arraycopy
<ognl.ASTSelectFirst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/expr#_55
<ognl.ASTGreaterEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTGreaterEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTDivide: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTDivide: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTMultiply: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTMultiply: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.ASTSelectLast: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/expr#_55
<com.thoughtworks.xstream.io.path.PathTracker: java.lang.String peekElement(int)>/$stack21
<com.thoughtworks.xstream.io.path.PathTracker: void resizeStacks(int)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.lang.Throwable: void printStackTrace(java.lang.Throwable$PrintStreamOrWriter)>/l8#8#_661
<java.lang.Throwable: void printEnclosedStackTrace(java.lang.Throwable$PrintStreamOrWriter,java.lang.StackTraceElement[],java.lang.String,java.lang.String,java.util.Set)>/l13#_702
<ognl.ASTBitAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTBitAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.ASTLessEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTLessEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTSequence: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack8
<ognl.ASTSequence: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack9
<ognl.ASTSequence: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack11
<ognl.ASTSequence: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack13
<ognl.ASTGreater: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTGreater: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTLess: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTLess: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTBitOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTBitOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.ASTOr: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTOr: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack10
<ognl.ASTOr: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack12
<ognl.ASTNotEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTNotEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack21
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack27
<ognl.ASTOr: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack37
<ognl.ASTAdd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTAdd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack44
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack75
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack85
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack94
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack193
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack275
<ognl.ASTAdd: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack401
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack38
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack44
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack51
<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack68
<org.mockito.cglib.core.ClassNameReader: java.lang.String getClassName(org.mockito.asm.ClassReader)>/$stack2
<ognl.ASTAssign: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack5
<ognl.ASTAssign: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack8
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack19
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack25
<ognl.ASTAssign: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack36
<ognl.ASTInstanceof: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack5
<ognl.ASTAssign: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTAssign: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack19
<ognl.ASTAssign: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack23
<ognl.ASTInstanceof: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack11
<org.picocontainer.paranamer.DefaultParanamer: java.lang.String[] getParameterNames(java.lang.Class,java.lang.String,java.lang.String)>/$stack17
<org.picocontainer.paranamer.DefaultParanamer: java.lang.String[] getParameterNames(java.lang.Class,java.lang.String,java.lang.String)>/parameterNames#_102
<java.util.Vector: int indexOf(java.lang.Object,int)>/$stack13
<java.util.Vector: int lastIndexOf(java.lang.Object,int)>/$stack11
<java.util.Vector: void removeElementAt(int)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.Vector: java.lang.Object elementData(int)>/$stack3
<java.util.Vector: java.lang.Object remove(int)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.Vector: boolean addAll(java.util.Collection)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.Vector: boolean addAll(int,java.util.Collection)>/java.lang.System.arraycopy/1/@tmp-arraycopy
<java.util.Vector: boolean addAll(int,java.util.Collection)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.Vector: void removeRange(int,int)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.Vector: boolean removeIf(java.util.function.Predicate)>/$stack25
<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>/l8#_2503
<ognl.ASTRemainder: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTRemainder: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTAnd: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTAnd: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack10
<ognl.ASTAnd: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack12
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack11
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack22
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack27
<ognl.ASTAnd: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack37
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])>/factoryMethod#_636
<ognl.ASTBitNegate: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack4
<ognl.ASTBitNegate: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack5
<ognl.ExpressionNode: boolean isConstant(ognl.OgnlContext)>/$stack12
<ognl.ExpressionNode: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack29
<ognl.ExpressionNode: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack21
<ognl.ASTStaticMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack17
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack64
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack68
<ognl.ASTStaticMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack94
<com.thoughtworks.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/$stack36
<com.thoughtworks.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/$stack43
<com.thoughtworks.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/$stack39
<com.thoughtworks.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/$stack40
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: java.lang.String chooseMimeType(java.lang.String)>/$stack9
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: java.lang.String[] getOrderedMimeTypes(java.lang.String)>/$stack22
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat: java.lang.String[] getOrderedMimeTypes(java.lang.String)>/$stack25
<ognl.ASTUnsignedShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTUnsignedShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTUnsignedShiftRight: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack21
<ognl.ASTNotIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTNotIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>/java.lang.System.arraycopy/0/@tmp-arraycopy
<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object replace(java.lang.Object)>/result#_52
<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object get(int)>/$stack3
<com.thoughtworks.xstream.core.util.FastStack: void resizeStack(int)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<ognl.ASTShiftLeft: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTShiftLeft: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: void <init>(java.util.Map$Entry[])>/existing#_583
<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: java.lang.Object get(java.lang.Object)>/candidate#_604
<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: java.lang.Object get(java.lang.Object)>/value#_611
<ognl.ASTMethod: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack24
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack63
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack67
<ognl.ASTMethod: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack93
<java.util.ArrayList: int indexOf(java.lang.Object)>/$stack12
<java.util.ArrayList: int lastIndexOf(java.lang.Object)>/$stack11
<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.ArrayList: java.lang.Object elementData(int)>/$stack3
<java.util.ArrayList: void add(int,java.lang.Object)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.ArrayList: java.lang.Object remove(int)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.ArrayList: boolean remove(java.lang.Object)>/$stack12
<java.util.ArrayList: void fastRemove(int)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.ArrayList: boolean addAll(java.util.Collection)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.ArrayList: boolean addAll(int,java.util.Collection)>/java.lang.System.arraycopy/1/@tmp-arraycopy
<java.util.ArrayList: boolean addAll(int,java.util.Collection)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.ArrayList: void removeRange(int,int)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack52
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack56
<ognl.ASTMethod: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack108
<java.util.ArrayList: boolean batchRemove(java.util.Collection,boolean)>/$stack32
<java.util.ArrayList: boolean batchRemove(java.util.Collection,boolean)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<java.util.ArrayList: boolean batchRemove(java.util.Collection,boolean)>/java.lang.System.arraycopy/1/@tmp-arraycopy
<java.util.ArrayList: boolean removeIf(java.util.function.Predicate)>/$stack26
<ognl.ASTNot: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack4
<ognl.ASTSubtract: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTSubtract: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<javassist.bytecode.stackmap.TypedBlock: javassist.bytecode.stackmap.TypedBlock[] makeBlocks(javassist.bytecode.MethodInfo,javassist.bytecode.CodeAttribute,boolean)>/$stack12
<javassist.bytecode.stackmap.TypedBlock: javassist.bytecode.stackmap.TypedBlock[] makeBlocks(javassist.bytecode.MethodInfo,javassist.bytecode.CodeAttribute,boolean)>/$stack21
<javassist.bytecode.stackmap.TypedBlock: javassist.bytecode.stackmap.TypedBlock[] makeBlocks(javassist.bytecode.MethodInfo,javassist.bytecode.CodeAttribute,boolean)>/$stack43
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>/java.lang.System.arraycopy/0/@tmp-arraycopy
<ognl.ASTProject: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/expr#_59
<br.com.caelum.vraptor.http.ParanamerNameProvider: java.lang.String[] parameterNamesFor(java.lang.reflect.AccessibleObject)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<org.springframework.beans.propertyeditors.ClassArrayEditor: void setAsText(java.lang.String)>/$stack10
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack18
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack21
<ognl.ASTChain: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack30
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack19
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack23
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack26
<ognl.ASTChain: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack35
<ognl.ASTChain: boolean isSimpleNavigationChain(ognl.OgnlContext)>/$stack11
<ognl.ASTChain: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack26
<org.mockito.internal.debugging.Location: void <init>(org.mockito.internal.exceptions.base.StackTraceFilter)>/$stack10
<ognl.ASTChain: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack30
<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/l15_$$A_2#_276
<ognl.ASTProperty: java.lang.Object getProperty(ognl.OgnlContext,java.lang.Object)>/$stack4
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack50
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack179
<ognl.ASTProperty: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack188
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack46
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack168
<ognl.ASTProperty: java.lang.String toSetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack172
<ognl.ASTSelect: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/expr#_59
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<org.springframework.core.GenericTypeResolver: java.lang.Class resolveTypeArgument(java.lang.Class,java.lang.Class)>/$stack5
<br.com.caelum.vraptor.serialization.xstream.OldAndProbablyBuggyConfigurer: java.lang.String getNameFor(java.lang.String)>/$stack6
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<org.springframework.expression.spel.ast.Projection: java.lang.Class determineCommonType(java.lang.Class,java.lang.Class)>/nextInterface#_150
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack14
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack16
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack29
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack32
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack37
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack43
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack48
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack53
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack56
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack58
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack62
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>/$stack67
<sun.misc.ExtensionDependency: java.lang.Boolean addNewExtensionsToClassLoader(sun.misc.Launcher$ExtClassLoader)>/$stack31
<sun.security.x509.CertificateValidity: void construct(sun.security.util.DerValue)>/$stack11
<sun.security.x509.CertificateValidity: void construct(sun.security.util.DerValue)>/$stack13
<sun.security.x509.CertificateValidity: void construct(sun.security.util.DerValue)>/$stack18
<sun.security.x509.CertificateValidity: void construct(sun.security.util.DerValue)>/$stack20
<ognl.ASTList: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack45
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack49
<ognl.ASTList: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack96
<org.picocontainer.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/$stack36
<org.picocontainer.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/$stack43
<org.picocontainer.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/$stack39
<org.picocontainer.paranamer.AnnotationParanamer: java.lang.String[] lookupParameterNames(java.lang.reflect.AccessibleObject,boolean)>/$stack40
<javassist.bytecode.stackmap.BasicBlock$Maker: javassist.bytecode.stackmap.BasicBlock[] makeBlocks(java.util.HashMap)>/$stack69
<javassist.bytecode.stackmap.BasicBlock$Maker: javassist.bytecode.stackmap.BasicBlock[] makeBlocks(java.util.HashMap)>/$stack75
<org.springframework.core.type.StandardAnnotationMetadata: java.util.Set getMetaAnnotationTypes(java.lang.String)>/ann#_57
<org.springframework.core.type.StandardAnnotationMetadata: boolean hasAnnotation(java.lang.String)>/ann#_75
<org.springframework.core.type.StandardAnnotationMetadata: boolean isAnnotated(java.lang.String)>/ann#_103
<ognl.ASTIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTIn: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/$stack19
<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/$stack21
<org.springframework.core.convert.support.StringToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/sourceElement#_58
<sun.security.pkcs.SignerInfo: void <init>(sun.security.util.DerInputStream,boolean)>/$stack8
<sun.security.pkcs.SignerInfo: void <init>(sun.security.util.DerInputStream,boolean)>/$stack12
<sun.security.util.AbstractAlgorithmConstraints: java.lang.String[] getAlgorithms(java.lang.String)>/$stack12
<ognl.ASTXor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTXor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack11
<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/$stack17
<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/$stack60
<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/$stack64
<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/$stack41
<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/$stack26
<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/$stack29
<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/$stack23
<ognl.ASTNegate: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack4
<ognl.ASTNegate: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack5
<ognl.ASTTest: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTTest: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack10
<ognl.ASTTest: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack7
<ognl.ASTTest: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack11
<ognl.SimpleNode: void jjtAddChild(ognl.Node,int)>/java.lang.System.arraycopy/0/@tmp-arraycopy
<ognl.SimpleNode: ognl.Node jjtGetChild(int)>/$stack3
<javassist.util.proxy.ProxyFactory: void getMethods(java.util.HashMap,java.lang.Class)>/$stack14
<javassist.util.proxy.ProxyFactory: void getMethods(java.util.HashMap,java.lang.Class)>/$stack30
<sun.security.x509.CRLExtensions: void encode(java.io.OutputStream,boolean)>/$stack19
<sun.security.x509.CRLExtensions: void encode(java.io.OutputStream,boolean)>/$stack21
<org.springframework.expression.spel.support.ReflectionHelper: void convertAllArguments(org.springframework.expression.TypeConverter,java.lang.Object[],java.lang.reflect.Method)>/$stack44
<ognl.ASTEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTEq: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.OgnlRuntime: java.lang.reflect.Method getAppropriateMethod(ognl.OgnlContext,java.lang.Object,java.lang.Object,java.lang.String,java.util.List,java.lang.Object[],java.lang.Object[])>/$stack30
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack27
<ognl.ASTCtor: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack51
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack178
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack182
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack232
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack248
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack256
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack272
<ognl.ASTCtor: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack284
<sun.security.pkcs.ContentInfo: void <init>(sun.security.util.DerInputStream,boolean)>/l5#_135
<sun.security.pkcs.ContentInfo: void <init>(sun.security.util.DerInputStream,boolean)>/l6#_148
<sun.security.pkcs.ContentInfo: void <init>(sun.security.util.DerInputStream,boolean)>/$stack18
<sun.security.pkcs.ContentInfo: void <init>(sun.security.util.DerInputStream,boolean)>/$stack17
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<ognl.ASTEval: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack13
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack9
<ognl.ASTEval: void setValueBody(ognl.OgnlContext,java.lang.Object,java.lang.Object)>/$stack13
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/$stack29
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/$stack33
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/$stack59
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/$stack73
<org.springframework.util.AntPathMatcher: boolean doMatch(java.lang.String,java.lang.String,boolean,java.util.Map)>/$stack77
<ognl.ASTShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTShiftRight: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack9
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)>/$stack11
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)>/$stack11
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)>/$stack7
<org.joda.time.format.DateTimeFormatterBuilder$Composite: void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)>/$stack7
<org.joda.time.format.DateTimeFormatterBuilder$Composite: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)>/$stack8
<java.lang.invoke.InnerClassLambdaMetafactory: java.lang.invoke.CallSite buildCallSite()>/$stack16
<java.beans.Introspector: java.beans.EventSetDescriptor[] getTargetEventInfo()>/$stack34
<sun.util.locale.provider.LocaleProviderAdapter: void <clinit>()>/l6#_142
<java.util.ArrayList$SubList$1: java.lang.Object next()>/$stack13
<java.util.ArrayList$SubList$1: java.lang.Object previous()>/$stack11
<java.beans.Introspector: java.beans.PropertyDescriptor[] getTargetPropertyInfo()>/$stack27
<org.springframework.core.convert.TypeDescriptor: java.lang.String toString()>/ann#_467
<ognl.ExpressionNode: java.lang.String toString()>/$stack19
<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object pop()>/result#_42
<ognl.ASTKeyValue: ognl.Node getKey()>/$stack2
<ognl.ASTChain: java.lang.String toString()>/$stack19
<ognl.ASTChain: java.lang.String toString()>/$stack12
<sun.security.x509.X509CertInfo: java.lang.String toString()>/l5#_322
<java.util.ArrayList$Itr: java.lang.Object next()>/$stack8
<ognl.ASTList: java.lang.String toString()>/$stack11
<org.springframework.core.type.StandardAnnotationMetadata: java.util.Set getAnnotationTypes()>/ann#_49
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.String getRequestCharset()>/$stack6
<java.util.ArrayList$ListItr: java.lang.Object previous()>/$stack6
<ognl.SimpleNode: void flattenTree()>/c#_375
<ognl.SimpleNode: void flattenTree()>/$stack31
<ognl.SimpleNode: void flattenTree()>/$stack37
<sun.security.x509.X509CRLEntryImpl: java.lang.String toString()>/l5#_306
<ognl.ASTCtor: java.lang.String toString()>/$stack41
<br.com.caelum.vraptor.validator.ValidatorAcceptanceTest: void setup()>/$stack9
<com.google.common.collect.Collections2$FilteredCollection: boolean add(java.lang.Object)>/$stack4
<com.google.common.collect.Collections2$FilteredCollection: boolean add(java.lang.Object)>/$stack2
<com.google.common.collect.Collections2$FilteredCollection: boolean addAll(java.util.Collection)>/$stack6
<com.google.common.collect.Collections2$FilteredCollection: boolean addAll(java.util.Collection)>/$stack9
<com.google.common.collect.Collections2$FilteredCollection: boolean contains(java.lang.Object)>/$stack5
<com.google.common.collect.Collections2$FilteredCollection: boolean contains(java.lang.Object)>/$stack3
<com.google.common.collect.Collections2$FilteredCollection: boolean isEmpty()>/$stack1
<com.google.common.collect.Collections2$FilteredCollection: java.util.Iterator iterator()>/$stack1
<com.google.common.collect.Collections2$FilteredCollection: boolean remove(java.lang.Object)>/$stack5
<com.google.common.collect.Collections2$FilteredCollection: boolean remove(java.lang.Object)>/$stack3
<com.google.common.collect.ByFunctionOrdering: int compare(java.lang.Object,java.lang.Object)>/$stack4
<com.google.common.collect.ByFunctionOrdering: int compare(java.lang.Object,java.lang.Object)>/$stack3
<com.google.common.collect.ByFunctionOrdering: int compare(java.lang.Object,java.lang.Object)>/$stack6
<com.google.common.collect.ByFunctionOrdering: boolean equals(java.lang.Object)>/$stack8
<com.google.common.collect.ByFunctionOrdering: boolean equals(java.lang.Object)>/$stack5
<com.google.common.collect.ByFunctionOrdering: int hashCode()>/$stack3
<com.google.common.collect.ByFunctionOrdering: int hashCode()>/$stack2
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverter: java.util.Locale getLocale()>/$stack2
<br.com.caelum.vraptor.view.DefaultPathResolver: java.lang.String pathFor(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack6
<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Iterator iterator()>/$stack2
<com.google.common.collect.SingletonImmutableSet: boolean contains(java.lang.Object)>/$stack2
<com.google.common.collect.SingletonImmutableSet: java.lang.Object[] toArray()>/$stack2
<com.google.common.collect.SingletonImmutableSet: java.lang.Object[] toArray(java.lang.Object[])>/$stack5
<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: void clear()>/$stack3
<com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet: java.util.Map getMap()>/$stack1
<com.google.common.collect.SingletonImmutableSet: boolean equals(java.lang.Object)>/$stack5
<com.google.common.collect.SingletonImmutableSet: int hashCode()>/$stack2
<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>/$stack2
<com.google.common.collect.MapMakerInternalMap$Segment: void setValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object)>/$stack5
<com.google.common.collect.MapMakerInternalMap$Segment: void recordExpirationTime(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,long)>/$stack5
<com.google.common.collect.MapMakerInternalMap$Segment: void expireEntries()>/$stack7
<com.google.common.collect.MapMakerInternalMap$Segment: com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object,int)>/$stack11
<com.google.common.collect.MapMakerInternalMap$Segment: boolean containsValue(java.lang.Object)>/$stack19
<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>/$stack37
<com.google.common.collect.MapMakerInternalMap$Segment: boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object)>/$stack24
<com.google.common.collect.MapMakerInternalMap$Segment: boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object)>/$stack29
<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object replace(java.lang.Object,int,java.lang.Object)>/$stack23
<com.google.common.collect.MapMakerInternalMap$Segment: java.lang.Object remove(java.lang.Object,int)>/$stack25
<com.google.common.collect.MapMakerInternalMap$Segment: boolean remove(java.lang.Object,int,java.lang.Object)>/$stack26
<com.google.common.collect.MapMakerInternalMap$Segment: boolean remove(java.lang.Object,int,java.lang.Object)>/$stack31
<com.google.common.collect.MapMakerInternalMap$Segment: boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ValueReference)>/$stack26
<com.google.common.collect.MapMakerInternalMap$Segment: boolean clearValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ValueReference)>/$stack22
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack11
<br.com.caelum.vraptor.restfulie.serialization.LinkConverterJSON: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack22
<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest getRequest()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.Object getAttribute(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: java.util.Enumeration getAttributeNames()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getCharacterEncoding()>/$stack1
<javax.servlet.ServletRequestWrapper: void setCharacterEncoding(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: int getContentLength()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getContentType()>/$stack1
<javax.servlet.ServletRequestWrapper: javax.servlet.ServletInputStream getInputStream()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getParameter(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: java.util.Map getParameterMap()>/$stack1
<javax.servlet.ServletRequestWrapper: java.util.Enumeration getParameterNames()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String[] getParameterValues(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: java.lang.String getProtocol()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getScheme()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getServerName()>/$stack1
<javax.servlet.ServletRequestWrapper: int getServerPort()>/$stack1
<javax.servlet.ServletRequestWrapper: java.io.BufferedReader getReader()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getRemoteAddr()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getRemoteHost()>/$stack1
<javax.servlet.ServletRequestWrapper: void setAttribute(java.lang.String,java.lang.Object)>/$stack3
<javax.servlet.ServletRequestWrapper: void removeAttribute(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: java.util.Locale getLocale()>/$stack1
<javax.servlet.ServletRequestWrapper: java.util.Enumeration getLocales()>/$stack1
<br.com.caelum.vraptor.core.RequestInfo: javax.servlet.FilterChain getChain()>/$stack1
<javax.servlet.ServletRequestWrapper: boolean isSecure()>/$stack1
<br.com.caelum.vraptor.core.RequestInfo: javax.servlet.ServletContext getServletContext()>/$stack1
<javax.servlet.ServletRequestWrapper: javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)>/$stack2
<br.com.caelum.vraptor.core.RequestInfo: br.com.caelum.vraptor.http.MutableRequest getRequest()>/$stack1
<br.com.caelum.vraptor.core.RequestInfo: br.com.caelum.vraptor.http.MutableResponse getResponse()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getRealPath(java.lang.String)>/$stack2
<javax.servlet.ServletRequestWrapper: int getRemotePort()>/$stack1
<br.com.caelum.vraptor.core.RequestInfo: java.lang.String getRequestedUri()>/$stack3
<br.com.caelum.vraptor.core.RequestInfo: java.lang.String getRequestedUri()>/$stack5
<br.com.caelum.vraptor.core.RequestInfo: java.lang.String getRequestedUri()>/$stack8
<br.com.caelum.vraptor.core.RequestInfo: java.lang.String getRequestedUri()>/$stack11
<javax.servlet.ServletRequestWrapper: java.lang.String getLocalName()>/$stack1
<javax.servlet.ServletRequestWrapper: java.lang.String getLocalAddr()>/$stack1
<javax.servlet.ServletRequestWrapper: int getLocalPort()>/$stack1
<javax.servlet.ServletRequestWrapper: javax.servlet.ServletContext getServletContext()>/$stack1
<javax.servlet.ServletRequestWrapper: javax.servlet.AsyncContext startAsync()>/$stack1
<javax.servlet.ServletRequestWrapper: javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>/$stack3
<javax.servlet.ServletRequestWrapper: boolean isAsyncStarted()>/$stack1
<javax.servlet.ServletRequestWrapper: boolean isAsyncSupported()>/$stack1
<javax.servlet.ServletRequestWrapper: javax.servlet.AsyncContext getAsyncContext()>/$stack1
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(javax.servlet.ServletRequest)>/$stack2
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(javax.servlet.ServletRequest)>/$stack3
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(java.lang.Class)>/$stack4
<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(java.lang.Class)>/$stack7
<javax.servlet.ServletRequestWrapper: javax.servlet.DispatcherType getDispatcherType()>/$stack1
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void add(java.lang.Class)>/$stack2
<br.com.caelum.vraptor.core.DefaultInterceptorStack: void addAsNext(java.lang.Class)>/$stack6
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverter: java.sql.Time convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack8
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldBeAbleToConvert()>/$stack2
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack3
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack7
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack24
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack12
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack16
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack20
<br.com.caelum.vraptor.converter.LocaleBasedTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void setup()>/$stack5
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeOneLinkIfThereIsATransition()>/$stack11
<com.google.common.base.Predicates$NotPredicate: boolean apply(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.restfulie.LinkConverterJSONTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack19
<com.google.common.base.Predicates$NotPredicate: int hashCode()>/$stack1
<com.google.common.base.Predicates$NotPredicate: boolean equals(java.lang.Object)>/$stack5
<com.google.common.base.Predicates$NotPredicate: java.lang.String toString()>/$stack3
<br.com.caelum.vraptor.validator.DefaultValidator: void validate(java.lang.Object,java.lang.Class[])>/$stack3
<br.com.caelum.vraptor.validator.DefaultValidator: void validateProperties(java.lang.Object,java.lang.String[])>/$stack3
<br.com.caelum.vraptor.validator.DefaultValidator: void validateProperty(java.lang.Object,java.lang.String,java.lang.Class[])>/$stack4
<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.View onErrorUse(java.lang.Class)>/$stack6
<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.View onErrorUse(java.lang.Class)>/$stack8
<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.View onErrorUse(java.lang.Class)>/$stack10
<br.com.caelum.vraptor.validator.DefaultValidator: br.com.caelum.vraptor.core.Localization access$000(br.com.caelum.vraptor.validator.DefaultValidator)>/$stack1
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack8
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack1
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectWithASimpleTypeName()>/$stack12
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack9
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack5
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldOutjectACollectionAsAList()>/$stack13
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldNotOutjectIfThereIsNoReturnType()>/$stack1
<br.com.caelum.vraptor.validator.BeanValidatorTest: void shouldValidateWithMyLocale()>/$stack3
<br.com.caelum.vraptor.interceptor.OutjectResultTest: void shouldNotOutjectIfReturnIsVoid()>/$stack1
<br.com.caelum.vraptor.validator.BeanValidatorTest: void shouldValidateWithDefaultLocale()>/$stack3
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack12
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack17
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack4
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack7
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistryTest: void setup()>/$stack10
<com.google.common.collect.AbstractMultimap$WrappedCollection: java.lang.Object getKey()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldBeAbleToConvertWithPTBR()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldBeAbleToConvertWithENUS()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack4
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack9
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack25
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack13
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack17
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack21
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveFloatConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<ognl.IteratorEnumeration: boolean hasMoreElements()>/$stack1
<ognl.IteratorEnumeration: java.lang.Object nextElement()>/$stack1
<com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: java.lang.Object getOrCompute(java.lang.Object,int,com.google.common.base.Function)>/$stack44
<org.springframework.expression.ExpressionException: java.lang.String toDetailedString()>/$stack3
<org.springframework.expression.ExpressionException: java.lang.String getExpressionString()>/$stack1
<org.picocontainer.parameters.BasicComponentParameter$1: boolean isResolved()>/$stack1
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack1
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack2
<org.picocontainer.parameters.BasicComponentParameter$1: java.lang.Object resolveInstance()>/$stack7
<org.picocontainer.parameters.BasicComponentParameter$1: org.picocontainer.ComponentAdapter getComponentAdapter()>/$stack1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack11
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void addHeaderParametersToAttribute(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack22
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void addHeaderParametersToAttribute(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack26
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void addHeaderParametersToAttribute(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack13
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void fixParameter(java.lang.String)>/$stack6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: void fixParameter(java.lang.String)>/$stack10
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack3
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptor: java.lang.Object[] getParametersFor(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack5
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void setUp()>/$stack1
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack1
<br.com.caelum.vraptor.validator.ReplicatorOutjectorTest: void shouldReplicateMethodParametersToNextRequest()>/$stack8
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack2
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void setup()>/$stack12
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void gettingShouldReturnValueIfIndexFound()>/$stack2
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void gettingShouldReturnValueIfIndexFound()>/$stack4
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void settingShouldNullifyUpToIndex()>/$stack5
<br.com.caelum.vraptor.http.ognl.ListAccessorTest: void settingShouldNullifyUpToIndex()>/$stack9
<br.com.caelum.vraptor.config.BasicConfiguration: java.lang.Class getProviderType()>/$stack3
<br.com.caelum.vraptor.config.BasicConfiguration: boolean hasBasePackages()>/$stack1
<br.com.caelum.vraptor.config.BasicConfiguration: java.lang.String[] getBasePackages()>/$stack2
<br.com.caelum.vraptor.config.BasicConfiguration: java.lang.String getEncoding()>/$stack1
<br.com.caelum.vraptor.config.BasicConfiguration: java.lang.String getWebinfClassesDirectory()>/$stack1
<br.com.caelum.vraptor.config.BasicConfiguration: javax.servlet.ServletContext getServletContext()>/$stack1
<br.com.caelum.vraptor.config.BasicConfiguration: boolean isClasspathScanningEnabled()>/$stack2
<br.com.caelum.vraptor.config.BasicConfiguration: boolean isClasspathScanningEnabled()>/$stack4
<br.com.caelum.vraptor.interceptor.ForwardToDefaultViewInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack4
<br.com.caelum.vraptor.interceptor.ForwardToDefaultViewInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack7
<org.apache.commons.fileupload.servlet.ServletRequestContext: java.lang.String getCharacterEncoding()>/$stack1
<org.apache.commons.fileupload.servlet.ServletRequestContext: java.lang.String getContentType()>/$stack1
<org.apache.commons.fileupload.servlet.ServletRequestContext: int getContentLength()>/$stack1
<org.apache.commons.fileupload.servlet.ServletRequestContext: long contentLength()>/$stack4
<org.apache.commons.fileupload.servlet.ServletRequestContext: long contentLength()>/$stack8
<org.apache.commons.fileupload.servlet.ServletRequestContext: java.io.InputStream getInputStream()>/$stack1
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack16
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack34
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void reportFileUploadException(org.apache.commons.fileupload.FileUploadException)>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void reportSizeLimitExceeded(org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException)>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void processFile(org.apache.commons.fileupload.FileItem,java.lang.String)>/$stack11
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: void processFile(org.apache.commons.fileupload.FileItem,java.lang.String)>/$stack10
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptor: java.lang.String getValue(org.apache.commons.fileupload.FileItem)>/$stack4
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack11
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack16
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack21
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack26
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void setup()>/$stack31
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldDoNothingWhenYouDontSpecifyTheValidationPage()>/$stack4
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldDoNothingWhenYouDontSpecifyTheValidationPage()>/$stack5
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldDoNothingWhenYouDontSpecifyTheValidationPage()>/$stack6
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void forwardToCustomOnErrorPage()>/$stack2
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldAddBeanValidatorErrorsIfPossible()>/$stack3
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldAddBeanValidatorErrorsIfPossible()>/$stack17
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldAddBeanValidatorErrorsIfPossibleForSpecificProperties()>/$stack3
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldAddBeanValidatorErrorsIfPossibleForSpecificProperties()>/$stack17
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void testThatValidatorGoToRedirectsToTheErrorPageImmediatellyAndNotBeforeThis()>/$stack9
<br.com.caelum.vraptor.validator.DefaultValidatorTest: void shouldSetBundleOnI18nMessagesLazily()>/$stack4
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldDoNothingWhenThereIsNoFlashParameters()>/$stack1
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldDoNothingWhenThereIsNoFlashParameters()>/$stack8
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldAddAllFlashParametersToResult()>/$stack1
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldRemoveFlashIncludedParameters()>/$stack1
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack9
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldIncludeFlashParametersWhenARedirectHappens()>/$stack5
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack7
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotIncludeFlashParametersWhenThereIsNoIncludedParameter()>/$stack3
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotCrashWhenSessionIsInvalid()>/$stack14
<br.com.caelum.vraptor.interceptor.FlashInterceptorTest: void shouldNotCrashWhenSessionIsInvalid()>/$stack5
<br.com.caelum.vraptor.core.LazyInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack9
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType: java.lang.String getType()>/$stack1
<br.com.caelum.vraptor.view.DefaultAcceptHeaderToFormat$MimeType: java.lang.String toString()>/$stack1
<org.springframework.expression.spel.standard.Tokenizer: void pushHexIntToken(char[],boolean,int,int)>/$stack17
<org.springframework.expression.spel.standard.Tokenizer: void pushHexIntToken(char[],boolean,int,int)>/$stack26
<br.com.caelum.vraptor.serialization.xstream.XStreamSerializer: void preConfigure(java.lang.Object,java.lang.String)>/$stack18
<org.springframework.core.convert.ConversionFailedException: java.lang.Object getValue()>/$stack1
<br.com.caelum.vraptor.http.route.RouteBuilderTest: void setUp()>/$stack1
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest: void shouldBuildRelationsOfControllersUsingMethodNameByDefault()>/$stack3
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilderTest: void shouldBuildRelationsOfControllersUsingGivenName()>/$stack3
<org.springframework.beans.factory.support.DisposableBeanAdapter: void <init>(java.lang.Object,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.util.List,java.security.AccessControlContext)>/$stack8
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.lang.reflect.Method findDestroyMethod()>/$stack2
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.lang.reflect.Method findDestroyMethod()>/$stack7
<br.com.caelum.vraptor.resource.DefaultMethodNotAllowedHandlerTest: void shouldNotSendMethodNotAllowedIfTheRequestMethodIsOptions()>/$stack1
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.lang.Object access$0(org.springframework.beans.factory.support.DisposableBeanAdapter)>/$stack1
<com.google.common.collect.MapMakerInternalMap$EntrySet: boolean contains(java.lang.Object)>/$stack10
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: br.com.caelum.iogi.reflection.NewObject instantiate(br.com.caelum.iogi.Instantiator)>/$stack3
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.util.List argumentValues(br.com.caelum.iogi.Instantiator)>/$stack6
<br.com.caelum.iogi.reflection.Constructors$FilledConstructor: java.util.Collection targetsNeedingADependency()>/$stack2
<br.com.caelum.vraptor.http.route.DefaultTypeFinderTest: void shouldGetTypesCorrectly()>/$stack10
<br.com.caelum.vraptor.http.route.DefaultTypeFinderTest: void shouldGetTypesCorrectlyOnInheritance()>/$stack10
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack6
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack8
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack17
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack12
<br.com.caelum.vraptor.http.route.FixedMethodStrategyTest: void canTranslate()>/$stack10
<br.com.caelum.vraptor.core.DefaultConverters: br.com.caelum.vraptor.Converter to(java.lang.Class)>/$stack3
<br.com.caelum.vraptor.core.DefaultConverters: br.com.caelum.vraptor.TwoWayConverter twoWayConverterFor(java.lang.Class)>/$stack3
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack2
<com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack13
<br.com.caelum.vraptor.core.LazyInterceptorHandlerTest: void setUp()>/$stack1
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldIncludeTheApplicationContextOnTheRootApplicationContextParamIfNotSet()>/$stack2
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack4
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldNotIncludeTheApplicationContextOnTheRootApplicationContextParamIfAlreadySet()>/$stack11
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void shouldLoadInitParameterForBasePackages()>/$stack2
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void defaultExpectations()>/$stack1
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void defaultExpectations()>/$stack5
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void defaultExpectations()>/$stack12
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void defaultExpectations()>/$stack16
<br.com.caelum.vraptor.ioc.spring.SpringProviderTest: void defaultExpectations()>/$stack22
<com.google.common.collect.SingletonImmutableMap: java.lang.Object get(java.lang.Object)>/$stack2
<com.google.common.collect.SingletonImmutableMap: boolean containsKey(java.lang.Object)>/$stack2
<com.google.common.collect.SingletonImmutableMap: boolean containsValue(java.lang.Object)>/$stack2
<com.google.common.collect.SingletonImmutableMap: boolean equals(java.lang.Object)>/$stack9
<com.google.common.collect.SingletonImmutableMap: boolean equals(java.lang.Object)>/$stack12
<com.google.common.collect.SingletonImmutableMap: int hashCode()>/$stack1
<com.google.common.collect.SingletonImmutableMap: int hashCode()>/$stack3
<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>/$stack3
<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>/$stack7
<br.com.caelum.vraptor.http.DefaultFormatResolver: java.lang.String getAcceptFormat()>/$stack2
<br.com.caelum.vraptor.http.DefaultFormatResolver: java.lang.String getAcceptFormat()>/$stack4
<br.com.caelum.vraptor.http.DefaultFormatResolver: java.lang.String getAcceptFormat()>/$stack6
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: br.com.caelum.vraptor.resource.ResourceMethod resourceMethod(br.com.caelum.vraptor.http.MutableRequest,java.lang.String)>/$stack3
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: boolean canHandle(java.lang.String)>/$stack2
<org.springframework.beans.PropertyValue: void <init>(org.springframework.beans.PropertyValue)>/$stack7
<br.com.caelum.vraptor.http.route.FixedMethodStrategy: java.lang.String urlFor(java.lang.Class,java.lang.reflect.Method,java.lang.Object[])>/$stack5
<org.springframework.beans.PropertyValue: java.lang.String getName()>/$stack1
<org.springframework.beans.PropertyValue: java.lang.Object getValue()>/$stack1
<org.springframework.beans.PropertyValue: org.springframework.beans.PropertyValue getOriginalPropertyValue()>/$stack2
<org.springframework.beans.PropertyValue: org.springframework.beans.PropertyValue getOriginalPropertyValue()>/$stack4
<org.springframework.beans.PropertyValue: java.lang.Object getConvertedValue()>/$stack1
<org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>/$stack5
<org.springframework.beans.PropertyValue: int hashCode()>/$stack1
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapter: java.lang.Object convert(java.lang.Object,java.lang.Class)>/$stack4
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldBeAbleToConvertWithPTBR()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldBeAbleToConvertWithENUS()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack4
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack9
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack25
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack13
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack17
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldUseTheDefaultLocale()>/$stack21
<br.com.caelum.vraptor.converter.l10n.LocaleBasedFloatConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldRedirectIncludingContext()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldForwardToGivenURI()>/$stack1
<ognl.ObjectIndexedPropertyDescriptor: java.lang.reflect.Method getIndexedReadMethod()>/$stack1
<ognl.ObjectIndexedPropertyDescriptor: java.lang.reflect.Method getIndexedWriteMethod()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwarding()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwarding()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileForwardingView()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileForwardingView()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileForwardingView()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldAllowCustomPathResolverWhileIncluding()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfServletExceptionOccursWhileIncluding()>/$stack1
<br.com.caelum.vraptor.http.route.DefaultParametersControl: java.lang.String fillUri(java.lang.String[],java.lang.Object[])>/$stack35
<br.com.caelum.vraptor.http.route.DefaultParametersControl: java.lang.String fillUri(java.lang.String[],java.lang.Object[])>/$stack42
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shouldThrowResultExceptionIfIOExceptionOccursWhileIncluding()>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResultTest: void shoudNotExecuteLogicWhenUsingResultOf()>/$stack2
<org.springframework.beans.PropertyEditorRegistrySupport: org.springframework.core.convert.ConversionService getConversionService()>/$stack1
<junit.framework.ComparisonFailure: java.lang.String getActual()>/$stack1
<com.google.common.collect.LinkedListMultimap$ValueForKeyIterator: java.lang.Object next()>/$stack8
<com.google.common.collect.LinkedListMultimap$ValueForKeyIterator: java.lang.Object previous()>/$stack8
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldComplainWhenUnableToInstantiateAnInterceptor()>/$stack2
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack4
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldInvokeInterceptorsMethodIfAbleToInstantiateIt()>/$stack10
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack4
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandlerTest: void shouldNotInvokeInterceptorsMethodIfInterceptorDoesntAcceptsResource()>/$stack10
<com.google.inject.util.Providers$1: java.lang.Object get()>/$stack1
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void outjectRequestMap()>/$stack4
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void outjectRequestMap()>/$stack3
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void outjectRequestMap()>/$stack9
<br.com.caelum.vraptor.validator.ReplicatorOutjector: void outjectRequestMap()>/$stack10
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: java.lang.Object is(java.lang.Class)>/$stack4
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: void is(java.lang.Class,java.lang.reflect.Method)>/$stack6
<br.com.caelum.vraptor.http.route.DefaultRouteBuilder: br.com.caelum.vraptor.core.Converters access$100(br.com.caelum.vraptor.http.route.DefaultRouteBuilder)>/$stack1
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void doesNothingIfResultWasAlreadyUsed()>/$stack1
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack1
<br.com.caelum.vraptor.extra.ForwardToDefaultViewInterceptorTest: void shouldForwardToViewWhenResultWasNotUsed()>/$stack7
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: java.lang.ClassLoader getClassLoader()>/$stack2
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: java.lang.ClassLoader getClassLoader()>/$stack6
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: java.net.URL findWebInfClassesLocation()>/$stack2
<br.com.caelum.vraptor.scan.WebBasedClasspathResolver: java.util.List findBasePackages()>/$stack4
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Object)>/$stack10
<org.picocontainer.DefaultPicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding,java.lang.Class)>/$stack28
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack15
<org.picocontainer.DefaultPicoContainer: java.lang.Object getInstance(org.picocontainer.ComponentAdapter,java.lang.Class)>/$stack21
<org.picocontainer.DefaultPicoContainer: org.picocontainer.PicoContainer getParent()>/$stack1
<javax.xml.namespace.QName: java.lang.String getLocalPart()>/$stack1
<javax.xml.namespace.QName: java.lang.String toString()>/$stack11
<org.picocontainer.DefaultPicoContainer: java.lang.String toString()>/$stack10
<org.picocontainer.DefaultPicoContainer: java.lang.String toString()>/$stack12
<org.picocontainer.DefaultPicoContainer: org.picocontainer.Converters getConverters()>/$stack3
<org.picocontainer.DefaultPicoContainer: org.picocontainer.Converters getConverters()>/$stack6
<javax.xml.namespace.QName: int hashCode()>/$stack3
<javax.xml.namespace.QName: boolean equals(java.lang.Object)>/$stack5
<org.codehaus.jettison.Node: java.lang.String getNamespaceURI(java.lang.String)>/$stack5
<org.codehaus.jettison.Node: java.lang.String getNamespaceURI(java.lang.String)>/$stack7
<org.codehaus.jettison.Node: java.lang.String getNamespacePrefix(java.lang.String)>/$stack9
<org.codehaus.jettison.Node: java.lang.String getNamespacePrefix(java.lang.String)>/$stack11
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter close(int,int,java.lang.String)>/$stack6
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>/$stack2
<org.codehaus.jettison.Node: org.codehaus.jettison.json.JSONObject getObject()>/$stack1
<com.google.gson.stream.JsonWriter: void writeDeferredName()>/$stack1
<org.codehaus.jettison.Node: org.codehaus.jettison.json.JSONArray getArray()>/$stack1
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()>/$stack1
<com.google.gson.internal.LazilyParsedNumber: java.lang.String toString()>/$stack1
<com.thoughtworks.xstream.io.path.Path: java.lang.String toString()>/$stack3
<com.thoughtworks.xstream.io.path.Path: java.lang.String toString()>/$stack4
<br.com.caelum.vraptor.http.ognl.ListAccessor: void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)>/$stack19
<net.vidageek.mirror.list.EqualMethodRemover: boolean sameArgs(java.lang.reflect.Method)>/$stack8
<net.vidageek.mirror.list.EqualMethodRemover: boolean sameArgs(java.lang.reflect.Method)>/$stack12
<br.com.caelum.vraptor.view.DefaultRefererResult: void forward()>/$stack6
<br.com.caelum.vraptor.view.DefaultRefererResult: void forward()>/$stack8
<br.com.caelum.vraptor.view.DefaultRefererResult: void forward()>/$stack16
<br.com.caelum.vraptor.view.DefaultRefererResult: void forward()>/$stack21
<br.com.caelum.vraptor.view.DefaultRefererResult: void executeMethod(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack9
<br.com.caelum.vraptor.view.DefaultRefererResult: void executeMethod(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack10
<br.com.caelum.vraptor.view.DefaultRefererResult: void redirect()>/$stack6
<br.com.caelum.vraptor.view.DefaultRefererResult: void redirect()>/$stack8
<br.com.caelum.vraptor.view.DefaultRefererResult: void redirect()>/$stack16
<br.com.caelum.vraptor.view.DefaultRefererResult: void redirect()>/$stack21
<br.com.caelum.vraptor.view.DefaultRefererResult: java.lang.String getReferer()>/$stack3
<br.com.caelum.vraptor.view.DefaultRefererResult: java.lang.String getReferer()>/$stack5
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACat()>/$stack8
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatWhenMethodHasMoreThanOneArgument()>/$stack8
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack8
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatNamedDifferently()>/$stack8
<br.com.caelum.vraptor.deserialization.JsonDeserializerTest: void shouldBeAbleToDeserializeACatWhenAliasConfiguredByAnnotations()>/$stack8
<br.com.caelum.vraptor.ioc.InterceptorStereotypeHandler: void registerInterceptor(java.lang.Class)>/$stack5
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack22
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack10
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack14
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaultLocale()>/$stack18
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack6
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack22
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack10
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack14
<br.com.caelum.vraptor.converter.jodatime.LocaleBasedJodaTimeConverterTest: void shouldUseTheDefaulJvmtLocale()>/$stack18
<org.picocontainer.injectors.SingleMemberInjector$ParameterCannotBeNullException: java.lang.String getParameterName()>/$stack1
<br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest: br.com.caelum.vraptor.ComponentRegistry access$000(br.com.caelum.vraptor.ioc.AbstractComponentRegistryTest)>/$stack1
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void config()>/$stack3
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void config()>/$stack8
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void config()>/$stack15
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void shouldUseResourceTypeAndMethodNameToResolveJsp()>/$stack2
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void shouldUseTheFormatIfSupplied()>/$stack2
<br.com.caelum.vraptor.view.DefaultPathResolverTest: void shouldIgnoreHtmlFormat()>/$stack2
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanWEBINFClasses()>/$stack3
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanWEBINFClasses()>/$stack11
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanWEBINFClasses()>/$stack15
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanBasePackages()>/$stack9
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanBasePackages()>/$stack15
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldScanBasePackages()>/$stack19
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldReturnEmptyCollectionIfWebinfClassesNotFound()>/$stack4
<br.com.caelum.vraptor.scan.ScannotationComponentScannerTest: void shouldThrowScannerExceptionIfHasExceptionWhenProcessWebinfClasses()>/$stack4
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest: void setup()>/$stack4
<org.springframework.beans.TypeMismatchException: java.lang.Object getValue()>/$stack1
<org.springframework.beans.TypeMismatchException: java.lang.Class getRequiredType()>/$stack1
<br.com.caelum.vraptor.view.LinkToHandler: void start()>/$stack2
<br.com.caelum.vraptor.view.LinkToHandler: javax.servlet.ServletContext access$000(br.com.caelum.vraptor.view.LinkToHandler)>/$stack1
<br.com.caelum.vraptor.view.LinkToHandler: br.com.caelum.vraptor.http.route.Router access$100(br.com.caelum.vraptor.view.LinkToHandler)>/$stack1
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResources()>/$stack6
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResources()>/$stack14
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResources()>/$stack18
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithQueryString()>/$stack6
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithQueryString()>/$stack15
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithQueryString()>/$stack19
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithJSessionId()>/$stack6
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithJSessionId()>/$stack15
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsTrueForRealStaticResourcesWithJSessionId()>/$stack19
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsFalseForNonStaticResources()>/$stack6
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsFalseForNonStaticResources()>/$stack14
<br.com.caelum.vraptor.core.DefaultStaticContentHandlerTest: void returnsFalseForNonStaticResources()>/$stack18
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: void setup()>/$stack4
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: br.com.caelum.vraptor.core.Converters access$200(br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest)>/$stack1
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest: br.com.caelum.vraptor.http.ParameterNameProvider access$300(br.com.caelum.vraptor.http.route.PathAnnotationRoutesParserTest)>/$stack1
<com.thoughtworks.xstream.core.util.FastField: java.lang.String getName()>/$stack1
<com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>/$stack6
<com.thoughtworks.xstream.core.util.FastField: int hashCode()>/$stack1
<com.google.common.collect.Collections2$FilteredCollection$2: boolean apply(java.lang.Object)>/$stack3
<br.com.caelum.iogi.reflection.NewObject$JavaSetter: java.lang.String propertyName()>/$stack3
<br.com.caelum.vraptor.interceptor.download.ByteArrayDownloadTest: void setUp()>/$stack4
<br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder: br.com.caelum.vraptor.http.route.Router access$200(br.com.caelum.vraptor.restfulie.relation.DefaultRelationBuilder)>/$stack1
<br.com.caelum.vraptor.http.DefaultResourceTranslator: br.com.caelum.vraptor.resource.ResourceMethod translate(br.com.caelum.vraptor.core.RequestInfo)>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslator: br.com.caelum.vraptor.resource.ResourceMethod translate(br.com.caelum.vraptor.core.RequestInfo)>/$stack15
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: boolean equals(java.lang.Object)>/$stack5
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: boolean equals(java.lang.Object)>/$stack8
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: int hashCode()>/$stack1
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$CacheKey: int hashCode()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldUseConverterIfItExists()>/$stack2
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldUseConverterIfItExists()>/$stack8
<br.com.caelum.vraptor.http.route.DefaultParametersControlTest: void shouldUseConverterIfItExists()>/$stack13
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack20
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack21
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack15
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack28
<org.springframework.beans.TypeConverterDelegate: java.lang.Object attemptToConvertStringToEnum(java.lang.Class,java.lang.String,java.lang.Object)>/$stack22
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.Class findClass(java.lang.String)>/$stack2
<org.mockito.internal.creation.jmock.SearchingClassLoader: java.lang.Class findClass(java.lang.String)>/$stack4
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>/$stack1
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>/$stack8
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: java.lang.Object instantiateOrAddError(br.com.caelum.iogi.parameters.Parameters,java.util.List,br.com.caelum.iogi.reflection.Target)>/$stack4
<br.com.caelum.vraptor.http.iogi.IogiParametersProvider: java.util.List createTargets(br.com.caelum.vraptor.resource.ResourceMethod)>/$stack11
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveCollectionElementType()>/$stack6
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveCollectionElementType()>/$stack4
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapKeyType()>/$stack6
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapKeyType()>/$stack4
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapValueType()>/$stack6
<org.springframework.core.convert.TypeDescriptor: java.lang.Class resolveMapValueType()>/$stack4
<com.thoughtworks.xstream.core.util.PresortedMap: java.util.Comparator comparator()>/$stack1
<javassist.bytecode.CodeIterator$Pointers: void shiftPc(int,int,boolean)>/$stack26
<javassist.bytecode.CodeIterator$Pointers: void shiftPc(int,int,boolean)>/$stack14
<javassist.bytecode.CodeIterator$Pointers: void shiftPc(int,int,boolean)>/$stack15
<javassist.bytecode.CodeIterator$Pointers: void shiftPc(int,int,boolean)>/$stack24
<javassist.bytecode.CodeIterator$Pointers: void shiftPc(int,int,boolean)>/$stack16
<javassist.bytecode.CodeIterator$Pointers: void shiftPc(int,int,boolean)>/$stack22
<javassist.bytecode.CodeIterator$Pointers: void shiftPc(int,int,boolean)>/$stack17
<javassist.bytecode.CodeIterator$Pointers: void shiftPc(int,int,boolean)>/$stack20
<javassist.bytecode.CodeIterator$Pointers: void shiftPc(int,int,boolean)>/$stack18
<javassist.bytecode.CodeIterator$Pointers: void shiftPc(int,int,boolean)>/$stack19
<com.google.common.collect.LinkedListMultimap$4: java.lang.Object getKey()>/$stack2
<com.google.common.collect.LinkedListMultimap$4: java.lang.Object getValue()>/$stack2
<com.google.common.collect.LinkedListMultimap$4: java.lang.Object setValue(java.lang.Object)>/oldValue#_906
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.BeanWrapper createBeanInstance(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>/$stack25
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1: java.lang.Class run()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack3
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack7
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack24
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack12
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack16
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldUseTheDefaultLocale()>/$stack20
<br.com.caelum.vraptor.converter.LocaleBasedDateConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.deserialization.XStreamXMLDeserializer: void aliasParams(java.lang.reflect.Method,java.lang.Class[],com.thoughtworks.xstream.XStream)>/$stack6
<com.thoughtworks.xstream.core.util.PresortedSet: java.util.Comparator comparator()>/$stack1
<com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>/$stack1
<com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>/$stack1
<br.com.caelum.iogi.reflection.NewObject$Setter: java.lang.reflect.Type type()>/$stack1
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack7
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack9
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack31
<org.codehaus.jettison.mapped.MappedXMLStreamReader: int next()>/$stack6
<com.google.common.collect.SingletonImmutableList: java.lang.Object get(int)>/$stack3
<com.google.common.collect.SingletonImmutableList: int indexOf(java.lang.Object)>/$stack2
<com.google.common.collect.SingletonImmutableList: int lastIndexOf(java.lang.Object)>/$stack2
<com.google.common.collect.SingletonImmutableList: boolean contains(java.lang.Object)>/$stack2
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack4
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack6
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack9
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack30
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack31
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack39
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack41
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack44
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack48
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack51
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack58
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack59
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack61
<org.codehaus.jettison.mapped.MappedXMLStreamReader: void processElement()>/$stack66
<com.google.common.collect.SingletonImmutableList: boolean equals(java.lang.Object)>/$stack5
<com.google.common.collect.SingletonImmutableList: int hashCode()>/$stack1
<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>/$stack2
<com.google.common.collect.SingletonImmutableList: java.lang.Object[] toArray()>/$stack2
<com.google.common.collect.SingletonImmutableList: java.lang.Object[] toArray(java.lang.Object[])>/$stack5
<org.codehaus.jettison.mapped.MappedXMLStreamReader: java.lang.String getElementText()>/$stack1
<org.codehaus.jettison.mapped.MappedXMLStreamReader: java.lang.String getText()>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResult: void includeParametersInFlash(java.lang.Class,java.lang.reflect.Method,java.lang.Object[])>/$stack5
<br.com.caelum.vraptor.view.DefaultLogicResult: br.com.caelum.vraptor.ioc.Container access$200(br.com.caelum.vraptor.view.DefaultLogicResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResult: br.com.caelum.vraptor.interceptor.TypeNameExtractor access$300(br.com.caelum.vraptor.view.DefaultLogicResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResult: br.com.caelum.vraptor.http.MutableRequest access$400(br.com.caelum.vraptor.view.DefaultLogicResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResult: br.com.caelum.vraptor.http.MutableResponse access$500(br.com.caelum.vraptor.view.DefaultLogicResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResult: br.com.caelum.vraptor.view.PathResolver access$600(br.com.caelum.vraptor.view.DefaultLogicResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResult: br.com.caelum.vraptor.http.route.Router access$800(br.com.caelum.vraptor.view.DefaultLogicResult)>/$stack1
<br.com.caelum.iogi.conversion.LocaleBasedCalendarConverter: java.util.Locale providedOrDefault()>/$stack2
<com.google.gson.internal.bind.TypeAdapters$22$1: java.sql.Timestamp read(com.google.gson.stream.JsonReader)>/$stack3
<com.google.gson.internal.bind.TypeAdapters$22$1: void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp)>/$stack3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfTheResourceMethodDoesNotSupportTheGivenMediaTypes()>/$stack12
<org.mockito.cglib.core.ReflectUtils$3: org.mockito.cglib.core.ClassInfo getClassInfo()>/$stack3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack17
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetHttpStatusCode415IfThereIsNoDeserializerButIsAccepted()>/$stack6
<org.springframework.beans.BeanWrapperImpl$5: java.lang.Object run()>/$stack1
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationAndContinueStackAfterDeserialization()>/$stack15
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetMethodParametersWithDeserializationEvenIfTheContentTypeHasCharsetDeclaration()>/$stack15
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willDeserializeForAnyContentTypeIfPossible()>/$stack20
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldNotDeserializeIfHasNoContentType()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void willSetOnlyNonNullParameters()>/$stack15
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack2
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack9
<br.com.caelum.vraptor.interceptor.DeserializingInterceptorTest: void shouldThrowInterceptionExceptionIfAnIOExceptionOccurs()>/$stack15
<javax.crypto.Cipher: void initCryptoPermission()>/$stack5
<br.com.caelum.vraptor.deserialization.DeserializesHandler: void handle(java.lang.Class)>/$stack6
<javax.crypto.Cipher: void checkCryptoPerm(javax.crypto.CipherSpi,java.security.Key)>/$stack6
<javax.crypto.Cipher: void checkCryptoPerm(javax.crypto.CipherSpi,java.security.Key,java.security.spec.AlgorithmParameterSpec)>/$stack5
<javax.crypto.Cipher: void checkCryptoPerm(javax.crypto.CipherSpi,java.security.Key,java.security.AlgorithmParameters)>/$stack7
<javax.crypto.Cipher: boolean passCryptoPermCheck(javax.crypto.CipherSpi,java.security.Key,java.security.spec.AlgorithmParameterSpec)>/$stack10
<javax.crypto.Cipher: boolean passCryptoPermCheck(javax.crypto.CipherSpi,java.security.Key,java.security.spec.AlgorithmParameterSpec)>/$stack16
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void withRootException()>/$stack3
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptorTest: void whenNotFoundException()>/$stack4
<com.google.common.collect.LinkedListMultimap$MultisetView$1: java.lang.Object next()>/$stack4
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatIsSpecifiedReturnIt()>/$stack2
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatIsSpecifiedReturnItEvenIfAcceptsHtml()>/$stack2
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatIsSpecifiedReturnItEvenIfAcceptsHtml()>/$stack6
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack2
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack6
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedShouldReturnRequestAcceptFormat()>/$stack10
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack2
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void if_formatNotSpecifiedAndNoAcceptsHaveFormat()>/$stack6
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void ifAcceptHeaderIsNullShouldReturnDefault()>/$stack2
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void ifAcceptHeaderIsNullShouldReturnDefault()>/$stack6
<br.com.caelum.vraptor.http.DefaultFormatResolverTest: void ifAcceptHeaderIsNullShouldReturnDefault()>/$stack10
<br.com.caelum.vraptor.view.DefaultPageResult: void defaultView()>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResult: void defaultView()>/$stack8
<br.com.caelum.vraptor.view.DefaultPageResult: void include()>/$stack3
<br.com.caelum.vraptor.view.DefaultPageResult: void include()>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResult: void redirectTo(java.lang.String)>/$stack8
<br.com.caelum.vraptor.view.DefaultPageResult: void redirectTo(java.lang.String)>/$stack5
<br.com.caelum.vraptor.view.DefaultPageResult: void redirectTo(java.lang.String)>/$stack7
<br.com.caelum.vraptor.view.DefaultPageResult: void forwardTo(java.lang.String)>/$stack4
<br.com.caelum.vraptor.view.DefaultPageResult: br.com.caelum.vraptor.http.MutableRequest access$000(br.com.caelum.vraptor.view.DefaultPageResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResult: br.com.caelum.vraptor.http.MutableResponse access$100(br.com.caelum.vraptor.view.DefaultPageResult)>/$stack1
<br.com.caelum.vraptor.view.DefaultPageResult: br.com.caelum.vraptor.view.PathResolver access$200(br.com.caelum.vraptor.view.DefaultPageResult)>/$stack1
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack4
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack19
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack9
<br.com.caelum.vraptor.http.ognl.OgnlGenericTypesSupportTest: void setup()>/$stack14
<org.springframework.context.event.GenericApplicationListenerAdapter: void onApplicationEvent(org.springframework.context.ApplicationEvent)>/$stack2
<org.springframework.context.event.GenericApplicationListenerAdapter: boolean supportsEventType(java.lang.Class)>/$stack4
<org.springframework.context.event.GenericApplicationListenerAdapter: boolean supportsEventType(java.lang.Class)>/$stack9
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle404()>/$stack2
<org.springframework.context.event.GenericApplicationListenerAdapter: int getOrder()>/$stack1
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldHandle405()>/$stack5
<com.google.common.collect.MapMakerInternalMap: void <init>(com.google.common.collect.MapMaker)>/$stack26
<br.com.caelum.vraptor.interceptor.ResourceLookupInterceptorTest: void shouldUseResourceMethodFoundWithNextInterceptor()>/$stack6
<com.google.common.collect.MapMakerInternalMap: boolean usesKeyReferences()>/$stack2
<com.google.common.collect.MapMakerInternalMap: boolean usesValueReferences()>/$stack2
<com.google.common.collect.MapMakerInternalMap: com.google.common.collect.MapMakerInternalMap$ValueReference newValueReference(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object)>/$stack5
<com.google.common.collect.MapMakerInternalMap: int hash(java.lang.Object)>/$stack3
<com.google.common.collect.MapMakerInternalMap: boolean isExpired(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)>/$stack2
<com.google.common.collect.MapMakerInternalMap: void processPendingNotifications()>/$stack6
<com.google.common.collect.MapMakerInternalMap: boolean containsValue(java.lang.Object)>/$stack32
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: void setValue(java.lang.Object)>/$stack4
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: void setValue(java.lang.Object)>/$stack11
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: java.lang.Object getValue()>/$stack3
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: java.lang.Object getValue()>/$stack9
<net.vidageek.mirror.provider.java.PureJavaFieldReflectionProvider: void setAccessible()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldConvertGETStringToGetMethodForRequestParameter()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldConvertGETStringToGetMethodForRequestParameter()>/$stack5
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowExceptionForNotKnowHttpMethodsForRequestParameter()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowExceptionForNotKnowHttpMethodsForRequestParameter()>/$stack5
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowIllegalArgumentExceptionIf_methodIsUsedInGETRequests()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowIllegalArgumentExceptionIf_methodIsUsedInGETRequests()>/$stack5
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldConvertGETStringToGetMethod()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldConvertGETStringToGetMethod()>/$stack5
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowExceptionForNotKnowHttpMethods()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldThrowExceptionForNotKnowHttpMethods()>/$stack5
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldUseParameterNameBeforeTryingHttpRealMethod()>/$stack1
<br.com.caelum.vraptor.resource.HttpMethodTest: void shouldUseParameterNameBeforeTryingHttpRealMethod()>/$stack5
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenThereIsNoRefererShouldThrowExceptionOnForward()>/$stack2
<org.springframework.core.MethodParameter: void <init>(org.springframework.core.MethodParameter)>/$stack2
<org.springframework.core.MethodParameter: void <init>(org.springframework.core.MethodParameter)>/$stack3
<org.springframework.core.MethodParameter: void <init>(org.springframework.core.MethodParameter)>/$stack5
<com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object getKey()>/$stack1
<org.springframework.core.MethodParameter: java.lang.reflect.Method getMethod()>/$stack1
<com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object getValue()>/$stack1
<org.springframework.core.MethodParameter: java.lang.reflect.Constructor getConstructor()>/$stack1
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenThereIsNoRefererShouldThrowExceptionOnRedirect()>/$stack2
<com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object setValue(java.lang.Object)>/oldValue#_475
<org.springframework.core.MethodParameter: java.lang.Class getDeclaringClass()>/$stack1
<org.springframework.core.MethodParameter: java.lang.Class getDeclaringClass()>/$stack4
<org.springframework.core.MethodParameter: java.lang.Class getDeclaringClass()>/$stack2
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/$stack4
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/$stack5
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/$stack8
<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>/$stack9
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack3
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack7
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldForwardToPage()>/$stack13
<org.springframework.core.MethodParameter: java.lang.Class getParameterType()>/$stack4
<org.springframework.core.MethodParameter: java.lang.Class getParameterType()>/$stack10
<org.springframework.core.MethodParameter: java.lang.Class getParameterType()>/$stack14
<org.springframework.core.MethodParameter: java.lang.Class getParameterType()>/$stack15
<org.springframework.core.MethodParameter: java.lang.Class getParameterType()>/$stack5
<org.springframework.core.MethodParameter: java.lang.Class getParameterType()>/$stack1
<org.springframework.core.MethodParameter: java.lang.Class getParameterType()>/$stack2
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>/$stack1
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>/$stack2
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>/$stack4
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>/$stack5
<org.springframework.core.MethodParameter: java.lang.reflect.Type getGenericParameterType()>/$stack4
<org.springframework.core.MethodParameter: java.lang.reflect.Type getGenericParameterType()>/$stack10
<org.springframework.core.MethodParameter: java.lang.reflect.Type getGenericParameterType()>/$stack14
<org.springframework.core.MethodParameter: java.lang.reflect.Type getGenericParameterType()>/$stack15
<org.springframework.core.MethodParameter: java.lang.reflect.Type getGenericParameterType()>/$stack5
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack3
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack7
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererDontMatchAControllerShouldRedirectToPage()>/$stack13
<org.springframework.core.MethodParameter: java.lang.annotation.Annotation[] getMethodAnnotations()>/$stack1
<org.springframework.core.MethodParameter: java.lang.annotation.Annotation[] getMethodAnnotations()>/$stack4
<org.springframework.core.MethodParameter: java.lang.annotation.Annotation[] getMethodAnnotations()>/$stack2
<org.springframework.core.MethodParameter: java.lang.annotation.Annotation getMethodAnnotation(java.lang.Class)>/$stack2
<org.springframework.core.MethodParameter: java.lang.annotation.Annotation getMethodAnnotation(java.lang.Class)>/$stack5
<org.springframework.core.MethodParameter: java.lang.annotation.Annotation getMethodAnnotation(java.lang.Class)>/$stack3
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack11
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack15
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldRedirectToIt()>/$stack21
<org.springframework.core.MethodParameter: java.lang.annotation.Annotation[] getParameterAnnotations()>/$stack4
<org.springframework.core.MethodParameter: java.lang.annotation.Annotation[] getParameterAnnotations()>/$stack16
<org.springframework.core.MethodParameter: java.lang.annotation.Annotation[] getParameterAnnotations()>/$stack5
<org.springframework.core.MethodParameter: java.lang.String getParameterName()>/$stack4
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack11
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack15
<br.com.caelum.vraptor.view.DefaultRefererResultTest: void whenRefererMatchesAControllerShouldForwardToIt()>/$stack21
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldIncludeReturnValueOnForward()>/$stack2
<br.com.caelum.vraptor.view.DefaultLogicResultTest: br.com.caelum.vraptor.view.DefaultLogicResultTest$MyComponent givenDispatcherWillBeReturnedWhenRequested()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: br.com.caelum.vraptor.view.DefaultLogicResultTest$MyComponent givenDispatcherWillBeReturnedWhenRequested()>/$stack3
<br.com.caelum.vraptor.view.DefaultLogicResultTest: br.com.caelum.vraptor.view.DefaultLogicResultTest$MyComponent givenDispatcherWillBeReturnedWhenRequested()>/$stack7
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToMethodsDefaultViewWhenResponseIsNotCommited()>/$stack2
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotForwardToMethodsDefaultViewWhenResponseIsCommited()>/$stack2
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack8
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void clientRedirectingWillRedirectToTranslatedUrl()>/$stack2
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldNotWrapValidationExceptionWhenForwarding()>/$stack2
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack28
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack13
<br.com.caelum.vraptor.view.DefaultLogicResultTest: void shouldForwardToTheRightDefaultValue()>/$stack20
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack13
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack1
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void setUp()>/$stack6
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPage()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void shouldSend404IfNothingIsRendered()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsNoFormatGivenShouldForwardToDefaultPageWithAlias()>/$stack3
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializer()>/$stack6
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenThereIsAFormatGivenShouldUseCorrectSerializerWithAlias()>/$stack6
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenSerializationDontAcceptsFormatItShouldntBeUsed()>/$stack6
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack2
<br.com.caelum.vraptor.serialization.DefaultRepresentationResultTest: void whenTheResourceIsHypermediaAddRestHeaders()>/$stack6
<com.thoughtworks.xstream.converters.reflection.FieldKey: java.lang.String getFieldName()>/$stack1
<com.thoughtworks.xstream.converters.reflection.FieldKey: boolean equals(java.lang.Object)>/$stack8
<com.thoughtworks.xstream.converters.reflection.FieldKey: int hashCode()>/$stack2
<javax.servlet.ServletResponseWrapper: javax.servlet.ServletResponse getResponse()>/$stack1
<javax.servlet.ServletResponseWrapper: void setCharacterEncoding(java.lang.String)>/$stack2
<javax.servlet.ServletResponseWrapper: java.lang.String getCharacterEncoding()>/$stack1
<javax.servlet.ServletResponseWrapper: javax.servlet.ServletOutputStream getOutputStream()>/$stack1
<javax.servlet.ServletResponseWrapper: java.io.PrintWriter getWriter()>/$stack1
<javax.servlet.ServletResponseWrapper: void setContentLength(int)>/$stack2
<javax.servlet.ServletResponseWrapper: void setContentType(java.lang.String)>/$stack2
<javax.servlet.ServletResponseWrapper: java.lang.String getContentType()>/$stack1
<javax.servlet.ServletResponseWrapper: void setBufferSize(int)>/$stack2
<javax.servlet.ServletResponseWrapper: int getBufferSize()>/$stack1
<javax.servlet.ServletResponseWrapper: void flushBuffer()>/$stack1
<javax.servlet.ServletResponseWrapper: boolean isCommitted()>/$stack1
<javax.servlet.ServletResponseWrapper: void reset()>/$stack1
<javax.servlet.ServletResponseWrapper: void resetBuffer()>/$stack1
<javax.servlet.ServletResponseWrapper: void setLocale(java.util.Locale)>/$stack2
<javax.servlet.ServletResponseWrapper: java.util.Locale getLocale()>/$stack1
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(javax.servlet.ServletResponse)>/$stack2
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(javax.servlet.ServletResponse)>/$stack3
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(java.lang.Class)>/$stack4
<javax.servlet.ServletResponseWrapper: boolean isWrapperFor(java.lang.Class)>/$stack7
<com.google.common.collect.AbstractMapBasedMultiset: java.util.Map backingMap()>/$stack1
<com.google.common.collect.AbstractMapBasedMultiset: java.util.Iterator entryIterator()>/$stack2
<com.google.common.collect.AbstractMapBasedMultiset: void clear()>/$stack3
<com.google.common.collect.AbstractMapBasedMultiset: void clear()>/$stack7
<com.google.common.collect.AbstractMapBasedMultiset: int distinctElements()>/$stack1
<com.google.common.collect.AbstractMapBasedMultiset: int count(java.lang.Object)>/$stack3
<com.google.common.collect.AbstractMapBasedMultiset: int add(java.lang.Object,int)>/$stack12
<com.google.common.collect.AbstractMapBasedMultiset: int add(java.lang.Object,int)>/$stack36
<com.google.common.collect.AbstractMapBasedMultiset: int remove(java.lang.Object,int)>/$stack11
<com.google.common.collect.AbstractMapBasedMultiset: int remove(java.lang.Object,int)>/$stack14
<com.google.common.collect.AbstractMapBasedMultiset: int setCount(java.lang.Object,int)>/$stack5
<com.google.common.collect.AbstractMapBasedMultiset: int setCount(java.lang.Object,int)>/$stack13
<com.google.common.collect.AbstractMapBasedMultiset: int setCount(java.lang.Object,int)>/$stack19
<com.google.common.collect.AbstractMapBasedMultiset: java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultiset)>/$stack1
<br.com.caelum.vraptor.ioc.pico.PicoProvider: void registerCacheComponents()>/$stack11
<org.picocontainer.containers.ImmutablePicoContainer: java.lang.Object getComponent(java.lang.Object)>/$stack2
<org.picocontainer.containers.ImmutablePicoContainer: java.lang.Object getComponent(java.lang.Object,java.lang.reflect.Type)>/$stack3
<org.picocontainer.containers.ImmutablePicoContainer: java.lang.Object getComponent(java.lang.Class)>/$stack2
<org.picocontainer.containers.ImmutablePicoContainer: java.lang.Object getComponent(java.lang.Class,java.lang.Class)>/$stack3
<org.picocontainer.containers.ImmutablePicoContainer: java.util.List getComponents()>/$stack1
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.PicoContainer getParent()>/$stack1
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Object)>/$stack2
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,org.picocontainer.NameBinding)>/$stack3
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.ComponentAdapter getComponentAdapter(java.lang.Class,java.lang.Class)>/$stack3
<org.picocontainer.containers.ImmutablePicoContainer: java.util.Collection getComponentAdapters()>/$stack1
<org.picocontainer.containers.ImmutablePicoContainer: java.util.List getComponentAdapters(java.lang.Class)>/$stack2
<org.picocontainer.containers.ImmutablePicoContainer: java.util.List getComponentAdapters(java.lang.Class,java.lang.Class)>/$stack3
<org.picocontainer.containers.ImmutablePicoContainer: java.util.List getComponents(java.lang.Class)>/$stack2
<org.picocontainer.containers.ImmutablePicoContainer: void accept(org.picocontainer.PicoVisitor)>/$stack2
<org.picocontainer.containers.ImmutablePicoContainer: boolean equals(java.lang.Object)>/$stack5
<org.picocontainer.containers.ImmutablePicoContainer: boolean equals(java.lang.Object)>/$stack7
<org.picocontainer.containers.ImmutablePicoContainer: boolean equals(java.lang.Object)>/$stack6
<org.picocontainer.containers.ImmutablePicoContainer: int hashCode()>/$stack1
<org.picocontainer.containers.ImmutablePicoContainer: java.lang.String toString()>/$stack3
<org.picocontainer.containers.ImmutablePicoContainer: org.picocontainer.Converters getConverters()>/$stack1
<org.springframework.beans.BeanWrapperImpl$6: java.lang.Object run()>/$stack2
<org.springframework.beans.BeanWrapperImpl$6: java.lang.Object run()>/$stack5
<javassist.CtBehavior: void copy(javassist.CtBehavior,boolean,javassist.ClassMap)>/$stack23
<javassist.CtBehavior: void extendToString(java.lang.StringBuffer)>/$stack6
<javassist.CtBehavior: javassist.bytecode.MethodInfo getMethodInfo()>/$stack2
<javassist.CtBehavior: javassist.bytecode.MethodInfo getMethodInfo2()>/$stack1
<javassist.CtBehavior: int getModifiers()>/$stack1
<javassist.CtBehavior: void setModifiers(int)>/$stack3
<javassist.CtBehavior: javassist.CtClass[] getParameterTypes()>/$stack1
<javassist.CtBehavior: javassist.CtClass getReturnType0()>/$stack1
<javassist.CtBehavior: java.lang.String getSignature()>/$stack1
<javassist.CtBehavior: javassist.CtClass[] getExceptionTypes()>/$stack3
<javassist.CtBehavior: void setExceptionTypes(javassist.CtClass[])>/$stack5
<javassist.CtBehavior: void setExceptionTypes(javassist.CtClass[])>/$stack9
<javassist.CtBehavior: void setExceptionTypes(javassist.CtClass[])>/$stack12
<javassist.CtBehavior: void setExceptionTypes(javassist.CtClass[])>/$stack14
<javassist.CtBehavior: void setBody(java.lang.String,java.lang.String,java.lang.String)>/$stack9
<javassist.CtBehavior: void setBody(java.lang.String,java.lang.String,java.lang.String)>/$stack11
<javassist.CtBehavior: void setBody(java.lang.String,java.lang.String,java.lang.String)>/$stack12
<javassist.CtBehavior: void setBody(java.lang.String,java.lang.String,java.lang.String)>/$stack15
<javassist.CtBehavior: byte[] getAttribute(java.lang.String)>/$stack3
<javassist.CtBehavior: void setAttribute(java.lang.String,byte[])>/$stack5
<javassist.CtBehavior: void setAttribute(java.lang.String,byte[])>/$stack6
<javassist.CtBehavior: void addLocalVariable(java.lang.String,javassist.CtClass)>/$stack9
<javassist.CtBehavior: void addLocalVariable(java.lang.String,javassist.CtClass)>/$stack11
<javassist.CtBehavior: void insertParameter(javassist.CtClass)>/$stack6
<javassist.CtBehavior: void insertParameter(javassist.CtClass)>/$stack11
<javassist.CtBehavior: void addParameter(javassist.CtClass)>/$stack7
<javassist.CtBehavior: void addParameter(javassist.CtClass)>/$stack14
<javassist.CtBehavior: void addParameter2(int,javassist.CtClass,java.lang.String)>/$stack11
<javassist.CtBehavior: void addParameter2(int,javassist.CtClass,java.lang.String)>/$stack14
<javassist.CtBehavior: void instrument(javassist.CodeConverter)>/$stack4
<javassist.CtBehavior: void insertBefore(java.lang.String,boolean)>/$stack12
<javassist.CtBehavior: void insertBefore(java.lang.String,boolean)>/$stack31
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: boolean equals(java.lang.Object)>/$stack5
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: boolean equals(java.lang.Object)>/$stack8
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: int hashCode()>/$stack1
<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey: int hashCode()>/$stack3
<org.springframework.beans.factory.support.SimpleInstantiationStrategy$1: java.lang.reflect.Constructor run()>/$stack1
<javassist.CtBehavior: void insertAfter(java.lang.String,boolean)>/$stack19
<javassist.CtBehavior: void insertAfter(java.lang.String,boolean)>/$stack21
<javassist.CtBehavior: void insertAfter(java.lang.String,boolean)>/$stack48
<javassist.CtBehavior: void addCatch(java.lang.String,javassist.CtClass,java.lang.String)>/$stack15
<javassist.CtBehavior: void addCatch(java.lang.String,javassist.CtClass,java.lang.String)>/$stack17
<javassist.CtBehavior: void addCatch(java.lang.String,javassist.CtClass,java.lang.String)>/$stack40
<javassist.CtBehavior: int insertAt(int,boolean,java.lang.String)>/$stack14
<javassist.CtBehavior: int insertAt(int,boolean,java.lang.String)>/$stack33
<br.com.caelum.vraptor.converter.LocaleBasedDateConverter: java.util.Date convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack10
<javassist.compiler.MemberResolver$Method: boolean isStatic()>/$stack2
<ognl.ASTConst: java.lang.Object getValue()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldBeAbleToConvertWithPTBR()>/$stack1
<ognl.ASTConst: java.lang.Object getValueBody(ognl.OgnlContext,java.lang.Object)>/$stack3
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldBeAbleToConvertWithENUS()>/$stack1
<ognl.ASTConst: java.lang.String toString()>/$stack2
<ognl.ASTConst: java.lang.String toString()>/$stack3
<ognl.ASTConst: java.lang.String toString()>/$stack5
<ognl.ASTConst: java.lang.String toString()>/$stack7
<ognl.ASTConst: java.lang.String toString()>/$stack9
<ognl.ASTConst: java.lang.String toString()>/$stack11
<ognl.ASTConst: java.lang.String toString()>/$stack13
<ognl.ASTConst: java.lang.String toString()>/$stack15
<ognl.ASTConst: java.lang.String toString()>/$stack46
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack4
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack9
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack25
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack13
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack17
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack21
<br.com.caelum.vraptor.converter.l10n.LocaleBasedDoubleConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack5
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack7
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack10
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack13
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack22
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack26
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack31
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack70
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack88
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack97
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack102
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack106
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack116
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/$stack6
<ognl.ASTConst: java.lang.String toGetSourceString(ognl.OgnlContext,java.lang.Object)>/retval#_157
<br.com.caelum.vraptor.ioc.pico.PicoComponentAdapter: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack8
<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String peekNextChild()>/$stack4
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldNotSupportNonGenericLists()>/$stack6
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldNotSupportNonGenericLists()>/$stack10
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack6
<br.com.caelum.vraptor.http.ognl.ListNullHandlerTest: void shouldInsertItemsUntilTheRequiredPosition()>/$stack10
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/$stack9
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/$stack10
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter createComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,java.lang.Object,java.lang.Class,org.picocontainer.Parameter[])>/$stack14
<org.picocontainer.behaviors.AbstractBehaviorFactory: void verify(org.picocontainer.PicoContainer)>/$stack2
<org.picocontainer.behaviors.AbstractBehaviorFactory: void accept(org.picocontainer.PicoVisitor)>/$stack2
<org.picocontainer.behaviors.AbstractBehaviorFactory: void accept(org.picocontainer.PicoVisitor)>/$stack3
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter addComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,org.picocontainer.ComponentAdapter)>/$stack5
<org.picocontainer.behaviors.AbstractBehaviorFactory: org.picocontainer.ComponentAdapter addComponentAdapter(org.picocontainer.ComponentMonitor,org.picocontainer.LifecycleStrategy,java.util.Properties,org.picocontainer.ComponentAdapter)>/$stack6
<org.springframework.beans.BeanMetadataAttributeAccessor: java.lang.Object getSource()>/$stack1
<br.com.caelum.vraptor.http.route.Rules: br.com.caelum.vraptor.http.route.RouteBuilder routeFor(java.lang.String)>/$stack3
<br.com.caelum.vraptor.http.ognl.EmptyElementsRemoval$SetValue: boolean equals(java.lang.Object)>/$stack8
<org.springframework.beans.factory.support.ConstructorResolver$2: java.lang.reflect.Method[] run()>/$stack3
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter,java.util.List,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.util.Map)>/$stack27
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/$stack11
<org.hamcrest.core.IsSame: boolean matches(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalDateTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack3
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack5
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/$stack7
<br.com.caelum.vraptor.serialization.HTMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void setup()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldNotAcceptFormURLEncoded()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldNotAcceptFormURLEncoded()>/$stack10
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldAcceptMultipart()>/$stack6
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldAcceptMultipart()>/$stack10
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack13
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack17
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnly()>/$stack26
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack13
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack17
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFieldsOnlyWithInvalidCharset()>/$stack26
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: br.com.caelum.vraptor.serialization.SerializerBuilder getSerializer()>/$stack4
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack25
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack29
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void withFilesAndFields()>/$stack34
<br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack3
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainer: void <init>(org.picocontainer.MutablePicoContainer)>/$stack2
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainer: java.lang.Object instanceFor(java.lang.Class)>/$stack2
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainer: org.picocontainer.MutablePicoContainer getContainer()>/$stack1
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack12
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack16
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void emptyFiles()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack17
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void throwsInvalidParameterExceptionIfIOExceptionOccurs()>/$stack28
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack25
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void fieldsWithSameName()>/$stack30
<br.com.caelum.iogi.collections.ArrayInstantiator$ArrayFactory: java.lang.Object makeArray()>/$stack4
<br.com.caelum.iogi.collections.ArrayInstantiator$ArrayFactory: java.lang.Object instantiateArrayElement(br.com.caelum.iogi.parameters.Parameters)>/$stack3
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack21
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack25
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void multipleUpload()>/$stack30
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void doNothingWhenFileUploadExceptionOccurs()>/$stack8
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldValidateWhenSizeLimitExceededExceptionOccurs()>/$stack8
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack22
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack26
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void shouldCreateDirInsideAppIfTempDirAreNotAvailable()>/$stack31
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack16
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack20
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void checkIfFileHasBeenUploaded()>/$stack25
<br.com.caelum.vraptor.interceptor.multipart.CommonsUploadMultipartInterceptorTest: void handleValidatorMessageWhenFileUploadExceptionOccurs()>/$stack8
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void setUp()>/$stack3
<br.com.caelum.vraptor.core.DefaultInterceptorStackTest: void setUp()>/$stack8
<org.springframework.beans.factory.BeanDefinitionStoreException: java.lang.String getBeanName()>/$stack1
<java.lang.invoke.Invokers: java.lang.invoke.MemberName methodHandleInvokeLinkerMethod(java.lang.String,java.lang.invoke.MethodType,java.lang.Object[])>/$stack10
<java.lang.invoke.Invokers: java.lang.invoke.MemberName linkToCallSiteMethod(java.lang.invoke.MethodType)>/$stack3
<java.lang.invoke.Invokers: java.lang.invoke.MemberName linkToTargetMethod(java.lang.invoke.MethodType)>/$stack3
<java.lang.invoke.LambdaForm: void prepare()>/$stack3
<java.lang.invoke.LambdaForm: void prepare()>/$stack6
<java.lang.invoke.LambdaForm: java.lang.invoke.MemberName compileToBytecode()>/$stack3
<java.lang.invoke.LambdaForm: java.lang.invoke.MemberName compileToBytecode()>/$stack8
<java.lang.invoke.LambdaForm: java.lang.invoke.MemberName compileToBytecode()>/$stack12
<java.lang.invoke.LambdaForm: java.lang.invoke.MemberName compileToBytecode()>/$stack16
<java.lang.invoke.LambdaForm: java.lang.invoke.MemberName compileToBytecode()>/$stack23
<com.google.common.collect.SingletonImmutableList$1: java.lang.Object next()>/$stack3
<com.google.common.collect.SingletonImmutableList$1: java.lang.Object previous()>/$stack3
<org.springframework.beans.factory.BeanCreationException: java.lang.String getBeanName()>/$stack1
<org.springframework.beans.BeanMetadataAttribute: java.lang.String getName()>/$stack1
<org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>/$stack5
<org.springframework.beans.BeanMetadataAttribute: int hashCode()>/$stack1
<org.picocontainer.injectors.ParameterNameBinding: java.lang.String getName()>/$stack2
<org.picocontainer.injectors.ParameterNameBinding: java.lang.String getName()>/$stack9
<org.picocontainer.injectors.ParameterNameBinding: java.lang.String getName()>/$stack12
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest: void shouldThrowScannerExceptionIfAnErrorOccurs()>/$stack7
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest: br.com.caelum.vraptor.scan.ClasspathResolver access$000(br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest)>/$stack1
<br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest: br.com.caelum.vraptor.ComponentRegistry access$200(br.com.caelum.vraptor.scan.JavassistBootstrapGeneratorTest)>/$stack1
<com.google.common.base.Joiner: void <init>(com.google.common.base.Joiner)>/$stack2
<com.google.common.base.Joiner: java.lang.String access$100(com.google.common.base.Joiner)>/$stack1
<org.springframework.expression.TypedValue: java.lang.Object getValue()>/$stack1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void setup()>/$stack6
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseTheProvidedParameters()>/$stack8
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldConvertArrayParametersToIndexParameters()>/$stack8
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldThrowExceptionWhenThereIsAParameterContainingDotClass()>/$stack1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldThrowExceptionWhenThereIsAParameterContainingDotClass()>/$stack8
<com.google.common.collect.Multimaps$UnmodifiableMultimap: com.google.common.collect.Multimap delegate()>/$stack1
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Map asMap()>/$stack3
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldUseAndDiscardFlashParameters()>/$stack6
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Collection entries()>/$stack2
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Collection get(java.lang.Object)>/$stack2
<com.google.common.collect.Multimaps$UnmodifiableMultimap: com.google.common.collect.Multiset keys()>/$stack2
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldValidateParameters()>/$stack8
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Set keySet()>/$stack2
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldThrowException()>/$stack4
<com.google.common.collect.Multimaps$UnmodifiableMultimap: java.util.Collection values()>/$stack2
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack17
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack21
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsPresent()>/$stack11
<org.springframework.core.type.classreading.SimpleMetadataReader: org.springframework.core.io.Resource getResource()>/$stack1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack13
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddHeaderInformationToRequestWhenHeaderParamAnnotationIsNotPresent()>/$stack17
<br.com.caelum.iogi.reflection.NewObject$ScalaSetter: java.lang.String propertyName()>/$stack1
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack25
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack29
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack11
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack15
<br.com.caelum.vraptor.interceptor.ParametersInstantiatorInterceptorTest: void shouldAddVariousHeaderInformationsToRequestWhenHeaderParamAnnotationIsPresent()>/$stack19
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerializationTest$SomeProxy: org.hibernate.proxy.LazyInitializer getHibernateLazyInitializer()>/$stack1
<com.google.common.collect.AbstractIterator: java.lang.Object next()>/$stack3
<com.google.common.collect.AbstractIterator: java.lang.Object peek()>/$stack2
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void read(com.google.gson.stream.JsonReader,java.lang.Object)>/$stack4
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.view.DefaultLogicResultTest$TheComponent: void method()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack4
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack8
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack25
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack13
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack17
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldUseTheDefaultLocale()>/$stack21
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<org.springframework.beans.factory.NoSuchBeanDefinitionException: java.lang.String getBeanName()>/$stack1
<org.springframework.beans.factory.NoSuchBeanDefinitionException: java.lang.Class getBeanType()>/$stack1
<org.springframework.beans.BeanWrapperImpl$2: java.lang.Object run()>/$stack2
<org.springframework.context.support.AbstractApplicationContext: java.lang.String getId()>/$stack1
<com.google.common.collect.Collections2$TransformedCollection: void clear()>/$stack1
<com.google.common.collect.Collections2$TransformedCollection: boolean isEmpty()>/$stack1
<com.google.common.collect.Collections2$TransformedCollection: java.util.Iterator iterator()>/$stack1
<com.google.common.collect.Collections2$TransformedCollection: int size()>/$stack1
<org.springframework.context.support.AbstractApplicationContext: org.springframework.context.event.ApplicationEventMulticaster getApplicationEventMulticaster()>/$stack1
<org.springframework.context.support.AbstractApplicationContext: org.springframework.context.event.ApplicationEventMulticaster getApplicationEventMulticaster()>/$stack2
<org.springframework.context.support.AbstractApplicationContext: org.springframework.context.LifecycleProcessor getLifecycleProcessor()>/$stack1
<org.springframework.context.support.AbstractApplicationContext: org.springframework.context.LifecycleProcessor getLifecycleProcessor()>/$stack2
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldBeAbleToConvertWithPTBR()>/$stack1
<org.springframework.context.support.AbstractApplicationContext: void addApplicationListener(org.springframework.context.ApplicationListener)>/$stack2
<org.springframework.context.support.AbstractApplicationContext: void addApplicationListener(org.springframework.context.ApplicationListener)>/$stack5
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldBeAbleToConvertWithENUS()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack4
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack9
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack25
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack13
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack17
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldUseTheDefaultLocale()>/$stack21
<br.com.caelum.vraptor.converter.l10n.LocaleBasedBigDecimalConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: java.lang.String getMessage()>/$stack3
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: java.lang.String getMessage()>/$stack6
<org.picocontainer.injectors.AbstractInjector$AmbiguousComponentResolutionException: java.lang.String getMessage()>/$stack10
<org.springframework.context.support.AbstractApplicationContext: void initMessageSource()>/$stack27
<br.com.caelum.vraptor.util.extjs.DefaultExtJsonTest: void setUp()>/$stack2
<br.com.caelum.vraptor.util.extjs.DefaultExtJsonTest: void setUp()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void setUp()>/$stack10
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack3
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack10
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack16
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack22
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack28
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack33
<br.com.caelum.vraptor.http.ParametersProviderTest: void setup()>/$stack38
<org.springframework.context.support.AbstractApplicationContext: org.springframework.context.MessageSource getMessageSource()>/$stack1
<org.springframework.context.support.AbstractApplicationContext: org.springframework.context.MessageSource getMessageSource()>/$stack2
<com.google.gson.Gson$FutureTypeAdapter: void setDelegate(com.google.gson.TypeAdapter)>/$stack2
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADog()>/$stack8
<com.google.gson.Gson$FutureTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack2
<com.google.gson.Gson$FutureTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack3
<com.google.gson.Gson$FutureTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack3
<com.google.gson.Gson$FutureTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack4
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogs()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWithNoRoot()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeAListOfDogsWhenMethodHasMoreThenOneParameter()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithoutRoot()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWithDeserializerAdapter()>/$stack16
<com.google.common.collect.LinkedListMultimap$AsMapEntries$1$1: java.lang.Object getKey()>/$stack1
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgument()>/$stack8
<br.com.caelum.vraptor.http.ParametersProviderTest: void returnsDependenciesIfContainerCanProvide()>/$stack4
<br.com.caelum.vraptor.http.ParametersProviderTest: void returnsDependenciesIfContainerCanProvide()>/$stack10
<br.com.caelum.vraptor.http.ParametersProviderTest: void returnsDependenciesIfRequestCanProvide()>/$stack4
<br.com.caelum.vraptor.http.ParametersProviderTest: void returnsDependenciesIfRequestCanProvide()>/$stack11
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndHasNotRoot()>/$stack8
<br.com.caelum.vraptor.http.ParametersProviderTest: void ignoresPopulationIfIfRequestCanProvide()>/$stack7
<br.com.caelum.vraptor.http.ParametersProviderTest: void doesntReturnDependenciesIfItIsNotAnInterface()>/$stack4
<br.com.caelum.vraptor.http.ParametersProviderTest: void doesntReturnDependenciesIfItIsNotAnInterface()>/$stack10
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack8
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack34
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack40
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack27
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack3
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack13
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack17
<br.com.caelum.vraptor.http.ParametersProviderTest: void continuesToFillObjectIfItIsConvertable()>/$stack22
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack10
<br.com.caelum.vraptor.restfulie.serialization.LinkConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>/$stack20
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldBeAbleToDeserializeADogNamedDifferently()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAttribute()>/$stack9
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAttribute()>/$stack16
<br.com.caelum.vraptor.http.ParametersProviderTest: void thereAreNoParameters()>/$stack12
<br.com.caelum.vraptor.http.ParametersProviderTest: void thereAreNoParameters()>/$stack1
<br.com.caelum.vraptor.http.ParametersProviderTest: void thereAreNoParameters()>/$stack7
<org.picocontainer.injectors.AdaptingInjection$2: java.lang.Object run()>/$stack3
<br.com.caelum.vraptor.http.ParametersProviderTest: void requestParameterIs(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.String,java.lang.String[])>/$stack18
<br.com.caelum.vraptor.http.ParametersProviderTest: void requestParameterIs(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.String,java.lang.String[])>/$stack7
<br.com.caelum.vraptor.http.ParametersProviderTest: void requestParameterIs(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.String,java.lang.String[])>/$stack12
<br.com.caelum.vraptor.http.ParametersProviderTest: void requestParameterIs(br.com.caelum.vraptor.resource.ResourceMethod,java.lang.String,java.lang.String[])>/$stack24
<net.vidageek.mirror.get.DefaultGetterHandler: java.lang.Object field(java.lang.reflect.Field)>/$stack6
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsISO8601Attribute()>/$stack10
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeADogWithCalendarAsObjectAttribute()>/$stack9
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/$stack15
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/$stack8
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void handle(br.com.caelum.vraptor.restfulie.hypermedia.HypermediaResource)>/$stack10
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void restfulHeadersFor(java.lang.String,java.util.Calendar)>/$stack3
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandler: void restfulHeadersFor(java.lang.String,java.util.Calendar)>/$stack4
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldHonorRequestHeaderAcceptCharset()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldHonorRequestHeaderAcceptCharset()>/$stack14
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void whenNoCharsetHeaderIsFoundThanAssumeItIsUTF8()>/$stack8
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void whenNoCharsetHeaderIsFoundThanAssumeItIsUTF8()>/$stack14
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldByPassDeserializationWhenHasNoContent()>/$stack7
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeOneParam()>/$stack17
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeFromGenericTypeTwoParams()>/$stack18
<br.com.caelum.vraptor.deserialization.gson.GsonDeserializerTest: void shouldDeserializeWithoutGenericType()>/$stack18
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.core.convert.ConversionService getConversionService()>/$stack1
<br.com.caelum.vraptor.core.ToInstantiateInterceptorHandler: void execute(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack6
<br.com.caelum.iogi.parameters.Parameter: java.lang.String getValue()>/$stack1
<br.com.caelum.iogi.parameters.Parameter: int hashCode()>/$stack7
<br.com.caelum.iogi.parameters.Parameter: int hashCode()>/$stack8
<br.com.caelum.iogi.parameters.Parameter: boolean equals(java.lang.Object)>/$stack9
<br.com.caelum.iogi.parameters.Parameter: boolean equals(java.lang.Object)>/$stack11
<br.com.caelum.iogi.parameters.Parameter: boolean equals(java.lang.Object)>/$stack13
<org.codehaus.jettison.AbstractXMLStreamReader: int getAttributeCount()>/$stack1
<com.google.common.collect.Iterators$13: java.lang.Object next()>/$stack2
<org.codehaus.jettison.AbstractXMLStreamReader: javax.xml.namespace.QName getAttributeName(int)>/$stack5
<org.codehaus.jettison.AbstractXMLStreamReader: java.lang.String getAttributeValue(int)>/$stack5
<org.codehaus.jettison.AbstractXMLStreamReader: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>/$stack3
<org.codehaus.jettison.AbstractXMLStreamReader: javax.xml.namespace.QName getName()>/$stack1
<org.codehaus.jettison.AbstractXMLStreamReader: int getNamespaceCount()>/$stack1
<org.codehaus.jettison.AbstractXMLStreamReader: java.lang.String getNamespacePrefix(int)>/$stack2
<org.codehaus.jettison.AbstractXMLStreamReader: java.lang.String getNamespaceURI(int)>/$stack2
<org.codehaus.jettison.AbstractXMLStreamReader: java.lang.String getNamespaceURI(java.lang.String)>/$stack2
<br.com.caelum.vraptor.validator.DIConstraintValidatorFactory: javax.validation.ConstraintValidator getInstance(java.lang.Class)>/$stack2
<br.com.caelum.vraptor.validator.DIConstraintValidatorFactory: javax.validation.ConstraintValidator getInstance(java.lang.Class)>/$stack8
<java.util.ServiceLoader$LazyIterator: boolean hasNextService()>/$stack2
<org.picocontainer.adapters.AbstractAdapter: java.lang.Object getComponentKey()>/$stack1
<org.picocontainer.adapters.AbstractAdapter: java.lang.Object getComponentKey()>/$stack2
<org.picocontainer.adapters.AbstractAdapter: java.lang.Class getComponentImplementation()>/$stack1
<org.picocontainer.adapters.AbstractAdapter: void checkTypeCompatibility()>/$stack2
<org.picocontainer.adapters.AbstractAdapter: java.lang.ClassCastException newCCE(java.lang.Class)>/$stack4
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>/$stack7
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>/$stack8
<br.com.caelum.vraptor.VRaptorTest$DoNothingProvider: br.com.caelum.vraptor.core.StaticContentHandler access$300(br.com.caelum.vraptor.VRaptorTest$DoNothingProvider)>/$stack1
<java.util.ResourceBundle: java.util.Locale getLocale()>/$stack1
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue()>/$stack5
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(java.lang.Object)>/$stack7
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(java.lang.Class)>/$stack7
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(java.lang.Object,java.lang.Class)>/$stack9
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext)>/$stack4
<java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)>/$stack32
<java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)>/$stack38
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Object)>/$stack4
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Class)>/$stack6
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class)>/$stack6
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Class getValueType()>/$stack2
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Class getValueType(org.springframework.expression.EvaluationContext)>/$stack6
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Class getValueType(org.springframework.expression.EvaluationContext,java.lang.Object)>/$stack8
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Class getValueType(java.lang.Object)>/$stack3
<org.springframework.expression.spel.standard.SpelExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor()>/$stack2
<org.springframework.expression.spel.standard.SpelExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(java.lang.Object)>/$stack7
<org.springframework.expression.spel.standard.SpelExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(org.springframework.expression.EvaluationContext)>/$stack5
<org.springframework.expression.spel.standard.SpelExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object)>/$stack7
<org.springframework.expression.spel.standard.SpelExpression: java.lang.String getExpressionString()>/$stack1
<org.springframework.expression.spel.standard.SpelExpression: boolean isWritable(org.springframework.expression.EvaluationContext)>/$stack4
<org.springframework.expression.spel.standard.SpelExpression: boolean isWritable(java.lang.Object)>/$stack3
<org.springframework.expression.spel.standard.SpelExpression: boolean isWritable(org.springframework.expression.EvaluationContext,java.lang.Object)>/$stack4
<org.springframework.expression.spel.standard.SpelExpression: void setValue(org.springframework.expression.EvaluationContext,java.lang.Object)>/$stack5
<org.springframework.expression.spel.standard.SpelExpression: void setValue(java.lang.Object,java.lang.Object)>/$stack4
<org.springframework.expression.spel.standard.SpelExpression: void setValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>/$stack5
<org.springframework.expression.spel.standard.SpelExpression: org.springframework.expression.spel.SpelNode getAST()>/$stack1
<org.springframework.expression.spel.standard.SpelExpression: java.lang.String toStringAST()>/$stack1
<com.google.gson.internal.LinkedTreeMap$KeySet$1: java.lang.Object next()>/$stack2
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldInvokeTheMethodAndNotProceedWithInterceptorStack()>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowMethodExceptionIfThereIsAnInvocationException()>/$stack15
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldUseTheProvidedArguments()>/$stack10
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetResultReturnedValueFromInvokedMethod()>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetNullWhenNullReturnedFromInvokedMethod()>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldSetOkWhenVoidReturnedFromInvokedMethod()>/$stack9
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack10
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldBeOkIfThereIsValidationErrorsAndYouSpecifiedWhereToGo()>/$stack23
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowExceptionIfYouHaventSpecifiedWhereToGoOnValidationError()>/$stack11
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest: void shouldThrowExceptionIfYouHaventSpecifiedWhereToGoOnValidationError()>/$stack16
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: boolean equals(java.lang.Object)>/$stack15
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: boolean equals(java.lang.Object)>/$stack18
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: boolean equals(java.lang.Object)>/$stack16
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: int hashCode()>/$stack4
<org.picocontainer.injectors.ConstructorInjector$ResolverKey: int hashCode()>/$stack26
<br.com.caelum.vraptor.view.DefaultHttpResult: br.com.caelum.vraptor.view.HttpResult addDateHeader(java.lang.String,long)>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResult: br.com.caelum.vraptor.view.HttpResult addHeader(java.lang.String,java.lang.String)>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResult: br.com.caelum.vraptor.view.HttpResult addIntHeader(java.lang.String,int)>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResult: void sendError(int)>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResult: void sendError(int,java.lang.String)>/$stack4
<br.com.caelum.vraptor.view.DefaultHttpResult: void setStatusCode(int)>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResult: void movedPermanentlyTo(java.lang.String)>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResult: java.lang.Object movedPermanentlyTo(java.lang.Class)>/$stack2
<br.com.caelum.vraptor.view.DefaultHttpResult: br.com.caelum.vraptor.view.HttpResult body(java.lang.String)>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResult: br.com.caelum.vraptor.view.HttpResult body(java.io.InputStream)>/$stack3
<br.com.caelum.vraptor.view.DefaultHttpResult: br.com.caelum.vraptor.view.HttpResult body(java.io.Reader)>/$stack3
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: int positionOf(org.springframework.expression.spel.standard.Token)>/$stack3
<com.google.common.collect.Collections2$FilteredCollection$1: boolean apply(java.lang.Object)>/$stack3
<br.com.caelum.vraptor.view.DefaultStatus: void sendError(int)>/$stack3
<br.com.caelum.vraptor.view.DefaultStatus: void sendError(int,java.lang.String)>/$stack4
<br.com.caelum.vraptor.view.DefaultStatus: void header(java.lang.String,java.lang.String)>/$stack3
<br.com.caelum.vraptor.view.DefaultStatus: void created()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatus: void created()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatus: void ok()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatus: void ok()>/$stack2
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.Token eatToken(org.springframework.expression.spel.standard.TokenKind)>/$stack16
<br.com.caelum.vraptor.view.DefaultStatus: void movedPermanentlyTo(java.lang.String)>/$stack2
<br.com.caelum.vraptor.view.DefaultStatus: void movedPermanentlyTo(java.lang.String)>/$stack5
<br.com.caelum.vraptor.view.DefaultStatus: void movedPermanentlyTo(java.lang.String)>/$stack6
<br.com.caelum.vraptor.view.DefaultStatus: java.lang.String fixLocation(java.lang.String)>/$stack4
<br.com.caelum.vraptor.view.DefaultStatus: void badRequest(java.util.List)>/$stack2
<br.com.caelum.vraptor.view.DefaultStatus: void badRequest(java.util.List)>/$stack3
<br.com.caelum.vraptor.view.DefaultStatus: void noContent()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatus: void accepted()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatus: void accepted()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatus: void notModified()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatus: br.com.caelum.vraptor.http.route.Router access$000(br.com.caelum.vraptor.view.DefaultStatus)>/$stack1
<br.com.caelum.vraptor.test.HttpSessionMock: javax.servlet.ServletContext getServletContext()>/$stack1
<com.google.common.base.Predicates$InstanceOfPredicate: boolean apply(java.lang.Object)>/$stack2
<com.google.common.base.Predicates$InstanceOfPredicate: int hashCode()>/$stack1
<com.google.common.base.Predicates$InstanceOfPredicate: boolean equals(java.lang.Object)>/$stack4
<com.google.common.base.Predicates$InstanceOfPredicate: boolean equals(java.lang.Object)>/$stack5
<com.google.common.base.Predicates$InstanceOfPredicate: java.lang.String toString()>/$stack3
<net.vidageek.mirror.invoke.ConstructorHandlerByArgs: java.lang.reflect.Constructor getConstructor(java.lang.Object[])>/$stack18
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldReadRootDirectoryAsWebinfClasses()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUseSpringContainerAsDefaultProvider()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUseGuiceAs1stAlternative()>/$stack4
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldUsePicoAs2ndAlternative()>/$stack4
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldThrowExceptionWhenProviderClassWasNotFound()>/$stack2
<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator: java.lang.Object next()>/$stack4
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldThrowIllegalArgumentExceptionWhenProvidersWasNotFound()>/$stack5
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldReturnThatHasNoBasePackageWhenInitParamNull()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldThrowMissingConfigurationExceptionIfHasNoBasePackages()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void testIfClasspathScanningIsEnabled()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void testIfHasBasePackages()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldReturnBasePackagesWhenInitParamNotNull()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldReturnBasePackagesArrayWhenInitParamNotNullAndHasComas()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldReturnBasePackagesArrayWhenInitParamNotNullAndHasComasAndSpaces()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldReturnBasePackagesArrayWhenInitParamHasLeadingAndTrailingSpaces()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldAllowProviderOverriding()>/$stack1
<br.com.caelum.vraptor.config.BasicConfigurationTest: void shouldThrowInstantiationExceptionCauseIfThereIsSuchException()>/$stack2
<br.com.caelum.vraptor.interceptor.download.InputStreamDownloadTest: void setUp()>/$stack6
<org.springframework.beans.factory.support.AbstractBeanDefinition: boolean hasBeanClass()>/$stack1
<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.core.io.Resource getResource()>/$stack1
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getResourceDescription()>/$stack1
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getResourceDescription()>/$stack2
<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.factory.config.BeanDefinition getOriginatingBeanDefinition()>/$stack1
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String toString()>/$stack39
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String toString()>/$stack42
<br.com.caelum.iogi.reflection.Target: java.lang.String getName()>/$stack1
<br.com.caelum.iogi.reflection.Target: java.lang.reflect.Type getType()>/$stack1
<br.com.caelum.iogi.reflection.Target: int hashCode()>/$stack7
<br.com.caelum.iogi.reflection.Target: int hashCode()>/$stack8
<br.com.caelum.iogi.reflection.Target: int hashCode()>/$stack3
<br.com.caelum.iogi.reflection.Target: int hashCode()>/$stack4
<br.com.caelum.iogi.reflection.Target: boolean equals(java.lang.Object)>/$stack9
<br.com.caelum.iogi.reflection.Target: boolean equals(java.lang.Object)>/$stack11
<br.com.caelum.iogi.reflection.Target: boolean equals(java.lang.Object)>/$stack5
<br.com.caelum.iogi.reflection.Target: boolean equals(java.lang.Object)>/$stack7
<br.com.caelum.iogi.reflection.Target: boolean equals(java.lang.Object)>/$stack13
<br.com.caelum.iogi.reflection.Target: boolean equals(java.lang.Object)>/$stack15
<br.com.caelum.iogi.reflection.Target: java.lang.String toString()>/$stack2
<org.springframework.context.support.DelegatingMessageSource: org.springframework.context.MessageSource getParentMessageSource()>/$stack1
<org.springframework.context.support.DelegatingMessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale)>/$stack5
<org.springframework.context.support.DelegatingMessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale)>/$stack7
<org.springframework.context.support.DelegatingMessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.util.Locale)>/$stack4
<org.springframework.context.support.DelegatingMessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.util.Locale)>/$stack6
<org.springframework.context.support.DelegatingMessageSource: java.lang.String getMessage(org.springframework.context.MessageSourceResolvable,java.util.Locale)>/$stack5
<org.springframework.context.support.DelegatingMessageSource: java.lang.String getMessage(org.springframework.context.MessageSourceResolvable,java.util.Locale)>/$stack16
<org.mockito.asm.Item: void <init>(int,org.mockito.asm.Item)>/$stack6
<org.mockito.asm.Item: boolean isEqualTo(org.mockito.asm.Item)>/$stack8
<org.mockito.asm.Item: boolean isEqualTo(org.mockito.asm.Item)>/$stack12
<org.mockito.asm.Item: boolean isEqualTo(org.mockito.asm.Item)>/$stack26
<org.mockito.asm.Item: boolean isEqualTo(org.mockito.asm.Item)>/$stack29
<br.com.caelum.vraptor.view.LinkToHandlerTest: void setUp()>/$stack4
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlWithoutArgs()>/$stack4
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlWithParamArgs()>/$stack5
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlWithPartialParamArgs()>/$stack5
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlForOverrideMethodWithParamArgs()>/$stack5
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldReturnWantedUrlForOverrideMethodWithParialParamArgs()>/$stack5
<br.com.caelum.vraptor.view.LinkToHandlerTest: void shouldUseExactlyMatchedMethodIfTheMethodIsOverloaded()>/$stack5
<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.Class getSourceType()>/$stack1
<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.Class getTargetType()>/$stack1
<net.vidageek.mirror.reflect.DefaultConstructorReflector: java.lang.reflect.Constructor withAnyArgs()>/$stack14
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONPSerialization$1: br.com.caelum.vraptor.serialization.SerializerBuilder getSerializer()>/$stack3
<br.com.caelum.vraptor.http.iogi.MiscIogiSupportTest: void isCapableOfDealingWithEmptyParameterForInternalValueWhichNeedsAConverter()>/$stack6
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: java.lang.Class[] getParameters()>/$stack1
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: void setAccessible()>/$stack1
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: java.lang.Object invoke(java.lang.Object[])>/$stack4
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: java.lang.Object invoke(java.lang.Object[])>/$stack10
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: java.lang.Object invoke(java.lang.Object[])>/$stack19
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: java.lang.Object invoke(java.lang.Object[])>/$stack29
<net.vidageek.mirror.provider.java.PureJavaMethodReflectionProvider: java.lang.Object invoke(java.lang.Object[])>/$stack37
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void setUp()>/$stack5
<br.com.caelum.vraptor.ioc.guice.SessionCustomScopeTest: void shouldClearAllListenersFromSessionOnStart()>/$stack4
<br.com.caelum.vraptor.http.ognl.ListNullHandler: java.lang.Object instantiate(java.lang.Object,java.lang.Object,java.lang.reflect.Type)>/$stack20
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack16
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack12
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack21
<br.com.caelum.vraptor.VRaptorTest: void shouldExecuteARequestUsingTheSpecifiedContainer()>/$stack27
<br.com.caelum.vraptor.VRaptorTest: void shouldStopContainer()>/$stack2
<br.com.caelum.vraptor.VRaptorTest: void shouldStopContainer()>/$stack7
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.spel.ExpressionState,java.lang.String)>/accessorToUse#_167
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.spel.ExpressionState,java.lang.String,java.lang.Object)>/accessorToUse#_220
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainerTest: void shouldBeAbleToInstantiateABean()>/$stack1
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainerTest: void shouldBeAbleToProvideAFruitButNotAJuice()>/$stack1
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainerTest: void shouldBeAbleToInstantiateADependentBean()>/$stack3
<br.com.caelum.vraptor.ioc.pico.PicoBasedContainerTest: void shouldBeAbleToInstantiateADependentBean()>/$stack5
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: void <init>(java.lang.String)>/$stack9
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.lang.Class reflectClass()>/$stack1
<net.vidageek.mirror.provider.java.PureJavaClassReflectionProvider: java.util.List reflectAllConstructors()>/$stack1
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getWrappedInstance()>/$stack1
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getWrappedClass()>/$stack1
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getWrappedClass()>/$stack2
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getRootInstance()>/$stack1
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getRootClass()>/$stack1
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getRootClass()>/$stack2
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.CachedIntrospectionResults getCachedIntrospectionResults()>/$stack1
<br.com.caelum.vraptor.http.VRaptorRequestTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.VRaptorRequestTest: void setup()>/$stack12
<br.com.caelum.vraptor.http.VRaptorRequestTest: void setup()>/$stack16
<br.com.caelum.vraptor.http.VRaptorRequestTest: void setup()>/$stack20
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder getPropertyNameTokens(java.lang.String)>/$stack49
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithConstraint()>/$stack13
<br.com.caelum.vraptor.validator.MethodValidatorTest: void shouldValidateMethodWithTwoConstraints()>/$stack16
<org.springframework.beans.BeanWrapperImpl$1: java.lang.Object run()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetCreatedStatusAndLocationWithAppPath()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatus()>/$stack1
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack2
<br.com.caelum.vraptor.view.DefaultStatusTest: void shouldSetMovedPermanentlyStatusOfLogic()>/$stack9
<ognl.Evaluation: java.lang.Object getSource()>/$stack1
<ognl.Evaluation: java.lang.Object getResult()>/$stack1
<ognl.Evaluation: ognl.Evaluation getNext()>/$stack1
<ognl.Evaluation: ognl.Evaluation getPrevious()>/$stack1
<ognl.Evaluation: ognl.Evaluation getFirstChild()>/$stack1
<ognl.Evaluation: ognl.Evaluation getLastChild()>/$stack1
<ognl.Evaluation: ognl.Evaluation getFirstDescendant()>/$stack1
<ognl.Evaluation: ognl.Evaluation getFirstDescendant()>/$stack2
<ognl.Evaluation: ognl.Evaluation getLastDescendant()>/$stack1
<ognl.Evaluation: ognl.Evaluation getLastDescendant()>/$stack2
<ognl.Evaluation: void addChild(ognl.Evaluation)>/$stack2
<ognl.Evaluation: void addChild(ognl.Evaluation)>/$stack4
<ognl.Evaluation: void addChild(ognl.Evaluation)>/$stack7
<ognl.Evaluation: void addChild(ognl.Evaluation)>/$stack8
<ognl.Evaluation: void addChild(ognl.Evaluation)>/$stack3
<ognl.Evaluation: void addChild(ognl.Evaluation)>/$stack5
<ognl.Evaluation: void addChild(ognl.Evaluation)>/$stack6
<ognl.Evaluation: void addChild(ognl.Evaluation)>/$stack9
<ognl.Evaluation: java.lang.String toString(boolean,boolean,java.lang.String)>/$stack7
<ognl.Evaluation: java.lang.String toString(boolean,boolean,java.lang.String)>/$stack60
<ognl.Evaluation: java.lang.String toString(boolean,boolean,java.lang.String)>/$stack8
<ognl.Evaluation: java.lang.String toString(boolean,boolean,java.lang.String)>/$stack52
<org.springframework.beans.factory.CannotLoadBeanClassException: java.lang.String getBeanName()>/$stack1
<org.springframework.beans.factory.CannotLoadBeanClassException: java.lang.String getBeanClassName()>/$stack1
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack110
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder,org.springframework.beans.PropertyValue)>/$stack111
<net.vidageek.mirror.provider.java.PureJavaConstructorReflectionProvider: java.lang.Object instantiate(java.lang.Object[])>/$stack13
<net.vidageek.mirror.provider.java.PureJavaConstructorReflectionProvider: java.lang.Object instantiate(java.lang.Object[])>/$stack27
<net.vidageek.mirror.provider.java.PureJavaConstructorReflectionProvider: java.lang.Object instantiate(java.lang.Object[])>/$stack39
<net.vidageek.mirror.provider.java.PureJavaConstructorReflectionProvider: java.lang.Object instantiate(java.lang.Object[])>/$stack51
<org.springframework.beans.BeanWrapperImpl: java.lang.String toString()>/$stack5
<org.springframework.beans.BeanWrapperImpl: java.lang.Object access$0(org.springframework.beans.BeanWrapperImpl)>/$stack1
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.DateTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<javassist.compiler.TypeChecker: javassist.compiler.MemberResolver$Method atMethodCallCore(javassist.CtClass,java.lang.String,javassist.compiler.ast.ASTList)>/$stack17
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: void reportException(java.lang.Exception)>/$stack2
<br.com.caelum.vraptor.interceptor.ExceptionHandlerInterceptor: boolean replay(java.lang.Exception)>/$stack3
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport$2: java.lang.Object run()>/$stack1
<br.com.caelum.vraptor.serialization.I18nMessageSerialization: void as(java.lang.Class)>/$stack3
<com.google.common.collect.LinkedListMultimap$3$1: java.lang.Object next()>/$stack3
<com.google.common.collect.LinkedListMultimap$3$1: java.lang.Object previous()>/$stack3
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>/$stack3
<com.google.common.collect.LinkedListMultimap$DistinctKeyIterator: java.lang.Object next()>/$stack11
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void registerComponents(com.thoughtworks.xstream.XStream)>/$stack4
<br.com.caelum.vraptor.serialization.xstream.XStreamConverters: void registerComponents(com.thoughtworks.xstream.XStream)>/$stack7
<org.mockito.internal.stubbing.answers.Returns: java.lang.Object answer(org.mockito.invocation.InvocationOnMock)>/$stack2
<org.mockito.internal.stubbing.answers.Returns: java.lang.String printReturnType()>/$stack1
<org.mockito.internal.stubbing.answers.Returns: java.lang.Class getReturnType()>/$stack1
<org.mockito.internal.stubbing.answers.Returns: boolean returnsNull()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void shouldBeAbleToConvert()>/$stack1
<javax.servlet.jsp.jstl.fmt.LocalizationContext: java.util.Locale getLocale()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.DateMidnightConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<org.picocontainer.injectors.AdaptingInjection$1: java.lang.Object run()>/$stack1
<ognl.OgnlException: ognl.Evaluation getEvaluation()>/$stack1
<org.springframework.beans.BeanWrapperImpl$4: java.lang.Object run()>/$stack2
<org.springframework.context.event.SimpleApplicationEventMulticaster$1: void run()>/$stack2
<com.google.common.collect.MapMaker$NullConcurrentMap: void notifyRemoval(java.lang.Object,java.lang.Object)>/$stack6
<org.picocontainer.injectors.InjectInto: java.lang.reflect.Type getIntoType()>/$stack1
<org.picocontainer.injectors.InjectInto: java.lang.Object getIntoKey()>/$stack1
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: javax.servlet.ServletContext getServletContext()>/$stack1
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void setServletConfig(javax.servlet.ServletConfig)>/$stack2
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: org.springframework.ui.context.Theme getTheme(java.lang.String)>/$stack2
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.Object[] deserialize(java.io.InputStream,br.com.caelum.vraptor.resource.ResourceMethod)>/$stack20
<br.com.caelum.vraptor.deserialization.gson.GsonDeserialization: java.lang.String getRequestCharset()>/$stack2
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: br.com.caelum.vraptor.http.ParametersProvider getProvider()>/$stack1
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void canInjectADependencyProvidedByVraptor()>/$stack10
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void canInjectADependencyProvidedByVraptor()>/$stack16
<br.com.caelum.vraptor.serialization.gson.adapters.CalendarDeserializer: java.util.Calendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>/$stack20
<com.google.gson.internal.bind.JsonTreeWriter: void put(com.google.gson.JsonElement)>/$stack3
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endArray()>/$stack5
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endObject()>/$stack5
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void isCapableOfDealingWithSets()>/$stack3
<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>/$stack6
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void isCapableOfDealingWithSetsOfObjects()>/$stack3
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/$stack29
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/$stack13
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/$stack17
<br.com.caelum.vraptor.http.iogi.IogiParametersProviderTest: void shouldInjectOnlyAttributesWithSameType()>/$stack22
<com.google.common.collect.ImmutableEntry: java.lang.Object getKey()>/$stack1
<com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>/$stack1
<org.springframework.beans.factory.BeanNotOfRequiredTypeException: java.lang.String getBeanName()>/$stack1
<org.springframework.beans.factory.BeanNotOfRequiredTypeException: java.lang.Class getRequiredType()>/$stack1
<br.com.caelum.vraptor.interceptor.download.FileDownloadTest: void setUp()>/$stack9
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void setup()>/$stack7
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void handlesInclude()>/$stack12
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void handlesInclude()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void handlesInclude()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleTheCorrectMethod()>/$stack12
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleTheCorrectMethod()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleTheCorrectMethod()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveRequestMethods()>/$stack12
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveRequestMethods()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveRequestMethods()>/$stack6
<org.picocontainer.injectors.AnnotatedFieldInjector$1: java.lang.reflect.Field[] run()>/$stack1
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveGetRequestUsingThe_methodParameter()>/$stack16
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveGetRequestUsingThe_methodParameter()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveGetRequestUsingThe_methodParameter()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldAcceptCaseInsensitiveGetRequestUsingThe_methodParameter()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldThrowExceptionWhenRequestANotKnownMethod()>/$stack9
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldThrowExceptionWhenRequestANotKnownMethod()>/$stack1
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldThrowExceptionWhenRequestANotKnownMethod()>/$stack5
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldOverrideTheHttpMethodByUsingThe_methodParameter()>/$stack16
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldOverrideTheHttpMethodByUsingThe_methodParameter()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldOverrideTheHttpMethodByUsingThe_methodParameter()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void shouldOverrideTheHttpMethodByUsingThe_methodParameter()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfRootContext()>/$stack16
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfRootContext()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfRootContext()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfRootContext()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContext()>/$stack16
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContext()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContext()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContext()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfPlainRootContext()>/$stack12
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfPlainRootContext()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfPlainRootContext()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfPlainRootContext()>/$stack12
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfPlainRootContext()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfPlainRootContext()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfNonRootContext()>/$stack16
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfNonRootContext()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfNonRootContext()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleComposedUrlIfNonRootContext()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack16
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack1
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlWithAppendedJSessionID()>/$stack10
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContextButPlainRequest()>/$stack16
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContextButPlainRequest()>/$stack2
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContextButPlainRequest()>/$stack6
<br.com.caelum.vraptor.http.DefaultResourceTranslatorTest: void canHandleUrlIfNonRootContextButPlainRequest()>/$stack10
<br.com.caelum.vraptor.interceptor.ExecuteMethodInterceptorTest$AnyController: void specifiedWhereToGo()>/$stack1
<br.com.caelum.vraptor.http.WebXmlEncodingHandlerTest: void shouldSetEncodingToUTF8()>/$stack1
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void setup()>/$stack17
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void setup()>/$stack22
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void isCapableOfDealingWithEmptyParameterForInternalWrapperValue()>/$stack1
<br.com.caelum.vraptor.http.ognl.MiscOgnlSupportTest: void isCapableOfDealingWithEmptyParameterForInternalValueWhichNeedsAConverter()>/$stack10
<org.picocontainer.adapters.InstanceAdapter: java.lang.Object getComponentInstance(org.picocontainer.PicoContainer,java.lang.reflect.Type)>/$stack3
<org.picocontainer.adapters.InstanceAdapter: boolean componentHasLifecycle()>/$stack1
<br.com.caelum.vraptor.scan.NullWebAppBootstrapTest: void shouldNotDoAnything()>/$stack4
<org.springframework.beans.BeanInstantiationException: java.lang.Class getBeanClass()>/$stack1
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldUseValidationVersionOfLogicResult()>/$stack1
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldThrowExceptionOnlyAtTheEndOfValidationCall()>/$stack1
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldThrowExceptionOnlyAtTheEndOfValidationCall()>/$stack6
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldUseValidationVersionOfPageResult()>/$stack1
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: boolean equals(java.lang.Object)>/$stack3
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: java.lang.String toString()>/$stack1
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldUseValidationVersionOfEmptyResult()>/$stack1
<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: java.lang.Object get()>/$stack1
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldNotThrowExceptionsOnHeaders()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSendError()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSendErrorWithMessage()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnSetStatus()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void shouldBeAbleToChainMethodsOnHttpResult()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnMoved()>/$stack4
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onHttpResultShouldThrowExceptionsOnMovedToLogic()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onRefererResultShouldThrowExceptionsOnForward()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onRefererResultShouldThrowExceptionsOnRedirect()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnNotFound()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnHeader()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnCreated()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnCreatedWithLocation()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnOk()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnConflict()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMethodNotAllowed()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMovedPermanentlyTo()>/$stack3
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onStatusResultShouldThrowExceptionsOnMovedPermanentlyToLogic()>/$stack4
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onXMLSerializationResultShouldThrowExceptionOnlyOnSerializeMethod()>/$stack8
<br.com.caelum.vraptor.view.DefaultValidationViewsFactoryTest: void onSerializerResultsShouldBeAbleToCreateValidationInstancesEvenIfChildClassesUsesCovariantType()>/$stack5
<br.com.caelum.vraptor.validator.DefaultBeanValidator: java.util.Locale getLocale()>/$stack1
<br.com.caelum.vraptor.validator.DefaultBeanValidator: java.util.Locale getLocale()>/$stack3
<br.com.caelum.vraptor.http.route.DefaultTypeFinder: java.util.Map getParameterTypes(java.lang.reflect.Method,java.lang.String[])>/$stack17
<org.joda.time.format.DateTimeFormatter: boolean isPrinter()>/$stack1
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimePrinter getPrinter()>/$stack1
<org.joda.time.format.DateTimeFormatter: boolean isParser()>/$stack1
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>/$stack1
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimePrinter requirePrinter()>/l1#_548
<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser requireParser()>/l1#_721
<com.google.gson.TreeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack3
<com.google.gson.TreeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>/$stack7
<com.google.gson.TreeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack4
<com.google.gson.TreeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)>/$stack6
<br.com.caelum.vraptor.core.DefaultConvertersTest: void shouldRegisterConvertersForAllDefaultTypes()>/$stack24
<br.com.caelum.vraptor.core.DefaultConvertersTest: void registersAndUsesTheConverterInstaceForTheSpecifiedType()>/$stack3
<br.com.caelum.vraptor.core.DefaultConvertersTest: void usesTheLastConverterInstanceRegisteredForTheSpecifiedType()>/$stack4
<ognl.internal.ClassCacheImpl: java.lang.Object get(java.lang.Class)>/$stack7
<br.com.caelum.vraptor.core.DefaultConvertersTest: void existsForWillReturnTrueForRegisteredConverters()>/$stack2
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getValue()>/$stack1
<org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder: java.lang.Object getSource()>/$stack1
<ognl.internal.ClassCacheImpl: java.lang.Object put(java.lang.Class,java.lang.Object)>/$stack9
<ognl.internal.ClassCacheImpl: java.lang.Object put(java.lang.Class,java.lang.Object)>/$stack10
<org.picocontainer.injectors.AbstractInjector$NotConcreteRegistrationException: java.lang.Class getComponentImplementation()>/$stack1
<com.google.common.collect.Sets$FilteredSortedSet: java.lang.Object last()>/$stack5
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack3
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerialization: br.com.caelum.vraptor.serialization.SerializerBuilder getSerializer()>/$stack3
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: boolean canConvert(java.lang.Class)>/$stack2
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.String toString(java.lang.Object)>/$stack2
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.Object fromString(java.lang.String)>/$stack2
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)>/$stack2
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)>/$stack3
<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter)>/$stack7
<com.google.common.base.Predicates$InPredicate: boolean apply(java.lang.Object)>/$stack3
<com.google.common.base.Predicates$InPredicate: boolean equals(java.lang.Object)>/$stack5
<com.google.common.base.Predicates$InPredicate: int hashCode()>/$stack1
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack16
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack20
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack24
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack48
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack29
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack34
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack43
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void setup()>/$stack39
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void settingShouldNullifyUpToIndexAndIgnoreRemoval()>/$stack2
<br.com.caelum.vraptor.http.ognl.ArrayAccessorTest: void settingShouldNullifyUpToIndexAndIgnoreRemoval()>/$stack7
<org.springframework.expression.spel.support.StandardTypeConverter: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack3
<org.springframework.expression.spel.support.StandardTypeConverter: java.lang.Object convertValue(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>/$stack5
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void setup()>/$stack5
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeOneLinkIfThereIsATransition()>/$stack10
<br.com.caelum.vraptor.restfulie.LinkConverterTest: void shouldSerializeAllLinksIfThereAreTransitions()>/$stack18
<org.springframework.core.type.StandardClassMetadata: java.lang.Class getIntrospectedClass()>/$stack1
<org.springframework.core.type.StandardClassMetadata: java.lang.String getClassName()>/$stack1
<org.springframework.core.type.StandardClassMetadata: boolean isInterface()>/$stack1
<org.springframework.core.type.StandardClassMetadata: boolean isAbstract()>/$stack1
<org.springframework.core.type.StandardClassMetadata: boolean isFinal()>/$stack1
<ognl.NoSuchPropertyException: java.lang.Object getTarget()>/$stack1
<org.springframework.core.type.StandardClassMetadata: boolean isIndependent()>/$stack2
<org.springframework.core.type.StandardClassMetadata: boolean isIndependent()>/$stack4
<ognl.NoSuchPropertyException: java.lang.Object getName()>/$stack1
<org.springframework.core.type.StandardClassMetadata: boolean hasEnclosingClass()>/$stack1
<org.springframework.core.type.StandardClassMetadata: java.lang.String getEnclosingClassName()>/$stack2
<org.springframework.core.type.StandardClassMetadata: boolean hasSuperClass()>/$stack1
<org.springframework.core.type.StandardClassMetadata: java.lang.String getSuperClassName()>/$stack2
<br.com.caelum.vraptor.core.DefaultResult: br.com.caelum.vraptor.View use(java.lang.Class)>/$stack2
<org.springframework.core.type.StandardClassMetadata: java.lang.String[] getInterfaceNames()>/$stack4
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest: void setup()>/$stack4
<br.com.caelum.vraptor.core.DefaultResult: br.com.caelum.vraptor.Result include(java.lang.String,java.lang.Object)>/$stack7
<br.com.caelum.vraptor.core.DefaultResult: br.com.caelum.vraptor.Result include(java.lang.Object)>/$stack3
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack15
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack17
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack24
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack22
<br.com.caelum.vraptor.interceptor.DeserializingInterceptor: void unsupported(java.lang.String)>/$stack2
<com.thoughtworks.xstream.converters.reflection.MissingFieldException: java.lang.String getFieldName()>/$stack1
<br.com.caelum.vraptor.converter.LocaleBasedCalendarConverter: java.util.Calendar convert(java.lang.String,java.lang.Class,java.util.ResourceBundle)>/$stack9
<br.com.caelum.vraptor.view.DefaultValidationViewsFactory: br.com.caelum.vraptor.View instanceFor(java.lang.Class,java.util.List)>/$stack4
<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider$1: java.lang.Class resolveClass(java.io.ObjectStreamClass)>/$stack3
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack6
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack10
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack18
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack22
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack30
<br.com.caelum.vraptor.ioc.spring.SpringBasedContainerTest: void initContainer()>/$stack34
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalDateConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.interceptor.InstantiateInterceptorTest: void shouldUseContainerForNewComponent()>/$stack8
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack5
<br.com.caelum.vraptor.restfulie.headers.DefaultRestHeadersHandlerTest: void whenNotExplicitlyRestfulEntityUseDefaultEtagAndLastModified()>/$stack9
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeAPersonWithDog()>/$stack8
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADog()>/$stack8
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgument()>/$stack8
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogWhenMethodHasMoreThanOneArgumentAndTheXmlIsTheLastOne()>/$stack8
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogNamedDifferently()>/$stack8
<br.com.caelum.vraptor.deserialization.XStreamXmlDeserializerTest: void shouldBeAbleToDeserializeADogWhenAliasConfiguredByAnnotations()>/$stack8
<org.springframework.web.context.support.ServletContextResource: javax.servlet.ServletContext getServletContext()>/$stack1
<org.springframework.web.context.support.ServletContextResource: boolean exists()>/$stack3
<org.springframework.web.context.support.ServletContextResource: java.io.InputStream getInputStream()>/$stack3
<org.springframework.web.context.support.ServletContextResource: java.net.URL getURL()>/$stack3
<org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>/$stack5
<br.com.caelum.vraptor.resource.DefaultResourceMethod: java.lang.reflect.Method getMethod()>/$stack1
<br.com.caelum.vraptor.resource.DefaultResourceMethod: boolean containsAnnotation(java.lang.Class)>/$stack2
<br.com.caelum.vraptor.resource.DefaultResourceMethod: int hashCode()>/$stack3
<br.com.caelum.vraptor.resource.DefaultResourceMethod: int hashCode()>/$stack4
<br.com.caelum.vraptor.http.route.PathAnnotationRoutesParser: java.util.List registerRulesFor(java.lang.Class)>/$stack22
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: java.lang.Object get(java.lang.Object)>/$stack2
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: boolean containsKey(java.lang.Object)>/$stack2
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: boolean containsValue(java.lang.Object)>/$stack2
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack3
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: boolean equals(java.lang.Object)>/$stack9
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: boolean equals(java.lang.Object)>/$stack12
<br.com.caelum.vraptor.serialization.xstream.XStreamJSONSerialization: br.com.caelum.vraptor.serialization.SerializerBuilder getSerializer()>/$stack4
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: int hashCode()>/$stack1
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: int hashCode()>/$stack3
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: java.lang.String toString()>/$stack3
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: java.lang.String toString()>/$stack7
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void setUp()>/$stack1
<br.com.caelum.vraptor.serialization.HTMLSerializationTest: void shouldIncludeOnResultWithoutAlias()>/$stack3
<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String getBeanName()>/$stack1
<org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>/$stack8
<org.springframework.beans.factory.config.BeanDefinitionHolder: int hashCode()>/$stack4
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldNotUsePortWhenPortIs80()>/$stack1
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldNotUsePortWhenPortIs80()>/$stack5
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldNotUsePortWhenPortIs80()>/$stack9
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldNotUsePortWhenPortIs80()>/$stack15
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldGiveFullUrlWithPortWhenPortIsNot80()>/$stack1
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldGiveFullUrlWithPortWhenPortIsNot80()>/$stack5
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldGiveFullUrlWithPortWhenPortIsNot80()>/$stack9
<br.com.caelum.vraptor.config.ApplicationConfigurationTest: void shouldGiveFullUrlWithPortWhenPortIsNot80()>/$stack15
<junit.framework.ComparisonCompactor: java.lang.String compact(java.lang.String)>/$stack8
<br.com.caelum.vraptor.core.JstlLocalizationTest: void setUp()>/$stack9
<br.com.caelum.vraptor.core.JstlLocalizationTest: void setUp()>/$stack13
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack43
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack67
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack72
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack73
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>/$stack75
<br.com.caelum.vraptor.core.JstlLocalizationTest: void findLocaleFromRequest()>/$stack1
<junit.framework.ComparisonCompactor: void findCommonPrefix()>/$stack4
<junit.framework.ComparisonCompactor: void findCommonPrefix()>/$stack12
<br.com.caelum.vraptor.core.JstlLocalizationTest: void findLocaleFromSession()>/$stack1
<junit.framework.ComparisonCompactor: void findCommonSuffix()>/$stack5
<junit.framework.ComparisonCompactor: void findCommonSuffix()>/$stack17
<br.com.caelum.vraptor.core.JstlLocalizationTest: void findLocaleFromServletContext()>/$stack1
<br.com.caelum.vraptor.core.JstlLocalizationTest: void findLocaleFromRequestLocale()>/$stack1
<br.com.caelum.vraptor.core.JstlLocalizationTest: void testLocaleWithSessionNotRequest()>/$stack1
<br.com.caelum.vraptor.core.JstlLocalizationTest: void testLocaleWithSessionNotRequest()>/$stack6
<br.com.caelum.vraptor.core.JstlLocalizationTest: void testFallbackLocale()>/$stack1
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack34
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack46
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack51
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack52
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)>/$stack54
<br.com.caelum.vraptor.config.ApplicationConfiguration: java.lang.String getApplicationPath()>/$stack2
<br.com.caelum.vraptor.config.ApplicationConfiguration: java.lang.String getApplicationPath()>/$stack6
<br.com.caelum.vraptor.config.ApplicationConfiguration: java.lang.String getApplicationPath()>/$stack9
<br.com.caelum.vraptor.config.ApplicationConfiguration: java.lang.String getApplicationPath()>/$stack12
<br.com.caelum.vraptor.config.ApplicationConfiguration: java.lang.String getApplicationPath()>/$stack18
<com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/result#_95
<javassist.CtMethod: java.lang.String getStringRep()>/$stack4
<javassist.CtMethod: java.lang.String getStringRep()>/$stack7
<javassist.CtMethod: java.lang.String getName()>/$stack1
<javassist.CtMethod: void setName(java.lang.String)>/$stack3
<javassist.CtMethod: void setWrappedBody(javassist.CtMethod,javassist.CtMethod$ConstParameter)>/$stack15
<javassist.CtMethod: void setWrappedBody(javassist.CtMethod,javassist.CtMethod$ConstParameter)>/$stack16
<javassist.CtMethod: void setWrappedBody(javassist.CtMethod,javassist.CtMethod$ConstParameter)>/$stack17
<org.springframework.web.context.support.ServletContextScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/$stack4
<org.springframework.web.context.support.ServletContextScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>/$stack7
<org.springframework.web.context.support.ServletContextScope: java.lang.Object remove(java.lang.String)>/$stack3
<org.springframework.web.context.support.ServletContextScope: java.lang.Object remove(java.lang.String)>/$stack5
<ognl.OgnlContext: ognl.ClassResolver getClassResolver()>/$stack1
<ognl.OgnlContext: ognl.TypeConverter getTypeConverter()>/$stack1
<ognl.OgnlContext: ognl.MemberAccess getMemberAccess()>/$stack1
<ognl.OgnlContext: void setRoot(java.lang.Object)>/$stack4
<ognl.OgnlContext: void setRoot(java.lang.Object)>/$stack5
<ognl.OgnlContext: java.lang.Object getRoot()>/$stack1
<ognl.OgnlContext: ognl.Evaluation getLastEvaluation()>/$stack1
<ognl.OgnlContext: java.lang.Object getCurrentObject()>/$stack1
<ognl.OgnlContext: ognl.Evaluation getCurrentEvaluation()>/$stack1
<ognl.OgnlContext: ognl.Evaluation getRootEvaluation()>/$stack1
<ognl.OgnlContext: void pushEvaluation(ognl.Evaluation)>/$stack2
<ognl.OgnlContext: void pushEvaluation(ognl.Evaluation)>/$stack3
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack18
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack23
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandlerTest: void setup()>/$stack28
<ognl.OgnlContext: ognl.Evaluation popEvaluation()>/$stack3
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int next()>/$stack8
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int next()>/$stack17
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int next()>/$stack21
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int next()>/$stack24
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int next()>/arrayNode#_53
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int next()>/$stack30
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: int next()>/$stack6
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: void processElement()>/$stack3
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: void processElement()>/$stack6
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: void processKey(java.lang.String,java.lang.Object)>/$stack8
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: void processKey(java.lang.String,java.lang.Object)>/$stack9
<org.codehaus.jettison.badgerfish.BadgerFishXMLStreamReader: void processKey(java.lang.String,java.lang.Object)>/$stack10
<org.picocontainer.PicoLifecycleException: java.lang.Object getInstance()>/$stack1
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findGetter(java.lang.Object,java.lang.String)>/$stack5
<br.com.caelum.vraptor.http.ognl.ReflectionBasedNullHandler: java.lang.reflect.Method findSetter(java.lang.Object,java.lang.String,java.lang.Class)>/$stack6
<br.com.caelum.vraptor.http.route.RulesTest: void setup()>/$stack7
<com.google.gson.JsonPrimitive: boolean isBoolean()>/$stack1
<com.google.gson.JsonPrimitive: boolean isNumber()>/$stack1
<com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()>/$stack1
<com.google.gson.JsonPrimitive: boolean isString()>/$stack1
<com.google.gson.JsonPrimitive: java.math.BigDecimal getAsBigDecimal()>/$stack1
<com.google.gson.JsonPrimitive: java.math.BigDecimal getAsBigDecimal()>/$stack4
<com.google.gson.JsonPrimitive: java.math.BigInteger getAsBigInteger()>/$stack1
<com.google.gson.JsonPrimitive: java.math.BigInteger getAsBigInteger()>/$stack4
<com.google.gson.JsonPrimitive: int hashCode()>/$stack3
<com.google.gson.JsonPrimitive: int hashCode()>/$stack5
<com.google.gson.JsonPrimitive: int hashCode()>/$stack7
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack9
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack11
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack14
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack16
<com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)>/$stack36
<com.google.gson.JsonPrimitive: boolean isIntegral(com.google.gson.JsonPrimitive)>/$stack2
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack9
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack11
<br.com.caelum.vraptor.interceptor.OutjectResult: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack14
<br.com.caelum.vraptor.serialization.xstream.Serializee: java.lang.Object getRoot()>/$stack1
<org.springframework.expression.common.CompositeStringExpression: java.lang.String getExpressionString()>/$stack1
<br.com.caelum.vraptor.core.DefaultStaticContentHandler: boolean requestingStaticFile(javax.servlet.http.HttpServletRequest)>/$stack3
<com.google.common.collect.Iterators$7: java.lang.Object computeNext()>/$stack7
<javassist.CtField: void <init>(javassist.CtField,javassist.CtClass)>/fi#_87
<javassist.CtField: void <init>(javassist.CtField,javassist.CtClass)>/$stack7
<javassist.CtField: void <init>(javassist.CtField,javassist.CtClass)>/$stack9
<javassist.CtField: void <init>(javassist.CtField,javassist.CtClass)>/$stack11
<javassist.CtField: void <init>(javassist.CtField,javassist.CtClass)>/$stack14
<net.vidageek.mirror.invoke.MethodHandlerByName: java.lang.reflect.Method getMethod(java.lang.Object[])>/$stack19
<javassist.CtField: java.lang.String toString()>/$stack9
<javassist.CtField: void extendToString(java.lang.StringBuffer)>/$stack6
<javassist.CtField: javassist.bytecode.FieldInfo getFieldInfo()>/$stack2
<javassist.CtField: javassist.bytecode.FieldInfo getFieldInfo2()>/$stack1
<javassist.CtField: java.lang.String getName()>/$stack1
<javassist.CtField: void setName(java.lang.String)>/$stack3
<javassist.CtField: int getModifiers()>/$stack1
<javassist.CtField: void setModifiers(int)>/$stack3
<javassist.CtField: java.lang.String getSignature()>/$stack1
<javassist.CtField: javassist.CtClass getType()>/$stack1
<javassist.CtField: void setType(javassist.CtClass)>/$stack3
<javassist.CtField: java.lang.Object getConstantValue()>/$stack4
<javassist.CtField: java.lang.Object getConstantValue()>/$stack6
<javassist.CtField: java.lang.Object getConstantValue()>/$stack17
<javassist.CtField: byte[] getAttribute(java.lang.String)>/$stack3
<javassist.CtField: void setAttribute(java.lang.String,byte[])>/$stack5
<javassist.CtField: void setAttribute(java.lang.String,byte[])>/$stack6
<sun.security.pkcs.ContentInfo: sun.security.util.DerValue getContent()>/$stack1
<sun.security.pkcs.ContentInfo: byte[] getData()>/$stack5
<sun.security.pkcs.ContentInfo: byte[] getData()>/$stack4
<sun.security.pkcs.ContentInfo: void encode(sun.security.util.DerOutputStream)>/$stack7
<sun.security.pkcs.ContentInfo: void encode(sun.security.util.DerOutputStream)>/$stack9
<sun.security.pkcs.ContentInfo: byte[] getContentBytes()>/$stack2
<sun.security.pkcs.ContentInfo: byte[] getContentBytes()>/$stack4
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void setup()>/$stack1
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsADownloadShouldUseIt()>/$stack3
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAInputStreamDownload()>/$stack4
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAnInputStreamShouldCreateAByteArrayDownload()>/$stack4
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsAFileShouldCreateAFileDownload()>/$stack5
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack1
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack19
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasUsedShouldDoNothing()>/$stack5
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasNotUsedShouldThrowNPE()>/$stack2
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasNotUsedShouldThrowNPE()>/$stack17
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void whenResultIsNullAndResultWasNotUsedShouldThrowNPE()>/$stack6
<com.google.common.collect.Iterators$8: java.lang.Object next()>/$stack4
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack4
<br.com.caelum.vraptor.interceptor.DownloadInterceptorTest: void shouldThrowInterceptionExceptionIfIOExceptionOccurs()>/$stack8
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack14
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack31
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack25
<br.com.caelum.vraptor.serialization.DefaultRepresentationResult: br.com.caelum.vraptor.serialization.Serializer from(java.lang.Object,java.lang.String)>/$stack9
<br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest$Bazinga: org.hibernate.proxy.HibernateProxy getValue()>/$stack1
<javassist.CtConstructor: boolean isConstructor()>/$stack1
<javassist.CtConstructor: boolean isClassInitializer()>/$stack1
<javassist.CtConstructor: java.lang.String getName()>/$stack1
<javassist.CtConstructor: boolean callsSuper()>/$stack4
<javassist.CtConstructor: void insertBeforeBody(java.lang.String)>/$stack9
<javassist.CtConstructor: void insertBeforeBody(java.lang.String)>/$stack13
<javassist.CtConstructor: void insertBeforeBody(java.lang.String)>/$stack27
<javassist.CtConstructor: javassist.CtMethod toMethod(java.lang.String,javassist.CtClass,javassist.ClassMap)>/$stack15
<net.vidageek.mirror.reflect.DefaultMethodReflector: java.lang.reflect.Method withAnyArgs()>/$stack27
<br.com.caelum.vraptor.http.EncodingHandlerFactoryTest: void shouldReturnANullHandlerWhenThereIsNoEncodingInitParameter()>/$stack2
<br.com.caelum.vraptor.http.EncodingHandlerFactoryTest: void shouldReturnAWebXmlHandlerWhenThereIsAnEncodingInitParameter()>/$stack2
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setSerializationId(java.lang.String)>/$stack2
<org.picocontainer.behaviors.Stored$Instance: java.lang.Object access$200(org.picocontainer.behaviors.Stored$Instance)>/$stack1
<org.springframework.beans.BeanWrapperImpl$3: java.lang.Object run()>/$stack1
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/$stack15
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>/$stack16
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method getReadMethod()>/$stack1
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method getWriteMethod()>/$stack1
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method getWriteMethodForActualAccess()>/$stack2
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class getPropertyType()>/$stack4
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class getPropertyType()>/$stack2
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class getPropertyType()>/$stack3
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack7
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack11
<br.com.caelum.vraptor.interceptor.FlashInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack21
<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAutowireCandidate(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.DependencyDescriptor)>/$stack14
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: org.springframework.core.MethodParameter getWriteMethodParameter()>/$stack1
<br.com.caelum.vraptor.interceptor.FlashInterceptor: br.com.caelum.vraptor.Result access$000(br.com.caelum.vraptor.interceptor.FlashInterceptor)>/$stack1
<br.com.caelum.vraptor.interceptor.FlashInterceptor: javax.servlet.http.HttpSession access$100(br.com.caelum.vraptor.interceptor.FlashInterceptor)>/$stack1
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: java.util.Locale getLocale()>/$stack1
<br.com.caelum.vraptor.validator.MethodValidatorInterceptor: java.util.Locale getLocale()>/$stack3
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldInvokePrimitiveConverter()>/$stack3
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldInvokePrimitiveConverter()>/$stack10
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldInvokeCustomTypeConverter()>/$stack2
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldInvokeCustomTypeConverter()>/$stack8
<br.com.caelum.vraptor.http.ognl.VRaptorConvertersAdapterTest: void shouldThrowExceptionIfNoConverterIsFound()>/$stack3
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object writeReplace()>/$stack1
<net.vidageek.mirror.invoke.MethodHandlerByMethod: java.lang.Object withArgs(java.lang.Object[])>/$stack3
<net.vidageek.mirror.invoke.MethodHandlerByMethod: java.lang.Object withArgs(java.lang.Object[])>/$stack10
<net.vidageek.mirror.invoke.MethodHandlerByMethod: java.lang.Object withArgs(java.lang.Object[])>/$stack23
<net.vidageek.mirror.invoke.MethodHandlerByMethod: java.lang.Object withArgs(java.lang.Object[])>/$stack27
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void shouldBeAbleToConvert()>/$stack1
<br.com.caelum.vraptor.converter.jodatime.LocalTimeConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<net.vidageek.mirror.invoke.DefaultInvocationHandler: net.vidageek.mirror.invoke.dsl.ConstructorHandler constructor()>/$stack1
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldDelegateToStatusWhenMovingToLogic()>/$stack1
<net.vidageek.mirror.invoke.DefaultInvocationHandler: java.lang.Object getterFor(java.lang.String)>/$stack24
<br.com.caelum.vraptor.view.DefaultHttpResultTest: void shouldWriteStringBody()>/$stack3
<br.com.caelum.vraptor.deserialization.JsonDeserializer: void aliasParams(java.lang.reflect.Method,java.lang.Class[],com.thoughtworks.xstream.XStream)>/$stack6
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldUseContainerForNewView()>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: br.com.caelum.vraptor.View mockResult(java.lang.Class)>/$stack4
<br.com.caelum.vraptor.core.DefaultResultTest: void shouldIncludeExtractedNameWhenSimplyIncluding()>/$stack3
<br.com.caelum.vraptor.http.ognl.GenericNullHandler: java.lang.Object instantiate(java.lang.Class)>/$stack19
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1: void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/$stack38
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1: void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/$stack43
<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1: void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>/$stack45
<org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters: java.lang.reflect.Constructor getConstructor()>/$stack1
<org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters: java.lang.Object[] getParameterArguments(org.picocontainer.PicoContainer)>/$stack6
<org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters: java.lang.Object[] getParameterArguments(org.picocontainer.PicoContainer)>/$stack12
<org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters: java.lang.Object[] getParameterArguments(org.picocontainer.PicoContainer)>/$stack32
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$1: void writeFieldsToStream(java.util.Map)>/$stack26
<com.thoughtworks.xstream.converters.reflection.SerializableConverter$1: void defaultWriteObject()>/$stack38
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack8
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack26
<br.com.caelum.vraptor.interceptor.download.DownloadInterceptor: void intercept(br.com.caelum.vraptor.core.InterceptorStack,br.com.caelum.vraptor.resource.ResourceMethod,java.lang.Object)>/$stack14
<org.mockito.internal.verification.MockAwareVerificationMode: java.lang.Object getMock()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldBeAbleToConvertWithPTBR()>/$stack1
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: org.picocontainer.MutablePicoContainer makeChildContainer()>/$stack1
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: org.picocontainer.MutablePicoContainer makeChildContainer()>/$stack3
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldBeAbleToConvertWithENUS()>/$stack1
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack5
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack10
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack26
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack14
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack18
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldUseTheDefaultLocale()>/$stack22
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void checkInitialization(java.lang.Class,java.lang.Class)>/$stack13
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void checkInitialization(java.lang.Class,java.lang.Class)>/$stack19
<br.com.caelum.vraptor.converter.l10n.LocaleBasedPrimitiveDoubleConverterTest: void shouldThrowExceptionWhenUnableToParse()>/$stack2
<br.com.caelum.vraptor.ioc.pico.PicoComponentRegistry: void init()>/$stack24
