Soot has run AnnotatedAndInitMockTransformer for 135 ms.
Total Number of Annotated Mocks in the benchmark: 41
Total Number of Mocks defined in default init<> in the benchmark: 0
Soot has run MockAnalysisPreTransformer for 64 ms.
Total Number of Mocks defined in @Before in the benchmark: 0

 ====================================== 
** CLASS org.apache.ibatis.executor.ResultExtractorTest
Number of Methods with MayMock in class: 2
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.executor.resultset.DefaultResultSetHandlerTest2
Number of Methods with MayMock in class: 2
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.executor.resultset.DefaultResultSetHandlerTest
Number of Methods with MayMock in class: 2
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.executor.statement.BaseStatementHandlerTest
Number of Methods with MayMock in class: 10
Number of Methods with ArrayMock in class: 2
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.mapping.ResultMappingTest
Number of Methods with MayMock in class: 2
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.session.SqlSessionTest
Number of Methods with MayMock in class: 2
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.transaction.managed.ManagedTransactionFactoryTest
Number of Methods with MayMock in class: 2
Number of Methods with ArrayMock in class: 1
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.cursor.defaults.DefaultCursorTest
Number of Methods with MayMock in class: 1
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.logging.jdbc.ConnectionLoggerTest
Number of Methods with MayMock in class: 4
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.logging.jdbc.PreparedStatementLoggerTest
Number of Methods with MayMock in class: 5
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.logging.jdbc.ResultSetLoggerTest
Number of Methods with MayMock in class: 3
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.logging.jdbc.BaseJdbcLoggerTest
Number of Methods with MayMock in class: 3
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.logging.jdbc.StatementLoggerTest
Number of Methods with MayMock in class: 4
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0



 ====================================== 
** CLASS org.apache.ibatis.jdbc.ScriptRunnerTest
Number of Methods with MayMock in class: 2
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.scripting.defaults.DefaultParameterHandlerTest
Number of Methods with MayMock in class: 1
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.LocalTimeTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.IntegerTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.ShortTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.NStringTypeHandlerTest
Number of Methods with MayMock in class: 4
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.OffsetTimeTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.LocalDateTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.SqlDateTypeHandlerTest
Number of Methods with MayMock in class: 4
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.BlobInputStreamTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.DoubleTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.BooleanTypeHandlerTest
Number of Methods with MayMock in class: 6
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.OffsetDateTimeTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.ClobReaderTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.SqlxmlTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.InstantTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.BigDecimalTypeHandlerTest
Number of Methods with MayMock in class: 4
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.BlobByteObjectArrayTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.YearMonthTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.ByteTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.ArrayTypeHandlerTest
Number of Methods with MayMock in class: 10
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.ZonedDateTimeTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.TimeOnlyTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.StringTypeHandlerTest
Number of Methods with MayMock in class: 4
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.MonthTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.SqlTimeTypeHandlerTest
Number of Methods with MayMock in class: 4
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.DateTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.ByteArrayTypeHandlerTest
Number of Methods with MayMock in class: 4
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.CharacterTypeHandlerTest
Number of Methods with MayMock in class: 8
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.ObjectTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.ClobTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.DateOnlyTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.FloatTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.EnumOrdinalTypeHandlerTest
Number of Methods with MayMock in class: 8
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.YearTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.JapaneseDateTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.LocalDateTimeTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.SqlTimetampTypeHandlerTest
Number of Methods with MayMock in class: 4
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.NClobTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.UnknownTypeHandlerTest
Number of Methods with MayMock in class: 11
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.BlobTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.LongTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.EnumTypeHandlerTest
Number of Methods with MayMock in class: 8
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.ByteObjectArrayTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
** CLASS org.apache.ibatis.type.BigIntegerTypeHandlerTest
Number of Methods with MayMock in class: 7
Number of Methods with ArrayMock in class: 0
Number of Methods with CollectionMock in class: 0

 ====================================== 
Benchmark mybatis_3_mybatis-3.5.6 Mock Stats
Total Number of Test/Before/After Methods: 1769
Total Number of Test/Before/After Methods with May Mock: 330
Total Number of Test/Before/After Methods with ArrayMock: 3
Total Number of Test/Before/After Methods with Collection: 0
Total Number of Helper Methods: 601
Total Number of Helper Methods with MayMock: 4
Total Number of Helper Methods with ArrayMock: 0
Total Number of Helper Methods with CollectionMock: 0

 ====================================== 
 INVOCATION STATISTICS 


** CLASS org.apache.ibatis.executor.CachingBatchExecutorTest


** CLASS org.apache.ibatis.executor.BatchExecutorTest


** CLASS org.apache.ibatis.executor.BaseExecutorTest


** CLASS org.apache.ibatis.executor.CachingSimpleExecutorTest


** CLASS org.apache.ibatis.executor.ResultExtractorTest



========== method  shouldExtractSet ========: 

	Total invocations on Mocks 4 : 

	InvokeExpr: interfaceinvoke $r12.<org.apache.ibatis.reflection.factory.ObjectFactory: boolean isCollection(java.lang.Class)>(r2)

	InvokeExpr: interfaceinvoke $r17.<org.apache.ibatis.reflection.factory.ObjectFactory: java.lang.Object create(java.lang.Class)>(r2)

	InvokeExpr: virtualinvoke $r21.<org.apache.ibatis.session.Configuration: org.apache.ibatis.reflection.MetaObject newMetaObject(java.lang.Object)>(r3)

	InvokeExpr: virtualinvoke $r30.<org.apache.ibatis.reflection.MetaObject: void addAll(java.util.List)>(r1)


** CLASS org.apache.ibatis.executor.loader.SerializableProxyTest


** CLASS org.apache.ibatis.executor.loader.CglibProxyTest


** CLASS org.apache.ibatis.executor.loader.JavassistProxyTest


** CLASS org.apache.ibatis.executor.resultset.DefaultResultSetHandlerTest2



========== method  shouldNotCallNextOnClosedResultSet_SimpleResult ========: 

	Total invocations on Mocks 8 : 

	InvokeExpr: interfaceinvoke $r15.<java.sql.Statement: java.sql.ResultSet getResultSet()>()

	InvokeExpr: interfaceinvoke $r19.<java.sql.ResultSetMetaData: int getColumnCount()>()

	InvokeExpr: interfaceinvoke $r23.<java.sql.ResultSetMetaData: java.lang.String getColumnLabel(int)>(1)

	InvokeExpr: interfaceinvoke $r26.<java.sql.ResultSetMetaData: int getColumnType(int)>(1)

	InvokeExpr: interfaceinvoke $r30.<java.sql.ResultSetMetaData: java.lang.String getColumnClassName(int)>(1)

	InvokeExpr: interfaceinvoke $r35.<java.sql.Statement: java.sql.Connection getConnection()>()

	InvokeExpr: interfaceinvoke $r39.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()

	InvokeExpr: interfaceinvoke $r43.<java.sql.DatabaseMetaData: boolean supportsMultipleResultSets()>()



========== method  shouldNotCallNextOnClosedResultSet_NestedResult ========: 

	Total invocations on Mocks 5 : 

	InvokeExpr: interfaceinvoke $r19.<java.sql.Statement: java.sql.ResultSet getResultSet()>()

	InvokeExpr: interfaceinvoke $r23.<java.sql.ResultSetMetaData: int getColumnCount()>()

	InvokeExpr: interfaceinvoke $r27.<java.sql.ResultSetMetaData: java.lang.String getColumnLabel(int)>(1)

	InvokeExpr: interfaceinvoke $r30.<java.sql.ResultSetMetaData: int getColumnType(int)>(1)

	InvokeExpr: interfaceinvoke $r34.<java.sql.ResultSetMetaData: java.lang.String getColumnClassName(int)>(1)


** CLASS org.apache.ibatis.executor.resultset.DefaultResultSetHandlerTest



========== method  shouldRetainColumnNameCase ========: 

	Total invocations on Mocks 12 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.Statement: java.sql.ResultSet getResultSet()>()

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: java.sql.ResultSetMetaData getMetaData()>()

	InvokeExpr: interfaceinvoke $r15.<java.sql.ResultSet: int getType()>()

	InvokeExpr: interfaceinvoke $r19.<java.sql.ResultSet: boolean next()>()

	InvokeExpr: interfaceinvoke $r25.<java.sql.ResultSet: int getInt(java.lang.String)>("CoLuMn1")

	InvokeExpr: interfaceinvoke $r29.<java.sql.ResultSetMetaData: int getColumnCount()>()

	InvokeExpr: interfaceinvoke $r33.<java.sql.ResultSetMetaData: java.lang.String getColumnLabel(int)>(1)

	InvokeExpr: interfaceinvoke $r36.<java.sql.ResultSetMetaData: int getColumnType(int)>(1)

	InvokeExpr: interfaceinvoke $r40.<java.sql.ResultSetMetaData: java.lang.String getColumnClassName(int)>(1)

	InvokeExpr: interfaceinvoke $r45.<java.sql.Statement: java.sql.Connection getConnection()>()

	InvokeExpr: interfaceinvoke $r49.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()

	InvokeExpr: interfaceinvoke $r53.<java.sql.DatabaseMetaData: boolean supportsMultipleResultSets()>()



========== method  shouldThrowExceptionWithColumnName ========: 

	Total invocations on Mocks 5 : 

	InvokeExpr: virtualinvoke r4.<org.apache.ibatis.executor.resultset.ResultSetWrapper: java.sql.ResultSet getResultSet()>()

	InvokeExpr: virtualinvoke r5.<org.apache.ibatis.mapping.ResultMapping: java.lang.String getColumn()>()

	InvokeExpr: virtualinvoke r5.<org.apache.ibatis.mapping.ResultMapping: org.apache.ibatis.type.TypeHandler getTypeHandler()>()

	InvokeExpr: interfaceinvoke r6.<org.apache.ibatis.type.TypeHandler: java.lang.Object getResult(java.sql.ResultSet,java.lang.String)>($r25, $r27)

	InvokeExpr: virtualinvoke r5.<org.apache.ibatis.mapping.ResultMapping: java.lang.String toString()>()


** CLASS org.apache.ibatis.executor.statement.BaseStatementHandlerTest



========== method  specifyMappedStatementTimeoutOnly ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r11.<java.sql.Statement: void setQueryTimeout(int)>(10)



========== method  specifyDefaultTimeoutOnly ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r14.<java.sql.Statement: void setQueryTimeout(int)>(20)



========== method  specifyTransactionTimeout ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r9.<java.sql.Statement: void setQueryTimeout(int)>(5)



========== method  specifyQueryTimeoutZeroAndTransactionTimeout ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r15.<java.sql.Statement: void setQueryTimeout(int)>(5)



========== method  specifyMappedStatementTimeoutAndDefaultTimeout ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r17.<java.sql.Statement: void setQueryTimeout(int)>(30)

	InvokeExpr: virtualinvoke $r21.<org.apache.ibatis.session.Configuration: java.lang.Integer getDefaultStatementTimeout()>()



========== method  specifyQueryTimeoutAndTransactionTimeoutMinIsQueryTimeout ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r15.<java.sql.Statement: void setQueryTimeout(int)>(10)



========== method  specifyQueryTimeoutAndTransactionTimeoutMinIsTransactionTimeout ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r15.<java.sql.Statement: void setQueryTimeout(int)>(10)

	InvokeExpr: interfaceinvoke $r18.<java.sql.Statement: void setQueryTimeout(int)>(5)



========== method  specifyQueryTimeoutAndTransactionTimeoutWithSameValue ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r15.<java.sql.Statement: void setQueryTimeout(int)>(10)


** CLASS org.apache.ibatis.executor.CachingReuseExecutorTest


** CLASS org.apache.ibatis.executor.ReuseExecutorTest


** CLASS org.apache.ibatis.executor.ErrorContextTest


** CLASS org.apache.ibatis.cache.LruCacheTest


** CLASS org.apache.ibatis.cache.ScheduledCacheTest


** CLASS org.apache.ibatis.cache.WeakCacheTest


** CLASS org.apache.ibatis.cache.BaseCacheTest


** CLASS org.apache.ibatis.cache.FifoCacheTest


** CLASS org.apache.ibatis.cache.CacheKeyTest


** CLASS org.apache.ibatis.cache.SerializedCacheTest


** CLASS org.apache.ibatis.cache.SuperCacheTest


** CLASS org.apache.ibatis.cache.PerpetualCacheTest


** CLASS org.apache.ibatis.cache.SoftCacheTest


** CLASS org.apache.ibatis.mapping.CacheBuilderTest


** CLASS org.apache.ibatis.mapping.ResultMappingTest


** CLASS org.apache.ibatis.mapping.BoundSqlTest


** CLASS org.apache.ibatis.session.AutoMappingUnknownColumnBehaviorTest


** CLASS org.apache.ibatis.session.SqlSessionTest


** CLASS org.apache.ibatis.session.SqlSessionManagerTest


** CLASS org.apache.ibatis.transaction.managed.ManagedTransactionFactoryTest



========== method  shouldEnsureThatCallsToManagedTransactionAPIDoNotForwardToManagedConnections ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r10.<java.sql.Connection: void close()>()


** CLASS org.apache.ibatis.binding.BindingTest


** CLASS org.apache.ibatis.binding.MapperMethodParamTest


** CLASS org.apache.ibatis.binding.WrongNamespacesTest


** CLASS org.apache.ibatis.binding.FlushTest


** CLASS org.apache.ibatis.binding.WrongMapperTest


** CLASS org.apache.ibatis.cursor.defaults.DefaultCursorTest



========== method  shouldCloseImmediatelyIfResultSetIsClosed ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSetMetaData: int getColumnCount()>()


** CLASS org.apache.ibatis.parsing.PropertyParserTest


** CLASS org.apache.ibatis.parsing.XPathParserTest


** CLASS org.apache.ibatis.parsing.GenericTokenParserTest


** CLASS org.apache.ibatis.logging.jdbc.ConnectionLoggerTest



========== method  shouldPrintPrepareStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<org.apache.ibatis.logging.Log: boolean isDebugEnabled()>()

	InvokeExpr: interfaceinvoke $r10.<org.apache.ibatis.logging.Log: void debug(java.lang.String)>($r11)



========== method  shouldPrintPrepareCall ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<org.apache.ibatis.logging.Log: boolean isDebugEnabled()>()

	InvokeExpr: interfaceinvoke $r10.<org.apache.ibatis.logging.Log: void debug(java.lang.String)>($r11)



========== method  shouldNotPrintCreateStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<org.apache.ibatis.logging.Log: void debug(java.lang.String)>($r8)


** CLASS org.apache.ibatis.logging.jdbc.PreparedStatementLoggerTest



========== method  shouldPrintParameters ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r2.<org.apache.ibatis.logging.Log: boolean isDebugEnabled()>()

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery(java.lang.String)>($r8)

	InvokeExpr: interfaceinvoke $r17.<org.apache.ibatis.logging.Log: void debug(java.lang.String)>($r18)



========== method  shouldPrintNullParameters ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r1.<org.apache.ibatis.logging.Log: boolean isDebugEnabled()>()

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: boolean execute(java.lang.String)>($r7)

	InvokeExpr: interfaceinvoke $r17.<org.apache.ibatis.logging.Log: void debug(java.lang.String)>($r18)



========== method  shouldNotPrintLog ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r8.<org.apache.ibatis.logging.Log: void debug(java.lang.String)>($r9)



========== method  shouldPrintUpdateCount ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r1.<org.apache.ibatis.logging.Log: boolean isDebugEnabled()>()

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: int getUpdateCount()>()

	InvokeExpr: interfaceinvoke $r14.<org.apache.ibatis.logging.Log: void debug(java.lang.String)>($r15)


** CLASS org.apache.ibatis.logging.jdbc.ResultSetLoggerTest



========== method  setup ========: 

	Total invocations on Mocks 6 : 

	InvokeExpr: interfaceinvoke $r2.<java.sql.ResultSet: boolean next()>()

	InvokeExpr: interfaceinvoke $r7.<java.sql.ResultSet: java.sql.ResultSetMetaData getMetaData()>()

	InvokeExpr: interfaceinvoke $r12.<java.sql.ResultSetMetaData: int getColumnCount()>()

	InvokeExpr: interfaceinvoke $r17.<java.sql.ResultSetMetaData: int getColumnType(int)>(1)

	InvokeExpr: interfaceinvoke $r22.<java.sql.ResultSetMetaData: java.lang.String getColumnLabel(int)>(1)

	InvokeExpr: interfaceinvoke $r26.<org.apache.ibatis.logging.Log: boolean isTraceEnabled()>()



========== method  shouldNotPrintBlobs ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r3.<org.apache.ibatis.logging.Log: void trace(java.lang.String)>("<==    Columns: ColumnName")

	InvokeExpr: interfaceinvoke $r6.<org.apache.ibatis.logging.Log: void trace(java.lang.String)>("<==        Row: <<BLOB>>")



========== method  shouldPrintVarchars ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r7.<org.apache.ibatis.logging.Log: void trace(java.lang.String)>("<==    Columns: ColumnName")

	InvokeExpr: interfaceinvoke $r10.<org.apache.ibatis.logging.Log: void trace(java.lang.String)>("<==        Row: value")


** CLASS org.apache.ibatis.logging.jdbc.BaseJdbcLoggerTest



========== method  shouldDescribePrimitiveArrayParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r3.<java.sql.Array: java.lang.Object getArray()>()



========== method  shouldDescribeObjectArrayParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r3.<java.sql.Array: java.lang.Object getArray()>()


** CLASS org.apache.ibatis.logging.jdbc.StatementLoggerTest



========== method  shouldPrintLog ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<org.apache.ibatis.logging.Log: boolean isDebugEnabled()>()

	InvokeExpr: interfaceinvoke $r10.<org.apache.ibatis.logging.Log: void debug(java.lang.String)>($r11)



========== method  shouldPrintLogForUpdate ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r2.<org.apache.ibatis.logging.Log: boolean isDebugEnabled()>()

	InvokeExpr: interfaceinvoke $r7.<java.sql.Statement: boolean execute(java.lang.String)>($r8)

	InvokeExpr: interfaceinvoke $r16.<org.apache.ibatis.logging.Log: void debug(java.lang.String)>($r17)



========== method  shouldNotPrintLog ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<org.apache.ibatis.logging.Log: void debug(java.lang.String)>($r8)


** CLASS org.apache.ibatis.logging.LogFactoryTest


** CLASS org.apache.ibatis.submitted.cacheorder.CacheOrderTest


** CLASS org.apache.ibatis.submitted.blobtest.BlobTest


** CLASS org.apache.ibatis.submitted.global_variables_defaults.CustomizationTest


** CLASS org.apache.ibatis.submitted.global_variables_defaults.AnnotationMapperTest


** CLASS org.apache.ibatis.submitted.global_variables_defaults.XmlMapperTest


** CLASS org.apache.ibatis.submitted.global_variables_defaults.ConfigurationTest


** CLASS org.apache.ibatis.submitted.refcursor.RefCursorTest


** CLASS org.apache.ibatis.submitted.map_class_name_conflict.MapperNameTest


** CLASS org.apache.ibatis.submitted.global_variables.BaseTest


** CLASS org.apache.ibatis.submitted.hashmaptypehandler.HashMapTypeHandlerTest


** CLASS org.apache.ibatis.submitted.deferload_common_property.CommonPropertyDeferLoadTest


** CLASS org.apache.ibatis.submitted.order_prefix_removed.OrderPrefixRemovedTest


** CLASS org.apache.ibatis.submitted.orphan_result_maps.OrphanResultMapTest


** CLASS org.apache.ibatis.submitted.include_property.IncludePropertyErrorTest


** CLASS org.apache.ibatis.submitted.include_property.IncludePropertyTest


** CLASS org.apache.ibatis.submitted.sql.PostgresSQLTest


** CLASS org.apache.ibatis.submitted.sql.HsqldbSQLTest


** CLASS org.apache.ibatis.submitted.generictypes.GenericTypesTest


** CLASS org.apache.ibatis.submitted.nestedresulthandler.NestedResultHandlerTest


** CLASS org.apache.ibatis.submitted.blocking_cache.BlockingCacheTest


** CLASS org.apache.ibatis.submitted.javassist.JavassistTest


** CLASS org.apache.ibatis.submitted.primitive_array.PrimitiveArrayTest


** CLASS org.apache.ibatis.submitted.complex_column.ComplexColumnTest


** CLASS org.apache.ibatis.submitted.array_result_type.ArrayResultTypeTest


** CLASS org.apache.ibatis.submitted.cache.CacheTest


** CLASS org.apache.ibatis.submitted.propertiesinmapperfiles.PropertiesInMappersTest


** CLASS org.apache.ibatis.submitted.integer_enum.IntegerEnumTest


** CLASS org.apache.ibatis.submitted.ognl_enum.EnumWithOgnlTest


** CLASS org.apache.ibatis.submitted.multipleresultsetswithassociation.MultipleResultSetTest


** CLASS org.apache.ibatis.submitted.dynsql.DynSqlTest


** CLASS org.apache.ibatis.submitted.heavy_initial_load.HeavyInitialLoadTest


** CLASS org.apache.ibatis.submitted.sqlprovider.ProviderMethodResolutionTest


** CLASS org.apache.ibatis.submitted.sqlprovider.SqlProviderTest


** CLASS org.apache.ibatis.submitted.custom_collection_handling.CustomCollectionHandlingTest


** CLASS org.apache.ibatis.submitted.complex_property.ComponentTest


** CLASS org.apache.ibatis.submitted.lazy_properties.LazyPropertiesTest


** CLASS org.apache.ibatis.submitted.result_handler.ResulthandlerTest


** CLASS org.apache.ibatis.submitted.result_handler_type.DefaultResultHandlerTypeTest


** CLASS org.apache.ibatis.submitted.automapping.AutomappingTest


** CLASS org.apache.ibatis.submitted.association_nested.FolderMapperTest


** CLASS org.apache.ibatis.submitted.count.CountTest


** CLASS org.apache.ibatis.submitted.ancestor_ref.AncestorRefTest


** CLASS org.apache.ibatis.submitted.emptycollection.DaoTest


** CLASS org.apache.ibatis.submitted.array_type_handler.ArrayTypeHandlerTest


** CLASS org.apache.ibatis.submitted.valueinmap.ValueInMapTest


** CLASS org.apache.ibatis.submitted.batch_test.BatchTest


** CLASS org.apache.ibatis.submitted.null_associations.FooMapperTest


** CLASS org.apache.ibatis.submitted.parent_reference_3level.BlogTest


** CLASS org.apache.ibatis.submitted.multiple_resultsets.MultipleResultTest


** CLASS org.apache.ibatis.submitted.stringlist.StringListTest


** CLASS org.apache.ibatis.submitted.encoding.EncodingTest


** CLASS org.apache.ibatis.submitted.enumtypehandler_on_map.EnumTypeHandlerTest


** CLASS org.apache.ibatis.submitted.mapper_extend.MapperExtendTest


** CLASS org.apache.ibatis.submitted.initialized_collection_property.AuthorDAOTest


** CLASS org.apache.ibatis.submitted.collectionparameters.CollectionParametersTest


** CLASS org.apache.ibatis.submitted.nonexistentvariables.NonExistentVariablesTest


** CLASS org.apache.ibatis.submitted.param_name_resolve.ActualParamNameTest


** CLASS org.apache.ibatis.submitted.param_name_resolve.NoActualParamNameTest


** CLASS org.apache.ibatis.submitted.column_forwarding.ColumnForwardingTest


** CLASS org.apache.ibatis.submitted.parametrizedlist.ParametrizedListTest


** CLASS org.apache.ibatis.submitted.extend.ExtendTest


** CLASS org.apache.ibatis.submitted.lazy_deserialize.LazyDeserializeTest


** CLASS org.apache.ibatis.submitted.timestamp_with_timezone.TimestampWithTimezoneTypeHandlerTest


** CLASS org.apache.ibatis.submitted.force_flush_on_select.ForceFlushOnSelectTest


** CLASS org.apache.ibatis.submitted.call_setters_on_nulls_again.MyBatisTest


** CLASS org.apache.ibatis.submitted.no_param_type.NoParamTypeTest


** CLASS org.apache.ibatis.submitted.foreach.ForEachTest


** CLASS org.apache.ibatis.submitted.timezone_edge_case.TimezoneEdgeCaseTest


** CLASS org.apache.ibatis.submitted.constructor_automapping.ConstructorAutomappingTest


** CLASS org.apache.ibatis.submitted.flush_statement_npe.FlushStatementNpeTest


** CLASS org.apache.ibatis.submitted.substitution_in_annots.SubstitutionInAnnotsTest


** CLASS org.apache.ibatis.submitted.ognlstatic.OgnlStaticTest


** CLASS org.apache.ibatis.submitted.nested.NestedForEachTest


** CLASS org.apache.ibatis.submitted.uuid_test.UUIDTest


** CLASS org.apache.ibatis.submitted.multiple_discriminator.MultipleDiscriminatorTest


** CLASS org.apache.ibatis.submitted.column_prefix.ColumnPrefixAutoMappingTest


** CLASS org.apache.ibatis.submitted.column_prefix.ColumnPrefixTest


** CLASS org.apache.ibatis.submitted.discriminator.DiscriminatorTest


** CLASS org.apache.ibatis.submitted.includes.IncludeTest


** CLASS org.apache.ibatis.submitted.simplelistparameter.SimpleListParameterTest


** CLASS org.apache.ibatis.submitted.constructor_columnprefix.ConstructorColumnPrefixTest


** CLASS org.apache.ibatis.submitted.annotion_many_one_add_columnprefix.OneManyColumnPrefixTest


** CLASS org.apache.ibatis.submitted.parent_childs.ParentChildTest


** CLASS org.apache.ibatis.submitted.immutable_constructor.ImmutablePOJOTest


** CLASS org.apache.ibatis.submitted.nested_query_cache.NestedQueryCacheTest


** CLASS org.apache.ibatis.submitted.cursor_simple.PostgresCursorTest


** CLASS org.apache.ibatis.submitted.cursor_simple.CursorSimpleTest


** CLASS org.apache.ibatis.submitted.cursor_simple.MysqlCursorTest


** CLASS org.apache.ibatis.submitted.associationtype.AssociationTypeTest


** CLASS org.apache.ibatis.submitted.use_actual_param_name.UseActualParamNameTest


** CLASS org.apache.ibatis.submitted.manyanno.ManyAnnoTest


** CLASS org.apache.ibatis.submitted.primitives.PrimitivesTest


** CLASS org.apache.ibatis.submitted.dml_return_types.DmlMapperReturnTypesTest


** CLASS org.apache.ibatis.submitted.lazyload_proxyfactory_comparison.AbstractLazyTest


** CLASS org.apache.ibatis.submitted.optional_on_mapper_method.OptionalOnMapperMethodTest


** CLASS org.apache.ibatis.submitted.extends_with_constructor.NpeExtendsTest


** CLASS org.apache.ibatis.submitted.xml_external_ref.MultipleIncludeTest


** CLASS org.apache.ibatis.submitted.xml_external_ref.ParameterMapReferenceTest


** CLASS org.apache.ibatis.submitted.xml_external_ref.ReverseIncludeTest


** CLASS org.apache.ibatis.submitted.xml_external_ref.ShortNameTest


** CLASS org.apache.ibatis.submitted.xml_external_ref.ResultMapExtendsTest


** CLASS org.apache.ibatis.submitted.xml_external_ref.MultipleCrossIncludeTest


** CLASS org.apache.ibatis.submitted.xml_external_ref.NonFullyQualifiedNamespaceTest


** CLASS org.apache.ibatis.submitted.xml_external_ref.ResultMapReferenceTest


** CLASS org.apache.ibatis.submitted.xml_external_ref.XmlExternalRefTest


** CLASS org.apache.ibatis.submitted.xml_external_ref.MultipleReverseIncludeTest


** CLASS org.apache.ibatis.submitted.xml_external_ref.SameIdTest


** CLASS org.apache.ibatis.submitted.basetest.BaseTest


** CLASS org.apache.ibatis.submitted.lazyload_common_property.CommonPropertyLazyLoadTest


** CLASS org.apache.ibatis.submitted.inline_association_with_dot.InlineCollectionWithDotTest


** CLASS org.apache.ibatis.submitted.bringrags.SimpleObjectTest


** CLASS org.apache.ibatis.submitted.language.LanguageTest


** CLASS org.apache.ibatis.submitted.associationtest.AssociationTest


** CLASS org.apache.ibatis.submitted.call_setters_on_nulls.CallSettersOnNullsTest


** CLASS org.apache.ibatis.submitted.call_setters_on_nulls.DoNotCallSettersOnNullsTest


** CLASS org.apache.ibatis.submitted.typehandlerinjection.TypeHandlerInjectionTest


** CLASS org.apache.ibatis.submitted.foreach_map.ForEachMapTest


** CLASS org.apache.ibatis.submitted.postgres_genkeys.PostgresGeneratedKeysTest


** CLASS org.apache.ibatis.submitted.lazy_immutable.ImmutablePOJOTest


** CLASS org.apache.ibatis.submitted.duplicate_resource_loaded.DuplicateResourceTest


** CLASS org.apache.ibatis.submitted.keycolumn.InsertTest


** CLASS org.apache.ibatis.submitted.results_id.IdConflictTest


** CLASS org.apache.ibatis.submitted.results_id.ResultsIdTest


** CLASS org.apache.ibatis.submitted.nestedresulthandler_gh1551.NestedResultHandlerGh1551Test


** CLASS org.apache.ibatis.submitted.batch_keys.BatchKeysTest


** CLASS org.apache.ibatis.submitted.cursor_nested.CursorNestedTest


** CLASS org.apache.ibatis.submitted.member_access.MemberAccessTest


** CLASS org.apache.ibatis.submitted.multipleiterates.MultipleIteratesTest


** CLASS org.apache.ibatis.submitted.missing_id_property.MissingIdPropertyTest


** CLASS org.apache.ibatis.submitted.repeatable.RepeatableDeleteTest


** CLASS org.apache.ibatis.submitted.repeatable.RepeatableInsertTest


** CLASS org.apache.ibatis.submitted.repeatable.RepeatableUpdateTest


** CLASS org.apache.ibatis.submitted.repeatable.RepeatableErrorTest


** CLASS org.apache.ibatis.submitted.repeatable.RepeatableSelectTest


** CLASS org.apache.ibatis.submitted.mapper_type_parameter.MapperTypeParameterTest


** CLASS org.apache.ibatis.submitted.rounding.RoundingHandlersTest


** CLASS org.apache.ibatis.submitted.localtime.LocalTimeTest


** CLASS org.apache.ibatis.submitted.annotion_many_one_add_resultmapid.OneManyResultMapTest


** CLASS org.apache.ibatis.submitted.serializecircular.SerializeCircularTest


** CLASS org.apache.ibatis.submitted.result_set_type.ResultSetTypeTest


** CLASS org.apache.ibatis.submitted.disallowdotsonnames.DisallowDotsOnNamesTest


** CLASS org.apache.ibatis.submitted.maptypehandler.MapTypeHandlerTest


** CLASS org.apache.ibatis.submitted.resolution.cachereffromxml.CacheRefFromXmlTest


** CLASS org.apache.ibatis.submitted.resolution.deepresultmap.DeepResultMapTest


** CLASS org.apache.ibatis.submitted.resolution.cacherefs.CacheRefsTest


** CLASS org.apache.ibatis.submitted.resolution.javamethods.JavaMethodsTest


** CLASS org.apache.ibatis.submitted.multidb.MultiDbTest


** CLASS org.apache.ibatis.submitted.multidb.ProviderTest


** CLASS org.apache.ibatis.submitted.autodiscover.AutodiscoverTest


** CLASS org.apache.ibatis.submitted.inheritance.InheritanceTest


** CLASS org.apache.ibatis.submitted.dynsql2.DynSqlTest


** CLASS org.apache.ibatis.submitted.typehandler.TypeHandlerTest


** CLASS org.apache.ibatis.submitted.xml_references.EnumWithOgnlTest


** CLASS org.apache.ibatis.submitted.sptests.SPTest


** CLASS org.apache.ibatis.submitted.default_method.DefaultMethodTest


** CLASS org.apache.ibatis.submitted.raw_sql_source.RawSqlSourceTest


** CLASS org.apache.ibatis.submitted.duplicate_statements.DuplicateStatementsTest


** CLASS org.apache.ibatis.submitted.camelcase.CamelCaseMappingTest


** CLASS org.apache.ibatis.submitted.extendresultmap.ExtendResultMapTest


** CLASS org.apache.ibatis.submitted.criterion.CriterionTest


** CLASS org.apache.ibatis.submitted.selectkey.SelectKeyTest


** CLASS org.apache.ibatis.submitted.unknownobject.UnknownObjectTest


** CLASS org.apache.ibatis.submitted.primitive_result_type.PrimitiveResultTypeTest


** CLASS org.apache.ibatis.submitted.enum_with_method.EnumWithMethodTest


** CLASS org.apache.ibatis.submitted.generictyperesolution.GenericTypeResolutionTest


** CLASS org.apache.ibatis.submitted.empty_namespace.EmptyNamespaceTest


** CLASS org.apache.ibatis.submitted.empty_row.ReturnInstanceForEmptyRowTest


** CLASS org.apache.ibatis.submitted.nestedresulthandler_association.NestedResultHandlerAssociationTest


** CLASS org.apache.ibatis.submitted.resultmapwithassociationstest.ResultMapWithAssociationsTest


** CLASS org.apache.ibatis.submitted.enum_interface_type_handler.EnumInterfaceTypeHandlerTest


** CLASS org.apache.ibatis.submitted.complex_type.ComplexTypeTest


** CLASS org.apache.ibatis.submitted.nestedresulthandler_multiple_association.NestedResultHandlerMultipleAssociationTest


** CLASS org.apache.ibatis.submitted.enumtypehandler_on_annotation.EnumTypeHandlerUsingAnnotationTest


** CLASS org.apache.ibatis.submitted.cglib_lazy_error.CglibNPETest


** CLASS org.apache.ibatis.submitted.cglib_lazy_error.CglibNPELazyTest


** CLASS org.apache.ibatis.submitted.permissions.PermissionsTest


** CLASS org.apache.ibatis.submitted.refid_resolution.ExternalRefidResolutionTest


** CLASS org.apache.ibatis.submitted.refid_resolution.RefidResolutionTest


** CLASS org.apache.ibatis.submitted.named_constructor_args.NamedConstructorArgsUseActualNameTest


** CLASS org.apache.ibatis.submitted.named_constructor_args.InvalidNamedConstructorArgsTest


** CLASS org.apache.ibatis.submitted.named_constructor_args.NamedConstructorArgsTest


** CLASS org.apache.ibatis.submitted.not_null_column.NotNullColumnTest


** CLASS org.apache.ibatis.submitted.quotedcolumnnames.QuotedColumnNamesTest


** CLASS org.apache.ibatis.submitted.keygen.Jdbc3KeyGeneratorTest


** CLASS org.apache.ibatis.submitted.awful_table.AwfulTableTest


** CLASS org.apache.ibatis.submitted.overwritingproperties.FooMapperTest


** CLASS org.apache.ibatis.builder.XmlConfigBuilderTest


** CLASS org.apache.ibatis.builder.XmlMapperBuilderTest


** CLASS org.apache.ibatis.builder.SqlSourceBuilderTest


** CLASS org.apache.ibatis.builder.AnnotationMapperBuilderTest


** CLASS org.apache.ibatis.builder.xsd.XmlConfigBuilderTest


** CLASS org.apache.ibatis.builder.xsd.XmlMapperBuilderTest


** CLASS org.apache.ibatis.builder.xml.dynamic.DynamicSqlSourceTest


** CLASS org.apache.ibatis.builder.xml.dynamic.ExpressionEvaluatorTest


** CLASS org.apache.ibatis.builder.ParameterExpressionTest


** CLASS org.apache.ibatis.autoconstructor.AutoConstructorTest


** CLASS org.apache.ibatis.jdbc.SQLTest


** CLASS org.apache.ibatis.jdbc.SqlBuilderTest


** CLASS org.apache.ibatis.jdbc.PooledDataSourceTest


** CLASS org.apache.ibatis.jdbc.SelectBuilderTest


** CLASS org.apache.ibatis.jdbc.SqlRunnerTest


** CLASS org.apache.ibatis.jdbc.NullTest


** CLASS org.apache.ibatis.jdbc.ScriptRunnerTest



========== method  shouldAcceptDelimiterVariations ========: 

	Total invocations on Mocks 6 : 

	InvokeExpr: interfaceinvoke r1.<java.sql.Connection: java.sql.Statement createStatement()>()

	InvokeExpr: interfaceinvoke r2.<java.sql.Statement: int getUpdateCount()>()

	InvokeExpr: interfaceinvoke $r20.<java.sql.Statement: boolean execute(java.lang.String)>($r31)

	InvokeExpr: interfaceinvoke $r35.<java.sql.Statement: boolean execute(java.lang.String)>($r41)

	InvokeExpr: interfaceinvoke $r45.<java.sql.Statement: boolean execute(java.lang.String)>($r51)

	InvokeExpr: interfaceinvoke $r55.<java.sql.Statement: boolean execute(java.lang.String)>($r61)



========== method  shouldAcceptMultiCharDelimiter ========: 

	Total invocations on Mocks 4 : 

	InvokeExpr: interfaceinvoke r1.<java.sql.Connection: java.sql.Statement createStatement()>()

	InvokeExpr: interfaceinvoke r2.<java.sql.Statement: int getUpdateCount()>()

	InvokeExpr: interfaceinvoke $r20.<java.sql.Statement: boolean execute(java.lang.String)>($r31)

	InvokeExpr: interfaceinvoke $r35.<java.sql.Statement: boolean execute(java.lang.String)>($r41)


** CLASS org.apache.ibatis.scripting.LanguageDriverRegistryTest


** CLASS org.apache.ibatis.scripting.defaults.DefaultParameterHandlerTest



========== method  setParametersThrowsProperException ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke r2.<org.apache.ibatis.mapping.BoundSql: java.util.List getParameterMappings()>()


** CLASS org.apache.ibatis.scripting.xmltags.OgnlCacheTest


** CLASS org.apache.ibatis.datasource.jndi.JndiDataSourceFactoryTest


** CLASS org.apache.ibatis.datasource.unpooled.UnpooledDataSourceTest


** CLASS org.apache.ibatis.datasource.unpooled.NetworkTimeoutTest


** CLASS org.apache.ibatis.exceptions.GeneralExceptionsTest


** CLASS org.apache.ibatis.type.LocalTimeTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setObject(int,java.lang.Object)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.lang.Class)>("column", class "Ljava/time/LocalTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.lang.Class)>("column", class "Ljava/time/LocalTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/LocalTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/LocalTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/LocalTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/LocalTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.IntegerTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: void setInt(int,int)>(1, 100)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(java.lang.String)>("column")



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(int)>(1)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: int getInt(int)>(1)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: int getInt(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.ShortTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: void setShort(int,short)>(1, 100)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: short getShort(java.lang.String)>("column")



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: short getShort(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: short getShort(int)>(1)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: short getShort(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: short getShort(int)>(1)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: short getShort(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.NStringTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r5.<java.sql.PreparedStatement: void setNString(int,java.lang.String)>(1, "Hello")



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getNString(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getNString(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.String getNString(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()


** CLASS org.apache.ibatis.type.OffsetTimeTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setObject(int,java.lang.Object)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.lang.Class)>("column", class "Ljava/time/OffsetTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.lang.Class)>("column", class "Ljava/time/OffsetTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/OffsetTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/OffsetTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/OffsetTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/OffsetTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.LocalDateTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setObject(int,java.lang.Object)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.lang.Class)>("column", class "Ljava/time/LocalDate;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.lang.Class)>("column", class "Ljava/time/LocalDate;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/LocalDate;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/LocalDate;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/LocalDate;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/LocalDate;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.SqlDateTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setDate(int,java.sql.Date)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Date getDate(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Date getDate(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Date getDate(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.BlobInputStreamTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r9.<java.sql.PreparedStatement: void setBlob(int,java.io.InputStream)>(1, r1)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r5.<java.sql.ResultSet: java.sql.Blob getBlob(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r10.<java.sql.Blob: java.io.InputStream getBinaryStream()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Blob getBlob(java.lang.String)>("column")



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r5.<java.sql.ResultSet: java.sql.Blob getBlob(int)>(1)

	InvokeExpr: interfaceinvoke $r10.<java.sql.Blob: java.io.InputStream getBinaryStream()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Blob getBlob(int)>(1)



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r5.<java.sql.CallableStatement: java.sql.Blob getBlob(int)>(1)

	InvokeExpr: interfaceinvoke $r10.<java.sql.Blob: java.io.InputStream getBinaryStream()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Blob getBlob(int)>(1)


** CLASS org.apache.ibatis.type.DoubleTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: void setDouble(int,double)>(1, 100.0)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: double getDouble(java.lang.String)>("column")



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: double getDouble(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: double getDouble(int)>(1)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: double getDouble(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: double getDouble(int)>(1)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: double getDouble(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.BooleanTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: void setBoolean(int,boolean)>(1, 1)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: boolean getBoolean(java.lang.String)>("column")



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: boolean getBoolean(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: boolean getBoolean(int)>(1)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: boolean getBoolean(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: boolean getBoolean(int)>(1)


** CLASS org.apache.ibatis.type.OffsetDateTimeTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setObject(int,java.lang.Object)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.lang.Class)>("column", class "Ljava/time/OffsetDateTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.lang.Class)>("column", class "Ljava/time/OffsetDateTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/OffsetDateTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/OffsetDateTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/OffsetDateTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/OffsetDateTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.ClobReaderTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setClob(int,java.io.Reader)>(1, r1)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r3.<java.sql.ResultSet: java.sql.Clob getClob(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r8.<java.sql.Clob: java.io.Reader getCharacterStream()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Clob getClob(java.lang.String)>("column")



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Clob getClob(int)>(1)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Clob getClob(int)>(1)



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r3.<java.sql.CallableStatement: java.sql.Clob getClob(int)>(1)

	InvokeExpr: interfaceinvoke $r8.<java.sql.Clob: java.io.Reader getCharacterStream()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Clob getClob(int)>(1)


** CLASS org.apache.ibatis.type.SqlxmlTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 5 : 

	InvokeExpr: interfaceinvoke $r2.<java.sql.Connection: java.sql.SQLXML createSQLXML()>()

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: java.sql.Connection getConnection()>()

	InvokeExpr: interfaceinvoke $r17.<java.sql.PreparedStatement: void setSQLXML(int,java.sql.SQLXML)>(1, $r16)

	InvokeExpr: interfaceinvoke $r20.<java.sql.SQLXML: void setString(java.lang.String)>(r1)

	InvokeExpr: interfaceinvoke $r23.<java.sql.SQLXML: void free()>()



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r2.<java.sql.SQLXML: java.lang.String getString()>()

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: java.sql.SQLXML getSQLXML(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r16.<java.sql.SQLXML: void free()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.SQLXML getSQLXML(java.lang.String)>("column")



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r2.<java.sql.SQLXML: java.lang.String getString()>()

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: java.sql.SQLXML getSQLXML(int)>(1)

	InvokeExpr: interfaceinvoke $r16.<java.sql.SQLXML: void free()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.SQLXML getSQLXML(int)>(1)



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r2.<java.sql.SQLXML: java.lang.String getString()>()

	InvokeExpr: interfaceinvoke $r6.<java.sql.CallableStatement: java.sql.SQLXML getSQLXML(int)>(1)

	InvokeExpr: interfaceinvoke $r16.<java.sql.SQLXML: void free()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.SQLXML getSQLXML(int)>(1)


** CLASS org.apache.ibatis.type.InstantTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Timestamp getTimestamp(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Timestamp getTimestamp(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.BigDecimalTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setBigDecimal(int,java.math.BigDecimal)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.math.BigDecimal getBigDecimal(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.math.BigDecimal getBigDecimal(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.math.BigDecimal getBigDecimal(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.BlobByteObjectArrayTypeHandlerTest



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r3.<java.sql.ResultSet: java.sql.Blob getBlob(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r8.<java.sql.Blob: long length()>()

	InvokeExpr: interfaceinvoke $r13.<java.sql.Blob: byte[] getBytes(long,int)>(1L, 2)



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Blob getBlob(java.lang.String)>("column")



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r3.<java.sql.ResultSet: java.sql.Blob getBlob(int)>(1)

	InvokeExpr: interfaceinvoke $r8.<java.sql.Blob: long length()>()

	InvokeExpr: interfaceinvoke $r13.<java.sql.Blob: byte[] getBytes(long,int)>(1L, 2)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Blob getBlob(int)>(1)



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r3.<java.sql.CallableStatement: java.sql.Blob getBlob(int)>(1)

	InvokeExpr: interfaceinvoke $r8.<java.sql.Blob: long length()>()

	InvokeExpr: interfaceinvoke $r13.<java.sql.Blob: byte[] getBytes(long,int)>(1L, 2)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Blob getBlob(int)>(1)


** CLASS org.apache.ibatis.type.TypeAliasRegistryTest


** CLASS org.apache.ibatis.type.YearMonthTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, $r8)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r14.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r14.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r14.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.ByteTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: void setByte(int,byte)>(1, 100)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: byte getByte(java.lang.String)>("column")



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: byte getByte(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: byte getByte(int)>(1)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: byte getByte(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: byte getByte(int)>(1)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: byte getByte(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.ArrayTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setArray(int,java.sql.Array)>(1, $r6)



========== method  shouldSetStringArrayParameter ========: 

	Total invocations on Mocks 4 : 

	InvokeExpr: interfaceinvoke $r4.<java.sql.PreparedStatement: java.sql.Connection getConnection()>()

	InvokeExpr: interfaceinvoke r1.<java.sql.Connection: java.sql.Array createArrayOf(java.lang.String,java.lang.Object[])>($r9, $r11)

	InvokeExpr: interfaceinvoke $r21.<java.sql.PreparedStatement: void setArray(int,java.sql.Array)>(1, r2)

	InvokeExpr: interfaceinvoke $r23.<java.sql.Array: void free()>()



========== method  shouldSetNullParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: void setNull(int,int)>(1, 2003)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r2.<java.sql.ResultSet: java.sql.Array getArray(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r8.<java.sql.Array: java.lang.Object getArray()>()

	InvokeExpr: interfaceinvoke $r17.<java.sql.Array: void free()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Array getArray(java.lang.String)>("column")



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r2.<java.sql.ResultSet: java.sql.Array getArray(int)>(1)

	InvokeExpr: interfaceinvoke $r8.<java.sql.Array: java.lang.Object getArray()>()

	InvokeExpr: interfaceinvoke $r17.<java.sql.Array: void free()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Array getArray(int)>(1)



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r2.<java.sql.CallableStatement: java.sql.Array getArray(int)>(1)

	InvokeExpr: interfaceinvoke $r8.<java.sql.Array: java.lang.Object getArray()>()

	InvokeExpr: interfaceinvoke $r17.<java.sql.Array: void free()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Array getArray(int)>(1)


** CLASS org.apache.ibatis.type.ZonedDateTimeTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setObject(int,java.lang.Object)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.lang.Class)>("column", class "Ljava/time/ZonedDateTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.lang.Class)>("column", class "Ljava/time/ZonedDateTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/ZonedDateTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/ZonedDateTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/ZonedDateTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/ZonedDateTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.TimeOnlyTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setTime(int,java.sql.Time)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Time getTime(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Time getTime(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Time getTime(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Time getTime(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Time getTime(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Time getTime(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.SimpleTypeRegistryTest


** CLASS org.apache.ibatis.type.StringTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r5.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, "Hello")



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.TypeHandlerRegistryTest


** CLASS org.apache.ibatis.type.MonthTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setInt(int,int)>(1, $i0)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r2.<java.sql.ResultSet: int getInt(java.lang.String)>("column")



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r2.<java.sql.ResultSet: int getInt(int)>(1)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r2.<java.sql.CallableStatement: int getInt(int)>(1)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: int getInt(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.Jsr310TypeHandlerRegistryTest


** CLASS org.apache.ibatis.type.SqlTimeTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setTime(int,java.sql.Time)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Time getTime(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Time getTime(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Time getTime(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.DateTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r8.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Timestamp getTimestamp(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Timestamp getTimestamp(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.ByteArrayTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setBytes(int,byte[])>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: byte[] getBytes(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r14.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: byte[] getBytes(int)>(1)

	InvokeExpr: interfaceinvoke $r14.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: byte[] getBytes(int)>(1)

	InvokeExpr: interfaceinvoke $r14.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.CharacterTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, "a")



========== method  shouldSetNullParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setNull(int,int)>(1, $i0)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.ObjectTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r5.<java.sql.PreparedStatement: void setObject(int,java.lang.Object)>(1, "Hello")



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String)>("column")



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String)>("column")



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int)>(1)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int)>(1)



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int)>(1)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int)>(1)


** CLASS org.apache.ibatis.type.ClobTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r5.<java.sql.PreparedStatement: void setCharacterStream(int,java.io.Reader,int)>($i0, $r7, $i1)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Clob getClob(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.Clob: long length()>()

	InvokeExpr: interfaceinvoke $r11.<java.sql.Clob: java.lang.String getSubString(long,int)>(1L, 3)



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Clob getClob(java.lang.String)>("column")



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Clob getClob(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.Clob: long length()>()

	InvokeExpr: interfaceinvoke $r11.<java.sql.Clob: java.lang.String getSubString(long,int)>(1L, 3)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Clob getClob(int)>(1)



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Clob getClob(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.Clob: long length()>()

	InvokeExpr: interfaceinvoke $r11.<java.sql.Clob: java.lang.String getSubString(long,int)>(1L, 3)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Clob getClob(int)>(1)


** CLASS org.apache.ibatis.type.DateOnlyTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r8.<java.sql.PreparedStatement: void setDate(int,java.sql.Date)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Date getDate(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Date getDate(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Date getDate(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Date getDate(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Date getDate(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Date getDate(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.FloatTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: void setFloat(int,float)>(1, 100.0F)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: float getFloat(java.lang.String)>("column")



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: float getFloat(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: float getFloat(int)>(1)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: float getFloat(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: float getFloat(int)>(1)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: float getFloat(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.EnumOrdinalTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: void setInt(int,int)>(1, 0)



========== method  shouldSetNullParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setNull(int,int)>(1, $i0)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: int getInt(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: int getInt(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.YearTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setInt(int,int)>(1, $i0)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(java.lang.String)>("column")



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(int)>(1)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: int getInt(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: int getInt(int)>(1)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: int getInt(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.JapaneseDateTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setDate(int,java.sql.Date)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Date getDate(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Date getDate(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Date getDate(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Date getDate(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Date getDate(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Date getDate(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.LocalDateTimeTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setObject(int,java.lang.Object)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.lang.Class)>("column", class "Ljava/time/LocalDateTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String,java.lang.Class)>("column", class "Ljava/time/LocalDateTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/LocalDateTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/LocalDateTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/LocalDateTime;")

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int,java.lang.Class)>(1, class "Ljava/time/LocalDateTime;")

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.SqlTimetampTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Timestamp getTimestamp(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.NClobTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r5.<java.sql.PreparedStatement: void setCharacterStream(int,java.io.Reader,int)>($i0, $r7, $i1)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Clob getClob(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.Clob: long length()>()

	InvokeExpr: interfaceinvoke $r11.<java.sql.Clob: java.lang.String getSubString(long,int)>(1L, 3)



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Clob getClob(java.lang.String)>("column")



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Clob getClob(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.Clob: long length()>()

	InvokeExpr: interfaceinvoke $r11.<java.sql.Clob: java.lang.String getSubString(long,int)>(1L, 3)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Clob getClob(int)>(1)



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Clob getClob(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.Clob: long length()>()

	InvokeExpr: interfaceinvoke $r11.<java.sql.Clob: java.lang.String getSubString(long,int)>(1L, 3)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Clob getClob(int)>(1)


** CLASS org.apache.ibatis.type.UnknownTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r5.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, "Hello")



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 6 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.ResultSetMetaData getMetaData()>()

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSetMetaData: int getColumnCount()>()

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSetMetaData: java.lang.String getColumnLabel(int)>(1)

	InvokeExpr: interfaceinvoke $r15.<java.sql.ResultSetMetaData: java.lang.String getColumnClassName(int)>(1)

	InvokeExpr: interfaceinvoke $r21.<java.sql.ResultSetMetaData: int getColumnType(int)>(1)

	InvokeExpr: interfaceinvoke $r27.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("column")



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 4 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.ResultSetMetaData getMetaData()>()

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSetMetaData: java.lang.String getColumnClassName(int)>(1)

	InvokeExpr: interfaceinvoke $r12.<java.sql.ResultSetMetaData: int getColumnType(int)>(1)

	InvokeExpr: interfaceinvoke $r18.<java.sql.ResultSet: java.lang.String getString(int)>(1)



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int)>(1)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.Object getObject(int)>(1)



========== method  setParameterWithNullParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setNull(int,int)>(0, $i0)


** CLASS org.apache.ibatis.type.BlobTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: void setBinaryStream(int,java.io.InputStream,int)>($i0, $r8, $i1)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Blob getBlob(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.Blob: long length()>()

	InvokeExpr: interfaceinvoke $r11.<java.sql.Blob: byte[] getBytes(long,int)>(1L, 3)



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Blob getBlob(java.lang.String)>("column")



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Blob getBlob(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.Blob: long length()>()

	InvokeExpr: interfaceinvoke $r11.<java.sql.Blob: byte[] getBytes(long,int)>(1L, 3)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.sql.Blob getBlob(int)>(1)



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Blob getBlob(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.Blob: long length()>()

	InvokeExpr: interfaceinvoke $r11.<java.sql.Blob: byte[] getBytes(long,int)>(1L, 3)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.sql.Blob getBlob(int)>(1)


** CLASS org.apache.ibatis.type.LongTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: void setLong(int,long)>(1, 100L)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: long getLong(java.lang.String)>("column")



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: long getLong(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: long getLong(int)>(1)



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: long getLong(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: long getLong(int)>(1)



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: long getLong(int)>(1)

	InvokeExpr: interfaceinvoke $r6.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.EnumTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r6.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, "ONE")



========== method  shouldSetNullParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setNull(int,int)>(1, $i0)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r12.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r12.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r12.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.lang.String getString(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.ByteObjectArrayTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r10.<java.sql.PreparedStatement: void setBytes(int,byte[])>(1, $r9)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r3.<java.sql.ResultSet: byte[] getBytes(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r19.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: byte[] getBytes(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r3.<java.sql.ResultSet: byte[] getBytes(int)>(1)

	InvokeExpr: interfaceinvoke $r19.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: byte[] getBytes(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r3.<java.sql.CallableStatement: byte[] getBytes(int)>(1)

	InvokeExpr: interfaceinvoke $r19.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: byte[] getBytes(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.JdbcTypeTest


** CLASS org.apache.ibatis.type.BigIntegerTypeHandlerTest



========== method  shouldSetParameter ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: interfaceinvoke $r7.<java.sql.PreparedStatement: void setBigDecimal(int,java.math.BigDecimal)>(1, $r6)



========== method  shouldGetResultFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.math.BigDecimal getBigDecimal(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByName ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.math.BigDecimal getBigDecimal(java.lang.String)>("column")

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.math.BigDecimal getBigDecimal(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultNullFromResultSetByPosition ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.ResultSet: java.math.BigDecimal getBigDecimal(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.ResultSet: boolean wasNull()>()



========== method  shouldGetResultFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.math.BigDecimal getBigDecimal(int)>(1)

	InvokeExpr: interfaceinvoke $r13.<java.sql.CallableStatement: boolean wasNull()>()



========== method  shouldGetResultNullFromCallableStatement ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: interfaceinvoke $r1.<java.sql.CallableStatement: java.math.BigDecimal getBigDecimal(int)>(1)

	InvokeExpr: interfaceinvoke $r11.<java.sql.CallableStatement: boolean wasNull()>()


** CLASS org.apache.ibatis.type.GenericTypeSupportedInHierarchiesTestCase


** CLASS org.apache.ibatis.io.ResourcesTest


** CLASS org.apache.ibatis.io.ClassLoaderWrapperTest


** CLASS org.apache.ibatis.io.ExternalResourcesTest


** CLASS org.apache.ibatis.io.ResolverUtilTest


** CLASS org.apache.ibatis.io.VFSTest


** CLASS org.apache.ibatis.plugin.PluginTest


** CLASS org.apache.ibatis.reflection.MetaObjectTest


** CLASS org.apache.ibatis.reflection.TypeParameterResolverTest


** CLASS org.apache.ibatis.reflection.factory.DefaultObjectFactoryTest


** CLASS org.apache.ibatis.reflection.ArrayUtilTest


** CLASS org.apache.ibatis.reflection.MetaClassTest


** CLASS org.apache.ibatis.reflection.ExceptionUtilTest


** CLASS org.apache.ibatis.reflection.ReflectorTest


** CLASS org.testcontainers.dockerclient.DockerClientProviderStrategy

Benchmark Overall Stats 
Total Invocations: 19251
Invocations On Mocks: 575


** CLASS org.apache.ibatis.session.SqlSessionTest



========== method  shouldThrowExceptionIfTryingToAddStatementWithSameNameInXml ========: 

	Mock Counter: 2; 


** CLASS org.apache.ibatis.session.SqlSessionTest



========== method  shouldThrowExceptionIfTryingToAddStatementWithSameNameInAnnotation ========: 

	Mock Counter: 2; 


** CLASS org.apache.ibatis.cursor.defaults.DefaultCursorTest



========== method  shouldCloseImmediatelyIfResultSetIsClosed ========: 

	Mock Counter: 21; 


** CLASS org.apache.ibatis.type.UnknownTypeHandlerTest



========== method  setParameterWithNullParameterThrowsException ========: 

	Mock Counter: 1; 


** CLASS org.apache.ibatis.type.UnknownTypeHandlerTest



========== method  setParameterWithNonNullParameterThrowsException ========: 

	Mock Counter: 1; 


** CLASS org.apache.ibatis.type.UnknownTypeHandlerTest



========== method  getResultWithResultSetAndColumnNameThrowsException ========: 

	Mock Counter: 1; 


** CLASS org.apache.ibatis.type.UnknownTypeHandlerTest



========== method  getResultWithResultSetAndColumnIndexThrowsException ========: 

	Mock Counter: 1; 


** CLASS org.apache.ibatis.type.UnknownTypeHandlerTest



========== method  getResultWithCallableStatementAndColumnIndexThrowsException ========: 

	Mock Counter: 1; 

 ====================================== 
Imprecision Counters 
Total mock counter at conflow-flow merge: 30
Total array mock counter at conflow-flow merge: 0
Total collection mock counter at conflow-flow merge: 0

Soot has run MockAnalysisMainTransformer for 1139 ms.
[Thread-3] ERROR heros.solver.CountingThreadPoolExecutor - Worker thread execution failed: Failed to convert <org.mockito.plugins.MemberAccessor: java.lang.Object newInstance(java.lang.reflect.Constructor,org.mockito.plugins.MemberAccessor$OnConstruction,java.lang.Object[])>
java.lang.RuntimeException: Failed to convert <org.mockito.plugins.MemberAccessor: java.lang.Object newInstance(java.lang.reflect.Constructor,org.mockito.plugins.MemberAccessor$OnConstruction,java.lang.Object[])>
	at soot.asm.AsmMethodSource.getBody(AsmMethodSource.java:2040)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:402)
	at soot.PackManager$1.run(PackManager.java:1279)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.RuntimeException: Trying to create virtual invoke expression for interface type (org.mockito.plugins.MemberAccessor in file null). Use JInterfaceInvokeExpr instead!
	at soot.jimple.internal.JVirtualInvokeExpr.<init>(JVirtualInvokeExpr.java:49)
	at soot.jimple.Jimple.newVirtualInvokeExpr(Jimple.java:469)
	at soot.LambdaMetaFactory$ThunkMethodSource._invokeImplMethod(LambdaMetaFactory.java:699)
	at soot.LambdaMetaFactory$ThunkMethodSource.invokeImplMethod(LambdaMetaFactory.java:646)
	at soot.LambdaMetaFactory$ThunkMethodSource.getInvokeBody(LambdaMetaFactory.java:483)
	at soot.LambdaMetaFactory$ThunkMethodSource.getBody(LambdaMetaFactory.java:334)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:402)
	at soot.LambdaMetaFactory.makeLambdaHelper(LambdaMetaFactory.java:239)
	at soot.asm.AsmMethodSource.convertInvokeDynamicInsn(AsmMethodSource.java:1420)
	at soot.asm.AsmMethodSource.convert(AsmMethodSource.java:1791)
	at soot.asm.AsmMethodSource.getBody(AsmMethodSource.java:2038)
	... 5 more
Exception in thread "Thread-3" java.lang.RuntimeException: Failed to convert <org.mockito.plugins.MemberAccessor: java.lang.Object newInstance(java.lang.reflect.Constructor,org.mockito.plugins.MemberAccessor$OnConstruction,java.lang.Object[])>
	at soot.asm.AsmMethodSource.getBody(AsmMethodSource.java:2040)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:402)
	at soot.PackManager$1.run(PackManager.java:1279)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.RuntimeException: Trying to create virtual invoke expression for interface type (org.mockito.plugins.MemberAccessor in file null). Use JInterfaceInvokeExpr instead!
	at soot.jimple.internal.JVirtualInvokeExpr.<init>(JVirtualInvokeExpr.java:49)
	at soot.jimple.Jimple.newVirtualInvokeExpr(Jimple.java:469)
	at soot.LambdaMetaFactory$ThunkMethodSource._invokeImplMethod(LambdaMetaFactory.java:699)
	at soot.LambdaMetaFactory$ThunkMethodSource.invokeImplMethod(LambdaMetaFactory.java:646)
	at soot.LambdaMetaFactory$ThunkMethodSource.getInvokeBody(LambdaMetaFactory.java:483)
	at soot.LambdaMetaFactory$ThunkMethodSource.getBody(LambdaMetaFactory.java:334)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:402)
	at soot.LambdaMetaFactory.makeLambdaHelper(LambdaMetaFactory.java:239)
	at soot.asm.AsmMethodSource.convertInvokeDynamicInsn(AsmMethodSource.java:1420)
	at soot.asm.AsmMethodSource.convert(AsmMethodSource.java:1791)
	at soot.asm.AsmMethodSource.getBody(AsmMethodSource.java:2038)
	... 5 more
java.lang.RuntimeException: Failed to convert <org.mockito.plugins.MemberAccessor: java.lang.Object newInstance(java.lang.reflect.Constructor,org.mockito.plugins.MemberAccessor$OnConstruction,java.lang.Object[])>
	at soot.asm.AsmMethodSource.getBody(AsmMethodSource.java:2040)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:402)
	at soot.PackManager$1.run(PackManager.java:1279)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.RuntimeException: Trying to create virtual invoke expression for interface type (org.mockito.plugins.MemberAccessor in file null). Use JInterfaceInvokeExpr instead!
	at soot.jimple.internal.JVirtualInvokeExpr.<init>(JVirtualInvokeExpr.java:49)
	at soot.jimple.Jimple.newVirtualInvokeExpr(Jimple.java:469)
	at soot.LambdaMetaFactory$ThunkMethodSource._invokeImplMethod(LambdaMetaFactory.java:699)
	at soot.LambdaMetaFactory$ThunkMethodSource.invokeImplMethod(LambdaMetaFactory.java:646)
	at soot.LambdaMetaFactory$ThunkMethodSource.getInvokeBody(LambdaMetaFactory.java:483)
	at soot.LambdaMetaFactory$ThunkMethodSource.getBody(LambdaMetaFactory.java:334)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:402)
	at soot.LambdaMetaFactory.makeLambdaHelper(LambdaMetaFactory.java:239)
	at soot.asm.AsmMethodSource.convertInvokeDynamicInsn(AsmMethodSource.java:1420)
	at soot.asm.AsmMethodSource.convert(AsmMethodSource.java:1791)
	at soot.asm.AsmMethodSource.getBody(AsmMethodSource.java:2038)
	... 5 more


Ouuups... something went wrong! Sorry about that.
Follow these steps to fix the problem:
1.) Are you sure you used the right command line?
    Click here to double-check:
    https://github.com/Sable/soot/wiki/Options-and-JavaDoc

2.) Not sure whether it's a bug? Feel free to discuss
    the issue on the Soot mailing list:
    https://github.com/Sable/soot/wiki/Getting-help

3.) Sure it's a bug? Click this link to report it.
    https://github.com/Sable/soot/issues/new?title=java.lang.RuntimeException+when+...&body=Steps+to+reproduce%3A%0A1.%29+...%0A%0AFiles+used+to+reproduce%3A+%0A...%0A%0ASoot+version%3A+%3Cpre%3Etrunk%3C%2Fpre%3E%0A%0ACommand+line%3A%0A%3Cpre%3E-main-class+org.apache.ibatis.RootDriver+-process-dir+%2Fhome%2Fdaveroar%2FGraduation_Studies%2FThesisWork%2FJRefactoring%2FMockAbstraction%2FBenchmarks%2Fmybatis-3-mybatis-3.5.6%2Ftarget%2Fclasses+-process-dir+%2Fhome%2Fdaveroar%2FGraduation_Studies%2FThesisWork%2FJRefactoring%2FMockAbstraction%2FBenchmarks%2Fmybatis-3-mybatis-3.5.6%2Ftarget%2Ftest-classes%3C%2Fpre%3E%0A%0AMax+Memory%3A%0A%3Cpre%3E3566MB%3C%2Fpre%3E%0A%0AStack+trace%3A%0A%3Cpre%3Ejava.lang.RuntimeException%3A+Failed+to+convert+%26%2360%3Borg.mockito.plugins.MemberAccessor%3A+java.lang.Object+newInstance%28java.lang.reflect.Constructor%2Corg.mockito.plugins.MemberAccessor%24OnConstruction%2Cjava.lang.Object%5B%5D%29%26%2362%3B%0A%09at+soot.asm.AsmMethodSource.getBody%28AsmMethodSource.java%3A2040%29%0A%09at+soot.SootMethod.retrieveActiveBody%28SootMethod.java%3A402%29%0A%09at+soot.PackManager%241.run%28PackManager.java%3A1279%29%0A%09at+java.util.concurrent.ThreadPoolExecutor.runWorker%28ThreadPoolExecutor.java%3A1149%29%0A%09at+java.util.concurrent.ThreadPoolExecutor%24Worker.run%28ThreadPoolExecutor.java%3A624%29%0A%09at+java.lang.Thread.run%28Thread.java%3A748%29%0ACaused+by%3A+java.lang.RuntimeException%3A+Trying+to+create+virtual+invoke+expression+for+interface+type+%28org.mockito.plugins.MemberAccessor+in+file+null%29.+Use+JInterfaceInvokeExpr+instead%21%0A%09at+soot.jimple.internal.JVirtualInvokeExpr.%26%2360%3Binit%26%2362%3B%28JVirtualInvokeExpr.java%3A49%29%0A%09at+soot.jimple.Jimple.newVirtualInvokeExpr%28Jimple.java%3A469%29%0A%09at+soot.LambdaMetaFactory%24ThunkMethodSource._invokeImplMethod%28LambdaMetaFactory.java%3A699%29%0A%09at+soot.LambdaMetaFactory%24ThunkMethodSource.invokeImplMethod%28LambdaMetaFactory.java%3A646%29%0A%09at+soot.LambdaMetaFactory%24ThunkMethodSource.getInvokeBody%28LambdaMetaFactory.java%3A483%29%0A%09at+soot.LambdaMetaFactory%24ThunkMethodSource.getBody%28LambdaMetaFactory.java%3A334%29%0A%09at+soot.SootMethod.retrieveActiveBody%28SootMethod.java%3A402%29%0A%09at+soot.LambdaMetaFactory.makeLambdaHelper%28LambdaMetaFactory.java%3A239%29%0A%09at+soot.asm.AsmMethodSource.convertInvokeDynamicInsn%28AsmMethodSource.java%3A1420%29%0A%09at+soot.asm.AsmMethodSource.convert%28AsmMethodSource.java%3A1791%29%0A%09at+soot.asm.AsmMethodSource.getBody%28AsmMethodSource.java%3A2038%29%0A%09...+5+more%0A%3C%2Fpre%3E
    Please be as precise as possible when giving us
    information on how to reproduce the problem. Thanks!
