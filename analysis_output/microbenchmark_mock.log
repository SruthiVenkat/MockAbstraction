 ====================================== 
** CLASS ca.liang.PayRollArrayNoMockTest
Number of Methods with May Mock in class: 1
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 0

 ====================================== 
** CLASS ca.liang.PayRollArrayMockTest
Number of Methods with May Mock in class: 6
Number of Methods with ArrayMock in class: 5
Number of Methods with Collection in class: 0

 ====================================== 
** CLASS ca.liang.PayRollMultipleEmployee2Test
Number of Methods with May Mock in class: 2
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 2

 ====================================== 
** CLASS ca.liang.PayRollMultipleEmployeeTest
Number of Methods with May Mock in class: 3
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 3

 ====================================== 
** CLASS ca.liang.PayRollMockTest
Number of Methods with May Mock in class: 12
Number of Methods with ArrayMock in class: 1
Number of Methods with Collection in class: 6

 ====================================== 
** CLASS ca.liang.DirtyTest
Number of Methods with May Mock in class: 1
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 0

 ====================================== 
** CLASS ca.liang.PayRollAnnotationMockTest
Number of Methods with May Mock in class: 4
Number of Methods with ArrayMock in class: 1
Number of Methods with Collection in class: 0

 ====================================== 
Benchmark microbenchmark Mock Stats
Total Number of Test/Before/After Methods: 36
Total Number of Test/Before/After Methods with May Mock: 27
Total Number of Test/Before/After Methods with ArrayMock in class: 6
Total Number of Test/Before/After Methods with Collection in class: 11
Total Number of Helper Methods: 17
Total Number of Helper Methods with May Mock: 2
Total Number of Helper Methods with ArrayMock in class: 1
Total Number of Helper Methods with Collection in class: 0

 ====================================== 
 INVOCATION STATISTICS 


** CLASS ca.liang.PayRollArrayNoMockTest


** CLASS ca.liang.PayRollArrayMockTest



========== method  testSingleEmployeeLocalArrayMock ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: virtualinvoke r4.<ca.liang.Employee: java.lang.String getName()>()

	InvokeExpr: virtualinvoke r5.<ca.liang.Employee: java.lang.String getName()>()



========== method  testAllEmployeesArePaidArrayIntra ========: 

	Total invocations on Mocks 6 : 

	InvokeExpr: virtualinvoke r4.<ca.liang.EmployeeDB: java.util.List getAllEmployees()>()

	InvokeExpr: virtualinvoke $r20.<ca.liang.BankService: void makePayment(java.lang.String,int)>($r22, $i0)

	InvokeExpr: virtualinvoke $r25.<ca.liang.Employee: java.lang.String getBankId()>()

	InvokeExpr: virtualinvoke $r29.<ca.liang.Employee: java.lang.String getBankId()>()

	InvokeExpr: virtualinvoke $r33.<ca.liang.Employee: int getSalary()>()

	InvokeExpr: virtualinvoke $r37.<ca.liang.Employee: int getSalary()>()



========== method  testAllEmployeesArePaidArrayInter ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: virtualinvoke $r4.<ca.liang.EmployeeDB: java.util.List getAllEmployees()>()

	InvokeExpr: virtualinvoke $r15.<ca.liang.BankService: void makePayment(java.lang.String,int)>($r17, $i0)


** CLASS ca.liang.PayRollMultipleEmployee2Test



========== method  testAllEmployeesArePaid ========: 

	Total invocations on Mocks 5 : 

	InvokeExpr: virtualinvoke $r6.<ca.liang.BankService: void makePayment(java.lang.String,int)>($r8, $i0)

	InvokeExpr: virtualinvoke $r13.<ca.liang.Employee: java.lang.String getBankId()>()

	InvokeExpr: virtualinvoke $r19.<ca.liang.Employee: java.lang.String getBankId()>()

	InvokeExpr: virtualinvoke $r25.<ca.liang.Employee: int getSalary()>()

	InvokeExpr: virtualinvoke $r31.<ca.liang.Employee: int getSalary()>()


** CLASS ca.liang.PayRollMultipleEmployeeTest



========== method  testAllEmployeesArePaid1 ========: 

	Total invocations on Mocks 5 : 

	InvokeExpr: virtualinvoke $r6.<ca.liang.BankService: void makePayment(java.lang.String,int)>($r8, $i0)

	InvokeExpr: virtualinvoke $r13.<ca.liang.Employee: java.lang.String getBankId()>()

	InvokeExpr: virtualinvoke $r19.<ca.liang.Employee: java.lang.String getBankId()>()

	InvokeExpr: virtualinvoke $r25.<ca.liang.Employee: int getSalary()>()

	InvokeExpr: virtualinvoke $r31.<ca.liang.Employee: int getSalary()>()



========== method  testAllEmployeesArePaid2 ========: 

	Total invocations on Mocks 6 : 

	InvokeExpr: virtualinvoke $r9.<ca.liang.EmployeeDB: java.util.List getAllEmployees()>()

	InvokeExpr: virtualinvoke $r20.<ca.liang.BankService: void makePayment(java.lang.String,int)>($r22, $i0)

	InvokeExpr: virtualinvoke $r27.<ca.liang.Employee: java.lang.String getBankId()>()

	InvokeExpr: virtualinvoke $r33.<ca.liang.Employee: java.lang.String getBankId()>()

	InvokeExpr: virtualinvoke $r39.<ca.liang.Employee: int getSalary()>()

	InvokeExpr: virtualinvoke $r45.<ca.liang.Employee: int getSalary()>()


** CLASS ca.liang.PayRollMockTest



========== method  testNoEmployeesIntra ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke r2.<ca.liang.EmployeeDB: java.util.List getAllEmployees()>()



========== method  testAddAll ========: 

	Total invocations on Mocks 4 : 

	InvokeExpr: virtualinvoke r3.<ca.liang.Employee: java.lang.String getName()>()

	InvokeExpr: virtualinvoke r3.<ca.liang.Employee: java.lang.String getName()>()

	InvokeExpr: virtualinvoke r4.<ca.liang.Employee: java.lang.String getName()>()

	InvokeExpr: virtualinvoke r5.<ca.liang.Employee: java.lang.String getName()>()



========== method  testIteration ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: virtualinvoke r2.<ca.liang.Employee: java.lang.String getName()>()

	InvokeExpr: virtualinvoke r2.<ca.liang.Employee: java.lang.String getName()>()



========== method  testVector ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: virtualinvoke r2.<ca.liang.Employee: java.lang.String getName()>()

	InvokeExpr: virtualinvoke r2.<ca.liang.Employee: java.lang.String getName()>()



========== method  testVector2 ========: 

	Total invocations on Mocks 4 : 

	InvokeExpr: virtualinvoke r1.<ca.liang.Employee: java.lang.String getName()>()

	InvokeExpr: virtualinvoke r22.<ca.liang.Employee: java.lang.String getName()>()

	InvokeExpr: virtualinvoke r5.<ca.liang.Employee: java.lang.String getName()>()

	InvokeExpr: virtualinvoke r6.<ca.liang.Employee: java.lang.String getName()>()



========== method  testVectorToArray ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke r1.<ca.liang.Employee: java.lang.String getName()>()



========== method  testArrayToVector ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke r1.<ca.liang.Employee: java.lang.String getName()>()



========== method  testEmployeeIsPaid ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $r7.<ca.liang.BankService: void makePayment(java.lang.String,int)>(r1, s0)



========== method  testEmployeeIsPaid_singleVerify ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $r6.<ca.liang.BankService: void makePayment(java.lang.String,int)>(r1, s0)



========== method  testInteractionOrder ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: virtualinvoke $r10.<ca.liang.EmployeeDB: java.util.List getAllEmployees()>()

	InvokeExpr: virtualinvoke $r14.<ca.liang.BankService: void makePayment(java.lang.String,int)>(r1, s0)



========== method  createMockEmployee ========: 

	Total invocations on Mocks 3 : 

	InvokeExpr: virtualinvoke r1.<ca.liang.Employee: java.lang.String getName()>()

	InvokeExpr: virtualinvoke r1.<ca.liang.Employee: java.lang.String getBankId()>()

	InvokeExpr: virtualinvoke r1.<ca.liang.Employee: int getSalary()>()


** CLASS ca.liang.DirtyTest


** CLASS ca.liang.PayRollAnnotationMockTest



========== method  init ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $r4.<ca.liang.EmployeeDB: java.util.List getAllEmployees()>()



========== method  testEmployeeIsPaid ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $r7.<ca.liang.BankService: void makePayment(java.lang.String,int)>("ID0", 1000)



========== method  testBankService ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $r1.<ca.liang.BankService: void makePayment(java.lang.String,int)>("ID0", 1000)

Benchmark Overall Stats 
Total Invocations: 282
Invocations On Mocks: 51

