 ====================================== 
** CLASS ca.liang.PayRollArrayNoMockTest
Number of Methods with May Mock in class: 1
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 0

 ====================================== 
** CLASS ca.liang.PayRollArrayMockTest
Number of Methods with May Mock in class: 5
Number of Methods with ArrayMock in class: 4
Number of Methods with Collection in class: 0

 ====================================== 
** CLASS ca.liang.PayRollMultipleEmployee2Test
Number of Methods with May Mock in class: 2
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 1

 ====================================== 
** CLASS ca.liang.PayRollMultipleEmployeeTest
Number of Methods with May Mock in class: 3
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 2

 ====================================== 
** CLASS ca.liang.PayRollMockTest
Number of Methods with May Mock in class: 4
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 0

 ====================================== 
** CLASS ca.liang.DirtyTest
Number of Methods with May Mock in class: 1
Number of Methods with ArrayMock in class: 0
Number of Methods with Collection in class: 0

 ====================================== 
** CLASS ca.liang.PayRollAnnotationMockTest
Number of Methods with May Mock in class: 4
Number of Methods with ArrayMock in class: 1
Number of Methods with Collection in class: 0

 ====================================== 
Benchmark microbenchmark Mock Stats
Total Number of Test/Before/After Methods: 29
Total Number of Test/Before/After Methods with May Mock: 20
Total Number of Test/Before/After Methods with ArrayMock in class: 5
Total Number of Test/Before/After Methods with Collection in class: 3

 ====================================== 
 INVOCATION STATISTICS 


** CLASS ca.liang.BankService


** CLASS ca.liang.PayRoll


** CLASS ca.liang.Employee


** CLASS ca.liang.EmployeeDB


** CLASS ca.liang.PayRollArrayNoMockTest


** CLASS ca.liang.PayRollArrayMockTest



========== method  testSingleEmployeeLocalArrayMock ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: virtualinvoke e.<ca.liang.Employee: java.lang.String getName()>()

	InvokeExpr: virtualinvoke ee.<ca.liang.Employee: java.lang.String getName()>()



========== method  testAllEmployeesArePaidArrayIntra ========: 

	Total invocations on Mocks 6 : 

	InvokeExpr: virtualinvoke employeeDB_intra.<ca.liang.EmployeeDB: java.util.List getAllEmployees()>()

	InvokeExpr: virtualinvoke $stack22.<ca.liang.BankService: void makePayment(java.lang.String,int)>($stack24, $stack27)

	InvokeExpr: virtualinvoke $stack28.<ca.liang.Employee: java.lang.String getBankId()>()

	InvokeExpr: virtualinvoke $stack32.<ca.liang.Employee: java.lang.String getBankId()>()

	InvokeExpr: virtualinvoke $stack36.<ca.liang.Employee: int getSalary()>()

	InvokeExpr: virtualinvoke $stack44.<ca.liang.Employee: int getSalary()>()



========== method  testAllEmployeesArePaidArray ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $stack18.<ca.liang.BankService: void makePayment(java.lang.String,int)>($stack20, $stack23)


** CLASS ca.liang.PayRollMultipleEmployee2Test



========== method  testAllEmployeesArePaid ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $stack8.<ca.liang.BankService: void makePayment(java.lang.String,int)>($stack10, $stack13)


** CLASS ca.liang.PayRollMultipleEmployeeTest



========== method  testAllEmployeesArePaid1 ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $stack8.<ca.liang.BankService: void makePayment(java.lang.String,int)>($stack10, $stack13)



========== method  testAllEmployeesArePaid2 ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $stack24.<ca.liang.BankService: void makePayment(java.lang.String,int)>($stack26, $stack29)


** CLASS ca.liang.PayRollMockTest



========== method  testNoEmployeesIntra ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke employeeDB_intra.<ca.liang.EmployeeDB: java.util.List getAllEmployees()>()



========== method  testEmployeeIsPaid ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $stack9.<ca.liang.BankService: void makePayment(java.lang.String,int)>(bankId, salary)



========== method  testInteractionOrder ========: 

	Total invocations on Mocks 2 : 

	InvokeExpr: virtualinvoke $stack13.<ca.liang.EmployeeDB: java.util.List getAllEmployees()>()

	InvokeExpr: virtualinvoke $stack17.<ca.liang.BankService: void makePayment(java.lang.String,int)>(bankId, salary)


** CLASS ca.liang.DirtyTest


** CLASS ca.liang.RootDriver


** CLASS ca.liang.PayRollAnnotationMockTest



========== method  init ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $stack5.<ca.liang.EmployeeDB: java.util.List getAllEmployees()>()



========== method  testEmployeeIsPaid ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $stack7.<ca.liang.BankService: void makePayment(java.lang.String,int)>("ID0", 1000)



========== method  testBankService ========: 

	Total invocations on Mocks 1 : 

	InvokeExpr: virtualinvoke $stack1.<ca.liang.BankService: void makePayment(java.lang.String,int)>("ID0", 1000)

Benchmark Overall Stats 
Total Invocations: 196
Invocations On Mocks: 19

